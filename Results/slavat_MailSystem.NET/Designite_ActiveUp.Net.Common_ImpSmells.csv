Implementation smell,Namespace,Class,File,Method,Description
Long Method,ActiveUp.Net.Mail,MimeTypesHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MimeTypesHelper.cs,GetMimeqType,The method has 246 lines of code.
Long Method,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,ProcessXmlTemplate,The method has 272 lines of code.
Complex Method,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,Cyclomatic complexity of the method is 8
Complex Method,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,Cyclomatic complexity of the method is 9
Complex Method,ActiveUp.Net.Mail,Condition,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Condition.cs,Validate,Cyclomatic complexity of the method is 34
Complex Method,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,Cyclomatic complexity of the method is 8
Complex Method,ActiveUp.Net.Mail,Header,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Header.cs,ToHeaderString,Cyclomatic complexity of the method is 15
Complex Method,ActiveUp.Net.Mail,HeaderCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\HeaderCollection.cs,GetBindableTable,Cyclomatic complexity of the method is 19
Complex Method,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GetBounceStatus,Cyclomatic complexity of the method is 14
Complex Method,ActiveUp.Net.Mail,MessageCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MessageCollection.cs,GetBindableTable,Cyclomatic complexity of the method is 20
Complex Method,ActiveUp.Net.Mail,MimeTypesHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MimeTypesHelper.cs,GetMimeqType,Cyclomatic complexity of the method is 98
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,Cyclomatic complexity of the method is 13
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,Cyclomatic complexity of the method is 13
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,DispatchPart,Cyclomatic complexity of the method is 10
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMimePart,Cyclomatic complexity of the method is 10
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseHeader,Cyclomatic complexity of the method is 12
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMessage,Cyclomatic complexity of the method is 16
Complex Method,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,Cyclomatic complexity of the method is 8
Complex Method,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,ProcessXmlTemplate,Cyclomatic complexity of the method is 74
Complex Method,ActiveUp.Net.Security,PublicKeyRecord,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.PublicKeyRecord.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,ActiveUp.Net.Security,SendingDomainPolicy,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.SendingDomainPolicy.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,Parse,Cyclomatic complexity of the method is 13
Long Parameter List,ActiveUp.Net.Mail,BayesianFilter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\BayesianFilter.cs,AnalyzeMessage,The method has 5 parameters. Parameters: subject' body' spamWordsFilename' hamWordsFilename' ignoreWordsFilename
Long Parameter List,ActiveUp.Net.Mail,Condition,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Condition.cs,Condition,The method has 5 parameters. Parameters: regionid' field' aValue' aOperator' casesensitive
Long Parameter List,ActiveUp.Net.Mail,ConditionalCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ConditionalCollection.cs,Add,The method has 5 parameters. Parameters: regionid' field' aValue' aOperator' casesensitive
Long Parameter List,ActiveUp.Net.Mail,FieldFormat,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\FieldFormat.cs,FieldFormat,The method has 5 parameters. Parameters: name' format' paddingDir' totalWidth' paddingChar
Long Parameter List,ActiveUp.Net.Mail,FieldFormatCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\FieldFormatCollection.cs,Add,The method has 5 parameters. Parameters: name' format' paddingDir' totalWidth' paddingChar
Long Parameter List,ActiveUp.Net.Mail,Server,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Server.cs,Server,The method has 6 parameters. Parameters: host' port' username' password' RequiresAuthentication' EncType
Long Parameter List,ActiveUp.Net.Mail,TraceInfo,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TraceInfo.cs,TraceInfo,The method has 7 parameters. Parameters: from' date' by' via' with' ffor' id
Long Parameter List,ActiveUp.Net.Mail,TraceInfo,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TraceInfo.cs,TraceInfo,The method has 6 parameters. Parameters: from' date' by' via' with' ffor
Long Parameter List,ActiveUp.Net.Mail,TraceInfo,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TraceInfo.cs,TraceInfo,The method has 5 parameters. Parameters: from' date' by' via' with
Long Parameter List,ActiveUp.Net.Mail,TraceInfo,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TraceInfo.cs,Initialize,The method has 7 parameters. Parameters: from' date' by' via' with' ffor' id
Long Parameter List,ActiveUp.Net.Security,SslHandShake,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\SslHandShake.cs,SslHandShake,The method has 6 parameters. Parameters: hostName' sslProtocol' serverCallback' clientCallback' clientCertificates' checkRevocation
Long Parameter List,ActiveUp.Net.Security,SslHandShake,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\SslHandShake.cs,SslHandShake,The method has 5 parameters. Parameters: hostName' sslProtocol' serverCallback' clientCallback' clientCertificates
Long Statement,ActiveUp.Net.Mail,AttachmentCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\AttachmentCollection.cs,StoreToFolder,The length of the statement  "                //mimePart.StoreToFile(path.TrimEnd('\\') + "\\" + (!string.IsNullOrEmpty(mimePart.Filename) ? mimePart.Filename : mimePart.ContentName)); " is 138.
Long Statement,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetUniqueString,The length of the statement  "			return System.Diagnostics.Process.GetCurrentProcess().Id.ToString()+System.DateTime.Now.ToString("yyMMddhhmmss")+System.DateTime.Now.Millisecond.ToString()+(new Random().GetHashCode()); " is 185.
Long Statement,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The length of the statement  "                    //if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d)) " is 238.
Long Statement,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,RFC2047Decode,The length of the statement  "				string[] encodeds = System.Text.RegularExpressions.Regex.Split(input'System.Text.RegularExpressions.Regex.Escape("=?")); " is 120.
Long Statement,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,RFC2047Decode,The length of the statement  "                        decoded = decoded.Replace("=?" + encoded + "?="' Codec.FromQuotedPrintable(GetEncoding(parts[0]).GetString(data'0'data.Length)' parts[0])); " is 139.
Long Statement,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromQuotedPrintable,The length of the statement  "                                arr.Add(System.Convert.ToByte(System.Int32.Parse(String.Concat((char)input[i + 1]' (char)input[i + 2])' System.Globalization.NumberStyles.HexNumber))); " is 151.
Long Statement,ActiveUp.Net.Mail,ConditionalCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ConditionalCollection.cs,Validate,The length of the statement  "							Validate(Convert.ToString(DataBinder.Eval(items.Current' "Key"))' Convert.ToString(DataBinder.Eval(items.Current' "Value"))); " is 125.
Long Statement,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,MD5Digest,The length of the statement  "			System.Security.Cryptography.MD5CryptoServiceProvider md5 = new System.Security.Cryptography.MD5CryptoServiceProvider(); " is 120.
Long Statement,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The length of the statement  "			System.Security.Cryptography.MD5CryptoServiceProvider md5 = new System.Security.Cryptography.MD5CryptoServiceProvider(); " is 120.
Long Statement,ActiveUp.Net.Mail,CtchClient,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\CtchClient.cs,QueryServer,The length of the statement  "            string content = string.Format("X-CTCH-PVer: {0}\r\nX-CTCH-MailFrom: {1}\r\nX-CTCH-SenderIP: {2}\r\n"' version' message.Sender.Email' message.SenderIP); " is 152.
Long Statement,ActiveUp.Net.Mail,CtchClient,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\CtchClient.cs,QueryServer,The length of the statement  "            string request = string.Format("POST /ctasd/{0} HTTP/1.0\r\nContent-Length: {1}\r\n\r\n"' (reference ? "ClassifyMessage_File" : "ClassifyMessage_Inline")' content.Length) " is 170.
Long Statement,ActiveUp.Net.Mail,Header,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Header.cs,ToHeaderString,The length of the statement  "            this.AddHeaderField("X-Mailer"' "ActiveUp.MailSystem " + v.Major + "." + v.Minor + "." + v.Build + " www.activeup.com"); " is 120.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GetEncodedMimePart,The length of the statement  "                if (part.ContentTransferEncoding == ContentTransferEncoding.Base64) sb.Append("\r\n\r\n" + System.Text.RegularExpressions.Regex.Replace(System.Convert.ToBase64String(part.BinaryContent' 0' part.BinaryContent.Length)' "(?<found>[^\n]{100})"' "${found}\n")); " is 256.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GetEncodedMimePart,The length of the statement  "                else if (part.ContentTransferEncoding == ContentTransferEncoding.QuotedPrintable) sb.Append("\r\n\r\n" + Codec.ToQuotedPrintable(System.Text.Encoding.ASCII.GetString(part.BinaryContent' 0' part.BinaryContent.Length)' part.Charset)); " is 232.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GetEncodedMimePart,The length of the statement  "                else if (part.ContentTransferEncoding == ContentTransferEncoding.SevenBits) sb.Append("\r\n\r\n" + System.Text.Encoding.UTF7.GetString(part.BinaryContent' 0' part.BinaryContent.Length)); " is 186.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GetEncodedMimePart,The length of the statement  "                else if (part.ContentTransferEncoding == ContentTransferEncoding.EightBits) sb.Append("\r\n\r\n" + System.Text.Encoding.UTF8.GetString(part.BinaryContent' 0' part.BinaryContent.Length)); " is 186.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,Clone,The length of the statement  "            System.Runtime.Serialization.Formatters.Binary.BinaryFormatter binFormatter = new System.Runtime.Serialization.Formatters.Binary.BinaryFormatter(); " is 147.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,SmimeDevelopeAndDecrypt,The length of the statement  "            if (!this.IsSmimeEncrypted) throw new InvalidOperationException("This message doesn't seem to be encrypted' or the encryption method is unknown."); " is 147.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,SmimeDevelopeAndExposeSignature,The length of the statement  "            if (!this.HasSmimeSignature) throw new InvalidOperationException("This message doesn't seem to be signed' or the signing method is unknown."); " is 142.
Long Statement,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GenerateConfirmReadMessage,The length of the statement  "was read on {4} {5}."' this.To[0].Email' this.Subject' dateReceived.ToShortDateString()' dateReceived.ToShortTimeString()' " is 122.
Long Statement,ActiveUp.Net.Mail,MimePart,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MimePart.cs,StoreToFile,The length of the statement  "            System.IO.FileStream fs = new System.IO.FileStream(destinationPath' System.IO.FileMode.OpenOrCreate' System.IO.FileAccess.Write); " is 129.
Long Statement,ActiveUp.Net.Mail,MimePart,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MimePart.cs,ToMimeString,The length of the statement  "                if (this.ContentType.MimeType.ToLower().IndexOf("text/") != -1) content = Codec.ToQuotedPrintable(this.TextContent' (this.Charset != null) ? this.Charset : "us-ascii"); " is 168.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetContentType,The length of the statement  "                field.Parameters.Add(FormatFieldName(parammatch.Value.Substring(0' parammatch.Value.IndexOf('='))).ToLower()' parammatch.Value.Substring(parammatch.Value.IndexOf('=') + 1).Replace("\""' "").Trim('\r'' '\n')); " is 208.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetContentDisposition,The length of the statement  "            System.Text.RegularExpressions.Match parammatch = System.Text.RegularExpressions.Regex.Match(input.Replace("\t"' "")' @"(?<=;[ \t]?)[^;]*=[^;]*(?=(;|\Z))"); " is 156.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetContentDisposition,The length of the statement  "            for (; parammatch.Success; parammatch = parammatch.NextMatch()) field.Parameters.Add(FormatFieldName(parammatch.Value.Substring(0' parammatch.Value.IndexOf('=')))' parammatch.Value.Substring(parammatch.Value.IndexOf('=') + 1).Replace("\""' "").Trim('\r'' '\n')); " is 262.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,DispatchPart,The length of the statement  "                // We know the highest-level parts will be set' because the parser first goes to the deepest level and returns top-level parts last. " is 132.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,DispatchPart,The length of the statement  "                if (part.ContentType.Type.Equals("text") && !part.ContentDisposition.Disposition.Equals("attachment") && !string.IsNullOrWhiteSpace(part.TextContent)) " is 150.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMimePart,The length of the statement  "                        part.HeaderFields.Add(FormatFieldName(m.Value.Substring(0' m.Value.IndexOf(':')))' Codec.RFC2047Decode(m.Value.Substring(m.Value.IndexOf(':') + 1).Trim(' '' '\r'' '\n'))); " is 171.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMimePart,The length of the statement  "                        part.HeaderFieldNames.Add(FormatFieldName(m.Value.Substring(0' m.Value.IndexOf(':')))' Codec.RFC2047Decode(m.Value.Substring(0' m.Value.IndexOf(':')).Trim(' '' '\r'' '\n'))); " is 174.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseHeader,The length of the statement  "            string hdr = System.Text.Encoding.GetEncoding("iso-8859-1").GetString(header.OriginalData'0'header.OriginalData.Length); " is 120.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseHeader,The length of the statement  "            System.Text.RegularExpressions.Match m = System.Text.RegularExpressions.Regex.Match(hdr' @"(?<=((\r?\n)|\n)|\A)\S+:(.|(\r?\n[\t ]))+(?=((\r?\n)\S)|\Z)"); " is 153.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMessage,The length of the statement  "                    else if (name.Equals("content-disposition")) message.ContentDisposition = Parser.GetContentDisposition(key + ": " + value); " is 123.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMessage,The length of the statement  "                    else if (name.Equals("domainkey-signature")) message.Signatures.DomainKeys = Signature.Parse(key + ": " + value' message); " is 122.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAddresses,The length of the statement  "                addresses.Add(Parser.ParseAddress((comma_separated[i].IndexOf("<") != -1 && comma_separated[i].IndexOf(":") != -1 && comma_separated[i].IndexOf(":") < comma_separated[i].IndexOf("<")) ? ((comma_separated[i].Split(':')[0].IndexOf("\"") == -1) ? comma_separated[i].Split(':')[1] : comma_separated[i]) : comma_separated[i])); " is 322.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTrace,The length of the statement  "            System.Text.RegularExpressions.Match m = System.Text.RegularExpressions.Regex.Match(input' @"from.+?(?=(from|by|via|with|for|id|;|\r?\n))"); " is 140.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The length of the statement  "                    if (itemlow.IndexOf(" from ") != -1) traceinfo.From = item.Substring(itemlow.IndexOf(" from ") + 6' item.IndexOf(" "' itemlow.IndexOf(" from ") + 6) - (itemlow.IndexOf(" from ") + 6)).TrimEnd(';'); " is 197.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The length of the statement  "                    if (itemlow.IndexOf(" by ") != -1) traceinfo.By = item.Substring(itemlow.IndexOf(" by ") + 4' item.IndexOf(" "' itemlow.IndexOf(" by ") + 4) - (itemlow.IndexOf(" by ") + 4)).TrimEnd(';'); " is 187.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The length of the statement  "                    if (itemlow.IndexOf(" for ") != -1) traceinfo.For = item.Substring(itemlow.IndexOf(" for ") + 5' item.IndexOf(" "' itemlow.IndexOf(" for ") + 5) - (itemlow.IndexOf(" for ") + 5)).TrimEnd(';'); " is 192.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The length of the statement  "                    if (itemlow.IndexOf(" id ") != -1) traceinfo.Id = item.Substring(itemlow.IndexOf(" id ") + 4' item.IndexOf(" "' itemlow.IndexOf(" id ") + 4) - (itemlow.IndexOf(" id ") + 4)).TrimEnd(';'); " is 187.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The length of the statement  "                    if (itemlow.IndexOf(" via ") != -1) traceinfo.Via = item.Substring(itemlow.IndexOf(" via ") + 5' item.IndexOf(" "' itemlow.IndexOf(" via ") + 5) - (itemlow.IndexOf(" via ") + 5)).TrimEnd(';'); " is 192.
Long Statement,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The length of the statement  "                    if (itemlow.IndexOf(" with ") != -1) traceinfo.With = item.Substring(itemlow.IndexOf(" with ") + 6' item.IndexOf(" "' itemlow.IndexOf(" with ") + 6) - (itemlow.IndexOf(" with ") + 6)).TrimEnd(';'); " is 197.
Long Statement,ActiveUp.Net.Mail,ProductHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ProductHelper.cs,GetTrialString,The length of the statement  "            string longText = string.Format(" (This email has been created using the trial version of ActiveUp.MailSystem. When you register the product' this message and all trial texts disappear. In addition of this text' the subject' the attachment filenames and the recipient/sender names are modified with a random trial string (ex:{0}). http://www.activeup.com) "' shortText); " is 370.
Long Statement,ActiveUp.Net.Mail,ProductHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ProductHelper.cs,GetTrialString,The length of the statement  "                    return stringToModify.Insert(randomPosition' string.Format("<table bgcolor=\"#F00000\" border=\"1\"><tr><td>{0}</td></tr></table>"' longText)); " is 143.
Long Statement,ActiveUp.Net.Mail,Region,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Region.cs,LoadFileContent,The length of the statement  "						System.Text.RegularExpressions.Regex rx = new System.Text.RegularExpressions.Regex(@"<body.*?>(.*?)</body>"' RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline); " is 185.
Long Statement,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,ValidateSyntax,The length of the statement  "			foreach(ActiveUp.Net.Mail.Address address in addresses) if(!ActiveUp.Net.Mail.Validator.ValidateSyntax(address.Email)) invalids.Add(address); " is 141.
Long Statement,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The length of the statement  "            //System.IO.FileStream fs = new System.IO.FileStream("c:\\Inetpub\\wwwroot\\brol.txt"' System.IO.FileMode.OpenOrCreate' System.IO.FileAccess.Write); " is 148.
Long Statement,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,SelectFieldsAndCanonicalize,The length of the statement  "                // There are specific headers. For each field name in the signature' loop through the lines and append found occurences. " is 120.
Long Statement,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,SelectFieldsAndCanonicalize,The length of the statement  "                        if (line.ToLower().StartsWith(str)) sb.Append(string.Concat(Canonicalizer.Canonicalize(line' signature.CanonicalizationAlgorithm)'Tokenizer.NewLine)); " is 150.
Long Statement,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,Verify,The length of the statement  "                sb.Append(string.Concat(Canonicalizer.Canonicalize(sr.ReadLine()' signature.CanonicalizationAlgorithm)'Tokenizer.NewLine)); " is 123.
Long Statement,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,Verify,The length of the statement  "            if (this._signedMessage == null) throw new NotSupportedException("The signature must me associated with a message in order to be verified"); " is 140.
Complex Conditional,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The conditional expression  "(decim < 33 || decim == 61 || decim > 126) && decim != 32"  is complex.
Empty Catch Block,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromQuotedPrintable,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,GetEncodedMimePart,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net.Mail,Message,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Message.cs,ToMimePart,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseMimePart,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net.Mail,TimedUdpClient,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TimedUdpClient.cs,StartReceive,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net.Mail,TimedUdpClient,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TimedUdpClient.cs,StartReceive,The method has an empty catch block.
Magic Number,ActiveUp.Net.Mail,BayesianFilter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\BayesianFilter.cs,AnalyzeMessage,The following statement contains a magic number: float s = 1f' x = .5f' n = SpamCount + HamCount;
Magic Number,ActiveUp.Net.Mail,BayesianFilter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\BayesianFilter.cs,AnalyzeMessage,The following statement contains a magic number: prediction <= .45
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: wrap == 72 || index + 73 - check >= body.Length
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: wrap == 72 || index + 73 - check >= body.Length
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: body[index + 73 - check] == 46
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: body[index + 73 - check] == 46
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: wrap == 0 && index + 73 - check < body.Length
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: sb.Append("=" + decim.ToString("X").PadLeft(2' '0'));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: (decim < 33 || decim == 61 || decim > 126) && decim != 32
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: (decim < 33 || decim == 61 || decim > 126) && decim != 32
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: (decim < 33 || decim == 61 || decim > 126) && decim != 32
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: (decim < 33 || decim == 61 || decim > 126) && decim != 32
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: wrap >= 72
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,RFC2047Decode,The following statement contains a magic number: byte[] data = System.Text.Encoding.ASCII.GetBytes(parts[2].Replace("²rep"' "="));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromQuotedPrintable,The following statement contains a magic number: arr.Add(System.Convert.ToByte(System.Int32.Parse(String.Concat((char)input[i + 1]' (char)input[i + 2])' System.Globalization.NumberStyles.HexNumber)));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromQuotedPrintable,The following statement contains a magic number: i += 3;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromQuotedPrintable,The following statement contains a magic number: i <= (input.Length) - 3
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,Wrap,The following statement contains a magic number: totalchars -= 3;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetCRCBase64,The following statement contains a magic number: crc ^= (((long)binput[i]) << 16);
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetCRCBase64,The following statement contains a magic number: j < 8
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte a = (byte)(crc >> 16);
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte b = (byte)((crc & 65280) >> 8);
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte b = (byte)((crc & 65280) >> 8);
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte c = (byte)(crc & 255);
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: int length = input.Length - (input.Length % 4);
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: i < length / 4
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: (input.Length % 4) == 3
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: (input.Length % 4) == 3
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: (input.Length % 4) == 2
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromRadix64,The following statement contains a magic number: (input.Length % 4) == 2
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32768) == 32768) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32768) == 32768) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16384) == 16384) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16384) == 16384) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8192) == 8192) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8192) == 8192) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4096) == 4096) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4096) == 4096) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2048) == 2048) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2048) == 2048) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 1024) == 1024) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 1024) == 1024) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 512) == 512) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 512) == 512) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 256) == 256) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 256) == 256) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: input[7].Equals('1')
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 2;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: input[6].Equals('1')
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 4;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: input[5].Equals('1')
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 8;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: input[4].Equals('1')
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 16;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: input[3].Equals('1')
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 32;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: input[2].Equals('1')
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 64;
Magic Number,ActiveUp.Net.Mail,Codec,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Codec.cs,FromBitString,The following statement contains a magic number: output += 128;
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToByteArray,The following statement contains a magic number: byte a = (byte)(input >> 24);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToByteArray,The following statement contains a magic number: byte b = (byte)((input & 16711680) >> 16);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToByteArray,The following statement contains a magic number: byte b = (byte)((input & 16711680) >> 16);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToByteArray,The following statement contains a magic number: byte c = (byte)((input & 65280) >> 8);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToByteArray,The following statement contains a magic number: byte c = (byte)((input & 65280) >> 8);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToByteArray,The following statement contains a magic number: byte d = (byte)(input & 255);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToShort,The following statement contains a magic number: short l = (short)((((short)input[0]) << 8) + (short)input[1]);
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.Mail,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Converter.cs,UnixTimeStampToDateTime,The following statement contains a magic number: return new DateTime(1970' 1' 1).AddSeconds(timeStamp);
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: key.Length>64
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: key = key.PadRight(64''\0');
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: i<64
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: byte[] bresult = new byte[bdata.Length+64];
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: i<64
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: bresult[i] = bdata[i-64];
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: i<64
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: byte[] bres = new byte[buf.Length+64];
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: i<64
Magic Number,ActiveUp.Net.Mail,Crypto,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Crypto.cs,HMACMD5Digest,The following statement contains a magic number: bres[i] = buf[i-64];
Magic Number,ActiveUp.Net.Mail,CtchClient,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\CtchClient.cs,QueryServer,The following statement contains a magic number: data = new Byte[256];
Magic Number,ActiveUp.Net.Mail,Logger,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Logger.cs,AddEntry,The following statement contains a magic number: logString.Append(now.Month.ToString().PadLeft(2' '0'));
Magic Number,ActiveUp.Net.Mail,Logger,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Logger.cs,AddEntry,The following statement contains a magic number: logString.Append(now.Day.ToString().PadLeft(2' '0'));
Magic Number,ActiveUp.Net.Mail,Logger,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Logger.cs,AddEntry,The following statement contains a magic number: logString.Append(now.Hour.ToString().PadLeft(2' '0'));
Magic Number,ActiveUp.Net.Mail,Logger,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Logger.cs,AddEntry,The following statement contains a magic number: logString.Append(now.Minute.ToString().PadLeft(2' '0'));
Magic Number,ActiveUp.Net.Mail,Logger,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Logger.cs,AddEntry,The following statement contains a magic number: logString.Append(now.Second.ToString().PadLeft(2' '0'));
Magic Number,ActiveUp.Net.Mail,Logger,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Logger.cs,LastEntries,The following statement contains a magic number: ArrayList entries = LastEntries(30);
Magic Number,ActiveUp.Net.Mail,MxRecord,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MxRecord.cs,MxRecord,The following statement contains a magic number: _preference = 10;
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,GetMonth,The following statement contains a magic number: switch (month)              {                  case "Jan": return 1;                  case "Feb": return 2;                  case "Mar": return 3;                  case "Apr": return 4;                  case "May": return 5;                  case "Jun": return 6;                  case "Jul": return 7;                  case "Aug": return 8;                  case "Sep": return 9;                  case "Oct": return 10;                  case "Nov": return 11;                  case "Dec": return 12;                  default: return -1;              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,InvGetMonth,The following statement contains a magic number: switch (month)              {                  case 1: return "Jan";                  case 2: return "Feb";                  case 3: return "Mar";                  case 4: return "Apr";                  case 5: return "May";                  case 6: return "Jun";                  case 7: return "Jul";                  case 8: return "Aug";                  case 9: return "Sep";                  case 10: return "Oct";                  case 11: return "Nov";                  case 12: return "Dec";                  default: return "???";              }
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,Fold,The following statement contains a magic number: templine.Length + separated[i].Length < 77
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: int year = System.Convert.ToInt32(parts[2]);
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: year += 1900;
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: year > 49
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: year < 100
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: string[] dateParts = parts[3].Split(':');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: second = System.Convert.ToInt32(dateParts[2]);
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: dateParts.Length > 2
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: int offset_hours = System.Convert.ToInt32(parts[4].Substring(0' 3));
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: int offset_hours = System.Convert.ToInt32(parts[4].Substring(0' 3));
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: int offset_minutes = System.Convert.ToInt32(parts[4].Substring(3' 2));
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: int offset_minutes = System.Convert.ToInt32(parts[4].Substring(3' 2));
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseAsUniversalDateTime,The following statement contains a magic number: int offset_minutes = System.Convert.ToInt32(parts[4].Substring(3' 2));
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.From = item.Substring(itemlow.IndexOf(" from ") + 6' item.IndexOf(" "' itemlow.IndexOf(" from ") + 6) - (itemlow.IndexOf(" from ") + 6)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.From = item.Substring(itemlow.IndexOf(" from ") + 6' item.IndexOf(" "' itemlow.IndexOf(" from ") + 6) - (itemlow.IndexOf(" from ") + 6)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.From = item.Substring(itemlow.IndexOf(" from ") + 6' item.IndexOf(" "' itemlow.IndexOf(" from ") + 6) - (itemlow.IndexOf(" from ") + 6)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.By = item.Substring(itemlow.IndexOf(" by ") + 4' item.IndexOf(" "' itemlow.IndexOf(" by ") + 4) - (itemlow.IndexOf(" by ") + 4)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.By = item.Substring(itemlow.IndexOf(" by ") + 4' item.IndexOf(" "' itemlow.IndexOf(" by ") + 4) - (itemlow.IndexOf(" by ") + 4)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.By = item.Substring(itemlow.IndexOf(" by ") + 4' item.IndexOf(" "' itemlow.IndexOf(" by ") + 4) - (itemlow.IndexOf(" by ") + 4)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.For = item.Substring(itemlow.IndexOf(" for ") + 5' item.IndexOf(" "' itemlow.IndexOf(" for ") + 5) - (itemlow.IndexOf(" for ") + 5)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.For = item.Substring(itemlow.IndexOf(" for ") + 5' item.IndexOf(" "' itemlow.IndexOf(" for ") + 5) - (itemlow.IndexOf(" for ") + 5)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.For = item.Substring(itemlow.IndexOf(" for ") + 5' item.IndexOf(" "' itemlow.IndexOf(" for ") + 5) - (itemlow.IndexOf(" for ") + 5)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.Id = item.Substring(itemlow.IndexOf(" id ") + 4' item.IndexOf(" "' itemlow.IndexOf(" id ") + 4) - (itemlow.IndexOf(" id ") + 4)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.Id = item.Substring(itemlow.IndexOf(" id ") + 4' item.IndexOf(" "' itemlow.IndexOf(" id ") + 4) - (itemlow.IndexOf(" id ") + 4)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.Id = item.Substring(itemlow.IndexOf(" id ") + 4' item.IndexOf(" "' itemlow.IndexOf(" id ") + 4) - (itemlow.IndexOf(" id ") + 4)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.Via = item.Substring(itemlow.IndexOf(" via ") + 5' item.IndexOf(" "' itemlow.IndexOf(" via ") + 5) - (itemlow.IndexOf(" via ") + 5)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.Via = item.Substring(itemlow.IndexOf(" via ") + 5' item.IndexOf(" "' itemlow.IndexOf(" via ") + 5) - (itemlow.IndexOf(" via ") + 5)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.Via = item.Substring(itemlow.IndexOf(" via ") + 5' item.IndexOf(" "' itemlow.IndexOf(" via ") + 5) - (itemlow.IndexOf(" via ") + 5)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.With = item.Substring(itemlow.IndexOf(" with ") + 6' item.IndexOf(" "' itemlow.IndexOf(" with ") + 6) - (itemlow.IndexOf(" with ") + 6)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.With = item.Substring(itemlow.IndexOf(" with ") + 6' item.IndexOf(" "' itemlow.IndexOf(" with ") + 6) - (itemlow.IndexOf(" with ") + 6)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Parser.cs,ParseTraces,The following statement contains a magic number: traceinfo.With = item.Substring(itemlow.IndexOf(" with ") + 6' item.IndexOf(" "' itemlow.IndexOf(" with ") + 6) - (itemlow.IndexOf(" with ") + 6)).TrimEnd(';');
Magic Number,ActiveUp.Net.Mail,ProductHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ProductHelper.cs,GetTrialString,The following statement contains a magic number: string shortText = GetRandomString(9 + random.Next(5));
Magic Number,ActiveUp.Net.Mail,ProductHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ProductHelper.cs,GetTrialString,The following statement contains a magic number: string shortText = GetRandomString(9 + random.Next(5));
Magic Number,ActiveUp.Net.Mail,ProductHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ProductHelper.cs,GetRandomString,The following statement contains a magic number: string pattern = (random.Next(2) == 0 ? "TRIAL" : "EVAL");
Magic Number,ActiveUp.Net.Mail,ProductHelper,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ProductHelper.cs,GetRandomString,The following statement contains a magic number: index < length - pattern.Length - 2
Magic Number,ActiveUp.Net.Mail,ServerCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\ServerCollection.cs,Add,The following statement contains a magic number: List.Add(new Server(host' 25));
Magic Number,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,LoadTemplate,The following statement contains a magic number: ActiveUp.Net.Mail.Logger.AddEntry("Loading template " + filename + "."' 2);
Magic Number,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,LoadTemplateFromString,The following statement contains a magic number: ActiveUp.Net.Mail.Logger.AddEntry("Loading template from string."' 2);
Magic Number,ActiveUp.Net.Mail,TraceInfo,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\TraceInfo.cs,ToString,The following statement contains a magic number: return source.Remove(0'source.Length - 3) + ";" + this.Date.ToString("r");
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetMxRecords,The following statement contains a magic number: return GetMxRecords(address' 5000);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetMxRecords,The following statement contains a magic number: return GetMxRecords(address' server' 53' timeout);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetMxRecords,The following statement contains a magic number: server.Length > 3
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: return GetTxtRecords(address' 5000);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: return GetTxtRecords(address' server' 53);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: server.Length > 3
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetMxRecords,The following statement contains a magic number: return GetMxRecords(address' dnsServers' 5000);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetMxRecords,The following statement contains a magic number: dnsServers.Add(ipAddress.ToString()' 53);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetMxRecords,The following statement contains a magic number: return GetMxRecords(address' host' port' 5000);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: byte[] label = new byte[address.Length + 2];
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: byte[] footer = { 0' 16' 0' 1 };
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: System.Net.IPEndPoint endPoint = new System.Net.IPEndPoint(System.Net.IPAddress.Parse(host)' 53);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: pos += 7;
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: byte[] data = new byte[response2.Length-pos-4];
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: Array.Copy(response2' pos + 4' data' 0' response2.Length - pos - 4);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetTxtRecords,The following statement contains a magic number: Array.Copy(response2' pos + 4' data' 0' response2.Length - pos - 4);
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetLabelsByPos,The following statement contains a magic number: newPointer = (buffer[currentPos]-192)*256 + buffer[currentPos+1];
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetLabelsByPos,The following statement contains a magic number: newPointer = (buffer[currentPos]-192)*256 + buffer[currentPos+1];
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetLabelsByPos,The following statement contains a magic number: buffer[currentPos] == 192
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetLabelsByPos,The following statement contains a magic number: currentPos += 2;
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetLabelsByPos,The following statement contains a magic number: (labelLength & 192) == 192
Magic Number,ActiveUp.Net.Mail,Validator,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Validator.cs,GetLabelsByPos,The following statement contains a magic number: (labelLength & 192) == 192
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,FillRSAPublicKeyParameters,The following statement contains a magic number: key[index] != 48
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,FillRSAPublicKeyParameters,The following statement contains a magic number: key[index] != 48
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,FillRSAPublicKeyParameters,The following statement contains a magic number: key[index] != 3
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,FillRSAPublicKeyParameters,The following statement contains a magic number: key[index] != 48
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,FillRSAPublicKeyParameters,The following statement contains a magic number: key[index] != 2
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,FillRSAPublicKeyParameters,The following statement contains a magic number: key[index] != 2
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,GetContentLength,The following statement contains a magic number: key[lengthStartIndex] == 128
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,GetContentLength,The following statement contains a magic number: int lengthBytes = key[lengthStartIndex] - 128;
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,GetContentLength,The following statement contains a magic number: length += key[lengthStartIndex] << (8 * (lengthBytes - 1));
Magic Number,ActiveUp.Net.Security,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\DomainKeys.Signature.cs,GetContentLength,The following statement contains a magic number: key[lengthStartIndex] > 128
Missing Default,ActiveUp.Net.Mail,Condition,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Condition.cs,Validate,The following switch statement is missing a default case: switch (this.Operator)  			{  				case OperatorType.GreaterThan:  						if (aValue == null) aValue = 0;  					if (IsNumeric((string)aValue) && IsNumeric(this.Value))   					{  						if (Convert.ToDouble(aValue) < Convert.ToDouble(this.Value))  							this.Match = true;  					}  					else  					{  						if (aValue.ToString().Length < this.Value.Length)  							this.Match = true;  					}  					break;  				case OperatorType.GreaterThanEqual:  						if (aValue == null) aValue = 0;  					if (IsNumeric((string)aValue) && IsNumeric(this.Value))   					{  						if (Convert.ToDouble(aValue) <= Convert.ToDouble(this.Value))  							this.Match = true;  					}  					else  					{  						if (aValue.ToString().Length <= this.Value.Length)  							this.Match = true;  					}  					break;  				case OperatorType.LessThan:  						if (aValue == null) aValue = 0;  					if (IsNumeric((string)aValue) && IsNumeric(this.Value))   					{  						if (Convert.ToDouble(aValue) > Convert.ToDouble(this.Value))  							this.Match = true;  					}  					else  					{  						if (aValue.ToString().Length > this.Value.Length)  							this.Match = true;  					}  					break;  				case OperatorType.LessThanEqual:  						if (aValue == null) aValue = 0;  					if (IsNumeric((string)aValue) && IsNumeric(this.Value))   					{  						if (Convert.ToDouble(aValue) >= Convert.ToDouble(this.Value))  							this.Match = true;  					}  					else  					{  						if (aValue.ToString().Length >= this.Value.Length)  							this.Match = true;  					}  					break;  				case OperatorType.Equal:  						if (aValue == null) aValue = "";  					if (this.CaseSensitive)   					{  						if (aValue.ToString() == this.Value)  							this.Match = true;  					}  					else  					{  						if (aValue.ToString().ToUpper() == this.Value.ToUpper())  							this.Match = true;  					}  					break;  				case OperatorType.NotEqual:  						if (aValue == null) aValue = "";  					if (this.CaseSensitive)   					{  						if (aValue.ToString() != this.Value)  							this.Match = true;  					}  					else  					{  						if (aValue.ToString().ToUpper() != this.Value.ToUpper())  							this.Match = true;  					}  					break;  				case OperatorType.Exists:  					this.Match = true;  					break;  				case OperatorType.NotExists:  					this.Match = false;  					break;  				}
Missing Default,ActiveUp.Net.Mail,HeaderCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\HeaderCollection.cs,GetBindableTable,The following switch statement is missing a default case: switch(dt.Columns[i].Caption)  					{  						case "From" : item[i] = header.From.Merged;  							break;  						case "Subject" : item[i] = header.Subject;  							break;  						case "Sender" : item[i] = (header.Sender.Email!="Undefined") ? header.Sender.Merged : header.From.Merged;  							break;  						case "ReplyTo" : item[i] = header.ReplyTo.Merged;  							break;  						case "To" : item[i] = header.To.Merged;  							break;  						case "Cc" : if(header.Cc!=null) item[i] = header.Cc.Merged;  							break;  						case "Date" : item[i] = (header.Date!=System.DateTime.MinValue) ? header.Date.ToString() : header.DateString;  							break;  						case "Priority" : item[i] = header.Priority.ToString();  							break;  					}
Missing Default,ActiveUp.Net.Mail,MessageCollection,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\MessageCollection.cs,GetBindableTable,The following switch statement is missing a default case: switch(dt.Columns[i].Caption)  					{  						case "Subject" : item[i] = msg.Subject;  							break;  						case "Sender" : item[i] = (msg.Sender.Email!="Undefined") ? msg.Sender.Merged : msg.From.Merged;  							break;  						case "ReplyTo" : item[i] = msg.ReplyTo.Merged;  							break;  						case "To" : item[i] = msg.To.Merged;  							break;  						case "Cc" : if(msg.Cc!=null) item[i] = msg.Cc.Merged;  							break;  						case "Attachments" : item[i] = msg.Attachments.Count.ToString();  							break;  						case "Date" : item[i] = (msg.Date!=System.DateTime.MinValue) ? msg.Date.ToString() : msg.DateString;  							break;  						case "Priority" : item[i] = msg.Priority.ToString();  							break;  					}
Missing Default,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,ProcessXmlTemplate,The following switch statement is missing a default case: switch (reader.NodeType)  				{  					case XmlNodeType.Element:  						element = reader.Name;  						ActiveUp.Net.Mail.Logger.AddEntry("New element found: " + element + "."' 0);    					switch (element.ToUpper())  					{  						case "MESSAGE":  						{  							if (reader.GetAttribute("PRIORITY") != null && reader.GetAttribute("PRIORITY") != string.Empty)  								this.Message.Priority = (MessagePriority)Enum.Parse(typeof(MessagePriority)' reader.GetAttribute("PRIORITY")' true);   							else if (reader.GetAttribute("priority") != null && reader.GetAttribute("priority") != string.Empty)  								this.Message.Priority = (MessagePriority)Enum.Parse(typeof(MessagePriority)' reader.GetAttribute("priority")' true);     						} break;    						case "FIELDFORMAT":  							if (reader.HasAttributes)  							{  								ActiveUp.Net.Mail.Logger.AddEntry("Element has attributes."' 0);  								FieldFormat fieldFormat = new FieldFormat();    								if (reader.GetAttribute("NAME") != null && reader.GetAttribute("NAME") != string.Empty)  								{  									fieldFormat.Name = reader.GetAttribute("NAME");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute NAME: " + fieldFormat.Name' 0);  								}    								else if (reader.GetAttribute("name") != null && reader.GetAttribute("name") != string.Empty)  								{  									fieldFormat.Name = reader.GetAttribute("name");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute name: " + fieldFormat.Name' 0);  								}    								if (reader.GetAttribute("FORMAT") != null && reader.GetAttribute("FORMAT") != string.Empty)  								{  									fieldFormat.Format = reader.GetAttribute("FORMAT");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute FORMAT: " + fieldFormat.Format' 0);  								}    								else if (reader.GetAttribute("format") != null && reader.GetAttribute("format") != string.Empty)  								{  									fieldFormat.Format = reader.GetAttribute("format");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute format: " + fieldFormat.Format' 0);  								}    								if (reader.GetAttribute("PADDINGDIR") != null && reader.GetAttribute("PADDINGDIR") != string.Empty)  								{  									if (reader.GetAttribute("PADDINGDIR").ToUpper() == "LEFT")  										fieldFormat.PaddingDir = PaddingDirection.Left;  									else  										fieldFormat.PaddingDir = PaddingDirection.Right;  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute PADDINGDIR: " + reader.GetAttribute("PADDINGDIR")' 0);  								}    								else if (reader.GetAttribute("paddingdir") != null && reader.GetAttribute("paddingdir") != string.Empty)  								{  									if (reader.GetAttribute("paddingdir").ToUpper() == "left")  										fieldFormat.PaddingDir = PaddingDirection.Left;  									else  										fieldFormat.PaddingDir = PaddingDirection.Right;  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute paddingdir: " + reader.GetAttribute("paddingdir")' 0);  								}    								if (reader.GetAttribute("TOTALWIDTH") != null && reader.GetAttribute("TOTALWIDTH") != string.Empty)  								{  									try  									{  										fieldFormat.TotalWidth = Convert.ToInt16(reader.GetAttribute("TOTALWIDTH"));  									}  									catch  									{  										throw new Exception("Specified Total Width is not a valid number.");  									}  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute TOTALWIDTH: " + fieldFormat.TotalWidth.ToString()' 0);  								}    								else if (reader.GetAttribute("totalwidth") != null && reader.GetAttribute("totalwidth") != string.Empty)  								{  									try  									{  										fieldFormat.TotalWidth = Convert.ToInt16(reader.GetAttribute("totalwidth"));  									}  									catch  									{  										throw new Exception("Specified Total Width is not a valid number.");  									}  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute totalwidth: " + fieldFormat.TotalWidth.ToString()' 0);  								}    								if (reader.GetAttribute("PADDINGCHAR") != null && reader.GetAttribute("PADDINGCHAR") != string.Empty)  								{  									fieldFormat.PaddingChar = Convert.ToChar(reader.GetAttribute("PADDINGCHAR").Substring(0' 1));  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute PADDINGCHAR: '" + fieldFormat.PaddingChar + "'"' 0);  								}    								else if (reader.GetAttribute("paddingchar") != null && reader.GetAttribute("paddingchar") != string.Empty)  								{  									fieldFormat.PaddingChar = Convert.ToChar(reader.GetAttribute("paddingchar").Substring(0' 1));  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute paddingchar: '" + fieldFormat.PaddingChar + "'"' 0);  								}    								this.FieldsFormats.Add(fieldFormat);  							}  								  							break;  						case "FROM":  						case "TO":  						case "CC":  						case "BCC":  							if (reader.HasAttributes)  							{  								ActiveUp.Net.Mail.Address address = new ActiveUp.Net.Mail.Address();  								if (reader.GetAttribute("NAME") != null && reader.GetAttribute("NAME") != string.Empty)  									address.Name = reader.GetAttribute("NAME");  								else if (reader.GetAttribute("name") != null && reader.GetAttribute("name") != string.Empty)  									address.Name = reader.GetAttribute("name");  								if (reader.GetAttribute("EMAIL") != null && reader.GetAttribute("EMAIL") != string.Empty)  									address.Email = reader.GetAttribute("EMAIL");  								else if (reader.GetAttribute("email") != null && reader.GetAttribute("email") != string.Empty)  									address.Email = reader.GetAttribute("email");  								if (element.ToUpper() == "FROM")  								{  									if (reader.GetAttribute("REPLYNAME") != null && reader.GetAttribute("REPLYNAME") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Name = reader.GetAttribute("REPLYNAME");  									}  									else if (reader.GetAttribute("replyname") != null && reader.GetAttribute("replyname") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Name = reader.GetAttribute("replyname");  									}    									if (reader.GetAttribute("REPLYEMAIL") != null && reader.GetAttribute("REPLYEMAIL") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Email = reader.GetAttribute("REPLYEMAIL");  									}  									else if (reader.GetAttribute("replyemail") != null && reader.GetAttribute("replyemail") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Email = reader.GetAttribute("replyemail");  									}    									if (reader.GetAttribute("RECEIPTEMAIL") != null && reader.GetAttribute("RECEIPTEMAIL") != string.Empty)  									{  										this.Message.ReturnReceipt.Email = reader.GetAttribute("RECEIPTEMAIL");  									}  									else if (reader.GetAttribute("receiptemail") != null && reader.GetAttribute("receiptemail") != string.Empty)  									{  										this.Message.ReturnReceipt.Email = reader.GetAttribute("receiptemail");  									}  								}    								switch (reader.Name.ToUpper())  								{  									case "FROM": /*this.Message.From.Add(address);*/this.Message.From = address; break;  									case "TO": this.Message.To.Add(address); break;  									case "CC": this.Message.Cc.Add(address); break;  									case "BCC": this.Message.Bcc.Add(address); break;  								}  							}  							break;  						case "LISTTEMPLATE":  						{  							ListTemplate template = new ListTemplate();   							string RegionID = string.Empty;  							string NullText = string.Empty;  							if (reader.GetAttribute("REGIONID") != null && reader.GetAttribute("REGIONID") != string.Empty)  								RegionID = reader.GetAttribute("REGIONID");  							else if (reader.GetAttribute("regionid") != null && reader.GetAttribute("regionid") != string.Empty)  								RegionID = reader.GetAttribute("regionid");    							if (reader.GetAttribute("NULLTEXT") != null && reader.GetAttribute("NULLTEXT") != string.Empty)  								NullText = reader.GetAttribute("NULLTEXT");  							else if (reader.GetAttribute("nulltext") != null && reader.GetAttribute("nulltext") != string.Empty)  								NullText = reader.GetAttribute("nulltext");    							if (reader.HasAttributes && reader.GetAttribute("NAME") != null && reader.GetAttribute("NAME") != string.Empty)  								template = new ListTemplate(reader.GetAttribute("NAME")' reader.ReadString());  							else if (reader.HasAttributes && reader.GetAttribute("name") != null && reader.GetAttribute("name") != string.Empty)  								template = new ListTemplate(reader.GetAttribute("name")' reader.ReadString());  							  							template.RegionID = RegionID;  							template.NullText = NullText;    							this.ListTemplates.Add(template);    						} break;    						case "SMTPSERVER":  						{  							Server server = new Server();     							if (reader.GetAttribute("SERVER") != null && reader.GetAttribute("SERVER") != string.Empty)  								server.Host = reader.GetAttribute("SERVER");  							else if (reader.GetAttribute("server") != null && reader.GetAttribute("server") != string.Empty)  								server.Host = reader.GetAttribute("server");    							if (reader.GetAttribute("PORT") != null && reader.GetAttribute("PORT") != string.Empty)  								server.Port = int.Parse(reader.GetAttribute("PORT"));  							else if (reader.GetAttribute("port") != null && reader.GetAttribute("port") != string.Empty)  								server.Port = int.Parse(reader.GetAttribute("port"));  	  							if (reader.GetAttribute("USERNAME") != null && reader.GetAttribute("USERNAME") != string.Empty)  								server.Username = reader.GetAttribute("USERNAME");  							else if (reader.GetAttribute("username") != null && reader.GetAttribute("username") != string.Empty)  								server.Username = reader.GetAttribute("username");    							if (reader.GetAttribute("PASSWORD") != null && reader.GetAttribute("PASSWORD") != string.Empty)  								server.Password = reader.GetAttribute("PASSWORD");  							else if (reader.GetAttribute("password") != null && reader.GetAttribute("password") != string.Empty)  								server.Password = reader.GetAttribute("password");	    							SmtpServers.Add(server);    						} break;    						case "CONDITION":  						{  							Condition condition = new Condition();     							if (reader.GetAttribute("REGIONID") != null && reader.GetAttribute("REGIONID") != string.Empty)  								condition.RegionID = reader.GetAttribute("REGIONID");  							else if (reader.GetAttribute("regionid") != null && reader.GetAttribute("regionid") != string.Empty)  								condition.RegionID = reader.GetAttribute("regionid");    							if (reader.GetAttribute("OPERATOR") != null && reader.GetAttribute("OPERATOR") != string.Empty)  								condition.Operator = (OperatorType)Enum.Parse(typeof(OperatorType)' reader.GetAttribute("OPERATOR")' true);   							else if (reader.GetAttribute("operator") != null && reader.GetAttribute("operator") != string.Empty)  								condition.Operator = (OperatorType)Enum.Parse(typeof(OperatorType)' reader.GetAttribute("operator")' true);     							if (reader.GetAttribute("NULLTEXT") != null && reader.GetAttribute("NULLTEXT") != string.Empty)  								condition.NullText = reader.GetAttribute("NULLTEXT");  							else if (reader.GetAttribute("nulltext") != null && reader.GetAttribute("nulltext") != string.Empty)  								condition.NullText = reader.GetAttribute("nulltext");    							if (reader.GetAttribute("FIELD") != null && reader.GetAttribute("FIELD") != string.Empty)  								condition.Field = reader.GetAttribute("FIELD");  							else if (reader.GetAttribute("field") != null && reader.GetAttribute("field") != string.Empty)  								condition.Field = reader.GetAttribute("field");    							if (reader.GetAttribute("VALUE") != null && reader.GetAttribute("VALUE") != string.Empty)  								condition.Value = reader.GetAttribute("VALUE");  							else if (reader.GetAttribute("value") != null && reader.GetAttribute("value") != string.Empty)  								condition.Value = reader.GetAttribute("value");	    							if (reader.GetAttribute("CASESENSITIVE") != null && reader.GetAttribute("CASESENSITIVE") != string.Empty)  								condition.CaseSensitive = bool.Parse(reader.GetAttribute("CASESENSITIVE"));  							else if (reader.GetAttribute("casesensitive") != null && reader.GetAttribute("casesensitive") != string.Empty)  								condition.CaseSensitive = bool.Parse(reader.GetAttribute("casesensitive"));  	  							Conditions.Add(condition);    						} break;    						case "REGION":  						{  							Region region = new Region();     							if (reader.GetAttribute("REGIONID") != null && reader.GetAttribute("REGIONID") != string.Empty)  								region.RegionID = reader.GetAttribute("REGIONID");  							else if (reader.GetAttribute("regionid") != null && reader.GetAttribute("regionid") != string.Empty)  								region.RegionID = reader.GetAttribute("regionid");    							if (reader.GetAttribute("NULLTEXT") != null && reader.GetAttribute("NULLTEXT") != string.Empty)  								region.NullText = reader.GetAttribute("NULLTEXT");  							else if (reader.GetAttribute("nulltext") != null && reader.GetAttribute("nulltext") != string.Empty)  								region.NullText = reader.GetAttribute("nulltext");    							if (reader.GetAttribute("URL") != null && reader.GetAttribute("URL") != string.Empty)  								region.URL = reader.GetAttribute("URL");  							else if (reader.GetAttribute("url") != null && reader.GetAttribute("url") != string.Empty)  								region.URL = reader.GetAttribute("url");    							Regions.Add(region);    						} break;    					} break;  					case XmlNodeType.Text:  					switch (element.ToUpper())  					{  						case "SUBJECT":  							this.Message.Subject += reader.Value;  							break;  						/*case "SMTPSERVER":  							this.SmtpServers.Add(reader.Value' 25);  							break;*/  						case "BODYHTML":  							//this.Bodies.Add(reader.Value' BodyFormat.Html);  							this.Message.BodyHtml.Text += reader.Value;  							break;  						case "BODYTEXT":  							//this.Bodies.Add(reader.Value' BodyFormat.Text);  							this.Message.BodyText.Text += reader.Value;  							break;  					}  						break;  					case XmlNodeType.EndElement:  						element = string.Empty;  						break;  				}
Missing Default,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,ProcessXmlTemplate,The following switch statement is missing a default case: switch (element.ToUpper())  					{  						case "MESSAGE":  						{  							if (reader.GetAttribute("PRIORITY") != null && reader.GetAttribute("PRIORITY") != string.Empty)  								this.Message.Priority = (MessagePriority)Enum.Parse(typeof(MessagePriority)' reader.GetAttribute("PRIORITY")' true);   							else if (reader.GetAttribute("priority") != null && reader.GetAttribute("priority") != string.Empty)  								this.Message.Priority = (MessagePriority)Enum.Parse(typeof(MessagePriority)' reader.GetAttribute("priority")' true);     						} break;    						case "FIELDFORMAT":  							if (reader.HasAttributes)  							{  								ActiveUp.Net.Mail.Logger.AddEntry("Element has attributes."' 0);  								FieldFormat fieldFormat = new FieldFormat();    								if (reader.GetAttribute("NAME") != null && reader.GetAttribute("NAME") != string.Empty)  								{  									fieldFormat.Name = reader.GetAttribute("NAME");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute NAME: " + fieldFormat.Name' 0);  								}    								else if (reader.GetAttribute("name") != null && reader.GetAttribute("name") != string.Empty)  								{  									fieldFormat.Name = reader.GetAttribute("name");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute name: " + fieldFormat.Name' 0);  								}    								if (reader.GetAttribute("FORMAT") != null && reader.GetAttribute("FORMAT") != string.Empty)  								{  									fieldFormat.Format = reader.GetAttribute("FORMAT");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute FORMAT: " + fieldFormat.Format' 0);  								}    								else if (reader.GetAttribute("format") != null && reader.GetAttribute("format") != string.Empty)  								{  									fieldFormat.Format = reader.GetAttribute("format");  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute format: " + fieldFormat.Format' 0);  								}    								if (reader.GetAttribute("PADDINGDIR") != null && reader.GetAttribute("PADDINGDIR") != string.Empty)  								{  									if (reader.GetAttribute("PADDINGDIR").ToUpper() == "LEFT")  										fieldFormat.PaddingDir = PaddingDirection.Left;  									else  										fieldFormat.PaddingDir = PaddingDirection.Right;  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute PADDINGDIR: " + reader.GetAttribute("PADDINGDIR")' 0);  								}    								else if (reader.GetAttribute("paddingdir") != null && reader.GetAttribute("paddingdir") != string.Empty)  								{  									if (reader.GetAttribute("paddingdir").ToUpper() == "left")  										fieldFormat.PaddingDir = PaddingDirection.Left;  									else  										fieldFormat.PaddingDir = PaddingDirection.Right;  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute paddingdir: " + reader.GetAttribute("paddingdir")' 0);  								}    								if (reader.GetAttribute("TOTALWIDTH") != null && reader.GetAttribute("TOTALWIDTH") != string.Empty)  								{  									try  									{  										fieldFormat.TotalWidth = Convert.ToInt16(reader.GetAttribute("TOTALWIDTH"));  									}  									catch  									{  										throw new Exception("Specified Total Width is not a valid number.");  									}  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute TOTALWIDTH: " + fieldFormat.TotalWidth.ToString()' 0);  								}    								else if (reader.GetAttribute("totalwidth") != null && reader.GetAttribute("totalwidth") != string.Empty)  								{  									try  									{  										fieldFormat.TotalWidth = Convert.ToInt16(reader.GetAttribute("totalwidth"));  									}  									catch  									{  										throw new Exception("Specified Total Width is not a valid number.");  									}  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute totalwidth: " + fieldFormat.TotalWidth.ToString()' 0);  								}    								if (reader.GetAttribute("PADDINGCHAR") != null && reader.GetAttribute("PADDINGCHAR") != string.Empty)  								{  									fieldFormat.PaddingChar = Convert.ToChar(reader.GetAttribute("PADDINGCHAR").Substring(0' 1));  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute PADDINGCHAR: '" + fieldFormat.PaddingChar + "'"' 0);  								}    								else if (reader.GetAttribute("paddingchar") != null && reader.GetAttribute("paddingchar") != string.Empty)  								{  									fieldFormat.PaddingChar = Convert.ToChar(reader.GetAttribute("paddingchar").Substring(0' 1));  									ActiveUp.Net.Mail.Logger.AddEntry("Attribute paddingchar: '" + fieldFormat.PaddingChar + "'"' 0);  								}    								this.FieldsFormats.Add(fieldFormat);  							}  								  							break;  						case "FROM":  						case "TO":  						case "CC":  						case "BCC":  							if (reader.HasAttributes)  							{  								ActiveUp.Net.Mail.Address address = new ActiveUp.Net.Mail.Address();  								if (reader.GetAttribute("NAME") != null && reader.GetAttribute("NAME") != string.Empty)  									address.Name = reader.GetAttribute("NAME");  								else if (reader.GetAttribute("name") != null && reader.GetAttribute("name") != string.Empty)  									address.Name = reader.GetAttribute("name");  								if (reader.GetAttribute("EMAIL") != null && reader.GetAttribute("EMAIL") != string.Empty)  									address.Email = reader.GetAttribute("EMAIL");  								else if (reader.GetAttribute("email") != null && reader.GetAttribute("email") != string.Empty)  									address.Email = reader.GetAttribute("email");  								if (element.ToUpper() == "FROM")  								{  									if (reader.GetAttribute("REPLYNAME") != null && reader.GetAttribute("REPLYNAME") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Name = reader.GetAttribute("REPLYNAME");  									}  									else if (reader.GetAttribute("replyname") != null && reader.GetAttribute("replyname") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Name = reader.GetAttribute("replyname");  									}    									if (reader.GetAttribute("REPLYEMAIL") != null && reader.GetAttribute("REPLYEMAIL") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Email = reader.GetAttribute("REPLYEMAIL");  									}  									else if (reader.GetAttribute("replyemail") != null && reader.GetAttribute("replyemail") != string.Empty)  									{  										InitReplyTo();  										this.Message.ReplyTo.Email = reader.GetAttribute("replyemail");  									}    									if (reader.GetAttribute("RECEIPTEMAIL") != null && reader.GetAttribute("RECEIPTEMAIL") != string.Empty)  									{  										this.Message.ReturnReceipt.Email = reader.GetAttribute("RECEIPTEMAIL");  									}  									else if (reader.GetAttribute("receiptemail") != null && reader.GetAttribute("receiptemail") != string.Empty)  									{  										this.Message.ReturnReceipt.Email = reader.GetAttribute("receiptemail");  									}  								}    								switch (reader.Name.ToUpper())  								{  									case "FROM": /*this.Message.From.Add(address);*/this.Message.From = address; break;  									case "TO": this.Message.To.Add(address); break;  									case "CC": this.Message.Cc.Add(address); break;  									case "BCC": this.Message.Bcc.Add(address); break;  								}  							}  							break;  						case "LISTTEMPLATE":  						{  							ListTemplate template = new ListTemplate();   							string RegionID = string.Empty;  							string NullText = string.Empty;  							if (reader.GetAttribute("REGIONID") != null && reader.GetAttribute("REGIONID") != string.Empty)  								RegionID = reader.GetAttribute("REGIONID");  							else if (reader.GetAttribute("regionid") != null && reader.GetAttribute("regionid") != string.Empty)  								RegionID = reader.GetAttribute("regionid");    							if (reader.GetAttribute("NULLTEXT") != null && reader.GetAttribute("NULLTEXT") != string.Empty)  								NullText = reader.GetAttribute("NULLTEXT");  							else if (reader.GetAttribute("nulltext") != null && reader.GetAttribute("nulltext") != string.Empty)  								NullText = reader.GetAttribute("nulltext");    							if (reader.HasAttributes && reader.GetAttribute("NAME") != null && reader.GetAttribute("NAME") != string.Empty)  								template = new ListTemplate(reader.GetAttribute("NAME")' reader.ReadString());  							else if (reader.HasAttributes && reader.GetAttribute("name") != null && reader.GetAttribute("name") != string.Empty)  								template = new ListTemplate(reader.GetAttribute("name")' reader.ReadString());  							  							template.RegionID = RegionID;  							template.NullText = NullText;    							this.ListTemplates.Add(template);    						} break;    						case "SMTPSERVER":  						{  							Server server = new Server();     							if (reader.GetAttribute("SERVER") != null && reader.GetAttribute("SERVER") != string.Empty)  								server.Host = reader.GetAttribute("SERVER");  							else if (reader.GetAttribute("server") != null && reader.GetAttribute("server") != string.Empty)  								server.Host = reader.GetAttribute("server");    							if (reader.GetAttribute("PORT") != null && reader.GetAttribute("PORT") != string.Empty)  								server.Port = int.Parse(reader.GetAttribute("PORT"));  							else if (reader.GetAttribute("port") != null && reader.GetAttribute("port") != string.Empty)  								server.Port = int.Parse(reader.GetAttribute("port"));  	  							if (reader.GetAttribute("USERNAME") != null && reader.GetAttribute("USERNAME") != string.Empty)  								server.Username = reader.GetAttribute("USERNAME");  							else if (reader.GetAttribute("username") != null && reader.GetAttribute("username") != string.Empty)  								server.Username = reader.GetAttribute("username");    							if (reader.GetAttribute("PASSWORD") != null && reader.GetAttribute("PASSWORD") != string.Empty)  								server.Password = reader.GetAttribute("PASSWORD");  							else if (reader.GetAttribute("password") != null && reader.GetAttribute("password") != string.Empty)  								server.Password = reader.GetAttribute("password");	    							SmtpServers.Add(server);    						} break;    						case "CONDITION":  						{  							Condition condition = new Condition();     							if (reader.GetAttribute("REGIONID") != null && reader.GetAttribute("REGIONID") != string.Empty)  								condition.RegionID = reader.GetAttribute("REGIONID");  							else if (reader.GetAttribute("regionid") != null && reader.GetAttribute("regionid") != string.Empty)  								condition.RegionID = reader.GetAttribute("regionid");    							if (reader.GetAttribute("OPERATOR") != null && reader.GetAttribute("OPERATOR") != string.Empty)  								condition.Operator = (OperatorType)Enum.Parse(typeof(OperatorType)' reader.GetAttribute("OPERATOR")' true);   							else if (reader.GetAttribute("operator") != null && reader.GetAttribute("operator") != string.Empty)  								condition.Operator = (OperatorType)Enum.Parse(typeof(OperatorType)' reader.GetAttribute("operator")' true);     							if (reader.GetAttribute("NULLTEXT") != null && reader.GetAttribute("NULLTEXT") != string.Empty)  								condition.NullText = reader.GetAttribute("NULLTEXT");  							else if (reader.GetAttribute("nulltext") != null && reader.GetAttribute("nulltext") != string.Empty)  								condition.NullText = reader.GetAttribute("nulltext");    							if (reader.GetAttribute("FIELD") != null && reader.GetAttribute("FIELD") != string.Empty)  								condition.Field = reader.GetAttribute("FIELD");  							else if (reader.GetAttribute("field") != null && reader.GetAttribute("field") != string.Empty)  								condition.Field = reader.GetAttribute("field");    							if (reader.GetAttribute("VALUE") != null && reader.GetAttribute("VALUE") != string.Empty)  								condition.Value = reader.GetAttribute("VALUE");  							else if (reader.GetAttribute("value") != null && reader.GetAttribute("value") != string.Empty)  								condition.Value = reader.GetAttribute("value");	    							if (reader.GetAttribute("CASESENSITIVE") != null && reader.GetAttribute("CASESENSITIVE") != string.Empty)  								condition.CaseSensitive = bool.Parse(reader.GetAttribute("CASESENSITIVE"));  							else if (reader.GetAttribute("casesensitive") != null && reader.GetAttribute("casesensitive") != string.Empty)  								condition.CaseSensitive = bool.Parse(reader.GetAttribute("casesensitive"));  	  							Conditions.Add(condition);    						} break;    						case "REGION":  						{  							Region region = new Region();     							if (reader.GetAttribute("REGIONID") != null && reader.GetAttribute("REGIONID") != string.Empty)  								region.RegionID = reader.GetAttribute("REGIONID");  							else if (reader.GetAttribute("regionid") != null && reader.GetAttribute("regionid") != string.Empty)  								region.RegionID = reader.GetAttribute("regionid");    							if (reader.GetAttribute("NULLTEXT") != null && reader.GetAttribute("NULLTEXT") != string.Empty)  								region.NullText = reader.GetAttribute("NULLTEXT");  							else if (reader.GetAttribute("nulltext") != null && reader.GetAttribute("nulltext") != string.Empty)  								region.NullText = reader.GetAttribute("nulltext");    							if (reader.GetAttribute("URL") != null && reader.GetAttribute("URL") != string.Empty)  								region.URL = reader.GetAttribute("URL");  							else if (reader.GetAttribute("url") != null && reader.GetAttribute("url") != string.Empty)  								region.URL = reader.GetAttribute("url");    							Regions.Add(region);    						} break;    					}
Missing Default,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,ProcessXmlTemplate,The following switch statement is missing a default case: switch (reader.Name.ToUpper())  								{  									case "FROM": /*this.Message.From.Add(address);*/this.Message.From = address; break;  									case "TO": this.Message.To.Add(address); break;  									case "CC": this.Message.Cc.Add(address); break;  									case "BCC": this.Message.Bcc.Add(address); break;  								}
Missing Default,ActiveUp.Net.Mail,Templater,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Common\Templater.cs,ProcessXmlTemplate,The following switch statement is missing a default case: switch (element.ToUpper())  					{  						case "SUBJECT":  							this.Message.Subject += reader.Value;  							break;  						/*case "SMTPSERVER":  							this.SmtpServers.Add(reader.Value' 25);  							break;*/  						case "BODYHTML":  							//this.Bodies.Add(reader.Value' BodyFormat.Html);  							this.Message.BodyHtml.Text += reader.Value;  							break;  						case "BODYTEXT":  							//this.Bodies.Add(reader.Value' BodyFormat.Text);  							this.Message.BodyText.Text += reader.Value;  							break;  					}
