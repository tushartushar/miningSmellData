Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,Cyclomatic complexity of the method is 18
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,MergeText,The length of the statement  "					ActiveUp.Net.Mail.Logger.AddEntry("DataBinder Eval failed. Probable standard datasource doesn't contain the Field '" + field + "'."' 0); " is 136.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,MergeText,The length of the statement  "						ActiveUp.Net.Mail.Logger.AddEntry("DataBinder (Indexed) Eval failed. Probable indexed datasource doesn't contain the Field '" + field + "'."' 0); " is 145.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "					System.Text.RegularExpressions.Regex rx = new System.Text.RegularExpressions.Regex(@"(?<completetag><(?<tag>[^\s>]*)[^>]*?(?i:ID=""" + condition.RegionID + @""")(?<result>.[^>]+>))(?<contents>.*?)(?<endtag></\k<tag>>)"' RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 271.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "					rx = new System.Text.RegularExpressions.Regex(@"(?<completetag><(?<tag>[^\s>]*)[^>]*?(?i:ID=" + condition.RegionID + @")(?<result>.[^>]+>))(?<contents>.*?)(?<endtag></\k<tag>>)"' RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 230.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "				System.Text.RegularExpressions.Regex rx = new System.Text.RegularExpressions.Regex(@"(?<completetag><(?<tag>[^\s>]*)[^>]*?(?i:ID=""" + region.RegionID + @""")(?<result>.[^>]+>))(?<contents>.*?)(?<endtag></\k<tag>>)"' RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 268.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "						Body = Body.Replace(m.Value'm.Groups["completetag"].Value + this.MergeText(region.Content'dataSource'repeat) + m.Groups["endtag"].Value); " is 137.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "				rx = new System.Text.RegularExpressions.Regex(@"(?<completetag><(?<tag>[^\s>]*)[^>]*?(?i:ID=" + region.RegionID + @")(?<result>.[^>]+>))(?<contents>.*?)(?<endtag></\k<tag>>)"' RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 227.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "						Body = Body.Replace(m.Value'm.Groups["completetag"].Value + this.MergeText(region.Content'dataSource'repeat) + m.Groups["endtag"].Value); " is 137.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "					System.Text.RegularExpressions.Regex rx = new System.Text.RegularExpressions.Regex(@"(?<completetag><(?<tag>[^\s>]*)[^>]*?(?i:ID=""" + listTemplate.RegionID + @""")(?<result>.[^>]+>))(?<contents>.*?)(?<endtag></\k<tag>>)"' RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 274.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,ProcessIDs,The length of the statement  "					rx = new System.Text.RegularExpressions.Regex(@"(?<completetag><(?<tag>[^\s>]*)[^>]*?(?i:ID=" + listTemplate.RegionID + @")(?<result>.[^>]+>))(?<contents>.*?)(?<endtag></\k<tag>>)"' RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 233.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,MergeListTemplate,The length of the statement  "					message.BodyText.Text = this.ReplaceField(message.BodyText.Text' listTemplate.Name' MergeText(listTemplate.Content' dataSource' true)); " is 135.
Long Statement,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,MergeListTemplate,The length of the statement  "					message.BodyHtml.Text = this.ReplaceField(message.BodyHtml.Text' listTemplate.Name' MergeText(listTemplate.Content' dataSource' true)); " is 135.
Magic Number,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,MergeText,The following statement contains a magic number: foreach(string field in fields)  			{  				ActiveUp.Net.Mail.Logger.AddEntry("Processing field: " + field' 0);    				// Try as standard object with properties  				try  				{  					dataBinderVal = string.Empty;  					if (this.FieldsFormats.Contains(field))  					{  						FieldFormat fieldFormat = this.FieldsFormats[field];  						  						ActiveUp.Net.Mail.Logger.AddEntry("StringFormat to apply: " + fieldFormat.Format' 0);    						dataBinderVal = Convert.ToString(DataBinder.GetPropertyValue(item' field' fieldFormat.Format));  					}  					else  					{  						dataBinderVal = Convert.ToString(DataBinder.GetPropertyValue(item' field));  					}  					ActiveUp.Net.Mail.Logger.AddEntry("Field value after binding: " + dataBinderVal' 0);  					//validate the condition if exists at all  					this.Conditions.Validate(field' dataBinderVal);    					text = this.ReplaceField(text' field' dataBinderVal);  				}  				catch  				{  					ActiveUp.Net.Mail.Logger.AddEntry("DataBinder Eval failed. Probable standard datasource doesn't contain the Field '" + field + "'."' 0);  				}    				// Try as a key/pair object type.  				if (dataBinderVal == string.Empty)  				{  					ActiveUp.Net.Mail.Logger.AddEntry("Trying key/pair object type."' 2);    					try  					{  						dataBinderKey = Convert.ToString(DataBinder.Eval(item' "Key"));  						  						ActiveUp.Net.Mail.Logger.AddEntry("Field value after binding (key): " + dataBinderVal' 0);  						  						if (dataBinderKey.ToUpper() == field.ToUpper())  						{  							if (this.FieldsFormats.Contains(field))  							{  								FieldFormat fieldFormat = this.FieldsFormats[field];  								dataBinderVal = Convert.ToString(DataBinder.Eval(item' "Value"' fieldFormat.Format));  							}  							else  							{  								dataBinderVal = Convert.ToString(DataBinder.Eval(item' "Value"));  							}  							//validate the condition if exists at all  							this.Conditions.Validate(field' dataBinderVal);  							text = this.ReplaceField(text' field' dataBinderVal);  						}  					  					}  					catch  					{  						ActiveUp.Net.Mail.Logger.AddEntry("DataBinder (Indexed) Eval failed. Probable indexed datasource doesn't contain the Field '" + field + "'."' 0);  					}  				}  			}
Magic Number,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,MergeCollection,The following statement contains a magic number: if (items != null)  			{  				while(items.MoveNext())  				{  					Message newMessage = message.Clone();  					this.MergeMessage(newMessage' items.Current);  					messages.Add(newMessage);    					/*string file = @"c:\temp\_amail_\test.eml";  					if (File.Exists(file))  						File.Delete(file);  					newMessage.StoreToFile(file);*/    					if (send)  					{                          if (this.SmtpServers.Count > 0)                          {                              //newMessage.Send(this.SmtpServers);                              SmtpClient.Send(newMessage' this.SmtpServers);                          }                          else                          {                              //newMessage.DirectSend();                              SmtpClient.DirectSend(newMessage);                          }  					}  				}    				ActiveUp.Net.Mail.Logger.AddEntry("Message created successfully."' 2);  			}
Magic Number,ActiveUp.Net.Mail,Merger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\Merger.cs,GetFields,The following statement contains a magic number: if (source != null && source.Length > 0)  			{    				while(source.IndexOf("$"' startIndex) > -1)  				{  					// Find a "$" char  					startIndex = source.IndexOf("$"' startIndex);    					// Is a field ?  					if (source.IndexOf("$"' startIndex + 1) > -1)  					{  						nextOccurence = source.IndexOf("$"' startIndex + 1);  						field = source.Substring(startIndex + 1' nextOccurence - startIndex - 1);    						if (field.IndexOf(" ") == -1 && field.IndexOf("\n") == -1 && field.Length >= 2)  						{  							startIndex = nextOccurence;  							if (!fields.Contains(field))  								fields.Add(field);  						}  					}    					startIndex++;  				}  			}
Magic Number,ActiveUp.Net.Mail,RblServer,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\RblServer.cs,GetRblIp,The following statement contains a magic number: string domain = string.Format("{0}.{1}.{2}.{3}.{4}"' addressBytes[3].ToString()'                  addressBytes[2].ToString()' addressBytes[1].ToString()' addressBytes[0].ToString()' rblServer);
Magic Number,ActiveUp.Net.Mail,RblServer,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\RblServer.cs,GetRblIp,The following statement contains a magic number: string domain = string.Format("{0}.{1}.{2}.{3}.{4}"' addressBytes[3].ToString()'                  addressBytes[2].ToString()' addressBytes[1].ToString()' addressBytes[0].ToString()' rblServer);
Missing Default,ActiveUp.Net.Mail,RblServer,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net.Mail\RblServer.cs,GetRblStatus,The following switch statement is missing a default case: switch (result.ToString())              {                  case "127.0.0.5": return RblStatus.OpenRelay;                  case "127.0.0.1":                  case "127.0.0.2": return RblStatus.BlackListed;                  case "127.0.0.3": return RblStatus.OpenSocks;              }
