Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,Cyclomatic complexity of the method is 9
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetUniqueString,The length of the statement  "			return System.Diagnostics.Process.GetCurrentProcess().Id.ToString()+System.DateTime.Now.ToString("yyMMddhhmmss")+System.DateTime.Now.Millisecond.ToString()+(new Random().GetHashCode()); " is 185.
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The length of the statement  "				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d)) " is 238.
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,RFC2047Encode,The length of the statement  "			return "=?"+charset+"?B?"+System.Convert.ToBase64String(System.Text.Encoding.GetEncoding(charset).GetBytes(input))+"?="; " is 120.
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,RFC2047Decode,The length of the statement  "				string[] encodeds = System.Text.RegularExpressions.Regex.Split(input'System.Text.RegularExpressions.Regex.Escape("=?")); " is 120.
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,RFC2047Decode,The length of the statement  "					if(parts[1].ToUpper()=="Q") decoded = decoded.Replace("=?"+encoded+"?="'Codec.FromQuotedPrintable(System.Text.Encoding.GetEncoding(parts[0]).GetString(System.Text.Encoding.ASCII.GetBytes(parts[2].Replace("²rep"'"=")))'parts[0])); " is 229.
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,RFC2047Decode,The length of the statement  "					else decoded = decoded.Replace("=?"+encoded+"?="'System.Text.Encoding.GetEncoding(parts[0]).GetString(System.Convert.FromBase64String(parts[2].Replace("²rep"'"=")))); " is 166.
Long Statement,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromQuotedPrintable,The length of the statement  "							arr.Add(System.Convert.ToByte(System.Int32.Parse(String.Concat((char)input[i+1]'(char)input[i+2])'System.Globalization.NumberStyles.HexNumber))); " is 145.
Complex Conditional,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The conditional expression  "(decim<33 || decim==61 || decim>126) && decim!=32"  is complex.
Empty Catch Block,ActiveUp.Net,TimedUdpClient,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\TimedUdpClient.cs,StartReceive,The method has an empty catch block.
Empty Catch Block,ActiveUp.Net,TimedUdpClient,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\TimedUdpClient.cs,StartReceive,The method has an empty catch block.
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToQuotedPrintable,The following statement contains a magic number: for(index=0;index<body.Length;index++)  			{  				if (wrap==0 && index+73-check < body.Length)  				{  					// it's a new line. Let's check if there is a bot in the next line.  					while(body[index+73-check] == 46)  					{  						wrap++;  						check++;  						if (wrap == 72 || index+73-check >= body.Length)  							break;  					}  					check=0;  				}  				  				decim = body[index];	  				if((decim<33 || decim==61 || decim>126) && decim!=32)  					sb.Append("="+decim.ToString("X").PadLeft(2''0'));  				else  					sb.Append((char)decim);    				if (wrap >= 72)  				{  					sb.Append("=\r\n");  					wrap=0;  				}  				else  					wrap++;  				  				//if((sb.Length/72d)==System.Math.Round(sb.Length/72d) || ((sb.Length-1)/72d)==System.Math.Round((sb.Length-1)/72d) || ((sb.Length-2)/72d)==System.Math.Round((sb.Length-2)/72d) || ((sb.Length-3)/72d)==System.Math.Round((sb.Length-3)/72d))  			}
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,RFC2047Decode,The following statement contains a magic number: if(input.IndexOf("=?")!=-1 && input.IndexOf("?=")!=-1)  			{  				string[] encodeds = System.Text.RegularExpressions.Regex.Split(input'System.Text.RegularExpressions.Regex.Escape("=?"));  				for(int i=1;i<encodeds.Length;i++)  				{  					string encoded = encodeds[i].Substring(0'encodeds[i].LastIndexOf("?="));  					string[] parts = encoded.Split('?');  					if(parts[1].ToUpper()=="Q") decoded = decoded.Replace("=?"+encoded+"?="'Codec.FromQuotedPrintable(System.Text.Encoding.GetEncoding(parts[0]).GetString(System.Text.Encoding.ASCII.GetBytes(parts[2].Replace("²rep"'"=")))'parts[0]));  					else decoded = decoded.Replace("=?"+encoded+"?="'System.Text.Encoding.GetEncoding(parts[0]).GetString(System.Convert.FromBase64String(parts[2].Replace("²rep"'"="))));  				}  				decoded = decoded.Replace("_"'" ");  			}  			else decoded = input;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,RFC2047Decode,The following statement contains a magic number: if(input.IndexOf("=?")!=-1 && input.IndexOf("?=")!=-1)  			{  				string[] encodeds = System.Text.RegularExpressions.Regex.Split(input'System.Text.RegularExpressions.Regex.Escape("=?"));  				for(int i=1;i<encodeds.Length;i++)  				{  					string encoded = encodeds[i].Substring(0'encodeds[i].LastIndexOf("?="));  					string[] parts = encoded.Split('?');  					if(parts[1].ToUpper()=="Q") decoded = decoded.Replace("=?"+encoded+"?="'Codec.FromQuotedPrintable(System.Text.Encoding.GetEncoding(parts[0]).GetString(System.Text.Encoding.ASCII.GetBytes(parts[2].Replace("²rep"'"=")))'parts[0]));  					else decoded = decoded.Replace("=?"+encoded+"?="'System.Text.Encoding.GetEncoding(parts[0]).GetString(System.Convert.FromBase64String(parts[2].Replace("²rep"'"="))));  				}  				decoded = decoded.Replace("_"'" ");  			}  			else decoded = input;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromQuotedPrintable,The following statement contains a magic number: try  			{  				input = input.Replace("=\r\n"'"")+"=3D=3D";  				System.Collections.ArrayList arr = new System.Collections.ArrayList();  				int i=0;  				byte[] decoded = new byte[0];  				while(true)  				{  					if(i<=(input.Length)-3)  					{  						if(input[i]=='=' && input[i+1]!='=')  						{  							arr.Add(System.Convert.ToByte(System.Int32.Parse(String.Concat((char)input[i+1]'(char)input[i+2])'System.Globalization.NumberStyles.HexNumber)));  							i += 3;  						}  						else  						{  							arr.Add((byte)input[i]);  							i++;  						}  					}  					else break;  				}  				decoded = new byte[arr.Count];  				for(int j=0;j<arr.Count;j++) decoded[j] = (byte)arr[j];  				return System.Text.Encoding.GetEncoding(toCharset).GetString(decoded).TrimEnd('=');  			}  			catch { return input; }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromQuotedPrintable,The following statement contains a magic number: try  			{  				input = input.Replace("=\r\n"'"")+"=3D=3D";  				System.Collections.ArrayList arr = new System.Collections.ArrayList();  				int i=0;  				byte[] decoded = new byte[0];  				while(true)  				{  					if(i<=(input.Length)-3)  					{  						if(input[i]=='=' && input[i+1]!='=')  						{  							arr.Add(System.Convert.ToByte(System.Int32.Parse(String.Concat((char)input[i+1]'(char)input[i+2])'System.Globalization.NumberStyles.HexNumber)));  							i += 3;  						}  						else  						{  							arr.Add((byte)input[i]);  							i++;  						}  					}  					else break;  				}  				decoded = new byte[arr.Count];  				for(int j=0;j<arr.Count;j++) decoded[j] = (byte)arr[j];  				return System.Text.Encoding.GetEncoding(toCharset).GetString(decoded).TrimEnd('=');  			}  			catch { return input; }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromQuotedPrintable,The following statement contains a magic number: try  			{  				input = input.Replace("=\r\n"'"")+"=3D=3D";  				System.Collections.ArrayList arr = new System.Collections.ArrayList();  				int i=0;  				byte[] decoded = new byte[0];  				while(true)  				{  					if(i<=(input.Length)-3)  					{  						if(input[i]=='=' && input[i+1]!='=')  						{  							arr.Add(System.Convert.ToByte(System.Int32.Parse(String.Concat((char)input[i+1]'(char)input[i+2])'System.Globalization.NumberStyles.HexNumber)));  							i += 3;  						}  						else  						{  							arr.Add((byte)input[i]);  							i++;  						}  					}  					else break;  				}  				decoded = new byte[arr.Count];  				for(int j=0;j<arr.Count;j++) decoded[j] = (byte)arr[j];  				return System.Text.Encoding.GetEncoding(toCharset).GetString(decoded).TrimEnd('=');  			}  			catch { return input; }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,Wrap,The following statement contains a magic number: totalchars -= 3;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetCRCBase64,The following statement contains a magic number: for (int i = 0; i < binput.Length; i++)              {                  crc ^= (((long)binput[i]) << 16);                  for (int j = 0; j < 8; j++)                  {                      crc <<= 1;                      if ((crc & 0x1000000) == 0x1000000)                          crc ^= CRC24_POLY;                  }              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetCRCBase64,The following statement contains a magic number: for (int i = 0; i < binput.Length; i++)              {                  crc ^= (((long)binput[i]) << 16);                  for (int j = 0; j < 8; j++)                  {                      crc <<= 1;                      if ((crc & 0x1000000) == 0x1000000)                          crc ^= CRC24_POLY;                  }              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte a = (byte)(crc >> 16);
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte b = (byte)((crc & 65280) >> 8);
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte b = (byte)((crc & 65280) >> 8);
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,GetCRCBase64,The following statement contains a magic number: byte c = (byte)(crc & 255);
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: int length = input.Length - (input.Length % 4);
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: for (int i = 0; i < length / 4; i++)              {                  outbytes.Add(((byte)((inbytes[i * 4] << 2) + (inbytes[i * 4 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 1] & 15) << 4) + (inbytes[i * 4 + 2] >> 2))));                  outbytes.Add(((byte)(((inbytes[i * 4 + 2] & 3) << 6) + inbytes[i * 4 + 3])));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 3)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 3] << 2) + (inbytes[inbytes.Length - 3 + 1] >> 4))));                  outbytes.Add(((byte)(((inbytes[inbytes.Length - 3 + 1] & 15) << 4) + (inbytes[inbytes.Length - 3 + 2] >> 2))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 2)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 2)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 2)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 2)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 2)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromRadix64,The following statement contains a magic number: if ((input.Length % 4) == 2)              {                  outbytes.Add(((byte)((inbytes[inbytes.Length - 2] << 2) + (inbytes[inbytes.Length - 2 + 1] >> 4))));              }
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32768) == 32768) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32768) == 32768) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16384) == 16384) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16384) == 16384) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8192) == 8192) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8192) == 8192) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4096) == 4096) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4096) == 4096) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2048) == 2048) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2048) == 2048) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 1024) == 1024) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 1024) == 1024) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 512) == 512) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 512) == 512) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 256) == 256) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 256) == 256) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[7].Equals('1')) output++;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[6].Equals('1')) output += 2;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[6].Equals('1')) output += 2;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[5].Equals('1')) output += 4;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[5].Equals('1')) output += 4;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[4].Equals('1')) output += 8;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[4].Equals('1')) output += 8;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[3].Equals('1')) output += 16;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[3].Equals('1')) output += 16;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[2].Equals('1')) output += 32;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[2].Equals('1')) output += 32;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[1].Equals('1')) output += 64;
Magic Number,ActiveUp.Net,Codec,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Codec.cs,FromBitString,The following statement contains a magic number: if (input[0].Equals('1')) output += 128;
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToByteArray,The following statement contains a magic number: byte a = (byte)(input >> 24);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToByteArray,The following statement contains a magic number: byte b = (byte)((input & 16711680) >> 16);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToByteArray,The following statement contains a magic number: byte b = (byte)((input & 16711680) >> 16);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToByteArray,The following statement contains a magic number: byte c = (byte)((input & 65280) >> 8);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToByteArray,The following statement contains a magic number: byte c = (byte)((input & 65280) >> 8);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToByteArray,The following statement contains a magic number: byte d = (byte)(input & 255);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToShort,The following statement contains a magic number: short l = (short)((((short)input[0]) << 8) + (short)input[1]);
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net,Converter,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Converter.cs,UnixTimeStampToDateTime,The following statement contains a magic number: return new DateTime(1970' 1' 1).AddSeconds(timeStamp);
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,Logger,The following statement contains a magic number: if (DateTime.Now > new DateTime(2007' 6' 31))                  throw new Exception("BETA Version Expired. Please use the PRODUCTION version.");
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,Logger,The following statement contains a magic number: if (DateTime.Now > new DateTime(2007' 6' 31))                  throw new Exception("BETA Version Expired. Please use the PRODUCTION version.");
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,Logger,The following statement contains a magic number: if (DateTime.Now > new DateTime(2007' 6' 31))                  throw new Exception("BETA Version Expired. Please use the PRODUCTION version.");
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,AddEntry,The following statement contains a magic number: if (!_disabled)  			{  				DateTime now = DateTime.Now;  				StringBuilder logString = new StringBuilder();  				logString.Append(now.Year.ToString());  				logString.Append(".");  				logString.Append(now.Month.ToString().PadLeft(2' '0'));  				logString.Append(".");  				logString.Append(now.Day.ToString().PadLeft(2' '0'));  				logString.Append("-");  				logString.Append(now.Hour.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Minute.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Second.ToString().PadLeft(2' '0'));  				logString.Append(" ");  				logString.Append(line);    				if (_logFile != null && _logFile.Length > 0)  					AddEntryToFile(logString.ToString());    				if (_useTraceContext)  					AddEntryToTrace(logString.ToString());    				if (_useTraceConsole)  					AddEntryToConsole(logString.ToString());    				OnEntryAdded(EventArgs.Empty);  			}
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,AddEntry,The following statement contains a magic number: if (!_disabled)  			{  				DateTime now = DateTime.Now;  				StringBuilder logString = new StringBuilder();  				logString.Append(now.Year.ToString());  				logString.Append(".");  				logString.Append(now.Month.ToString().PadLeft(2' '0'));  				logString.Append(".");  				logString.Append(now.Day.ToString().PadLeft(2' '0'));  				logString.Append("-");  				logString.Append(now.Hour.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Minute.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Second.ToString().PadLeft(2' '0'));  				logString.Append(" ");  				logString.Append(line);    				if (_logFile != null && _logFile.Length > 0)  					AddEntryToFile(logString.ToString());    				if (_useTraceContext)  					AddEntryToTrace(logString.ToString());    				if (_useTraceConsole)  					AddEntryToConsole(logString.ToString());    				OnEntryAdded(EventArgs.Empty);  			}
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,AddEntry,The following statement contains a magic number: if (!_disabled)  			{  				DateTime now = DateTime.Now;  				StringBuilder logString = new StringBuilder();  				logString.Append(now.Year.ToString());  				logString.Append(".");  				logString.Append(now.Month.ToString().PadLeft(2' '0'));  				logString.Append(".");  				logString.Append(now.Day.ToString().PadLeft(2' '0'));  				logString.Append("-");  				logString.Append(now.Hour.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Minute.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Second.ToString().PadLeft(2' '0'));  				logString.Append(" ");  				logString.Append(line);    				if (_logFile != null && _logFile.Length > 0)  					AddEntryToFile(logString.ToString());    				if (_useTraceContext)  					AddEntryToTrace(logString.ToString());    				if (_useTraceConsole)  					AddEntryToConsole(logString.ToString());    				OnEntryAdded(EventArgs.Empty);  			}
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,AddEntry,The following statement contains a magic number: if (!_disabled)  			{  				DateTime now = DateTime.Now;  				StringBuilder logString = new StringBuilder();  				logString.Append(now.Year.ToString());  				logString.Append(".");  				logString.Append(now.Month.ToString().PadLeft(2' '0'));  				logString.Append(".");  				logString.Append(now.Day.ToString().PadLeft(2' '0'));  				logString.Append("-");  				logString.Append(now.Hour.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Minute.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Second.ToString().PadLeft(2' '0'));  				logString.Append(" ");  				logString.Append(line);    				if (_logFile != null && _logFile.Length > 0)  					AddEntryToFile(logString.ToString());    				if (_useTraceContext)  					AddEntryToTrace(logString.ToString());    				if (_useTraceConsole)  					AddEntryToConsole(logString.ToString());    				OnEntryAdded(EventArgs.Empty);  			}
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,AddEntry,The following statement contains a magic number: if (!_disabled)  			{  				DateTime now = DateTime.Now;  				StringBuilder logString = new StringBuilder();  				logString.Append(now.Year.ToString());  				logString.Append(".");  				logString.Append(now.Month.ToString().PadLeft(2' '0'));  				logString.Append(".");  				logString.Append(now.Day.ToString().PadLeft(2' '0'));  				logString.Append("-");  				logString.Append(now.Hour.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Minute.ToString().PadLeft(2' '0'));  				logString.Append(":");  				logString.Append(now.Second.ToString().PadLeft(2' '0'));  				logString.Append(" ");  				logString.Append(line);    				if (_logFile != null && _logFile.Length > 0)  					AddEntryToFile(logString.ToString());    				if (_useTraceContext)  					AddEntryToTrace(logString.ToString());    				if (_useTraceConsole)  					AddEntryToConsole(logString.ToString());    				OnEntryAdded(EventArgs.Empty);  			}
Magic Number,ActiveUp.Net,Logger,C:\repos\slavat_MailSystem.NET\Class Library\ActiveUp.Net\Logger.cs,LastEntries,The following statement contains a magic number: ArrayList entries = LastEntries(30);
