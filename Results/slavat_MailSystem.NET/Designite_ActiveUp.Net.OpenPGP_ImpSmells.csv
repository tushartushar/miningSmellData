Implementation smell,Namespace,Class,File,Method,Description
Long Method,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The method has 157 lines of code.
Complex Method,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ParseMessage,Cyclomatic complexity of the method is 9
Complex Method,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,Cyclomatic complexity of the method is 8
Complex Method,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,Cyclomatic complexity of the method is 48
Long Identifier,ActiveUp.Net.Security.OpenPGP,Constants,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Constants.cs,,The length of the parameter ELGAMAL_ENCRYPT_ONLY_PUBLIC_KEY_MPI_COUNT is 41.
Long Identifier,ActiveUp.Net.Security.OpenPGP,Constants,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Constants.cs,,The length of the parameter ELGAMAL_ENCRYPT_ONLY_SECRET_KEY_MPI_COUNT is 41.
Long Statement,ActiveUp.Net.Security.OpenPGP,Constants,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Constants.cs,GetPublicMPICount,The length of the statement  "            else if (pkAlgorithm.Equals(PublicKeyAlgorithm.ElGamalEncryptOnly)) return Constants.ELGAMAL_ENCRYPT_ONLY_PUBLIC_KEY_MPI_COUNT; " is 127.
Long Statement,ActiveUp.Net.Security.OpenPGP,Constants,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Constants.cs,GetSecretMPICount,The length of the statement  "            else if (pkAlgorithm.Equals(PublicKeyAlgorithm.ElGamalEncryptOnly)) return Constants.ELGAMAL_ENCRYPT_ONLY_SECRET_KEY_MPI_COUNT; " is 127.
Long Statement,ActiveUp.Net.Security.OpenPGP,Constants,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Constants.cs,GetCipherBlockSize,The length of the statement  "            //else if (skAlgorithm.Equals(PublicKeyAlgorithm.ElGamalEncryptOnly)) return Constants.ELGAMAL_ENCRYPT_ONLY_PUBLIC_KEY_MPI_COUNT; " is 129.
Long Statement,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,DispatchPacket,The length of the statement  "            pack = System.Activator.CreateInstance("ActiveUp.Mail"' "ActiveUp.Net.Security.OpenPGP.Packets." + packet.Type.ToString()).Unwrap(); " is 132.
Long Statement,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The length of the statement  "                packet = (Packet)(System.Activator.CreateInstance("ActiveUp.Mail"' "ActiveUp.Net.Security.OpenPGP.Packets."+type.ToString()).Unwrap()); " is 135.
Long Statement,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The length of the statement  "                packet = (Packet)(System.Activator.CreateInstance(Type.GetType("ActiveUp.Net.Security.OpenPGP.Packets."+type.ToString()))); " is 123.
Long Statement,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The length of the statement  "                packet = (Packet)(System.Activator.CreateInstance("ActiveUp.Mail"' "ActiveUp.Net.Security.OpenPGP.Packets." + type.ToString()).Unwrap()); " is 137.
Long Statement,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The length of the statement  "                packet = (Packet)(System.Activator.CreateInstance(Type.GetType("ActiveUp.Net.Security.OpenPGP.Packets." + type.ToString()))); " is 125.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                if (!next.Equals(5)) throw new InvalidPacketSyntaxException("Invalid syntax for a version 3 signature packet. Second byte is not 5."); " is 134.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)KeyFlag.Authentication) == (int)KeyFlag.Authentication) sig.KeyFlags.Add(KeyFlag.Authentication); " is 127.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)KeyFlag.CertifiesOtherKeys) == (int)KeyFlag.CertifiesOtherKeys) sig.KeyFlags.Add(KeyFlag.CertifiesOtherKeys); " is 139.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)KeyFlag.EncryptsCommunications) == (int)KeyFlag.EncryptsCommunications) sig.KeyFlags.Add(KeyFlag.EncryptsCommunications); " is 151.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)KeyFlag.EncryptsStorage) == (int)KeyFlag.EncryptsStorage) sig.KeyFlags.Add(KeyFlag.EncryptsStorage); " is 130.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)Feature.ModificationDetection) == (int)Feature.ModificationDetection) sig.Features.Add(Feature.ModificationDetection); " is 148.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)KeyServerPreference.NoModify) == (int)KeyServerPreference.NoModify) sig.KeyServerPreferences.Add(KeyServerPreference.NoModify); " is 157.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        if ((spacket.Value[0] & (byte)Reason.KeyCompromised) == (int)Reason.KeyCompromised) sig.ReasonForRevocation.Reason = Reason.KeyCompromised; " is 139.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        else if ((spacket.Value[0] & (byte)Reason.KeyRetired) == (int)Reason.KeyRetired) sig.ReasonForRevocation.Reason = Reason.KeyRetired; " is 132.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        else if ((spacket.Value[0] & (byte)Reason.KeySuperceded) == (int)Reason.KeySuperceded) sig.ReasonForRevocation.Reason = Reason.KeySuperceded; " is 141.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        else if ((spacket.Value[0] & (byte)Reason.NoneSpecified) == (int)Reason.NoneSpecified) sig.ReasonForRevocation.Reason = Reason.NoneSpecified; " is 141.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        else if ((spacket.Value[0] & (byte)Reason.UserIDNoLongerValid) == (int)Reason.UserIDNoLongerValid) sig.ReasonForRevocation.Reason = Reason.UserIDNoLongerValid; " is 159.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        for (int i = 0; i < spacket.Value.Length; i++) sig.PreferredCompressionAlgorithms.Add((CompressionAlgorithm)spacket.Value[i]); " is 126.
Long Statement,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The length of the statement  "                        for (int i = 0; i < spacket.Value.Length; i++) sig.PreferredSymmetricAlgorithms.Add((SymmetricKeyAlgorithm)spacket.Value[i]); " is 125.
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The following statement contains a magic number: PacketType type = (PacketType)((firstbyte & 60) >> 2);
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The following statement contains a magic number: PacketType type = (PacketType)((firstbyte & 60) >> 2);
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The following statement contains a magic number: byte lengthType = (byte)(firstbyte & 3);
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The following statement contains a magic number: packet.TotalLength = packet.BodyLength + 2;
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,GetNextPacket,The following statement contains a magic number: PacketType type = (PacketType)(firstbyte & 63);
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,AddNextPacketNewFormat,The following statement contains a magic number: packet.TotalLength += packet.BodyLength + 2;
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,AddNextPacketNewFormat,The following statement contains a magic number: next < 192
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 128) == 128) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 64) == 64) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 32) == 32) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 16) == 16) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 8) == 8) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 4) == 4) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net.Security.OpenPGP,Parser,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Parser.cs,ToBitString,The following statement contains a magic number: output += ((input & 2) == 2) ? "1" : "0";
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToByteArray,The following statement contains a magic number: byte a = (byte)(input >> 24);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToByteArray,The following statement contains a magic number: byte b = (byte)((input & 16711680) >> 16);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToByteArray,The following statement contains a magic number: byte b = (byte)((input & 16711680) >> 16);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToByteArray,The following statement contains a magic number: byte c = (byte)((input & 65280) >> 8);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToByteArray,The following statement contains a magic number: byte c = (byte)((input & 65280) >> 8);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToByteArray,The following statement contains a magic number: byte d = (byte)(input & 255);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToULong,The following statement contains a magic number: ulong l = (((ulong)input[0]) << 56)                  + (((ulong)input[1]) << 48)                  + (((ulong)input[2]) << 40)                  + (((ulong)input[3]) << 32)                  + (((ulong)input[4]) << 24)                  + (((ulong)input[5]) << 16)                  + (((ulong)input[6]) << 8)                  + ((ulong)input[7]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToShort,The following statement contains a magic number: short l = (short)((((short)input[0]) << 8) + (short)input[1]);
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToInt,The following statement contains a magic number: int l = (((int)input[0]) << 24)                  + (((int)input[1]) << 16)                  + (((int)input[2]) << 8)                  + (int)input[3];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,ToLong,The following statement contains a magic number: long l = ((long)input[0] << 56)                  | ((long)input[1] << 48)                  | ((long)input[2] << 40)                  | ((long)input[3] << 32)                  | ((long)input[4] << 24)                  | ((long)input[5] << 16)                  | ((long)input[6] << 8)                  | (long)input[7];
Magic Number,ActiveUp.Net.OpenPGP,Converter,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Converter.cs,UnixTimeStampToDateTime,The following statement contains a magic number: return new DateTime(1970' 1' 1).AddSeconds(timeStamp);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: byte[] creation = new byte[4];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: ms.Read(creation' 0' 4);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: byte[] validity = new byte[2];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: ms.Read(validity' 0' 2);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: pk.VersionNumber.Equals(3)
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKey.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKeyEncryptedSessionKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKeyEncryptedSessionKey.cs,Parse,The following statement contains a magic number: byte[] keyID = new byte[8];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKeyEncryptedSessionKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKeyEncryptedSessionKey.cs,Parse,The following statement contains a magic number: Array.Copy(content' 1' keyID' 0' 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,PublicKeyEncryptedSessionKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.PublicKeyEncryptedSessionKey.cs,Parse,The following statement contains a magic number: pkesk.PublicKeyAlgorithm = (PublicKeyAlgorithm)content[9];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: s2kUsage == 255 || s2kUsage == 254
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: s2kUsage == 255 || s2kUsage == 254
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: sk.CheckSum = new byte[2];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,SecretKey,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.SecretKey.cs,Parse,The following statement contains a magic number: ms.Read(sk.CheckSum' 0' 2);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: !next.Equals(5)
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: sig.VersionNumber.Equals(3)
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: byte[] hashedsublengthbytes = new byte[2];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: ms.Read(hashedsublengthbytes' 0' 2);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: ms.Position < 5 + hashedsublength
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: byte[] unhashedsublengthbytes = new byte[2];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: ms.Read(unhashedsublengthbytes' 0' 2);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: sig.VersionNumber.Equals(4)
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: sig.QuickCheck = new byte[2];
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: ms.Read(sig.QuickCheck' 0' 2);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,Parse,The following statement contains a magic number: short length = (short)((Converter.ToShort(new byte[2] { first' second }) + 7) / 8);
Magic Number,ActiveUp.Net.Security.OpenPGP.Packets,Signature,D:\research\architectureSmells\repos1\slavat_MailSystem.NET\Class Library\ActiveUp.Net.OpenPGP\OpenPGP.Packets.Signature.cs,GetNextSignatureSubPacket,The following statement contains a magic number: next < 192
