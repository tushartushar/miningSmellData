Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RealismOverhaul,AdjustableCoMShifter,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\AdjustableCoMShifter.cs,UpdateCoM,The length of the statement  "                comString = part.CoMOffset.x.ToString("N3") + "'" + part.CoMOffset.y.ToString("N3") + "'" + part.CoMOffset.z.ToString("N3"); " is 124.
Magic Number,RealismOverhaul,ModuleROSolarPanel,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\ModuleROSolarPanel.cs,CalculateRates,The following statement contains a magic number: solarEfficiency = timeEfficEvaluated * 100;
Magic Number,RealismOverhaul,ModuleROSolarPanel,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\ModuleROSolarPanel.cs,CalculateRates,The following statement contains a magic number: solarOutputPe = Math.Round(_getModifier(currentPeMeters) * currentOutput * 1000' 2).ToString() + " Watts";
Magic Number,RealismOverhaul,ModuleROSolarPanel,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\ModuleROSolarPanel.cs,CalculateRates,The following statement contains a magic number: solarOutputPe = Math.Round(_getModifier(currentPeMeters) * currentOutput * 1000' 2).ToString() + " Watts";
Magic Number,RealismOverhaul,ModuleROSolarPanel,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\ModuleROSolarPanel.cs,CalculateRates,The following statement contains a magic number: solarOutputAp = Math.Round(_getModifier(currentApMeters) * currentOutput * 1000' 2).ToString() + " Watts";
Magic Number,RealismOverhaul,ModuleROSolarPanel,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\ModuleROSolarPanel.cs,CalculateRates,The following statement contains a magic number: solarOutputAp = Math.Round(_getModifier(currentApMeters) * currentOutput * 1000' 2).ToString() + " Watts";
Magic Number,RealismOverhaul,ModuleROSolarPanel,D:\research\architectureSmells\repos\KSP-RO_RealismOverhaul\Source\ModuleROSolarPanel.cs,_getModifier,The following statement contains a magic number: return (1 / Math.Pow(AU' 2));
