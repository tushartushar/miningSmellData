Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ClaudiaIDE,ClaudiaIdePackage,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIdePackage.cs,ChangeImage,Cyclomatic complexity of the method is 11
Complex Method,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,SetCanvasBackground,Cyclomatic complexity of the method is 8
Long Statement,ClaudiaIDE,ClaudiaIdePackage,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIdePackage.cs,ChangeImage,The length of the statement  "                    var docktargets = rRootGrid.Descendants<DependencyObject>().Where(x=>x.GetType().FullName == "Microsoft.VisualStudio.PlatformUI.Shell.Controls.DockTarget"); " is 156.
Long Statement,ClaudiaIDE,SildeShowImageProvider,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ImageProvider\SildeShowImageProvider.cs,GetImagesFromDirectory,The length of the statement  "            return new ImageFiles { Extensions = _setting.Extensions' ImageDirectoryPath = _setting.BackgroundImagesDirectoryAbsolutePath }; " is 128.
Long Statement,ClaudiaIDE,ImageFiles,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ImageProvider\SildeShowImageProvider.cs,GetEnumerator,The length of the statement  "            if (string.IsNullOrEmpty(Extensions) || string.IsNullOrEmpty(ImageDirectoryPath) || !Directory.Exists(ImageDirectoryPath)) " is 122.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,SetCanvasBackground,The length of the statement  "                if (!string.IsNullOrEmpty(objname) && (objname.Equals("RootGrid"' StringComparison.OrdinalIgnoreCase) || objname.Equals("MainWindow"' StringComparison.OrdinalIgnoreCase))) " is 171.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,SetCanvasBackground,The length of the statement  "                if (_isRootWindow && refd.FullName.Equals("Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView"' StringComparison.OrdinalIgnoreCase)) " is 143.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,SetCanvasBackground,The length of the statement  "                if (refd.FullName.Equals("Microsoft.VisualStudio.Editor.Implementation.WpfMultiViewHost"' StringComparison.OrdinalIgnoreCase)) " is 126.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,SetCanvasBackground,The length of the statement  "                else if (refd.FullName.Equals("Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextView"' StringComparison.OrdinalIgnoreCase)) " is 131.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,IsMainWindow,The length of the statement  "            if (result.GetType().FullName.Equals("Microsoft.VisualStudio.Editor.Implementation.WpfMultiViewHost"' StringComparison.OrdinalIgnoreCase) || " is 140.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,IsMainWindow,The length of the statement  "                result.GetType().FullName.Equals("Microsoft.VisualStudio.Text.Editor.Implementation.WpfTextViewHost"' StringComparison.OrdinalIgnoreCase)) " is 138.
Long Statement,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,IsMainWindow,The length of the statement  "            if (result.GetType().FullName.Equals("Microsoft.VisualStudio.PlatformUI.MainWindow"' StringComparison.OrdinalIgnoreCase)) " is 121.
Long Statement,ClaudiaIDE.Helpers,ImageSourceAnimator,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Helpers\ImageSourceAnimator.cs,AnimateImageSourceChange,The length of the statement  "                var fadeInAnimation = new DoubleAnimation(0d' animationParameters.TargetOpacity' animationParameters.FadeTime) { AutoReverse = false }; " is 135.
Long Statement,ClaudiaIDE.Helpers,ImageSourceAnimator,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Helpers\ImageSourceAnimator.cs,AnimateImageSourceChange,The length of the statement  "                var fadeInAnimation = new DoubleAnimation(0d' animationParameters.TargetOpacity' animationParameters.FadeTime) { AutoReverse = false }; " is 135.
Long Statement,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,LoadAsync,The length of the statement  "            Microsoft.VisualStudio.Shell.IAsyncServiceProvider asyncServiceProvider = await ((Microsoft.VisualStudio.Shell.AsyncPackage)ServiceProvider).GetServiceAsync(typeof(Microsoft.VisualStudio.Shell.Interop.SAsyncServiceProvider)) as Microsoft.VisualStudio.Shell.IAsyncServiceProvider; " is 279.
Long Statement,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,Load,The length of the statement  "            BackgroundImagesDirectoryAbsolutePath = Setting.ToFullPath((string)props.Item("BackgroundImageDirectoryAbsolutePath").Value' DefaultBackgroundFolder); " is 150.
Long Statement,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,Load,The length of the statement  "            BackgroundImageAbsolutePath = Setting.ToFullPath((string)props.Item("BackgroundImageAbsolutePath").Value' DefaultBackgroundImage); " is 130.
Long Statement,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,Deserialize,The length of the statement  "            ret.BackgroundImagesDirectoryAbsolutePath = ToFullPath(ret.BackgroundImagesDirectoryAbsolutePath' DefaultBackgroundFolder); " is 123.
Complex Conditional,ClaudiaIDE.Helpers,Utils,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Helpers\Utils.cs,EnsureMaxWidthHeight,The conditional expression  "maxWidth > 0 && maxHeight > 0                  && original.PixelWidth > maxWidth && original.PixelHeight > maxHeight"  is complex.
Empty Catch Block,ClaudiaIDE,ClaudiaIdePackage,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIdePackage.cs,InitializeAsync,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIdePackage,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIdePackage.cs,InvokeChangeImage,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIdePackage,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIdePackage.cs,ChangeImage,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,ClaudiaIDE,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,InvokeChangeImage,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,ChangeImage,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,ChangeImage,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,RefreshBackground,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,RefreshBackground,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,FindWpfTextView,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,SetBackgroundToTransparent,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE.Options,ClaudiaIdeOptionPageGrid,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Options\ClaudiaIdeOptionPageGrid.cs,OnApply,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE.Options,BrowseFile,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Options\ClaudiaIdeOptionPageGrid.cs,EditValue,The method has an empty catch block.
Empty Catch Block,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,OnApplyChanged,The method has an empty catch block.
Magic Number,ClaudiaIDE,ClaudiaIdePackage,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIdePackage.cs,ChangeImage,The following statement contains a magic number: Grid.SetRowSpan(rImageControl' 4);
Magic Number,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,ChangeImage,The following statement contains a magic number: Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.Run(async () =>                  {                      await Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.SwitchToMainThreadAsync();                      try                      {                          if (_isRootWindow)                          {                              var grid = new Grid()                              {                                  Name = "ClaudiaIdeImage"'                                  HorizontalAlignment = HorizontalAlignment.Stretch'                                  VerticalAlignment = VerticalAlignment.Stretch'                                  IsHitTestVisible = false                              };                              var ni = new Image()                              {                                  Source = newimage'                                  Stretch = _settings.ImageStretch.ConvertTo()'                                  HorizontalAlignment = _settings.PositionHorizon.ConvertToHorizontalAlignment()'                                  VerticalAlignment = _settings.PositionVertical.ConvertToVerticalAlignment()'                                  Opacity = opacity'                                  IsHitTestVisible = false                              };                              grid.Children.Insert(0' ni);                              Grid.SetRowSpan(grid' 3);                              Grid.SetColumnSpan(grid' 3);                              var p = VisualTreeHelper.GetParent(_wpfTextViewHost) as Grid;                              if(p != null)                              {                                  foreach (var c in p.Children)                                  {                                      if ((c as Grid)?.Name == "ClaudiaIdeImage")                                      {                                          p.Children.Remove(c as UIElement);                                          break;                                      }                                  }                                  p.Children.Insert(0' grid);                              }                         }                          else                          {                              var nib = new ImageBrush(newimage)                              {                                  Stretch = _settings.ImageStretch.ConvertTo()'                                  AlignmentX = _settings.PositionHorizon.ConvertTo()'                                  AlignmentY = _settings.PositionVertical.ConvertTo()'                                  Opacity = opacity                              };                              _wpfTextViewHost.SetValue(Panel.BackgroundProperty' nib);                          }                          _hasImage = true;                      }                      catch                      {                      }                  });
Magic Number,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,ChangeImage,The following statement contains a magic number: Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.Run(async () =>                  {                      await Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.SwitchToMainThreadAsync();                      try                      {                          if (_isRootWindow)                          {                              var grid = new Grid()                              {                                  Name = "ClaudiaIdeImage"'                                  HorizontalAlignment = HorizontalAlignment.Stretch'                                  VerticalAlignment = VerticalAlignment.Stretch'                                  IsHitTestVisible = false                              };                              var ni = new Image()                              {                                  Source = newimage'                                  Stretch = _settings.ImageStretch.ConvertTo()'                                  HorizontalAlignment = _settings.PositionHorizon.ConvertToHorizontalAlignment()'                                  VerticalAlignment = _settings.PositionVertical.ConvertToVerticalAlignment()'                                  Opacity = opacity'                                  IsHitTestVisible = false                              };                              grid.Children.Insert(0' ni);                              Grid.SetRowSpan(grid' 3);                              Grid.SetColumnSpan(grid' 3);                              var p = VisualTreeHelper.GetParent(_wpfTextViewHost) as Grid;                              if(p != null)                              {                                  foreach (var c in p.Children)                                  {                                      if ((c as Grid)?.Name == "ClaudiaIdeImage")                                      {                                          p.Children.Remove(c as UIElement);                                          break;                                      }                                  }                                  p.Children.Insert(0' grid);                              }                         }                          else                          {                              var nib = new ImageBrush(newimage)                              {                                  Stretch = _settings.ImageStretch.ConvertTo()'                                  AlignmentX = _settings.PositionHorizon.ConvertTo()'                                  AlignmentY = _settings.PositionVertical.ConvertTo()'                                  Opacity = opacity                              };                              _wpfTextViewHost.SetValue(Panel.BackgroundProperty' nib);                          }                          _hasImage = true;                      }                      catch                      {                      }                  });
Magic Number,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,RefreshBackground,The following statement contains a magic number: Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.Run(async () =>                  {                      await Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.SwitchToMainThreadAsync();                      try                      {                          var c = (_wpfTextViewHost as UIElement).Opacity;                          (_wpfTextViewHost as UIElement).Opacity = c < 0.01 ? 0.01 : c - 0.01;                          (_wpfTextViewHost as UIElement).Opacity = c;                      }                      catch                      {                      }                  });
Magic Number,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,RefreshBackground,The following statement contains a magic number: Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.Run(async () =>                  {                      await Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.SwitchToMainThreadAsync();                      try                      {                          var c = (_wpfTextViewHost as UIElement).Opacity;                          (_wpfTextViewHost as UIElement).Opacity = c < 0.01 ? 0.01 : c - 0.01;                          (_wpfTextViewHost as UIElement).Opacity = c;                      }                      catch                      {                      }                  });
Magic Number,ClaudiaIDE,ClaudiaIDE,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\ClaudiaIDE.cs,RefreshBackground,The following statement contains a magic number: Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.Run(async () =>                  {                      await Microsoft.VisualStudio.Shell.ThreadHelper.JoinableTaskFactory.SwitchToMainThreadAsync();                      try                      {                          var c = (_wpfTextViewHost as UIElement).Opacity;                          (_wpfTextViewHost as UIElement).Opacity = c < 0.01 ? 0.01 : c - 0.01;                          (_wpfTextViewHost as UIElement).Opacity = c;                      }                      catch                      {                      }                  });
Magic Number,ClaudiaIDE.Helpers,Utils,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Helpers\Utils.cs,ConvertToDpi96,The following statement contains a magic number: var dpi = 96;
Magic Number,ClaudiaIDE.Helpers,Utils,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Helpers\Utils.cs,ConvertToDpi96,The following statement contains a magic number: var stride = width * 4;
Magic Number,ClaudiaIDE.Options,ClaudiaIdeOptionPageGrid,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Options\ClaudiaIdeOptionPageGrid.cs,ClaudiaIdeOptionPageGrid,The following statement contains a magic number: Opacity = 0.35;
Magic Number,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,Setting,The following statement contains a magic number: Opacity = 0.35;
Magic Number,ClaudiaIDE.Settings,Setting,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,Setting,The following statement contains a magic number: UpdateImageInterval = TimeSpan.FromMinutes(30);
Missing Default,ClaudiaIDE.Settings,ImageStretchConverter,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,ConvertTo,The following switch statement is missing a default case: switch(source)              {                  case ImageStretch.Fill:                      return System.Windows.Media.Stretch.Fill;                  case ImageStretch.None:                      return System.Windows.Media.Stretch.None;                  case ImageStretch.Uniform:                      return System.Windows.Media.Stretch.Uniform;                  case ImageStretch.UniformToFill:                      return System.Windows.Media.Stretch.UniformToFill;              }
Missing Default,ClaudiaIDE.Settings,PositionConverter,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,ConvertTo,The following switch statement is missing a default case: switch (source)              {                  case PositionV.Bottom:                      return System.Windows.Media.AlignmentY.Bottom;                  case PositionV.Center:                      return System.Windows.Media.AlignmentY.Center;                  case PositionV.Top:                      return System.Windows.Media.AlignmentY.Top;              }
Missing Default,ClaudiaIDE.Settings,PositionConverter,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,ConvertToVerticalAlignment,The following switch statement is missing a default case: switch (source)              {                  case PositionV.Bottom:                      return System.Windows.VerticalAlignment.Bottom;                  case PositionV.Center:                      return System.Windows.VerticalAlignment.Center;                  case PositionV.Top:                      return System.Windows.VerticalAlignment.Top;              }
Missing Default,ClaudiaIDE.Settings,PositionConverter,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,ConvertTo,The following switch statement is missing a default case: switch (source)              {                  case PositionH.Left:                      return System.Windows.Media.AlignmentX.Left;                  case PositionH.Center:                      return System.Windows.Media.AlignmentX.Center;                  case PositionH.Right:                      return System.Windows.Media.AlignmentX.Right;              }
Missing Default,ClaudiaIDE.Settings,PositionConverter,D:\research\architectureSmells\repos\buchizo_ClaudiaIDE\ClaudiaIDE\Settings\Setting.cs,ConvertToHorizontalAlignment,The following switch statement is missing a default case: switch (source)              {                  case PositionH.Left:                      return System.Windows.HorizontalAlignment.Left;                  case PositionH.Center:                      return System.Windows.HorizontalAlignment.Center;                  case PositionH.Right:                      return System.Windows.HorizontalAlignment.Right;              }
