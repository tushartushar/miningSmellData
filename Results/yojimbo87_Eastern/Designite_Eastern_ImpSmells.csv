Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Eastern,ORecord,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\API\ORecord.cs,ToObject,Cyclomatic complexity of the method is 11
Complex Method,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,SerializeValue,Cyclomatic complexity of the method is 20
Complex Method,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseFieldName,Cyclomatic complexity of the method is 12
Complex Method,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,Cyclomatic complexity of the method is 15
Complex Method,Eastern.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Command.cs,Response,Cyclomatic complexity of the method is 11
Long Parameter List,Eastern,DatabasePool,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\DatabasePool.cs,DatabasePool,The method has 8 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword' poolSize' alias
Long Parameter List,Eastern,EasternClient,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\EasternClient.cs,CreateDatabasePool,The method has 8 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword' poolSize' alias
Long Parameter List,Eastern,ODatabase,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\API\ODatabase.cs,ODatabase,The method has 6 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword
Long Parameter List,Eastern,ODatabase,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\API\ODatabase.cs,CreateRecord,The method has 5 parameters. Parameters: segmentID' clusterID' content' type' isAsynchronous
Long Parameter List,Eastern,ODatabase,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\API\ODatabase.cs,UpdateRecord,The method has 5 parameters. Parameters: orid' content' version' type' isAsynchronous
Long Parameter List,Eastern.Connection,Database,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Database.cs,Database,The method has 6 parameters. Parameters: hostname' port' databaseName' databaseType' userName' userPassword
Long Parameter List,Eastern.Connection,Database,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Database.cs,CreateRecord,The method has 5 parameters. Parameters: segmentID' clusterID' content' type' isAsynchronous
Long Parameter List,Eastern.Connection,Database,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Database.cs,UpdateRecord,The method has 5 parameters. Parameters: orid' content' version' type' isAsynchronous
Long Statement,Eastern,EasternClient,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\EasternClient.cs,CreateDatabasePool,The length of the statement  "                DatabasePool pool = new DatabasePool(hostname' port' databaseName' databaseType' userName' userPassword' poolSize' alias); " is 122.
Long Statement,Eastern,EasternClient,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\EasternClient.cs,GetDatabase,The length of the statement  "                        Database database = new Database(pool.Hostname' pool.Port' pool.DatabaseName' pool.DatabaseType' pool.UserName' pool.UserPassword); " is 131.
Long Statement,Eastern.Connection,Database,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Database.cs,CreateRecord,The length of the statement  "            return CreateRecord(segmentID' clusterID' RecordParser.SerializeObject(recordObject' objectType)' ORecordType.Document' isAsynchronous); " is 136.
Long Statement,Eastern.Connection,Database,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Database.cs,UpdateRecord,The length of the statement  "            return UpdateRecord(orid' RecordParser.SerializeObject(recordObject' objectType)' version' ORecordType.Document' isAsynchronous); " is 129.
Long Statement,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,SerializeObject,The length of the statement  "            serializedString += SerializeObject(objectToSerialize' objectType.GetProperties(BindingFlags.Public | BindingFlags.Instance)); " is 126.
Long Statement,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,The length of the statement  "                else if ((stringValue.Length > 2) && (stringValue[stringValue.Length - 1] == 't') || (stringValue[stringValue.Length - 1] == 'a')) " is 130.
Long Statement,Eastern.Protocol.Operations,DataClusterAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterAdd.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DATACLUSTER_ADD) }); " is 122.
Long Statement,Eastern.Protocol.Operations,DataClusterCount,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterCount.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DATACLUSTER_COUNT) }); " is 124.
Long Statement,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DATACLUSTER_DATARANGE) }); " is 128.
Long Statement,Eastern.Protocol.Operations,DataClusterRemove,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterRemove.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DATACLUSTER_REMOVE) }); " is 125.
Long Statement,Eastern.Protocol.Operations,DataSegmentAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataSegmentAdd.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DATASEGMENT_ADD) }); " is 122.
Long Statement,Eastern.Protocol.Operations,DataSegmentRemove,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataSegmentRemove.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DATASEGMENT_REMOVE) }); " is 125.
Long Statement,Eastern.Protocol.Operations,DbCountRecords,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbCountRecords.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.DB_COUNTRECORDS) }); " is 122.
Long Statement,Eastern.Protocol.Operations,DbCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbCreate.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "string"' Data = BinaryParser.ToArray(DatabaseType.ToString().ToLower()) }); " is 122.
Long Statement,Eastern.Protocol.Operations,DbCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbCreate.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "string"' Data = BinaryParser.ToArray(StorageType.ToString().ToLower()) }); " is 121.
Long Statement,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "string"' Data = BinaryParser.ToArray(DatabaseType.ToString().ToLower()) }); " is 122.
Long Statement,Eastern.Protocol.Operations,RecordCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordCreate.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.RECORD_CREATE) }); " is 120.
Long Statement,Eastern.Protocol.Operations,RecordDelete,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordDelete.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.RECORD_DELETE) }); " is 120.
Long Statement,Eastern.Protocol.Operations,RecordLoad,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordLoad.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)((IgnoreCache == true) ? 1 : 0)) }); " is 124.
Long Statement,Eastern.Protocol.Operations,RecordUpdate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordUpdate.cs,Request,The length of the statement  "            request.DataItems.Add(new DataItem() { Type = "byte"' Data = BinaryParser.ToArray((byte)OperationType.RECORD_UPDATE) }); " is 120.
Complex Conditional,Eastern,ORecord,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\API\ORecord.cs,ToObject,The conditional expression  "elementType.IsPrimitive ||                                              (elementType == typeof(string)) ||                                              (elementType == typeof(DateTime)) ||                                              (elementType == typeof(decimal)) ||                                              (elementType == typeof(ORID))"  is complex.
Complex Conditional,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseRecordID,The conditional expression  "(i < recordString.Length) && (recordString[i] != ''') && (recordString[i] != ')') && (recordString[i] != ']')"  is complex.
Complex Conditional,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,The conditional expression  "(i < recordString.Length) && (recordString[i] != ''') && (recordString[i] != ')') && (recordString[i] != ']')"  is complex.
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,Worker,The following statement contains a magic number: ReadBuffer = new byte[1024];
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,Initialize,The following statement contains a magic number: int bytesRead = Stream.Read(ReadBuffer' 0' 2);
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,Initialize,The following statement contains a magic number: ProtocolVersion = BinaryParser.ToShort(ReadBuffer.Take(2).ToArray());
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          buffer = new byte[4 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          Send(buffer);                          break;                      default:                          break;                  }
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          buffer = new byte[4 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          Send(buffer);                          break;                      default:                          break;                  }
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          buffer = new byte[4 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          Send(buffer);                          break;                      default:                          break;                  }
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          buffer = new byte[4 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          Send(buffer);                          break;                      default:                          break;                  }
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          buffer = new byte[4 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          Send(buffer);                          break;                      default:                          break;                  }
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: switch (item.Type)                  {                      case "byte":                      case "short":                      case "int":                      case "long":                          Send(item.Data);                          break;                      case "record":                          buffer = new byte[2 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 2);                          Buffer.BlockCopy(item.Data' 0' buffer' 2' item.Data.Length);                          Send(buffer);                          break;                      case "bytes":                      case "string":                      case "strings":                          buffer = new byte[4 + item.Data.Length];                          Buffer.BlockCopy(BinaryParser.ToArray(item.Data.Length)' 0' buffer' 0' 4);                          Buffer.BlockCopy(item.Data' 0' buffer' 4' item.Data.Length);                          Send(buffer);                          break;                      default:                          break;                  }
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ExecuteOperation,The following statement contains a magic number: response.SessionID = BinaryParser.ToInt(response.Data.Skip(1).Take(4).ToArray());
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ParseResponseError,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ParseResponseError,The following statement contains a magic number: int exceptionClassLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ParseResponseError,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ParseResponseError,The following statement contains a magic number: int exceptionMessageLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Connection,Worker,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Connection\Worker.cs,ParseResponseError,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,SerializeValue,The following statement contains a magic number: switch (Type.GetTypeCode(valueType))                  {                      case TypeCode.Empty:                          // null case is empty                          break;                      case TypeCode.Boolean:                          serializedString += value.ToString().ToLower();                          break;                      case TypeCode.Byte:                          serializedString += value.ToString() + "b";                          break;                      case TypeCode.Int16:                          serializedString += value.ToString() + "s";                          break;                      case TypeCode.Int32:                          serializedString += value.ToString();                          break;                      case TypeCode.Int64:                          serializedString += value.ToString() + "l";                          break;                      case TypeCode.Single:                          serializedString += ((float)value).ToString(CultureInfo.InvariantCulture) + "f";                          break;                      case TypeCode.Double:                          serializedString += ((double)value).ToString(CultureInfo.InvariantCulture) + "d";                          break;                      case TypeCode.Decimal:                          serializedString += ((decimal)value).ToString(CultureInfo.InvariantCulture) + "c";                          break;                      case TypeCode.DateTime:                          DateTime unixEpoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);                          serializedString += ((long)((DateTime)value - unixEpoch).TotalMilliseconds).ToString() + "t";                          break;                      case TypeCode.String:                      case TypeCode.Char:                          // strings must escape these characters:                          // " -> \"                          // \ -> \\                          string stringValue = value.ToString();                          // escape quotes                          stringValue = stringValue.Replace("\\"' "\\\\");                          // escape backslashes                          stringValue = stringValue.Replace("\""' "\\" + "\"");                            serializedString += "\"" + stringValue + "\"";                          break;                      case TypeCode.Object:                          if ((valueType.IsArray) || (valueType.IsGenericType))                          {                              serializedString += "[";                                IEnumerable collection = (IEnumerable)value;                                foreach (object val in collection)                              {                                  if (valueType.IsArray)                                  {                                      serializedString += SerializeValue(val);                                  }                                  else                                  {                                      serializedString += SerializeValue(val);                                  }                                    serializedString += "'";                              }                                // remove last comma from currently parsed collection                              if (serializedString[serializedString.Length - 1] == ''')                              {                                  serializedString = serializedString.Remove(serializedString.Length - 1);                              }                                serializedString += "]";                          }                          // if property is ORID type it needs to be serialized as ORID                          else if (valueType.IsClass && (valueType.Name == "ORID"))                           {                              serializedString += ((ORID)value).RID;                          }                          else if (valueType.IsClass)                          {                              serializedString += "(";                              serializedString += SerializeObject(value' valueType.GetProperties());                              serializedString += ")";                          }                          break;                      default:                          break;                  }
Magic Number,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseString,The following statement contains a magic number: i = i + 2;
Magic Number,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,The following statement contains a magic number: stringValue = stringValue.Substring(1' stringValue.Length - 2);
Magic Number,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,The following statement contains a magic number: int mod4 = stringValue.Length % 4;
Magic Number,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,The following statement contains a magic number: stringValue += new string('='' 4 - mod4);
Magic Number,Eastern.Protocol,RecordParser,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Parsers\RecordParser.cs,ParseValue,The following statement contains a magic number: (stringValue.Length > 2) && (stringValue[0] == '_') && (stringValue[stringValue.Length - 1] == '_')
Magic Number,Eastern.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Command.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Command.cs,Response,The following statement contains a magic number: switch (command.PayloadStatus)                      {                          case PayloadStatus.ResultSet:                              DtoRecord record = new DtoRecord();                                int contentLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                              record.Content = response.Data.Skip(offset).Take(contentLength).ToArray();                              offset += contentLength;                                record.Version = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                                record.Type = (ORecordType)BinaryParser.ToByte(response.Data.Skip(offset).Take(1).ToArray());                              offset += 1;                                ((List<DtoRecord>)command.Content).Add(record);                              break;                          case PayloadStatus.PreFetched:                              // TODO:                              break;                          default:                              break;                      }
Magic Number,Eastern.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Command.cs,Response,The following statement contains a magic number: switch (command.PayloadStatus)                      {                          case PayloadStatus.ResultSet:                              DtoRecord record = new DtoRecord();                                int contentLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                              record.Content = response.Data.Skip(offset).Take(contentLength).ToArray();                              offset += contentLength;                                record.Version = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                                record.Type = (ORecordType)BinaryParser.ToByte(response.Data.Skip(offset).Take(1).ToArray());                              offset += 1;                                ((List<DtoRecord>)command.Content).Add(record);                              break;                          case PayloadStatus.PreFetched:                              // TODO:                              break;                          default:                              break;                      }
Magic Number,Eastern.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Command.cs,Response,The following statement contains a magic number: switch (command.PayloadStatus)                      {                          case PayloadStatus.ResultSet:                              DtoRecord record = new DtoRecord();                                int contentLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                              record.Content = response.Data.Skip(offset).Take(contentLength).ToArray();                              offset += contentLength;                                record.Version = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                                record.Type = (ORecordType)BinaryParser.ToByte(response.Data.Skip(offset).Take(1).ToArray());                              offset += 1;                                ((List<DtoRecord>)command.Content).Add(record);                              break;                          case PayloadStatus.PreFetched:                              // TODO:                              break;                          default:                              break;                      }
Magic Number,Eastern.Protocol.Operations,Command,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Command.cs,Response,The following statement contains a magic number: switch (command.PayloadStatus)                      {                          case PayloadStatus.ResultSet:                              DtoRecord record = new DtoRecord();                                int contentLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                              record.Content = response.Data.Skip(offset).Take(contentLength).ToArray();                              offset += contentLength;                                record.Version = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());                              offset += 4;                                record.Type = (ORecordType)BinaryParser.ToByte(response.Data.Skip(offset).Take(1).ToArray());                              offset += 1;                                ((List<DtoRecord>)command.Content).Add(record);                              break;                          case PayloadStatus.PreFetched:                              // TODO:                              break;                          default:                              break;                      }
Magic Number,Eastern.Protocol.Operations,Count,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Count.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,Count,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Count.cs,Response,The following statement contains a magic number: recordsCount = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,Count,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Count.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,DataClusterAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterAdd.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DataClusterAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterAdd.cs,Response,The following statement contains a magic number: clusterID = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DataClusterAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterAdd.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DataClusterCount,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterCount.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DataClusterCount,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterCount.cs,Response,The following statement contains a magic number: recordsCount = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,DataClusterCount,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterCount.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Response,The following statement contains a magic number: long[] dataRange = new long[2];
Magic Number,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Response,The following statement contains a magic number: dataRange[0] = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Response,The following statement contains a magic number: dataRange[1] = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,DataClusterDataRange,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterDataRange.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,DataClusterRemove,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataClusterRemove.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DataSegmentAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataSegmentAdd.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DataSegmentAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataSegmentAdd.cs,Response,The following statement contains a magic number: segmentID = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DataSegmentAdd,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataSegmentAdd.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DataSegmentRemove,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DataSegmentRemove.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Connect.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Connect.cs,Response,The following statement contains a magic number: sessionID = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,Connect,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\Connect.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DbCountRecords,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbCountRecords.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DbCountRecords,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbCountRecords.cs,Response,The following statement contains a magic number: databaseRecordsCount = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,DbCountRecords,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbCountRecords.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,DbExist,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbExist.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: database.ClustersCount = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: int clusterNameLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: cluster.ID = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: int clusterTypeLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: cluster.DataSegmentID = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DbReload,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbReload.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DbSize,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbSize.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DbSize,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbSize.cs,Response,The following statement contains a magic number: databaseSize = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,DbSize,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbSize.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: database.SessionID = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: database.ClustersCount = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: int clusterNameLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: cluster.ID = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: int clusterTypeLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: cluster.DataSegmentID = BinaryParser.ToShort(response.Data.Skip(offset).Take(2).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 2;
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: int clusterConfigLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,DbOpen,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\DbOpen.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,RecordCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordCreate.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,RecordCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordCreate.cs,Response,The following statement contains a magic number: record.ORID.ClusterPosition = BinaryParser.ToLong(response.Data.Skip(offset).Take(8).ToArray());
Magic Number,Eastern.Protocol.Operations,RecordCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordCreate.cs,Response,The following statement contains a magic number: offset += 8;
Magic Number,Eastern.Protocol.Operations,RecordCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordCreate.cs,Response,The following statement contains a magic number: record.Version = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,RecordCreate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordCreate.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,RecordDelete,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordDelete.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,RecordLoad,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordLoad.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,RecordLoad,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordLoad.cs,Response,The following statement contains a magic number: int contentLength = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,RecordLoad,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordLoad.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,RecordLoad,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordLoad.cs,Response,The following statement contains a magic number: record.Version = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,RecordLoad,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordLoad.cs,Response,The following statement contains a magic number: offset += 4;
Magic Number,Eastern.Protocol.Operations,RecordUpdate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordUpdate.cs,Response,The following statement contains a magic number: int offset = 5;
Magic Number,Eastern.Protocol.Operations,RecordUpdate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordUpdate.cs,Response,The following statement contains a magic number: recordVersion = BinaryParser.ToInt(response.Data.Skip(offset).Take(4).ToArray());
Magic Number,Eastern.Protocol.Operations,RecordUpdate,D:\research\architectureSmells\repos\yojimbo87_Eastern\src\Eastern\Protocol\Operations\RecordUpdate.cs,Response,The following statement contains a magic number: offset += 4;
