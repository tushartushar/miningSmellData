Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,CalcPreferredCellSizes,The method has 141 lines of code.
Long Method,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The method has 123 lines of code.
Long Method,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The method has 108 lines of code.
Complex Method,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,GetPlacementInRect,Cyclomatic complexity of the method is 8
Complex Method,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,DelayedResizeRequest,Cyclomatic complexity of the method is 9
Complex Method,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,RegisterChild,Cyclomatic complexity of the method is 8
Complex Method,Xwt,Window,C:\repos\mono_xwt\Xwt\Xwt\Window.cs,AdjustSize,Cyclomatic complexity of the method is 14
Complex Method,Xwt,Box,C:\repos\mono_xwt\Xwt\Xwt\Box.cs,Pack,Cyclomatic complexity of the method is 8
Complex Method,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,CalcPreferredCellSizes,Cyclomatic complexity of the method is 28
Complex Method,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,CalcCellSizes,Cyclomatic complexity of the method is 14
Complex Method,Xwt,TreeViewStatus,C:\repos\mono_xwt\Xwt\Xwt\TreeViewStatus.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,Xwt,FormattedText,C:\repos\mono_xwt\Xwt\Xwt\FormattedText.cs,PopSpan,Cyclomatic complexity of the method is 8
Complex Method,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,LoadImage,Cyclomatic complexity of the method is 9
Complex Method,Xwt.Drawing,NativeImageRef,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,LoadForToolkit,Cyclomatic complexity of the method is 9
Complex Method,Xwt.Drawing,TextLayout,C:\repos\mono_xwt\Xwt\Xwt.Drawing\TextLayout.cs,InitForToolkit,Cyclomatic complexity of the method is 10
Complex Method,Xwt.Drawing,TextLayoutData,C:\repos\mono_xwt\Xwt\Xwt.Drawing\TextLayout.cs,InitLayout,Cyclomatic complexity of the method is 9
Complex Method,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,OnDraw,Cyclomatic complexity of the method is 9
Long Parameter List,Xwt.Backends,DragStartData,C:\repos\mono_xwt\Xwt\Xwt.Backends\IWidgetBackend.cs,DragStartData,The method has 5 parameters. Parameters: data' action' imageBackend' hotX' hotY
Long Parameter List,Xwt.Backends,ImageBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\ImageBackendHandler.cs,CopyBitmapArea,The method has 8 parameters. Parameters: srcHandle' srcX' srcY' width' height' destHandle' destX' destY
Long Parameter List,Xwt.Backends,ImageBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\ImageBackendHandler.cs,CropBitmap,The method has 5 parameters. Parameters: handle' srcX' srcY' width' height
Long Parameter List,Xwt.Backends,ToolkitEngineBackend,C:\repos\mono_xwt\Xwt\Xwt.Backends\ToolkitEngineBackend.cs,RenderImage,The method has 5 parameters. Parameters: nativeWidget' nativeContext' img' x' y
Long Parameter List,Xwt.Backends,GradientBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\GradientBackendHandler.cs,CreateRadial,The method has 6 parameters. Parameters: cx0' cy0' radius0' cx1' cy1' radius1
Long Parameter List,Xwt.Backends,FontBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\FontBackendHandler.cs,Create,The method has 5 parameters. Parameters: fontName' size' style' weight' stretch
Long Parameter List,Xwt.Backends,FontBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\FontBackendHandler.cs,WithSettings,The method has 5 parameters. Parameters: handle' size' style' weight' stretch
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,Arc,The method has 6 parameters. Parameters: backend' xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,ArcNegative,The method has 6 parameters. Parameters: backend' xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,CurveTo,The method has 7 parameters. Parameters: backend' x1' y1' x2' y2' x3' y3
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,Rectangle,The method has 5 parameters. Parameters: backend' x' y' width' height
Long Parameter List,Xwt.Backends,DrawingPathBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\DrawingPathBackendHandler.cs,RelCurveTo,The method has 7 parameters. Parameters: backend' dx1' dy1' dx2' dy2' dx3' dy3
Long Parameter List,Xwt.Backends,IScrollAdjustmentBackend,C:\repos\mono_xwt\Xwt\Xwt.Backends\IScrollAdjustmentBackend.cs,SetRange,The method has 6 parameters. Parameters: lowerValue' upperValue' pageSize' pageIncrement' stepIncrement' value
Long Parameter List,Xwt,Box,C:\repos\mono_xwt\Xwt\Xwt\Box.cs,PackStart,The method has 9 parameters. Parameters: widget' expand' vpos' hpos' marginLeft' marginTop' marginRight' marginBottom' margin
Long Parameter List,Xwt,Box,C:\repos\mono_xwt\Xwt\Xwt\Box.cs,PackEnd,The method has 9 parameters. Parameters: widget' expand' hpos' vpos' marginLeft' marginTop' marginRight' marginBottom' margin
Long Parameter List,Xwt,Box,C:\repos\mono_xwt\Xwt\Xwt\Box.cs,Pack,The method has 10 parameters. Parameters: widget' expand' vpos' hpos' marginLeft' marginTop' marginRight' marginBottom' margin' ptype
Long Parameter List,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,Attach,The method has 5 parameters. Parameters: widget' left' top' xOptions' yOptions
Long Parameter List,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,Attach,The method has 5 parameters. Parameters: widget' left' right' top' bottom
Long Parameter List,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,Add,The method has 14 parameters. Parameters: widget' left' top' rowspan' colspan' hexpand' vexpand' hpos' vpos' marginLeft' marginTop' marginRight' marginBottom' margin
Long Parameter List,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,Attach,The method has 7 parameters. Parameters: widget' left' right' top' bottom' xOptions' yOptions
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 6 parameters. Parameters: column1' value1' column2' value2' column3' value3
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 8 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 10 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4' column5' value5
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 12 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 14 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 16 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7' column8' value8
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 18 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7' column8' value8' column9' value9
Long Parameter List,Xwt,TreeNavigator,C:\repos\mono_xwt\Xwt\Xwt\TreeNavigator.cs,SetValues,The method has 20 parameters. Parameters: column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7' column8' value8' column9' value9' column10' value10
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 5 parameters. Parameters: row' column1' value1' column2' value2
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 7 parameters. Parameters: row' column1' value1' column2' value2' column3' value3
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 9 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 11 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4' column5' value5
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 13 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 15 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 17 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7' column8' value8
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 19 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7' column8' value8' column9' value9
Long Parameter List,Xwt,ListStore,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,SetValues,The method has 21 parameters. Parameters: row' column1' value1' column2' value2' column3' value3' column4' value4' column5' value5' column6' value6' column7' value7' column8' value8' column9' value9' column10' value10
Long Parameter List,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,Confirm,The method has 5 parameters. Parameters: window' primaryText' secondaryText' icon' button
Long Parameter List,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,Confirm,The method has 5 parameters. Parameters: primaryText' secondaryText' icon' button' confirmIsDefault
Long Parameter List,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,AskQuestion,The method has 5 parameters. Parameters: primaryText' secondaryText' icon' defaultButton' buttons
Long Parameter List,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,GenericAlert,The method has 5 parameters. Parameters: parent' icon' primaryText' secondaryText' buttons
Long Parameter List,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,GenericAlert,The method has 6 parameters. Parameters: parent' icon' primaryText' secondaryText' defaultButton' buttons
Long Parameter List,Xwt,KeyEventArgs,C:\repos\mono_xwt\Xwt\Xwt\KeyEventArgs.cs,KeyEventArgs,The method has 5 parameters. Parameters: key' nativeKeyCode' modifiers' isRepeat' timestamp
Long Parameter List,Xwt,Toolkit,C:\repos\mono_xwt\Xwt\Xwt\Toolkit.cs,RenderImage,The method has 5 parameters. Parameters: nativeWidget' nativeContext' img' x' y
Long Parameter List,Xwt,DefaultScrollAdjustmentBackend,C:\repos\mono_xwt\Xwt\Xwt\ScrollAdjustment.cs,SetRange,The method has 6 parameters. Parameters: lowerValue' upperValue' pageSize' pageIncrement' stepIncrement' value
Long Parameter List,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,ParseImageHints,The method has 5 parameters. Parameters: baseName' fileName' ext' scale' tags
Long Parameter List,Xwt.Drawing,Context,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Context.cs,DrawImage,The method has 6 parameters. Parameters: img' x' y' width' height' alpha
Long Parameter List,Xwt.Drawing,RadialGradient,C:\repos\mono_xwt\Xwt\Xwt.Drawing\RadialGradient.cs,RadialGradient,The method has 6 parameters. Parameters: cx0' cy0' radius0' cx1' cy1' radius1
Long Parameter List,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Matrix,The method has 6 parameters. Parameters: m11' m12' m21' m22' offsetX' offsetY
Long Parameter List,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Append,The method has 6 parameters. Parameters: m11' m12' m21' m22' offsetX' offsetY
Long Parameter List,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Prepend,The method has 6 parameters. Parameters: m11' m12' m21' m22' offsetX' offsetY
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,Arc,The method has 5 parameters. Parameters: xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,ArcNegative,The method has 5 parameters. Parameters: xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,CurveTo,The method has 6 parameters. Parameters: x1' y1' x2' y2' x3' y3
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The method has 5 parameters. Parameters: x' y' width' height' radius
Long Parameter List,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RelCurveTo,The method has 6 parameters. Parameters: dx1' dy1' dx2' dy2' dx3' dy3
Long Parameter List,Xwt.Drawing,BitmapImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\BitmapImage.cs,CopyArea,The method has 7 parameters. Parameters: srcX' srcY' width' height' dest' destX' destY
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Arc,The method has 6 parameters. Parameters: backend' xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,ArcNegative,The method has 6 parameters. Parameters: backend' xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,CurveTo,The method has 7 parameters. Parameters: backend' x1' y1' x2' y2' x3' y3
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Rectangle,The method has 5 parameters. Parameters: backend' x' y' width' height
Long Parameter List,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,RelCurveTo,The method has 7 parameters. Parameters: backend' dx1' dy1' dx2' dy2' dx3' dy3
Long Parameter List,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CalcSectionSize,The method has 5 parameters. Parameters: frame' sec' totalVariable' stretchableSize' remainingVariable
Long Parameter List,Xwt.Motion,Animation,C:\repos\mono_xwt\Xwt\Xwt.Motion\Animation.cs,Animation,The method has 5 parameters. Parameters: callback' start' end' easing' finished
Long Parameter List,Xwt.Motion,Animation,C:\repos\mono_xwt\Xwt\Xwt.Motion\Animation.cs,Commit,The method has 7 parameters. Parameters: owner' name' rate' length' easing' finished' repeat
Long Parameter List,Xwt.Motion,Animation,C:\repos\mono_xwt\Xwt\Xwt.Motion\Animation.cs,AddConcurrent,The method has 6 parameters. Parameters: callback' start' end' easing' beginAt' finishAt
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\mono_xwt\Xwt\Xwt.Motion\AnimationExtensions.cs,AnimateKinetic,The method has 6 parameters. Parameters: self' name' callback' velocity' drag' finished
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\mono_xwt\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 8 parameters. Parameters: self' name' animation' rate' length' easing' finished' repeat
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\mono_xwt\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 10 parameters. Parameters: self' name' callback' start' end' rate' length' easing' finished' repeat
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\mono_xwt\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 8 parameters. Parameters: self' name' callback' rate' length' easing' finished' repeat
Long Parameter List,Xwt.Motion,AnimationExtensions,C:\repos\mono_xwt\Xwt\Xwt.Motion\AnimationExtensions.cs,Animate,The method has 9 parameters. Parameters: self' name' transform' callback' rate' length' easing' finished' repeat
Long Identifier,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,,The length of the parameter delayedSizeNegotiationRequested is 31.
Long Identifier,Xwt,Toolkit,C:\repos\mono_xwt\Xwt\Xwt\Toolkit.cs,,The length of the parameter VectorImageRecorderContextHandler is 33.
Long Statement,Xwt.Backends,ToolkitEngineBackend,C:\repos\mono_xwt\Xwt\Xwt.Backends\ToolkitEngineBackend.cs,CreateBackendForFrontend,The length of the statement  "					throw new InvalidOperationException ("Backend type for frontend '" + frontendType + "' is not a IBackend implementation"); " is 122.
Long Statement,Xwt.Backends,ToolkitEngineBackend,C:\repos\mono_xwt\Xwt\Xwt.Backends\ToolkitEngineBackend.cs,CreateBackend,The length of the statement  "				throw new InvalidOperationException ("Invalid backend type. Expected '" + backendType + "' found '" + res.GetType () + "'"); " is 124.
Long Statement,Xwt.Backends,FontBackendHandler,C:\repos\mono_xwt\Xwt\Xwt.Backends\FontBackendHandler.cs,GetDefaultSansSerifFontNames,The length of the statement  "				return "-apple-system-font' .AppleSystemUIFont' Helvetica Neue' Helvetica' Lucida Grande' Lucida Sans Unicode' Arial' sans-serif"; " is 130.
Long Statement,Xwt.Backends,EventHost,C:\repos\mono_xwt\Xwt\Xwt.Backends\EventHost.cs,IsOverriden,The length of the statement  "			var method = thisType.GetMethod (emap.MethodName' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,Xwt.Backends,EventHost,C:\repos\mono_xwt\Xwt\Xwt.Backends\EventHost.cs,IsOverriden,The length of the statement  "				throw new InvalidOperationException ("Invalid event mapping: method '" + emap.MethodName + "' not found in type '" + t + "'"); " is 126.
Long Statement,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,GetPreferredSize,The length of the statement  "			return ((IWidgetSurface)this).GetPreferredSize (SizeConstraint.Unconstrained' SizeConstraint.Unconstrained' includeMargin); " is 123.
Long Statement,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,GetPreferredSize,The length of the statement  "				return Surface.GetPreferredSize (widthConstraint - margin.HorizontalSpacing' heightConstraint - margin.VerticalSpacing' false) + new Size (Margin.HorizontalSpacing' Margin.VerticalSpacing); " is 189.
Long Statement,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,RegisterChild,The length of the statement  "				throw new InvalidOperationException (string.Format ("Widget belongs to toolkit '{0}' but it should belong to '{1}'."' w.Surface.ToolkitEngine' Surface.ToolkitEngine)); " is 167.
Long Statement,Xwt,Window,C:\repos\mono_xwt\Xwt\Xwt\Window.cs,AdjustSize,The length of the statement  "			var wc = (shown || widthSet) ? SizeConstraint.WithSize (Math.Max (size.Width - padding.HorizontalSpacing - mDecorationsSize.Width' mMinSize.Width)) : SizeConstraint.Unconstrained; " is 179.
Long Statement,Xwt,Window,C:\repos\mono_xwt\Xwt\Xwt\Window.cs,AdjustSize,The length of the statement  "			var hc = (shown || heightSet) ? SizeConstraint.WithSize (Math.Max (size.Height - padding.VerticalSpacing - mDecorationsSize.Height' mMinSize.Height)) : SizeConstraint.Unconstrained; " is 181.
Long Statement,Xwt,Box,C:\repos\mono_xwt\Xwt\Xwt\Box.cs,OnGetPreferredSize,The length of the statement  "					var wsize = cw.Child.Surface.GetPreferredSize (widthConstraint.IsConstrained ? cw.NextSize : SizeConstraint.Unconstrained' heightConstraint' true); " is 147.
Long Statement,Xwt,Box,C:\repos\mono_xwt\Xwt\Xwt\Box.cs,OnGetPreferredSize,The length of the statement  "					var wsize = cw.Child.Surface.GetPreferredSize (widthConstraint' heightConstraint.IsConstrained ? cw.NextSize : SizeConstraint.Unconstrained' true); " is 147.
Long Statement,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,OnReallocate,The length of the statement  "				rects [n] = new Rectangle (bp.NextX + margin.Left' bp.NextY + margin.Top' bp.NextWidth - margin.HorizontalSpacing' bp.NextHeight - margin.VerticalSpacing).Round ().WithPositiveSize (); " is 184.
Long Statement,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,CalcPreferredCellSizes,The length of the statement  "			// Now size-to-grow values have to be adjusted. For example' let's say widget A requires 100px for column 1 and 100px for column 2' and widget B requires " is 153.
Long Statement,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,CalcPreferredCellSizes,The length of the statement  "			// 60px for column 2 and 60px for column 3. So the widgets are overlapping at column 2. Since A requires at least 100px in column 2' it means that B can assume " is 159.
Long Statement,Xwt,Table,C:\repos\mono_xwt\Xwt\Xwt\Table.cs,CalcPreferredCellSizes,The length of the statement  "			// that it will have 100px available in column 2' which means 40px more than it requested. Those extra 40px can then be substracted from the 60px that " is 150.
Long Statement,Xwt,Rectangle,C:\repos\mono_xwt\Xwt\Xwt\Rectangle.cs,ToString,The length of the statement  "			return String.Format ("{{X={0} Y={1} Width={2} Height={3}}}"' X.ToString (CultureInfo.InvariantCulture)' Y.ToString (CultureInfo.InvariantCulture)' Width.ToString (CultureInfo.InvariantCulture)' Height.ToString (CultureInfo.InvariantCulture)); " is 243.
Long Statement,Xwt,Point,C:\repos\mono_xwt\Xwt\Xwt\Point.cs,ToString,The length of the statement  "			return String.Format ("{{X={0} Y={1}}}"' X.ToString (CultureInfo.InvariantCulture)' Y.ToString (CultureInfo.InvariantCulture)); " is 127.
Long Statement,Xwt,Size,C:\repos\mono_xwt\Xwt\Xwt\Size.cs,ToString,The length of the statement  "			return String.Format ("{{Width={0} Height={1}}}"' width.ToString (CultureInfo.InvariantCulture)' height.ToString (CultureInfo.InvariantCulture)); " is 145.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,GetChild,The length of the statement  "				return new NodePosition () { ParentList = n.Children' NodeId = n.Children[index].NodeId' NodeIndex = index' StoreVersion = version }; " is 133.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,GetNext,The length of the statement  "			return new NodePosition () { ParentList = np.ParentList' NodeId = n.NodeId' NodeIndex = np.NodeIndex + 1' StoreVersion = version }; " is 131.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,GetPrevious,The length of the statement  "			return new NodePosition () { ParentList = np.ParentList' NodeId = n.NodeId' NodeIndex = np.NodeIndex - 1' StoreVersion = version }; " is 131.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,InsertBefore,The length of the statement  "			var node = new NodePosition () { ParentList = np.ParentList' NodeId = nn.NodeId' NodeIndex = np.NodeIndex - 1' StoreVersion = version }; " is 136.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,InsertAfter,The length of the statement  "			var node = new NodePosition () { ParentList = np.ParentList' NodeId = nn.NodeId' NodeIndex = np.NodeIndex + 1' StoreVersion = version }; " is 136.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,AddChild,The length of the statement  "					n.Children.Parent = new NodePosition () { ParentList = np.ParentList' NodeId = n.NodeId' NodeIndex = np.NodeIndex' StoreVersion = version }; " is 140.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,AddChild,The length of the statement  "			var node = new NodePosition () { ParentList = list' NodeId = nn.NodeId' NodeIndex = list.Count - 1' StoreVersion = version }; " is 125.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,GetParent,The length of the statement  "			return new NodePosition () { ParentList = parent.ParentList' NodeId = parent.NodeId' NodeIndex = parent.NodeIndex' StoreVersion = version }; " is 140.
Long Statement,Xwt,DefaultTreeStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\TreeStore.cs,OnNodesReordered,The length of the statement  "			if (NodesReordered != null) System.Diagnostics.Debug.WriteLine($"No support for {nameof(NodesReordered)} events from {nameof(DefaultTreeStoreBackend)}' sorry."); " is 161.
Long Statement,Xwt,Distance,C:\repos\mono_xwt\Xwt\Xwt\Distance.cs,ToString,The length of the statement  "			return String.Format ("{{Dx={0} Dy={1}}}"' dx.ToString (CultureInfo.InvariantCulture)' dy.ToString (CultureInfo.InvariantCulture)); " is 131.
Long Statement,Xwt,DefaultListStoreBackend,C:\repos\mono_xwt\Xwt\Xwt\ListStore.cs,OnRowsReordered,The length of the statement  "			if (RowsReordered != null) System.Diagnostics.Debug.WriteLine($"No support for {nameof(RowsReordered)} events from {nameof(DefaultListStoreBackend)}' sorry."); " is 159.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,ShowWarning,The length of the statement  "			GenericAlert (parent' Toolkit.CurrentEngine.Defaults.MessageDialog.WarningIcon' primaryText' secondaryText' Command.Ok); " is 120.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,ShowMessage,The length of the statement  "			GenericAlert (parent' Toolkit.CurrentEngine.Defaults.MessageDialog.InformationIcon' primaryText' secondaryText' Command.Ok); " is 124.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,Confirm,The length of the statement  "			return GenericAlert (window' Toolkit.CurrentEngine.Defaults.MessageDialog.QuestionIcon' primaryText' secondaryText' Command.Cancel' button) == button; " is 150.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,Confirm,The length of the statement  "			return GenericAlert (RootWindow' Toolkit.CurrentEngine.Defaults.MessageDialog.QuestionIcon' primaryText' secondaryText' confirmIsDefault ? 0 : 1' Command.Cancel' button) == button; " is 180.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,Confirm,The length of the statement  "			return GenericAlert (RootWindow' icon' primaryText' secondaryText' confirmIsDefault ? 0 : 1' Command.Cancel' button) == button; " is 127.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,AskQuestion,The length of the statement  "			return GenericAlert (RootWindow' Toolkit.CurrentEngine.Defaults.MessageDialog.QuestionIcon' primaryText' secondaryText' buttons); " is 129.
Long Statement,Xwt,MessageDialog,C:\repos\mono_xwt\Xwt\Xwt\MessageDialog.cs,AskQuestion,The length of the statement  "			return GenericAlert (RootWindow' Toolkit.CurrentEngine.Defaults.MessageDialog.QuestionIcon' primaryText' secondaryText' defaultButton' buttons); " is 144.
Long Statement,Xwt,TreeViewStatus,C:\repos\mono_xwt\Xwt\Xwt\TreeViewStatus.cs,Load,The length of the statement  "				throw new InvalidOperationException ("Invalid tree instance. The status can only be restored on the tree that generated the status object."); " is 141.
Long Statement,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertToString,The length of the statement  "				return s.Left.ToString (CultureInfo.InvariantCulture) + " " + s.Top.ToString (CultureInfo.InvariantCulture) + " " + s.Right.ToString (CultureInfo.InvariantCulture) + " " + s.Bottom.ToString (CultureInfo.InvariantCulture); " is 221.
Long Statement,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertToString,The length of the statement  "				return s.Left.ToString (CultureInfo.InvariantCulture) + " " + s.Top.ToString (CultureInfo.InvariantCulture) + " " + s.Right.ToString (CultureInfo.InvariantCulture); " is 164.
Long Statement,Xwt,Placement,C:\repos\mono_xwt\Xwt\Xwt\Placement.cs,OnReallocate,The length of the statement  "				Backend.SetAllocation (new[] { (IWidgetBackend)GetBackend (child) }' new[] { new Rectangle (x' y' childSize.Width' childSize.Height).Round () }); " is 145.
Long Statement,Xwt,Placement,C:\repos\mono_xwt\Xwt\Xwt\Placement.cs,OnGetPreferredSize,The length of the statement  "				var s = new Size (child.Margin.HorizontalSpacing + Padding.HorizontalSpacing' child.Margin.VerticalSpacing + Padding.VerticalSpacing); " is 134.
Long Statement,Xwt,FrameCanvas,C:\repos\mono_xwt\Xwt\Xwt\FrameBox.cs,OnGetPreferredSize,The length of the statement  "				Size s = new Size (parent.Padding.HorizontalSpacing + parent.BorderWidth.HorizontalSpacing' parent.Padding.VerticalSpacing + parent.BorderWidth.VerticalSpacing); " is 161.
Long Statement,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,UpdateFaceList,The length of the statement  "				storeFace.SetValues (row' dfaceName' face.Name' dfaceFont' face.Font' dfaceMarkup' "<span font=\"" + face.Font.WithSize (listFace.Font.Size) + "\">" + face.Name + "</span>"); " is 174.
Long Statement,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,ParseImageHints,The length of the statement  "			if (!fileName.StartsWith (baseName' StringComparison.Ordinal) || fileName.Length <= baseName.Length + 1 || (fileName [baseName.Length] != '@' && fileName [baseName.Length] != '~')) " is 180.
Long Statement,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,CreateMultiSizeIcon,The length of the statement  "				// To create the new image' we group images with the same theme but different size' and we create a multi-size icon for those. " is 126.
Long Statement,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,CreateMultiSizeIcon,The length of the statement  "				var allThemes = allImages.OfType<ThemedImage> ().SelectMany (i => i.Images).Select (i => new ImageTagSet (i.Item2)).Distinct ().ToArray (); " is 139.
Long Statement,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,CreateMultiSizeIcon,The length of the statement  "				var img = new Image (Toolkit.CurrentEngine.ImageBackendHandler.CreateMultiSizeIcon (allImages.Select (ExtensionMethods.GetBackend))); " is 133.
Long Statement,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,CreateMultiResolutionImage,The length of the statement  "			return new Image (Toolkit.CurrentEngine.ImageBackendHandler.CreateMultiResolutionImage (images.Select (ExtensionMethods.GetBackend))); " is 134.
Long Statement,Xwt.Drawing,Context,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Context.cs,SetStyles,The length of the statement  "			this.styles = this.styles.RemoveAll (styles.Where (s => s.StartsWith ("-"' StringComparison.Ordinal)).Select (s => s.TrimStart ('-')).ToArray ()); " is 146.
Long Statement,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,BlendWith,The length of the statement  "			return new Color (BlendValue (r' target.r' amount)' BlendValue (g' target.g' amount)' BlendValue (b' target.b' amount)' target.Alpha); " is 134.
Long Statement,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,ToHexString,The length of the statement  "			var rgb = "#" + ((int)(Red * 255)).ToString ("x2") + ((int)(Green * 255)).ToString ("x2") + ((int)(Blue * 255)).ToString ("x2"); " is 128.
Long Statement,Xwt.Drawing,TextLayoutData,C:\repos\mono_xwt\Xwt\Xwt.Drawing\TextLayout.cs,Equals,The length of the statement  "			if (Width != other.Width || Height != other.Height || Text != other.Text || Font != other.Font || TextTrimming != other.TextTrimming || TextAlignment != other.TextAlignment) " is 173.
Long Statement,Xwt.Drawing,Font,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Font.cs,FromName,The length of the statement  "				if (double.TryParse (token' NumberStyles.Any' CultureInfo.InvariantCulture' out siz)) { // Try parsing the number first' since Enum.TryParse can also parse numbers " is 163.
Long Statement,Xwt.Drawing,Font,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Font.cs,GetDefaultFont,The length of the statement  "				Console.WriteLine ("Font '" + unknownFont + "' not available in the system. Using '" + Font.SystemFont.Family + "' instead"); " is 125.
Long Statement,Xwt.Drawing,Font,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Font.cs,GetAvailableFontFaces,The length of the statement  "			return new ReadOnlyCollection<FontFace>(Toolkit.CurrentEngine.FontBackendHandler.GetAvailableFamilyFaces(fontFamily).Select (f => new FontFace(f.Key' f.Value)).ToList ()); " is 171.
Long Statement,Xwt.Drawing,Font,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Font.cs,Equals,The length of the statement  "			return Family == other.Family && Style == other.Style && Weight == other.Weight && Stretch == other.Stretch && Size == other.Size; " is 130.
Long Statement,Xwt.Drawing,BitmapImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\BitmapImage.cs,Crop,The length of the statement  "			return new BitmapImage (ToolkitEngine.ImageBackendHandler.CropBitmap (Backend' x' y' pixelWidth' pixelHeight)' new Size (pixelWidth / scaleX' pixelHeight / scaleY)' ToolkitEngine); " is 180.
Long Statement,Xwt.Drawing,BitmapImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\BitmapImage.cs,Crop,The length of the statement  "			return new BitmapImage (ToolkitEngine.ImageBackendHandler.CropBitmap (Backend' (int)pixelRect.X' (int)pixelRect.Y' (int)pixelRect.Width' (int)pixelRect.Height)' new Size (pixelRect.Width / scaleX' pixelRect.Height / scaleY)' ToolkitEngine); " is 240.
Long Statement,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The length of the statement  "					pathHandler.ArcNegative (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]); " is 125.
Long Statement,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The length of the statement  "					pathHandler.CurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]); " is 140.
Long Statement,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The length of the statement  "					pathHandler.RelCurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]); " is 143.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "			frame.HorizontalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Width - 2).Select (n => bitmap.GetPixel (n' 0))); " is 132.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "			frame.VerticalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Height - 2).Select (n => bitmap.GetPixel (0' n))); " is 131.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "			var hbox = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Width - 1).Select (n => bitmap.GetPixel (n' (int)bitmap.Height - 1))); " is 137.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "			var vbox = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Height - 1).Select (n => bitmap.GetPixel ((int)bitmap.Width - 1' n))); " is 137.
Long Statement,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The length of the statement  "			Padding = new WidgetSpacing (padLeft / frame.ScaleFactor' padTop / frame.ScaleFactor' padRight / frame.ScaleFactor' padBottom / frame.ScaleFactor); " is 147.
Long Statement,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The length of the statement  "				else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines[i + 1]) && lines[i + 1].All (c => c == '=' || c == '-')) { " is 120.
Long Statement,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The length of the statement  "				else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) { " is 123.
Complex Conditional,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,ParseImageHints,The conditional expression  "!fileName.StartsWith (baseName' StringComparison.Ordinal) || fileName.Length <= baseName.Length + 1 || (fileName [baseName.Length] != '@' && fileName [baseName.Length] != '~')"  is complex.
Complex Conditional,Xwt.Drawing,TextLayoutData,C:\repos\mono_xwt\Xwt\Xwt.Drawing\TextLayout.cs,Equals,The conditional expression  "Width != other.Width || Height != other.Height || Text != other.Text || Font != other.Font || TextTrimming != other.TextTrimming || TextAlignment != other.TextAlignment"  is complex.
Complex Conditional,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The conditional expression  "p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1"  is complex.
Complex Conditional,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The conditional expression  "p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1"  is complex.
Complex Conditional,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The conditional expression  "i < lines.Length - 1 && !string.IsNullOrEmpty (lines[i + 1]) && lines[i + 1].All (c => c == '=' || c == '-')"  is complex.
Complex Conditional,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The conditional expression  "(trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')"  is complex.
Virtual Method Call from Constructor,Xwt,XwtComponent,C:\repos\mono_xwt\Xwt\Xwt\XwtComponent.cs,XwtComponent,The constructor "XwtComponent" calls a virtual method "CreateBackendHost".
Virtual Method Call from Constructor,Xwt.Drawing,Context,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Context.cs,Context,The constructor "Context" calls a virtual method "SetStyles".
Virtual Method Call from Constructor,Xwt.Drawing,TextLayout,C:\repos\mono_xwt\Xwt\Xwt.Drawing\TextLayout.cs,TextLayout,The constructor "TextLayout" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,TextLayout,C:\repos\mono_xwt\Xwt\Xwt.Drawing\TextLayout.cs,TextLayout,The constructor "TextLayout" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,ImagePattern,C:\repos\mono_xwt\Xwt\Xwt.Drawing\ImagePattern.cs,ImagePattern,The constructor "ImagePattern" calls a virtual method "Create".
Virtual Method Call from Constructor,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,DrawingPath,The constructor "DrawingPath" calls a virtual method "CreatePath".
Virtual Method Call from Constructor,Xwt.Drawing,DrawingImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingImage.cs,DrawingImage,The constructor "DrawingImage" calls a virtual method "CreateCustomDrawn".
Virtual Method Call from Constructor,Xwt.Drawing,BitmapImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\BitmapImage.cs,BitmapImage,The constructor "BitmapImage" calls a virtual method "CopyBitmap".
Virtual Method Call from Constructor,Xwt.Drawing,BitmapImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\BitmapImage.cs,BitmapImage,The constructor "BitmapImage" calls a virtual method "GetSize".
Empty Catch Block,Xwt,Desktop,C:\repos\mono_xwt\Xwt\Xwt\Desktop.cs,IsRunningOnMac,The method has an empty catch block.
Magic Number,Xwt.Backends,ExtensionMethods,C:\repos\mono_xwt\Xwt\Xwt.Backends\ExtensionMethods.cs,GetValue,The following statement contains a magic number: switch (al) {  			case WidgetPlacement.Center:  				return 0.5;  			case WidgetPlacement.End:  				return 1;  			default:  				return 0;  			}
Magic Number,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: if (sizeCached && widthConstraint == cachedWidthConstraint && heightConstraint == cachedHeightConstraint)  				return cachedSize;  			else {  				if (widthRequest != -1 && !widthConstraint.IsConstrained)  					widthConstraint = SizeConstraint.WithSize (widthRequest);    				if (heightRequest != -1 && !heightConstraint.IsConstrained)  					heightConstraint = SizeConstraint.WithSize (heightRequest);    				if (DebugWidgetLayout) {  					LayoutLog ("GetPreferredSize: wc:{0} hc:{1} - {2}"' widthConstraint' heightConstraint' GetWidgetDesc ());  					DebugWidgetLayoutIndent += 3;  				}    				if (widthRequest == -1 || heightRequest == -1)  					cachedSize = OnGetPreferredSize (widthConstraint' heightConstraint);    				if (DebugWidgetLayout)  					DebugWidgetLayoutIndent -= 3;    				if (widthRequest != -1)  					cachedSize.Width = widthRequest;  				else if (minWidth > cachedSize.Width)  					cachedSize.Width = minWidth;    				if (heightRequest != -1)  					cachedSize.Height = heightRequest;  				else if (minHeight > cachedSize.Height)  					cachedSize.Height = minHeight;    				if (cachedSize.Width < 0)  					cachedSize.Width = 0;  				if (cachedSize.Height < 0)  					cachedSize.Height = 0;  				if (!BackendHost.EngineBackend.HandlesSizeNegotiation) {  					sizeCached = true;  					cachedWidthConstraint = widthConstraint;  					cachedHeightConstraint = heightConstraint;  				}    				if (DebugWidgetLayout) {  					LayoutLog ("-> {0}"' cachedSize);  				}    				return cachedSize;  			}
Magic Number,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,GetPreferredSize,The following statement contains a magic number: if (sizeCached && widthConstraint == cachedWidthConstraint && heightConstraint == cachedHeightConstraint)  				return cachedSize;  			else {  				if (widthRequest != -1 && !widthConstraint.IsConstrained)  					widthConstraint = SizeConstraint.WithSize (widthRequest);    				if (heightRequest != -1 && !heightConstraint.IsConstrained)  					heightConstraint = SizeConstraint.WithSize (heightRequest);    				if (DebugWidgetLayout) {  					LayoutLog ("GetPreferredSize: wc:{0} hc:{1} - {2}"' widthConstraint' heightConstraint' GetWidgetDesc ());  					DebugWidgetLayoutIndent += 3;  				}    				if (widthRequest == -1 || heightRequest == -1)  					cachedSize = OnGetPreferredSize (widthConstraint' heightConstraint);    				if (DebugWidgetLayout)  					DebugWidgetLayoutIndent -= 3;    				if (widthRequest != -1)  					cachedSize.Width = widthRequest;  				else if (minWidth > cachedSize.Width)  					cachedSize.Width = minWidth;    				if (heightRequest != -1)  					cachedSize.Height = heightRequest;  				else if (minHeight > cachedSize.Height)  					cachedSize.Height = minHeight;    				if (cachedSize.Width < 0)  					cachedSize.Width = 0;  				if (cachedSize.Height < 0)  					cachedSize.Height = 0;  				if (!BackendHost.EngineBackend.HandlesSizeNegotiation) {  					sizeCached = true;  					cachedWidthConstraint = widthConstraint;  					cachedHeightConstraint = heightConstraint;  				}    				if (DebugWidgetLayout) {  					LayoutLog ("-> {0}"' cachedSize);  				}    				return cachedSize;  			}
Magic Number,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,Reallocate,The following statement contains a magic number: if (DebugWidgetLayout) {  				LayoutLog ("Reallocate: {0} - {1}"' Size' GetWidgetDesc ());  				DebugWidgetLayoutIndent += 3;  			}
Magic Number,Xwt,Widget,C:\repos\mono_xwt\Xwt\Xwt\Widget.cs,Reallocate,The following statement contains a magic number: if (DebugWidgetLayout)  				DebugWidgetLayoutIndent -= 3;
Magic Number,Xwt,Window,C:\repos\mono_xwt\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: if (!shown) {  				shown = true;    				if (!locationSet && initialLocation != WindowLocation.Manual) {  					Point center;  					if (initialLocation == WindowLocation.CenterScreen || TransientFor == null)  						center = Desktop.PrimaryScreen.VisibleBounds.Center;  					else  						center = TransientFor.ScreenBounds.Center;  					initialBounds.X = Math.Round (center.X - size.Width / 2);  					initialBounds.Y = Math.Round (center.Y - size.Height / 2);  					locationSet = true;  				}  	  				if (size != Size) {  					if (locationSet)  						Backend.Bounds = new Rectangle (initialBounds.X' initialBounds.Y' size.Width' size.Height);  					else  						Backend.SetSize (size.Width' size.Height);  				} else if (locationSet && !shown)  					Backend.Move (initialBounds.X' initialBounds.Y);  	  			} else {  				if (size != Size)  					Backend.SetSize (size.Width' size.Height);  			}
Magic Number,Xwt,Window,C:\repos\mono_xwt\Xwt\Xwt\Window.cs,AdjustSize,The following statement contains a magic number: if (!shown) {  				shown = true;    				if (!locationSet && initialLocation != WindowLocation.Manual) {  					Point center;  					if (initialLocation == WindowLocation.CenterScreen || TransientFor == null)  						center = Desktop.PrimaryScreen.VisibleBounds.Center;  					else  						center = TransientFor.ScreenBounds.Center;  					initialBounds.X = Math.Round (center.X - size.Width / 2);  					initialBounds.Y = Math.Round (center.Y - size.Height / 2);  					locationSet = true;  				}  	  				if (size != Size) {  					if (locationSet)  						Backend.Bounds = new Rectangle (initialBounds.X' initialBounds.Y' size.Width' size.Height);  					else  						Backend.SetSize (size.Width' size.Height);  				} else if (locationSet && !shown)  					Backend.Move (initialBounds.X' initialBounds.Y);  	  			} else {  				if (size != Size)  					Backend.SetSize (size.Width' size.Height);  			}
Magic Number,Xwt,Paned,C:\repos\mono_xwt\Xwt\Xwt\Paned.cs,Paned,The following statement contains a magic number: panel2 = new Panel ((WidgetBackendHost)BackendHost' 2);
Magic Number,Xwt,Rectangle,C:\repos\mono_xwt\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = X.GetHashCode ();  				hash = (hash * 397) ^ Y.GetHashCode ();  				hash = (hash * 397) ^ Width.GetHashCode ();  				hash = (hash * 397) ^ Height.GetHashCode ();  				return hash;  			}
Magic Number,Xwt,Rectangle,C:\repos\mono_xwt\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = X.GetHashCode ();  				hash = (hash * 397) ^ Y.GetHashCode ();  				hash = (hash * 397) ^ Width.GetHashCode ();  				hash = (hash * 397) ^ Height.GetHashCode ();  				return hash;  			}
Magic Number,Xwt,Rectangle,C:\repos\mono_xwt\Xwt\Xwt\Rectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = X.GetHashCode ();  				hash = (hash * 397) ^ Y.GetHashCode ();  				hash = (hash * 397) ^ Width.GetHashCode ();  				hash = (hash * 397) ^ Height.GetHashCode ();  				return hash;  			}
Magic Number,Xwt,Rectangle,C:\repos\mono_xwt\Xwt\Xwt\Rectangle.cs,Inflate,The following statement contains a magic number: r.Width += width * 2;
Magic Number,Xwt,Rectangle,C:\repos\mono_xwt\Xwt\Xwt\Rectangle.cs,Inflate,The following statement contains a magic number: r.Height += height * 2;
Magic Number,Xwt,Point,C:\repos\mono_xwt\Xwt\Xwt\Point.cs,GetHashCode,The following statement contains a magic number: unchecked {  				return (X.GetHashCode () * 397) ^ Y.GetHashCode ();  			}
Magic Number,Xwt,Size,C:\repos\mono_xwt\Xwt\Xwt\Size.cs,GetHashCode,The following statement contains a magic number: unchecked {  				return (width.GetHashCode () * 397) ^ height.GetHashCode ();  			}
Magic Number,Xwt,Distance,C:\repos\mono_xwt\Xwt\Xwt\Distance.cs,GetHashCode,The following statement contains a magic number: unchecked {  				return (dx.GetHashCode () * 397) ^ dy.GetHashCode ();  			}
Magic Number,Xwt,WidgetSpacing,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = Left.GetHashCode ();  				hash = (hash * 397) ^ Right.GetHashCode ();  				hash = (hash * 397) ^ Top.GetHashCode ();  				hash = (hash * 397) ^ Bottom.GetHashCode ();  				return hash;  			}
Magic Number,Xwt,WidgetSpacing,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = Left.GetHashCode ();  				hash = (hash * 397) ^ Right.GetHashCode ();  				hash = (hash * 397) ^ Top.GetHashCode ();  				hash = (hash * 397) ^ Bottom.GetHashCode ();  				return hash;  			}
Magic Number,Xwt,WidgetSpacing,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = Left.GetHashCode ();  				hash = (hash * 397) ^ Right.GetHashCode ();  				hash = (hash * 397) ^ Top.GetHashCode ();  				hash = (hash * 397) ^ Bottom.GetHashCode ();  				return hash;  			}
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 2 && double.TryParse (values [1]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  				c.Top = v;
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 3 && double.TryParse (values [2]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  				c.Right = v;
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 3 && double.TryParse (values [2]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  				c.Right = v;
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 4 && double.TryParse (values [3]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  				c.Bottom = v;
Magic Number,Xwt,WidgetSpacingValueSerializer,C:\repos\mono_xwt\Xwt\Xwt\WidgetSpacing.cs,ConvertFromString,The following statement contains a magic number: if (value.Length >= 4 && double.TryParse (values [3]' NumberStyles.Any' CultureInfo.InvariantCulture' out v))  				c.Bottom = v;
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: hsBox.Light = 0.5;
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: colorBox = new ColorSelectionBox () { MinHeight = 20 };
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: const int entryWidth = 40;
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (colorBox' 1' 0' colspan:4);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new HSeparator ()' 0' 1' colspan:5);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: int r = 2;
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (hueEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 360' Digits = 0' IncrementValue = 1 }' 1' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (satEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 100' Digits = 0' IncrementValue = 1 }' 1' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (lightEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 100' Digits = 0' IncrementValue = 1 }' 1' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: r = 2;
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new Label (Application.TranslationCatalog.GetString("Red:"))' 3' r);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (redEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (redEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new Label (Application.TranslationCatalog.GetString("Green:"))' 3' r);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (greenEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (greenEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (new Label (Application.TranslationCatalog.GetString("Blue:"))' 3' r);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (blueEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (blueEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r++);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (alphaSeparator = new HSeparator ()' 0' r++' colspan:5);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (alphaSlider = new HSlider () {  				MinimumValue = 0' MaximumValue = 255'  }' 1' r' colspan: 3);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (alphaSlider = new HSlider () {  				MinimumValue = 0' MaximumValue = 255'  }' 1' r' colspan: 3);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (alphaEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DefaultColorSelectorBackend,The following statement contains a magic number: entryTable.Add (alphaEntry = new SpinButton () {   				MinWidth = entryWidth' MinimumValue = 0' MaximumValue = 255' Digits = 0' IncrementValue = 1 }' 4' r);
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadAlphaEntry,The following statement contains a magic number: alphaEntry.Value = ((int)(currentColor.Alpha * 255));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadAlphaEntry,The following statement contains a magic number: alphaSlider.Value = ((int)(currentColor.Alpha * 255));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadHslEntries,The following statement contains a magic number: hueEntry.Value = ((int)(currentColor.Hue * 360));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadHslEntries,The following statement contains a magic number: satEntry.Value = ((int)(currentColor.Saturation * 100));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadHslEntries,The following statement contains a magic number: lightEntry.Value = ((int)(currentColor.Light * 100));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadRgbEntries,The following statement contains a magic number: redEntry.Value = ((int)(currentColor.Red * 255));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadRgbEntries,The following statement contains a magic number: greenEntry.Value = ((int)(currentColor.Green * 255));
Magic Number,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LoadRgbEntries,The following statement contains a magic number: blueEntry.Value = ((int)(currentColor.Blue * 255));
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,HueBox,The following statement contains a magic number: MinWidth = size + padding * 2;
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,HueBox,The following statement contains a magic number: MinHeight = size + padding * 2;
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);
Magic Number,Xwt,HueBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (selection.X + padding - 2 + 0.5' selection.Y + padding - 2 + 0.5' 4' 4);
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LightBox,The following statement contains a magic number: MinWidth = 20;
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,LightBox,The following statement contains a magic number: MinHeight = 20;
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: double width = Size.Width - padding * 2;
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: int range = (int)Size.Height - padding * 2;
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1-light)) + 0.5 - 2' Size.Width - 1' 4);
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1-light)) + 0.5 - 2' Size.Width - 1' 4);
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1-light)) + 0.5 - 2' Size.Width - 1' 4);
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnDraw,The following statement contains a magic number: ctx.Rectangle (0.5' padding + (int)(((double)range) * (1-light)) + 0.5 - 2' Size.Width - 1' 4);
Magic Number,Xwt,LightBox,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,OnSelectionChanged,The following statement contains a magic number: int range = (int)Size.Height - padding * 2;
Magic Number,Xwt,Desktop,C:\repos\mono_xwt\Xwt\Xwt\Desktop.cs,IsRunningOnMac,The following statement contains a magic number: try {  				buf = Marshal.AllocHGlobal (8192);  				// This is a hacktastic way of getting sysname from uname ()  				if (uname (buf) == 0) {  					string os = System.Runtime.InteropServices.Marshal.PtrToStringAnsi (buf);  					if (os == "Darwin")  						return true;  				}  			} catch {  			} finally {  				if (buf != IntPtr.Zero)  					System.Runtime.InteropServices.Marshal.FreeHGlobal (buf);  			}
Magic Number,Xwt,Desktop,C:\repos\mono_xwt\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: if (img != null)   				return new Drawing.Image (img' Toolkit.CurrentEngine);  			else {  				if (blankImage == null)  					blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  				return blankImage;  			}
Magic Number,Xwt,Desktop,C:\repos\mono_xwt\Xwt\Xwt\Desktop.cs,GetFileIcon,The following statement contains a magic number: if (img != null)   				return new Drawing.Image (img' Toolkit.CurrentEngine);  			else {  				if (blankImage == null)  					blankImage = new Xwt.Drawing.ImageBuilder (16' 16).ToVectorImage ();  				return blankImage;  			}
Magic Number,Xwt,FrameCanvas,C:\repos\mono_xwt\Xwt\Xwt\FrameBox.cs,OnDraw,The following statement contains a magic number: if (border.Top > 0) {  					ctx.MoveTo (r.X' r.Y + border.Top / 2);  					ctx.RelLineTo (r.Width' 0);  					ctx.SetLineWidth (border.Top);  					ctx.Stroke ();  				}
Magic Number,Xwt,FrameCanvas,C:\repos\mono_xwt\Xwt\Xwt\FrameBox.cs,OnDraw,The following statement contains a magic number: if (border.Bottom > 0) {  					ctx.MoveTo (r.X' r.Bottom - border.Bottom / 2);  					ctx.RelLineTo (r.Width' 0);  					ctx.SetLineWidth (border.Bottom);  					ctx.Stroke ();  				}
Magic Number,Xwt,FrameCanvas,C:\repos\mono_xwt\Xwt\Xwt\FrameBox.cs,OnDraw,The following statement contains a magic number: if (border.Left > 0) {  					ctx.MoveTo (r.X + border.Left / 2' r.Y + border.Top);  					ctx.RelLineTo (0' r.Height - border.Top - border.Bottom);  					ctx.SetLineWidth (border.Left);  					ctx.Stroke ();  				}
Magic Number,Xwt,FrameCanvas,C:\repos\mono_xwt\Xwt\Xwt\FrameBox.cs,OnDraw,The following statement contains a magic number: if (border.Right > 0) {  					ctx.MoveTo (r.Right - border.Right / 2' r.Y + border.Top);  					ctx.RelLineTo (0' r.Height - border.Top - border.Bottom);  					ctx.SetLineWidth (border.Right);  					ctx.Stroke ();  				}
Magic Number,Xwt,ScrollAdjustment,C:\repos\mono_xwt\Xwt\Xwt\ScrollAdjustment.cs,ScrollAdjustment,The following statement contains a magic number: upperValue = 100;
Magic Number,Xwt,ScrollAdjustment,C:\repos\mono_xwt\Xwt\Xwt\ScrollAdjustment.cs,ScrollAdjustment,The following statement contains a magic number: pageSize = 10;
Magic Number,Xwt,ScrollAdjustment,C:\repos\mono_xwt\Xwt\Xwt\ScrollAdjustment.cs,ScrollAdjustment,The following statement contains a magic number: pageIncrement = 10;
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DefaultColorPickerBackend,The following statement contains a magic number: colorButton = new Button (colorImage.WithSize (38' 24));
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DefaultColorPickerBackend,The following statement contains a magic number: colorButton = new Button (colorImage.WithSize (38' 24));
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DefaultColorPickerBackend,The following statement contains a magic number: colorButton.WidthRequest = 48;
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DefaultColorPickerBackend,The following statement contains a magic number: colorButton.HeightRequest = 32;
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DefaultColorPickerBackend,The following statement contains a magic number: colorButton.MinWidth = 48;
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DefaultColorPickerBackend,The following statement contains a magic number: colorButton.MinHeight = 32;
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,SetButtonStyle,The following statement contains a magic number: if (style == ButtonStyle.Borderless) {  				colorButton.Image = colorImage.WithSize (48' 32);  			} else {  				colorButton.Image = colorImage.WithSize (38' 24);  			}
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,SetButtonStyle,The following statement contains a magic number: if (style == ButtonStyle.Borderless) {  				colorButton.Image = colorImage.WithSize (48' 32);  			} else {  				colorButton.Image = colorImage.WithSize (38' 24);  			}
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,SetButtonStyle,The following statement contains a magic number: if (style == ButtonStyle.Borderless) {  				colorButton.Image = colorImage.WithSize (48' 32);  			} else {  				colorButton.Image = colorImage.WithSize (38' 24);  			}
Magic Number,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,SetButtonStyle,The following statement contains a magic number: if (style == ButtonStyle.Borderless) {  				colorButton.Image = colorImage.WithSize (48' 32);  			} else {  				colorButton.Image = colorImage.WithSize (38' 24);  			}
Magic Number,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,DefaultFontSelectorBackend,The following statement contains a magic number: listFonts.MinWidth = 150;
Magic Number,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,DefaultFontSelectorBackend,The following statement contains a magic number: listFace.MinWidth = 60;
Magic Number,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,DefaultFontSelectorBackend,The following statement contains a magic number: spnSize.MaximumValue = 800;
Magic Number,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,DefaultFontSelectorBackend,The following statement contains a magic number: mainBox.MinWidth = 350;
Magic Number,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,DefaultFontSelectorBackend,The following statement contains a magic number: mainBox.MinHeight = 300;
Magic Number,Xwt,DefaultSelectFontDialogBackend,C:\repos\mono_xwt\Xwt\Xwt\SelectFontDialog.cs,DefaultSelectFontDialogBackend,The following statement contains a magic number: fontDialog.Width = 500;
Magic Number,Xwt,DefaultSelectFontDialogBackend,C:\repos\mono_xwt\Xwt\Xwt\SelectFontDialog.cs,DefaultSelectFontDialogBackend,The following statement contains a magic number: fontDialog.Height = 300;
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,ParseImageHints,The following statement contains a magic number: if (fileName [i] == '~') {  				// For example: foo~dark@2x  				i++;  				var i2 = fileName.IndexOf ('@'' i);  				if (i2 != -1) {  					int i3 = fileName.IndexOf ('x'' i2 + 2);  					if (i3 == -1 || !int.TryParse (fileName.Substring (i2 + 1' i3 - i2 - 1)' out scale))  						return false;  				} else  					i2 = fileName.Length;  				tags = new ImageTagSet (fileName.Substring (i' i2 - i));  				return true;  			}  			else {  				// For example: foo@2x~dark  				i++;  				var i2 = fileName.IndexOf ('~'' i + 1);  				if (i2 == -1)  					i2 = fileName.Length;    				i2--;  				if (i2 < 0 || fileName [i2] != 'x')  					return false;  				  				var s = fileName.Substring (i' i2 - i);  				if (!int.TryParse (s' out scale)) {  					tags = null;  					return false;  				}  				if (i2 + 2 < fileName.Length)  					tags = new ImageTagSet (fileName.Substring (i2 + 2));  				return true;  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,ParseImageHints,The following statement contains a magic number: if (fileName [i] == '~') {  				// For example: foo~dark@2x  				i++;  				var i2 = fileName.IndexOf ('@'' i);  				if (i2 != -1) {  					int i3 = fileName.IndexOf ('x'' i2 + 2);  					if (i3 == -1 || !int.TryParse (fileName.Substring (i2 + 1' i3 - i2 - 1)' out scale))  						return false;  				} else  					i2 = fileName.Length;  				tags = new ImageTagSet (fileName.Substring (i' i2 - i));  				return true;  			}  			else {  				// For example: foo@2x~dark  				i++;  				var i2 = fileName.IndexOf ('~'' i + 1);  				if (i2 == -1)  					i2 = fileName.Length;    				i2--;  				if (i2 < 0 || fileName [i2] != 'x')  					return false;  				  				var s = fileName.Substring (i' i2 - i);  				if (!int.TryParse (s' out scale)) {  					tags = null;  					return false;  				}  				if (i2 + 2 < fileName.Length)  					tags = new ImageTagSet (fileName.Substring (i2 + 2));  				return true;  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,ParseImageHints,The following statement contains a magic number: if (fileName [i] == '~') {  				// For example: foo~dark@2x  				i++;  				var i2 = fileName.IndexOf ('@'' i);  				if (i2 != -1) {  					int i3 = fileName.IndexOf ('x'' i2 + 2);  					if (i3 == -1 || !int.TryParse (fileName.Substring (i2 + 1' i3 - i2 - 1)' out scale))  						return false;  				} else  					i2 = fileName.Length;  				tags = new ImageTagSet (fileName.Substring (i' i2 - i));  				return true;  			}  			else {  				// For example: foo@2x~dark  				i++;  				var i2 = fileName.IndexOf ('~'' i + 1);  				if (i2 == -1)  					i2 = fileName.Length;    				i2--;  				if (i2 < 0 || fileName [i2] != 'x')  					return false;  				  				var s = fileName.Substring (i' i2 - i);  				if (!int.TryParse (s' out scale)) {  					tags = null;  					return false;  				}  				if (i2 + 2 < fileName.Length)  					tags = new ImageTagSet (fileName.Substring (i2 + 2));  				return true;  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  			case IconSize.Small: s = new Size (16' 16); break;  			case IconSize.Medium: s = new Size (24' 24); break;  			case IconSize.Large: s = new Size (32' 32); break;  			default: throw new ArgumentOutOfRangeException ("size");  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  			case IconSize.Small: s = new Size (16' 16); break;  			case IconSize.Medium: s = new Size (24' 24); break;  			case IconSize.Large: s = new Size (32' 32); break;  			default: throw new ArgumentOutOfRangeException ("size");  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  			case IconSize.Small: s = new Size (16' 16); break;  			case IconSize.Medium: s = new Size (24' 24); break;  			case IconSize.Large: s = new Size (32' 32); break;  			default: throw new ArgumentOutOfRangeException ("size");  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  			case IconSize.Small: s = new Size (16' 16); break;  			case IconSize.Medium: s = new Size (24' 24); break;  			case IconSize.Large: s = new Size (32' 32); break;  			default: throw new ArgumentOutOfRangeException ("size");  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  			case IconSize.Small: s = new Size (16' 16); break;  			case IconSize.Medium: s = new Size (24' 24); break;  			case IconSize.Large: s = new Size (32' 32); break;  			default: throw new ArgumentOutOfRangeException ("size");  			}
Magic Number,Xwt.Drawing,Image,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Image.cs,WithSize,The following statement contains a magic number: switch (size) {  			case IconSize.Small: s = new Size (16' 16); break;  			case IconSize.Medium: s = new Size (24' 24); break;  			case IconSize.Large: s = new Size (32' 32); break;  			default: throw new ArgumentOutOfRangeException ("size");  			}
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,WithIncreasedContrast,The following statement contains a magic number: return WithIncreasedContrast (new Color (0.5' 0.5' 0.5)' amount);
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,WithIncreasedContrast,The following statement contains a magic number: return WithIncreasedContrast (new Color (0.5' 0.5' 0.5)' amount);
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,WithIncreasedContrast,The following statement contains a magic number: return WithIncreasedContrast (new Color (0.5' 0.5' 0.5)' amount);
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return FromBytes (red' green' blue' 255);
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  				Red = ((double)red) / 255.0'  				Green = ((double)green) / 255.0'  				Blue = ((double)blue) / 255.0'  				Alpha = ((double)alpha) / 255.0  			};
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  				Red = ((double)red) / 255.0'  				Green = ((double)green) / 255.0'  				Blue = ((double)blue) / 255.0'  				Alpha = ((double)alpha) / 255.0  			};
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  				Red = ((double)red) / 255.0'  				Green = ((double)green) / 255.0'  				Blue = ((double)blue) / 255.0'  				Alpha = ((double)alpha) / 255.0  			};
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,FromBytes,The following statement contains a magic number: return new Color {  				Red = ((double)red) / 255.0'  				Green = ((double)green) / 255.0'  				Blue = ((double)blue) / 255.0'  				Alpha = ((double)alpha) / 255.0  			};
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParse,The following statement contains a magic number: color = Color.FromBytes ((byte)(val >> 24)' (byte)((val >> 16) & 0xff)' (byte)((val >> 8) & 0xff)' (byte)(val & 0xff));
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParse,The following statement contains a magic number: color = Color.FromBytes ((byte)(val >> 24)' (byte)((val >> 16) & 0xff)' (byte)((val >> 8) & 0xff)' (byte)(val & 0xff));
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParse,The following statement contains a magic number: color = Color.FromBytes ((byte)(val >> 24)' (byte)((val >> 16) & 0xff)' (byte)((val >> 8) & 0xff)' (byte)(val & 0xff));
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: if (str[0] != '#' || str.Length > 9)  				return false;
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: val = val << ((9 - str.Length) * 4);
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: val = val << ((9 - str.Length) * 4);
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,TryParseColourFromHex,The following statement contains a magic number: if (str.Length <= 7)  				val |= 0xff;
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = r.GetHashCode ();  				hash = (hash * 397) ^ g.GetHashCode ();  				hash = (hash * 397) ^ b.GetHashCode ();  				hash = (hash * 397) ^ a.GetHashCode ();  				return hash;  			}
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = r.GetHashCode ();  				hash = (hash * 397) ^ g.GetHashCode ();  				hash = (hash * 397) ^ b.GetHashCode ();  				hash = (hash * 397) ^ a.GetHashCode ();  				return hash;  			}
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,GetHashCode,The following statement contains a magic number: unchecked {  				var hash = r.GetHashCode ();  				hash = (hash * 397) ^ g.GetHashCode ();  				hash = (hash * 397) ^ b.GetHashCode ();  				hash = (hash * 397) ^ a.GetHashCode ();  				return hash;  			}
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,ToHexString,The following statement contains a magic number: var rgb = "#" + ((int)(Red * 255)).ToString ("x2") + ((int)(Green * 255)).ToString ("x2") + ((int)(Blue * 255)).ToString ("x2");
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,ToHexString,The following statement contains a magic number: var rgb = "#" + ((int)(Red * 255)).ToString ("x2") + ((int)(Green * 255)).ToString ("x2") + ((int)(Blue * 255)).ToString ("x2");
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,ToHexString,The following statement contains a magic number: var rgb = "#" + ((int)(Red * 255)).ToString ("x2") + ((int)(Green * 255)).ToString ("x2") + ((int)(Blue * 255)).ToString ("x2");
Magic Number,Xwt.Drawing,Color,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Color.cs,ToHexString,The following statement contains a magic number: if (withAlpha)  				return rgb + ((int)(Alpha * 255)).ToString ("x2");  			else  				return rgb;
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (6.0 * x < 1.0)  				return temp1 + (temp2 - temp1) * x * 6.0;
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (6.0 * x < 1.0)  				return temp1 + (temp2 - temp1) * x * 6.0;
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (2.0 * x < 1.0)  				return temp2;
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (3.0 * x < 2.0)  				return (temp1 + (temp2 - temp1) * ((2.0 / 3.0) - x) * 6.0);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (3.0 * x < 2.0)  				return (temp1 + (temp2 - temp1) * ((2.0 / 3.0) - x) * 6.0);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (3.0 * x < 2.0)  				return (temp1 + (temp2 - temp1) * ((2.0 / 3.0) - x) * 6.0);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (3.0 * x < 2.0)  				return (temp1 + (temp2 - temp1) * ((2.0 / 3.0) - x) * 6.0);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,ConvertVector,The following statement contains a magic number: if (3.0 * x < 2.0)  				return (temp1 + (temp2 - temp1) * ((2.0 / 3.0) - x) * 6.0);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.L = (m + v) / 2.0;
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  				this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  			} else {  				return;  			}
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  				this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  			} else {  				return;  			}
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  				this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  			} else if (g == v) {  				this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  			} else {  				this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  			}
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,HslColor,The following statement contains a magic number: this.H /= 6.0;
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);
Magic Number,Xwt.Drawing,HslColor,C:\repos\mono_xwt\Xwt\Xwt.Drawing\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + M21.GetHashCode ();
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + M12.GetHashCode ();
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + M22.GetHashCode ();
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + OffsetX.GetHashCode ();
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + OffsetY.GetHashCode ();
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: angle = angle % 360;
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Prepend (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Prepend (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Prepend (-1' 0' 0' -1' 0' 0);  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Prepend (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Prepend (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Prepend (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Prepend (-1' 0' 0' -1' 0' 0);  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Prepend (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Prepend (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Prepend (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Prepend (-1' 0' 0' -1' 0' 0);  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Prepend (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Prepend (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Prepend (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Prepend (-1' 0' 0' -1' 0' 0);  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Prepend (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Prepend (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Prepend (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Prepend (-1' 0' 0' -1' 0' 0);  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Prepend (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,Rotate,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Prepend (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Prepend (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Prepend (-1' 0' 0' -1' 0' 0);  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Prepend (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: angle = angle % 360;
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Append (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Append (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Append (-1' 0' 0' -1' 0' 0);  			else if (angle == 0)  				return;  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Append (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Append (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Append (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Append (-1' 0' 0' -1' 0' 0);  			else if (angle == 0)  				return;  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Append (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Append (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Append (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Append (-1' 0' 0' -1' 0' 0);  			else if (angle == 0)  				return;  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Append (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Append (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Append (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Append (-1' 0' 0' -1' 0' 0);  			else if (angle == 0)  				return;  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Append (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Append (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Append (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Append (-1' 0' 0' -1' 0' 0);  			else if (angle == 0)  				return;  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Append (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,Matrix,C:\repos\mono_xwt\Xwt\Xwt.Drawing\Matrix.cs,RotateAppend,The following statement contains a magic number: if (angle == 90 || angle == -270)  				Append (0' 1' -1' 0' 0' 0);  			else if (angle == -90 || angle == 270)  				Append (0' -1' 1' 0' 0' 0);  			else if (angle == 180 || angle == -180)  				Append (-1' 0' 0' -1' 0' 0);  			else if (angle == 0)  				return;  			else {  				var theta = angle * pi180;  				var cos = Math.Cos (theta);  				var sin = Math.Sin (theta);  				Append (cos' sin' -sin' cos' 0' 0);  			}
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > width - radius)  				radius = width / 2;
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > height - radius)  				radius = height / 2;
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  				Arc (x + width - radius' y + radius' radius' -90' 0);
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  				Arc (x + width - radius' y + height - radius' radius' 0' 90);
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  				Arc (x + radius' y + height - radius' radius' 90' 180);
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  				Arc (x + radius' y + height - radius' radius' 90' 180);
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  				Arc (x + radius' y + radius' radius' 180' 270);
Magic Number,Xwt.Drawing,DrawingPath,C:\repos\mono_xwt\Xwt\Xwt.Drawing\DrawingPath.cs,RoundRectangle,The following statement contains a magic number: if (radius > 0)  				Arc (x + radius' y + radius' radius' 180' 270);
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: frame.HorizontalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Width - 2).Select (n => bitmap.GetPixel (n' 0)));
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: frame.VerticalSections = CreateSections (frame' Enumerable.Range (1' (int)bitmap.Height - 2).Select (n => bitmap.GetPixel (0' n)));
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: if (sec != null) {  				padLeft = sec.Start;  				padRight = bitmap.Width - 2 - padLeft - sec.Size;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,AddFrame,The following statement contains a magic number: if (sec != null) {  				padTop = sec.Start;  				padBottom = bitmap.Height - 2 - padTop - sec.Size;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  				RenderMode mode;  				// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  				// there are small variations in colors.  				if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Red-ish  					mode = RenderMode.Tile;  				else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Black-ish  					mode = RenderMode.Stretch;  				else  					mode = RenderMode.Fixed;    				if (section == null || mode != section.Mode) {  					section = new ImageSection {  						Start = n'  						Size = 1'  						Mode = mode  					};  					sections.Add (section);  				} else  					section.Size++;  				n++;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  				RenderMode mode;  				// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  				// there are small variations in colors.  				if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Red-ish  					mode = RenderMode.Tile;  				else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Black-ish  					mode = RenderMode.Stretch;  				else  					mode = RenderMode.Fixed;    				if (section == null || mode != section.Mode) {  					section = new ImageSection {  						Start = n'  						Size = 1'  						Mode = mode  					};  					sections.Add (section);  				} else  					section.Size++;  				n++;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  				RenderMode mode;  				// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  				// there are small variations in colors.  				if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Red-ish  					mode = RenderMode.Tile;  				else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Black-ish  					mode = RenderMode.Stretch;  				else  					mode = RenderMode.Fixed;    				if (section == null || mode != section.Mode) {  					section = new ImageSection {  						Start = n'  						Size = 1'  						Mode = mode  					};  					sections.Add (section);  				} else  					section.Size++;  				n++;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  				RenderMode mode;  				// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  				// there are small variations in colors.  				if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Red-ish  					mode = RenderMode.Tile;  				else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Black-ish  					mode = RenderMode.Stretch;  				else  					mode = RenderMode.Fixed;    				if (section == null || mode != section.Mode) {  					section = new ImageSection {  						Start = n'  						Size = 1'  						Mode = mode  					};  					sections.Add (section);  				} else  					section.Size++;  				n++;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  				RenderMode mode;  				// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  				// there are small variations in colors.  				if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Red-ish  					mode = RenderMode.Tile;  				else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Black-ish  					mode = RenderMode.Stretch;  				else  					mode = RenderMode.Fixed;    				if (section == null || mode != section.Mode) {  					section = new ImageSection {  						Start = n'  						Size = 1'  						Mode = mode  					};  					sections.Add (section);  				} else  					section.Size++;  				n++;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,CreateSections,The following statement contains a magic number: foreach (var p in pixels) {  				RenderMode mode;  				// Don't compare exact colors. This is a workaround to make sure regions are properly detected when  				// there are small variations in colors.  				if (p.Red > 0.9 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Red-ish  					mode = RenderMode.Tile;  				else if (p.Red < 0.2 && p.Blue < 0.2 && p.Green < 0.2 && p.Alpha == 1) // Black-ish  					mode = RenderMode.Stretch;  				else  					mode = RenderMode.Fixed;    				if (section == null || mode != section.Mode) {  					section = new ImageSection {  						Start = n'  						Size = 1'  						Mode = mode  					};  					sections.Add (section);  				} else  					section.Size++;  				n++;  			}
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,GetFrame,The following statement contains a magic number: return frames.FirstOrDefault (i => Math.Abs (i.ScaleFactor - scaleFactor) < 0.1) ?? frames[0];
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,OnDraw,The following statement contains a magic number: var fixedWidth = frame.Bitmap.Width - 2 - frame.StretchableWidth;
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,OnDraw,The following statement contains a magic number: var fixedHeight = frame.Bitmap.Height - 2 - frame.StretchableHeight;
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,GetDefaultSize,The following statement contains a magic number: return new Size ((frame.Bitmap.Width - 2) / frame.ScaleFactor' (frame.Bitmap.Height - 2) / frame.ScaleFactor);
Magic Number,Xwt.Drawing,NinePatchImage,C:\repos\mono_xwt\Xwt\Xwt.Drawing\NinePatchImage.cs,GetDefaultSize,The following statement contains a magic number: return new Size ((frame.Bitmap.Width - 2) / frame.ScaleFactor' (frame.Bitmap.Height - 2) / frame.ScaleFactor);
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (int i = 0; i < lines.Length; i++) {  				var line = lines[i];  				var trimmed = line.TrimStart ();  				// New paragraph  				if (string.IsNullOrWhiteSpace (line)) {  					if (wasParagraph) {  						buffer.EmitEndParagraph ();  						wasParagraph = false;  					}  				}    				// Title  				else if (line.StartsWith ("#")) {  					var level = line.TakeWhile (c => c == '#').Count ();  					buffer.EmitStartHeader (level);  					ParseInline (buffer' line.Trim (' '' '#'));  					buffer.EmitEndHeader ();  				}    				// Title (setex-style)  				else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines[i + 1]) && lines[i + 1].All (c => c == '=' || c == '-')) {  					var level = lines[i + 1][0] == '=' ? 1 : 2;  					//  					//	FooBarBaz  					//	SomeHeader  					//	=========    					// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  					// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  					if (wasParagraph) {  						wasParagraph = false;  						buffer.EmitEndParagraph ();  					}  					buffer.EmitStartHeader (level);  					ParseInline (buffer' line);  					buffer.EmitEndHeader ();  					i++;  				}    				// Ruler  				else if (line.All (c => c == '-') && line.Length >= 3) {  					buffer.EmitHorizontalRuler ();  				}    				// Code blocks  				else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  					bool isFencedCodeBlock = line.StartsWith ("```");    					if (isFencedCodeBlock)  						i++;    					var codeblock = new StringBuilder ();  					for (; i < lines.Length; i++) {  						line = lines[i];  						if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  							break;  						if (isFencedCodeBlock && line.StartsWith ("```")) {  							i++;  							break;  						}    						if (isFencedCodeBlock && !line.StartsWith ("```"))  							codeblock.AppendLine (line);  						else  							codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  					}  					i--;  					if (wasParagraph) {  						buffer.EmitEndParagraph ();  						wasParagraph = false;  					}  					buffer.EmitCodeBlock (codeblock.ToString ());  				}    				// List  				else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  					buffer.EmitOpenList ();  					var bullet = trimmed[0].ToString ();  					for (; i < lines.Length; i++) {  						trimmed = lines[i].TrimStart ();  						if (!trimmed.StartsWith (bullet))  							break;  						buffer.EmitOpenBullet ();  						var lineBreaks = new List<string> ();  						lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  						while (i + 1 < lines.Length)  						{  							string nextTrimmed = lines[i + 1].TrimStart ();  							if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet))  							{  								lineBreaks.Add (nextTrimmed);  								i++;  							}  							else  								break;  						}  						ParseInline (buffer' string.Join (" "' lineBreaks));  						buffer.EmitCloseBullet ();  					}  					i--;  					buffer.EmitCloseList ();  				}    				// Normal paragraph  				else {  					if (!wasParagraph)  						buffer.EmitStartParagraph (0);  					ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ")? Environment.NewLine : " "));  					wasParagraph = true;  				}  			}
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (int i = 0; i < lines.Length; i++) {  				var line = lines[i];  				var trimmed = line.TrimStart ();  				// New paragraph  				if (string.IsNullOrWhiteSpace (line)) {  					if (wasParagraph) {  						buffer.EmitEndParagraph ();  						wasParagraph = false;  					}  				}    				// Title  				else if (line.StartsWith ("#")) {  					var level = line.TakeWhile (c => c == '#').Count ();  					buffer.EmitStartHeader (level);  					ParseInline (buffer' line.Trim (' '' '#'));  					buffer.EmitEndHeader ();  				}    				// Title (setex-style)  				else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines[i + 1]) && lines[i + 1].All (c => c == '=' || c == '-')) {  					var level = lines[i + 1][0] == '=' ? 1 : 2;  					//  					//	FooBarBaz  					//	SomeHeader  					//	=========    					// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  					// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  					if (wasParagraph) {  						wasParagraph = false;  						buffer.EmitEndParagraph ();  					}  					buffer.EmitStartHeader (level);  					ParseInline (buffer' line);  					buffer.EmitEndHeader ();  					i++;  				}    				// Ruler  				else if (line.All (c => c == '-') && line.Length >= 3) {  					buffer.EmitHorizontalRuler ();  				}    				// Code blocks  				else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  					bool isFencedCodeBlock = line.StartsWith ("```");    					if (isFencedCodeBlock)  						i++;    					var codeblock = new StringBuilder ();  					for (; i < lines.Length; i++) {  						line = lines[i];  						if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  							break;  						if (isFencedCodeBlock && line.StartsWith ("```")) {  							i++;  							break;  						}    						if (isFencedCodeBlock && !line.StartsWith ("```"))  							codeblock.AppendLine (line);  						else  							codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  					}  					i--;  					if (wasParagraph) {  						buffer.EmitEndParagraph ();  						wasParagraph = false;  					}  					buffer.EmitCodeBlock (codeblock.ToString ());  				}    				// List  				else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  					buffer.EmitOpenList ();  					var bullet = trimmed[0].ToString ();  					for (; i < lines.Length; i++) {  						trimmed = lines[i].TrimStart ();  						if (!trimmed.StartsWith (bullet))  							break;  						buffer.EmitOpenBullet ();  						var lineBreaks = new List<string> ();  						lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  						while (i + 1 < lines.Length)  						{  							string nextTrimmed = lines[i + 1].TrimStart ();  							if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet))  							{  								lineBreaks.Add (nextTrimmed);  								i++;  							}  							else  								break;  						}  						ParseInline (buffer' string.Join (" "' lineBreaks));  						buffer.EmitCloseBullet ();  					}  					i--;  					buffer.EmitCloseList ();  				}    				// Normal paragraph  				else {  					if (!wasParagraph)  						buffer.EmitStartParagraph (0);  					ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ")? Environment.NewLine : " "));  					wasParagraph = true;  				}  			}
Magic Number,Xwt.Formats,MarkdownTextFormat,C:\repos\mono_xwt\Xwt\Xwt.Formats\MarkdownTextFormat.cs,ParseMarkdown,The following statement contains a magic number: for (int i = 0; i < lines.Length; i++) {  				var line = lines[i];  				var trimmed = line.TrimStart ();  				// New paragraph  				if (string.IsNullOrWhiteSpace (line)) {  					if (wasParagraph) {  						buffer.EmitEndParagraph ();  						wasParagraph = false;  					}  				}    				// Title  				else if (line.StartsWith ("#")) {  					var level = line.TakeWhile (c => c == '#').Count ();  					buffer.EmitStartHeader (level);  					ParseInline (buffer' line.Trim (' '' '#'));  					buffer.EmitEndHeader ();  				}    				// Title (setex-style)  				else if (i < lines.Length - 1 && !string.IsNullOrEmpty (lines[i + 1]) && lines[i + 1].All (c => c == '=' || c == '-')) {  					var level = lines[i + 1][0] == '=' ? 1 : 2;  					//  					//	FooBarBaz  					//	SomeHeader  					//	=========    					// In the above Markdown snippet we generate a paragraph and then want to insert a header' so we  					// must close the paragraph containing 'FooBarBaz' first. Or we should disallow this construct  					if (wasParagraph) {  						wasParagraph = false;  						buffer.EmitEndParagraph ();  					}  					buffer.EmitStartHeader (level);  					ParseInline (buffer' line);  					buffer.EmitEndHeader ();  					i++;  				}    				// Ruler  				else if (line.All (c => c == '-') && line.Length >= 3) {  					buffer.EmitHorizontalRuler ();  				}    				// Code blocks  				else if (line.StartsWith ("\t") || line.StartsWith ("    ") || line.StartsWith ("```")) {  					bool isFencedCodeBlock = line.StartsWith ("```");    					if (isFencedCodeBlock)  						i++;    					var codeblock = new StringBuilder ();  					for (; i < lines.Length; i++) {  						line = lines[i];  						if (!line.StartsWith ("\t") && !line.StartsWith ("    ") && !isFencedCodeBlock)  							break;  						if (isFencedCodeBlock && line.StartsWith ("```")) {  							i++;  							break;  						}    						if (isFencedCodeBlock && !line.StartsWith ("```"))  							codeblock.AppendLine (line);  						else  							codeblock.AppendLine (line.StartsWith ("\t") ? line.Substring (1) : line.Substring (4));  					}  					i--;  					if (wasParagraph) {  						buffer.EmitEndParagraph ();  						wasParagraph = false;  					}  					buffer.EmitCodeBlock (codeblock.ToString ());  				}    				// List  				else if ((trimmed [0] == '+' || trimmed [0] == '-' || trimmed [0] == '*') && (trimmed [1] == ' ' || trimmed [1] == '\t')) {  					buffer.EmitOpenList ();  					var bullet = trimmed[0].ToString ();  					for (; i < lines.Length; i++) {  						trimmed = lines[i].TrimStart ();  						if (!trimmed.StartsWith (bullet))  							break;  						buffer.EmitOpenBullet ();  						var lineBreaks = new List<string> ();  						lineBreaks.Add (trimmed.TrimStart ('+'' '-'' '*'' ' '' '\t'));  						while (i + 1 < lines.Length)  						{  							string nextTrimmed = lines[i + 1].TrimStart ();  							if (nextTrimmed.Length > 0 && !nextTrimmed.StartsWith (bullet))  							{  								lineBreaks.Add (nextTrimmed);  								i++;  							}  							else  								break;  						}  						ParseInline (buffer' string.Join (" "' lineBreaks));  						buffer.EmitCloseBullet ();  					}  					i--;  					buffer.EmitCloseList ();  				}    				// Normal paragraph  				else {  					if (!wasParagraph)  						buffer.EmitStartParagraph (0);  					ParseInline (buffer' line.TrimEnd () + (line.EndsWith ("  ")? Environment.NewLine : " "));  					wasParagraph = true;  				}  			}
Magic Number,Xwt.Motion,Easing,C:\repos\mono_xwt\Xwt\Xwt.Motion\Easing.cs,Easing,The following statement contains a magic number: BounceOut = new Easing (p => {  				if (p < (1 / 2.75f))  				{  					return 7.5625f * p * p;  				}  				else if (p < (2 / 2.75f))  				{  					p -= (1.5f / 2.75f);  					  					return 7.5625f * p * p + .75f;  				}  				else if (p < (2.5f / 2.75f))  				{  					p -= (2.25f / 2.75f);  					  					return 7.5625f * p * p + .9375f;  				}  				else  				{  					p -= (2.625f / 2.75f);  					  					return 7.5625f * p * p + .984375f;  				}  			});
Magic Number,Xwt.Motion,Ticker,C:\repos\mono_xwt\Xwt\Xwt.Motion\Tweener.cs,EnableTimer,The following statement contains a magic number: timer = Xwt.Application.TimeoutInvoke (16' HandleElapsed);
Missing Default,Xwt,PopupWindow,C:\repos\mono_xwt\Xwt\Xwt\PopupWindow.cs,PopupWindow,The following switch statement is missing a default case: switch (type) {  			case PopupType.Tooltip:  			case PopupType.Menu:  				ShowInTaskbar = false;  				InitialLocation = WindowLocation.CenterParent;  				Resizable = false;  				break;  			}
Missing Default,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,EnableEvent,The following switch statement is missing a default case: switch ((ColorSelectorEvent)eventId) {  					case ColorSelectorEvent.ColorChanged: enableColorChangedEvent = true; break;  				}
Missing Default,Xwt,DefaultColorSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorSelector.cs,DisableEvent,The following switch statement is missing a default case: switch ((ColorSelectorEvent)eventId) {  					case ColorSelectorEvent.ColorChanged: enableColorChangedEvent = false; break;  				}
Missing Default,Xwt,FormattedText,C:\repos\mono_xwt\Xwt\Xwt\FormattedText.cs,PushSpan,The following switch statement is missing a default case: switch (tag) {  			case "b":  				span.Add (new FontWeightTextAttribute () { Weight = FontWeight.Bold });  				break;  			case "i":  				span.Add (new FontStyleTextAttribute () { Style = FontStyle.Italic });  				break;  			case "s":  				span.Add (new StrikethroughTextAttribute ());  				break;  			case "u":  				span.Add (new UnderlineTextAttribute ());  				break;  			case "a":  				Uri href = null;  				ReadXmlAttributes (markup' ref k' (name' val) => {  					if (name == "href") {  						href = new Uri (val' UriKind.RelativeOrAbsolute);  						return true;  					}  					return false;  				});  				span.Add (new LinkTextAttribute () { Target = href });  				break;    			case "span":  				ParseAttributes (span' markup' ref k);  				break;  //			case "small":  //			case "big":  //			case "tt":  			}
Missing Default,Xwt,FormattedText,C:\repos\mono_xwt\Xwt\Xwt\FormattedText.cs,CreateAttribute,The following switch statement is missing a default case: switch (name) {  			case "font":  			case "font-desc":  			case "font_desc":  				return new FontTextAttribute () { Font = Font.FromName (val) };    /*			case "size":  			case "font_size":  				double s;  				if (!double.TryParse (val' NumberStyles.Any' CultureInfo.InvariantCulture' out s))  					return null;  				return new FontSizeTextAttribute () { Size = s };  */  			case "font_weight":  			case "font-weight":  			case "weight":  				FontWeight w;  				if (!Enum.TryParse<FontWeight> (val' true' out w))  					return null;  				return new FontWeightTextAttribute () { Weight = w };    			case "font_style":  			case "font-style":  				FontStyle s;  				if (!Enum.TryParse<FontStyle> (val' true' out s))  					return null;  				return new FontStyleTextAttribute () { Style = s };    			case "foreground":  			case "fgcolor":  			case "color":  				Color c;  				if (!Color.TryParse (val' out c))  					return null;  				return new ColorTextAttribute () { Color = c };    			case "background":  			case "background-color":  			case "bgcolor":  				Color bc;  				if (!Color.TryParse (val' out bc))  					return null;  				return new BackgroundTextAttribute () { Color = bc };    			case "underline":  				return new UnderlineTextAttribute () {  					Underline = ParseBool (val' false)  				};    			case "strikethrough":  				return new StrikethroughTextAttribute () {  					Strikethrough = ParseBool (val' false)  				};  			}
Missing Default,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,EnableEvent,The following switch statement is missing a default case: switch ((ColorPickerEvent)eventId) {  					case ColorPickerEvent.ColorChanged: enabledOnColorChanged = true; break;  				}
Missing Default,Xwt,DefaultColorPickerBackend,C:\repos\mono_xwt\Xwt\Xwt\ColorPicker.cs,DisableEvent,The following switch statement is missing a default case: switch ((ColorPickerEvent)eventId) {  					case ColorPickerEvent.ColorChanged: enabledOnColorChanged = false; break;  				}
Missing Default,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,EnableEvent,The following switch statement is missing a default case: switch ((FontSelectorEvent)eventId) {  					case FontSelectorEvent.FontChanged: enableFontChangedEvent = true; break;  				}
Missing Default,Xwt,DefaultFontSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FontSelector.cs,DisableEvent,The following switch statement is missing a default case: switch ((FontSelectorEvent)eventId) {  					case FontSelectorEvent.FontChanged: enableFontChangedEvent = false; break;  				}
Missing Default,Xwt,DefaultFileSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FileSelector.cs,EnableEvent,The following switch statement is missing a default case: switch ((FileSelectorEvent)eventId) {  				case FileSelectorEvent.FileChanged: enableFileChangedEvent = true; break;  				}
Missing Default,Xwt,DefaultFileSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FileSelector.cs,DisableEvent,The following switch statement is missing a default case: switch ((FileSelectorEvent)eventId) {  				case FileSelectorEvent.FileChanged: enableFileChangedEvent = false; break;  				}
Missing Default,Xwt,DefaultFolderSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FolderSelector.cs,EnableEvent,The following switch statement is missing a default case: switch ((FolderSelectorEvent)eventId) {  				case FolderSelectorEvent.FolderChanged: enableFolderChangedEvent = true; break;  				}
Missing Default,Xwt,DefaultFolderSelectorBackend,C:\repos\mono_xwt\Xwt\Xwt\FolderSelector.cs,DisableEvent,The following switch statement is missing a default case: switch ((FolderSelectorEvent)eventId) {  				case FolderSelectorEvent.FolderChanged: enableFolderChangedEvent = false; break;  				}
Missing Default,Xwt.Drawing,VectorImageRecorderContextHandler,C:\repos\mono_xwt\Xwt\Xwt.Drawing\VectorImage.cs,Draw,The following switch statement is missing a default case: switch (cm.Commands [n]) {  				case DrawingCommand.AppendPath:  					var p = cm.Objects [oi++];  					if (p is VectorImageData)  						Draw (targetHandler' ctx' (VectorImageData)p);  					else  						pathHandler.AppendPath (ctx' p);  					break;  				case DrawingCommand.Arc:  					pathHandler.Arc (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.ArcNegative:  					pathHandler.ArcNegative (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.Clip:  					handler.Clip (ctx);  					break;  				case DrawingCommand.ClipPreserve:  					handler.ClipPreserve (ctx);  					break;  				case DrawingCommand.ClosePath:  					pathHandler.ClosePath (ctx);  					break;  				case DrawingCommand.CurveTo:  					pathHandler.CurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.DrawImage2:  					handler.DrawImage (ctx' cm.Images [imi++]' cm.Rectangles [ri++]' cm.Rectangles [ri++]);  					break;  				case DrawingCommand.DrawImage:  					handler.DrawImage (ctx' cm.Images [imi++]' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.DrawTextLayout:  					var lad = (TextLayoutData)cm.TextLayouts [ti++];  					var la = new TextLayout (toolkit);  					lad.InitLayout (la);  					handler.DrawTextLayout (ctx' la' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.Fill:  					handler.Fill (ctx);  					break;  				case DrawingCommand.FillPreserve:  					handler.FillPreserve (ctx);  					break;  				case DrawingCommand.LineTo:  					pathHandler.LineTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.MoveTo:  					pathHandler.MoveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.NewPath:  					handler.NewPath (ctx);  					break;  				case DrawingCommand.Rectangle:  					pathHandler.Rectangle (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.RelCurveTo:  					pathHandler.RelCurveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.RelLineTo:  					pathHandler.RelLineTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.RelMoveTo:  					pathHandler.RelMoveTo (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.Restore:  					handler.Restore (ctx);  					break;  				case DrawingCommand.Rotate:  					handler.Rotate (ctx' cm.Doubles [di++]);  					break;  				case DrawingCommand.Save:  					handler.Save (ctx);  					break;  				case DrawingCommand.Scale:  					handler.Scale (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.SetColor:  					handler.SetColor (ctx' cm.Colors [ci++]);  					break;  				case DrawingCommand.SetGlobalAlpha:  					handler.SetGlobalAlpha (ctx' cm.Doubles [di++]);  					break;  				case DrawingCommand.SetLineDash:  					var off = cm.Doubles [di++];  					var ds = new double [cm.Ints [ii++]];  					for (int i = 0; i < ds.Length; i++)  						ds [i] = cm.Doubles [di++];  					handler.SetLineDash (ctx' off' ds);  					break;  				case DrawingCommand.SetLineWidth:  					handler.SetLineWidth (ctx' cm.Doubles [di++]);  					break;  				case DrawingCommand.SetPattern:  					handler.SetPattern (ctx' cm.Objects [oi++]);  					break;  				case DrawingCommand.Stroke:  					handler.Stroke (ctx);  					break;  				case DrawingCommand.StrokePreserve:  					handler.StrokePreserve (ctx);  					break;  				case DrawingCommand.Translate:  					handler.Translate (ctx' cm.Doubles [di++]' cm.Doubles [di++]);  					break;  				case DrawingCommand.SetStyles:  					handler.SetStyles (ctx' (StyleSet)cm.Objects [oi++]);  					break;  				}
