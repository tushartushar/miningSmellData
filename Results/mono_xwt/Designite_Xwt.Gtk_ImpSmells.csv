Implementation smell,Namespace,Class,File,Method,Description
Long Method,Xwt.GtkBackend,GtkEngine,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkEngine.cs,InitializeBackends,The method has 108 lines of code.
Long Method,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToAtkRole,The method has 108 lines of code.
Long Method,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtRole,The method has 188 lines of code.
Complex Method,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,SetCursor,Cyclomatic complexity of the method is 23
Complex Method,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,EnableEvent,Cyclomatic complexity of the method is 18
Complex Method,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,DisableEvent,Cyclomatic complexity of the method is 24
Complex Method,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,DoDragDataReceived,Cyclomatic complexity of the method is 8
Complex Method,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetContent,Cyclomatic complexity of the method is 21
Complex Method,Xwt.GtkBackend,TreeStoreBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeStoreBackend.cs,GetChild,Cyclomatic complexity of the method is 12
Complex Method,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,FindFrame,Cyclomatic complexity of the method is 8
Complex Method,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,Xwt.GtkBackend,Util,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Util.cs,CreateTargetEntries,Cyclomatic complexity of the method is 13
Complex Method,Xwt.GtkBackend,TableViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,UpdateColumn,Cyclomatic complexity of the method is 9
Complex Method,Xwt.GtkBackend,GtkAlertDialog,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkAlertDialog.cs,GtkAlertDialog,Cyclomatic complexity of the method is 12
Complex Method,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetTagForAttributes,Cyclomatic complexity of the method is 13
Complex Method,Xwt.GtkBackend,FrameBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\FrameBackend.cs,SetFrameType,Cyclomatic complexity of the method is 12
Complex Method,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,Cyclomatic complexity of the method is 8
Complex Method,Xwt.GtkBackend,RichTextBuffer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RichTextViewBackend.cs,EmitText,Cyclomatic complexity of the method is 11
Complex Method,Xwt.GtkBackend,FastPangoAttrList,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkInterop.cs,AddAttribute,Cyclomatic complexity of the method is 10
Complex Method,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToResponseType,Cyclomatic complexity of the method is 9
Complex Method,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToAtkRole,Cyclomatic complexity of the method is 52
Complex Method,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtRole,Cyclomatic complexity of the method is 48
Complex Method,Xwt.GtkBackend,CellViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellViewBackend.cs,HandleMotionNotifyEvent,Cyclomatic complexity of the method is 10
Complex Method,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,GetSliderPosition,Cyclomatic complexity of the method is 9
Complex Method,Xwt.GtkBackend,CustomCellRendererComboBox,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CustomCellRendererComboBox.cs,HandleEdited,Cyclomatic complexity of the method is 9
Long Parameter List,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,DoDragDataReceived,The method has 6 parameters. Parameters: context' x' y' selectionData' info' time
Long Parameter List,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,OnSetDragStatus,The method has 5 parameters. Parameters: context' x' y' time' action
Long Parameter List,Xwt.GtkBackend,GtkEngine,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkEngine.cs,RenderImage,The method has 5 parameters. Parameters: nativeWidget' nativeContext' img' x' y
Long Parameter List,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetContent,The method has 5 parameters. Parameters: label' useMnemonic' image' position' forceCustomLabel
Long Parameter List,Xwt.GtkBackend,TreeViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeViewBackend.cs,OnSetDragStatus,The method has 5 parameters. Parameters: context' x' y' time' action
Long Parameter List,Xwt.GtkBackend,CellUtil,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellUtil.cs,CreateCellRenderer,The method has 5 parameters. Parameters: actx' widget' col' target' view
Long Parameter List,Xwt.GtkBackend,CellUtil,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellUtil.cs,SetModelValue,The method has 5 parameters. Parameters: store' it' column' type' value
Long Parameter List,Xwt.GtkBackend,ICellRendererTarget,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellUtil.cs,GetCellPosition,The method has 6 parameters. Parameters: r' ex' ey' cx' cy' iter
Long Parameter List,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CopyBitmapArea,The method has 8 parameters. Parameters: srcHandle' srcX' srcY' width' height' destHandle' destX' destY
Long Parameter List,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CropBitmap,The method has 5 parameters. Parameters: handle' srcX' srcY' width' height
Long Parameter List,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBestFrame,The method has 5 parameters. Parameters: actx' w' width' height' forceExactSize
Long Parameter List,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBestFrame,The method has 5 parameters. Parameters: actx' scaleFactor' width' height' forceExactSize
Long Parameter List,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,Draw,The method has 6 parameters. Parameters: actx' ctx' scaleFactor' x' y' idesc
Long Parameter List,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,DrawPixbuf,The method has 5 parameters. Parameters: ctx' img' x' y' idesc
Long Parameter List,Xwt.GtkBackend,GtkFontBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\FontBackendHandler.cs,Create,The method has 5 parameters. Parameters: fontName' size' style' weight' stretch
Long Parameter List,Xwt.GtkBackend,TableViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,GetCellPosition,The method has 6 parameters. Parameters: r' ex' ey' cx' cy' it
Long Parameter List,Xwt.GtkBackend,ComboBoxBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ComboBoxBackend.cs,GetCellPosition,The method has 6 parameters. Parameters: r' ex' ey' cx' cy' it
Long Parameter List,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetPageScrollPixelDeltas,The method has 5 parameters. Parameters: evt' pageSizeX' pageSizeY' deltaX' deltaY
Long Parameter List,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,TranslateKeyboardState,The method has 7 parameters. Parameters: hardware_keycode' state' group' keyval' effective_group' level' consumed_modifiers
Long Parameter List,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,gtk_tree_view_get_tooltip_context,The method has 7 parameters. Parameters: raw' x' y' keyboard_tip' model' path' iter
Long Parameter List,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetTooltipContext,The method has 7 parameters. Parameters: tree' x' y' keyboardTip' model' path' iter
Long Parameter List,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,gtk_icon_set_render_icon_scaled,The method has 8 parameters. Parameters: handle' style' direction' state' size' widget' intPtr' scale
Long Parameter List,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,RenderIcon,The method has 8 parameters. Parameters: iconset' style' direction' state' size' widget' detail' scale
Long Parameter List,Xwt.GtkBackend,DataRequest,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ClipboardBackend.cs,DataRequest,The method has 6 parameters. Parameters: context' clipboard' callback' state' type' atoms
Long Parameter List,Xwt.GtkBackend,ScrollAdjustmentBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ScrollAdjustmentBackend.cs,SetRange,The method has 6 parameters. Parameters: lowerValue' upperValue' pageSize' pageIncrement' stepIncrement' value
Long Parameter List,Xwt.GtkBackend,CanvasRenderer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CustomCellRenderer.cs,OnRender,The method has 5 parameters. Parameters: cr' widget' background_area' cell_area' flags
Long Parameter List,Xwt.GtkBackend,CanvasRenderer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CustomCellRenderer.cs,OnGetSize,The method has 6 parameters. Parameters: widget' cell_area' x_offset' y_offset' width' height
Long Parameter List,Xwt.GtkBackend,ImageRenderer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CustomCellRendererImage.cs,OnRender,The method has 5 parameters. Parameters: cr' widget' background_area' cell_area' flags
Long Parameter List,Xwt.GtkBackend,ImageRenderer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CustomCellRendererImage.cs,OnGetSize,The method has 6 parameters. Parameters: widget' cell_area' x_offset' y_offset' width' height
Long Parameter List,Xwt.GtkBackend,GtkCellRendererCustom,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\Gtk2CellRendererCustom.cs,Render,The method has 6 parameters. Parameters: window' widget' background_area' cell_area' expose_area' flags
Long Parameter List,Xwt.GtkBackend,GtkCellRendererCustom,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\Gtk2CellRendererCustom.cs,OnRender,The method has 5 parameters. Parameters: cr' widget' background_area' cell_area' flags
Long Parameter List,Xwt.GtkBackend,GtkCellRendererCustom,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\Gtk2CellRendererCustom.cs,GetSize,The method has 6 parameters. Parameters: widget' cell_area' x_offset' y_offset' width' height
Long Parameter List,Xwt.GtkBackend,GtkCellRendererCustom,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\Gtk2CellRendererCustom.cs,OnGetSize,The method has 6 parameters. Parameters: widget' cell_area' x_offset' y_offset' width' height
Long Parameter List,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,RoundBorder,The method has 5 parameters. Parameters: ctx' x' y' w' h
Long Parameter List,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,ToPixbuf,The method has 5 parameters. Parameters: window' src_x' src_y' width' height
Long Parameter List,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,AddContent,The method has 5 parameters. Parameters: dialog' widget' expand' fill' padding
Long Parameter List,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,AddContent,The method has 5 parameters. Parameters: dialog' widget' expand' fill' padding
Long Parameter List,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,RenderPlaceholderText_internal,The method has 8 parameters. Parameters: widget' args' placeHolderText' layout' xalign' yalign' xpad' ypad
Long Parameter List,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The method has 6 parameters. Parameters: cr' x' y' w' h' r
Long Parameter List,Xwt.CairoBackend,CairoContextBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoContextBackendHandler.cs,Arc,The method has 6 parameters. Parameters: backend' xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.CairoBackend,CairoContextBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoContextBackendHandler.cs,ArcNegative,The method has 6 parameters. Parameters: backend' xc' yc' radius' angle1' angle2
Long Parameter List,Xwt.CairoBackend,CairoContextBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoContextBackendHandler.cs,CurveTo,The method has 7 parameters. Parameters: backend' x1' y1' x2' y2' x3' y3
Long Parameter List,Xwt.CairoBackend,CairoContextBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoContextBackendHandler.cs,Rectangle,The method has 5 parameters. Parameters: backend' x' y' width' height
Long Parameter List,Xwt.CairoBackend,CairoContextBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoContextBackendHandler.cs,RelCurveTo,The method has 7 parameters. Parameters: backend' dx1' dy1' dx2' dy2' dx3' dy3
Long Parameter List,Xwt.CairoBackend,CairoGradientBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoGradientBackendHandler.cs,CreateRadial,The method has 6 parameters. Parameters: cx0' cy0' radius0' cx1' cy1' radius1
Long Parameter List,Xwt.GtkBackend.WebKit,WebView,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWebKitMini.cs,webkit_web_view_load_string,The method has 5 parameters. Parameters: raw' content' mime_type' encoding' base_uri
Long Statement,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,NeedsAlignmentWrapper,The length of the statement  "			return fw.HorizontalPlacement != WidgetPlacement.Fill || fw.VerticalPlacement != WidgetPlacement.Fill || fw.Margin.VerticalSpacing != 0 || fw.Margin.HorizontalSpacing != 0;" is 172.
Long Statement,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,DoDragDataReceived,The length of the statement  "					OnSetDragStatus (context' (int)DragDropInfo.LastDragPosition.X' (int)DragDropInfo.LastDragPosition.Y' time' ConvertDragAction (da.AllowedAction));" is 146.
Long Statement,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,DragStart,The length of the statement  "			Gtk.Drag.Begin (EventsRootWidget' Util.BuildTargetTable (sdata.Data.DataTypes)' action' 1' Gtk.Global.CurrentEvent ?? new Gdk.Event (IntPtr.Zero));" is 147.
Long Statement,Xwt.GtkBackend,CustomContainer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\BoxBackend.cs,OnSizeAllocated,The length of the statement  "				cr.Key.SizeAllocate (new Gdk.Rectangle (allocation.X + (int)r.X' allocation.Y + (int)r.Y' (int)r.Width' (int)r.Height));" is 120.
Long Statement,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetContent,The length of the statement  "				Gtk.Box box = position == ContentPosition.Left || position == ContentPosition.Right ? (Gtk.Box) new Gtk.HBox (false' 3) : (Gtk.Box) new Gtk.VBox (false' 3);" is 156.
Long Statement,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetMiniMode,The length of the statement  "//			Gtk.Rc.ParseString ("style \"Xwt.GtkBackend.CustomButton\" {\n GtkButton::inner-border = {0'0'0'0} GtkButton::child-displacement-x = {0} GtkButton::child-displacement-y = {0}\n }\n");" is 188.
Long Statement,Xwt.GtkBackend,TreeStoreBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeStoreBackend.cs,OnNodesReordered,The length of the statement  "			if (NodesReordered != null) System.Diagnostics.Debug.WriteLine ($"No support for {nameof (NodesReordered)} events from {nameof (TreeStoreBackend)}' sorry.");" is 157.
Long Statement,Xwt.GtkBackend,TreeViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeViewBackend.cs,GetCellBounds,The length of the statement  "			var rect = includeMargin ? ((ICellRendererTarget)this).GetCellBackgroundBounds (col' cr' iter) : ((ICellRendererTarget)this).GetCellBounds (col' cr' iter);" is 155.
Long Statement,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateMultiResolutionImage,The length of the statement  "			var frames = images.Cast<GtkImage> ().Select (img => new GtkImage.ImageFrame (img.Frames[0].Pixbuf' f.Width' f.Height' true));" is 126.
Long Statement,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateMultiSizeIcon,The length of the statement  "			var customDrawn = images.Cast<GtkImage> ().FirstOrDefault (img => (img.Frames == null || img.Frames.Length == 0) && img.HasMultipleSizes);" is 138.
Long Statement,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,ConvertToBitmap,The length of the statement  "			var f = new GtkImage.ImageFrame (img.GetBestFrame (ApplicationContext' scaleFactor' idesc' true)' (int)idesc.Size.Width' (int)idesc.Size.Height' true);" is 151.
Long Statement,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The length of the statement  "				result = iconset.RenderIcon (Gtk.Widget.DefaultStyle' Gtk.TextDirection.Ltr' Gtk.StateType.Normal' gsize' null' null' scaleFactor);" is 131.
Long Statement,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The length of the statement  "						result = iconset.RenderIcon (Gtk.Widget.DefaultStyle' Gtk.TextDirection.Ltr' Gtk.StateType.Normal' gsize2x' null' null);" is 120.
Long Statement,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,FindFrame,The length of the statement  "				var resolutionMatch = ((double)f.Pixbuf.Width * (double)f.Pixbuf.Height) / ((double)width * (double)height * scaleFactor);" is 122.
Long Statement,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,FindFrame,The length of the statement  "				    (bestResolutionMatch >= 1 && resolutionMatch >= 1 && resolutionMatch <= bestResolutionMatch && (sizeMatch >= bestSizeMatch))) " is 125.
Long Statement,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBestFrame,The length of the statement  "			return GetBestFrame (actx' Util.GetScaleFactor (w)' new ImageDescription { Alpha = 1' Size = new Size (width' height) }' forceExactSize);" is 137.
Long Statement,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBestFrame,The length of the statement  "			return GetBestFrame (actx' scaleFactor' new ImageDescription { Alpha = 1' Size = new Size (width' height) }' forceExactSize);" is 125.
Long Statement,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,RenderFrame,The length of the statement  "				var f = new ImageFrame (ImageBuilderBackend.CreatePixbuf (sf)' Math.Max ((int)idesc.Size.Width' 1)' Math.Max ((int)idesc.Size.Height' 1)' true);" is 144.
Long Statement,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,Draw,The length of the statement  "					frame = new ImageFrame (ImageHandler.CreateBitmap (stockId' idesc.Size.Width' idesc.Size.Height' scaleFactor)' (int)idesc.Size.Width' (int)idesc.Size.Height' false);" is 165.
Long Statement,Xwt.GtkBackend,CustomTreeView,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,OnButtonPressEvent,The length of the statement  "				var ctrlShiftMask = (evnt.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod2Mask));" is 123.
Long Statement,Xwt.GtkBackend,CustomTreeView,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,OnButtonPressEvent,The length of the statement  "				if (treePath != null && evnt.Button == 1 && this.Selection.PathIsSelected (treePath) && this.Selection.CountSelectedRows() > 1 && ctrlShiftMask == 0) {" is 151.
Long Statement,Xwt.GtkBackend,ListStoreBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ListStoreBackend.cs,InitializeModel,The length of the statement  "				if (RowsReordered != null) System.Diagnostics.Debug.WriteLine ($"No support for {nameof (RowsReordered)} events from {nameof (ListStoreBackend)}' sorry.");" is 155.
Long Statement,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,CreateForallCallback,The length of the statement  "			il.Emit (OpCodes.Call' typeof(GLib.ObjectManager).GetMethod ("gtksharp_get_type_id"' BindingFlags.Static | BindingFlags.NonPublic));" is 132.
Long Statement,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,CreateForallCallback,The length of the statement  "			il.Emit (OpCodes.Call' typeof (Gtk.Container).GetMethod ("gtksharp_container_base_forall"' BindingFlags.Static | BindingFlags.NonPublic));" is 138.
Long Statement,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetTooltipContext,The length of the statement  "			bool result = gtk_tree_view_get_tooltip_context (tree.Handle' ref x' ref y' keyboardTip' out handle' out intPtr2' intPtr);" is 122.
Long Statement,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,RenderIcon,The length of the statement  "				IntPtr o = gtk_icon_set_render_icon_scaled (iconset.Handle' (style != null) ? style.Handle : IntPtr.Zero' (int)direction' (int)state' (int)size' (widget != null) ? widget.Handle : IntPtr.Zero' intPtr' ref scale);" is 212.
Long Statement,Xwt.GtkBackend,UrlHandlerClosure,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,ConnectTo,The length of the statement  "				label.AddSignalHandler ("activate-link"' new EventHandler<ActivateLinkEventArgs> (HandleLink)' typeof(ActivateLinkEventArgs));" is 126.
Long Statement,Xwt.GtkBackend,HeaderBox,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\HeaderBox.cs,OnDrawn,The length of the statement  "			cr.SetSourceColor (color.HasValue ? color.Value.ToCairoColor () : Style.Dark (Gtk.StateType.Normal).ToXwtValue ().ToCairoColor ());" is 131.
Long Statement,Xwt.GtkBackend,ImagePatternBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImagePatternBackendHandler.cs,GetPattern,The length of the statement  "				using (var imgs = new Cairo.ImageSurface (Cairo.Format.ARGB32' (int)(Image.Size.Width * scaleFactor)' (int)(Image.Size.Height * scaleFactor))) {" is 144.
Long Statement,Xwt.GtkBackend,StatusIconBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\StatusIconBackend.cs,SetImage,The length of the statement  "			statusItem.Pixbuf = ((GtkImage)image.Backend).GetBestFrame (context' Util.GetDefaultScaleFactor ()' image.Size.Width' image.Size.Height' true);" is 143.
Long Statement,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The length of the statement  "			var position = new Point (positionRect.Center.X' popover.ArrowPosition == Xwt.Popover.Position.Top ? positionRect.Bottom : positionRect.Top);" is 141.
Long Statement,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The length of the statement  "				popover.ArrowPosition = arrowPos == Xwt.Popover.Position.Bottom ? Xwt.Popover.Position.Top : Xwt.Popover.Position.Bottom;" is 121.
Long Statement,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The length of the statement  "				position = new Point (positionRect.Center.X' popover.ArrowPosition == Xwt.Popover.Position.Top ? positionRect.Bottom : positionRect.Top);" is 137.
Long Statement,Xwt.GtkBackend,GtkDatePickerEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\DatePickerBackend.cs,OnKeyReleaseEvent,The length of the statement  "						current = current.SetComponent (selectedComponent' AddDigitToValue (current.GetComponent (selectedComponent)' pressedKey));" is 123.
Long Statement,Xwt.GtkBackend,GtkDatePickerEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\DatePickerBackend.cs,OnKeyPressEvent,The length of the statement  "				if (value == 0 || value == '\t' || xwtModifiers.HasFlag(ModifierKeys.Control) || xwtModifiers.HasFlag (ModifierKeys.Alt))" is 121.
Long Statement,Xwt.GtkBackend,LinkLabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LinkLabelBackend.cs,SetMarkup,The length of the statement  "			string url = string.Format ("<a href=\"{1}\">{0}</a>"' SecurityElement.Escape (text)' uri != null ? SecurityElement.Escape (uri.ToString ()) : "");" is 147.
Long Statement,Xwt.GtkBackend,EmbeddedWidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\EmbeddedWidgetBackend.cs,SetContent,The length of the statement  "			Type frameworkElement = Type.GetType ("System.Windows.FrameworkElement' PresentationFramework' Version=4.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35"' false);" is 170.
Long Statement,Xwt.GtkBackend,CanvasRenderer,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CustomCellRenderer.cs,OnRender,The length of the statement  "			Parent.StartDrawing (new Rectangle (background_area.X' background_area.Y' background_area.Width' background_area.Height)' new Rectangle (cell_area.X' cell_area.Y' cell_area.Width' cell_area.Height)' flags);" is 206.
Long Statement,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtValue,The length of the statement  "			return new Color ((double)color.Red / (double)ushort.MaxValue' (double)color.Green / (double)ushort.MaxValue' (double)color.Blue / (double)ushort.MaxValue);" is 156.
Long Statement,Xwt.GtkBackend,CellViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellViewBackend.cs,HandleButtonReleaseEvent,The length of the statement  "			} else if (!rendererTarget.GetCellPosition (CellRenderer' (int)args.Event.X' (int)args.Event.Y' out cx' out cy' out iter))" is 122.
Long Statement,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The length of the statement  "			var alloc = new Gdk.Rectangle (alignment.Allocation.X' box.Allocation.Y' alignment.Allocation.Width' box.Allocation.Height);" is 124.
Long Statement,Xwt.GtkBackend,PopupWindowBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopupWindowBackend.cs,Initialize,The length of the statement  "			Window = new GtkPopoverWindow (windowType == PopupWindow.PopupType.Tooltip ? Gtk.WindowType.Popup : Gtk.WindowType.Toplevel);" is 125.
Complex Conditional,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetContent,The conditional expression  "label != null && image.Backend == null && b.Type == ButtonType.Normal && !forceCustomLabel"  is complex.
Complex Conditional,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,FindFrame,The conditional expression  "best == null || 				    (bestResolutionMatch < 1 && resolutionMatch > bestResolutionMatch) || 				    (bestResolutionMatch >= 1 && resolutionMatch >= 1 && resolutionMatch <= bestResolutionMatch && (sizeMatch >= bestSizeMatch))"  is complex.
Complex Conditional,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBestFrame,The conditional expression  "f == null || (forceExactSize && (f.Width != (int)idesc.Size.Width || f.Height != (int)idesc.Size.Height))"  is complex.
Complex Conditional,Xwt.GtkBackend,ImageBox,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,OnDrawn,The conditional expression  "a.Width == 1 && a.Height == 1 && a.X == -1 && a.Y == -1"  is complex.
Complex Conditional,Xwt.GtkBackend,CustomTreeView,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,OnButtonPressEvent,The conditional expression  "treePath != null && evnt.Button == 1 && this.Selection.PathIsSelected (treePath) && this.Selection.CountSelectedRows() > 1 && ctrlShiftMask == 0"  is complex.
Complex Conditional,Xwt.GtkBackend,ScrollViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ScrollViewBackend.cs,SetChild,The conditional expression  "w is Gtk.Viewport || w is Gtk.TreeView || w is Gtk.TextView || w is Gtk.Layout || w is WebKit.WebView"  is complex.
Complex Conditional,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,IsContextMenuButton,The conditional expression  "!oldMacKeyHacks && 					evt.Button == 1 && 					(evt.State & Gdk.ModifierType.ControlMask) != 0 && 					(evt.State & (Gdk.ModifierType.Button2Mask | Gdk.ModifierType.Button3Mask)) == 0"  is complex.
Complex Conditional,Xwt.GtkBackend,FrameBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\FrameBackend.cs,SetPadding,The conditional expression  "left == 0 && right == 0 && top == 0 && bottom == 0 && paddingAlign == null"  is complex.
Complex Conditional,Xwt.GtkBackend,GtkDatePickerEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\DatePickerBackend.cs,OnKeyPressEvent,The conditional expression  "value == 0 || value == '\t' || xwtModifiers.HasFlag(ModifierKeys.Control) || xwtModifiers.HasFlag (ModifierKeys.Alt)"  is complex.
Complex Conditional,Xwt.GtkBackend,CellViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellViewBackend.cs,DisableMouseEvents,The conditional expression  "(enabledEvents & WidgetEvent.MouseMoved) == WidgetEvent.MouseMoved || 			    (enabledEvents & WidgetEvent.MouseEntered) == WidgetEvent.MouseEntered || 			    (enabledEvents & WidgetEvent.MouseExited) == WidgetEvent.MouseExited || 			    (enabledEvents & WidgetEvent.KeyPressed) == WidgetEvent.KeyPressed || 			    (enabledEvents & WidgetEvent.KeyReleased) == WidgetEvent.KeyReleased"  is complex.
Complex Conditional,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The conditional expression  "hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))"  is complex.
Empty Catch Block,Xwt.GtkBackend,GtkEngine,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkEngine.cs,InitializeBackends,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,Platform,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Platform.cs,IsRunningOnMac,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,FixContainerLeak,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetOverlayScrollbarPolicy,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetOverlayScrollbarPolicy,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetOverlayScrollbarPolicy,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetOverlayScrollbarPolicy,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetSourceScale,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetSourceScale,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetSourceScaleWildcarded,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetSourceScaleWildcarded,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,Get2xVariant,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,Get2xVariant,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetScaleFactor,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetScaleFactor,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetScaleFactor,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetScaleFactor,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,RenderIcon,The method has an empty catch block.
Empty Catch Block,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,RenderIcon,The method has an empty catch block.
Magic Number,Xwt.GtkBackend,LabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LabelBackend.cs,LabelBackend,The following statement contains a magic number: Label.Yalign = 0.5f;
Magic Number,Xwt.GtkBackend,LabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LabelBackend.cs,SetAlignmentGtk,The following statement contains a magic number: switch (TextAlignment) { 				case Alignment.Start: 					Label.Xalign = 0f; 					break; 				case Alignment.End: 					Label.Xalign = Label.LineWrap ? 0 : 1; 					break; 				case Alignment.Center: 					Label.Xalign = Label.LineWrap ? 0 : 0.5f; 					break; 			}
Magic Number,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,GetButtonPressEventArgs,The following statement contains a magic number: a.MultiplePress = 2;
Magic Number,Xwt.GtkBackend,GtkEngine,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkEngine.cs,DispatchPendingEvents,The following statement contains a magic number: int n = 1000;
Magic Number,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetContent,The following statement contains a magic number: Gtk.HBox box = new Gtk.HBox (false' 3);
Magic Number,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetContent,The following statement contains a magic number: box.PackStart (contentWidget' true' true' 3);
Magic Number,Xwt.GtkBackend,TreeViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeViewBackend.cs,OnSetDragStatus,The following statement contains a magic number: expandTimer = GLib.Timeout.Add (600' delegate { 						expandTimer = 0; 						Widget.ExpandRow (path' false); 						return false; 					});
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,SetBitmapPixel,The following statement contains a magic number: p[0] = (byte)(color.Red * 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,SetBitmapPixel,The following statement contains a magic number: p[1] = (byte)(color.Green * 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,SetBitmapPixel,The following statement contains a magic number: p[2] = (byte)(color.Blue * 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,SetBitmapPixel,The following statement contains a magic number: p[2] = (byte)(color.Blue * 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,SetBitmapPixel,The following statement contains a magic number: p[3] = (byte)(color.Alpha * 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,SetBitmapPixel,The following statement contains a magic number: p[3] = (byte)(color.Alpha * 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBitmapPixel,The following statement contains a magic number: return Xwt.Drawing.Color.FromBytes (p[0]' p[1]' p[2]' p[3]);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,GetBitmapPixel,The following statement contains a magic number: return Xwt.Drawing.Color.FromBytes (p[0]' p[1]' p[2]' p[3]);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 0' 0);
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' (w / 4)' (h / 4)' ((w - 1) - (w / 4))' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' (w / 4)' (h / 4)' ((w - 1) - (w / 4))' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' (w / 4)' (h / 4)' ((w - 1) - (w / 4))' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' (w / 4)' (h / 4)' ((w - 1) - (w / 4))' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' ((w - 1) - (w / 4))' (h / 4)' (w / 4)' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' ((w - 1) - (w / 4))' (h / 4)' (w / 4)' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' ((w - 1) - (w / 4))' (h / 4)' (w / 4)' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,ImageHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,CreateBitmap,The following statement contains a magic number: pmap.DrawLine (gc' ((w - 1) - (w / 4))' (h / 4)' (w / 4)' ((h - 1) - (h / 4)));
Magic Number,Xwt.GtkBackend,GtkImage,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageHandler.cs,FindFrame,The following statement contains a magic number: sizeMatch = 2;
Magic Number,Xwt.GtkBackend,Util,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Util.cs,Util,The following statement contains a magic number: iconSizes[(int)Gtk.IconSize.Menu].Width = 16;
Magic Number,Xwt.GtkBackend,Util,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Util.cs,Util,The following statement contains a magic number: iconSizes[(int)Gtk.IconSize.Menu].Height = 16;
Magic Number,Xwt.GtkBackend,TableViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,GetCellBounds,The following statement contains a magic number: width += 2;
Magic Number,Xwt.GtkBackend,TableViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,GetCellBounds,The following statement contains a magic number: position_x + width + 2 <= column_cell_area.Width
Magic Number,Xwt.GtkBackend,Platform,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Platform.cs,IsRunningOnMac,The following statement contains a magic number: buf = Marshal.AllocHGlobal (8192);
Magic Number,Xwt.GtkBackend,MenuButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\MenuButtonBackend.cs,ShowMenu,The following statement contains a magic number: menu.Hidden += delegate { 					Widget.Relief = oldRelief ; 					isOpen = false; 					Widget.SetStateNormal (); 					 					//FIXME: for some reason the menu's children don't get activated if we destroy  					//directly here' so use a timeout to delay it 					GLib.Timeout.Add (100' delegate { 						//menu.Destroy (); 						return false; 					}); 				};
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: Gtk.Global.CheckVersion (2' (uint)i' 0) == null
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: new [] { 24' 22' 20' 18' 16' 14 }
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: new [] { 24' 22' 20' 18' 16' 14 }
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: new [] { 24' 22' 20' 18' 16' 14 }
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: new [] { 24' 22' 20' 18' 16' 14 }
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: new [] { 24' 22' 20' 18' 16' 14 }
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: new [] { 24' 22' 20' 18' 16' 14 }
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: Gtk.Global.CheckVersion (2' (uint)GtkMinorVersion' (uint)i) == null
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GtkWorkarounds,The following statement contains a magic number: i < 20
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MacGetUsableMonitorGeometry,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MacRequestAttention,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,IsContextMenuButton,The following statement contains a magic number: evt.Button == 3 && 					(evt.State & (Gdk.ModifierType.Button1Mask | Gdk.ModifierType.Button2Mask)) == 0
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetCurrentKeyModifiers,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetCurrentKeyModifiers,The following statement contains a magic number: (mod & (1 << 17)) != 0
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetCurrentKeyModifiers,The following statement contains a magic number: (mod & (1 << 18)) != 0
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetCurrentKeyModifiers,The following statement contains a magic number: (mod & (1 << 19)) != 0
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetCurrentKeyModifiers,The following statement contains a magic number: (mod & (1 << 20)) != 0
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetPageScrollPixelDeltas,The following statement contains a magic number: deltaY = System.Math.Pow (pageSizeY' 2.0 / 3.0);
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetPageScrollPixelDeltas,The following statement contains a magic number: deltaY = System.Math.Pow (pageSizeY' 2.0 / 3.0);
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MapKeys,The following statement contains a magic number: id = (((ulong)(uint)evt.State) | (((ulong)evt.HardwareKeycode) << 32) | (((ulong)evt.Group) << 48));
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MapKeys,The following statement contains a magic number: id = (((ulong)(uint)evt.State) | (((ulong)evt.HardwareKeycode) << 32) | (((ulong)evt.Group) << 48));
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MapKeys,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 20
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MapKeys,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 20
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,MapKeys,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 20
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetImCursorLocation,The following statement contains a magic number: Platform.IsWindows && System.Environment.OSVersion.Version.Major >= 6
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,CreateForallCallback,The following statement contains a magic number: il.Emit (OpCodes.Ldloca_S' 2);
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetLinkHandler,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 18
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetLinkHandler,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 18
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,SetLinkHandler,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 18
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,ForceImageOnMenuItem,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 16
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,ForceImageOnMenuItem,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 16
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,ForceImageOnMenuItem,The following statement contains a magic number: GtkMajorVersion > 2 || GtkMajorVersion <= 2 && GtkMinorVersion >= 16
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetMessageArea,The following statement contains a magic number: GtkWorkarounds.GtkMajorVersion <= 2 && GtkWorkarounds.GtkMinorVersion < 22
Magic Number,Xwt.GtkBackend,GtkWorkarounds,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\GtkWorkarounds.cs,GetMessageArea,The following statement contains a magic number: GtkWorkarounds.GtkMajorVersion <= 2 && GtkWorkarounds.GtkMinorVersion < 22
Magic Number,Xwt.GtkBackend,HeaderBox,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\HeaderBox.cs,OnDrawn,The following statement contains a magic number: gcol.Light -= 0.1;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: int nbytes = sf.Format == Cairo.Format.ARGB32 ? 4 : 3;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: int nbytes = sf.Format == Cairo.Format.ARGB32 ? 4 : 3;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: byte[] data = new byte[(cdata.Length / 4) * nbytes];
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: double alphaFactor = nbytes == 4 ? 255d / cdata [n + 3] : 1;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: double alphaFactor = nbytes == 4 ? 255d / cdata [n + 3] : 1;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: double alphaFactor = nbytes == 4 ? 255d / cdata [n + 3] : 1;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i] = (byte) (cdata[n+2] * alphaFactor + 0.5);
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i] = (byte) (cdata[n+2] * alphaFactor + 0.5);
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i + 1] = (byte) (cdata[n+1] * alphaFactor + 0.5);
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i + 2] = (byte) (cdata[n+0] * alphaFactor + 0.5);
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i + 2] = (byte) (cdata[n+0] * alphaFactor + 0.5);
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i + 3] = cdata [n + 3];
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: data[i + 3] = cdata [n + 3];
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: nbytes == 4
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: n += 4;
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: return new Gdk.Pixbuf (data' Gdk.Colorspace.Rgb' nbytes == 4' 8' sf.Width' sf.Height' sf.Width * nbytes' null);
Magic Number,Xwt.GtkBackend,ImageBuilderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ImageBuilderBackend.cs,CreatePixbuf,The following statement contains a magic number: return new Gdk.Pixbuf (data' Gdk.Colorspace.Rgb' nbytes == 4' 8' sf.Width' sf.Height' sf.Width * nbytes' null);
Magic Number,Xwt.GtkBackend,ProgressBarBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ProgressBarBackend.cs,SetIndeterminate,The following statement contains a magic number: timerId = GLib.Timeout.Add (100' Pulse);
Magic Number,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The following statement contains a magic number: var x = (int)position.X - width / 2;
Magic Number,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The following statement contains a magic number: var delta = Math.Min ( 				Math.Max (0' ((int)position.X + width / 2) - (wx + ww) - 2)' 				((int)position.X - width / 2) - wx + 2 			);
Magic Number,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The following statement contains a magic number: var delta = Math.Min ( 				Math.Max (0' ((int)position.X + width / 2) - (wx + ww) - 2)' 				((int)position.X - width / 2) - wx + 2 			);
Magic Number,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The following statement contains a magic number: var delta = Math.Min ( 				Math.Max (0' ((int)position.X + width / 2) - (wx + ww) - 2)' 				((int)position.X - width / 2) - wx + 2 			);
Magic Number,Xwt.GtkBackend,PopoverBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,UpdatePopoverPosition,The following statement contains a magic number: var delta = Math.Min ( 				Math.Max (0' ((int)position.X + width / 2) - (wx + ww) - 2)' 				((int)position.X - width / 2) - wx + 2 			);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,OnDraw,The following statement contains a magic number: cr.LineWidth = GtkWorkarounds.GetScaleFactor (Content) > 1 ? 2 : 1;
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,OnDraw,The following statement contains a magic number: var bounds = new Xwt.Rectangle (cr.LineWidth / 2' cr.LineWidth / 2' w - cr.LineWidth' h - cr.LineWidth);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,OnDraw,The following statement contains a magic number: var bounds = new Xwt.Rectangle (cr.LineWidth / 2' cr.LineWidth / 2' w - cr.LineWidth' h - cr.LineWidth);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,OnDraw,The following statement contains a magic number: cr.SetSourceRGBA (0.0' 0.0' 0.0' 0.2);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: double degrees = Math.PI / 180;
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: ctx.Arc (x + width - radius' y + radius' radius' -90 * degrees' 0 * degrees);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: ctx.Arc (x + width - radius' y + height - radius' radius' 0 * degrees' 90 * degrees);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: ctx.Arc (x + radius' y + height - radius' radius' 90 * degrees' 180 * degrees);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: ctx.Arc (x + radius' y + height - radius' radius' 90 * degrees' 180 * degrees);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: ctx.Arc (x + radius' y + radius' radius' 180 * degrees' 270 * degrees);
Magic Number,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RoundRectangle,The following statement contains a magic number: ctx.Arc (x + radius' y + radius' radius' 180 * degrees' 270 * degrees);
Magic Number,Xwt.GtkBackend,SpinButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SpinButtonBackend.cs,CreateWidget,The following statement contains a magic number: return new Gtk.SpinButton (0' 1' .1);
Magic Number,Xwt.GtkBackend,RichTextViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RichTextViewBackend.cs,InitTagTable,The following statement contains a magic number: table.Add (new Gtk.TextTag ("li") { 				LeftMargin = 14 			});
Magic Number,Xwt.GtkBackend,RichTextViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RichTextViewBackend.cs,InitTagTable,The following statement contains a magic number: table.Add (new Gtk.TextTag ("pre") { 				Family = "Monospace"' 				Indent = 14' 				WrapMode = Gtk.WrapMode.None 			});
Magic Number,Xwt.GtkBackend,CustomHButtonBox,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SegmentedButtonBackend.cs,OnSizeAllocated,The following statement contains a magic number: int childHeight = (int)(allocation.Height - 2 * BorderWidth);
Magic Number,Xwt.GtkBackend,CustomHButtonBox,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SegmentedButtonBackend.cs,OnSizeAllocated,The following statement contains a magic number: int y = allocation.Y + (allocation.Height - childHeight) / 2;
Magic Number,Xwt.GtkBackend,SliderBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SliderBackend.cs,HandleValueChanged,The following statement contains a magic number: offset > StepIncrement / 2
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following statement contains a magic number: return new Gdk.Color ((byte)(color.Red * 255)' (byte)(color.Green * 255)' (byte)(color.Blue * 255));
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following statement contains a magic number: return new Gdk.Color ((byte)(color.Red * 255)' (byte)(color.Green * 255)' (byte)(color.Blue * 255));
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following statement contains a magic number: return new Gdk.Color ((byte)(color.Red * 255)' (byte)(color.Green * 255)' (byte)(color.Blue * 255));
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkAlignment,The following statement contains a magic number: switch(alignment) { 				case Alignment.Start: return 0.0f; 				case Alignment.Center: return 0.5f; 				case Alignment.End: return 1.0f; 			}
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToAtkRole,The following statement contains a magic number: switch (role) { 			case Accessibility.Role.Button: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonClose: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonMinimize: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonMaximize: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonFullscreen: 				return Atk.Role.PushButton; 			case Accessibility.Role.Calendar: 				return Atk.Role.Calendar; 			case Accessibility.Role.Cell: 				return Atk.Role.TableCell; 			case Accessibility.Role.CheckBox: 				return Atk.Role.CheckBox; 			case Accessibility.Role.ColorChooser: 				return Atk.Role.ColorChooser; 			case Accessibility.Role.Column: 				return Atk.Role.TableColumnHeader; 			case Accessibility.Role.ComboBox: 				return Atk.Role.ComboBox; 			case Accessibility.Role.Custom: 				return Atk.Role.Unknown; 			case Accessibility.Role.Disclosure: 				return Atk.Role.Arrow; 			case Accessibility.Role.Filler: 				return Atk.Role.Filler; 			case Accessibility.Role.Group: 				return Atk.Role.Panel; 			case Accessibility.Role.Image: 				return Atk.Role.Image; 			case Accessibility.Role.Label: 				return Atk.Role.Label; 			case Accessibility.Role.LevelIndicator: 				return (Atk.Role)101; // ATK_ROLE_LEVEL_BAR 			case Accessibility.Role.Link: 				return Atk.Role.Link; 			case Accessibility.Role.List: 				return Atk.Role.List; 			case Accessibility.Role.Menu: 				return Atk.Role.Menu; 			case Accessibility.Role.MenuBar: 				return Atk.Role.MenuBar; 			case Accessibility.Role.MenuBarItem: 				return Atk.Role.MenuItem; // no difference between item and bar item 			case Accessibility.Role.MenuButton: 				return Atk.Role.PushButton; 			case Accessibility.Role.MenuItem: 				return Atk.Role.MenuItem; 			case Accessibility.Role.MenuItemCheckBox: 				return Atk.Role.CheckMenuItem; 			case Accessibility.Role.MenuItemRadio: 				return Atk.Role.RadioMenuItem; 			case Accessibility.Role.Notebook: 				return Atk.Role.PageTabList; 			case Accessibility.Role.NotebookTab: 				return Atk.Role.PageTab; 			case Accessibility.Role.Paned: 				return Atk.Role.SplitPane; 			case Accessibility.Role.PanedSplitter: 				return (Atk.Role)int.MaxValue; // no matching role > Atk.Role.LastDefined 			case Accessibility.Role.Popup: 				return Atk.Role.PopupMenu; 			case Accessibility.Role.ProgressBar: 				return Atk.Role.ProgressBar; 			case Accessibility.Role.RadioButton: 				return Atk.Role.RadioButton; 			case Accessibility.Role.RadioGroup: 				return (Atk.Role)97; // ATK_ROLE_GROUPING 			case Accessibility.Role.Row: 				return Atk.Role.TableRowHeader; 			case Accessibility.Role.ScrollBar: 				return Atk.Role.ScrollBar; 			case Accessibility.Role.ScrollView: 				return Atk.Role.ScrollPane; 			case Accessibility.Role.Separator: 				return Atk.Role.Separator; 			case Accessibility.Role.Slider: 				return Atk.Role.Slider; 			case Accessibility.Role.SpinButton: 				return Atk.Role.SpinButton; 			case Accessibility.Role.Table: 				return Atk.Role.Table; 			case Accessibility.Role.TextArea: 				return Atk.Role.Text; 			case Accessibility.Role.TextEntry: 				return Atk.Role.Entry; 			case Accessibility.Role.TextEntryPassword: 				return Atk.Role.PasswordText; 			case Accessibility.Role.TextEntrySearch: 				return Atk.Role.Entry; 			case Accessibility.Role.ToggleButton: 				return Atk.Role.ToggleButton; 			case Accessibility.Role.ToolBar: 				return Atk.Role.ToolBar; 			case Accessibility.Role.ToolTip: 				return Atk.Role.ToolTip; 			case Accessibility.Role.Tree: 				return Atk.Role.TreeTable; 			case Accessibility.Role.None: 				return (Atk.Role)int.MaxValue; // no matching role > Atk.Role.LastDefined 			default: 				throw new ArgumentOutOfRangeException (); 			}
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToAtkRole,The following statement contains a magic number: switch (role) { 			case Accessibility.Role.Button: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonClose: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonMinimize: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonMaximize: 				return Atk.Role.PushButton; 			case Accessibility.Role.ButtonFullscreen: 				return Atk.Role.PushButton; 			case Accessibility.Role.Calendar: 				return Atk.Role.Calendar; 			case Accessibility.Role.Cell: 				return Atk.Role.TableCell; 			case Accessibility.Role.CheckBox: 				return Atk.Role.CheckBox; 			case Accessibility.Role.ColorChooser: 				return Atk.Role.ColorChooser; 			case Accessibility.Role.Column: 				return Atk.Role.TableColumnHeader; 			case Accessibility.Role.ComboBox: 				return Atk.Role.ComboBox; 			case Accessibility.Role.Custom: 				return Atk.Role.Unknown; 			case Accessibility.Role.Disclosure: 				return Atk.Role.Arrow; 			case Accessibility.Role.Filler: 				return Atk.Role.Filler; 			case Accessibility.Role.Group: 				return Atk.Role.Panel; 			case Accessibility.Role.Image: 				return Atk.Role.Image; 			case Accessibility.Role.Label: 				return Atk.Role.Label; 			case Accessibility.Role.LevelIndicator: 				return (Atk.Role)101; // ATK_ROLE_LEVEL_BAR 			case Accessibility.Role.Link: 				return Atk.Role.Link; 			case Accessibility.Role.List: 				return Atk.Role.List; 			case Accessibility.Role.Menu: 				return Atk.Role.Menu; 			case Accessibility.Role.MenuBar: 				return Atk.Role.MenuBar; 			case Accessibility.Role.MenuBarItem: 				return Atk.Role.MenuItem; // no difference between item and bar item 			case Accessibility.Role.MenuButton: 				return Atk.Role.PushButton; 			case Accessibility.Role.MenuItem: 				return Atk.Role.MenuItem; 			case Accessibility.Role.MenuItemCheckBox: 				return Atk.Role.CheckMenuItem; 			case Accessibility.Role.MenuItemRadio: 				return Atk.Role.RadioMenuItem; 			case Accessibility.Role.Notebook: 				return Atk.Role.PageTabList; 			case Accessibility.Role.NotebookTab: 				return Atk.Role.PageTab; 			case Accessibility.Role.Paned: 				return Atk.Role.SplitPane; 			case Accessibility.Role.PanedSplitter: 				return (Atk.Role)int.MaxValue; // no matching role > Atk.Role.LastDefined 			case Accessibility.Role.Popup: 				return Atk.Role.PopupMenu; 			case Accessibility.Role.ProgressBar: 				return Atk.Role.ProgressBar; 			case Accessibility.Role.RadioButton: 				return Atk.Role.RadioButton; 			case Accessibility.Role.RadioGroup: 				return (Atk.Role)97; // ATK_ROLE_GROUPING 			case Accessibility.Role.Row: 				return Atk.Role.TableRowHeader; 			case Accessibility.Role.ScrollBar: 				return Atk.Role.ScrollBar; 			case Accessibility.Role.ScrollView: 				return Atk.Role.ScrollPane; 			case Accessibility.Role.Separator: 				return Atk.Role.Separator; 			case Accessibility.Role.Slider: 				return Atk.Role.Slider; 			case Accessibility.Role.SpinButton: 				return Atk.Role.SpinButton; 			case Accessibility.Role.Table: 				return Atk.Role.Table; 			case Accessibility.Role.TextArea: 				return Atk.Role.Text; 			case Accessibility.Role.TextEntry: 				return Atk.Role.Entry; 			case Accessibility.Role.TextEntryPassword: 				return Atk.Role.PasswordText; 			case Accessibility.Role.TextEntrySearch: 				return Atk.Role.Entry; 			case Accessibility.Role.ToggleButton: 				return Atk.Role.ToggleButton; 			case Accessibility.Role.ToolBar: 				return Atk.Role.ToolBar; 			case Accessibility.Role.ToolTip: 				return Atk.Role.ToolTip; 			case Accessibility.Role.Tree: 				return Atk.Role.TreeTable; 			case Accessibility.Role.None: 				return (Atk.Role)int.MaxValue; // no matching role > Atk.Role.LastDefined 			default: 				throw new ArgumentOutOfRangeException (); 			}
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtRole,The following statement contains a magic number: switch (role) { 			//case Atk.Role.Invalid: 			//	break; 			//case Atk.Role.AccelLabel: 			//	break; 			//case Atk.Role.Alert: 			//	break; 			//case Atk.Role.Animation: 			//	break; 			case Atk.Role.Arrow: 				return Accessibility.Role.Disclosure; 			case Atk.Role.Calendar: 				return Accessibility.Role.Calendar; 			//case Atk.Role.Canvas: 			//	break; 			case Atk.Role.CheckBox: 				return Accessibility.Role.CheckBox; 			case Atk.Role.CheckMenuItem: 				return Accessibility.Role.MenuItemCheckBox; 			case Atk.Role.ColorChooser: 				return Accessibility.Role.ColorChooser; 			case Atk.Role.ColumnHeader: 				return Accessibility.Role.Column; 			case Atk.Role.ComboBox: 				return Accessibility.Role.ComboBox; 			case Atk.Role.DateEditor: 				return Accessibility.Role.Calendar; 			//case Atk.Role.DesktopIcon: 			//	break; 			//case Atk.Role.DesktopFrame: 			//	break; 			//case Atk.Role.Dial: 			//	break; 			//case Atk.Role.Dialog: 			//	break; 			//case Atk.Role.DirectoryPane: 			//	break; 			//case Atk.Role.DrawingArea: 			//	break; 			//case Atk.Role.FileChooser: 			//	break; 			case Atk.Role.Filler: 				return Accessibility.Role.Filler; 			//case Atk.Role.FontChooser: 			//	break; 			//case Atk.Role.Frame: 			//	break; 			//case Atk.Role.GlassPane: 			//	break; 			//case Atk.Role.HtmlContainer: 			//	break; 			//case Atk.Role.Icon: 			//	break; 			case Atk.Role.Image: 				return Accessibility.Role.Image; 			//case Atk.Role.InternalFrame: 			//	break; 			case Atk.Role.Label: 				return Accessibility.Role.Label; 			//case Atk.Role.LayeredPane: 			//	break; 			case Atk.Role.List: 				return Accessibility.Role.List; 			case Atk.Role.ListItem: 				return Accessibility.Role.Cell; 			case Atk.Role.Menu: 				return Accessibility.Role.Menu; 			case Atk.Role.MenuBar: 				return Accessibility.Role.MenuBar; 			case Atk.Role.MenuItem: 				return Accessibility.Role.MenuItem; 			//case Atk.Role.OptionPane: 			//	break; 			case Atk.Role.PageTab: 				return Accessibility.Role.NotebookTab; 			case Atk.Role.PageTabList: 				return Accessibility.Role.Notebook; 			case Atk.Role.Panel: 				return Accessibility.Role.Group; 			case Atk.Role.PasswordText: 				return Accessibility.Role.TextEntryPassword; 			case Atk.Role.PopupMenu: 				return Accessibility.Role.Popup; 			case Atk.Role.ProgressBar: 				return Accessibility.Role.ProgressBar; 			case Atk.Role.PushButton: 				return Accessibility.Role.Button; 			case Atk.Role.RadioButton: 				return Accessibility.Role.RadioButton; 			case Atk.Role.RadioMenuItem: 				return Accessibility.Role.MenuItemRadio; 			//case Atk.Role.RootPane: 			//	break; 			case Atk.Role.RowHeader: 				return Accessibility.Role.Row; 			case Atk.Role.ScrollBar: 				return Accessibility.Role.ScrollBar; 			case Atk.Role.ScrollPane: 				return Accessibility.Role.ScrollView; 			case Atk.Role.Separator: 				return Accessibility.Role.Separator; 			case Atk.Role.Slider: 				return Accessibility.Role.Slider; 			case Atk.Role.SplitPane: 				return Accessibility.Role.Paned; 			case Atk.Role.SpinButton: 				return Accessibility.Role.SpinButton; 			//case Atk.Role.Statusbar: 			//	break; 			case Atk.Role.Table: 				return Accessibility.Role.Table; 			case Atk.Role.TableCell: 				return Accessibility.Role.Cell; 			case Atk.Role.TableColumnHeader: 				return Accessibility.Role.Column; 			case Atk.Role.TableRowHeader: 				return Accessibility.Role.Row; 			//case Atk.Role.TearOffMenuItem: 			//	break; 			//case Atk.Role.Terminal: 			//	break; 			case Atk.Role.Text: 				return Accessibility.Role.TextArea; 			case Atk.Role.ToggleButton: 				return Accessibility.Role.ToggleButton; 			case Atk.Role.ToolBar: 				return Accessibility.Role.ToolBar; 			case Atk.Role.ToolTip: 				return Accessibility.Role.ToolTip; 			case Atk.Role.Tree: 				return Accessibility.Role.Table; 			case Atk.Role.TreeTable: 				return Accessibility.Role.Table; 			case Atk.Role.Unknown: 				return Accessibility.Role.Custom; 			//case Atk.Role.Viewport: 			//	break; 			//case Atk.Role.Window: 			//	break; 			//case Atk.Role.Header: 			//	break; 			//case Atk.Role.Footer: 			//	break; 			//case Atk.Role.Paragraph: 			//	break; 			//case Atk.Role.Ruler: 			//	break; 			//case Atk.Role.Application: 			//	break; 			//case Atk.Role.Autocomplete: 			//	break; 			//case Atk.Role.Editbar: 			//	break; 			//case Atk.Role.Embedded: 			//	break; 			case Atk.Role.Entry: 				return Accessibility.Role.TextEntry; 			//case Atk.Role.Chart: 			//	break; 			//case Atk.Role.Caption: 			//	break; 			//case Atk.Role.DocumentFrame: 			//	break; 			//case Atk.Role.Heading: 			//	break; 			//case Atk.Role.Page: 			//	break; 			//case Atk.Role.Section: 			//	break; 			//case Atk.Role.RedundantObject: 			//	break; 			//case Atk.Role.Form: 			//	break; 			case Atk.Role.Link: 				return Accessibility.Role.Link; 			//case Atk.Role.InputMethodWindow: 			//	break; 			//case Atk.Role.LastDefined: 			//	break; 			case (Atk.Role)97: // ATK_ROLE_GROUPING 				return Accessibility.Role.RadioGroup; 			case (Atk.Role)101: // ATK_ROLE_LEVEL_BAR 				return Accessibility.Role.LevelIndicator; 			default: 				return Accessibility.Role.None; 			}
Magic Number,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtRole,The following statement contains a magic number: switch (role) { 			//case Atk.Role.Invalid: 			//	break; 			//case Atk.Role.AccelLabel: 			//	break; 			//case Atk.Role.Alert: 			//	break; 			//case Atk.Role.Animation: 			//	break; 			case Atk.Role.Arrow: 				return Accessibility.Role.Disclosure; 			case Atk.Role.Calendar: 				return Accessibility.Role.Calendar; 			//case Atk.Role.Canvas: 			//	break; 			case Atk.Role.CheckBox: 				return Accessibility.Role.CheckBox; 			case Atk.Role.CheckMenuItem: 				return Accessibility.Role.MenuItemCheckBox; 			case Atk.Role.ColorChooser: 				return Accessibility.Role.ColorChooser; 			case Atk.Role.ColumnHeader: 				return Accessibility.Role.Column; 			case Atk.Role.ComboBox: 				return Accessibility.Role.ComboBox; 			case Atk.Role.DateEditor: 				return Accessibility.Role.Calendar; 			//case Atk.Role.DesktopIcon: 			//	break; 			//case Atk.Role.DesktopFrame: 			//	break; 			//case Atk.Role.Dial: 			//	break; 			//case Atk.Role.Dialog: 			//	break; 			//case Atk.Role.DirectoryPane: 			//	break; 			//case Atk.Role.DrawingArea: 			//	break; 			//case Atk.Role.FileChooser: 			//	break; 			case Atk.Role.Filler: 				return Accessibility.Role.Filler; 			//case Atk.Role.FontChooser: 			//	break; 			//case Atk.Role.Frame: 			//	break; 			//case Atk.Role.GlassPane: 			//	break; 			//case Atk.Role.HtmlContainer: 			//	break; 			//case Atk.Role.Icon: 			//	break; 			case Atk.Role.Image: 				return Accessibility.Role.Image; 			//case Atk.Role.InternalFrame: 			//	break; 			case Atk.Role.Label: 				return Accessibility.Role.Label; 			//case Atk.Role.LayeredPane: 			//	break; 			case Atk.Role.List: 				return Accessibility.Role.List; 			case Atk.Role.ListItem: 				return Accessibility.Role.Cell; 			case Atk.Role.Menu: 				return Accessibility.Role.Menu; 			case Atk.Role.MenuBar: 				return Accessibility.Role.MenuBar; 			case Atk.Role.MenuItem: 				return Accessibility.Role.MenuItem; 			//case Atk.Role.OptionPane: 			//	break; 			case Atk.Role.PageTab: 				return Accessibility.Role.NotebookTab; 			case Atk.Role.PageTabList: 				return Accessibility.Role.Notebook; 			case Atk.Role.Panel: 				return Accessibility.Role.Group; 			case Atk.Role.PasswordText: 				return Accessibility.Role.TextEntryPassword; 			case Atk.Role.PopupMenu: 				return Accessibility.Role.Popup; 			case Atk.Role.ProgressBar: 				return Accessibility.Role.ProgressBar; 			case Atk.Role.PushButton: 				return Accessibility.Role.Button; 			case Atk.Role.RadioButton: 				return Accessibility.Role.RadioButton; 			case Atk.Role.RadioMenuItem: 				return Accessibility.Role.MenuItemRadio; 			//case Atk.Role.RootPane: 			//	break; 			case Atk.Role.RowHeader: 				return Accessibility.Role.Row; 			case Atk.Role.ScrollBar: 				return Accessibility.Role.ScrollBar; 			case Atk.Role.ScrollPane: 				return Accessibility.Role.ScrollView; 			case Atk.Role.Separator: 				return Accessibility.Role.Separator; 			case Atk.Role.Slider: 				return Accessibility.Role.Slider; 			case Atk.Role.SplitPane: 				return Accessibility.Role.Paned; 			case Atk.Role.SpinButton: 				return Accessibility.Role.SpinButton; 			//case Atk.Role.Statusbar: 			//	break; 			case Atk.Role.Table: 				return Accessibility.Role.Table; 			case Atk.Role.TableCell: 				return Accessibility.Role.Cell; 			case Atk.Role.TableColumnHeader: 				return Accessibility.Role.Column; 			case Atk.Role.TableRowHeader: 				return Accessibility.Role.Row; 			//case Atk.Role.TearOffMenuItem: 			//	break; 			//case Atk.Role.Terminal: 			//	break; 			case Atk.Role.Text: 				return Accessibility.Role.TextArea; 			case Atk.Role.ToggleButton: 				return Accessibility.Role.ToggleButton; 			case Atk.Role.ToolBar: 				return Accessibility.Role.ToolBar; 			case Atk.Role.ToolTip: 				return Accessibility.Role.ToolTip; 			case Atk.Role.Tree: 				return Accessibility.Role.Table; 			case Atk.Role.TreeTable: 				return Accessibility.Role.Table; 			case Atk.Role.Unknown: 				return Accessibility.Role.Custom; 			//case Atk.Role.Viewport: 			//	break; 			//case Atk.Role.Window: 			//	break; 			//case Atk.Role.Header: 			//	break; 			//case Atk.Role.Footer: 			//	break; 			//case Atk.Role.Paragraph: 			//	break; 			//case Atk.Role.Ruler: 			//	break; 			//case Atk.Role.Application: 			//	break; 			//case Atk.Role.Autocomplete: 			//	break; 			//case Atk.Role.Editbar: 			//	break; 			//case Atk.Role.Embedded: 			//	break; 			case Atk.Role.Entry: 				return Accessibility.Role.TextEntry; 			//case Atk.Role.Chart: 			//	break; 			//case Atk.Role.Caption: 			//	break; 			//case Atk.Role.DocumentFrame: 			//	break; 			//case Atk.Role.Heading: 			//	break; 			//case Atk.Role.Page: 			//	break; 			//case Atk.Role.Section: 			//	break; 			//case Atk.Role.RedundantObject: 			//	break; 			//case Atk.Role.Form: 			//	break; 			case Atk.Role.Link: 				return Accessibility.Role.Link; 			//case Atk.Role.InputMethodWindow: 			//	break; 			//case Atk.Role.LastDefined: 			//	break; 			case (Atk.Role)97: // ATK_ROLE_GROUPING 				return Accessibility.Role.RadioGroup; 			case (Atk.Role)101: // ATK_ROLE_LEVEL_BAR 				return Accessibility.Role.LevelIndicator; 			default: 				return Accessibility.Role.None; 			}
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: alignment = new Gtk.Alignment (0.5f' 0.5f' 1f' 0f);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: alignment = new Gtk.Alignment (0.5f' 0.5f' 1f' 0f);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (1' 1' 3' 3);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (1' 1' 3' 3);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: entryAlignment = new Gtk.Alignment (0.5f' 0.5f' 1f' 1f);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: entryAlignment = new Gtk.Alignment (0.5f' 0.5f' 1f' 1f);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (0' 0' 3' 3);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (0' 0' 3' 3);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ShowHideButtons,The following statement contains a magic number: entryAlignment.RightPadding = (uint) (!clear_button.Visible && roundedShape ? 6 : 0);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ShowHideButtons,The following statement contains a magic number: entryAlignment.LeftPadding = (uint) (!filter_button.Visible && roundedShape ? 6 : 0);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnInnerEntryChanged,The following statement contains a magic number: changed_timeout_id = GLib.Timeout.Add (25' OnChangedTimeout);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,UpdateStyle,The following statement contains a magic number: var h = entry.SizeRequest ().Height + entry.Style.Ythickness * 2;
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,UpdateStyle,The following statement contains a magic number: box.BorderWidth = (uint)(diff / 2);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintFlatBox (Style' GdkWindow' entry.State' Gtk.ShadowType.None' 										evnt.Area' this' "entry_bg"' alloc.X + 2' alloc.Y + 2' alloc.Width - 4' alloc.Height - 4);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintFlatBox (Style' GdkWindow' entry.State' Gtk.ShadowType.None' 										evnt.Area' this' "entry_bg"' alloc.X + 2' alloc.Y + 2' alloc.Width - 4' alloc.Height - 4);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintFlatBox (Style' GdkWindow' entry.State' Gtk.ShadowType.None' 										evnt.Area' this' "entry_bg"' alloc.X + 2' alloc.Y + 2' alloc.Width - 4' alloc.Height - 4);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintFlatBox (Style' GdkWindow' entry.State' Gtk.ShadowType.None' 										evnt.Area' this' "entry_bg"' alloc.X + 2' alloc.Y + 2' alloc.Width - 4' alloc.Height - 4);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,RoundBorder,The following statement contains a magic number: double r = h / 2;
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + r' y + r' r' Math.PI / 2' Math.PI + Math.PI / 2);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + r' y + r' r' Math.PI / 2' Math.PI + Math.PI / 2);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + w - r' y + r' r' Math.PI + Math.PI / 2' Math.PI + Math.PI + Math.PI / 2);
Magic Number,Xwt.GtkBackend,SearchEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + w - r' y + r' r' Math.PI + Math.PI / 2' Math.PI + Math.PI + Math.PI / 2);
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: double blend = 0.5;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: int aR = a.Red >> 8;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: int aG = a.Green >> 8;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: int aB = a.Blue >> 8;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: int bR = b.Red >> 8;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: int bG = b.Green >> 8;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,ColorBlend,The following statement contains a magic number: int bB = b.Blue >> 8;
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: evnt.Window.DrawLayout (text_gc' 2' (SizeRequest ().Height - height) / 2' layout);
Magic Number,Xwt.GtkBackend,FramelessEntry,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,OnExposeEvent,The following statement contains a magic number: evnt.Window.DrawLayout (text_gc' 2' (SizeRequest ().Height - height) / 2' layout);
Magic Number,Xwt.GtkBackend,HoverImageButton,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,HoverImageButton,The following statement contains a magic number: Gtk.Alignment al = new Gtk.Alignment (0.5f' 0.5f' 0f' 0f);
Magic Number,Xwt.GtkBackend,HoverImageButton,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\SearchTextEntryBackend.cs,HoverImageButton,The following statement contains a magic number: Gtk.Alignment al = new Gtk.Alignment (0.5f' 0.5f' 0f' 0f);
Magic Number,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,RenderPlaceholderText,The following statement contains a magic number: RenderPlaceholderText_internal (entry' args' placeHolderText' ref layout' entry.Xalign' 0.5f' 1' 0);
Magic Number,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,RenderPlaceholderText_internal,The following statement contains a magic number: gc.RgbFgColor = color_b.BlendWith (color_a' 0.5).ToGtkValue ();
Magic Number,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,GetSliderPosition,The following statement contains a magic number: orientationSize = scale.Allocation.Width - (2 * padding);
Magic Number,Xwt.GtkBackend,Gtk2Extensions,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Gtk2Extensions.cs,GetSliderPosition,The following statement contains a magic number: return (int)(((orientationSize - (slwidth)) * prct) + (slwidth / 2));
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color( 				(double)(color.Red >> 8) / 255.0' 				(double)(color.Green >> 8) / 255.0' 				(double)(color.Blue >> 8) / 255.0);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color( 				(double)(color.Red >> 8) / 255.0' 				(double)(color.Green >> 8) / 255.0' 				(double)(color.Blue >> 8) / 255.0);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color( 				(double)(color.Red >> 8) / 255.0' 				(double)(color.Green >> 8) / 255.0' 				(double)(color.Blue >> 8) / 255.0);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color( 				(double)(color.Red >> 8) / 255.0' 				(double)(color.Green >> 8) / 255.0' 				(double)(color.Blue >> 8) / 255.0);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color( 				(double)(color.Red >> 8) / 255.0' 				(double)(color.Green >> 8) / 255.0' 				(double)(color.Blue >> 8) / 255.0);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,ToCairoColor,The following statement contains a magic number: return new Cairo.Color( 				(double)(color.Red >> 8) / 255.0' 				(double)(color.Green >> 8) / 255.0' 				(double)(color.Blue >> 8) / 255.0);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The following statement contains a magic number: r < 0.0001
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc(x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc(x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc(x + w - r' y + h - r' r' 0' Math.PI * 0.5);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc(x + r' y + h - r' r' Math.PI * 0.5' Math.PI);
Magic Number,Xwt.CairoBackend,CairoConversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoConversion.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc(x + r' y + r' r' Math.PI' Math.PI * 1.5);
Magic Number,Xwt.CairoBackend,CairoContextBackendHandler,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.CairoBackend\CairoContextBackendHandler.cs,Rotate,The following statement contains a magic number: gc.Context.Rotate ((angle * System.Math.PI) / 180);
Missing Default,Xwt.GtkBackend,LabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LabelBackend.cs,SetAlignment,The following switch statement is missing a default case: switch (alignment) { 				case Alignment.Start: 					Label.Justify = Gtk.Justification.Left; 					break; 				case Alignment.End: 					Label.Justify = Gtk.Justification.Right; 					break; 				case Alignment.Center: 					Label.Justify = Gtk.Justification.Center; 					break; 			}
Missing Default,Xwt.GtkBackend,LabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LabelBackend.cs,SetAlignmentGtk,The following switch statement is missing a default case: switch (TextAlignment) { 				case Alignment.Start: 					Label.Xalign = 0f; 					break; 				case Alignment.End: 					Label.Xalign = Label.LineWrap ? 0 : 1; 					break; 				case Alignment.Center: 					Label.Xalign = Label.LineWrap ? 0 : 0.5f; 					break; 			}
Missing Default,Xwt.GtkBackend,PasswordEntryBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PasswordEntryBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((PasswordEntryEvent)eventId) { 				case PasswordEntryEvent.Changed: Widget.Changed += HandleChanged; break; 				case PasswordEntryEvent.Activated: Widget.Activated += HandleActivated; break; 				}
Missing Default,Xwt.GtkBackend,PasswordEntryBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PasswordEntryBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((PasswordEntryEvent)eventId) { 				case PasswordEntryEvent.Changed: Widget.Changed -= HandleChanged; break; 				case PasswordEntryEvent.Activated: Widget.Activated -= HandleActivated; break; 				}
Missing Default,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,EnableEvent,The following switch statement is missing a default case: switch (ev) { 				case WidgetEvent.DragLeave: 					AllocEventBox (); 					EventsRootWidget.DragLeave += HandleWidgetDragLeave; 					break; 				case WidgetEvent.DragStarted: 					AllocEventBox (); 					EventsRootWidget.DragBegin += HandleWidgetDragBegin; 					break; 				case WidgetEvent.KeyPressed: 					Widget.KeyPressEvent += HandleKeyPressEvent; 					break; 				case WidgetEvent.KeyReleased: 					Widget.KeyReleaseEvent += HandleKeyReleaseEvent; 					break; 				case WidgetEvent.GotFocus: 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.FocusChangeMask); 					Widget.FocusGrabbed += HandleWidgetFocusInEvent; 					break; 				case WidgetEvent.LostFocus: 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.FocusChangeMask); 					Widget.FocusOutEvent += HandleWidgetFocusOutEvent; 					break; 				case WidgetEvent.MouseEntered: 					AllocEventBox (); 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.EnterNotifyMask); 					EventsRootWidget.EnterNotifyEvent += HandleEnterNotifyEvent; 					break; 				case WidgetEvent.MouseExited: 					AllocEventBox (); 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.LeaveNotifyMask); 					EventsRootWidget.LeaveNotifyEvent += HandleLeaveNotifyEvent; 					break; 				case WidgetEvent.ButtonPressed: 					AllocEventBox (); 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.ButtonPressMask); 					EventsRootWidget.ButtonPressEvent += HandleButtonPressEvent; 					break; 				case WidgetEvent.ButtonReleased: 					AllocEventBox (); 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.ButtonReleaseMask); 					EventsRootWidget.ButtonReleaseEvent += HandleButtonReleaseEvent; 					break; 				case WidgetEvent.MouseMoved: 					AllocEventBox (); 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.PointerMotionMask); 					EventsRootWidget.MotionNotifyEvent += HandleMotionNotifyEvent; 					break; 				case WidgetEvent.BoundsChanged: 					Widget.SizeAllocated += HandleWidgetBoundsChanged; 					break; 				case WidgetEvent.MouseScrolled: 					AllocEventBox(); 					EventsRootWidget.AddEvents ((int)Gdk.EventMask.ScrollMask); 					Widget.ScrollEvent += HandleScrollEvent; 					break; 				case WidgetEvent.TextInput: 					if (EditableWidget != null) { 						EditableWidget.TextInserted += HandleTextInserted; 					} else { 						RunWhenRealized (delegate { 							if (IMContext == null) { 								IMContext = new Gtk.IMMulticontext (); 								IMContext.ClientWindow = EventsRootWidget.GdkWindow; 								IMContext.Commit += HandleImCommitEvent; 							} 						}); 						Widget.KeyPressEvent += HandleTextInputKeyPressEvent; 						Widget.KeyReleaseEvent += HandleTextInputKeyReleaseEvent; 					} 					break; 				}
Missing Default,Xwt.GtkBackend,WidgetBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WidgetBackend.cs,DisableEvent,The following switch statement is missing a default case: switch (ev) { 				case WidgetEvent.DragLeave: 					EventsRootWidget.DragLeave -= HandleWidgetDragLeave; 					break; 				case WidgetEvent.DragStarted: 					EventsRootWidget.DragBegin -= HandleWidgetDragBegin; 					break; 				case WidgetEvent.KeyPressed: 					Widget.KeyPressEvent -= HandleKeyPressEvent; 					break; 				case WidgetEvent.KeyReleased: 					Widget.KeyReleaseEvent -= HandleKeyReleaseEvent; 					break; 				case WidgetEvent.GotFocus: 					Widget.FocusInEvent -= HandleWidgetFocusInEvent; 					break; 				case WidgetEvent.LostFocus: 					Widget.FocusOutEvent -= HandleWidgetFocusOutEvent; 					break; 				case WidgetEvent.MouseEntered: 					EventsRootWidget.EnterNotifyEvent -= HandleEnterNotifyEvent; 					break; 				case WidgetEvent.MouseExited: 					EventsRootWidget.LeaveNotifyEvent -= HandleLeaveNotifyEvent; 					break; 				case WidgetEvent.ButtonPressed: 					if (!EventsRootWidget.IsRealized) 						EventsRootWidget.Events &= ~Gdk.EventMask.ButtonPressMask; 					EventsRootWidget.ButtonPressEvent -= HandleButtonPressEvent; 					break; 				case WidgetEvent.ButtonReleased: 					if (!EventsRootWidget.IsRealized) 						EventsRootWidget.Events &= Gdk.EventMask.ButtonReleaseMask; 					EventsRootWidget.ButtonReleaseEvent -= HandleButtonReleaseEvent; 					break; 				case WidgetEvent.MouseMoved: 					if (!EventsRootWidget.IsRealized) 						EventsRootWidget.Events &= Gdk.EventMask.PointerMotionMask; 					EventsRootWidget.MotionNotifyEvent -= HandleMotionNotifyEvent; 					break; 				case WidgetEvent.BoundsChanged: 					Widget.SizeAllocated -= HandleWidgetBoundsChanged; 					break; 				case WidgetEvent.MouseScrolled: 					if (!EventsRootWidget.IsRealized) 						EventsRootWidget.Events &= ~Gdk.EventMask.ScrollMask; 					Widget.ScrollEvent -= HandleScrollEvent; 					break; 				case WidgetEvent.TextInput: 					if (EditableWidget != null) { 						EditableWidget.TextInserted -= HandleTextInserted; 					} else { 						if (IMContext != null) 							IMContext.Commit -= HandleImCommitEvent; 						Widget.KeyPressEvent -= HandleTextInputKeyPressEvent; 						Widget.KeyReleaseEvent -= HandleTextInputKeyReleaseEvent; 					} 					break; 				}
Missing Default,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,SetButtonStyle,The following switch statement is missing a default case: switch (style) { 			case ButtonStyle.Normal: 				SetMiniMode (false); 				Widget.Relief = Gtk.ReliefStyle.Normal; 				break; 			case ButtonStyle.Flat: 				SetMiniMode (false); 				Widget.Relief = Gtk.ReliefStyle.None; 				break; 			case ButtonStyle.Borderless: 				SetMiniMode (true); 				Widget.Relief = Gtk.ReliefStyle.None; 				break; 			}
Missing Default,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((ButtonEvent)eventId) { 				case ButtonEvent.Clicked: Widget.Clicked += HandleWidgetClicked; break; 				}
Missing Default,Xwt.GtkBackend,ButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ButtonBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((ButtonEvent)eventId) { 				case ButtonEvent.Clicked: Widget.Clicked -= HandleWidgetClicked; break; 				}
Missing Default,Xwt.GtkBackend,TreeViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeViewBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((TreeViewEvent)eventId) { 				case TreeViewEvent.RowActivated: 					Widget.RowActivated += HandleRowActivated; 					break; 				case TreeViewEvent.RowExpanding: 					Widget.TestExpandRow += HandleTestExpandRow; 					break; 				case TreeViewEvent.RowExpanded: 					Widget.RowExpanded += HandleRowExpanded; 					break; 				case TreeViewEvent.RowCollapsing: 					Widget.TestCollapseRow += HandleTestCollapseRow; 					break; 				case TreeViewEvent.RowCollapsed: 					Widget.RowCollapsed += HandleRowCollapsed; 					break; 				}
Missing Default,Xwt.GtkBackend,TreeViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TreeViewBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((TreeViewEvent)eventId) { 				case TreeViewEvent.RowActivated: 					Widget.RowActivated -= HandleRowActivated; 					break; 				case TreeViewEvent.RowExpanding: 					Widget.TestExpandRow -= HandleTestExpandRow;; 					break; 				case TreeViewEvent.RowExpanded: 					Widget.RowExpanded -= HandleRowExpanded;; 					break; 				case TreeViewEvent.RowCollapsing: 					Widget.TestCollapseRow -= HandleTestCollapseRow; 					break; 				case TreeViewEvent.RowCollapsed: 					Widget.RowCollapsed -= HandleRowCollapsed; 					break; 				}
Missing Default,Xwt.GtkBackend,TableViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,UpdateColumn,The following switch statement is missing a default case: switch (change) { 				case ListViewColumnChange.Cells: 					tc.Clear (); 					MapColumn (col' tc); 					break; 				case ListViewColumnChange.Title: 					MapTitle (col' tc); 					break; 				case ListViewColumnChange.CanResize: 					tc.Resizable = col.CanResize; 					break; 				case ListViewColumnChange.SortIndicatorVisible: 					tc.SortIndicator = col.SortIndicatorVisible; 					break; 				case ListViewColumnChange.SortDirection: 					tc.SortOrder = (SortType)col.SortDirection; 					break; 				case ListViewColumnChange.SortDataField: 					if (col.SortDataField != null) 						tc.SortColumnId = col.SortDataField.Index; 					break; 				case ListViewColumnChange.Alignment: 					tc.Alignment = col.Alignment.ToGtkAlignment (); 					break; 				case ListViewColumnChange.Expanding: 					tc.Expand = col.Expands; 					break; 			}
Missing Default,Xwt.GtkBackend,TableViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TableViewBackend.cs,SetSelectionMode,The following switch statement is missing a default case: switch (mode) { 			case SelectionMode.None: Widget.Selection.Mode = Gtk.SelectionMode.None; break; 			case SelectionMode.Single: Widget.Selection.Mode = Gtk.SelectionMode.Single; break; 			case SelectionMode.Multiple: Widget.Selection.Mode = Gtk.SelectionMode.Multiple; break; 			}
Missing Default,Xwt.GtkBackend,TextEntryBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TextEntryBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((TextEntryEvent)eventId) { 				case TextEntryEvent.Changed: Widget.Changed += HandleChanged; break; 				case TextEntryEvent.Activated: Widget.Activated += HandleActivated; break; 				case TextEntryEvent.SelectionChanged: 					enableSelectionChangedEvent = true; 					Widget.MoveCursor += HandleMoveCursor; 					Widget.ButtonPressEvent += HandleButtonPressEvent; 					Widget.ButtonReleaseEvent += HandleButtonReleaseEvent; 					Widget.MotionNotifyEvent += HandleMotionNotifyEvent; 					break; 				}
Missing Default,Xwt.GtkBackend,TextEntryBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\TextEntryBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((TextEntryEvent)eventId) { 				case TextEntryEvent.Changed: Widget.Changed -= HandleChanged; break; 				case TextEntryEvent.Activated: Widget.Activated -= HandleActivated; break; 				case TextEntryEvent.SelectionChanged: 					enableSelectionChangedEvent = false; 					Widget.MoveCursor -= HandleMoveCursor; 					Widget.ButtonPressEvent -= HandleButtonPressEvent; 					Widget.ButtonReleaseEvent -= HandleButtonReleaseEvent; 					Widget.MotionNotifyEvent -= HandleMotionNotifyEvent; 					break; 				}
Missing Default,Xwt.GtkBackend,ToggleButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ToggleButtonBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((ToggleButtonEvent)eventId) { 				case ToggleButtonEvent.Toggled: Widget.Toggled += HandleToggled; break; 				}
Missing Default,Xwt.GtkBackend,ToggleButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ToggleButtonBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((ToggleButtonEvent)eventId) { 				case ToggleButtonEvent.Toggled: Widget.Toggled -= HandleToggled; break; 				}
Missing Default,Xwt.GtkBackend,ToggleButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ToggleButtonBackend.cs,ChangeImageIfDisclosure,The following switch statement is missing a default case: switch (((Gtk.Arrow)Widget.Image).ArrowType) { 			case Gtk.ArrowType.Down: 				newArrowType = Gtk.ArrowType.Up; 				break; 			case Gtk.ArrowType.Up: 				newArrowType = Gtk.ArrowType.Down; 				break; 			case Gtk.ArrowType.Left: 				newArrowType = Gtk.ArrowType.Right; 				break; 			case Gtk.ArrowType.Right: 				newArrowType = Gtk.ArrowType.Left; 				break; 			}
Missing Default,Xwt.GtkBackend,WindowFrameBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WindowFrameBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((WindowFrameEvent)ev) { 				case WindowFrameEvent.BoundsChanged: 					Window.AddEvents ((int)Gdk.EventMask.StructureMask); 					Window.ConfigureEvent += HandleConfigureEvent; break; 				case WindowFrameEvent.Closed: 				case WindowFrameEvent.CloseRequested: 					Window.DeleteEvent += HandleCloseRequested; break; 				case WindowFrameEvent.Shown: 					Window.Shown += HandleShown; break; 				case WindowFrameEvent.Hidden: 					Window.Hidden += HandleHidden; break; 				}
Missing Default,Xwt.GtkBackend,WindowFrameBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WindowFrameBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((WindowFrameEvent)ev) { 				case WindowFrameEvent.BoundsChanged: 					Window.ConfigureEvent -= HandleConfigureEvent; break; 				case WindowFrameEvent.Shown: 					Window.Shown -= HandleShown; break; 				case WindowFrameEvent.Hidden: 					Window.Hidden -= HandleHidden; break; 				}
Missing Default,Xwt.GtkBackend,CheckBoxBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\CheckBoxBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((CheckBoxEvent)eventId) { 				case CheckBoxEvent.Toggled: toggleEventEnabled = true; break; 				case CheckBoxEvent.Clicked: Widget.Clicked += HandleWidgetClicked; break; 				}
Missing Default,Xwt.GtkBackend,CheckBoxBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\CheckBoxBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((CheckBoxEvent)eventId) { 				case CheckBoxEvent.Toggled: toggleEventEnabled = false; break; 				case CheckBoxEvent.Clicked: Widget.Clicked -= HandleWidgetClicked; break; 				}
Missing Default,Xwt.GtkBackend,FrameBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\FrameBackend.cs,SetFrameType,The following switch statement is missing a default case: switch (type) { 			case FrameType.Custom: 				if (!(Widget is HeaderBox)) { 					HeaderBox box = new HeaderBox (); 					box.Show (); 					box.BackgroundColor = UsingCustomBackgroundColor ? (Color?)BackgroundColor : null; 					#pragma warning disable CS0618 // Type or member is obsolete 					box.SetMargins ((int)f.BorderWidthTop' (int)f.BorderWidthBottom' (int)f.BorderWidthLeft' (int)f.BorderWidthRight); 					#pragma warning restore CS0618 // Type or member is obsolete 					box.SetPadding ((int)f.Padding.Top' (int)f.Padding.Bottom' (int)f.Padding.Left' (int)f.Padding.Right); 					if (borderColor != null) 						box.SetBorderColor (borderColor.Value); 					var c = paddingAlign != null ? paddingAlign.Child : Widget.Child; 					if (c != null) { 						((Gtk.Container)c.Parent).Remove (c); 						box.Add (c); 					} 					Widget = box; 					if (paddingAlign != null) { 						paddingAlign.Destroy (); 						paddingAlign = null; 					} 				} 				break; 			case FrameType.WidgetBox: 				if (!(Widget is Gtk.Frame)) { 					var c = Widget.Child; 					if (c != null) 						Widget.Remove (c); 					Gtk.Frame gf = new Gtk.Frame (); 					if (!string.IsNullOrEmpty (label)) 						gf.Label = label; 					if (f.Padding.HorizontalSpacing != 0 || f.Padding.VerticalSpacing != 0) { 						paddingAlign = new Gtk.Alignment (0' 0' 1' 1); 						paddingAlign.Show (); 						UreatePaddingAlign (f.Padding.Top' f.Padding.Bottom' f.Padding.Left' f.Padding.Right); 						if (c != null) 							paddingAlign.Add (c); 						gf.Add (paddingAlign); 					} else { 						if (c != null) 							gf.Add (c); 					} 					gf.Show (); 					Widget = gf; 				} 				break; 			}
Missing Default,Xwt.GtkBackend,PanedBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PanedBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((PanedEvent)eventId) { 					case PanedEvent.PositionChanged: 						Widget.AddNotification ("position"' HandleMove);break; 				}
Missing Default,Xwt.GtkBackend,PanedBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PanedBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((PanedEvent)eventId) { 					case PanedEvent.PositionChanged: 						Widget.RemoveNotification ("position"' HandleMove);break; 				}
Missing Default,Xwt.GtkBackend,PopoverWindow,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopoverBackend.cs,RecalibrateChildRectangle,The following switch statement is missing a default case: switch (arrowPosition) { 				case Xwt.Popover.Position.Top: 					return new Rectangle (bounds.X' bounds.Y + arrowPadding' bounds.Width' bounds.Height - arrowPadding); 				case Xwt.Popover.Position.Bottom: 					return new Rectangle (bounds.X' bounds.Y' bounds.Width' bounds.Height - arrowPadding); 				}
Missing Default,Xwt.GtkBackend,LinkLabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LinkLabelBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((LinkLabelEvent) eventId) { 				case LinkLabelEvent.NavigateToUrl: 					ClickEnabled = true; 					break; 				}
Missing Default,Xwt.GtkBackend,LinkLabelBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\LinkLabelBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((LinkLabelEvent) eventId) { 				case LinkLabelEvent.NavigateToUrl: 					ClickEnabled = false; 					break; 				}
Missing Default,Xwt.GtkBackend,RichTextViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RichTextViewBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((RichTextViewEvent) eventId) { 				case RichTextViewEvent.NavigateToUrl: 					Widget.NavigateToUrl += HandleNavigateToUrl; 					break; 				}
Missing Default,Xwt.GtkBackend,RichTextViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RichTextViewBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((RichTextViewEvent) eventId) { 				case RichTextViewEvent.NavigateToUrl: 					Widget.NavigateToUrl -= HandleNavigateToUrl; 					break; 				}
Missing Default,Xwt.GtkBackend,RadioButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RadioButtonBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((RadioButtonEvent)eventId) { 				case RadioButtonEvent.ActiveChanged: Widget.Toggled += HandleToggled; break; 				case RadioButtonEvent.Clicked: Widget.Clicked += HandleClicked;; break; 				}
Missing Default,Xwt.GtkBackend,RadioButtonBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\RadioButtonBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((RadioButtonEvent)eventId) { 				case RadioButtonEvent.ActiveChanged: Widget.Toggled -= HandleToggled; break; 				case RadioButtonEvent.Clicked: Widget.Clicked -= HandleClicked;; break; 				}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following switch statement is missing a default case: switch (size) { 			case IconSize.Small: 				return Gtk.IconSize.Menu; 			case IconSize.Medium: 				return Gtk.IconSize.Button; 			case IconSize.Large: 				return Gtk.IconSize.Dialog; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following switch statement is missing a default case: switch (value) { 			case Xwt.EllipsizeMode.None: return Pango.EllipsizeMode.None; 			case Xwt.EllipsizeMode.Start: return Pango.EllipsizeMode.Start; 			case Xwt.EllipsizeMode.Middle: return Pango.EllipsizeMode.Middle; 			case Xwt.EllipsizeMode.End: return Pango.EllipsizeMode.End; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtValue,The following switch statement is missing a default case: switch (value) { 			case Pango.EllipsizeMode.None: return Xwt.EllipsizeMode.None; 			case Pango.EllipsizeMode.Start: return Xwt.EllipsizeMode.Start; 			case Pango.EllipsizeMode.Middle: return Xwt.EllipsizeMode.Middle; 			case Pango.EllipsizeMode.End: return Xwt.EllipsizeMode.End; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtValue,The following switch statement is missing a default case: switch (p) { 			case Gtk.PolicyType.Always: 				return ScrollPolicy.Always; 			case Gtk.PolicyType.Automatic: 				return ScrollPolicy.Automatic; 			case Gtk.PolicyType.Never: 				return ScrollPolicy.Never; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following switch statement is missing a default case: switch (p) { 			case ScrollPolicy.Always: 				return Gtk.PolicyType.Always; 			case ScrollPolicy.Automatic: 				return Gtk.PolicyType.Automatic; 			case ScrollPolicy.Never: 				return Gtk.PolicyType.Never; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtValue,The following switch statement is missing a default case: switch(d) { 			case Gdk.ScrollDirection.Up: 				return Xwt.ScrollDirection.Up; 			case Gdk.ScrollDirection.Down: 				return Xwt.ScrollDirection.Down; 			case Gdk.ScrollDirection.Left: 				return Xwt.ScrollDirection.Left; 			case Gdk.ScrollDirection.Right: 				return Xwt.ScrollDirection.Right; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following switch statement is missing a default case: switch (d) { 			case ScrollDirection.Up: 				return Gdk.ScrollDirection.Up; 			case ScrollDirection.Down: 				return Gdk.ScrollDirection.Down; 			case ScrollDirection.Left: 				return Gdk.ScrollDirection.Left; 			case ScrollDirection.Right: 				return Gdk.ScrollDirection.Right; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkValue,The following switch statement is missing a default case: switch (value) 			{ 				case GridLines.Both: 					return Gtk.TreeViewGridLines.Both; 				case GridLines.Horizontal: 					return Gtk.TreeViewGridLines.Horizontal; 				case GridLines.Vertical: 					return Gtk.TreeViewGridLines.Vertical; 				case GridLines.None: 					return Gtk.TreeViewGridLines.None; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToXwtValue,The following switch statement is missing a default case: switch (value) 			{ 				case Gtk.TreeViewGridLines.Both: 					return GridLines.Both; 				case Gtk.TreeViewGridLines.Horizontal: 					return GridLines.Horizontal; 				case Gtk.TreeViewGridLines.Vertical: 					return GridLines.Vertical; 				case Gtk.TreeViewGridLines.None: 					return GridLines.None; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToGtkAlignment,The following switch statement is missing a default case: switch(alignment) { 				case Alignment.Start: return 0.0f; 				case Alignment.Center: return 0.5f; 				case Alignment.End: return 1.0f; 			}
Missing Default,Xwt.GtkBackend,Conversion,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\Conversion.cs,ToPangoAlignment,The following switch statement is missing a default case: switch(alignment) { 				case Alignment.Start: return Pango.Alignment.Left; 				case Alignment.Center: return Pango.Alignment.Center; 				case Alignment.End: return Pango.Alignment.Right; 			}
Missing Default,Xwt.GtkBackend,CellViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellViewBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((WidgetEvent)eventId) { 				case WidgetEvent.MouseMoved: 				case WidgetEvent.MouseEntered: 				case WidgetEvent.MouseExited: 					EnableMouseEvents (); 					break; 				case WidgetEvent.ButtonPressed: 					rendererTarget.EventRootWidget.AddEvents ((int)Gdk.EventMask.ButtonPressMask); 					rendererTarget.EventRootWidget.ButtonPressEvent += HandleButtonPressEvent; 					break; 				case WidgetEvent.ButtonReleased: 					rendererTarget.EventRootWidget.AddEvents ((int)Gdk.EventMask.ButtonReleaseMask); 					rendererTarget.EventRootWidget.ButtonReleaseEvent += HandleButtonReleaseEvent; 					buttonReleaseSubscribed = true; 						break; 				case WidgetEvent.KeyPressed: 					EnableMouseEvents (); 					rendererTarget.EventRootWidget.KeyPressEvent += HandleKeyPressEvent; 					break; 				case WidgetEvent.KeyReleased: 					EnableMouseEvents (); 					rendererTarget.EventRootWidget.KeyReleaseEvent += HandleKeyReleaseEvent; 					break; 				}
Missing Default,Xwt.GtkBackend,CellViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend.CellViews\CellViewBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((WidgetEvent)eventId) { 				case WidgetEvent.MouseMoved: 				case WidgetEvent.MouseEntered: 				case WidgetEvent.MouseExited: 					DisableMouseEvents (); 					break; 				case WidgetEvent.ButtonPressed: 					rendererTarget.EventRootWidget.ButtonPressEvent -= HandleButtonPressEvent; 					break; 				case WidgetEvent.ButtonReleased: 					rendererTarget.EventRootWidget.ButtonReleaseEvent -= HandleButtonReleaseEvent; 					buttonReleaseSubscribed = false; 					break; 				case WidgetEvent.KeyPressed: 					DisableMouseEvents (); 					rendererTarget.EventRootWidget.KeyPressEvent -= HandleKeyPressEvent; 					break; 				case WidgetEvent.KeyReleased: 					DisableMouseEvents (); 					rendererTarget.EventRootWidget.KeyReleaseEvent -= HandleKeyReleaseEvent; 					break; 				}
Missing Default,Xwt.GtkBackend,WebViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WebViewBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((WebViewEvent)eventId) { 					case WebViewEvent.NavigateToUrl: view.NavigationRequested += HandleNavigationRequested; break; 					case WebViewEvent.Loading: view.LoadStarted += HandleLoadStarted; break; 					case WebViewEvent.Loaded: view.LoadFinished += HandleLoadFinished; break; 					case WebViewEvent.TitleChanged: view.TitleChanged += HandleTitleChanged; break; 				}
Missing Default,Xwt.GtkBackend,WebViewBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\WebViewBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((WebViewEvent)eventId) { 					case WebViewEvent.NavigateToUrl: view.NavigationRequested -= HandleNavigationRequested; break; 					case WebViewEvent.Loading: view.LoadStarted -= HandleLoadStarted; break; 					case WebViewEvent.Loaded: view.LoadFinished -= HandleLoadFinished; break; 					case WebViewEvent.TitleChanged: view.TitleChanged -= HandleTitleChanged; break; 				}
Missing Default,Xwt.GtkBackend,ColorSelectorBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ColorSelectorBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((ColorSelectorEvent)eventId) { 					case ColorSelectorEvent.ColorChanged: Widget.ColorChanged += HandleColorChanged;; break; 				}
Missing Default,Xwt.GtkBackend,ColorSelectorBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ColorSelectorBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((ColorSelectorEvent)eventId) { 					case ColorSelectorEvent.ColorChanged: Widget.ColorChanged -= HandleColorChanged; break; 				}
Missing Default,Xwt.GtkBackend,ColorPickerBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ColorPickerBackend.cs,SetButtonStyle,The following switch statement is missing a default case: switch (style) { 				case ButtonStyle.Normal: 					Widget.Relief = Gtk.ReliefStyle.Normal; 					break; 				case ButtonStyle.Flat: 					Widget.Relief = Gtk.ReliefStyle.None; 					break; 				case ButtonStyle.Borderless: 					Widget.Relief = Gtk.ReliefStyle.None; 					break; 			}
Missing Default,Xwt.GtkBackend,ColorPickerBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ColorPickerBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((ColorPickerEvent)eventId) { 					case ColorPickerEvent.ColorChanged: Widget.ColorSet += HandleColorSet; break; 				}
Missing Default,Xwt.GtkBackend,ColorPickerBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\ColorPickerBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((ColorPickerEvent)eventId) { 					case ColorPickerEvent.ColorChanged: Widget.ColorSet -= HandleColorSet; break; 				}
Missing Default,Xwt.GtkBackend,FontSelectorBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\FontSelectorBackend.cs,EnableEvent,The following switch statement is missing a default case: switch ((FontSelectorEvent)eventId) { 					case FontSelectorEvent.FontChanged: Widget.FontChanged += HandleFontChanged; break; 				}
Missing Default,Xwt.GtkBackend,FontSelectorBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\FontSelectorBackend.cs,DisableEvent,The following switch statement is missing a default case: switch ((FontSelectorEvent)eventId) { 					case FontSelectorEvent.FontChanged: Widget.FontChanged -= HandleFontChanged; break; 				}
Missing Default,Xwt.GtkBackend,PopupWindowBackend,C:\research\architectureSmells\repos\mono_xwt\Xwt.Gtk\Xwt.GtkBackend\PopupWindowBackend.cs,Initialize,The following switch statement is missing a default case: switch (windowType) { 			case PopupWindow.PopupType.Tooltip: 				Window.TypeHint = Gdk.WindowTypeHint.Tooltip; 				Window.Decorated = false; 				break; 			case PopupWindow.PopupType.Menu: 				Window.TypeHint = Gdk.WindowTypeHint.PopupMenu; 				Window.Decorated = false; 				break; 			}
