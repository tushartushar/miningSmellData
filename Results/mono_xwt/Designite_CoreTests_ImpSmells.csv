Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CoreTests,ContextSwitchTests,C:\research\architectureSmells\repos\mono_xwt\Testing\CoreTests\ContextSwitchTests.cs,AsyncContextSwitchLoop,The following statement contains a magic number: var t = secToolkit.Invoke (async delegate { 				 				// Current engine should now be the second toolkit 				Assert.AreSame (secToolkit' Toolkit.CurrentEngine);  				await Task.Delay (200);  				// Current engine should still the second toolkit 				Assert.AreSame (secToolkit' Toolkit.CurrentEngine); 				Console.WriteLine ("Done"); 				callbackInvoked = true; 			});
Magic Number,CoreTests,ContextSwitchTests,C:\research\architectureSmells\repos\mono_xwt\Testing\CoreTests\ContextSwitchTests.cs,AsyncContextSwitchLoop,The following statement contains a magic number: await Task.Delay (2000);
Magic Number,CoreTests,ContextSwitchTests,C:\research\architectureSmells\repos\mono_xwt\Testing\CoreTests\ContextSwitchTests.cs,AppInvokeCapturesToolkit,The following statement contains a magic number: secToolkit.Invoke (delegate { 				// Current engine should now be the second toolkit 				Assert.AreSame (secToolkit' Toolkit.CurrentEngine); 				Application.TimeoutInvoke (100' () => { 					// Current toolkit should still be the second toolkit 					Assert.AreSame (secToolkit' Toolkit.CurrentEngine); 					Application.Exit (); 					return false; 				}); 			});
Magic Number,CoreTests,ContextSwitchTests,C:\research\architectureSmells\repos\mono_xwt\Testing\CoreTests\ContextSwitchTests.cs,TaskWaitRestoresMainToolkit,The following statement contains a magic number: EventQueue.MainEventQueue.Enqueue (delegate { 				// When outside the XWT context' the default toolkit should be 				// the main toolkit 				Assert.AreEqual (mainToolkit' Toolkit.CurrentEngine); 				noXwtCallback = true; 				return false; 			}' TimeSpan.FromMilliseconds (50));
Magic Number,CoreTests,ContextSwitchTests,C:\research\architectureSmells\repos\mono_xwt\Testing\CoreTests\ContextSwitchTests.cs,TaskWaitRestoresMainToolkit,The following statement contains a magic number: var t = secToolkit.Invoke (async delegate {  				// Current engine should now be the second toolkit 				Assert.AreSame (secToolkit' Toolkit.CurrentEngine);  				Assert.IsFalse (noXwtCallback);  				await Task.Delay (200);  				// Out of band event was executed during the wait 				Assert.IsTrue (noXwtCallback);  				// Current engine should still the second toolkit 				Assert.AreSame (secToolkit' Toolkit.CurrentEngine); 				Console.WriteLine ("Done"); 				Application.Exit (); 			});
