Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DoxDoxygenXML.Model.DoxygenIndex,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\DoxygenIndex\Extensions.cs,GetDoxType,Cyclomatic complexity of the method is 18
Complex Method,DoxDoxygenXML.Model.DoxygenIndex,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\DoxygenIndex\Extensions.cs,GetMember,Cyclomatic complexity of the method is 27
Complex Method,DoxDoxygenXML.Model.Doxygen,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\Doxygen\Extensions.cs,GetParameterDescription,Cyclomatic complexity of the method is 11
Complex Method,DoxDoxygenXML.Model.Doxygen,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\Doxygen\Extensions.cs,GetMethodReturnDescription,Cyclomatic complexity of the method is 8
Complex Method,DoxDoxygenXML.Model.Doxygen,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\Doxygen\Extensions.cs,GetDescriptionSegment,Cyclomatic complexity of the method is 12
Complex Method,DoxDoxygenXML.DoxExtensions,DoxType,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxExtensions\DoxType.cs,ReadDoxygenType,Cyclomatic complexity of the method is 10
Complex Method,DoxDoxygenXML.DoxExtensions,DoxType,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxExtensions\DoxType.cs,UpdateBaseType,Cyclomatic complexity of the method is 20
Complex Method,DoxDoxygenXML.DoxExtensions,DoxMethod,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxExtensions\DoxMethod.cs,ReadDoxygenMember,Cyclomatic complexity of the method is 12
Long Statement,DoxDoxygenXML,Parser,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\Parser.cs,GetDocumentList,The length of the statement  "			DoxDoxygenXML.Model.Doxygen.DoxygenType comp = (DoxDoxygenXML.Model.Doxygen.DoxygenType)serializer.Deserialize (reader); " is 120.
Missing Default,DoxDoxygenXML.Model.DoxygenIndex,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\DoxygenIndex\Extensions.cs,GetDoxType,The following switch statement is missing a default case: switch (t.kind) {  case CompoundKind.@namespace:  	nSpace = t.name;  	break;  case CompoundKind.@class:  	type = new Codaxy.Dox.Type {  		Namespace = nSpace'  		Name = ParserTools.GetNameFromFullName (t.name)'  		RefId = t.refid'  		TypeKind = TypeKind.CLASS  	};  	types.Add (type);  	break;  case CompoundKind.@struct:  	type = new Codaxy.Dox.Type {  		Namespace = nSpace'  		Name = ParserTools.GetNameFromFullName (t.name)'  		RefId = t.refid'  		TypeKind = TypeKind.STRUCT  	};  	types.Add (type);  	break;  case CompoundKind.file:  	type = new Codaxy.Dox.Type {  		Name = ParserTools.GetNameFromFullName (t.name)'  		Namespace = ParserTools.GetNameFromFullName (t.name)'  		RefId = t.refid  	//TypeKind = TypeKind.FILE  	};  	break;  case CompoundKind.dir:  	break;  }  
Missing Default,DoxDoxygenXML.Model.DoxygenIndex,Extensions,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\DoxygenXML\Model\DoxygenIndex\Extensions.cs,GetMember,The following switch statement is missing a default case: switch (m.kind) {  case MemberKind.@enum:  	types.Add (new Codaxy.Dox.Type {  		Name = m.name'  		TypeKind = TypeKind.ENUM'  		Namespace = nSpace'  		RefId = m.refid  	});  	break;  case MemberKind.enumvalue:  	foreach (Codaxy.Dox.Type _type in types) {  		if (_type.RefId.Equals (m.refid)) {  			if (_type.Fields == null)  				_type.Fields = new List<Field> ();  			_type.Fields.Add (new Field {  				Name = m.name'  				RefId = m.refid  			});  		}  	}  	break;  case MemberKind.function:  	if (type == null) {  		// so it is namespace (delegate)  		types.Add (type = new Codaxy.Dox.Type {  			Namespace = nSpace'  			Name = ParserTools.GetNameFromFullName (m.name)'  			RefId = m.refid  		});  	}  	else {  		// so it is a member method  		if (type.Methods == null)  			type.Methods = new List<Method> ();  		type.Methods.Add (new Codaxy.Dox.Method {  			Name = m.name'  			RefId = m.refid'  			DeclaringType = type.Name  		});  	}  	break;  case MemberKind.variable:  	if (type == null)  		System.Console.WriteLine ("");  	if (type.Fields == null)  		type.Fields = new List<Field> ();  	type.Fields.Add (new Codaxy.Dox.Field {  		Name = ParserTools.GetNameFromFullName (m.name)'  		RefId = m.refid  	});  	break;  case MemberKind.property:  	if (type != null)  		if (type.Properties == null)  			type.Properties = new List<Property> ();  	type.Properties.Add (new Codaxy.Dox.Property {  		Name = ParserTools.GetNameFromFullName (m.name)'  		RefId = m.refid  	});  	break;  }  
Missing Default,DoxDoxygenXML,ParserTools,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\ParserTools.cs,ParseProtectionLevel,The following switch statement is missing a default case: switch (level) {  case "private":  	return Codaxy.Dox.ProtectionLevel.PRIVATE;  case "public":  	return Codaxy.Dox.ProtectionLevel.PUBLIC;  case "internal":  	return Codaxy.Dox.ProtectionLevel.INTERNAL;  case "protected":  	return Codaxy.Dox.ProtectionLevel.PROTECTED;  }  
Missing Default,DoxDoxygenXML,ParserTools,C:\repos\codaxy_dox\Libraries\Codaxy.Dox\Codaxy.Dox.Providers.DoxygenXml\ParserTools.cs,CreateType,The following switch statement is missing a default case: switch (kind) {  case "class":  	return new Codaxy.Dox.Type () {  		TypeKind = Codaxy.Dox.TypeKind.CLASS  	};  case "interface":  	return new Codaxy.Dox.Type () {  		TypeKind = Codaxy.Dox.TypeKind.INTERFACE  	};  case "delegate":  	return new Codaxy.Dox.Type () {  		TypeKind = Codaxy.Dox.TypeKind.DELEGATE  	};  case "enum":  	return new Codaxy.Dox.Type () {  		TypeKind = Codaxy.Dox.TypeKind.ENUM  	};  case "struct":  	return new Codaxy.Dox.Type () {  		TypeKind = Codaxy.Dox.TypeKind.STRUCT  	};  }  
