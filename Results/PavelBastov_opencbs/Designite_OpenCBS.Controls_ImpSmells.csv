Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenCBS.Controls,ScheduleControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\ScheduleControl.cs,InitializeComponent,The method has 165 lines of code.
Complex Method,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,Cyclomatic complexity of the method is 10
Complex Method,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,Cyclomatic complexity of the method is 9
Long Parameter List,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The method has 6 parameters. Parameters: totalArea' textFirst' textSize' imageSize' textRect' imageRect
Long Parameter List,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,The method has 6 parameters. Parameters: totalArea' textFirst' textSize' imageSize' textRect' imageRect
Long Statement,OpenCBS.Controls,AmountTextBox,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\AmountTextBox.cs,OnKeyPress,The length of the statement  "            if (char.IsControl(e.KeyChar) || char.IsDigit(e.KeyChar) || (e.KeyChar == separator && Text.IndexOf(separator) == -1) && AllowDecimalSeparator)" is 143.
Long Statement,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(frmShowError));" is 132.
Long Statement,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,InitializeComponent,The length of the statement  "            this.richTextBoxExceptionDetail.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0))))' ((int)(((byte)(64))))' ((int)(((byte)(0)))));" is 141.
Long Statement,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(LoaderControl));" is 133.
Long Statement,OpenCBS.Controls,ScheduleControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\ScheduleControl.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ScheduleControl));" is 135.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The length of the statement  "            bool drawSplitLine = (State == PushButtonState.Hot || State == PushButtonState.Pressed || !Application.RenderWithVisualStyles);" is 127.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The length of the statement  "                    g.DrawLine(SystemPens.ButtonShadow' bounds.Left + SplitSectionWidth' BorderSize' bounds.Left + SplitSectionWidth' bounds.Bottom - BorderSize);" is 142.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The length of the statement  "                    g.DrawLine(SystemPens.ButtonFace' bounds.Left + SplitSectionWidth + 1' BorderSize' bounds.Left + SplitSectionWidth + 1' bounds.Bottom - BorderSize);" is 148.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The length of the statement  "                    g.DrawLine(SystemPens.ButtonShadow' bounds.Right - SplitSectionWidth' BorderSize' bounds.Right - SplitSectionWidth' bounds.Bottom - BorderSize);" is 144.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The length of the statement  "                    g.DrawLine(SystemPens.ButtonFace' bounds.Right - SplitSectionWidth - 1' BorderSize' bounds.Right - SplitSectionWidth - 1' bounds.Bottom - BorderSize);" is 150.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The length of the statement  "            var middle = new Point(Convert.ToInt32(dropDownRect.Left + dropDownRect.Width / 2)' Convert.ToInt32(dropDownRect.Top + dropDownRect.Height / 2));" is 145.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The length of the statement  "            var arrow = new[] { new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)' new Point(middle.X' middle.Y + 2) };" is 134.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,GetPreferredSize,The length of the statement  "                if (!string.IsNullOrEmpty(Text) && TextRenderer.MeasureText(Text' Font).Width + SplitSectionWidth > preferredSize.Width)" is 120.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The length of the statement  "                    textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);" is 120.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The length of the statement  "            else if (hImage == HorizontalAlignment.Center && (hText == HorizontalAlignment.Left || hText == HorizontalAlignment.Center))" is 124.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The length of the statement  "                finalTextRect = new Rectangle(totalArea.Left + offset' AlignInRectangle(totalArea' textSize' TextAlign).Top' textSize.Width' textSize.Height);" is 142.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The length of the statement  "                finalImageRect = new Rectangle(finalTextRect.Right + elementSpacing' AlignInRectangle(totalArea' imageSize' ImageAlign).Top' imageSize.Width' imageSize.Height);" is 160.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The length of the statement  "                finalImageRect = new Rectangle(totalArea.Left + offset' AlignInRectangle(totalArea' imageSize' ImageAlign).Top' imageSize.Width' imageSize.Height);" is 147.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The length of the statement  "                finalTextRect = new Rectangle(finalImageRect.Right + elementSpacing' AlignInRectangle(totalArea' textSize' TextAlign).Top' textSize.Width' textSize.Height);" is 156.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,The length of the statement  "                finalTextRect = new Rectangle(AlignInRectangle(totalArea' textSize' TextAlign).Left' totalArea.Top + offset' textSize.Width' textSize.Height);" is 142.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,The length of the statement  "                finalImageRect = new Rectangle(AlignInRectangle(totalArea' imageSize' ImageAlign).Left' finalTextRect.Bottom + elementSpacing' imageSize.Width' imageSize.Height);" is 162.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,The length of the statement  "                finalImageRect = new Rectangle(AlignInRectangle(totalArea' imageSize' ImageAlign).Left' totalArea.Top + offset' imageSize.Width' imageSize.Height);" is 147.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,The length of the statement  "                finalTextRect = new Rectangle(AlignInRectangle(totalArea' textSize' TextAlign).Left' finalImageRect.Bottom + elementSpacing' textSize.Width' textSize.Height);" is 158.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,AlignInRectangle,The length of the statement  "            if (align == System.Drawing.ContentAlignment.BottomLeft || align == System.Drawing.ContentAlignment.MiddleLeft || align == System.Drawing.ContentAlignment.TopLeft)" is 163.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,AlignInRectangle,The length of the statement  "            else if (align == System.Drawing.ContentAlignment.BottomCenter || align == System.Drawing.ContentAlignment.MiddleCenter || align == System.Drawing.ContentAlignment.TopCenter)" is 174.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,AlignInRectangle,The length of the statement  "            else if (align == System.Drawing.ContentAlignment.BottomRight || align == System.Drawing.ContentAlignment.MiddleRight || align == System.Drawing.ContentAlignment.TopRight)" is 171.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,AlignInRectangle,The length of the statement  "            if (align == System.Drawing.ContentAlignment.TopCenter || align == System.Drawing.ContentAlignment.TopLeft || align == System.Drawing.ContentAlignment.TopRight)" is 160.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,AlignInRectangle,The length of the statement  "            else if (align == System.Drawing.ContentAlignment.MiddleCenter || align == System.Drawing.ContentAlignment.MiddleLeft || align == System.Drawing.ContentAlignment.MiddleRight)" is 174.
Long Statement,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,AlignInRectangle,The length of the statement  "            else if (align == System.Drawing.ContentAlignment.BottomCenter || align == System.Drawing.ContentAlignment.BottomRight || align == System.Drawing.ContentAlignment.BottomLeft)" is 174.
Complex Conditional,OpenCBS.Controls,AmountTextBox,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\AmountTextBox.cs,OnKeyPress,The conditional expression  "char.IsControl(e.KeyChar) || char.IsDigit(e.KeyChar) || (e.KeyChar == separator && Text.IndexOf(separator) == -1) && AllowDecimalSeparator"  is complex.
Magic Number,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,InitializeComponent,The following statement contains a magic number: this.richTextBoxExceptionDetail.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0))))' ((int)(((byte)(64))))' ((int)(((byte)(0)))));
Magic Number,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,buttonShowDetail_Click,The following statement contains a magic number: Size = new Size(700' 400);
Magic Number,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,buttonShowDetail_Click,The following statement contains a magic number: Size = new Size(700' 400);
Magic Number,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,frmShowError_Load,The following statement contains a magic number: Size = new Size(700' 137);
Magic Number,OpenCBS.Controls,frmShowError,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\frmShowError.cs,frmShowError_Load,The following statement contains a magic number: Size = new Size(700' 137);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,AttachTo,The following statement contains a magic number: y += (_attachTo.Size.Height - 18) / 2;
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,AttachTo,The following statement contains a magic number: y += (_attachTo.Size.Height - 18) / 2;
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,AttachTo,The following statement contains a magic number: Size = new Size(_attachTo.Size.Width' 18);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The following statement contains a magic number: this.loaderPictureBox.Size = new System.Drawing.Size(220' 18);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The following statement contains a magic number: this.loaderPictureBox.Size = new System.Drawing.Size(220' 18);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(220' 18);
Magic Number,OpenCBS.Controls,LoaderControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\LoaderControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(220' 18);
Magic Number,OpenCBS.Controls,PrintButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\PrintButton.cs,LoadReports,The following statement contains a magic number: ToolStripMenuItem item = new ToolStripMenuItem(report.Title)                 {                     ForeColor = Color.FromArgb(0' 81' 152)'                     Tag = report.Guid                 };
Magic Number,OpenCBS.Controls,PrintButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\PrintButton.cs,LoadReports,The following statement contains a magic number: ToolStripMenuItem item = new ToolStripMenuItem(report.Title)                 {                     ForeColor = Color.FromArgb(0' 81' 152)'                     Tag = report.Guid                 };
Magic Number,OpenCBS.Controls,PrintButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\PrintButton.cs,InitializeComponent,The following statement contains a magic number: this._menu.Size = new System.Drawing.Size(61' 4);
Magic Number,OpenCBS.Controls,PrintButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\PrintButton.cs,InitializeComponent,The following statement contains a magic number: this._menu.Size = new System.Drawing.Size(61' 4);
Magic Number,OpenCBS.Controls,ScheduleControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\ScheduleControl.cs,FormatRow,The following statement contains a magic number: item.BackColor = Color.FromArgb(61' 153' 57);
Magic Number,OpenCBS.Controls,ScheduleControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\ScheduleControl.cs,FormatRow,The following statement contains a magic number: item.BackColor = Color.FromArgb(61' 153' 57);
Magic Number,OpenCBS.Controls,ScheduleControl,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\ScheduleControl.cs,FormatRow,The following statement contains a magic number: item.BackColor = Color.FromArgb(61' 153' 57);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The following statement contains a magic number: var focusRect =                 new Rectangle(internalBorder - 1'                               internalBorder - 1'                               bounds.Width - _dropDownRectangle.Width - internalBorder'                               bounds.Height - (internalBorder * 2) + 2);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OnPaint,The following statement contains a magic number: var focusRect =                 new Rectangle(internalBorder - 1'                               internalBorder - 1'                               bounds.Width - _dropDownRectangle.Width - internalBorder'                               bounds.Height - (internalBorder * 2) + 2);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The following statement contains a magic number: var middle = new Point(Convert.ToInt32(dropDownRect.Left + dropDownRect.Width / 2)' Convert.ToInt32(dropDownRect.Top + dropDownRect.Height / 2));
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The following statement contains a magic number: var middle = new Point(Convert.ToInt32(dropDownRect.Left + dropDownRect.Width / 2)' Convert.ToInt32(dropDownRect.Top + dropDownRect.Height / 2));
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The following statement contains a magic number: middle.X += (dropDownRect.Width % 2);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The following statement contains a magic number: var arrow = new[] { new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)' new Point(middle.X' middle.Y + 2) };
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The following statement contains a magic number: var arrow = new[] { new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)' new Point(middle.X' middle.Y + 2) };
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,PaintArrow,The following statement contains a magic number: var arrow = new[] { new Point(middle.X - 2' middle.Y - 1)' new Point(middle.X + 3' middle.Y - 1)' new Point(middle.X' middle.Y + 2) };
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,GetPreferredSize,The following statement contains a magic number: return preferredSize + new Size(SplitSectionWidth + BorderSize * 2' 0);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonAutoSize,The following statement contains a magic number: textSize.Height += 4;
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonAutoSize,The following statement contains a magic number: textSize.Width += 4;
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonAutoSize,The following statement contains a magic number: retSize.Height += (Padding.Vertical + 6);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonAutoSize,The following statement contains a magic number: retSize.Width += (Padding.Horizontal + 6);
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following statement contains a magic number: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,OverlayObjectRect,The following statement contains a magic number: switch (alignment)             {                 case System.Drawing.ContentAlignment.TopLeft:                     x = 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.TopRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = 4;                     break;                 case System.Drawing.ContentAlignment.MiddleLeft:                     x = 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.MiddleRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = (container.Height - sizeOfObject.Height) / 2;                     break;                 case System.Drawing.ContentAlignment.BottomLeft:                     x = 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomCenter:                     x = (container.Width - sizeOfObject.Width) / 2;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 case System.Drawing.ContentAlignment.BottomRight:                     x = container.Width - sizeOfObject.Width - 4;                     y = container.Height - sizeOfObject.Height - 4;                     break;                 default:                     x = 4;                     y = 4;                     break;             }
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextBeforeOrAfterImage,The following statement contains a magic number: elementSpacing += 2;
Magic Number,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,LayoutTextAboveOrBelowImage,The following statement contains a magic number: elementSpacing += 2;
Missing Default,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonAutoSize,The following switch statement is missing a default case: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     retSize.Height = Math.Max(Text.Length == 0 ? 0 : textSize.Height' imageSize.Height);                     retSize.Width = Math.Max(textSize.Width' imageSize.Width);                     break;                 case TextImageRelation.ImageAboveText:                 case TextImageRelation.TextAboveImage:                     retSize.Height = textSize.Height + imageSize.Height;                     retSize.Width = Math.Max(textSize.Width' imageSize.Width);                     break;                 case TextImageRelation.ImageBeforeText:                 case TextImageRelation.TextBeforeImage:                     retSize.Height = Math.Max(textSize.Height' imageSize.Height);                     retSize.Width = textSize.Width + imageSize.Width;                     break;             }
Missing Default,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,CalculateButtonTextAndImageLayout,The following switch statement is missing a default case: switch (TextImageRelation)             {                 case TextImageRelation.Overlay:                     // Overlay is easy' text always goes here                     textRectangle = OverlayObjectRect(ref contentRect' ref textSize' TextAlign); // Rectangle.Inflate(content_rect' -4' -4);                      //Offset on Windows 98 style when button is pressed                     if (_state == PushButtonState.Pressed && !Application.RenderWithVisualStyles)                         textRectangle.Offset(1' 1);                      // Image is dependent on ImageAlign                     if (Image != null)                         imageRectangle = OverlayObjectRect(ref contentRect' ref imageSize' ImageAlign);                      break;                 case TextImageRelation.ImageAboveText:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextAboveImage:                     contentRect.Inflate(-4' -4);                     LayoutTextAboveOrBelowImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.ImageBeforeText:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' false' textSize' imageSize' out textRectangle' out imageRectangle);                     break;                 case TextImageRelation.TextBeforeImage:                     contentRect.Inflate(-4' -4);                     LayoutTextBeforeOrAfterImage(contentRect' true' textSize' imageSize' out textRectangle' out imageRectangle);                     break;             }
Missing Default,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,GetHorizontalAlignment,The following switch statement is missing a default case: switch (align)             {                 case System.Drawing.ContentAlignment.BottomLeft:                 case System.Drawing.ContentAlignment.MiddleLeft:                 case System.Drawing.ContentAlignment.TopLeft:                     return HorizontalAlignment.Left;                 case System.Drawing.ContentAlignment.BottomCenter:                 case System.Drawing.ContentAlignment.MiddleCenter:                 case System.Drawing.ContentAlignment.TopCenter:                     return HorizontalAlignment.Center;                 case System.Drawing.ContentAlignment.BottomRight:                 case System.Drawing.ContentAlignment.MiddleRight:                 case System.Drawing.ContentAlignment.TopRight:                     return HorizontalAlignment.Right;             }
Missing Default,OpenCBS.Controls,SplitButton,C:\research\architectureSmells\repos\PavelBastov_opencbs\Src\OpenCBS.Controls\SplitButton.cs,GetVerticalAlignment,The following switch statement is missing a default case: switch (align)             {                 case System.Drawing.ContentAlignment.TopLeft:                 case System.Drawing.ContentAlignment.TopCenter:                 case System.Drawing.ContentAlignment.TopRight:                     return VerticalAlignment.Top;                 case System.Drawing.ContentAlignment.MiddleLeft:                 case System.Drawing.ContentAlignment.MiddleCenter:                 case System.Drawing.ContentAlignment.MiddleRight:                     return VerticalAlignment.Center;                 case System.Drawing.ContentAlignment.BottomLeft:                 case System.Drawing.ContentAlignment.BottomCenter:                 case System.Drawing.ContentAlignment.BottomRight:                     return VerticalAlignment.Bottom;             }
