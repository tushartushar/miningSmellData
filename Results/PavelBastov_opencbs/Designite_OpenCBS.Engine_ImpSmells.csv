Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenCBS.Engine,RescheduleAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\RescheduleAssembler.cs,AssembleRescheduling,Cyclomatic complexity of the method is 9
Complex Method,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,BuildSchedule,Cyclomatic complexity of the method is 13
Long Parameter List,OpenCBS.Engine,RescheduleAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\RescheduleAssembler.cs,AssembleRescheduling,The method has 5 parameters. Parameters: schedule' scheduleConfiguration' rescheduleConfiguration' scheduleBuilder' currentOlb
Long Parameter List,OpenCBS.Engine,TrancheAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\TrancheAssembler.cs,AssembleTranche,The method has 5 parameters. Parameters: schedule' scheduleConfiguration' trancheConfiguration' scheduleBuilder' trancheBuilder
Long Statement,OpenCBS.Engine,RescheduleAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\RescheduleAssembler.cs,AssembleRescheduling,The length of the statement  "            // 3. To get total of first calculated interest. It will be interest between last closed installment and date of rescheduling  " is 125.
Long Statement,OpenCBS.Engine,OctopusScheduleConfigurationFactory,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\OctopusScheduleConfigurationFactory.cs,GetPeriodPolicy,The length of the statement  "                if (_loan.Product.InterestScheme == OInterestScheme.Thirty360 || _loan.Product.InterestScheme == OInterestScheme.ThirtyActual) " is 126.
Long Statement,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,BuildSchedule,The length of the statement  "            if (configuration.CalculationPolicy == null) throw new ArgumentException("Installment calculation policy cannot be null."); " is 123.
Long Statement,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,BuildSchedule,The length of the statement  "            if (configuration.GracePeriod >= configuration.NumberOfInstallments) throw new ArgumentException("Grace period should be less than the number of installments."); " is 161.
Long Statement,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,CalculateInterest,The length of the statement  "            var daysInPeriod = configuration.PeriodPolicy.GetNumberOfDays(installment.ExpectedDate);//' configuration.DateShiftPolicy); " is 123.
Long Statement,OpenCBS.Engine,TrancheAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\TrancheAssembler.cs,AssembleTranche,The length of the statement  "            var trancheSchedule = trancheBuilder.BuildTranche(schedule' scheduleBuilder' scheduleConfiguration' trancheConfiguration); " is 122.
Long Statement,OpenCBS.Engine,TrancheAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\TrancheAssembler.cs,AssembleTranche,The length of the statement  "                if (!(installment.CapitalRepayment == installment.PaidCapital && installment.InterestsRepayment == installment.PaidInterests)) " is 126.
Long Statement,OpenCBS.Engine.InstallmentCalculationPolicy,AnnuityInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\AnnuityInstallmentCalculationPolicy.cs,FindAnnuity,The length of the statement  "            var numberOfPeriods = configuration.PeriodPolicy.GetNumberOfPeriodsInYear(configuration.PreferredFirstInstallmentDate' configuration.YearPolicy); " is 145.
Long Statement,OpenCBS.Engine.InstallmentCalculationPolicy,BaseInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\BaseInstallmentCalculationPolicy.cs,CalculateInterest,The length of the statement  "            var daysInPeriod = configuration.PeriodPolicy.GetNumberOfDays(installment.ExpectedDate);//' configuration.DateShiftPolicy); " is 123.
Long Statement,OpenCBS.Engine.PeriodPolicy,Monthly30DayPeriodPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\PeriodPolicy\Monthly30DayPeriodPolicy.cs,GetNumberOfDays,The length of the statement  "                return installment.ExpectedDate == installment.StartDate.AddMonths(1) ? 30 : (installment.ExpectedDate - installment.StartDate).Days; " is 133.
Magic Number,OpenCBS.Engine,RescheduleAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\RescheduleAssembler.cs,AssembleRescheduling,The following statement contains a magic number: var extraInterest = currentOlb*scheduleConfiguration.InterestRate/100*usedDays/daysInYear;
Magic Number,OpenCBS.Engine,RescheduleAssembler,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\RescheduleAssembler.cs,AssembleRescheduling,The following statement contains a magic number: if (rescheduleConfiguration.GracePeriod == 0 || rescheduleConfiguration.ChargeInterestDuringGracePeriod)                  firstInterest = currentOlb*rescheduleConfiguration.InterestRate/100*daysTillRepayment/daysInYear;
Magic Number,OpenCBS.Engine,OctopusScheduleConfigurationFactory,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\OctopusScheduleConfigurationFactory.cs,Finish,The following statement contains a magic number: _scheduleConfiguration.InterestRate = _loan.InterestRate * 100;
Magic Number,OpenCBS.Engine,OctopusScheduleConfigurationFactory,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\OctopusScheduleConfigurationFactory.cs,GetPeriodPolicy,The following statement contains a magic number: policy.SetNumberOfDays(_loan.InstallmentType.NbOfMonths*30 + _loan.InstallmentType.NbOfDays);
Magic Number,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,CalculateInterest,The following statement contains a magic number: var interest = installment.OLB*configuration.InterestRate / 100 * daysInPeriod / daysInYear;
Magic Number,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,CalculateInterest,The following statement contains a magic number: if (configuration.CalculationPolicy.GetType() == typeof(FlatInstallmentCalculationPolicy))              {                  var numberOfPeriods =                      (decimal)                          (configuration.PeriodPolicy.GetNumberOfPeriodsInYear(                              configuration.PreferredFirstInstallmentDate' configuration.YearPolicy));                  interest = configuration.Amount*configuration.InterestRate/numberOfPeriods/100;              }
Magic Number,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,CalculateFirstInstallmentInterest,The following statement contains a magic number: var interest = installment.OLB * configuration.InterestRate / 100 * daysInPeriod / daysInYear;
Magic Number,OpenCBS.Engine,ScheduleBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\ScheduleBuilder.cs,CalculateFirstInstallmentInterest,The following statement contains a magic number: if (configuration.CalculationPolicy.GetType() == typeof(FlatInstallmentCalculationPolicy))              {                  var numberOfPeriods =                      (decimal)                      (configuration.PeriodPolicy.GetNumberOfPeriodsInYear(                          configuration.PreferredFirstInstallmentDate' configuration.YearPolicy));                  interest = configuration.Amount*configuration.InterestRate/numberOfPeriods/100;                    if (configuration.ChargeActualInterestForFirstInstallment)                  {                      var nextDate = configuration.PeriodPolicy.GetNextDate(configuration.StartDate);                      var numerator = (installment.ExpectedDate - configuration.StartDate).Days;                      var denominator = (nextDate - configuration.StartDate).Days;                      interest = interest*numerator/denominator;                  }              }
Magic Number,OpenCBS.Engine,TrancheBuilder,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\TrancheBuilder.cs,GetExtraInterest,The following statement contains a magic number: var interest = olb * scheduleConfiguration.InterestRate / 100 * days / daysInYear;
Magic Number,OpenCBS.Engine.InstallmentCalculationPolicy,AnnuityInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\AnnuityInstallmentCalculationPolicy.cs,FindAnnuity,The following statement contains a magic number: var interestRate = (double)configuration.InterestRate / 100 / numberOfPeriods;
Magic Number,OpenCBS.Engine.InstallmentCalculationPolicy,AnnuityInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\AnnuityInstallmentCalculationPolicy.cs,FindAnnuity,The following statement contains a magic number: do              {                  // loop is only for building schedule and determining the remainder                  for (var i = 1; i <= configuration.NumberOfInstallments; ++i)                  {                      installment.Number = i;                      installment.StartDate = i != 1 ? installment.ExpectedDate : configuration.StartDate;                      endDate = i == 1                          ? configuration.PreferredFirstInstallmentDate                          : configuration.PeriodPolicy.GetNextDate(endDate);                      installment.ExpectedDate = configuration.DateShiftPolicy.ShiftDate(endDate);                      if (i <= configuration.GracePeriod) continue;                      installment.InterestsRepayment = CalculateInterest(installment' configuration' installment.OLB.Value);                      installment.CapitalRepayment = annuity - installment.InterestsRepayment;                      installment.OLB -= installment.CapitalRepayment;                  }                  remainder = installment.OLB.Value;                  installment.OLB = configuration.Amount;                  ++counter;                  annuity += (remainder * configuration.InterestRate / (decimal)numberOfPeriods / 100 / number);              } while (Math.Abs(remainder) > 0.01m && counter < 1000);
Magic Number,OpenCBS.Engine.InstallmentCalculationPolicy,AnnuityInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\AnnuityInstallmentCalculationPolicy.cs,FindAnnuity,The following statement contains a magic number: do              {                  // loop is only for building schedule and determining the remainder                  for (var i = 1; i <= configuration.NumberOfInstallments; ++i)                  {                      installment.Number = i;                      installment.StartDate = i != 1 ? installment.ExpectedDate : configuration.StartDate;                      endDate = i == 1                          ? configuration.PreferredFirstInstallmentDate                          : configuration.PeriodPolicy.GetNextDate(endDate);                      installment.ExpectedDate = configuration.DateShiftPolicy.ShiftDate(endDate);                      if (i <= configuration.GracePeriod) continue;                      installment.InterestsRepayment = CalculateInterest(installment' configuration' installment.OLB.Value);                      installment.CapitalRepayment = annuity - installment.InterestsRepayment;                      installment.OLB -= installment.CapitalRepayment;                  }                  remainder = installment.OLB.Value;                  installment.OLB = configuration.Amount;                  ++counter;                  annuity += (remainder * configuration.InterestRate / (decimal)numberOfPeriods / 100 / number);              } while (Math.Abs(remainder) > 0.01m && counter < 1000);
Magic Number,OpenCBS.Engine.InstallmentCalculationPolicy,BaseInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\BaseInstallmentCalculationPolicy.cs,CalculateInterest,The following statement contains a magic number: var interest = installment.OLB * configuration.InterestRate / 100 * daysInPeriod / daysInYear;
Magic Number,OpenCBS.Engine.InstallmentCalculationPolicy,BaseInstallmentCalculationPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\InstallmentCalculationPolicy\BaseInstallmentCalculationPolicy.cs,CalculateInterest,The following statement contains a magic number: if (configuration.CalculationPolicy.GetType() == typeof(FlatInstallmentCalculationPolicy))              {                  var numberOfPeriods =                      (decimal)                          (configuration.PeriodPolicy.GetNumberOfPeriodsInYear(                              configuration.PreferredFirstInstallmentDate' configuration.YearPolicy));                  interest = configuration.Amount*configuration.InterestRate/numberOfPeriods/100;              }
Magic Number,OpenCBS.Engine.PeriodPolicy,Monthly30DayPeriodPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\PeriodPolicy\Monthly30DayPeriodPolicy.cs,GetNumberOfDays,The following statement contains a magic number: return 30;
Magic Number,OpenCBS.Engine.PeriodPolicy,Monthly30DayPeriodPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\PeriodPolicy\Monthly30DayPeriodPolicy.cs,GetNumberOfDays,The following statement contains a magic number: if (installment.Number == 1)                  return installment.ExpectedDate == installment.StartDate.AddMonths(1) ? 30 : (installment.ExpectedDate - installment.StartDate).Days;
Magic Number,OpenCBS.Engine.PeriodPolicy,Monthly30DayPeriodPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\PeriodPolicy\Monthly30DayPeriodPolicy.cs,GetNumberOfDays,The following statement contains a magic number: return 30;
Magic Number,OpenCBS.Engine.PeriodPolicy,Monthly30DayPeriodPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\PeriodPolicy\Monthly30DayPeriodPolicy.cs,GetNumberOfPeriodsInYear,The following statement contains a magic number: return 12;
Magic Number,OpenCBS.Engine.PeriodPolicy,MonthlyPeriodPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\PeriodPolicy\MonthlyPeriodPolicy.cs,GetNumberOfPeriodsInYear,The following statement contains a magic number: return 12;
Magic Number,OpenCBS.Engine.RoundingPolicy,TwoDecimalRoundingPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\RoundingPolicy\TwoDecimalRoundingPolicy.cs,Round,The following statement contains a magic number: return Math.Round(amount' 2' MidpointRounding.AwayFromZero);
Magic Number,OpenCBS.Engine.YearPolicy,ActualNumberOfDayYearPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\YearPolicy\ActualNumberOfDayYearPolicy.cs,GetNumberOfDays,The following statement contains a magic number: return DateTime.IsLeapYear(date.Year) ? 366 : 365;
Magic Number,OpenCBS.Engine.YearPolicy,ActualNumberOfDayYearPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\YearPolicy\ActualNumberOfDayYearPolicy.cs,GetNumberOfDays,The following statement contains a magic number: return DateTime.IsLeapYear(date.Year) ? 366 : 365;
Magic Number,OpenCBS.Engine.YearPolicy,ThreeHundredSixtyDayYearPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\YearPolicy\ThreeHundredSixtyDayYearPolicy.cs,GetNumberOfDays,The following statement contains a magic number: return 360;
Magic Number,OpenCBS.Engine.YearPolicy,ThreeHundredSixtyFiveDayYearPolicy,C:\repos\PavelBastov_opencbs\Src\OpenCBS.Engine\YearPolicy\ThreeHundredSixtyFiveDayYearPolicy.cs,GetNumberOfDays,The following statement contains a magic number: return 365;
