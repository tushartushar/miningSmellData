Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,ConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("2dep").Configure<SomeCounterConsumer' SomeCounterConsumer>((o' s' s2) => o.Message = s.Current + " " + s2.Current); " is 149.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,ConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("3dep").Configure<SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer>((o' s' s2' s3) => o.Message = s.Current + " " + s2.Current + " " + s3.Current); " is 193.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,ConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("4dep").Configure<SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer>((o' s' s2' s3' s4) => o.Message = s.Current + " " + s2.Current + " " + s3.Current + " " + s4.Current); " is 237.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,ConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("5dep").Configure<SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer>((o' s' s2' s3' s4' s5) => o.Message = s.Current + " " + s2.Current + " " + s3.Current + " " + s4.Current + " " + s5.Current); " is 281.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,PostConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("2dep").PostConfigure<SomeCounterConsumer' SomeCounterConsumer>((o' s' s2) => o.Message = s.Current + " " + s2.Current); " is 153.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,PostConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("3dep").PostConfigure<SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer>((o' s' s2' s3) => o.Message = s.Current + " " + s2.Current + " " + s3.Current); " is 197.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,PostConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("4dep").PostConfigure<SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer>((o' s' s2' s3' s4) => o.Message = s.Current + " " + s2.Current + " " + s3.Current + " " + s4.Current); " is 241.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,PostConfigureOptionsWithTransientDep,The length of the statement  "            services.AddOptions<FakeOptions>("5dep").PostConfigure<SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer' SomeCounterConsumer>((o' s' s2' s3' s4' s5) => o.Message = s.Current + " " + s2.Current + " " + s3.Current + " " + s4.Current + " " + s5.Current); " is 285.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanConfigureWithServiceProvider,The length of the statement  "            services.AddOptions<FakeOptions>().Configure<IServiceProvider>((o' s) => o.Message = s.GetRequiredService<SomeService>().Stuff); " is 128.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanBindToNonPublicProperties,The length of the statement  "            services.AddOptions<ComplexOptions>().Bind(new ConfigurationBuilder().AddInMemoryCollection(dic).Build()' o => o.BindNonPublicProperties = true); " is 145.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanNamedBindToNonPublicProperties,The length of the statement  "            services.AddOptions<ComplexOptions>("named").Bind(new ConfigurationBuilder().AddInMemoryCollection(dic).Build()' o => o.BindNonPublicProperties = true); " is 152.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithCustomError,The length of the statement  "            error = Assert.Throws<OptionsValidationException>(() => sp.GetRequiredService<IOptionsMonitor<ComplexOptions>>().Get("named")); " is 127.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMixedOverloads,The length of the statement  "            ValidateFailure<ComplexOptions>(error' Options.DefaultName' 3' "A validation error has occured."' "Virtual"' "Integer"); " is 120.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsThatDependOnOptions,The length of the statement  "            error = Assert.Throws<OptionsValidationException>(() => sp.GetRequiredService<IOptionsMonitor<ComplexOptions>>().Get(Options.DefaultName)); " is 139.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsThatDependOnOptions,The length of the statement  "            error = Assert.Throws<OptionsValidationException>(() => sp.GetRequiredService<IOptionsMonitor<ComplexOptions>>().Get("no")); " is 124.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsEagerly,The length of the statement  "            ValidateFailure<ComplexOptions>(error' Options.DefaultName' 3' "A validation error has occured."' "Virtual"' "Integer"); " is 120.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsFactoryTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsFactoryTests.cs,ConfigureOptionsThrowsWithAction,The length of the statement  "            Assert.Equal("No IConfigureOptions<> or IPostConfigureOptions<> implementations were found' did you mean to call Configure<> or PostConfigure<>?"' error.Message); " is 162.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsMonitorTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsMonitorTest.cs,CanClearNamedOptions,The length of the statement  "            var services = new ServiceCollection().AddOptions().AddSingleton<IConfigureOptions<FakeOptions>>(new CountIncrement(this)); " is 123.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsMonitorTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsMonitorTest.cs,CanWatchNamedOptions,The length of the statement  "            var services = new ServiceCollection().AddOptions().AddSingleton<IConfigureOptions<FakeOptions>>(new CountIncrement(this)); " is 123.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsTest.cs,CanBindToNonPublicProperties,The length of the statement  "            services.Configure<ComplexOptions>(new ConfigurationBuilder().AddInMemoryCollection(dic).Build()' o => o.BindNonPublicProperties = true); " is 137.
Long Statement,Microsoft.Extensions.Options.Tests,OptionsTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsTest.cs,CanNamedBindToNonPublicProperties,The length of the statement  "            services.Configure<ComplexOptions>("named"' new ConfigurationBuilder().AddInMemoryCollection(dic).Build()' o => o.BindNonPublicProperties = true); " is 146.
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMultipleDefaultErrors,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Configure(o =>                  {                      o.Boolean = false;                      o.Integer = 11;                  })                  .Validate(o => o.Boolean)                  .Validate(o => o.Integer > 12);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMultipleDefaultErrors,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Configure(o =>                  {                      o.Boolean = false;                      o.Integer = 11;                  })                  .Validate(o => o.Boolean)                  .Validate(o => o.Integer > 12);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMultipleDefaultErrors,The following statement contains a magic number: ValidateFailure<ComplexOptions>(error' Options.DefaultName' 2' "A validation error has occured.");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMixedOverloads,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Configure(o =>                  {                      o.Boolean = false;                      o.Integer = 11;                      o.Virtual = "wut";                  })                  .Validate(o => o.Boolean)                  .Validate(o => o.Virtual == null' "Virtual")                  .Validate(o => o.Integer > 12' "Integer");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMixedOverloads,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Configure(o =>                  {                      o.Boolean = false;                      o.Integer = 11;                      o.Virtual = "wut";                  })                  .Validate(o => o.Boolean)                  .Validate(o => o.Virtual == null' "Virtual")                  .Validate(o => o.Integer > 12' "Integer");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsWithMixedOverloads,The following statement contains a magic number: ValidateFailure<ComplexOptions>(error' Options.DefaultName' 3' "A validation error has occured."' "Virtual"' "Integer");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsEagerly,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Configure(o =>                  {                      o.Boolean = false;                      o.Integer = 11;                      o.Virtual = "wut";                  })                  .Validate(o => o.Boolean)                  .Validate(o => o.Virtual == null' "Virtual")                  .Validate(o => o.Integer > 12' "Integer");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsEagerly,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Configure(o =>                  {                      o.Boolean = false;                      o.Integer = 11;                      o.Virtual = "wut";                  })                  .Validate(o => o.Boolean)                  .Validate(o => o.Virtual == null' "Virtual")                  .Validate(o => o.Integer > 12' "Integer");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateOptionsEagerly,The following statement contains a magic number: ValidateFailure<ComplexOptions>(error' Options.DefaultName' 3' "A validation error has occured."' "Virtual"' "Integer");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateDataAnnotations,The following statement contains a magic number: services.AddOptions<AnnotatedOptions>()                  .Configure(o =>                  {                      o.StringLength = "111111";                      o.IntRange = 10;                      o.Custom = "nowhere";                      o.Dep1 = "Not dep2";                  })                  .ValidateDataAnnotations();
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateMixDataAnnotations,The following statement contains a magic number: services.AddOptions<AnnotatedOptions>()                  .Configure(o =>                  {                      o.StringLength = "111111";                      o.IntRange = 10;                      o.Custom = "nowhere";                      o.Dep1 = "Not dep2";                  })                  .ValidateDataAnnotations()                  .Validate(o => o.Custom != "nowhere"' "I don't want to go to nowhere!");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsBuilderTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsBuilderTest.cs,CanValidateMixDataAnnotations,The following statement contains a magic number: ValidateFailure<AnnotatedOptions>(error' Options.DefaultName' 2'                  "DataAnnotation validation failed for members Required with the error 'The Required field is required.'."'                  "DataAnnotation validation failed for members StringLength with the error 'Too long.'."'                  "DataAnnotation validation failed for members IntRange with the error 'Out of range.'."'                  "DataAnnotation validation failed for members Custom with the error 'The field Custom is invalid.'."'                  "DataAnnotation validation failed for members Dep1' Dep2 with the error 'Dep1 != Dep2'."'                  "I don't want to go to nowhere!");
Magic Number,Microsoft.Extensions.Options.Tests,OptionsSnapshotTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsSnapshotTest.cs,SnapshotOptionsAreCachedPerScope,The following statement contains a magic number: Assert.Equal(2' TestConfigure.ConfigureCount);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsSnapshotTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsSnapshotTest.cs,SnapshotOptionsAreCachedPerScope,The following statement contains a magic number: Assert.Equal(3' TestConfigure.ConfigureCount);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsSnapshotTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsSnapshotTest.cs,SnapshotOptionsAreCachedPerScope,The following statement contains a magic number: Assert.Equal(4' TestConfigure.ConfigureCount);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsSnapshotTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsSnapshotTest.cs,SnapshotOptionsAreCachedPerScope,The following statement contains a magic number: Assert.Equal(2' TestConfigure.CtorCount);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsTest.cs,CanReadComplexProperties,The following statement contains a magic number: Assert.Equal(-2' options.Integer);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsTest.cs,CanReadComplexProperties,The following statement contains a magic number: Assert.Equal(11' options.Nested.Integer);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsTest.cs,CanReadInheritedProperties,The following statement contains a magic number: Assert.Equal(-2' options.Integer);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsTest.cs,CanReadInheritedProperties,The following statement contains a magic number: Assert.Equal(11' options.Nested.Integer);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsValidationTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsValidationTests.cs,ValidationResultSuccessIfNameMatched,The following statement contains a magic number: services.AddOptions<ComplexOptions>()                  .Validate(o => o.Boolean)                  .Validate(o => o.Integer > 12);
Magic Number,Microsoft.Extensions.Options.Tests,OptionsValidationTest,D:\research\architectureSmells\repos\aspnet_Options\test\Microsoft.Extensions.Options.Test\OptionsValidationTests.cs,ValidationResultSuccessIfNameMatched,The following statement contains a magic number: var options = new ComplexOptions              {                  Boolean = true'                  Integer = 13              };
