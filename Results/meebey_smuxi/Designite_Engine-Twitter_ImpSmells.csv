Implementation smell,Namespace,Class,File,Method,Description
Long Method,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Connect,The method has 222 lines of code.
Long Method,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandPin,The method has 103 lines of code.
Long Method,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateDirectMessages,The method has 106 lines of code.
Complex Method,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Connect,Cyclomatic complexity of the method is 9
Complex Method,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandTimeline,Cyclomatic complexity of the method is 8
Complex Method,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateDirectMessages,Cyclomatic complexity of the method is 15
Long Parameter List,Smuxi.Engine,TwitterSearchStream,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterSearchStream.cs,TwitterSearchStream,The method has 5 parameters. Parameters: protocolManager' chat' keyword' tokens' proxy
Long Identifier,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,,The length of the parameter f_UpdateFriendsTimelineInterval is 31.
Long Identifier,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,,The length of the parameter f_UpdateDirectMessagesInterval is 30.
Long Identifier,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,,The length of the parameter f_LastDirectMessageReceivedStatusID is 35.
Long Identifier,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,,The length of the parameter f_LastDirectMessageSentStatusID is 31.
Long Statement,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CheckTwitterizerException,The length of the statement  "                f_Logger.Warn("CheckTwitterizerException(): unknown inner exception: " + exception.InnerException.GetType()' exception.InnerException); " is 135.
Empty Catch Block,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CloseChat,The method has an empty catch block.
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,TwitterProtocolManager,The following statement contains a magic number: StatusIndex = new TwitterStatus[99];
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Connect,The following statement contains a magic number: try {                  var key = GetApiKey();                  f_OAuthTokens = new OAuthTokens();                  f_OAuthTokens.ConsumerKey = key[0];                  f_OAuthTokens.ConsumerSecret = key[1];                    var password = server.Password ?? String.Empty;                  var access = password.Split('|');                  if (access.Length == 2) {                      f_OAuthTokens.AccessToken = access[0];                      f_OAuthTokens.AccessTokenSecret = access[1];                        // verify access token                      var options = CreateOptions<VerifyCredentialsOptions>();                      var response = TwitterAccount.VerifyCredentials(                          f_OAuthTokens' options                      );                      if (response.Result == RequestResult.Unauthorized) {  #if LOG4NET                          f_Logger.Warn("Connect(): Invalid access token' " +                                        "re-authorization required");  #endif                          f_OAuthTokens.AccessToken = null;                          f_OAuthTokens.AccessTokenSecret = null;                      }                  }                    if (!f_OAuthTokens.HasAccessToken) {                      // new account or basic auth user that needs to be migrated                      var reqToken = OAuthUtility.GetRequestToken(key[0]' key[1]'                                                              "oob"' f_WebProxy);                      f_RequestToken = reqToken.Token;                      var authUri = OAuthUtility.BuildAuthorizationUri(f_RequestToken);                      builder = CreateMessageBuilder();                      builder.AppendEventPrefix();                      builder.AppendText(_("Twitter authorization required."));                      Session.AddMessageToChat(f_ProtocolChat' builder.ToMessage());                        builder = CreateMessageBuilder();                      builder.AppendEventPrefix();                      // TRANSLATOR: do NOT change the position of {0}!                      builder.AppendText(                          _("Please open the following URL and click " +                            "\"Allow\" to allow Smuxi to connect to your " +                            "Twitter account: {0}")'                          String.Empty                      );                      Session.AddMessageToChat(f_ProtocolChat' builder.ToMessage());                        builder = CreateMessageBuilder();                      builder.AppendEventPrefix();                      builder.AppendText(" ");                      builder.AppendUrl(authUri.AbsoluteUri);                      Session.AddMessageToChat(f_ProtocolChat' builder.ToMessage());                        builder = CreateMessageBuilder();                      builder.AppendEventPrefix();                      builder.AppendText(                          _("Once you have allowed Smuxi to access your " +                            "Twitter account' Twitter will provide a PIN.")                      );                      Session.AddMessageToChat(f_ProtocolChat' builder.ToMessage());                        builder = CreateMessageBuilder();                      builder.AppendEventPrefix();                      builder.AppendText(_("Please type: /pin PIN_FROM_TWITTER"));                      Session.AddMessageToChat(f_ProtocolChat' builder.ToMessage());                  }              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("Connect(): Exception"' ex);  #endif                  if (fm != null) {                      fm.SetStatus(_("Connection failed!"));                  }                  msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("Connection failed! Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Connect,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate {                  try {                      // FIXME: replace with AutoResetEvent                      while (!HasTokens) {                          Thread.Sleep(1000);                      }                                            var message = _("Fetching user details from Twitter' please wait...");                      msg = CreateMessageBuilder().                          AppendEventPrefix().AppendText(message).ToMessage();                      Session.AddMessageToChat(Chat' msg);                        UpdateUser();                        message = _("Finished fetching user details.");                      msg = CreateMessageBuilder().                          AppendEventPrefix().AppendText(message).ToMessage();                      Session.AddMessageToChat(Chat' msg);                        f_IsConnected = true;                      message =_("Successfully connected to Twitter.");                      if (fm != null) {                          fm.UpdateNetworkStatus();                          fm.SetStatus(message);                      }                        msg = CreateMessageBuilder().                          AppendEventPrefix().AppendText(message).ToMessage();                      Session.AddMessageToChat(Chat' msg);                      f_Listening = true;                        f_FriendsTimelineChat.PersonCount =                       f_RepliesChat.PersonCount =                       f_DirectMessagesChat.PersonCount = (int) f_TwitterUser.NumberOfFriends;                        OnConnected(EventArgs.Empty);                    } catch (Exception ex) {                      var message = _("Failed to fetch user details from Twitter. Reason: ");  #if LOG4NET                      f_Logger.Error("Connect(): " + message' ex);  #endif                      msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendErrorText(message + ex.Message).                          ToMessage();                      Session.AddMessageToChat(Chat' msg);                        if (fm != null) {                          fm.SetStatus(_("Connection failed!"));                      }                      msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendErrorText(_("Connection failed! Reason: {0}")'                                          ex.Message).                          ToMessage();                      Session.AddMessageToChat(Chat' msg);                  }              });
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Connect,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate {                  try {                      // FIXME: replace with AutoResetEvent                      // f_TwitterUser needed for proper self detection in the                      // CreatePerson() method                      while (!HasTokens || f_TwitterUser == null) {                          Thread.Sleep(1000);                      }                        msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendText(                              _("Fetching friends from Twitter' please wait...")                          ).                          ToMessage();                      Session.AddMessageToChat(Chat' msg);                        UpdateFriends();                        msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendText(_("Finished fetching friends.")).                          ToMessage();                      Session.AddMessageToChat(Chat' msg);                  } catch (Exception ex) {                      var message = _("Failed to fetch friends from Twitter. Reason: ");  #if LOG4NET                      f_Logger.Error("Connect(): " + message' ex);  #endif                      msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendErrorText(message + ex.Message).                          ToMessage();                      Session.AddMessageToChat(Chat' msg);                  }              });
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandConnect,The following statement contains a magic number: if (cd.DataArray.Length >= 3) {                  server.Username = cd.DataArray[2];              } else {                  NotEnoughParameters(cd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandConnect,The following statement contains a magic number: if (cd.DataArray.Length >= 3) {                  server.Username = cd.DataArray[2];              } else {                  NotEnoughParameters(cd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandTimeline,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandMessage,The following statement contains a magic number: if (cmd.DataArray.Length >= 2) {                  nickname = cmd.DataArray[1];              } else {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandMessage,The following statement contains a magic number: if (cmd.DataArray.Length >= 3) {                  string message = String.Join(" "' cmd.DataArray' 2' cmd.DataArray.Length-2);                  try {                      SendMessage(user.ScreenName' message);                  } catch (Exception ex) {                      var msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendErrorText(                              _("Could not send message - Reason: {0}")'                              ex.Message).                          ToMessage();                      Session.AddMessageToFrontend(cmd.FrontendManager' chat' msg);                  }              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandMessage,The following statement contains a magic number: if (cmd.DataArray.Length >= 3) {                  string message = String.Join(" "' cmd.DataArray' 2' cmd.DataArray.Length-2);                  try {                      SendMessage(user.ScreenName' message);                  } catch (Exception ex) {                      var msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendErrorText(                              _("Could not send message - Reason: {0}")'                              ex.Message).                          ToMessage();                      Session.AddMessageToFrontend(cmd.FrontendManager' chat' msg);                  }              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandMessage,The following statement contains a magic number: if (cmd.DataArray.Length >= 3) {                  string message = String.Join(" "' cmd.DataArray' 2' cmd.DataArray.Length-2);                  try {                      SendMessage(user.ScreenName' message);                  } catch (Exception ex) {                      var msg = CreateMessageBuilder().                          AppendEventPrefix().                          AppendErrorText(                              _("Could not send message - Reason: {0}")'                              ex.Message).                          ToMessage();                      Session.AddMessageToFrontend(cmd.FrontendManager' chat' msg);                  }              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandFollow,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandUnfollow,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandSearch,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandSearch,The following statement contains a magic number: options.Count = 50;
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandRetweet,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandReply,The following statement contains a magic number: if (cmd.DataArray.Length < 3) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandReply,The following statement contains a magic number: var text = String.Join(" "' cmd.DataArray.Skip(2).ToArray());
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandDelete,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandFavorite,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandUnfavorite,The following statement contains a magic number: if (cmd.DataArray.Length < 2) {                  NotEnoughParameters(cmd);                  return;              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateFriendsTimelineThread,The following statement contains a magic number: try {                  // query the timeline only after we have fetched the user and friends                  while (f_TwitterUser == null /*|| f_TwitterUser.IsEmpty*/ ||                         f_Friends == null) {                      Thread.Sleep(1000);                  }                    // populate friend list                  lock (f_Friends) {                      foreach (PersonModel friend in f_Friends.Values) {                          f_FriendsTimelineChat.UnsafePersons.Add(friend.ID' friend);                      }                  }                  Session.AddChat(f_FriendsTimelineChat);                  Session.SyncChat(f_FriendsTimelineChat);                    while (f_Listening) {                      try {                          UpdateFriendsTimeline();                      } catch (TwitterizerException ex) {                          CheckTwitterizerException(ex);                      } catch (WebException ex) {                          CheckWebException(ex);                      }                        // only poll once per interval or when we get fired                      f_FriendsTimelineEvent.WaitOne(                          f_UpdateFriendsTimelineInterval * 1000' false                      );                  }              } catch (ThreadAbortException) {  #if LOG4NET                  f_Logger.Debug("UpdateFriendsTimelineThread(): thread aborted");  #endif              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("UpdateFriendsTimelineThread(): Exception"' ex);  #endif                  var msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("An error occurred while fetching the friends " +                            "timeline from Twitter. Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);              } finally {  #if LOG4NET                  f_Logger.Debug("UpdateFriendsTimelineThread(): finishing thread.");  #endif                  lock (Session.Chats) {                      if (Session.Chats.Contains(f_FriendsTimelineChat)) {                          Session.RemoveChat(f_FriendsTimelineChat);                      }                  }                  f_FriendsTimelineChat.UnsafePersons.Clear();              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateFriendsTimelineThread,The following statement contains a magic number: try {                  // query the timeline only after we have fetched the user and friends                  while (f_TwitterUser == null /*|| f_TwitterUser.IsEmpty*/ ||                         f_Friends == null) {                      Thread.Sleep(1000);                  }                    // populate friend list                  lock (f_Friends) {                      foreach (PersonModel friend in f_Friends.Values) {                          f_FriendsTimelineChat.UnsafePersons.Add(friend.ID' friend);                      }                  }                  Session.AddChat(f_FriendsTimelineChat);                  Session.SyncChat(f_FriendsTimelineChat);                    while (f_Listening) {                      try {                          UpdateFriendsTimeline();                      } catch (TwitterizerException ex) {                          CheckTwitterizerException(ex);                      } catch (WebException ex) {                          CheckWebException(ex);                      }                        // only poll once per interval or when we get fired                      f_FriendsTimelineEvent.WaitOne(                          f_UpdateFriendsTimelineInterval * 1000' false                      );                  }              } catch (ThreadAbortException) {  #if LOG4NET                  f_Logger.Debug("UpdateFriendsTimelineThread(): thread aborted");  #endif              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("UpdateFriendsTimelineThread(): Exception"' ex);  #endif                  var msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("An error occurred while fetching the friends " +                            "timeline from Twitter. Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);              } finally {  #if LOG4NET                  f_Logger.Debug("UpdateFriendsTimelineThread(): finishing thread.");  #endif                  lock (Session.Chats) {                      if (Session.Chats.Contains(f_FriendsTimelineChat)) {                          Session.RemoveChat(f_FriendsTimelineChat);                      }                  }                  f_FriendsTimelineChat.UnsafePersons.Clear();              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateFriendsTimeline,The following statement contains a magic number: options.Count = 50;
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateRepliesThread,The following statement contains a magic number: try {                  // query the replies only after we have fetched the user and friends                  while (f_TwitterUser == null /*|| f_TwitterUser.IsEmpty*/ ||                         f_Friends == null) {                      Thread.Sleep(1000);                  }                    // populate friend list                  lock (f_Friends) {                      foreach (PersonModel friend in f_Friends.Values) {                          f_RepliesChat.UnsafePersons.Add(friend.ID' friend);                      }                  }                  Session.AddChat(f_RepliesChat);                  Session.SyncChat(f_RepliesChat);                    while (f_Listening) {                      try {                          UpdateReplies();                      } catch (TwitterizerException ex) {                          CheckTwitterizerException(ex);                      } catch (WebException ex) {                          CheckWebException(ex);                      }                        // only poll once per interval                      Thread.Sleep(f_UpdateRepliesInterval * 1000);                  }              } catch (ThreadAbortException) {  #if LOG4NET                  f_Logger.Debug("UpdateRepliesThread(): thread aborted");  #endif              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("UpdateRepliesThread(): Exception"' ex);  #endif                  var msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("An error occurred while fetching the replies " +                            "from Twitter. Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);              } finally {  #if LOG4NET                  f_Logger.Debug("UpdateRepliesThread(): finishing thread.");  #endif                  lock (Session.Chats) {                      if (Session.Chats.Contains(f_RepliesChat)) {                          Session.RemoveChat(f_RepliesChat);                      }                  }                  f_RepliesChat.UnsafePersons.Clear();              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateRepliesThread,The following statement contains a magic number: try {                  // query the replies only after we have fetched the user and friends                  while (f_TwitterUser == null /*|| f_TwitterUser.IsEmpty*/ ||                         f_Friends == null) {                      Thread.Sleep(1000);                  }                    // populate friend list                  lock (f_Friends) {                      foreach (PersonModel friend in f_Friends.Values) {                          f_RepliesChat.UnsafePersons.Add(friend.ID' friend);                      }                  }                  Session.AddChat(f_RepliesChat);                  Session.SyncChat(f_RepliesChat);                    while (f_Listening) {                      try {                          UpdateReplies();                      } catch (TwitterizerException ex) {                          CheckTwitterizerException(ex);                      } catch (WebException ex) {                          CheckWebException(ex);                      }                        // only poll once per interval                      Thread.Sleep(f_UpdateRepliesInterval * 1000);                  }              } catch (ThreadAbortException) {  #if LOG4NET                  f_Logger.Debug("UpdateRepliesThread(): thread aborted");  #endif              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("UpdateRepliesThread(): Exception"' ex);  #endif                  var msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("An error occurred while fetching the replies " +                            "from Twitter. Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);              } finally {  #if LOG4NET                  f_Logger.Debug("UpdateRepliesThread(): finishing thread.");  #endif                  lock (Session.Chats) {                      if (Session.Chats.Contains(f_RepliesChat)) {                          Session.RemoveChat(f_RepliesChat);                      }                  }                  f_RepliesChat.UnsafePersons.Clear();              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateDirectMessagesThread,The following statement contains a magic number: try {                  // query the messages only after we have fetched the user and friends                  while (f_TwitterUser == null ||                         f_Friends == null) {                      Thread.Sleep(1000);                  }                    // populate friend list                  lock (f_Friends) {                      foreach (PersonModel friend in f_Friends.Values) {                          f_DirectMessagesChat.UnsafePersons.Add(friend.ID' friend);                      }                  }                  Session.AddChat(f_DirectMessagesChat);                  Session.SyncChat(f_DirectMessagesChat);                    while (f_Listening) {                      try {                          UpdateDirectMessages();                      } catch (TwitterizerException ex) {                          CheckTwitterizerException(ex);                      } catch (WebException ex) {                          CheckWebException(ex);                      }                        // only poll once per interval or when we get fired                      f_DirectMessageEvent.WaitOne(                          f_UpdateDirectMessagesInterval * 1000' false                      );                  }              } catch (ThreadAbortException) {  #if LOG4NET                  f_Logger.Debug("UpdateDirectMessagesThread(): thread aborted");  #endif              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("UpdateDirectMessagesThread(): Exception"' ex);  #endif                  var msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("An error occurred while fetching direct messages " +                            "from Twitter. Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);              } finally {  #if LOG4NET                  f_Logger.Debug("UpdateDirectMessagesThread(): finishing thread.");  #endif                  lock (Session.Chats) {                      if (Session.Chats.Contains(f_DirectMessagesChat)) {                          Session.RemoveChat(f_DirectMessagesChat);                      }                  }                  f_DirectMessagesChat.UnsafePersons.Clear();              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateDirectMessagesThread,The following statement contains a magic number: try {                  // query the messages only after we have fetched the user and friends                  while (f_TwitterUser == null ||                         f_Friends == null) {                      Thread.Sleep(1000);                  }                    // populate friend list                  lock (f_Friends) {                      foreach (PersonModel friend in f_Friends.Values) {                          f_DirectMessagesChat.UnsafePersons.Add(friend.ID' friend);                      }                  }                  Session.AddChat(f_DirectMessagesChat);                  Session.SyncChat(f_DirectMessagesChat);                    while (f_Listening) {                      try {                          UpdateDirectMessages();                      } catch (TwitterizerException ex) {                          CheckTwitterizerException(ex);                      } catch (WebException ex) {                          CheckWebException(ex);                      }                        // only poll once per interval or when we get fired                      f_DirectMessageEvent.WaitOne(                          f_UpdateDirectMessagesInterval * 1000' false                      );                  }              } catch (ThreadAbortException) {  #if LOG4NET                  f_Logger.Debug("UpdateDirectMessagesThread(): thread aborted");  #endif              } catch (Exception ex) {  #if LOG4NET                  f_Logger.Error("UpdateDirectMessagesThread(): Exception"' ex);  #endif                  var msg = CreateMessageBuilder().                      AppendEventPrefix().                      AppendErrorText(                          _("An error occurred while fetching direct messages " +                            "from Twitter. Reason: {0}")'                          ex.Message).                      ToMessage();                  Session.AddMessageToChat(Chat' msg);              } finally {  #if LOG4NET                  f_Logger.Debug("UpdateDirectMessagesThread(): finishing thread.");  #endif                  lock (Session.Chats) {                      if (Session.Chats.Contains(f_DirectMessagesChat)) {                          Session.RemoveChat(f_DirectMessagesChat);                      }                  }                  f_DirectMessagesChat.UnsafePersons.Clear();              }
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateDirectMessages,The following statement contains a magic number: options.Count = 50;
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateDirectMessages,The following statement contains a magic number: sentOptions.Count = 50;
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,UpdateFriends,The following statement contains a magic number: var pageSize = 100;
Magic Number,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,GetApiKey,The following statement contains a magic number: if (key.Length != 2) {                  throw new InvalidOperationException("Invalid Twitter API key!");              }
Magic Number,Smuxi.Engine,TwitterSearchStream,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterSearchStream.cs,TwitterSearchStream,The following statement contains a magic number: MessageRateLimiter = new RateLimiter(5' TimeSpan.FromSeconds(5));
Magic Number,Smuxi.Engine,TwitterSearchStream,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterSearchStream.cs,TwitterSearchStream,The following statement contains a magic number: MessageRateLimiter = new RateLimiter(5' TimeSpan.FromSeconds(5));
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,OpenChat,The following switch statement is missing a default case: switch (twitterChatType) {                      case TwitterChatType.FriendsTimeline:                          OpenFriendsTimelineChat();                          break;                      case TwitterChatType.Replies:                          OpenRepliesChat();                          break;                      case TwitterChatType.DirectMessages:                          OpenDirectMessagesChat();                          break;                  }
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CloseChat,The following switch statement is missing a default case: switch (chatType.Value) {                      case TwitterChatType.FriendsTimeline:                          if (f_UpdateFriendsTimelineThread != null &&                              f_UpdateFriendsTimelineThread.IsAlive) {                              f_UpdateFriendsTimelineThread.Abort();                          }                          break;                      case TwitterChatType.Replies:                          if (f_UpdateRepliesThread != null &&                              f_UpdateRepliesThread.IsAlive) {                              f_UpdateRepliesThread.Abort();                          }                          break;                      case TwitterChatType.DirectMessages:                          if (f_UpdateDirectMessagesThread != null &&                              f_UpdateDirectMessagesThread.IsAlive) {                              f_UpdateDirectMessagesThread.Abort();                          }                          break;                  }
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Command,The following switch statement is missing a default case: switch (command.Command) {                          case "msg":                          case "query":                              CommandMessage(command);                              handled = true;                              break;                          case "timeline":                              CommandTimeline(command);                              handled = true;                              break;                          case "follow":                              CommandFollow(command);                              handled = true;                              break;                          case "unfollow":                              CommandUnfollow(command);                              handled = true;                              break;                          case "search":                          case "join":                              CommandSearch(command);                              handled = true;                              break;                          case "rt":                          case "retweet":                              CommandRetweet(command);                              handled = true;                              break;                          case "reply":                              CommandReply(command);                              handled = true;                              break;                          case "say":                              CommandSay(command);                              handled = true;                              break;                          case "del":                          case "delete":                              CommandDelete(command);                              handled = true;                              break;                          case "fav":                          case "favourite":                          case "favorite":                              CommandFavorite(command);                              handled = true;                              break;                          case "unfav":                          case "unfavourite":                          case "unfavorite":                              CommandUnfavorite(command);                              handled = true;                              break;                      }
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,Command,The following switch statement is missing a default case: switch (command.Command) {                      case "help":                          CommandHelp(command);                          handled = true;                          break;                      case "connect":                          CommandConnect(command);                          handled = true;                          break;                      case "pin":                          CommandPin(command);                          handled = true;                          break;                  }
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CommandSay,The following switch statement is missing a default case: switch (twitterChatType) {                      case TwitterChatType.FriendsTimeline:                      case TwitterChatType.Replies: {                          try {                              PostUpdate(cmd);                          } catch (Exception ex) {                              var msg = CreateMessageBuilder().                                  AppendEventPrefix().                                  AppendErrorText(                                      _("Could not update status - Reason: {0}")'                                      ex.Message).                                  ToMessage();                              Session.AddMessageToFrontend(cmd' msg);                          }                          break;                      }                      case TwitterChatType.DirectMessages: {                          var msg = CreateMessageBuilder().                              AppendEventPrefix().                              AppendErrorText(                                  _("Cannot send message - no target specified. " +                                    "Use: /msg $nick message")).                              ToMessage();                          Session.AddMessageToFrontend(cmd' msg);                          break;                      }                  }
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,CheckWebException,The following switch statement is missing a default case: switch (exception.Status) {                  case WebExceptionStatus.ConnectFailure:                  case WebExceptionStatus.ConnectionClosed:                  case WebExceptionStatus.Timeout:                  case WebExceptionStatus.ReceiveFailure:                  case WebExceptionStatus.NameResolutionFailure:                  case WebExceptionStatus.ProxyNameResolutionFailure:                      // ignore temporarly issues  #if LOG4NET                      f_Logger.Warn("CheckWebException(): ignored exception"' exception);  #endif                      return;              }
Missing Default,Smuxi.Engine,TwitterProtocolManager,C:\repos\meebey_smuxi\src\Engine-Twitter\Protocols\Twitter\TwitterProtocolManager.cs,IsTemporilyErrorResponse,The following switch statement is missing a default case: switch (response.Result) {                  case RequestResult.Success:                      // no error at all                      ErrorResponseCount = 0;                      return false;                  case RequestResult.ConnectionFailure:                  case RequestResult.RateLimited:                  case RequestResult.TwitterIsDown:                  case RequestResult.TwitterIsOverloaded:                  // probably "Twitter is over capacity"                  case RequestResult.Unknown:  #if LOG4NET                      f_Logger.Debug("IsTemporilyErrorResponse(): " +                                     "Detected temporily error " +                                     "RequestUrl: " + response.RequestUrl + " " +                                     "Result: " + response.Result + " " +                                     "Content:\n" + response.Content);  #endif                      return true;              }
