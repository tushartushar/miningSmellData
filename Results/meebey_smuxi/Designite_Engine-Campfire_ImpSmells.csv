Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Smuxi.Engine,CampfireProtocolManager,C:\repos\meebey_smuxi\src\Engine-Campfire\Protocols\Campfire\CampfireProtocolManager.cs,ShowMessage,Cyclomatic complexity of the method is 8
Long Statement,Smuxi.Engine,CampfireProtocolManager,C:\repos\meebey_smuxi\src\Engine-Campfire\Protocols\Campfire\CampfireProtocolManager.cs,FormatUpload,The length of the statement  "            var upload = Client.Get<UploadWrapper>(String.Format("/room/{0}/messages/{1}/upload.json"' chat.ID' message.Id)).Upload; " is 120.
Empty Catch Block,Smuxi.Engine,CampfireEventStream,C:\repos\meebey_smuxi\src\Engine-Campfire\Protocols\Campfire\CampfireEventStream.cs,DoWork,The method has an empty catch block.
Magic Number,Smuxi.Engine,CampfireProtocolManager,C:\repos\meebey_smuxi\src\Engine-Campfire\Protocols\Campfire\CampfireProtocolManager.cs,CampfireProtocolManager,The following statement contains a magic number: RefreshInterval = TimeSpan.FromMinutes(5);
Magic Number,Smuxi.Engine,CampfireEventStream,C:\repos\meebey_smuxi\src\Engine-Campfire\Protocols\Campfire\CampfireEventStream.cs,DoWork,The following statement contains a magic number: while (true) {                  try {                      // if LastMessage > 0 we're reconnecting' so we need to ask                      // the server for the messages we've missed                      if (LastMessage > 0) {                          FillHole();                      }                      ParseStream();                  } catch (TimeoutException) {                      // Not to worry' let's just connect again                  } catch (WebException e) {                      if (e.Status == WebExceptionStatus.ProtocolError) {                          var resp = (HttpWebResponse) e.Response;                          if (resp.StatusCode == HttpStatusCode.Unauthorized ||                              resp.StatusCode == HttpStatusCode.Forbidden) {                              if (ErrorReceived != null) {                                  ErrorReceived(this' new ErrorReceivedEventArgs(resp.StatusCode' resp.StatusDescription));                              }                                return;                          }                          // it's not such a bad error' sleep for a bit before trying again                          Thread.Sleep(TimeSpan.FromSeconds(5));                      }                  }              }
