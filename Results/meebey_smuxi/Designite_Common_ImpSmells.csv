Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Smuxi.Common,Trace,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Trace.cs,_ParameterizeQuote,Cyclomatic complexity of the method is 13
Complex Method,Smuxi.Common,SerializationWriter,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\FastSerializer.cs,WriteObject,Cyclomatic complexity of the method is 19
Complex Method,Smuxi.Common,SerializationReader,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\FastSerializer.cs,ReadObject,Cyclomatic complexity of the method is 20
Complex Method,Smuxi.Common,TaskQueue,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\TaskQueue.cs,Loop,Cyclomatic complexity of the method is 8
Complex Method,Smuxi.Common,Pattern,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Pattern.cs,IsMatch,Cyclomatic complexity of the method is 9
Complex Method,Smuxi.Common,IconCache,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\IconCache.cs,DownloadServerIcon,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,Smuxi.Common,IconCache,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\IconCache.cs,BeginDownloadFile,The method has 5 parameters. Parameters: protocol' iconName' fileUrl' onSuccess' onError
Long Parameter List,Smuxi.Common,IconCache,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\IconCache.cs,EnqueueDownload,The method has 6 parameters. Parameters: protocol' iconName' url' action' onSuccess' onError
Long Parameter List,Smuxi.Common,IconCache,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\IconCache.cs,BeginDownloadIcon,The method has 5 parameters. Parameters: protocol' iconName' websiteUrl' onSuccess' onError
Long Parameter List,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Complex Conditional,NDesk.Options,Option,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Empty Catch Block,Smuxi.Common,SingleApplicationInstance<T>,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\SingleApplicationInstance.cs,Dispose,The method has an empty catch block.
Magic Number,Smuxi.Common,Trace,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Trace.cs,_Parameterize,The following statement contains a magic number: res.Remove(res.Length - 2' 2);
Magic Number,Smuxi.Common,Trace,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Trace.cs,_Parameterize,The following statement contains a magic number: res.Remove(res.Length - 2' 2);
Magic Number,Smuxi.Common,SerializationWriter,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\FastSerializer.cs,GetWriter,The following statement contains a magic number: MemoryStream ms = new MemoryStream(1024);
Magic Number,Smuxi.Common,Pattern,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Pattern.cs,IsMatch,The following statement contains a magic number: var regexPattern = pattern.Substring(1' pattern.Length - 2);
Magic Number,Smuxi.Common,Pattern,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Pattern.cs,IsMatch,The following statement contains a magic number: string globPattern = pattern.Substring(1' pattern.Length - 2);
Magic Number,Smuxi.Common,Pattern,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Pattern.cs,ContainsPatternCharacters,The following statement contains a magic number: return input.StartsWith("*") || input.EndsWith("*") ||                     (input.Length >= 2 &&                      input.StartsWith("/") && input.EndsWith("/"));
Magic Number,Smuxi.Common,Crc32,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Crc32.cs,HashCore,The following statement contains a magic number: crcValue = CrcTable[(crcValue ^ buffer[start++]) & 0xFF] ^ (crcValue >> 8);
Magic Number,Smuxi.Common,Crc32,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Crc32.cs,HashFinal,The following statement contains a magic number: this.HashValue = new byte[] { (byte)((crcValue >> 24) & 0xff)'                                             (byte)((crcValue >> 16) & 0xff)'                                             (byte)((crcValue >> 8) & 0xff)'                                             (byte)(crcValue & 0xff) };
Magic Number,Smuxi.Common,Crc32,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Crc32.cs,HashFinal,The following statement contains a magic number: this.HashValue = new byte[] { (byte)((crcValue >> 24) & 0xff)'                                             (byte)((crcValue >> 16) & 0xff)'                                             (byte)((crcValue >> 8) & 0xff)'                                             (byte)(crcValue & 0xff) };
Magic Number,Smuxi.Common,Crc32,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\Crc32.cs,HashFinal,The following statement contains a magic number: this.HashValue = new byte[] { (byte)((crcValue >> 24) & 0xff)'                                             (byte)((crcValue >> 16) & 0xff)'                                             (byte)((crcValue >> 8) & 0xff)'                                             (byte)(crcValue & 0xff) };
Magic Number,Smuxi.Common,IconCache,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\IconCache.cs,DownloadFileFromUrl,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,Smuxi.Common,IconCache,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\IconCache.cs,DownloadServerIcon,The following statement contains a magic number: var value = attrMatch.Groups[2].Value;
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,WriteOptionDescriptions,The following statement contains a magic number: string prefix = new string (' '' OptionWidth+2);
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 1;
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetLines,The following statement contains a magic number: length = 80 - OptionWidth - 2 - 1;
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetLines,The following statement contains a magic number: length = 80 - OptionWidth - 2 - 1;
Missing Default,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\meebey_smuxi\src\Common\NDesk.Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
