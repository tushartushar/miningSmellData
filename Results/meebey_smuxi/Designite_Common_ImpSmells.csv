Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Smuxi.Common,Pattern,C:\repos\meebey_smuxi\src\Common\Pattern.cs,IsMatch,Cyclomatic complexity of the method is 9
Complex Method,Smuxi.Common,IconCache,C:\repos\meebey_smuxi\src\Common\IconCache.cs,DownloadServerIcon,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Long Parameter List,Smuxi.Common,IconCache,C:\repos\meebey_smuxi\src\Common\IconCache.cs,BeginDownloadFile,The method has 5 parameters. Parameters: protocol' iconName' fileUrl' onSuccess' onError
Long Parameter List,Smuxi.Common,IconCache,C:\repos\meebey_smuxi\src\Common\IconCache.cs,EnqueueDownload,The method has 6 parameters. Parameters: protocol' iconName' url' action' onSuccess' onError
Long Parameter List,Smuxi.Common,IconCache,C:\repos\meebey_smuxi\src\Common\IconCache.cs,BeginDownloadIcon,The method has 5 parameters. Parameters: protocol' iconName' websiteUrl' onSuccess' onError
Long Parameter List,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Complex Conditional,NDesk.Options,Option,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Empty Catch Block,Smuxi.Common,SingleApplicationInstance<T>,C:\repos\meebey_smuxi\src\Common\SingleApplicationInstance.cs,Dispose,The method has an empty catch block.
Magic Number,Smuxi.Common,Trace,C:\repos\meebey_smuxi\src\Common\Trace.cs,_Parameterize,The following statement contains a magic number: res.Remove(res.Length - 2' 2);
Magic Number,Smuxi.Common,Trace,C:\repos\meebey_smuxi\src\Common\Trace.cs,_Parameterize,The following statement contains a magic number: res.Remove(res.Length - 2' 2);
Magic Number,Smuxi.Common,Trace,C:\repos\meebey_smuxi\src\Common\Trace.cs,_ParameterizeQuote,The following statement contains a magic number: if (obj is string) {                  line.Append("'").Append(obj).Append("'");              } else if (obj is ITraceable) {                  line.AppendFormat("<{0}>"' ((ITraceable) obj).ToTraceString());              } else if (obj is IList) {                  line.Append("[");                  foreach (object val in (IList) obj) {                      if (val is IList || val is IDictionary) {                          line.Append(_ParameterizeQuote(val));                          line.Append("' ");                          continue;                      }                      line.Append((val == null ? "(null)" : val.ToString()));                      line.Append("' ");                  }                  // remove last "' "                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("]");              } else if (obj is IDictionary) {                  line.Append("{");                  foreach (DictionaryEntry de in (IDictionary) obj) {                      if (de.Value is IList || de.Value is IDictionary) {                          line.Append(de.Key.ToString());                          line.Append("=");                          line.Append(_ParameterizeQuote(de.Value));                          line.Append("' ");                          continue;                      }                      line.Append(de.Key.ToString());                      line.Append("=");                      line.Append((de.Value == null ? "(null)" : de.Value.ToString()));                      line.Append("' ");                  }                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("}");              } else {                  line.Append(obj.ToString());              }
Magic Number,Smuxi.Common,Trace,C:\repos\meebey_smuxi\src\Common\Trace.cs,_ParameterizeQuote,The following statement contains a magic number: if (obj is string) {                  line.Append("'").Append(obj).Append("'");              } else if (obj is ITraceable) {                  line.AppendFormat("<{0}>"' ((ITraceable) obj).ToTraceString());              } else if (obj is IList) {                  line.Append("[");                  foreach (object val in (IList) obj) {                      if (val is IList || val is IDictionary) {                          line.Append(_ParameterizeQuote(val));                          line.Append("' ");                          continue;                      }                      line.Append((val == null ? "(null)" : val.ToString()));                      line.Append("' ");                  }                  // remove last "' "                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("]");              } else if (obj is IDictionary) {                  line.Append("{");                  foreach (DictionaryEntry de in (IDictionary) obj) {                      if (de.Value is IList || de.Value is IDictionary) {                          line.Append(de.Key.ToString());                          line.Append("=");                          line.Append(_ParameterizeQuote(de.Value));                          line.Append("' ");                          continue;                      }                      line.Append(de.Key.ToString());                      line.Append("=");                      line.Append((de.Value == null ? "(null)" : de.Value.ToString()));                      line.Append("' ");                  }                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("}");              } else {                  line.Append(obj.ToString());              }
Magic Number,Smuxi.Common,Trace,C:\repos\meebey_smuxi\src\Common\Trace.cs,_ParameterizeQuote,The following statement contains a magic number: if (obj is string) {                  line.Append("'").Append(obj).Append("'");              } else if (obj is ITraceable) {                  line.AppendFormat("<{0}>"' ((ITraceable) obj).ToTraceString());              } else if (obj is IList) {                  line.Append("[");                  foreach (object val in (IList) obj) {                      if (val is IList || val is IDictionary) {                          line.Append(_ParameterizeQuote(val));                          line.Append("' ");                          continue;                      }                      line.Append((val == null ? "(null)" : val.ToString()));                      line.Append("' ");                  }                  // remove last "' "                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("]");              } else if (obj is IDictionary) {                  line.Append("{");                  foreach (DictionaryEntry de in (IDictionary) obj) {                      if (de.Value is IList || de.Value is IDictionary) {                          line.Append(de.Key.ToString());                          line.Append("=");                          line.Append(_ParameterizeQuote(de.Value));                          line.Append("' ");                          continue;                      }                      line.Append(de.Key.ToString());                      line.Append("=");                      line.Append((de.Value == null ? "(null)" : de.Value.ToString()));                      line.Append("' ");                  }                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("}");              } else {                  line.Append(obj.ToString());              }
Magic Number,Smuxi.Common,Trace,C:\repos\meebey_smuxi\src\Common\Trace.cs,_ParameterizeQuote,The following statement contains a magic number: if (obj is string) {                  line.Append("'").Append(obj).Append("'");              } else if (obj is ITraceable) {                  line.AppendFormat("<{0}>"' ((ITraceable) obj).ToTraceString());              } else if (obj is IList) {                  line.Append("[");                  foreach (object val in (IList) obj) {                      if (val is IList || val is IDictionary) {                          line.Append(_ParameterizeQuote(val));                          line.Append("' ");                          continue;                      }                      line.Append((val == null ? "(null)" : val.ToString()));                      line.Append("' ");                  }                  // remove last "' "                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("]");              } else if (obj is IDictionary) {                  line.Append("{");                  foreach (DictionaryEntry de in (IDictionary) obj) {                      if (de.Value is IList || de.Value is IDictionary) {                          line.Append(de.Key.ToString());                          line.Append("=");                          line.Append(_ParameterizeQuote(de.Value));                          line.Append("' ");                          continue;                      }                      line.Append(de.Key.ToString());                      line.Append("=");                      line.Append((de.Value == null ? "(null)" : de.Value.ToString()));                      line.Append("' ");                  }                  if (line.Length > 1) {                      line.Remove(line.Length - 2' 2);                  }                  line.Append("}");              } else {                  line.Append(obj.ToString());              }
Magic Number,Smuxi.Common,SerializationWriter,C:\repos\meebey_smuxi\src\Common\FastSerializer.cs,GetWriter,The following statement contains a magic number: MemoryStream ms = new MemoryStream(1024);
Magic Number,Smuxi.Common,Pattern,C:\repos\meebey_smuxi\src\Common\Pattern.cs,IsMatch,The following statement contains a magic number: if (pattern.StartsWith("/") &&                  pattern.EndsWith("/")) {                  var regexPattern = pattern.Substring(1' pattern.Length - 2);                  return Regex.IsMatch(input' regexPattern);              }
Magic Number,Smuxi.Common,Pattern,C:\repos\meebey_smuxi\src\Common\Pattern.cs,IsMatch,The following statement contains a magic number: if (pattern.StartsWith("*") &&                  pattern.EndsWith("*")) {                  string globPattern = pattern.Substring(1' pattern.Length - 2);                  return input.Contains(globPattern);              }
Magic Number,Smuxi.Common,Pattern,C:\repos\meebey_smuxi\src\Common\Pattern.cs,ContainsPatternCharacters,The following statement contains a magic number: return input.StartsWith("*") || input.EndsWith("*") ||                     (input.Length >= 2 &&                      input.StartsWith("/") && input.EndsWith("/"));
Magic Number,Smuxi.Common,Crc32,C:\repos\meebey_smuxi\src\Common\Crc32.cs,HashCore,The following statement contains a magic number: unchecked {                  while (--length >= 0) {                      crcValue = CrcTable[(crcValue ^ buffer[start++]) & 0xFF] ^ (crcValue >> 8);                  }              }
Magic Number,Smuxi.Common,Crc32,C:\repos\meebey_smuxi\src\Common\Crc32.cs,HashFinal,The following statement contains a magic number: this.HashValue = new byte[] { (byte)((crcValue >> 24) & 0xff)'                                             (byte)((crcValue >> 16) & 0xff)'                                             (byte)((crcValue >> 8) & 0xff)'                                             (byte)(crcValue & 0xff) };
Magic Number,Smuxi.Common,Crc32,C:\repos\meebey_smuxi\src\Common\Crc32.cs,HashFinal,The following statement contains a magic number: this.HashValue = new byte[] { (byte)((crcValue >> 24) & 0xff)'                                             (byte)((crcValue >> 16) & 0xff)'                                             (byte)((crcValue >> 8) & 0xff)'                                             (byte)(crcValue & 0xff) };
Magic Number,Smuxi.Common,Crc32,C:\repos\meebey_smuxi\src\Common\Crc32.cs,HashFinal,The following statement contains a magic number: this.HashValue = new byte[] { (byte)((crcValue >> 24) & 0xff)'                                             (byte)((crcValue >> 16) & 0xff)'                                             (byte)((crcValue >> 8) & 0xff)'                                             (byte)(crcValue & 0xff) };
Magic Number,Smuxi.Common,IconCache,C:\repos\meebey_smuxi\src\Common\IconCache.cs,DownloadFileFromUrl,The following statement contains a magic number: using (var fileStream = file.OpenWrite())              using (var httpStream = response.GetResponseStream()) {                  byte[] buffer = new byte[4096];                  int read;                  while ((read = httpStream.Read(buffer' 0' buffer.Length)) > 0) {                      fileStream.Write(buffer' 0' read);                  }              }
Magic Number,Smuxi.Common,IconCache,C:\repos\meebey_smuxi\src\Common\IconCache.cs,DownloadServerIcon,The following statement contains a magic number: foreach (Match linkMatch in Regex.Matches(content' @"<link[\s]+([^>]*?)/?>")) {                  var attributes = new Dictionary<string' string>();                  foreach (Match attrMatch in Regex.Matches(linkMatch.Value' @"([\w]+)[\s]*=[\s]*[""']([^""']*)[""'][\s]*")) {                      var key = attrMatch.Groups[1].Value;                      var value = attrMatch.Groups[2].Value;                      attributes.Add(key' value);                  }                  links.Add(attributes);              }
Magic Number,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  				int written = 0;  				if (!WriteOptionPrototype (o' p' ref written))  					continue;    				if (written < OptionWidth)  					o.Write (new string (' '' OptionWidth - written));  				else {  					o.WriteLine ();  					o.Write (new string (' '' OptionWidth));  				}    				bool indent = false;  				string prefix = new string (' '' OptionWidth+2);  				foreach (string line in GetLines (localizer (GetDescription (p.Description)))) {  					if (indent)   						o.Write (prefix);  					o.WriteLine (line);  					indent = true;  				}  			}
Magic Number,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 1;
Magic Number,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetLines,The following statement contains a magic number: do {  				end = GetLineEnd (start' length' description);  				char c = description [end-1];  				if (char.IsWhiteSpace (c))  					--end;  				bool writeContinuation = end != description.Length && !IsEolChar (c);  				string line = description.Substring (start' end - start) +  						(writeContinuation ? "-" : "");  				yield return line;  				start = end;  				if (char.IsWhiteSpace (c))  					++start;  				length = 80 - OptionWidth - 2 - 1;  			} while (end < description.Length);
Magic Number,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,GetLines,The following statement contains a magic number: do {  				end = GetLineEnd (start' length' description);  				char c = description [end-1];  				if (char.IsWhiteSpace (c))  					--end;  				bool writeContinuation = end != description.Length && !IsEolChar (c);  				string line = description.Substring (start' end - start) +  						(writeContinuation ? "-" : "");  				yield return line;  				start = end;  				if (char.IsWhiteSpace (c))  					++start;  				length = 80 - OptionWidth - 2 - 1;  			} while (end < description.Length);
Missing Default,NDesk.Options,OptionSet,C:\repos\meebey_smuxi\src\Common\NDesk.Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
