Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Samurai.Client.Wp7.Api,ServerApi,C:\repos\Code52_Samurai\src\Samurai.Client.Wp7\Samurai.Client.Wp7\Samurai.Client.Wp7\Api\ServerApi.cs,Login,The length of the statement  "            Post("/Api/Players/Login"' "name=" + System.Uri.EscapeDataString(name) + "&token=" + System.Uri.EscapeDataString(key)' callback); " is 129.
Long Statement,Samurai.Client.Wp7.Api,ServerApi,C:\repos\Code52_Samurai\src\Samurai.Client.Wp7\Samurai.Client.Wp7\Samurai.Client.Wp7\Api\ServerApi.cs,Get,The length of the statement  "                        if (response.StatusCode != HttpStatusCode.OK) callback(default(T)' new Exception("Unexpected server response " + response.StatusCode)); " is 135.
Long Statement,Samurai.Client.Wp7.Api,ServerApi,C:\repos\Code52_Samurai\src\Samurai.Client.Wp7\Samurai.Client.Wp7\Samurai.Client.Wp7\Api\ServerApi.cs,Post,The length of the statement  "                                if (response.StatusCode != HttpStatusCode.OK) callback(default(T)' new Exception("Unexpected server response " + response.StatusCode)); " is 135.
Magic Number,Samurai.Client.Wp7,BackgroundJobs,C:\repos\Code52_Samurai\src\Samurai.Client.Wp7\Samurai.Client.Wp7\Samurai.Client.Wp7\BackgroundJobs.cs,PerformJobs,The following statement contains a magic number: while (running)              {                  if (_jobs.Count == 0)                  {                      Thread.Sleep(17);                  }                  else                  {                      var job = _jobs.Dequeue();                      job.Job();                      job.IsComplete = true;                  }                  lock (sync)                      running = _keepRunning;              }
