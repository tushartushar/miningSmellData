Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Simple.Data.OData.Tests,FindAllTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAllTest.cs,FindAllByNonExistingKeyIgnoreException,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IgnoreResourceNotFoundException = true }); " is 131.
Long Statement,Simple.Data.OData.Tests,FindOneTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindOneTest.cs,FindNonExistingByKeyIgnoreException,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IgnoreResourceNotFoundException = true }); " is 131.
Long Statement,Simple.Data.OData.Tests,GetTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\GetTest.cs,GetNonExistingIgnoreException,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IgnoreResourceNotFoundException = true }); " is 131.
Long Statement,Simple.Data.OData.Tests,InheritanceTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InheritanceTest.cs,FindAllShipsWithResourceTypes,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IncludeResourceTypeInEntryProperties = true }); " is 136.
Long Statement,Simple.Data.OData.Tests,InheritanceTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InheritanceTest.cs,InsertShipIncludeResourceType,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IncludeResourceTypeInEntryProperties = true }); " is 136.
Long Statement,Simple.Data.OData.Tests,InheritanceTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InheritanceTest.cs,UpdateShipByObjectIncludeResourceType,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IncludeResourceTypeInEntryProperties = true }); " is 136.
Long Statement,Simple.Data.OData.Tests,InheritanceTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InheritanceTest.cs,DeleteTransportByObjectIncludeResourceType,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IncludeResourceTypeInEntryProperties = true }); " is 136.
Long Statement,Simple.Data.OData.Tests,InheritanceTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InheritanceTest.cs,InsertUpdateDeleteTransportIncludeResourceType,The length of the statement  "            dynamic db = Database.Opener.Open(new ODataFeed { Url = _service.ServiceUri.AbsoluteUri' IncludeResourceTypeInEntryProperties = true }); " is 136.
Long Statement,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllEmployeesFromSuperior,The length of the statement  "            IEnumerable<dynamic> employees = _db.Employees.FindAll(_db.Employees.Superior.FirstName == "Andrew" && _db.Employees.Superior.LastName == "Fuller"); " is 148.
Long Statement,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllOrdersFromEmployee,The length of the statement  "            IEnumerable<dynamic> orders = _db.Orders.FindAll(_db.Orders.Employee.FirstName == "Andrew" && _db.Orders.Employee.LastName == "Fuller"); " is 136.
Magic Number,Simple.Data.OData.Tests,DeleteTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\DeleteTest.cs,DeleteByNonKeyField,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test1"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,DeleteTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\DeleteTest.cs,DeleteByKeyField,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test1"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,DeleteTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\DeleteTest.cs,DeleteByObject,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test2"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,FindAllTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAllTest.cs,FindAllByNameWithSpecificLength,The following statement contains a magic number: IEnumerable<dynamic> products = _db.Products.FindAll(_db.Products.ProductName.Length() == 4);
Magic Number,Simple.Data.OData.Tests,FindOneTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindOneTest.cs,FindWhereNameWithSpecificLength,The following statement contains a magic number: var product = _db.Products.Find(_db.Products.ProductName.Length() == 4);
Magic Number,Simple.Data.OData.Tests,FindOneTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindOneTest.cs,FindWhereNameIndexOf,The following statement contains a magic number: var product = _db.Products.Find(_db.Products.ProductName.IndexOf("ai") == 2);
Magic Number,Simple.Data.OData.Tests,FindExtraClausesTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindExtraClausesTest.cs,AllSkip,The following statement contains a magic number: Assert.Equal(76' products.Count());
Magic Number,Simple.Data.OData.Tests,FindExtraClausesTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindExtraClausesTest.cs,AllSkipTake,The following statement contains a magic number: IEnumerable<dynamic> products = _db.Products.All()                  .Skip(2)                  .Take(1);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,ReturnIntCollectionMultipeElements,The following statement contains a magic number: var result = _db.ReturnIntCollection(count: 3);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,ReturnIntCollectionMultipeElements,The following statement contains a magic number: Assert.Equal(2' result.ToScalarArray()[1]);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,ReturnIntCollectionMultipeElements,The following statement contains a magic number: Assert.Equal(3' result.ToScalarArray()[2]);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,ReturnIntCollectionMultipeElements,The following statement contains a magic number: Assert.Equal(3' result.ToScalarArray()[2]);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,PassThroughDateTime,The following statement contains a magic number: var dateTime = new DateTime(2013' 1' 1' 12' 13' 14);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,PassThroughDateTime,The following statement contains a magic number: var dateTime = new DateTime(2013' 1' 1' 12' 13' 14);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,PassThroughDateTime,The following statement contains a magic number: var dateTime = new DateTime(2013' 1' 1' 12' 13' 14);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,PassThroughDateTime,The following statement contains a magic number: var dateTime = new DateTime(2013' 1' 1' 12' 13' 14);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,ReturnAddressCollectionMultipleElements,The following statement contains a magic number: var result = _db.ReturnAddressCollection(count: 3);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,ReturnAddressCollectionMultipleElements,The following statement contains a magic number: Assert.Equal("Oslo"' result.ToScalarArray()[2]["City"]);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,GetProductsByRatingWithNonEmptyResultSet,The following statement contains a magic number: IEnumerable<dynamic> products  = db.GetProductsByRating(rating: 3);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,GetProductsByRatingWithNonEmptyResultSet,The following statement contains a magic number: Assert.Equal(3' product.Rating);
Magic Number,Simple.Data.OData.Tests,FunctionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FunctionTest.cs,GetProductsByRatingWithEmptyResultSet,The following statement contains a magic number: IEnumerable<dynamic> products = db.GetProductsByRating(rating: 999);
Magic Number,Simple.Data.OData.Tests,GetTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\GetTest.cs,GetByCompoundKey,The following statement contains a magic number: var orderDetails = _db.OrderDetails.Get(10248' 11);
Magic Number,Simple.Data.OData.Tests,GetTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\GetTest.cs,GetByCompoundKey,The following statement contains a magic number: var orderDetails = _db.OrderDetails.Get(10248' 11);
Magic Number,Simple.Data.OData.Tests,GetTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\GetTest.cs,GetByCompoundKey,The following statement contains a magic number: Assert.Equal(10248' orderDetails.OrderID);
Magic Number,Simple.Data.OData.Tests,InsertTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InsertTest.cs,Insert,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test1"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,InsertTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InsertTest.cs,InsertAutogeneratedID,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test2"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,InsertTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InsertTest.cs,InsertObject,The following statement contains a magic number: properties["UnitPrice"] = 18m;
Magic Number,Simple.Data.OData.Tests,InsertTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InsertTest.cs,InsertProductWithCategoryByID,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test4"' UnitPrice: 18m' CategoryID: category.CategoryID);
Magic Number,Simple.Data.OData.Tests,InsertTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InsertTest.cs,InsertProductWithCategoryByAssociation,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test6"' UnitPrice: 18m' Category: category);
Magic Number,Simple.Data.OData.Tests,InsertTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\InsertTest.cs,InsertProductObjectWithCategoryByAssociation,The following statement contains a magic number: var productRecord = new { ProductName = "Test8"' UnitPrice = 18m' Category = category};
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllEmployeesFromSuperior,The following statement contains a magic number: Assert.Equal(2' employee.ReportsTo);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllOrdersFromEmployee,The following statement contains a magic number: Assert.Equal(2' order.EmployeeID);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllOrderOrderDetails,The following statement contains a magic number: IEnumerable<dynamic> orderDetails = _db.Orders.OrderDetails.FindAll(_db.Orders.OrderID == 10952);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllOrderOrderDetails,The following statement contains a magic number: Assert.Equal(10952' details.OrderID);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllEmployeeSubordinates,The following statement contains a magic number: IEnumerable<dynamic> subordinates = _db.Employees.Subordinates.FindAll(_db.Employees.EmployeeID == 2);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllEmployeeSubordinates,The following statement contains a magic number: Assert.Equal(2' subordinate.ReportsTo);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,GetEmployeeSuperior,The following statement contains a magic number: Assert.Equal(2' superior.EmployeeID);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindEmployeeSuperior,The following statement contains a magic number: Assert.Equal(2' superior.EmployeeID);
Magic Number,Simple.Data.OData.Tests,FindAssociationTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\FindAssociationTest.cs,FindAllEmployeeSuperiors,The following statement contains a magic number: Assert.Equal(2' superiors.First().EmployeeID);
Magic Number,Simple.Data.OData.Tests,TestBase,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TestBase.cs,Dispose,The following statement contains a magic number: IEnumerable<dynamic> transport = _db.Transport.FindAll(_db.Transports.TransportID > 2);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertOneTransCommit,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test1"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertOneTransRollback,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test2"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertTwoTransCommit,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test3"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertTwoTransCommit,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test4"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertTwoTransCommit,The following statement contains a magic number: Assert.Equal(21m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertTwoTransCommit,The following statement contains a magic number: Assert.Equal(22m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertTwoTransRollback,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test5"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertTwoTransRollback,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test6"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateSameEntitySingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test7"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateSameEntitySingleTrans,The following statement contains a magic number: tx.Products.UpdateByProductName(ProductName: "Test7"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateSameEntitySingleTrans,The following statement contains a magic number: Assert.Equal(21m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test8"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test9"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.UpdateByProductName(ProductName: "Test8"' UnitPrice: 23m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDiffEntitiesSingleTrans,The following statement contains a magic number: Assert.Equal(23m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSameEntitySingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test10"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSameEntitySingleTrans,The following statement contains a magic number: tx.Products.UpdateByProductName(ProductName: "Test10"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSameEntitySingleTrans,The following statement contains a magic number: Assert.Equal(21m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test11"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test12"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test13"' UnitPrice: 23m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteDiffEntitiesSingleTrans,The following statement contains a magic number: tx.Products.UpdateByProductName(ProductName: "Test11"' UnitPrice: 24m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteDiffEntitiesSingleTrans,The following statement contains a magic number: Assert.Equal(24m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteDiffEntitiesSingleTrans,The following statement contains a magic number: Assert.Equal(23m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSeparateTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test14"' UnitPrice: 21m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSeparateTrans,The following statement contains a magic number: Assert.Equal(21m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSeparateTrans,The following statement contains a magic number: tx.Products.UpdateByProductName(ProductName: "Test14"' UnitPrice: 22m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertUpdateDeleteSeparateTrans,The following statement contains a magic number: Assert.Equal(22m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertSingleEntityWithSingleAssociationSingleTrans,The following statement contains a magic number: tx.Products.Insert(ProductName: "Test16"' UnitPrice: 18m' Category: category);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertSingleEntityWithMultipleAssociationsSingleTrans,The following statement contains a magic number: var product1 = tx.Products.Insert(ProductName: "Test17"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertSingleEntityWithMultipleAssociationsSingleTrans,The following statement contains a magic number: var product2 = tx.Products.Insert(ProductName: "Test18"' UnitPrice: 19m);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,InsertSingleEntityWithMultipleAssociationsSingleTrans,The following statement contains a magic number: Assert.Equal(2' category.Products.Count);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,UpdateAssociationsSingleTrans,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test21"' UnitPrice: 18m' CategoryID: 1);
Magic Number,Simple.Data.OData.Tests,TransactionTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\TransactionTest.cs,RemoveAssociationsSingleTrans,The following statement contains a magic number: product = tx.Products.Insert(ProductName: "Test23"' UnitPrice: 18m' CategoryID: 1);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateSingleField,The following statement contains a magic number: _db.Products.UpdateByProductName(ProductName: "Chai"' UnitPrice: 123m);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateSingleField,The following statement contains a magic number: Assert.Equal(123m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateObject,The following statement contains a magic number: product.UnitPrice = 123m;
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateObject,The following statement contains a magic number: Assert.Equal(123m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,AddSingleAssociation,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test2"' UnitPrice: 18m);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateSingleAssociation,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test2"' UnitPrice: 18m' CategoryID : 1);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,RemoveSingleAssociation,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test7"' UnitPrice: 18m' Category: category);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateFieldsAndAddAssociation,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test2"' UnitPrice: 18m' CategoryID: 1);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateFieldsAndAddAssociation,The following statement contains a magic number: _db.Products.UpdateByProductName(ProductName: "Test2"' UnitPrice: 19m' Category: category);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateFieldsAndAddAssociation,The following statement contains a magic number: Assert.Equal(19m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateFieldsAndRemoveAssociation,The following statement contains a magic number: var product = _db.Products.Insert(ProductName: "Test2"' UnitPrice: 18m' CategoryID: 1);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateFieldsAndRemoveAssociation,The following statement contains a magic number: _db.Products.UpdateByProductName(ProductName: "Test2"' UnitPrice: 19m' Category: null);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateFieldsAndRemoveAssociation,The following statement contains a magic number: Assert.Equal(19m' product.UnitPrice);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateMultipleAssociations,The following statement contains a magic number: var product1 = _db.Products.Insert(ProductName: "Test4"' UnitPrice: 21m' CategoryID: 1);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateMultipleAssociations,The following statement contains a magic number: var product2 = _db.Products.Insert(ProductName: "Test5"' UnitPrice: 22m' CategoryID: 1);
Magic Number,Simple.Data.OData.Tests,UpdateTest,D:\research\architectureSmells\repos1\simplefx_Simple.OData\Simple.Data.OData.Tests\UpdateTest.cs,UpdateMultipleAssociations,The following statement contains a magic number: Assert.Equal(2' category.Products.Count);
