Implementation smell,Namespace,Class,File,Method,Description
Long Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,The method has 680 lines of code.
Long Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,DumpParameterValueTables,The method has 133 lines of code.
Long Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The method has 134 lines of code.
Long Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The method has 154 lines of code.
Complex Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,Cyclomatic complexity of the method is 14
Complex Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,DumpParameterValueTables,Cyclomatic complexity of the method is 13
Complex Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,Cyclomatic complexity of the method is 10
Complex Method,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,Cyclomatic complexity of the method is 8
Long Parameter List,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,OutputTemplateLine,The method has 8 parameters. Parameters: tw' isPrevEnum' prevName' prevNameFormatted' numberOfBytes' prevFirstIndex' prevLastIndex' prevPrevLastIndex
Long Parameter List,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,DumpParameterValueTables,The method has 5 parameters. Parameters: xmlInputFilePath' xmlOutputFilePath' doOutputCSV' csvFolderPath' textWriter
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,The length of the statement  "							OutputTemplateLine(tw' isPrevEnum' prevName' prevNameFormatted' numberOfBytes' prevFirstIndex' ref prevLastIndex' prevPrevLastIndex);" is 133.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,The length of the statement  "			OutputTemplateLine(tw' isPrevEnum' prevName' prevNameFormatted' numberOfBytes' prevFirstIndex' ref prevLastIndex' prevPrevLastIndex);" is 133.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,OutputTemplateLine,The length of the statement  "			string indexAndValueRange = String.Format("// index {0}:{1} = {2} bytes ({3})"' prevFirstIndex' prevLastIndex' numberOfBytes' prevName);" is 136.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,FindClosest,The length of the statement  "			Console.Out.WriteLine("Searching '{0}' for value {1}. Found {2} with text '{3}'. Value = {4}"' name' searchFor' foundClosest' foundClosestDisplayText' foundParameterValue);" is 172.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The length of the statement  "				//AccountExpirationDate = string.IsNullOrEmpty((string)settings.Element("AccountExpirationDate")) ? (DateTime?)null : DateTime.Parse(settings.Element("AccountExpirationDate").Value)" is 181.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The length of the statement  "					if ((dataType.Equals("ushort") || dataType.Equals("byte") || dataType.Equals("unknown")) && nextElement.FirstIndex == firstIndex + 4) {" is 135.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The length of the statement  "					if ((dataType.Equals("ushort") || dataType.Equals("byte") || dataType.Equals("unknown")) && nextElement.FirstIndex == firstIndex + 4) {" is 135.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The length of the statement  "				// sb.Append(String.Format("Input: \t{0:0.00}"' Input).PadRight(20)).AppendFormat(" = {0} \t({1})\n"' FindClosestDisplayText("Input"' Input)' "-20.0 dB -> 20.0 dB");" is 165.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The length of the statement  "				//toStringMethod.AppendLine(string.Format("\tsb.Append(String.Format(\"{0}: {{0:0.00}}\"' {1}).PadRight(20)).AppendFormat(\"= {{0}} ({{1}})\\n\"' FindClosestDisplayText(\"{0}\"' {1})' \"{2}\");"' name' variableName' valueRange));" is 229.
Long Statement,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The length of the statement  "				toStringMethod.AppendLine(string.Format("\tsb.Append(\"{0}:\".PadRight(15)).AppendFormat(String.Format(\"{{0:0.00}}\"' {1}).PadRight(5)).AppendFormat(\"= {{0}} ({{1}})\\n\"' FindClosestDisplayText(\"{0}\"' {1})' \"{2}\");"' name' variableName' valueRange));" is 257.
Complex Conditional,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The conditional expression  "(dataType.Equals("ushort") || dataType.Equals("byte") || dataType.Equals("unknown")) && nextElement.FirstIndex == firstIndex + 4"  is complex.
Complex Conditional,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The conditional expression  "(dataType.Equals("ushort") || dataType.Equals("byte") || dataType.Equals("unknown")) && nextElement.FirstIndex == firstIndex + 4"  is complex.
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,The following statement contains a magic number: string bytes = indexMatch.Groups[2].Value;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,The following statement contains a magic number: string field = indexMatch.Groups[3].Value;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSectionsILHarmor,The following statement contains a magic number: sb.Append(String.Format("\t{0}_{1}"' enumEntry.Key.Key' enumValueEntry.Key).PadRight(20));
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,OutputTemplateLine,The following statement contains a magic number: datatypeAndName = String.Format("\t{0} {1};"' enumName' prevNameFormatted).PadRight(55);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,OutputTemplateLine,The following statement contains a magic number: numberOfBytes < 4
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,OutputTemplateLine,The following statement contains a magic number: string seekEntry = String.Format("\tFSeek( {0} );"' prevFirstIndex + FXP_OFFSET).PadRight(55);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,DumpParameterValueTables,The following statement contains a magic number: res == 2
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The following statement contains a magic number: lastIndex = firstIndex + 3;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The following statement contains a magic number: numberOfBytes = 4;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The following statement contains a magic number: (dataType.Equals("ushort") || dataType.Equals("byte") || dataType.Equals("unknown")) && nextElement.FirstIndex == firstIndex + 4
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileReturnEnumSections,The following statement contains a magic number: string datatypeAndName = String.Format("\t{0} {1};"' dataType' CleanInput(name)).PadRight(35);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The following statement contains a magic number: lastIndex = firstIndex + 3;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The following statement contains a magic number: numberOfBytes = 4;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The following statement contains a magic number: (dataType.Equals("ushort") || dataType.Equals("byte") || dataType.Equals("unknown")) && nextElement.FirstIndex == firstIndex + 4
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ImportXMLFileDumpReadWriteMethods,The following statement contains a magic number: string datatypeAndName = String.Format("public {0} {1};"' dataType' variableName).PadRight(25);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,getEnumSectionXMLFormat,The following statement contains a magic number: sb.Append(String.Format("\t{0}"' key).PadRight(20));
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ExtractSortableString,The following statement contains a magic number: string match3 = m1.Groups[2].Value;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ExtractSortableString,The following statement contains a magic number: result = rootNumber * 1e3;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ExtractDouble,The following statement contains a magic number: string match3 = m1.Groups[2].Value;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ExtractDouble,The following statement contains a magic number: result = rootNumber * 1e3;
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,GetDouble,The following statement contains a magic number: result == 3.911555E-07
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					dataType = "byte"; 					break; 				case 2: 					dataType = "int16"; 					break; 				case 4: 					dataType = "int32"; 					break; 				case 8: 					dataType = "int64"; 					break; 				default: 					//dataType = numberOfBytes + "bytes"; 					dataType = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					dataType = "byte"; 					break; 				case 2: 					dataType = "int16"; 					break; 				case 4: 					dataType = "int32"; 					break; 				case 8: 					dataType = "int64"; 					break; 				default: 					//dataType = numberOfBytes + "bytes"; 					dataType = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					dataType = "byte"; 					break; 				case 2: 					dataType = "int16"; 					break; 				case 4: 					dataType = "int32"; 					break; 				case 8: 					dataType = "int64"; 					break; 				default: 					//dataType = numberOfBytes + "bytes"; 					dataType = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,NumberOfBytesToDataType,The following statement contains a magic number: switch (numberOfBytes) { 				case 1: 					datatype = "byte"; 					break; 				case 2: 					datatype = "ushort"; 					break; 				case 4: 					if (use4BytesAsInt) { 						datatype = "int"; 					} else { 						datatype = "float"; 					} 					break; 				case 5: 				case 6: 				case 7: 				case 8: 					if (update) numberOfBytes = 8; 					datatype = "uint64"; 					break; 					//case 16: 					//	numberOfBytes = 16; 					//	datatype = "16bytes"; 					//	break; 				default: 					if (update) numberOfBytes = 4; 					datatype = "uint32"; 					break; 			}
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ByteArrayToString,The following statement contains a magic number: var hex = new StringBuilder(ba.Length * 2);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,ByteArrayToString,The following statement contains a magic number: i < numberOfBytes && i < ba.Length && i < 8
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,StringToByteArray,The following statement contains a magic number: var bytes = new byte[NumberChars / 2];
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,StringToByteArray,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hex.Substring(i' 2)' 16);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,StringToByteArray,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hex.Substring(i' 2)' 16);
Magic Number,InvestigatePresetFileDump,Program,C:\research\architectureSmells\repos\perivar_AudioVSTToolbox\InvestigatePresetFileDump\Program.cs,StringToByteArray,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hex.Substring(i' 2)' 16);
