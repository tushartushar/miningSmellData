Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,Navigate,Cyclomatic complexity of the method is 9
Long Parameter List,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,MainViewModel,The method has 5 parameters.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,GetVersionInfo,The length of the statement  "	var version = Assembly.GetExecutingAssembly ().GetCustomAttributes (typeof(AssemblyFileVersionAttribute)' false) [0] as AssemblyFileVersionAttribute; " is 149.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,GetVersionInfo,The length of the statement  "	var informationalVersion = Assembly.GetExecutingAssembly ().GetCustomAttributes (typeof(AssemblyInformationalVersionAttribute)' false) [0] as AssemblyInformationalVersionAttribute; " is 180.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ShowStartPage,The length of the statement  "		recentlyUsed = string.Join ("\n"' this.persistentState.RecentlyUsedDocuments.Select (file => "[" + Path.GetFileName (file) + "](" + (new Uri (file)).AbsoluteUri + ")  ").ToArray ()); " is 182.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ShowStartPage,The length of the statement  "	MarkdownText = Resources.startpageTemplate.Replace ("%recentlyused%"' recentlyUsed).Replace ("%versioninfo%"' GetVersionInfo ()); " is 129.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleSurroundingToken,The length of the statement  "		this.MarkdownText = this.MarkdownText.ReplaceSubstring (selection.StartIndex - token.Length' selection.Value.Length + 2 * token.Length' selection.Value); " is 153.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleSurroundingToken,The length of the statement  "		this.MarkdownText = this.MarkdownText.ReplaceSubstring (selection.StartIndex' selection.Value.Length' token + selected + token); " is 128.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,Navigate,The length of the statement  "			this.prompt.ShowError (String.Format ("Cannot navigate to URI \"{0}\". " + "A relative URI cannot be resolved until the document is saved."' uri.ToString ())' "Navigation Error"); " is 179.
Long Statement,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,HandleHtmlChanged,The length of the statement  "	this.fileSystem.WriteTextFile (absoluteFilePath: this.TemporaryHtmlFile' content: RewriteRelativeLinks (this.markdownTransformer.Html)); " is 136.
Long Statement,DownMarker.Core,StringChange,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\StringChange.cs,GetStringChange,The length of the statement  "	return new StringChange (offset' s1.Substring (offset' s1.Length - offset - rightSideMatches)' s2.Substring (offset' s2.Length - offset - rightSideMatches)); " is 157.
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleBlockPrefix,The following statement contains a magic number: if (lines.All (x => x.StartsWith (prefix))) {  	// already quoted' so unquote  	replacement = string.Join ("\n"' lines.Select (x => StripPrefix (x' prefix)).ToArray ());  	newSelectionLength = replacement.Length;  }  else {  	replacement = string.Join ("\n"' lines.Select (x => prefix + x).ToArray ());  	newSelectionLength = replacement.Length;  	// make sure the result is a block surrounded by empty lines  	if (!IsLeftBlockBoundary (selection.StartIndex - 1)) {  		if (IsPrecededBy (selection' "\n")) {  			replacement = "\n" + replacement;  			newSelectionStart++;  		}  		else {  			replacement = "\n\n" + replacement;  			newSelectionStart += 2;  		}  	}  	if (!IsRightBlockBoundary (selection.StartIndex + selection.Value.Length)) {  		if (IsFollowedBy (selection' "\n"))  			replacement = replacement + "\n";  		else  			replacement = replacement + "\n\n";  	}  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleBlockPrefix,The following statement contains a magic number: if (!IsLeftBlockBoundary (selection.StartIndex - 1)) {  	if (IsPrecededBy (selection' "\n")) {  		replacement = "\n" + replacement;  		newSelectionStart++;  	}  	else {  		replacement = "\n\n" + replacement;  		newSelectionStart += 2;  	}  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleBlockPrefix,The following statement contains a magic number: if (IsPrecededBy (selection' "\n")) {  	replacement = "\n" + replacement;  	newSelectionStart++;  }  else {  	replacement = "\n\n" + replacement;  	newSelectionStart += 2;  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleBlockPrefix,The following statement contains a magic number: newSelectionStart += 2;  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,GetLinkAt,The following statement contains a magic number: foreach (Match match in linkPattern.Matches (this.MarkdownText)) {  	if ((match.Index <= position) && (position <= match.Index + match.Length)) {  		linkText = new Substring () {  			StartIndex = match.Index'  			Value = match.Value  		};  		return new Link () {  			Text = match.Groups [1].Value'  			Target = match.Groups [2].Value  		};  	}  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,GetLinkAt,The following statement contains a magic number: if ((match.Index <= position) && (position <= match.Index + match.Length)) {  	linkText = new Substring () {  		StartIndex = match.Index'  		Value = match.Value  	};  	return new Link () {  		Text = match.Groups [1].Value'  		Target = match.Groups [2].Value  	};  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,GetLinkAt,The following statement contains a magic number: return new Link () {  	Text = match.Groups [1].Value'  	Target = match.Groups [2].Value  };  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleSurroundingToken,The following statement contains a magic number: if (IsSurroundedWith (selection' token)) {  	this.MarkdownText = this.MarkdownText.ReplaceSubstring (selection.StartIndex - token.Length' selection.Value.Length + 2 * token.Length' selection.Value);  	// select the unbolded text  	this.SelectionStart = selection.StartIndex - token.Length;  	this.SelectionLength = selection.Value.Length;  }  else {  	string selected = selection.Value;  	if (selected == "") {  		selected = placeholder;  	}  	this.MarkdownText = this.MarkdownText.ReplaceSubstring (selection.StartIndex' selection.Value.Length' token + selected + token);  	// select the bolded text  	this.SelectionStart = selection.StartIndex + token.Length;  	this.SelectionLength = selected.Length;  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,ToggleSurroundingToken,The following statement contains a magic number: this.MarkdownText = this.MarkdownText.ReplaceSubstring (selection.StartIndex - token.Length' selection.Value.Length + 2 * token.Length' selection.Value);  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,New,The following statement contains a magic number: if (PromptSave ()) {  	this.EditorVisible = true;  	this.MarkdownText = "# Title";  	this.SelectionStart = 2;  	this.SelectionLength = 5;  	this.editorHistory.Clear ();  	UpdateDoCommands ();  	this.currentFullPath = null;  	this.UnsavedChanges = false;  	AddNavigationHistory ();  	UpdateTitle ();  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,New,The following statement contains a magic number: if (PromptSave ()) {  	this.EditorVisible = true;  	this.MarkdownText = "# Title";  	this.SelectionStart = 2;  	this.SelectionLength = 5;  	this.editorHistory.Clear ();  	UpdateDoCommands ();  	this.currentFullPath = null;  	this.UnsavedChanges = false;  	AddNavigationHistory ();  	UpdateTitle ();  }  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,New,The following statement contains a magic number: this.SelectionStart = 2;  
Magic Number,DownMarker.Core,MainViewModel,C:\repos\PaulDMendoza_DownmarkerElite\downmarker.core\MainViewModel.cs,New,The following statement contains a magic number: this.SelectionLength = 5;  
