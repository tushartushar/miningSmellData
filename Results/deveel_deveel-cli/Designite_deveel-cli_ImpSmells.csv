Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,Cyclomatic complexity of the method is 10
Complex Method,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,RenderOptions,Cyclomatic complexity of the method is 11
Complex Method,Deveel.Configuration,Parser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Parser.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,Deveel.Configuration,Parser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Parser.cs,ProcessProperties,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Configuration,Parser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Parser.cs,ProcessOption,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Configuration,PatternOptionBuilder,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PatternOptionBuilder.cs,getValueClass,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Configuration,PosixParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PosixParser.cs,Flatten,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Configuration,ReflectedOptions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\ReflectedOptions.cs,CreateFromType,Cyclomatic complexity of the method is 8
Long Parameter List,Deveel.Configuration,CommandLineParserExtensions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\CommandLineParserExtensions.cs,ParseObject,The method has 5 parameters.
Long Parameter List,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,PrintOptions,The method has 6 parameters.
Long Parameter List,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,RenderOptions,The method has 6 parameters.
Long Parameter List,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,RenderWrappedText,The method has 5 parameters.
Long Parameter List,Deveel.Configuration,OptionsExtensions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\OptionsExtensions.cs,AddOption,The method has 5 parameters.
Long Statement,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,findWrapPos,The length of the statement  "	if (((pos = text.IndexOf ('\n'' startPos)) != -1 && pos <= width) || ((pos = text.IndexOf ('\t'' startPos)) != -1 && pos <= width)) { " is 133.
Long Statement,Deveel.Configuration,Parser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Parser.cs,ProcessProperties,The length of the statement  "			else if (String.Compare (value' "yes"' StringComparison.OrdinalIgnoreCase) != 0 && String.Compare (value' "true"' StringComparison.OrdinalIgnoreCase) != 0 && String.Compare (value' "1"' StringComparison.OrdinalIgnoreCase) != 0) { " is 229.
Long Statement,Deveel.Configuration,PatternOptionBuilder,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PatternOptionBuilder.cs,IsValueCode,The length of the statement  "	return ch == '@' || ch == ':' || ch == '%' || ch == '+' || ch == '#' || ch == '<' || ch == '>' || ch == '*' || ch == '/' || ch == '!'; " is 134.
Long Statement,Deveel.Configuration,ReflectedOptions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\ReflectedOptions.cs,CreateFromType,The length of the statement  "	MemberInfo[] members = type.FindMembers (MemberTypes.Field | MemberTypes.Property' BindingFlags.Public | BindingFlags.Instance' FilterMember' null); " is 148.
Long Statement,Deveel.Configuration,ReflectedOptions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\ReflectedOptions.cs,SetToObject,The length of the statement  "	MemberInfo[] members = type.FindMembers (MemberTypes.Field | MemberTypes.Property' BindingFlags.Public | BindingFlags.Instance' FilterMember' null); " is 148.
Complex Conditional,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,findWrapPos,The conditional expression  "((pos = text.IndexOf ('\n'' startPos)) != -1 && pos <= width) || ((pos = text.IndexOf ('\t'' startPos)) != -1 && pos <= width)"  is complex.
Empty Catch Block,Deveel.Configuration,Parser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Parser.cs,ProcessProperties,The method has an empty catch block.
Magic Number,Deveel.Configuration,CommandLineExtensions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\CommandLineExtensions.cs,GetOptionProperties,The following statement contains a magic number: foreach (IOption option in commandLine.Options) {  	if (opt.Equals (option.Name) || opt.Equals (option.LongName)) {  		var value = commandLine.GetOptionValue (opt);  		IList<string> values = value.Values.ToList ();  		if (values.Count >= 2) {  			// use the first 2 arguments as the key/value pair  			props [values [0]] = values [1];  		}  		else if (values.Count == 1) {  			// no explicit value' handle it as a bool  			props [values [0]] = "true";  		}  	}  }  
Magic Number,Deveel.Configuration,CommandLineExtensions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\CommandLineExtensions.cs,GetOptionProperties,The following statement contains a magic number: if (opt.Equals (option.Name) || opt.Equals (option.LongName)) {  	var value = commandLine.GetOptionValue (opt);  	IList<string> values = value.Values.ToList ();  	if (values.Count >= 2) {  		// use the first 2 arguments as the key/value pair  		props [values [0]] = values [1];  	}  	else if (values.Count == 1) {  		// no explicit value' handle it as a bool  		props [values [0]] = "true";  	}  }  
Magic Number,Deveel.Configuration,CommandLineExtensions,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\CommandLineExtensions.cs,GetOptionProperties,The following statement contains a magic number: if (values.Count >= 2) {  	// use the first 2 arguments as the key/value pair  	props [values [0]] = values [1];  }  else if (values.Count == 1) {  	// no explicit value' handle it as a bool  	props [values [0]] = "true";  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: for (int i = 0; i < arguments.Length; i++) {  	String arg = arguments [i];  	if ("--".Equals (arg)) {  		eatTheRest = true;  		tokens.Add ("--");  	}  	else if ("-".Equals (arg)) {  		tokens.Add ("-");  	}  	else if (arg.StartsWith ("-")) {  		String opt = Util.StripLeadingHyphens (arg);  		if (options.HasOption (opt)) {  			tokens.Add (arg);  		}  		else {  			if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  				// the format is --foo=value or -foo=value  				tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  				// --foo  				tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  				// value  			}  			else if (options.HasOption (arg.Substring (0' 2))) {  				// the format is a special properties option (-Dproperty=value)  				tokens.Add (arg.Substring (0' 2));  				// -D  				tokens.Add (arg.Substring (2));  				// property=value  			}  			else {  				eatTheRest = stopAtNonOption;  				tokens.Add (arg);  			}  		}  	}  	else {  		tokens.Add (arg);  	}  	if (eatTheRest) {  		for (i++; i < arguments.Length; i++) {  			tokens.Add (arguments [i]);  		}  	}  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: for (int i = 0; i < arguments.Length; i++) {  	String arg = arguments [i];  	if ("--".Equals (arg)) {  		eatTheRest = true;  		tokens.Add ("--");  	}  	else if ("-".Equals (arg)) {  		tokens.Add ("-");  	}  	else if (arg.StartsWith ("-")) {  		String opt = Util.StripLeadingHyphens (arg);  		if (options.HasOption (opt)) {  			tokens.Add (arg);  		}  		else {  			if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  				// the format is --foo=value or -foo=value  				tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  				// --foo  				tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  				// value  			}  			else if (options.HasOption (arg.Substring (0' 2))) {  				// the format is a special properties option (-Dproperty=value)  				tokens.Add (arg.Substring (0' 2));  				// -D  				tokens.Add (arg.Substring (2));  				// property=value  			}  			else {  				eatTheRest = stopAtNonOption;  				tokens.Add (arg);  			}  		}  	}  	else {  		tokens.Add (arg);  	}  	if (eatTheRest) {  		for (i++; i < arguments.Length; i++) {  			tokens.Add (arguments [i]);  		}  	}  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: for (int i = 0; i < arguments.Length; i++) {  	String arg = arguments [i];  	if ("--".Equals (arg)) {  		eatTheRest = true;  		tokens.Add ("--");  	}  	else if ("-".Equals (arg)) {  		tokens.Add ("-");  	}  	else if (arg.StartsWith ("-")) {  		String opt = Util.StripLeadingHyphens (arg);  		if (options.HasOption (opt)) {  			tokens.Add (arg);  		}  		else {  			if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  				// the format is --foo=value or -foo=value  				tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  				// --foo  				tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  				// value  			}  			else if (options.HasOption (arg.Substring (0' 2))) {  				// the format is a special properties option (-Dproperty=value)  				tokens.Add (arg.Substring (0' 2));  				// -D  				tokens.Add (arg.Substring (2));  				// property=value  			}  			else {  				eatTheRest = stopAtNonOption;  				tokens.Add (arg);  			}  		}  	}  	else {  		tokens.Add (arg);  	}  	if (eatTheRest) {  		for (i++; i < arguments.Length; i++) {  			tokens.Add (arguments [i]);  		}  	}  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if ("--".Equals (arg)) {  	eatTheRest = true;  	tokens.Add ("--");  }  else if ("-".Equals (arg)) {  	tokens.Add ("-");  }  else if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if ("--".Equals (arg)) {  	eatTheRest = true;  	tokens.Add ("--");  }  else if ("-".Equals (arg)) {  	tokens.Add ("-");  }  else if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if ("--".Equals (arg)) {  	eatTheRest = true;  	tokens.Add ("--");  }  else if ("-".Equals (arg)) {  	tokens.Add ("-");  }  else if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if ("-".Equals (arg)) {  	tokens.Add ("-");  }  else if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if ("-".Equals (arg)) {  	tokens.Add ("-");  }  else if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if ("-".Equals (arg)) {  	tokens.Add ("-");  }  else if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (arg.StartsWith ("-")) {  	String opt = Util.StripLeadingHyphens (arg);  	if (options.HasOption (opt)) {  		tokens.Add (arg);  	}  	else {  		if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  			// the format is --foo=value or -foo=value  			tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  			// --foo  			tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  			// value  		}  		else if (options.HasOption (arg.Substring (0' 2))) {  			// the format is a special properties option (-Dproperty=value)  			tokens.Add (arg.Substring (0' 2));  			// -D  			tokens.Add (arg.Substring (2));  			// property=value  		}  		else {  			eatTheRest = stopAtNonOption;  			tokens.Add (arg);  		}  	}  }  else {  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (options.HasOption (opt)) {  	tokens.Add (arg);  }  else {  	if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  		// the format is --foo=value or -foo=value  		tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  		// --foo  		tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  		// value  	}  	else if (options.HasOption (arg.Substring (0' 2))) {  		// the format is a special properties option (-Dproperty=value)  		tokens.Add (arg.Substring (0' 2));  		// -D  		tokens.Add (arg.Substring (2));  		// property=value  	}  	else {  		eatTheRest = stopAtNonOption;  		tokens.Add (arg);  	}  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (options.HasOption (opt)) {  	tokens.Add (arg);  }  else {  	if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  		// the format is --foo=value or -foo=value  		tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  		// --foo  		tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  		// value  	}  	else if (options.HasOption (arg.Substring (0' 2))) {  		// the format is a special properties option (-Dproperty=value)  		tokens.Add (arg.Substring (0' 2));  		// -D  		tokens.Add (arg.Substring (2));  		// property=value  	}  	else {  		eatTheRest = stopAtNonOption;  		tokens.Add (arg);  	}  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (options.HasOption (opt)) {  	tokens.Add (arg);  }  else {  	if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  		// the format is --foo=value or -foo=value  		tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  		// --foo  		tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  		// value  	}  	else if (options.HasOption (arg.Substring (0' 2))) {  		// the format is a special properties option (-Dproperty=value)  		tokens.Add (arg.Substring (0' 2));  		// -D  		tokens.Add (arg.Substring (2));  		// property=value  	}  	else {  		eatTheRest = stopAtNonOption;  		tokens.Add (arg);  	}  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  	// the format is --foo=value or -foo=value  	tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  	// --foo  	tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  	// value  }  else if (options.HasOption (arg.Substring (0' 2))) {  	// the format is a special properties option (-Dproperty=value)  	tokens.Add (arg.Substring (0' 2));  	// -D  	tokens.Add (arg.Substring (2));  	// property=value  }  else {  	eatTheRest = stopAtNonOption;  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  	// the format is --foo=value or -foo=value  	tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  	// --foo  	tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  	// value  }  else if (options.HasOption (arg.Substring (0' 2))) {  	// the format is a special properties option (-Dproperty=value)  	tokens.Add (arg.Substring (0' 2));  	// -D  	tokens.Add (arg.Substring (2));  	// property=value  }  else {  	eatTheRest = stopAtNonOption;  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (opt.IndexOf ('=') != -1 && options.HasOption (opt.Substring (0' opt.IndexOf ('=')))) {  	// the format is --foo=value or -foo=value  	tokens.Add (arg.Substring (0' arg.IndexOf ('=')));  	// --foo  	tokens.Add (arg.Substring (arg.IndexOf ('=') + 1));  	// value  }  else if (options.HasOption (arg.Substring (0' 2))) {  	// the format is a special properties option (-Dproperty=value)  	tokens.Add (arg.Substring (0' 2));  	// -D  	tokens.Add (arg.Substring (2));  	// property=value  }  else {  	eatTheRest = stopAtNonOption;  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (options.HasOption (arg.Substring (0' 2))) {  	// the format is a special properties option (-Dproperty=value)  	tokens.Add (arg.Substring (0' 2));  	// -D  	tokens.Add (arg.Substring (2));  	// property=value  }  else {  	eatTheRest = stopAtNonOption;  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (options.HasOption (arg.Substring (0' 2))) {  	// the format is a special properties option (-Dproperty=value)  	tokens.Add (arg.Substring (0' 2));  	// -D  	tokens.Add (arg.Substring (2));  	// property=value  }  else {  	eatTheRest = stopAtNonOption;  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: if (options.HasOption (arg.Substring (0' 2))) {  	// the format is a special properties option (-Dproperty=value)  	tokens.Add (arg.Substring (0' 2));  	// -D  	tokens.Add (arg.Substring (2));  	// property=value  }  else {  	eatTheRest = stopAtNonOption;  	tokens.Add (arg);  }  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: tokens.Add (arg.Substring (0' 2));  
Magic Number,Deveel.Configuration,GnuParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\GnuParser.cs,Flatten,The following statement contains a magic number: tokens.Add (arg.Substring (2));  
Magic Number,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,RenderOptions,The following statement contains a magic number: foreach (var option in optList) {  	optBuf = new StringBuilder (8);  	if (option.Name == null) {  		optBuf.Append (lpad).Append ("   " + settings.LongOptionPrefix).Append (option.LongName);  	}  	else {  		optBuf.Append (lpad).Append (settings.OptionPrefix).Append (option.Name);  		if (option.HasLongName ()) {  			optBuf.Append (''').Append (settings.LongOptionPrefix).Append (option.LongName);  		}  	}  	if (option.HasArgument ()) {  		if (option.HasArgumentName ()) {  			optBuf.Append (" <").Append (option.ArgumentName).Append (">");  		}  		else if (!String.IsNullOrEmpty (settings.ArgumentName)) {  			optBuf.Append (" <").Append (settings.ArgumentName).Append (">");  		}  		else {  			optBuf.Append (' ');  		}  	}  	prefixList.Add (optBuf);  	max = (optBuf.Length > max) ? optBuf.Length : max;  }  
Magic Number,Deveel.Configuration,HelpFormatter,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\HelpFormatter.cs,RenderOptions,The following statement contains a magic number: optBuf = new StringBuilder (8);  
Magic Number,Deveel.Configuration,Option,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Option.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + (LongName != null ? LongName.GetHashCode () : 0);  
Magic Number,Deveel.Configuration,PosixParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PosixParser.cs,Flatten,The following statement contains a magic number: for (int i = 0; i < argc; i++) {  	// get the next command line token  	string token = arguments [i];  	// handle long option --foo or --foo=bar  	if (token.StartsWith ("--")) {  		int pos = token.IndexOf ('=');  		String opt = pos == -1 ? token : token.Substring (0' pos);  		// --foo  		if (!options.HasOption (opt)) {  			ProcessNonOptionToken (token' stopAtNonOption);  		}  		else {  			currentOption = options.GetOption (opt);  			tokens.Add (opt);  			if (pos != -1) {  				tokens.Add (token.Substring (pos + 1));  			}  		}  	}  	// single hyphen  	else if ("-".Equals (token)) {  		tokens.Add (token);  	}  	else if (token.StartsWith ("-")) {  		if (token.Length == 2 || options.HasOption (token)) {  			ProcessOptionToken (options' token' stopAtNonOption);  		}  		// requires bursting  		else {  			BurstToken (options' token' stopAtNonOption);  		}  	}  	else {  		ProcessNonOptionToken (token' stopAtNonOption);  	}  	Gobble (arguments' ref i);  }  
Magic Number,Deveel.Configuration,PosixParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PosixParser.cs,Flatten,The following statement contains a magic number: if (token.StartsWith ("--")) {  	int pos = token.IndexOf ('=');  	String opt = pos == -1 ? token : token.Substring (0' pos);  	// --foo  	if (!options.HasOption (opt)) {  		ProcessNonOptionToken (token' stopAtNonOption);  	}  	else {  		currentOption = options.GetOption (opt);  		tokens.Add (opt);  		if (pos != -1) {  			tokens.Add (token.Substring (pos + 1));  		}  	}  }  // single hyphen  else if ("-".Equals (token)) {  	tokens.Add (token);  }  else if (token.StartsWith ("-")) {  	if (token.Length == 2 || options.HasOption (token)) {  		ProcessOptionToken (options' token' stopAtNonOption);  	}  	// requires bursting  	else {  		BurstToken (options' token' stopAtNonOption);  	}  }  else {  	ProcessNonOptionToken (token' stopAtNonOption);  }  
Magic Number,Deveel.Configuration,PosixParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PosixParser.cs,Flatten,The following statement contains a magic number: if ("-".Equals (token)) {  	tokens.Add (token);  }  else if (token.StartsWith ("-")) {  	if (token.Length == 2 || options.HasOption (token)) {  		ProcessOptionToken (options' token' stopAtNonOption);  	}  	// requires bursting  	else {  		BurstToken (options' token' stopAtNonOption);  	}  }  else {  	ProcessNonOptionToken (token' stopAtNonOption);  }  
Magic Number,Deveel.Configuration,PosixParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PosixParser.cs,Flatten,The following statement contains a magic number: if (token.StartsWith ("-")) {  	if (token.Length == 2 || options.HasOption (token)) {  		ProcessOptionToken (options' token' stopAtNonOption);  	}  	// requires bursting  	else {  		BurstToken (options' token' stopAtNonOption);  	}  }  else {  	ProcessNonOptionToken (token' stopAtNonOption);  }  
Magic Number,Deveel.Configuration,PosixParser,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PosixParser.cs,Flatten,The following statement contains a magic number: if (token.Length == 2 || options.HasOption (token)) {  	ProcessOptionToken (options' token' stopAtNonOption);  }  // requires bursting  else {  	BurstToken (options' token' stopAtNonOption);  }  
Magic Number,Deveel.Configuration,Util,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Util.cs,StripLeadingHyphens,The following statement contains a magic number: if (str.StartsWith ("--"))  	return str.Substring (2' str.Length - 2);  
Magic Number,Deveel.Configuration,Util,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Util.cs,StripLeadingHyphens,The following statement contains a magic number: if (str.StartsWith ("--"))  	return str.Substring (2' str.Length - 2);  
Magic Number,Deveel.Configuration,Util,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Util.cs,StripLeadingHyphens,The following statement contains a magic number: return str.Substring (2' str.Length - 2);  
Magic Number,Deveel.Configuration,Util,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\Util.cs,StripLeadingHyphens,The following statement contains a magic number: return str.Substring (2' str.Length - 2);  
Missing Default,Deveel.Configuration,PatternOptionBuilder,C:\repos\deveel_deveel-cli\src\deveel-cli\Deveel.Configuration\PatternOptionBuilder.cs,getValueClass,The following switch statement is missing a default case: switch (ch) {  case '@':  	return OptionType.Object;  case ':':  	return OptionType.String;  case '%':  	return OptionType.Number;  case '+':  	return OptionType.Type;  case '#':  	return OptionType.Date;  case '<':  	return OptionType.ExistingFile;  case '>':  	return OptionType.File;  case '*':  	return OptionType.FileList;  case '/':  	return OptionType.Url;  }  
