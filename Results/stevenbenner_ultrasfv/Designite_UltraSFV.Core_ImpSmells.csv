Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,GetUpdateInfo,Cyclomatic complexity of the method is 22
Complex Method,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,Start,Cyclomatic complexity of the method is 12
Complex Method,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,LogToFile,Cyclomatic complexity of the method is 11
Complex Method,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,HashFile,Cyclomatic complexity of the method is 10
Complex Method,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,Cyclomatic complexity of the method is 21
Complex Method,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,Cyclomatic complexity of the method is 12
Long Statement,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,Start,The length of the statement  "		if (!String.IsNullOrEmpty (qi.TestHash) || qi.Action == QueueItemAction.GenerateHash || qi.Action == QueueItemAction.AppendHash) { " is 130.
Long Statement,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,Start,The length of the statement  "			if (qi.Action == QueueItemAction.AppendHash && ((qi.Type == HashType.CRC && !String.IsNullOrEmpty (StringUtilities.FindCRC (qi.File.Name))) || (qi.Type == HashType.MD5 && !String.IsNullOrEmpty (StringUtilities.FindMD5 (qi.File.Name))))) { " is 238.
Long Statement,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,AppendHashToFileName,The length of the statement  "			NewFileName = item.File.Name.Substring (0' item.File.Name.LastIndexOf ('.')) + " [" + FileHash + "]" + item.File.Extension; " is 123.
Long Statement,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,LogToFile,The length of the statement  "	string LogLine = DateTime.Now.ToString () + "|" + qi.Action.ToString () + "|" + qi.Type.ToString () + "|" + qi.Results.ToString () + "|" + qi.File.FullName; " is 156.
Long Statement,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The length of the statement  "		_Comments = "Generated By UltraSFV " + String.Format ("v{0}"' Assembly.GetEntryAssembly ().GetName ().Version) + " on " + DateTime.Now.ToString ("MM/dd/yyyy HH:mm:ss") + Environment.NewLine + "http://www.ultrasfv.com/" + Environment.NewLine + Environment.NewLine + _Comments; " is 275.
Long Statement,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The length of the statement  "				string FileLine = StringUtilities.AddWhiteSpace (qi.File.Length.ToString ()' LongestFileLength' true) + " " + qi.File.LastWriteTime.ToString ("HH:mm.ss yyyy-MM-dd") + " " + qi.File.Name; " is 186.
Long Statement,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,The length of the statement  "				TempList.Add (new QueueItem (new FileInfo (Path.Combine (_File.Directory.FullName' m.Groups ["file"].Value.Trim ()))' m.Groups ["hash"].Value' QueueItemAction.TestHash' _FileType)); " is 181.
Long Statement,UltraSFV.Core,SingletonApplication,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\SingletonApplication\SingletonApplication.cs,GetArgs,The length of the statement  "		string[] tempString = (string[])Registry.CurrentUser.OpenSubKey (@"Software\UltraSFV\" + appID' false).GetValue ("Args"' null); " is 127.
Long Statement,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,FindCRC,The length of the statement  "	Regex CRCMatch = new Regex (@"[\(\[](?<crc>[A-F0-9]{8})[\]\)]"' RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.RightToLeft); " is 140.
Long Statement,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,FindMD5,The length of the statement  "	Regex MD5Match = new Regex (@"[\(\[](?<md5>[A-F0-9]{32})[\]\)]"' RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.RightToLeft); " is 141.
Complex Conditional,UltraSFV.Core,ProcessManager,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ProcessManager\ProcessManager.cs,Start,The conditional expression  "qi.Action == QueueItemAction.AppendHash && ((qi.Type == HashType.CRC && !String.IsNullOrEmpty (StringUtilities.FindCRC (qi.File.Name))) || (qi.Type == HashType.MD5 && !String.IsNullOrEmpty (StringUtilities.FindMD5 (qi.File.Name))))"  is complex.
Empty Catch Block,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,GetUpdateInfo,The method has an empty catch block.
Empty Catch Block,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The method has an empty catch block.
Empty Catch Block,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,CleanupTemps,The method has an empty catch block.
Empty Catch Block,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,CleanupTemps,The method has an empty catch block.
Empty Catch Block,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,CleanupTemps,The method has an empty catch block.
Empty Catch Block,UltraSFV.Core,ErrorLog,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\ErrorLog.cs,LogError,The method has an empty catch block.
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: try {  	WebRequest request = WebRequest.Create (_UpdateInfo.Url);  	if (request != null) {  		response = request.GetResponse ();  		if (response != null) {  			RStream = response.GetResponseStream ();  			LStream = File.Create (_PatchFile);  			byte[] buffer = new byte[1024];  			int bytesRead;  			do {  				bytesRead = RStream.Read (buffer' 0' buffer.Length);  				LStream.Write (buffer' 0' bytesRead);  				bytesdone += bytesRead;  				int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  				if (bw != null && response.ContentLength > 0)  					bw.ReportProgress (PercentageComplete);  			}  			while (bytesRead > 0);  		}  	}  }  catch (Exception ex) {  	// We don't want error reporting here.  }  finally {  	if (response != null)  		response.Close ();  	if (RStream != null)  		RStream.Close ();  	if (LStream != null)  		LStream.Close ();  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: try {  	WebRequest request = WebRequest.Create (_UpdateInfo.Url);  	if (request != null) {  		response = request.GetResponse ();  		if (response != null) {  			RStream = response.GetResponseStream ();  			LStream = File.Create (_PatchFile);  			byte[] buffer = new byte[1024];  			int bytesRead;  			do {  				bytesRead = RStream.Read (buffer' 0' buffer.Length);  				LStream.Write (buffer' 0' bytesRead);  				bytesdone += bytesRead;  				int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  				if (bw != null && response.ContentLength > 0)  					bw.ReportProgress (PercentageComplete);  			}  			while (bytesRead > 0);  		}  	}  }  catch (Exception ex) {  	// We don't want error reporting here.  }  finally {  	if (response != null)  		response.Close ();  	if (RStream != null)  		RStream.Close ();  	if (LStream != null)  		LStream.Close ();  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: try {  	WebRequest request = WebRequest.Create (_UpdateInfo.Url);  	if (request != null) {  		response = request.GetResponse ();  		if (response != null) {  			RStream = response.GetResponseStream ();  			LStream = File.Create (_PatchFile);  			byte[] buffer = new byte[1024];  			int bytesRead;  			do {  				bytesRead = RStream.Read (buffer' 0' buffer.Length);  				LStream.Write (buffer' 0' bytesRead);  				bytesdone += bytesRead;  				int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  				if (bw != null && response.ContentLength > 0)  					bw.ReportProgress (PercentageComplete);  			}  			while (bytesRead > 0);  		}  	}  }  catch (Exception ex) {  	// We don't want error reporting here.  }  finally {  	if (response != null)  		response.Close ();  	if (RStream != null)  		RStream.Close ();  	if (LStream != null)  		LStream.Close ();  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: if (request != null) {  	response = request.GetResponse ();  	if (response != null) {  		RStream = response.GetResponseStream ();  		LStream = File.Create (_PatchFile);  		byte[] buffer = new byte[1024];  		int bytesRead;  		do {  			bytesRead = RStream.Read (buffer' 0' buffer.Length);  			LStream.Write (buffer' 0' bytesRead);  			bytesdone += bytesRead;  			int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  			if (bw != null && response.ContentLength > 0)  				bw.ReportProgress (PercentageComplete);  		}  		while (bytesRead > 0);  	}  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: if (request != null) {  	response = request.GetResponse ();  	if (response != null) {  		RStream = response.GetResponseStream ();  		LStream = File.Create (_PatchFile);  		byte[] buffer = new byte[1024];  		int bytesRead;  		do {  			bytesRead = RStream.Read (buffer' 0' buffer.Length);  			LStream.Write (buffer' 0' bytesRead);  			bytesdone += bytesRead;  			int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  			if (bw != null && response.ContentLength > 0)  				bw.ReportProgress (PercentageComplete);  		}  		while (bytesRead > 0);  	}  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: if (request != null) {  	response = request.GetResponse ();  	if (response != null) {  		RStream = response.GetResponseStream ();  		LStream = File.Create (_PatchFile);  		byte[] buffer = new byte[1024];  		int bytesRead;  		do {  			bytesRead = RStream.Read (buffer' 0' buffer.Length);  			LStream.Write (buffer' 0' bytesRead);  			bytesdone += bytesRead;  			int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  			if (bw != null && response.ContentLength > 0)  				bw.ReportProgress (PercentageComplete);  		}  		while (bytesRead > 0);  	}  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: if (response != null) {  	RStream = response.GetResponseStream ();  	LStream = File.Create (_PatchFile);  	byte[] buffer = new byte[1024];  	int bytesRead;  	do {  		bytesRead = RStream.Read (buffer' 0' buffer.Length);  		LStream.Write (buffer' 0' bytesRead);  		bytesdone += bytesRead;  		int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  		if (bw != null && response.ContentLength > 0)  			bw.ReportProgress (PercentageComplete);  	}  	while (bytesRead > 0);  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: if (response != null) {  	RStream = response.GetResponseStream ();  	LStream = File.Create (_PatchFile);  	byte[] buffer = new byte[1024];  	int bytesRead;  	do {  		bytesRead = RStream.Read (buffer' 0' buffer.Length);  		LStream.Write (buffer' 0' bytesRead);  		bytesdone += bytesRead;  		int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  		if (bw != null && response.ContentLength > 0)  			bw.ReportProgress (PercentageComplete);  	}  	while (bytesRead > 0);  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: if (response != null) {  	RStream = response.GetResponseStream ();  	LStream = File.Create (_PatchFile);  	byte[] buffer = new byte[1024];  	int bytesRead;  	do {  		bytesRead = RStream.Read (buffer' 0' buffer.Length);  		LStream.Write (buffer' 0' bytesRead);  		bytesdone += bytesRead;  		int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  		if (bw != null && response.ContentLength > 0)  			bw.ReportProgress (PercentageComplete);  	}  	while (bytesRead > 0);  }  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: do {  	bytesRead = RStream.Read (buffer' 0' buffer.Length);  	LStream.Write (buffer' 0' bytesRead);  	bytesdone += bytesRead;  	int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  	if (bw != null && response.ContentLength > 0)  		bw.ReportProgress (PercentageComplete);  }  while (bytesRead > 0);  
Magic Number,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,DownloadPatch,The following statement contains a magic number: do {  	bytesRead = RStream.Read (buffer' 0' buffer.Length);  	LStream.Write (buffer' 0' bytesRead);  	bytesdone += bytesRead;  	int PercentageComplete = (int)Math.Floor ((((float)bytesdone / (float)response.ContentLength) * 100) + 0.5);  	if (bw != null && response.ContentLength > 0)  		bw.ReportProgress (PercentageComplete);  }  while (bytesRead > 0);  
Magic Number,UltraSFV.Core,Utilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\Utilities.cs,IsWindowsVista,The following statement contains a magic number: switch (osInfo.Platform) {  case System.PlatformID.Win32NT:  	if (osInfo.Version.Major == 6)  		IsVista = true;  	break;  }  
Magic Number,UltraSFV.Core,Utilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\Utilities.cs,IsWindowsVista,The following statement contains a magic number: if (osInfo.Version.Major == 6)  	IsVista = true;  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following statement contains a magic number: try {  	using (StreamWriter sw = new StreamWriter (_File.FullName)) {  		string FileHash = String.Empty;  		// File size and date information  		foreach (QueueItem qi in _Items) {  			FileHash = String.Empty;  			if (!String.IsNullOrEmpty (qi.FileHash)) {  				FileHash = qi.FileHash;  			}  			else if (!String.IsNullOrEmpty (qi.TestHash)) {  				FileHash = qi.TestHash;  			}  			string FileLine = StringUtilities.AddWhiteSpace (qi.File.Length.ToString ()' LongestFileLength' true) + " " + qi.File.LastWriteTime.ToString ("HH:mm.ss yyyy-MM-dd") + " " + qi.File.Name;  			if (!String.IsNullOrEmpty (FileHash) && !_Comments.Contains (FileLine.Trim ())) {  				_Comments += FileLine + Environment.NewLine;  			}  		}  		// Comments  		sw.WriteLine ("; " + _Comments.Replace (Environment.NewLine' Environment.NewLine + "; ").Trim ());  		// Hash information  		foreach (QueueItem qi in _Items) {  			FileHash = String.Empty;  			if (!String.IsNullOrEmpty (qi.FileHash)) {  				FileHash = qi.FileHash;  			}  			else if (!String.IsNullOrEmpty (qi.TestHash)) {  				FileHash = qi.TestHash;  			}  			if (!String.IsNullOrEmpty (FileHash)) {  				switch (this.FileType) {  				case HashType.CRC:  					sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  					break;  				case HashType.MD5:  					sw.WriteLine (FileHash + "|" + qi.File.Name);  					break;  				}  			}  		}  	}  }  catch (Exception ex) {  	return false;  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following statement contains a magic number: using (StreamWriter sw = new StreamWriter (_File.FullName)) {  	string FileHash = String.Empty;  	// File size and date information  	foreach (QueueItem qi in _Items) {  		FileHash = String.Empty;  		if (!String.IsNullOrEmpty (qi.FileHash)) {  			FileHash = qi.FileHash;  		}  		else if (!String.IsNullOrEmpty (qi.TestHash)) {  			FileHash = qi.TestHash;  		}  		string FileLine = StringUtilities.AddWhiteSpace (qi.File.Length.ToString ()' LongestFileLength' true) + " " + qi.File.LastWriteTime.ToString ("HH:mm.ss yyyy-MM-dd") + " " + qi.File.Name;  		if (!String.IsNullOrEmpty (FileHash) && !_Comments.Contains (FileLine.Trim ())) {  			_Comments += FileLine + Environment.NewLine;  		}  	}  	// Comments  	sw.WriteLine ("; " + _Comments.Replace (Environment.NewLine' Environment.NewLine + "; ").Trim ());  	// Hash information  	foreach (QueueItem qi in _Items) {  		FileHash = String.Empty;  		if (!String.IsNullOrEmpty (qi.FileHash)) {  			FileHash = qi.FileHash;  		}  		else if (!String.IsNullOrEmpty (qi.TestHash)) {  			FileHash = qi.TestHash;  		}  		if (!String.IsNullOrEmpty (FileHash)) {  			switch (this.FileType) {  			case HashType.CRC:  				sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  				break;  			case HashType.MD5:  				sw.WriteLine (FileHash + "|" + qi.File.Name);  				break;  			}  		}  	}  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following statement contains a magic number: foreach (QueueItem qi in _Items) {  	FileHash = String.Empty;  	if (!String.IsNullOrEmpty (qi.FileHash)) {  		FileHash = qi.FileHash;  	}  	else if (!String.IsNullOrEmpty (qi.TestHash)) {  		FileHash = qi.TestHash;  	}  	if (!String.IsNullOrEmpty (FileHash)) {  		switch (this.FileType) {  		case HashType.CRC:  			sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  			break;  		case HashType.MD5:  			sw.WriteLine (FileHash + "|" + qi.File.Name);  			break;  		}  	}  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following statement contains a magic number: if (!String.IsNullOrEmpty (FileHash)) {  	switch (this.FileType) {  	case HashType.CRC:  		sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  		break;  	case HashType.MD5:  		sw.WriteLine (FileHash + "|" + qi.File.Name);  		break;  	}  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following statement contains a magic number: switch (this.FileType) {  case HashType.CRC:  	sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  	break;  case HashType.MD5:  	sw.WriteLine (FileHash + "|" + qi.File.Name);  	break;  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following statement contains a magic number: sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,The following statement contains a magic number: using (StreamReader sr = new StreamReader (_File.FullName)) {  	string FileLine;  	while ((FileLine = sr.ReadLine ()) != null) {  		Match m = null;  		if (_FileType == HashType.CRC) {  			m = CRCMatch.Match (FileLine);  		}  		else if (_FileType == HashType.MD5) {  			m = MD5Match.Match (FileLine);  		}  		if (FileLine.StartsWith (";")) {  			if (FileLine.StartsWith ("; ")) {  				_Comments += FileLine.Substring (2).TrimEnd (null) + Environment.NewLine;  			}  			else {  				_Comments += FileLine.Substring (1).TrimEnd (null) + Environment.NewLine;  			}  			continue;  		}  		if (m != null && m.Success) {  			TempList.Add (new QueueItem (new FileInfo (Path.Combine (_File.Directory.FullName' m.Groups ["file"].Value.Trim ()))' m.Groups ["hash"].Value' QueueItemAction.TestHash' _FileType));  			FoundOne = true;  		}  	}  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,The following statement contains a magic number: while ((FileLine = sr.ReadLine ()) != null) {  	Match m = null;  	if (_FileType == HashType.CRC) {  		m = CRCMatch.Match (FileLine);  	}  	else if (_FileType == HashType.MD5) {  		m = MD5Match.Match (FileLine);  	}  	if (FileLine.StartsWith (";")) {  		if (FileLine.StartsWith ("; ")) {  			_Comments += FileLine.Substring (2).TrimEnd (null) + Environment.NewLine;  		}  		else {  			_Comments += FileLine.Substring (1).TrimEnd (null) + Environment.NewLine;  		}  		continue;  	}  	if (m != null && m.Success) {  		TempList.Add (new QueueItem (new FileInfo (Path.Combine (_File.Directory.FullName' m.Groups ["file"].Value.Trim ()))' m.Groups ["hash"].Value' QueueItemAction.TestHash' _FileType));  		FoundOne = true;  	}  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,The following statement contains a magic number: if (FileLine.StartsWith (";")) {  	if (FileLine.StartsWith ("; ")) {  		_Comments += FileLine.Substring (2).TrimEnd (null) + Environment.NewLine;  	}  	else {  		_Comments += FileLine.Substring (1).TrimEnd (null) + Environment.NewLine;  	}  	continue;  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,The following statement contains a magic number: if (FileLine.StartsWith ("; ")) {  	_Comments += FileLine.Substring (2).TrimEnd (null) + Environment.NewLine;  }  else {  	_Comments += FileLine.Substring (1).TrimEnd (null) + Environment.NewLine;  }  
Magic Number,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,LoadFile,The following statement contains a magic number: _Comments += FileLine.Substring (2).TrimEnd (null) + Environment.NewLine;  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: if (size < Int32.MaxValue) {  	double s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (int)(100 * s / 1024) / 100.0;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  else {  	long s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (100L * s / 1024L) / 100L;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: if (size < Int32.MaxValue) {  	double s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (int)(100 * s / 1024) / 100.0;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  else {  	long s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (100L * s / 1024L) / 100L;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: if (size < Int32.MaxValue) {  	double s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (int)(100 * s / 1024) / 100.0;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  else {  	long s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (100L * s / 1024L) / 100L;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: if (size < Int32.MaxValue) {  	double s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (int)(100 * s / 1024) / 100.0;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  else {  	long s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (100L * s / 1024L) / 100L;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: if (size < Int32.MaxValue) {  	double s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (int)(100 * s / 1024) / 100.0;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  else {  	long s = size;  	while (i < format.Length - 1 && s >= 1024) {  		s = (100L * s / 1024L) / 100L;  		i++;  	}  	return string.Format (format [i]' s.ToString ("###'###'###.##"));  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: while (i < format.Length - 1 && s >= 1024) {  	s = (int)(100 * s / 1024) / 100.0;  	i++;  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: while (i < format.Length - 1 && s >= 1024) {  	s = (int)(100 * s / 1024) / 100.0;  	i++;  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: while (i < format.Length - 1 && s >= 1024) {  	s = (int)(100 * s / 1024) / 100.0;  	i++;  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: while (i < format.Length - 1 && s >= 1024) {  	s = (int)(100 * s / 1024) / 100.0;  	i++;  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: s = (int)(100 * s / 1024) / 100.0;  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: s = (int)(100 * s / 1024) / 100.0;  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: s = (int)(100 * s / 1024) / 100.0;  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,GetFileSizeAsString,The following statement contains a magic number: while (i < format.Length - 1 && s >= 1024) {  	s = (100L * s / 1024L) / 100L;  	i++;  }  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,UInt32ToBigEndianBytes,The following statement contains a magic number: return new byte[] {  	(byte)((uintToConvert >> 24) & 0xff)'  	(byte)((uintToConvert >> 16) & 0xff)'  	(byte)((uintToConvert >> 8) & 0xff)'  	(byte)(uintToConvert & 0xff)  };  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,UInt32ToBigEndianBytes,The following statement contains a magic number: return new byte[] {  	(byte)((uintToConvert >> 24) & 0xff)'  	(byte)((uintToConvert >> 16) & 0xff)'  	(byte)((uintToConvert >> 8) & 0xff)'  	(byte)(uintToConvert & 0xff)  };  
Magic Number,UltraSFV.Core,StringUtilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\StringUtilities.cs,UInt32ToBigEndianBytes,The following statement contains a magic number: return new byte[] {  	(byte)((uintToConvert >> 24) & 0xff)'  	(byte)((uintToConvert >> 16) & 0xff)'  	(byte)((uintToConvert >> 8) & 0xff)'  	(byte)(uintToConvert & 0xff)  };  
Missing Default,UltraSFV.Core,AutoUpdater,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\AutoUpdater\AutoUpdater.cs,GetUpdateInfo,The following switch statement is missing a default case: switch (reader.Name) {  case "fileName":  	_UpdateInfo.FileName = reader.ReadString ();  	break;  case "fileSize":  	_UpdateInfo.FileSize = reader.ReadString ();  	break;  case "crc":  	_UpdateInfo.CRC = reader.ReadString ();  	break;  case "url":  	_UpdateInfo.Url = reader.ReadString ();  	break;  case "version":  	_UpdateInfo.Version = reader.ReadString ();  	break;  case "releaseDate":  	_UpdateInfo.ReleaseDate = reader.ReadString ();  	break;  }  
Missing Default,UltraSFV.Core,Utilities,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\Utilities.cs,IsWindowsVista,The following switch statement is missing a default case: switch (osInfo.Platform) {  case System.PlatformID.Win32NT:  	if (osInfo.Version.Major == 6)  		IsVista = true;  	break;  }  
Missing Default,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,HashFile,The following switch statement is missing a default case: switch (Path.GetExtension (file).ToLower ()) {  case ".sfv":  	_FileType = HashType.CRC;  	break;  case ".md5":  	_FileType = HashType.MD5;  	break;  case ".crc":  	_FileType = HashType.CRC;  	break;  }  
Missing Default,UltraSFV.Core,HashFile,C:\repos\stevenbenner_ultrasfv\UltraSFV.Core\HashFile.cs,Save,The following switch statement is missing a default case: switch (this.FileType) {  case HashType.CRC:  	sw.WriteLine (StringUtilities.AddWhiteSpace (qi.File.Name' LongestFileName + 4) + FileHash);  	break;  case HashType.MD5:  	sw.WriteLine (FileHash + "|" + qi.File.Name);  	break;  }  
