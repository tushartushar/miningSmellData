Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Clone,Cyclomatic complexity of the method is 10
Complex Method,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Convert,Cyclomatic complexity of the method is 11
Complex Method,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Allocate,Cyclomatic complexity of the method is 10
Complex Conditional,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Allocate,The conditional expression  "x == null || x.ClassCount < 1 || x.Parameter == null || x.Rho == null || x.Rho.Length < 1 ||                  x.SVCoefs == null || x.SVCoefs.Count < 1 || x.TotalSVCount < 1"  is complex.
Complex Conditional,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Allocate,The conditional expression  "x.Parameter.Type != SVMType.EPSILON_SVR && x.Parameter.Type != SVMType.NU_SVR &&                  x.Parameter.Type != SVMType.ONE_CLASS &&                  (x.Labels == null || x.Labels.Length < 1 || x.SVCounts == null || x.SVCounts.Length < 1)"  is complex.
Complex Conditional,LibSVMsharp,SVMProblem,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMProblem.cs,Allocate,The conditional expression  "x == null || x.X == null || x.Y == null || x.Length < 1"  is complex.
Magic Number,LibSVMsharp.Helpers,SVMHelper,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\Helpers\SVMHelper.cs,EvaluateClassificationProblem,The following statement contains a magic number: return 100.0 * ((double)total_correct / (double)testset.Length);
Magic Number,LibSVMsharp.Helpers,SVMHelper,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\Helpers\SVMHelper.cs,EvaluateClassificationProblem,The following statement contains a magic number: return 100.0 * ((double)total_correct / (double)testset.Length);
Magic Number,LibSVMsharp,SVM,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVM.cs,CrossValidation,The following statement contains a magic number: nFolds < 2
Magic Number,LibSVMsharp,SVM,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVM.cs,PredictValues,The following statement contains a magic number: int size = (int)(classCount * (classCount - 1) * 0.5);
Magic Number,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Convert,The following statement contains a magic number: int problemCount = (int)(y.ClassCount * (y.ClassCount - 1) * 0.5);
Magic Number,LibSVMsharp,SVMNode,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMNode.cs,GetHashCode,The following statement contains a magic number: return Index * (int) (Value * 100000000.0);
Magic Number,LibSVMsharp,SVMParameter,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMParameter.cs,SVMParameter,The following statement contains a magic number: Degree = 3;
Magic Number,LibSVMsharp,SVMParameter,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMParameter.cs,SVMParameter,The following statement contains a magic number: Nu = 0.5;
Magic Number,LibSVMsharp,SVMParameter,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMParameter.cs,SVMParameter,The following statement contains a magic number: P = 0.1;
Magic Number,LibSVMsharp,SVMParameter,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMParameter.cs,SVMParameter,The following statement contains a magic number: CacheSize = 100;
Magic Number,LibSVMsharp,SVMParameter,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMParameter.cs,SVMParameter,The following statement contains a magic number: Eps = 0.001;
Missing Default,LibSVMsharp,SVMModel,D:\research\architectureSmells\repos\ccerhan_LibSVMsharp\LibSVMsharp\SVMModel.cs,Convert,The following switch statement is missing a default case: switch (y.Parameter.Kernel)                  {                      case SVMKernelType.LINEAR:                          break;                      case SVMKernelType.POLY:                          y.Parameter.Gamma = x.param.gamma;                          y.Parameter.Coef0 = x.param.coef0;                          y.Parameter.Degree = x.param.degree;                          break;                      case SVMKernelType.RBF:                          y.Parameter.Gamma = x.param.gamma;                          break;                      case SVMKernelType.SIGMOID:                          y.Parameter.Gamma = x.param.gamma;                          y.Parameter.Coef0 = x.param.coef0;                          break;                  }
