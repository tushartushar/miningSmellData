Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,GetUser,The length of the statement  "			throw new ArgumentException (String.Format ("Invalid value provided for userId: [{0}]. Couldn't find a user with this ID."' userId)); " is 133.
Long Statement,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,GetUserFromRepo,The length of the statement  "			throw new ArgumentException (String.Format ("Invalid value provided for userId: [{0}]. Couldn't find a user with this ID."' userId)); " is 133.
Long Statement,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,UpdateCreditScoreForAllUsers,The length of the statement  "		Console.WriteLine ("Found {0} users in the database. Will calculate and store their credit scores in parallel."' userIds.Count); " is 128.
Long Statement,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,UpdateCreditScore,The length of the statement  "			throw new ArgumentException (String.Format ("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId)); " is 121.
Long Statement,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,SendWelcomeEmail,The length of the statement  "			throw new ArgumentException (String.Format ("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId)); " is 121.
Magic Number,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,CreateUser,The following statement contains a magic number: using (var dbContextScope = dbContextScopeFactory.Create ()) {  	//-- Build domain model  	var user = new User () {  		UserId = 99'  		//userToCreate.UserId'  		Name = userToCreate.Name  	};  	//-- Persist  	userRepository.Add (user);  	dbContextScope.SaveChanges ();  }  
Magic Number,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,UpdateCreditScore,The following statement contains a magic number: using (var dbContextScope = dbContextScopeFactory.Create ()) {  	var dbContext = dbContextScope.DbContexts.Get<UserManagementDbContext> ();  	var user = dbContext.Users.Find (userId);  	if (user == null)  		throw new ArgumentException (String.Format ("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId));  	// Simulate the calculation of a credit score taking some time  	var random = new Random (Thread.CurrentThread.ManagedThreadId);  	Thread.Sleep (random.Next (300' 1000));  	//user.CreditScore = random.Next(1' 100);  	dbContextScope.SaveChanges ();  }  
Magic Number,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,UpdateCreditScore,The following statement contains a magic number: using (var dbContextScope = dbContextScopeFactory.Create ()) {  	var dbContext = dbContextScope.DbContexts.Get<UserManagementDbContext> ();  	var user = dbContext.Users.Find (userId);  	if (user == null)  		throw new ArgumentException (String.Format ("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId));  	// Simulate the calculation of a credit score taking some time  	var random = new Random (Thread.CurrentThread.ManagedThreadId);  	Thread.Sleep (random.Next (300' 1000));  	//user.CreditScore = random.Next(1' 100);  	dbContextScope.SaveChanges ();  }  
Magic Number,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,UpdateCreditScore,The following statement contains a magic number: Thread.Sleep (random.Next (300' 1000));  
Magic Number,ARBE.Service.User,UserQueryService,C:\repos\rajbyexample_ARBE\Source\ARBE\ARBE.Service\User\UserQueryService.cs,UpdateCreditScore,The following statement contains a magic number: Thread.Sleep (random.Next (300' 1000));  
