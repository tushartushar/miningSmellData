Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UnityTest,ComparerBase,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\ComparerBase.cs,GetFailureMessage,Cyclomatic complexity of the method is 9
Complex Method,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,LogHandler,Cyclomatic complexity of the method is 11
Complex Method,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,StateMachine,Cyclomatic complexity of the method is 27
Long Parameter List,UnityTest,AssertionComponent,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\AssertionComponent.cs,Create,The method has 5 parameters.
Long Parameter List,UnityTest,AssertionComponent,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\AssertionComponent.cs,Create,The method has 6 parameters.
Long Parameter List,UnityTest,AssertionComponent,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\AssertionComponent.cs,Create,The method has 5 parameters.
Long Parameter List,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,PrintResultToLog,The method has 9 parameters.
Long Identifier,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,isBatchMode,The length of the parameter InternalEditorUtilityClassName is 30.
Long Statement,UnityTest,AssertionComponent,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\AssertionComponent.cs,OnComponentCopy,The length of the statement  "	var oldActionList = Resources.FindObjectsOfTypeAll (typeof(AssertionComponent)).Where (o => ((AssertionComponent)o).m_ActionBase == m_ActionBase && o != this); " is 159.
Long Statement,UnityTest,ActionBase,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\ActionBase.cs,GetConfigurationDescription,The length of the statement  "	foreach (var prop in GetType ().GetFields (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly).Where (info => info.FieldType.IsSerializable)) { " is 164.
Long Statement,UnityTest,TestComponent,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestComponent.cs,GetTypeByName,The length of the statement  "	return AppDomain.CurrentDomain.GetAssemblies ().SelectMany (a => a.GetTypes ()).FirstOrDefault (type => type.Name == className); " is 128.
Long Statement,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,ParseListForGroups,The length of the statement  "			var childrenTestResult = testResult.gameObject.GetComponentsInChildren (typeof(TestComponent)' true).Where (t => t != testResult).Cast<TestComponent> ().ToArray (); " is 164.
Long Statement,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,PrintResultToLog,The length of the statement  "		Debug.Log ("Failed tests: " + string.Join ("' "' resultList.Where (t => t.IsFailure).Select (result => result.Name).ToArray ())); " is 129.
Long Statement,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,PrintResultToLog,The length of the statement  "		Debug.Log ("Ignored tests: " + string.Join ("' "' resultList.Where (t => t.IsIgnored).Select (result => result.Name).ToArray ())); " is 130.
Long Statement,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,isBatchMode,The length of the statement  "	var InternalEditorUtilityClassName = "UnityEditorInternal.InternalEditorUtility' UnityEditor' Version=0.0.0.0' Culture=neutral' PublicKeyToken=null"; " is 149.
Long Statement,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,GetAvailableNetworkIPs,The length of the statement  "		if (netInterface.NetworkInterfaceType != NetworkInterfaceType.Wireless80211 && netInterface.NetworkInterfaceType != NetworkInterfaceType.Ethernet) " is 146.
Long Statement,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,GetAvailableNetworkIPs,The length of the statement  "		var ipAdresses = netInterface.GetIPProperties ().UnicastAddresses.Where (a => a.Address.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork); " is 152.
Long Statement,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,ResolveNetworkConnection,The length of the statement  "	var nrsList = ipEndPointList.Select (ipEndPoint => new NetworkResultSender (ipEndPoint.Address.ToString ()' ipEndPoint.Port)).ToList (); " is 136.
Long Statement,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,ResolveNetworkConnection,The length of the statement  "	Debug.LogError ("Couldn't connect to the server: " + string.Join ("' "' ipEndPointList.Select (ipep => ipep.Address + ":" + ipep.Port).ToArray ())); " is 148.
Complex Conditional,AdvanceRTSCameraDemo,GUIVector3,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\Advanced RTS Camera\Demo\GUI\Scripts\GUIVector3.cs,ValidateVector,The conditional expression  "float.TryParse (vectorInputs [0].text' out x) && clampInput && (x > maxInput || x < minInput)"  is complex.
Complex Conditional,AdvanceRTSCameraDemo,GUIVector3,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\Advanced RTS Camera\Demo\GUI\Scripts\GUIVector3.cs,ValidateVector,The conditional expression  "float.TryParse (vectorInputs [1].text' out y) && clampInput && (y > maxInput || y < minInput)"  is complex.
Complex Conditional,AdvanceRTSCameraDemo,GUIVector3,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\Advanced RTS Camera\Demo\GUI\Scripts\GUIVector3.cs,ValidateVector,The conditional expression  "float.TryParse (vectorInputs [2].text' out z) && clampInput && (z > maxInput || z < minInput)"  is complex.
Empty Catch Block,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,GetTextFromTempFile,The method has an empty catch block.
Magic Number,AdvanceRTSCameraDemo,GUIVector3,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\Advanced RTS Camera\Demo\GUI\Scripts\GUIVector3.cs,ValidateVector,The following statement contains a magic number: if (float.TryParse (vectorInputs [2].text' out z) && clampInput && (z > maxInput || z < minInput)) {  	z = Mathf.Clamp (z' minInput' maxInput);  	vectorInputs [2].text = z.ToString ();  }  
Magic Number,AdvanceRTSCameraDemo,GUIVector3,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\Advanced RTS Camera\Demo\GUI\Scripts\GUIVector3.cs,ValidateVector,The following statement contains a magic number: if (float.TryParse (vectorInputs [2].text' out z) && clampInput && (z > maxInput || z < minInput)) {  	z = Mathf.Clamp (z' minInput' maxInput);  	vectorInputs [2].text = z.ToString ();  }  
Magic Number,AdvanceRTSCameraDemo,GUIVector3,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\Advanced RTS Camera\Demo\GUI\Scripts\GUIVector3.cs,ValidateVector,The following statement contains a magic number: vectorInputs [2].text = z.ToString ();  
Magic Number,UnityTest,ActionBase,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\ActionBase.cs,GetDepthOfSearch,The following statement contains a magic number: return 2;  
Magic Number,UnityTest,FloatComparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\FloatComparer.cs,GetDepthOfSearch,The following statement contains a magic number: return 3;  
Magic Number,UnityTest,Vector2Comparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\Vector2Comparer.cs,GetDepthOfSearch,The following statement contains a magic number: return 3;  
Magic Number,UnityTest,Vector4Comparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\Vector4Comparer.cs,GetDepthOfSearch,The following statement contains a magic number: return 3;  
Magic Number,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,ResolveNetworkConnection,The following statement contains a magic number: while ((DateTime.Now - startTime) < timeout) {  	foreach (var networkResultSender in nrsList) {  		try {  			if (!networkResultSender.Ping ())  				continue;  		}  		catch (Exception e) {  			Debug.LogException (e);  			sendResultsOverNetwork = false;  			return null;  		}  		return networkResultSender;  	}  	Thread.Sleep (500);  }  
Magic Number,UnityTest,TestRunnerConfigurator,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunnerConfigurator.cs,ResolveNetworkConnection,The following statement contains a magic number: Thread.Sleep (500);  
Missing Default,UnityTest,ColliderComparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\ColliderComparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.Intersects:  	return a.Intersects (b);  case CompareType.DoesNotIntersect:  	return !a.Intersects (b);  }  
Missing Default,UnityTest,ComparerBase,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\ComparerBase.cs,GetFailureMessage,The following switch statement is missing a default case: switch (compareToType) {  case ComparerBase.CompareToType.CompareToObject:  	message += " (" + other + ")." + otherPropertyPath + " failed.";  	break;  case ComparerBase.CompareToType.CompareToConstantValue:  	message += " " + ConstValue + " failed.";  	break;  case ComparerBase.CompareToType.CompareToNull:  	message += " failed.";  	break;  }  
Missing Default,UnityTest,FloatComparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\FloatComparer.cs,Compare,The following switch statement is missing a default case: switch (compareTypes) {  case CompareTypes.Equal:  	return Math.Abs (a - b) < floatingPointError;  case CompareTypes.NotEqual:  	return Math.Abs (a - b) > floatingPointError;  case CompareTypes.Greater:  	return a > b;  case CompareTypes.Less:  	return a < b;  }  
Missing Default,UnityTest,IntComparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\IntComparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.Equal:  	return a == b;  case CompareType.NotEqual:  	return a != b;  case CompareType.Greater:  	return a > b;  case CompareType.GreaterOrEqual:  	return a >= b;  case CompareType.Less:  	return a < b;  case CompareType.LessOrEqual:  	return a <= b;  }  
Missing Default,UnityTest,IsRenderedByCamera,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\IsRenderedByCamera.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.IsVisible:  	return isVisible;  case CompareType.IsNotVisible:  	return !isVisible;  }  
Missing Default,UnityTest,StringComparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\StringComparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.Equal:  	return String.Compare (a' b' comparisonType) == 0;  case CompareType.NotEqual:  	return String.Compare (a' b' comparisonType) != 0;  case CompareType.Longer:  	return String.Compare (a' b' comparisonType) > 0;  case CompareType.Shorter:  	return String.Compare (a' b' comparisonType) < 0;  }  
Missing Default,UnityTest,Vector2Comparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\Vector2Comparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.MagnitudeEquals:  	return AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  case CompareType.MagnitudeNotEquals:  	return !AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  }  
Missing Default,UnityTest,Vector3Comparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\Vector3Comparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.MagnitudeEquals:  	return AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  case CompareType.MagnitudeNotEquals:  	return !AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  }  
Missing Default,UnityTest,Vector4Comparer,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\Assertions\Comparers\Vector4Comparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.MagnitudeEquals:  	return AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  case CompareType.MagnitudeNotEquals:  	return !AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  }  
Missing Default,UnityTest,TestRunner,C:\repos\Barabicus_RTSCameraProject\Assets\Camera Stuff\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,StateMachine,The following switch statement is missing a default case: switch (testState) {  case TestState.Success:  	LogMessage (finishedMessage);  	FinishTest (TestResult.ResultType.Success);  	break;  case TestState.Failure:  	LogMessage (failedMessage);  	FinishTest (TestResult.ResultType.Failed);  	break;  case TestState.Exception:  	LogMessage (failedExceptionMessage);  	FinishTest (TestResult.ResultType.FailedException);  	break;  case TestState.Timeout:  	LogMessage (timeoutMessage);  	FinishTest (TestResult.ResultType.Timeout);  	break;  case TestState.Ignored:  	LogMessage (ignoredMessage);  	FinishTest (TestResult.ResultType.Ignored);  	break;  }  
