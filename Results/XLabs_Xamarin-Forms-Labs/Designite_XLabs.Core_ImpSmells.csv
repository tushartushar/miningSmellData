Implementation smell,Namespace,Class,File,Method,Description
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadDouble,The following statement contains a magic number: return BitConverter.ToDouble(GetReversedBytes(8)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadSingle,The following statement contains a magic number: return BitConverter.ToSingle(GetReversedBytes(4)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadInt64,The following statement contains a magic number: return BitConverter.ToInt64(GetReversedBytes(8)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadUInt64,The following statement contains a magic number: return BitConverter.ToUInt64(GetReversedBytes(8)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadInt32,The following statement contains a magic number: return BitConverter.ToInt32(GetReversedBytes(4)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadUInt32,The following statement contains a magic number: return BitConverter.ToUInt32(GetReversedBytes(4)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadInt16,The following statement contains a magic number: return BitConverter.ToInt16(GetReversedBytes(2)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadUInt16,The following statement contains a magic number: return BitConverter.ToUInt16(GetReversedBytes(2)' 0);
Magic Number,XLabs,BigEndianReader,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Helpers\BigEndianReader.cs,ReadChar,The following statement contains a magic number: return BitConverter.ToChar(GetReversedBytes(2)' 0);
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,FromStream,The following statement contains a magic number: try              {                  using (var reader = new BigEndianReader(stream))                  {                      var ttfFile = new TtfFileInfo()                      {                          Version = reader.ReadInt32()                      };                        if (ttfFile.Version != 0x74727565 && ttfFile.Version != 0x00010000) return null;                        ttfFile.TableCount = reader.ReadInt16();                      reader.BaseStream.Seek(6' SeekOrigin.Current);                        for (var tableIndex = 0; tableIndex < ttfFile.TableCount; tableIndex++)                      {                          var tag = reader.ReadInt32();                          reader.BaseStream.Seek(4' SeekOrigin.Current);                          var offset = reader.ReadInt32();                          var length = reader.ReadInt32();                            if (tag != 0x6E616D65) continue;                            reader.BaseStream.Seek(offset' SeekOrigin.Begin);                            var table = reader.ReadBytes(length);                            var count = GetInt16(table' 2);                          var stringOffset = GetInt16(table' 4);                            for (var record = 0; record < count; record++)                          {                              var nameidOffset = record*12 + 6;                              var platformId = GetInt16(table' nameidOffset);                              var nameidValue = GetInt16(table' nameidOffset + 6);                                if (nameidValue != 4 || platformId != 1) continue;                                var nameLength = GetInt16(table' nameidOffset + 8);                              var nameOffset = stringOffset + GetInt16(table' nameidOffset + 10);                                if (nameOffset < 0 || nameOffset + nameLength >= table.Length) continue;                                ttfFile.FontName = Encoding.UTF8.GetString(table' nameOffset' nameLength);                              return ttfFile;                          }                      }                  }              }              catch              {                  return null;              }
Magic Number,XLabs.Utilities,TtfFileInfo,C:\repos\XLabs_Xamarin-Forms-Labs\src\Core\Utilities\TtfFileInfo.cs,GetInt16,The following statement contains a magic number: return (array[ offset ] & 0xFF) << 8 | (array[ offset + 1 ] & 0xFF);
