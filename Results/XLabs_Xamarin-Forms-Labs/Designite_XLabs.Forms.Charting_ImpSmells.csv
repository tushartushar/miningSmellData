Implementation smell,Namespace,Class,File,Method,Description
Complex Method,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawChart,Cyclomatic complexity of the method is 19
Long Parameter List,XLabs.Forms.Charting.Events,DoubleDrawingData,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Events\DoubleDrawingData.cs,DoubleDrawingData,The method has 5 parameters. Parameters: xFrom' yFrom' xTo' yTo' seriesNo
Long Parameter List,XLabs.Forms.Charting.Events,PieDrawingData,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Events\PieDrawingData.cs,PieDrawingData,The method has 5 parameters. Parameters: x' y' seriesNo' size' percentages
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawChart,The length of the statement  "				OnDrawGridLine(this' new DrawEventArgs<DoubleDrawingData>() { Data = new DoubleDrawingData(PADDING_LEFT' PADDING_TOP' PADDING_LEFT' HeightRequest' 0) });  //Y-axis " is 163.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawChart,The length of the statement  "				OnDrawGridLine(this' new DrawEventArgs<DoubleDrawingData>() { Data = new DoubleDrawingData(PADDING_LEFT' HeightRequest + 1' WidthRequest' HeightRequest + 1' 0) });      //X-axis " is 177.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The length of the statement  "			OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData((valueOfPart * noOfHorizontalLines).ToString()' 10' PADDING_TOP + 5) }); " is 155.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The length of the statement  "					OnDrawGridLine(this' new DrawEventArgs<DoubleDrawingData>() { Data = new DoubleDrawingData(PADDING_LEFT' PADDING_TOP + (quarterHeight * i)' WidthRequest' PADDING_TOP + (quarterHeight * i)' 0) }); " is 195.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The length of the statement  "				OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(currentValue.ToString()' 10' PADDING_TOP + (quarterHeight * i) + 5) }); " is 154.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawBarChart,The length of the statement  "				OnDrawBar(this' new DrawEventArgs<DoubleDrawingData>() { Data = new DoubleDrawingData(widthIterator + 1' ((HeightRequest - PADDING_TOP) - heightOfBar) + PADDING_TOP' (widthIterator + widthPerBar) - 1' HeightRequest' barNo) }); " is 226.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLineChart,The length of the statement  "					OnDrawLine(this' new DrawEventArgs<DoubleDrawingData>() { Data = new DoubleDrawingData(previousPoints[0]' previousPoints[1]' x' y' lineNo) }); " is 142.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLineChart,The length of the statement  "				OnDrawCircle(this' new DrawEventArgs<SingleDrawingData>() { Data = new SingleDrawingData(widthIterator + (widthOfAllBars / 2)' ((HeightRequest - PADDING_TOP) - heightOfLine) + PADDING_TOP' lineNo) }); " is 200.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawPieChart,The length of the statement  "			OnDrawPie(this' new DrawEventArgs<PieDrawingData> { Data = new PieDrawingData(WidthRequest / 2' HeightRequest / 2' pieNo' sizeOfCircle' values) }); " is 147.
Long Statement,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLabels,The length of the statement  "				OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(points[i].Label' (widthIterator + widthOfAllBars / 2) - (points[i].Label.Length * 4)' HeightRequest + 25) }); " is 192.
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawChart,The following statement contains a magic number: properties.Count() >= 2
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: int noOfHorizontalLines = 4;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: double quarterValue = highestValue / 4;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: double valueOfPart = ((int)Math.Round(quarterValue / 10.0)) * 10;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: double valueOfPart = ((int)Math.Round(quarterValue / 10.0)) * 10;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: noOfHorizontalLines = 5;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData((valueOfPart * noOfHorizontalLines).ToString()' 10' PADDING_TOP + 5) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData((valueOfPart * noOfHorizontalLines).ToString()' 10' PADDING_TOP + 5) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(currentValue.ToString()' 10' PADDING_TOP + (quarterHeight * i) + 5) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawGrid,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(currentValue.ToString()' 10' PADDING_TOP + (quarterHeight * i) + 5) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawBarChart,The following statement contains a magic number: double widthIterator = 2 + (barNo * widthPerBar) + PADDING_LEFT;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLineChart,The following statement contains a magic number: double widthIterator = 2 + PADDING_LEFT;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLineChart,The following statement contains a magic number: double[] previousPoints = new double[2];
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLineChart,The following statement contains a magic number: double x = widthIterator + (widthOfAllBars / 2);
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLineChart,The following statement contains a magic number: OnDrawCircle(this' new DrawEventArgs<SingleDrawingData>() { Data = new SingleDrawingData(widthIterator + (widthOfAllBars / 2)' ((HeightRequest - PADDING_TOP) - heightOfLine) + PADDING_TOP' lineNo) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawPieChart,The following statement contains a magic number: double sizeOfCircle = ((WidthRequest > HeightRequest) ? HeightRequest / 2 : WidthRequest / 2);
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawPieChart,The following statement contains a magic number: double sizeOfCircle = ((WidthRequest > HeightRequest) ? HeightRequest / 2 : WidthRequest / 2);
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawPieChart,The following statement contains a magic number: double degreesPerValue = 360 / values.Sum();
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawPieChart,The following statement contains a magic number: OnDrawPie(this' new DrawEventArgs<PieDrawingData> { Data = new PieDrawingData(WidthRequest / 2' HeightRequest / 2' pieNo' sizeOfCircle' values) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawPieChart,The following statement contains a magic number: OnDrawPie(this' new DrawEventArgs<PieDrawingData> { Data = new PieDrawingData(WidthRequest / 2' HeightRequest / 2' pieNo' sizeOfCircle' values) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLabels,The following statement contains a magic number: double widthIterator = 2 + PADDING_LEFT;
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLabels,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(points[i].Label' (widthIterator + widthOfAllBars / 2) - (points[i].Label.Length * 4)' HeightRequest + 25) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLabels,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(points[i].Label' (widthIterator + widthOfAllBars / 2) - (points[i].Label.Length * 4)' HeightRequest + 25) });
Magic Number,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawLabels,The following statement contains a magic number: OnDrawText(this' new DrawEventArgs<TextDrawingData>() { Data = new TextDrawingData(points[i].Label' (widthIterator + widthOfAllBars / 2) - (points[i].Label.Length * 4)' HeightRequest + 25) });
Magic Number,XLabs.Forms.Charting.Events,SingleDrawingData,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Events\SingleDrawingData.cs,SingleDrawingData,The following statement contains a magic number: Size = 5;
Magic Number,XLabs.Forms.Charting,MathHelper,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\MathHelper.cs,Deg2Rad,The following statement contains a magic number: return Math.PI / 180 * degrees;
Magic Number,XLabs.Forms.Charting,MathHelper,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\MathHelper.cs,Rad2Deg,The following statement contains a magic number: return 180.0 / Math.PI * radians;
Missing Default,XLabs.Forms.Charting.Controls,Chart,D:\research\architectureSmells\repos\XLabs_Xamarin-Forms-Labs\src\Charting\XLabs.Forms.Charting\Controls\Chart.cs,DrawChart,The following switch statement is missing a default case: switch (series.Type)  					{  						case ChartType.Bar:  							DrawBarChart(highestValue' widthPerBar' i' series.Points);  							break;  						case ChartType.Line:  							DrawLineChart(highestValue' widthPerBar' i' series.Points);  							break;  					}
