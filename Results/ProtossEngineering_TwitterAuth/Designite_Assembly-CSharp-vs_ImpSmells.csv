Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GetAccessToken,The method has 5 parameters.
Long Parameter List,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GetHeaderWithAccessToken,The method has 6 parameters.
Long Parameter List,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,PostTweet,The method has 5 parameters.
Long Statement,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GetAccessToken,The length of the statement  "		if (!string.IsNullOrEmpty (response.Token) && !string.IsNullOrEmpty (response.TokenSecret) && !string.IsNullOrEmpty (response.UserId) && !string.IsNullOrEmpty (response.ScreenName)) { " is 183.
Long Statement,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,PostTweet,The length of the statement  "		headers ["Authorization"] = GetHeaderWithAccessToken ("POST"' PostTweetURL' consumerKey' consumerSecret' response' parameters); " is 127.
Long Statement,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GenerateSignature,The length of the statement  "	string signatureBaseString = string.Format (CultureInfo.InvariantCulture' "{0}&{1}&{2}"' httpMethod' UrlEncode (NormalizeUrl (new Uri (url)))' UrlEncode (nonSecretParameters)); " is 176.
Long Statement,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GenerateSignature,The length of the statement  "	string key = string.Format (CultureInfo.InvariantCulture' "{0}&{1}"' UrlEncode (parameters ["oauth_consumer_secret"])' parameters.ContainsKey ("oauth_token_secret") ? UrlEncode (parameters ["oauth_token_secret"]) : string.Empty); " is 229.
Long Statement,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,UrlEncode,The length of the statement  "	value = value.Replace ("("' "%28").Replace (")"' "%29").Replace ("$"' "%24").Replace ("!"' "%21").Replace ("*"' "%2A").Replace ("'"' "%27"); " is 140.
Long Statement,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,UrlEncode,The length of the statement  "		parameterString.Append (string.Format (CultureInfo.InvariantCulture' "{0}={1}"' UrlEncode (item.Key)' UrlEncode (item.Value))); " is 127.
Complex Conditional,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GetAccessToken,The conditional expression  "!string.IsNullOrEmpty (response.Token) && !string.IsNullOrEmpty (response.TokenSecret) && !string.IsNullOrEmpty (response.UserId) && !string.IsNullOrEmpty (response.ScreenName)"  is complex.
Complex Conditional,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,NormalizeUrl,The conditional expression  "!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))"  is complex.
Magic Number,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,PostTweet,The following statement contains a magic number: if (string.IsNullOrEmpty (text) || text.Length > 140) {  	Debug.Log (string.Format ("PostTweet - text[{0}] is empty or too long."' text));  	callback (false);  }  else {  	Dictionary<string' string> parameters = new Dictionary<string' string> ();  	parameters.Add ("status"' text);  	// Add data to the form to post.  	WWWForm form = new WWWForm ();  	form.AddField ("status"' text);  	// HTTP header  	var headers = new Hashtable ();  	headers ["Authorization"] = GetHeaderWithAccessToken ("POST"' PostTweetURL' consumerKey' consumerSecret' response' parameters);  	WWW web = new WWW (PostTweetURL' form.data' headers);  	yield return web;  	if (!string.IsNullOrEmpty (web.error)) {  		Debug.Log (string.Format ("PostTweet - failed. {0}"' web.error));  		callback (false);  	}  	else {  		string error = Regex.Match (web.text' @"<error>([^&]+)</error>").Groups [1].Value;  		if (!string.IsNullOrEmpty (error)) {  			Debug.Log (string.Format ("PostTweet - failed. {0}"' error));  			callback (false);  		}  		else {  			callback (true);  		}  	}  }  
Magic Number,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,GenerateNonce,The following statement contains a magic number: return new System.Random ().Next (123400' int.MaxValue).ToString ("X"' CultureInfo.InvariantCulture);  
Magic Number,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,NormalizeUrl,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))) {  	normalizedUrl += ":" + url.Port;  }  
Magic Number,Twitter,API,C:\repos\ProtossEngineering_TwitterAuth\UnityTwitter\Assets\Twitter.cs,NormalizeUrl,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))) {  	normalizedUrl += ":" + url.Port;  }  
