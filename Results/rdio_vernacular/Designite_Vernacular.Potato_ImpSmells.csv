Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Vernacular.Potato,Message,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato\Message.cs,Generate,Cyclomatic complexity of the method is 11
Complex Method,Vernacular.Potato,HeaderCollection,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato\HeaderCollection.cs,PopulateWithRequiredHeaders,Cyclomatic complexity of the method is 9
Complex Method,Vernacular.Potato.Internal,Lexer,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato.Internal\Lexer.cs,LexMessage,Cyclomatic complexity of the method is 14
Complex Method,Vernacular.Potato.Internal,Parser,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato.Internal\Parser.cs,Parse,Cyclomatic complexity of the method is 9
Magic Number,Vernacular.Potato.Internal,Parser,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato.Internal\Parser.cs,ParseHeaders,The following statement contains a magic number: var key_value = line.Split (new [] { ':' }' 2);
Magic Number,Vernacular.Potato.Internal,Parser,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato.Internal\Parser.cs,ParseHeaders,The following statement contains a magic number: key_value == null || key_value.Length != 2
Magic Number,Vernacular.Potato.Internal,Parser,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato.Internal\Parser.cs,ParseIdentifier,The following statement contains a magic number: switch (match.Groups [1].Value) {                 case "id":                     type = MessageType.SingularIdentifier;                     plural_order = -1;                     break;                 case "id_plural":                     type = MessageType.PluralIdentifier;                     plural_order = -1;                     break;                 case "str":                     type = MessageType.SingularString;                     plural_order = 0;                     break;                 case "ctxt":                     type = MessageType.Context;                     plural_order = -1;                     break;                 default:                     if (match.Groups.Count == 3) {                         type = MessageType.PluralString;                         plural_order = Int32.Parse (match.Groups [2].Value);                     } else {                         throw new SyntaxException(lexer' "invalid identifier: " + (string)identifier);                     }                     break;             }
Magic Number,Vernacular.Potato.Internal,Parser,C:\research\architectureSmells\repos\rdio_vernacular\Vernacular.Potato\Vernacular.Potato.Internal\Parser.cs,ParseIdentifier,The following statement contains a magic number: switch (match.Groups [1].Value) {                 case "id":                     type = MessageType.SingularIdentifier;                     plural_order = -1;                     break;                 case "id_plural":                     type = MessageType.PluralIdentifier;                     plural_order = -1;                     break;                 case "str":                     type = MessageType.SingularString;                     plural_order = 0;                     break;                 case "ctxt":                     type = MessageType.Context;                     plural_order = -1;                     break;                 default:                     if (match.Groups.Count == 3) {                         type = MessageType.PluralString;                         plural_order = Int32.Parse (match.Groups [2].Value);                     } else {                         throw new SyntaxException(lexer' "invalid identifier: " + (string)identifier);                     }                     break;             }
