Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,AudioSwitcher.AudioApi.CoreAudio.Interfaces,IAudioClient,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\IAudioClient.cs,Initialize,The method has 6 parameters. Parameters: shareMode' streamFlags' hnsBufferDuration' hnsPeriodicity' pFormat' audioSessionGuid
Long Parameter List,AudioSwitcher.AudioApi.CoreAudio.Interfaces,WaveFormat,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\WaveFormat.cs,WaveFormat,The method has 5 parameters. Parameters: rate' bits' channelMask' formatTag' totalSize
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSessionController,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSessionController.cs,,The length of the parameter _processTerminatedSubscription is 30.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_DEVICE_INTERFACE_FRIENDLY_NAME is 35.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_FORM_FACTOR is 31.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_CONTROL_PANEL_PAGE_PROVIDER is 47.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_ASSOCIATION is 31.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_PHYSICAL_SPEAKERS is 37.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_DISABLE_SYS_FX is 34.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_FULL_RANGE_SPEAKERS is 39.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_SUPPORTS_EVENT_DRIVEN_MODE is 46.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENDPOINT_JACK_SUB_TYPE is 33.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio,PropertyKeys,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKeys.cs,,The length of the parameter PKEY_AUDIO_ENGINE_DEVICE_FORMAT is 31.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio.Interfaces,ComInterfaceIds,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\ComInterfaceIds.cs,,The length of the parameter AUDIO_SESSION_NOTIFICATION_IID is 30.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio.Interfaces,ComInterfaceIds,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\ComInterfaceIds.cs,,The length of the parameter AUDIO_VOLUME_DUCK_NOTIFICATION_IID is 34.
Long Identifier,AudioSwitcher.AudioApi.CoreAudio.Interfaces,ComInterfaceIds,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\ComInterfaceIds.cs,,The length of the parameter AUDIO_ENDPOINT_VOLUME_CALLBACK_IID is 34.
Long Statement,AudioSwitcher.AudioApi.CoreAudio,CoreAudioDevice,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioDevice.cs,LoadAudioMeterInformation,The length of the statement  "                _audioMeterInformation = new ThreadLocal<IAudioMeterInformation>(() => Marshal.GetUniqueObjectForIUnknown(_audioMeterInformationPtr) as IAudioMeterInformation); " is 160.
Long Statement,AudioSwitcher.AudioApi.CoreAudio,CoreAudioDevice,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioDevice.cs,IconStringToDeviceIcon,The length of the statement  "                var imageKey = iconStr.Substring(iconStr.IndexOf("'"' StringComparison.InvariantCultureIgnoreCase) + 1).Replace("-"' ""); " is 121.
Long Statement,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSessionController,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSessionController.cs,CacheSessionWrapper,The length of the statement  "                var existing = _sessionCache.FirstOrDefault(x => x.ProcessId == managedSession.ProcessId && String.Equals(x.Id' managedSession.Id)); " is 132.
Long Statement,AudioSwitcher.AudioApi.CoreAudio,ComObjectFactory,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\ComObjectFactory.cs,GetDeviceEnumerator,The length of the statement  "            return Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(ComInterfaceIds.DEVICE_ENUMERATOR_CID))) as IMultimediaDeviceEnumerator; " is 135.
Long Statement,AudioSwitcher.AudioApi.CoreAudio.Interfaces,WaveFormatExtensible,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\WaveFormatExtensible.cs,ToString,The length of the statement  "                $"{base.ToString()} wBitsPerSample:{wValidBitsPerSample} dwChannelMask:{dwChannelMask} subFormat:{subFormat} extraSize:{ExtraSize}"; " is 132.
Empty Catch Block,AudioSwitcher.AudioApi.CoreAudio,CoreAudioDevice,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioDevice.cs,Timer_UpdatePeakValue,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSession,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSession.cs,Timer_UpdatePeakValue,The method has an empty catch block.
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioDevice,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioDevice.cs,SetVolumeAsync,The following statement contains a magic number: if (Math.Abs(_volume - volume) < 0.1)                  return _volume;
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioDevice,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioDevice.cs,Timer_UpdatePeakValue,The following statement contains a magic number: if (Math.Abs(_peakValue - peakValue) > 0.001)              {                  _peakValue = peakValue;                  OnPeakValueChanged(peakValue * 100);              }
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioDevice,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioDevice.cs,Timer_UpdatePeakValue,The following statement contains a magic number: if (Math.Abs(_peakValue - peakValue) > 0.001)              {                  _peakValue = peakValue;                  OnPeakValueChanged(peakValue * 100);              }
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSession,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSession.cs,SetVolumeAsync,The following statement contains a magic number: if (Math.Abs(_volume - volume) < 0.1)                  return _volume;
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSession,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSession.cs,Timer_UpdatePeakValue,The following statement contains a magic number: if (Math.Abs(_peakValue - peakValue) > 0.001)              {                  _peakValue = peakValue;                  OnPeakValueChanged(peakValue * 100);              }
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSession,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSession.cs,Timer_UpdatePeakValue,The following statement contains a magic number: if (Math.Abs(_peakValue - peakValue) > 0.001)              {                  _peakValue = peakValue;                  OnPeakValueChanged(peakValue * 100);              }
Magic Number,AudioSwitcher.AudioApi.CoreAudio,CoreAudioSession,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\CoreAudioSession.cs,RefreshVolume,The following statement contains a magic number: ComThread.Invoke(() =>              {                  float vol;                  SimpleAudioVolume.GetMasterVolume(out vol);                  _volume = vol * 100;                    bool isMuted;                  SimpleAudioVolume.GetMute(out isMuted);                    _isMuted = isMuted;              });
Magic Number,AudioSwitcher.AudioApi.CoreAudio,Extensions,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Extensions.cs,NormalizeVolume,The following statement contains a magic number: if (volume >= 100)                  return  1;
Magic Number,AudioSwitcher.AudioApi.CoreAudio,Extensions,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Extensions.cs,NormalizeVolume,The following statement contains a magic number: return (float)((volume + 0.0001F) / 100);
Magic Number,AudioSwitcher.AudioApi.CoreAudio,Extensions,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Extensions.cs,DeNormalizeVolume,The following statement contains a magic number: return volume * 100;
Magic Number,AudioSwitcher.AudioApi.CoreAudio,AudioEndpointVolumeCallback,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\AudioEndpointVolumeCallback.cs,OnNotify,The following statement contains a magic number: try              {                  //Since AUDIO_VOLUME_NOTIFICATION_DATA is dynamic in length based on the                  //number of audio channels available we cannot just call PtrToStructure                   //to get all data' thats why it is split up into two steps' first the static                  //data is marshalled into the data structure' then with some IntPtr math the                  //remaining floats are read from memory.                  //                  var data =                      (AudioVolumeNotificationDataStruct)                          Marshal.PtrToStructure(notifyData' typeof(AudioVolumeNotificationDataStruct));                    //Determine offset in structure of the first float                  var offset = Marshal.OffsetOf(typeof(AudioVolumeNotificationDataStruct)' "ChannelVolume");                  //Determine offset in memory of the first float                  var firstFloatPtr = (IntPtr) ((long) notifyData + (long) offset);                    //Something weird happened' better to ignore it and move on                  if (data.Channels > 100)                      return 0;                    var voldata = new float[data.Channels];                    //Read all floats from memory.                  for (var i = 0; i < data.Channels; i++)                  {                      voldata[i] = (float) Marshal.PtrToStructure(firstFloatPtr' typeof(float));                  }                    //Create combined structure and Fire Event in parent class.                  var notificationData = new AudioVolumeNotificationData(data.EventContext' data.Muted'                      data.MasterVolume' voldata);                    var p = _handler.Target as AudioEndpointVolume;                    if (_handler.IsAlive)                      p?.FireNotification(notificationData);              }              catch(Exception ex)              {                  return Marshal.GetHRForException(ex);              }
Magic Number,AudioSwitcher.AudioApi.CoreAudio,PeakValueTimer,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PeakValueTimer.cs,PeakValueTimer,The following statement contains a magic number: _peakValueTimer = new Timer              {                  Interval = 100'                  AutoReset = false              };
Magic Number,AudioSwitcher.AudioApi.CoreAudio,ProcessMonitor,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\ProcessMonitor.cs,ProcessMonitor,The following statement contains a magic number: _processExitTimer = new Timer              {                  Interval = 1500'                  AutoReset = false              };
Magic Number,AudioSwitcher.AudioApi.CoreAudio,PropertyKey,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\PropertyKey.cs,GetHashCode,The following statement contains a magic number: return FormatId.GetHashCode()*17 + PropertyId.GetHashCode();
Magic Number,AudioSwitcher.AudioApi.CoreAudio.Interfaces,WaveFormat,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\WaveFormat.cs,WaveFormat,The following statement contains a magic number: blockAlign = (short)(channels * (bitsPerSample / 8));
Magic Number,AudioSwitcher.AudioApi.CoreAudio.Interfaces,WaveFormat,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.CoreAudio\Internal\Interfaces\WaveFormat.cs,ToString,The following statement contains a magic number: switch (waveFormatTag)              {                  case WaveFormatEncoding.Pcm:                  case WaveFormatEncoding.Extensible:                      // formatTag just has some extra bits after the PCM header                      return $"{bitsPerSample} bit PCM: {sampleRate/1000}kHz {channels} channels";                  default:                      return waveFormatTag.ToString();              }
