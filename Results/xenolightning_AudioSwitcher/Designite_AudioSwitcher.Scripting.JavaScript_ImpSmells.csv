Implementation smell,Namespace,Class,File,Method,Description
Missing Default,AudioSwitcher.Scripting.JavaScript.Internal,JavaScriptDeviceState,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.Scripting.JavaScript\Internal\JavaScriptDeviceState.cs,GetJavascriptDeviceState,The following switch statement is missing a default case: switch (state)              {                  case DeviceState.Active:                      return ACTIVE;                  case DeviceState.NotPresent:                      return NOTPRESENT;                  case DeviceState.Unplugged:                      return UNPLUGGED;                  case DeviceState.Disabled:                      return DISABLED;                  case DeviceState.All:                      return ALL;              }
Missing Default,AudioSwitcher.Scripting.JavaScript.Internal,JavaScriptDeviceType,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.Scripting.JavaScript\Internal\JavaScriptDeviceType.cs,GetJavascriptDeviceType,The following switch statement is missing a default case: switch (type)              {                  case DeviceType.Playback:                      return PLAYBACK;                  case DeviceType.Capture:                      return CAPTURE;                  case DeviceType.All:                      return ALL;              }
Missing Default,AudioSwitcher.Scripting.JavaScript.Internal.Libraries,AudioSwitcherLibrary,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.Scripting.JavaScript\Internal\Libraries\AudioSwitcherLibrary.cs,GetAudioDevices,The following switch statement is missing a default case: switch (type.ToUpper())              {                  case JavaScriptDeviceType.ALL:                      devices.AddRange(AudioController.GetPlaybackDevices());                      devices.AddRange(AudioController.GetCaptureDevices());                      break;                  case JavaScriptDeviceType.PLAYBACK:                      devices.AddRange(AudioController.GetPlaybackDevices());                      break;                  case JavaScriptDeviceType.CAPTURE:                      devices.AddRange(AudioController.GetCaptureDevices());                      break;              }
Missing Default,AudioSwitcher.Scripting.JavaScript.Internal.Libraries,AudioSwitcherLibrary,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.Scripting.JavaScript\Internal\Libraries\AudioSwitcherLibrary.cs,GetAudioDevice,The following switch statement is missing a default case: switch (type.ToUpper())              {                  case JavaScriptDeviceType.ALL:                      device = AudioController.GetDevices().FirstOrDefault(x =>                           x.Id == id ||                           String.Equals(x.Name' name' StringComparison.InvariantCultureIgnoreCase));                      break;                  case JavaScriptDeviceType.PLAYBACK:                      device = AudioController.GetPlaybackDevices().FirstOrDefault(x =>                           x.Id == id ||                           String.Equals(x.Name' name' StringComparison.InvariantCultureIgnoreCase));                      break;                  case JavaScriptDeviceType.CAPTURE:                      device = AudioController.GetCaptureDevices().FirstOrDefault(x =>                           x.Id == id ||                           String.Equals(x.Name' name' StringComparison.InvariantCultureIgnoreCase));                      break;              }
Missing Default,AudioSwitcher.Scripting.JavaScript.Internal.Libraries,AudioSwitcherLibrary,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.Scripting.JavaScript\Internal\Libraries\AudioSwitcherLibrary.cs,GetDefaultDevice,The following switch statement is missing a default case: switch (type)              {                  case JavaScriptDeviceType.PLAYBACK:                      return CreateJavaScriptAudioDevice(AudioController.DefaultPlaybackDevice);                  case JavaScriptDeviceType.CAPTURE:                      return CreateJavaScriptAudioDevice(AudioController.DefaultCaptureDevice);              }
Missing Default,AudioSwitcher.Scripting.JavaScript.Internal.Libraries,AudioSwitcherLibrary,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.Scripting.JavaScript\Internal\Libraries\AudioSwitcherLibrary.cs,GetDefaultCommunicationDevice,The following switch statement is missing a default case: switch (type.ToUpper())              {                  case JavaScriptDeviceType.PLAYBACK:                      return CreateJavaScriptAudioDevice(AudioController.DefaultPlaybackCommunicationsDevice);                  case JavaScriptDeviceType.CAPTURE:                      return CreateJavaScriptAudioDevice(AudioController.DefaultCaptureCommunicationsDevice);              }
