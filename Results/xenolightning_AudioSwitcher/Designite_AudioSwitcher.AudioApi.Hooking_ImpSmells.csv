Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,AudioSwitcher.AudioApi.Hooking,RemoteInterface,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\RemoteInterface.cs,RemoteInterface,The method has 5 parameters. Parameters: systemId' canUnload' hookInstalled' hookUninstalled' errorHandler
Long Statement,AudioSwitcher.AudioApi.Hooking.ComObjects,ComObjectFactory,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\ComObjects\ComObjectFactory.cs,GetDeviceEnumerator,The length of the statement  "            return Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(ComIIds.DEVICE_ENUMERATOR_CID))) as IMultimediaDeviceEnumerator; " is 127.
Long Statement,AudioSwitcher.AudioApi.Hooking,EntryPoint,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\EntryPoint.cs,Run,The length of the statement  "                var cci = new COMClassInfo(Type.GetTypeFromCLSID(new Guid(ComIIds.DEVICE_ENUMERATOR_CID))' typeof(IMultimediaDeviceEnumerator)' "GetDefaultAudioEndpoint"); " is 155.
Empty Catch Block,AudioSwitcher.AudioApi.Hooking,DefaultDeviceHook,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\DefaultDeviceHook.cs,SetDefaults,The method has an empty catch block.
Empty Catch Block,AudioSwitcher.AudioApi.Hooking,EntryPoint,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\EntryPoint.cs,ReportError,The method has an empty catch block.
Magic Number,AudioSwitcher.AudioApi.Hooking,DefaultDeviceHook,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\DefaultDeviceHook.cs,Hook,The following statement contains a magic number: try              {                  RemoteHooking.Inject(                      processId'                      InjectionOptions.DoNotRequireStrongName'                      typeof(IMultimediaDeviceEnumerator).Assembly.Location'                      typeof(IMultimediaDeviceEnumerator).Assembly.Location'                      _channelName);                    //2000ms due time. This will give the hook 2seconds to become active                  //then it will check every 500ms                  _hookIsLiveTimer = new Timer(HookIsLive' null' 2000' 500);                  _lastMessageCount = -1;                    _completeSignalled = false;                    return true;              }              catch (Exception ex)              {                  Status = EHookStatus.Inactive;                  Error?.Invoke(_hookedProcessId' ex);              }
Magic Number,AudioSwitcher.AudioApi.Hooking,DefaultDeviceHook,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\DefaultDeviceHook.cs,Hook,The following statement contains a magic number: try              {                  RemoteHooking.Inject(                      processId'                      InjectionOptions.DoNotRequireStrongName'                      typeof(IMultimediaDeviceEnumerator).Assembly.Location'                      typeof(IMultimediaDeviceEnumerator).Assembly.Location'                      _channelName);                    //2000ms due time. This will give the hook 2seconds to become active                  //then it will check every 500ms                  _hookIsLiveTimer = new Timer(HookIsLive' null' 2000' 500);                  _lastMessageCount = -1;                    _completeSignalled = false;                    return true;              }              catch (Exception ex)              {                  Status = EHookStatus.Inactive;                  Error?.Invoke(_hookedProcessId' ex);              }
Magic Number,AudioSwitcher.AudioApi.Hooking,DefaultDeviceHook,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\DefaultDeviceHook.cs,UnHook,The following statement contains a magic number: _unhookWaitEvent.WaitOne(1000);
Magic Number,AudioSwitcher.AudioApi.Hooking,DefaultDeviceHook,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\DefaultDeviceHook.cs,UnHook,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,AudioSwitcher.AudioApi.Hooking,EntryPoint,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\EntryPoint.cs,Run,The following statement contains a magic number: try              {                  //Create the DefaultDevice Hook                  var cci = new COMClassInfo(Type.GetTypeFromCLSID(new Guid(ComIIds.DEVICE_ENUMERATOR_CID))' typeof(IMultimediaDeviceEnumerator)' "GetDefaultAudioEndpoint");                  cci.Query();                    var hook = LocalHook.Create(cci.MethodPointers[0]' new DGetDefaultAudioEndpoint(GetDefaultAudioEndpoint)' this);                    hook.ThreadACL.SetExclusiveACL(new[] { 0 });                    //Sleep here so the hook takes effect                  Thread.Sleep(50);                    //Signal the hook installed' and get the response from the server                  if (!_interface.HookInstalled())                      return;                }              catch (Exception e)              {                  ReportError(_interface' e);                  return;              }
Magic Number,AudioSwitcher.AudioApi.Hooking,EntryPoint,C:\repos\xenolightning_AudioSwitcher\AudioSwitcher.AudioApi.Hooking\EntryPoint.cs,Run,The following statement contains a magic number: try              {                  while (!_interface.CanUnload())                  {                      Thread.Sleep(200);                  }                    _interface.HookUninstalled(RemoteHooking.GetCurrentProcessId());              }              catch (Exception e)              {                  ReportError(_interface' e);              }
