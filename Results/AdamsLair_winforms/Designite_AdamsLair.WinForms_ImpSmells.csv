Implementation smell,Namespace,Class,File,Method,Description
Long Method,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The method has 402 lines of code.
Long Method,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The method has 152 lines of code.
Long Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The method has 172 lines of code.
Long Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The method has 221 lines of code.
Long Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The method has 152 lines of code.
Long Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The method has 228 lines of code.
Long Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The method has 140 lines of code.
Long Method,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The method has 116 lines of code.
Long Method,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnKeyDown,The method has 145 lines of code.
Complex Method,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,Cyclomatic complexity of the method is 14
Complex Method,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,Cyclomatic complexity of the method is 9
Complex Method,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitCheckBox,Cyclomatic complexity of the method is 14
Complex Method,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandNode,Cyclomatic complexity of the method is 10
Complex Method,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,Cyclomatic complexity of the method is 31
Complex Method,AdamsLair.WinForms,ReflectionHelper,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ReflectionHelper.cs,GetTypeCSCodeName,Cyclomatic complexity of the method is 13
Complex Method,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,PickModelIndexAt,Cyclomatic complexity of the method is 18
Complex Method,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,UpdateSelectionIndices,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,ProcessUserItemClick,Cyclomatic complexity of the method is 9
Complex Method,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnPaintItem,Cyclomatic complexity of the method is 12
Complex Method,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnKeyDown,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnPaint,Cyclomatic complexity of the method is 13
Complex Method,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,Cyclomatic complexity of the method is 10
Complex Method,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,DefaultListResizer,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,Cyclomatic complexity of the method is 14
Complex Method,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,OnEditedTypeChanged,Cyclomatic complexity of the method is 12
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,Cyclomatic complexity of the method is 25
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,GetCurvePoints,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateDisplayedGraphInfo,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnModelGraphsAdded,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaint,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,Cyclomatic complexity of the method is 20
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetTrackAtPos,Cyclomatic complexity of the method is 13
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateMouseoverState,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnModelTracksAdded,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnKeyDown,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,Cyclomatic complexity of the method is 30
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,Cyclomatic complexity of the method is 14
Complex Method,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,Cyclomatic complexity of the method is 25
Complex Method,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintIndentExpandButton,Cyclomatic complexity of the method is 12
Complex Method,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnMouseDown,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.PropertyEditing,MemberwisePropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\MemberwisePropertyEditor.cs,VerifyReflectedTypeEditors,Cyclomatic complexity of the method is 10
Complex Method,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,GetFocusReciever,Cyclomatic complexity of the method is 9
Complex Method,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,OnMouseMove,Cyclomatic complexity of the method is 9
Complex Method,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,OnKeyDown,Cyclomatic complexity of the method is 28
Complex Method,AdamsLair.WinForms.PropertyEditing,MainEditorProvider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,CreateEditor,Cyclomatic complexity of the method is 10
Complex Method,AdamsLair.WinForms.PropertyEditing.Templates,ComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\ComboBoxEditorTemplate.cs,OnKeyDown,Cyclomatic complexity of the method is 14
Complex Method,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,OnKeyDown,Cyclomatic complexity of the method is 11
Complex Method,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,DefaultValueStringGenerator,Cyclomatic complexity of the method is 8
Complex Method,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnKeyDown,Cyclomatic complexity of the method is 9
Complex Method,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnKeyDown,Cyclomatic complexity of the method is 24
Long Parameter List,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupGradient,The method has 5 parameters. Parameters: tl' tr' bl' br' accuracy
Long Parameter List,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupXYGradient,The method has 5 parameters. Parameters: left' right' bottom' top' accuracy
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The method has 8 parameters. Parameters: g' text' font' textRect' textColor' align' lineAlign' trimming
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,MeasureStringLine,The method has 7 parameters. Parameters: g' text' measureRanges' font' textRect' align' lineAlign
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,PickCharStringLine,The method has 6 parameters. Parameters: text' font' textRect' pickLoc' align' lineAlign
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The method has 5 parameters. Parameters: g' rect' state' style' backColor
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The method has 11 parameters. Parameters: g' rect' text' font' textColor' backColor' state' style' scroll' cursorPos' selLength
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,PickCharTextField,The method has 6 parameters. Parameters: rect' text' font' style' pickLoc' scroll
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetCharPosTextField,The method has 6 parameters. Parameters: rect' text' font' style' index' scroll
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The method has 5 parameters. Parameters: g' rect' state' text' icon
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The method has 5 parameters. Parameters: g' rect' state' text' icon
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The method has 5 parameters. Parameters: g' rect' state' text' icon
Long Parameter List,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The method has 5 parameters. Parameters: g' rect' state' text' icon
Long Parameter List,AdamsLair.WinForms.ItemViews,TiledViewItemMouseEventArgs,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\EventArgs\TiledViewItemMouseEventArgs.cs,TiledViewItemMouseEventArgs,The method has 5 parameters. Parameters: view' modelIndex' item' location' buttons
Long Parameter List,AdamsLair.WinForms.ItemViews,TiledViewItemDrawEventArgs,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\EventArgs\TiledViewItemDrawEventArgs.cs,TiledViewItemDrawEventArgs,The method has 7 parameters. Parameters: view' modelIndex' item' graphics' itemRect' selected' hovered
Long Parameter List,AdamsLair.WinForms.TimelineControls,TimelineViewSelectionEventArgs,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\EventArgs\TimelineViewSelectionEventArgs.cs,TimelineViewSelectionEventArgs,The method has 5 parameters. Parameters: view' begin' end' lastBegin' lastEnd
Long Parameter List,AdamsLair.WinForms.TimelineControls,TimelineViewTrackPaintEventArgs,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\EventArgs\TimelineViewTrackPaintEventArgs.cs,TimelineViewTrackPaintEventArgs,The method has 6 parameters. Parameters: track' graphics' qualityHint' targetRect' beginTime' endTime
Long Parameter List,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,GetCurvePoints,The method has 6 parameters. Parameters: trackArea' sampleQuality' curveFunc' minPixelStep' beginUnitX' endUnitX
Long Parameter List,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,GetLinearInterpolationError,The method has 5 parameters. Parameters: beginX' beginY' endX' endY' func
Long Parameter List,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,EnumerateRulerMarks,The method has 5 parameters. Parameters: stepSize' unitScroll' beginUnits' endUnits' stepCountMultiple
Long Statement,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The length of the statement  "				Color.FromArgb((int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness))' " is 129.
Long Statement,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The length of the statement  "				e.Graphics.FillRectangle(new HatchBrush(HatchStyle.LargeCheckerBoard' this.renderer.ColorLightBackground' this.renderer.ColorDarkBackground)' colorArea); " is 153.
Long Statement,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The length of the statement  "			e.Graphics.DrawImage(this.srcImage' colorArea' 0' 0' this.srcImage.Width - 1' this.srcImage.Height - 1' GraphicsUnit.Pixel); " is 124.
Long Statement,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorShowBox,The length of the statement  "			this.colorShowBox.UpperColor = this.alphaEnabled ? this.oldColor.ToColor() : Color.FromArgb(255' this.oldColor.ToColor()); " is 122.
Long Statement,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorShowBox,The length of the statement  "			this.colorShowBox.LowerColor = this.alphaEnabled ? this.selColor.ToColor() : Color.FromArgb(255' this.selColor.ToColor()); " is 122.
Long Statement,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,textBoxHex_TextChanged,The length of the statement  "			if (int.TryParse(this.textBoxHex.Text' System.Globalization.NumberStyles.HexNumber' System.Globalization.CultureInfo.CurrentUICulture' out argb)) " is 145.
Long Statement,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ColorPickerDialog)); " is 137.
Long Statement,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnPaint,The length of the statement  "				e.Graphics.FillRectangle(new HatchBrush(HatchStyle.LargeCheckerBoard' this.renderer.ColorLightBackground' this.renderer.ColorDarkBackground)' colorArea); " is 153.
Long Statement,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The length of the statement  "				e.Graphics.FillRectangle(new HatchBrush(HatchStyle.LargeCheckerBoard' this.renderer.ColorLightBackground' this.renderer.ColorDarkBackground)' colorArea); " is 153.
Long Statement,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The length of the statement  "			e.Graphics.DrawImage(this.srcImage' colorArea' 0' 0' this.srcImage.Width' this.srcImage.Height - 1' GraphicsUnit.Pixel' colorAreaImageAttr); " is 140.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetBackgroundColor,The length of the statement  "			brightnessScale *= (float)Math.Pow(this.NestedBrightnessScale' Math.Max((indent - this.NestedBrightnessOffset) / PropertyEditing.GroupedPropertyEditor.DefaultIndent' 0)); " is 170.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The length of the statement  "			Rectangle innerRectLower = new Rectangle(innerRect.X' innerRect.Y + innerRectUpper.Height' innerRect.Width' innerRect.Height - innerRectUpper.Height); " is 150.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The length of the statement  "				g.DrawLine(new Pen((lowerBrush as LinearGradientBrush).LinearColors[1])' innerRectLower.X + 1' innerRectLower.Bottom - 1' innerRectLower.Right - 2' innerRectLower.Bottom - 1); " is 175.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The length of the statement  "				Region[] charRegions = MeasureStringLine(g' text' new [] { new CharacterRange(0' text.Length) }' this.FontRegular' innerRect); " is 126.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The length of the statement  "			innerRect = new Rectangle(innerRect.X + 2' innerRect.Y' innerRect.Width - dropDownIconRect.Width - 6' innerRect.Height); " is 120.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The length of the statement  "				Region[] charRegions = MeasureStringLine(g' text' new [] { new CharacterRange(0' text.Length) }' this.FontRegular' innerRect); " is 126.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitCheckBox,The length of the statement  "				System.Windows.Forms.VisualStyles.CheckBoxState vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal; " is 122.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitCheckBox,The length of the statement  "					case CheckBoxState.UncheckedDisabled:	vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedDisabled;	break; " is 121.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitCheckBox,The length of the statement  "					case CheckBoxState.UncheckedPressed:	vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedPressed;		break; " is 120.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The length of the statement  "					CheckBoxRenderer.DrawCheckBox(checkBoxGraphics' Point.Empty' System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal); " is 126.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The length of the statement  "					CheckBoxRenderer.DrawCheckBox(checkBoxGraphics' Point.Empty' System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedHot); " is 123.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The length of the statement  "					CheckBoxRenderer.DrawCheckBox(checkBoxGraphics' Point.Empty' System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedPressed); " is 127.
Long Statement,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The length of the statement  "					CheckBoxRenderer.DrawCheckBox(checkBoxGraphics' Point.Empty' System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedDisabled); " is 128.
Long Statement,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The length of the statement  "			g.DrawRectangle(gridPen' this.ClientRectangle.X' this.ClientRectangle.Y' this.ClientRectangle.Width - 1' this.ClientRectangle.Height - 1); " is 138.
Long Statement,AdamsLair.WinForms.ItemModels,MenuModel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemModels\MenuModel.cs,RequestItem,The length of the statement  "				MenuModelItem item = rootItems.FirstOrDefault(c => string.Equals(c.Name' itemNameTreePath[0]' StringComparison.InvariantCultureIgnoreCase)); " is 140.
Long Statement,AdamsLair.WinForms.ItemModels,MenuModel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemModels\MenuModel.cs,RequestItem,The length of the statement  "					resultItem = item.Items.FirstOrDefault(c => string.Equals(c.Name' itemNameTreePath[i]' StringComparison.InvariantCultureIgnoreCase)); " is 133.
Long Statement,AdamsLair.WinForms.ItemViews,MenuStripMenuView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\MenuStripMenuView.cs,UpdateItemProperties,The length of the statement  "			viewItem.Available	= modelItem.Visible && (modelItem.TypeHint != MenuItemTypeHint.Separator || this.visibleSeparators.Contains(viewItem)); " is 138.
Long Statement,AdamsLair.WinForms.ItemViews,MenuStripMenuView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\MenuStripMenuView.cs,model_ItemsChanged,The length of the statement  "						if (modelItem.Parent != null && this.viewItems.TryGetValue(modelItem.Parent' out parentViewItem) && parentViewItem is ToolStripMenuItem) " is 136.
Long Statement,AdamsLair.WinForms.ItemViews,TiledViewTextItemEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledViewTextItemEditor.cs,GetValueFromItem,The length of the statement  "			PropertyInfo property = itemType.GetProperty(this.editedPropertyName' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 140.
Long Statement,AdamsLair.WinForms.ItemViews,TiledViewTextItemEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledViewTextItemEditor.cs,ApplyValueToItem,The length of the statement  "			PropertyInfo property = itemType.GetProperty(this.editedPropertyName' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 140.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,ScrollToModelIndex,The length of the statement  "			if (scrolledPos.Y >= this.Padding.Top && scrolledPos.Y + this.tileSize.Height <= this.ClientSize.Height - this.Padding.Bottom) " is 126.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,ScrollToModelIndex,The length of the statement  "				this.AutoScrollPosition = new Point(-this.AutoScrollPosition.X' -this.AutoScrollPosition.Y - (this.Padding.Top - scrolledPos.Y)); " is 129.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,ScrollToModelIndex,The length of the statement  "				this.AutoScrollPosition = new Point(-this.AutoScrollPosition.X' -this.AutoScrollPosition.Y + (scrolledPos.Y + this.tileSize.Height) - (this.ClientSize.Height - this.Padding.Bottom)); " is 182.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnPaint,The length of the statement  "					this.cachedEventItemUserPaint.IsSelected = i >= firstSelected && i <= lastSelected && this.selection.Any(s => s.ModelIndex == i); " is 129.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,ProcessCmdKey,The length of the statement  "			if (keyData.HasFlag(Keys.Up) || keyData.HasFlag(Keys.Down) || keyData.HasFlag(Keys.Left) || keyData.HasFlag(Keys.Right)) " is 120.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnMouseMove,The length of the statement  "					this.OnItemDrag(new TiledViewItemMouseEventArgs(this' this.dragIndex' this.model.GetItemAt(this.dragIndex)' new Point(e.X - itemPos.X' e.Y - itemPos.Y)' e.Button)); " is 164.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnMouseClick,The length of the statement  "				this.OnItemClicked(new TiledViewItemMouseEventArgs(this' this.hoverIndex' this.model.GetItemAt(this.hoverIndex)' new Point(e.X - itemPos.X' e.Y - itemPos.Y)' e.Button)); " is 169.
Long Statement,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnMouseDoubleClick,The length of the statement  "				this.OnItemDoubleClicked(new TiledViewItemMouseEventArgs(this' this.hoverIndex' this.model.GetItemAt(this.hoverIndex)' new Point(e.X - itemPos.X' e.Y - itemPos.Y)' e.Button)); " is 175.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,LabelPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\LabelPropertyEditor.cs,OnGetValue,The length of the statement  "				this.valMultiple = this.valMultiple || values.Any(o => o == null || this.GetLabelFor(o' ref this.valMultiple) != this.val); " is 123.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,The length of the statement  "			Type reflectedArrayType = PropertyEditor.ReflectDynamicType(elementType' valuesNotNull.Select(a => GetIListElementType(a.GetType()))); " is 134.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,SizeValueSetter,The length of the statement  "			IEnumerable<Type> targetListElementTypes = targetLists.Where(list => list != null).Select(a => GetIListElementType(a.GetType())); " is 129.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,GetIListElementType,The length of the statement  "			else if ((ilistInterface = listType.GetInterfaces().Where(t => t.IsGenericType && t.GetGenericTypeDefinition() == typeof(IList<>)).FirstOrDefault()) != null) " is 157.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,The length of the statement  "			Type reflectedDictValueType = PropertyEditor.ReflectDynamicType(dictValueType' valuesNotNull.Select(a => GetIDictionaryValueType(a.GetType()))); " is 144.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,AddKeyToDictionary,The length of the statement  "			Type reflectedValueType = PropertyEditor.ReflectDynamicType(valueType' targetArray.Select(a => GetIDictionaryValueType(a.GetType()))); " is 134.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,GetIDictionaryValueType,The length of the statement  "			else if ((idictionaryInterface = dictType.GetInterfaces().Where(t => t.IsGenericType && t.GetGenericTypeDefinition() == typeof(IDictionary<'>)).FirstOrDefault()) != null) " is 170.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,GetIDictionaryKeyType,The length of the statement  "			else if ((idictionaryInterface = dictType.GetInterfaces().Where(t => t.IsGenericType && t.GetGenericTypeDefinition() == typeof(IDictionary<'>)).FirstOrDefault()) != null) " is 170.
Long Statement,AdamsLair.WinForms.PropertyEditing.Editors,ObjectSelectorPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\ObjectSelectorPropertyEditor.cs,UpdateEditorValue,The length of the statement  "			this.objSelector.SelectedObject = this.objSelector.DropDownItems.Cast<ObjectItem>().FirstOrDefault(i => object.Equals(i.Value' this.val)); " is 138.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "			// Ignore e.BeginTime and e.EndTime for sampling' as we're heavily dependent on rounding errors' etc. while undersampling. Instead' always sample the whole curve. " is 162.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "			float endUnitX = Math.Min(this.ParentView.UnitOriginOffset - this.ParentView.UnitScroll + this.ParentView.VisibleUnitWidth' this.model.EndTime); " is 144.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "					this.cacheCurveVertices = this.GetCurvePoints(rect' e.GetAdjustedQuality(this.parentTrack.CurvePrecision)' this.model.GetValueAtX' minPixelStep' beginUnitX' endUnitX); " is 167.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "							float relativeX = (float)(this.cacheCurveVertices[(int)((float)i * (this.cacheCurveVertices.Length - 1) / (float)(baseBlend.Length - 1))].X - rect.X) / (float)rect.Width; " is 170.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "						this.cacheEnvelopeGradient = new LinearGradientBrush(rect' Color.Transparent' Color.Transparent' LinearGradientMode.Horizontal); " is 128.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "						this.cacheCurveGradient = new LinearGradientBrush(rect' Color.Transparent' Color.Transparent' LinearGradientMode.Horizontal); " is 125.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The length of the statement  "							curveBlend.Colors[i] = Color.FromArgb((int)((1.0f - localOpacity) * (1.0f - localOpacity) * this.curveOpacity * 255.0f)' this.baseColor); " is 137.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,GetCurvePoints,The length of the statement  "				float errorThreshold = 1.0f * Math.Abs(this.parentTrack.VerticalUnitTop - this.parentTrack.VerticalUnitBottom) / trackArea.Height; " is 130.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetVisibleRulerMarks,The length of the statement  "			foreach (float unitValue in TimelineView.EnumerateRulerMarks(rulerStep' 0.0f' this.verticalUnitTop' this.verticalUnitBottom' 1)) " is 128.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetVisibleRulerMarks,The length of the statement  "				if (Math.Abs(unitValue - this.verticalUnitTop) >= rulerStep && Math.Abs(unitValue - this.verticalUnitBottom) >= rulerStep) " is 122.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,AdjustVerticalUnits,The length of the statement  "					targetTop = TimelineView.GetNiceMultiple(maxUnits' TimelineView.NiceMultipleMode.Higher' TimelineView.NiceMultipleGranularity.High); " is 132.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,AdjustVerticalUnits,The length of the statement  "					targetBottom = TimelineView.GetNiceMultiple(minUnits' TimelineView.NiceMultipleMode.Lower' TimelineView.NiceMultipleGranularity.High); " is 134.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The length of the statement  "				float maxValue = graph.Model.GetMaxValueInRange(cursorUnits.X - unitsPerPixel.X * 2.5f' cursorUnits.X + unitsPerPixel.X * 2.5f); " is 128.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The length of the statement  "				float minValue = graph.Model.GetMinValueInRange(cursorUnits.X - unitsPerPixel.X * 2.5f' cursorUnits.X + unitsPerPixel.X * 2.5f); " is 128.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateDisplayedGraphInfo,The length of the statement  "							float sampleTime = mouseoverTime - unitEnvelopeRadius + ((float)i / (float)(SampleCount - 1)) * 2.0f * unitEnvelopeRadius; " is 122.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnModelGraphsAdded,The length of the statement  "					foreach (TimelineModelViewAssignmentAttribute attrib in graphType.GetCustomAttributes(true).OfType<TimelineModelViewAssignmentAttribute>()) " is 139.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaint,The length of the statement  "				float endUnitX = Math.Min(this.ParentView.UnitOriginOffset - this.ParentView.UnitScroll + this.ParentView.VisibleUnitWidth' this.ContentEndTime); " is 145.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaint,The length of the statement  "			e.Graphics.DrawLine(new Pen(e.Renderer.ColorVeryDarkBackground)' rect.Left' rect.Bottom - 1' rect.Right' rect.Bottom - 1); " is 122.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The length of the statement  "						e.Graphics.FillRectangle(new SolidBrush(graphInfoColor.ScaleAlpha(0.3f))' selectionBeginPixels' Math.Min(minPixels' maxPixels)' selectionEndPixels - selectionBeginPixels' Math.Abs(maxPixels - minPixels)); " is 204.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The length of the statement  "						textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' maxPixels - 2 - textSize.Height); " is 130.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The length of the statement  "						textInfo.TargetRect = new Rectangle((int)mouseoverPixels + 2' e.TargetRect.Y + textYAdv + 1' MaxGraphValueTextWidth - 2' e.TargetRect.Height - textYAdv); " is 153.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The length of the statement  "						textInfo.ActualRect = new Rectangle(textInfo.TargetRect.X' textInfo.TargetRect.Y' (int)textSize.Width' (int)textSize.Height); " is 125.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The length of the statement  "						textInfo.TargetRect = new Rectangle((int)mouseoverPixels + 2' e.TargetRect.Y + textYAdv + 1' MaxGraphValueTextWidth - 2' e.TargetRect.Height - textYAdv); " is 153.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The length of the statement  "						textInfo.ActualRect = new Rectangle(textInfo.TargetRect.X' textInfo.TargetRect.Y' (int)textSize.Width' (int)textSize.Height); " is 125.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The length of the statement  "				int maxUnitWidth = Math.Max(Math.Max(rectUnitMarkings.Width' (int)verticalTopTextSize.Width + 2)' (int)verticalBottomTextSize.Width + 2); " is 137.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The length of the statement  "				g.DrawString(verticalTopText' r.FontSmall' new SolidBrush(r.ColorText)' left ? rectUnitMarkings.Right - textSize.Width : rectUnitMarkings.Left' rectUnitMarkings.Top); " is 166.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The length of the statement  "				g.DrawString(verticalBottomText' r.FontSmall' new SolidBrush(r.ColorText)' left ? rectUnitMarkings.Right - textSize.Width : rectUnitMarkings.Left' rectUnitMarkings.Bottom - textSize.Height - 1); " is 194.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,AdjustZoomLevel,The length of the statement  "			if (!this.ClientRectangle.Contains(targetPos)) targetPos = new Point(this.ClientRectangle.Width / 2' this.ClientRectangle.Height / 2); " is 134.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,InvalidateContent,The length of the statement  "			Rectangle invalidateRect = new Rectangle(this.rectContentArea.X' 0' this.rectContentArea.Width' this.ClientRectangle.Height); " is 125.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateContentHeight,The length of the statement  "			int additionalHeight = Math.Max(0' this.ClientSize.Height - contentBaseHeight - this.trackSpacing * (this.trackList.Count - 1) + 2); " is 132.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateContentHeight,The length of the statement  "						growHeight = Math.Min(availHeight' (int)Math.Round((float)additionalHeight * (float)track.FillHeight / (float)totalFill)); " is 122.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateContentHeight,The length of the statement  "			int contentHeight = this.areaTopRuler.Size + this.areaBottomRuler.Size + this.trackList.Sum(t => t.Height) + this.trackSpacing * (this.trackList.Count - 1) - 2; " is 160.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateContentWidth,The length of the statement  "					1 + (int)this.ConvertUnitsToPixels(contentEndTime - this.unitOffset) + this.areaLeftSidebar.Size + this.areaRightSidebar.Size'  " is 126.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateMouseoverState,The length of the statement  "				this.mouseoverTrack.OnMouseMove(new MouseEventArgs(Control.MouseButtons' 0' mousePos.X - trackRect.X' mousePos.Y - trackRect.Y' 0)); " is 132.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnModelTracksAdded,The length of the statement  "					foreach (TimelineModelViewAssignmentAttribute attrib in trackType.GetCustomAttributes(true).OfType<TimelineModelViewAssignmentAttribute>()) " is 139.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnKeyDown,The length of the statement  "				this.AutoScrollPosition = new Point(-this.AutoScrollPosition.X' -this.AutoScrollPosition.Y - this.ClientSize.Height / 50); " is 122.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnKeyDown,The length of the statement  "				this.AutoScrollPosition = new Point(-this.AutoScrollPosition.X' -this.AutoScrollPosition.Y + this.ClientSize.Height / 50); " is 122.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				foreach (TimelineViewRulerMark mark in this.GetVisibleRulerMarks((int)e.Graphics.ClipBounds.Left' (int)e.Graphics.ClipBounds.Right)) " is 132.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "					Rectangle lineRect = new Rectangle((int)mark.PixelValue' (int)this.rectContentArea.Y' 1' (int)this.rectContentArea.Height); " is 123.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine(pen' selectionPixelsBegin' this.rectContentArea.Top' selectionPixelsBegin' this.rectContentArea.Bottom); " is 124.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine(pen' selectionPixelsEnd' this.rectContentArea.Top' selectionPixelsEnd' this.rectContentArea.Bottom); " is 120.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine(mouseoverTimePen' mouseoverPixels' this.rectContentArea.Top' mouseoverPixels' this.rectContentArea.Bottom); " is 127.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				shadowBlend.Colors		= new[] {	Color.FromArgb(64' shadowColor)'	Color.FromArgb(16' shadowColor)'	Color.FromArgb(0' shadowColor) }; " is 129.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				Rectangle dropShadowH = new Rectangle(this.rectContentArea.Left' this.rectContentArea.Top' this.rectContentArea.Width' Math.Min(12' this.rectContentArea.Height)); " is 162.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				Rectangle dropShadowV = new Rectangle(this.rectContentArea.Left' this.rectContentArea.Top' Math.Min(12' this.rectContentArea.Width)' this.rectContentArea.Height); " is 162.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				e.Graphics.FillEllipse(new SolidBrush(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin.X - 3' this.mouseActionOrigin.Y - 3' 6' 6); " is 147.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine(new Pen(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin' this.PointToClient(Cursor.Position)); " is 132.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The length of the statement  "					bool drawMark = (mark.PixelValue - rectUnitMarkings.Left >= 1.0f) && (rectUnitMarkings.Right - mark.PixelValue >= 1.0f); " is 120.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The length of the statement  "						markTextY = rectUnitMarkings.Bottom - this.renderer.FontRegular.Height - Math.Max(Math.Min(3 + rectUnitMarkings.Top - rectUnitName.Bottom' rectUnitMarkings.Height / 2)' 0); " is 172.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The length of the statement  "						markTextY = rectUnitMarkings.Top + Math.Max(Math.Min(3 + rectUnitName.Top - rectUnitMarkings.Bottom' rectUnitMarkings.Height / 2)' 0); " is 134.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,RaiseSelectionChanged,The length of the statement  "			this.OnSelectionChanged(new TimelineViewSelectionEventArgs(this' this.SelectionBeginTime' this.SelectionEndTime' lastBegin' lastEnd)); " is 134.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewTrack.cs,Invalidate,The length of the statement  "			float fromPixels = Math.Max(this.parentView.GetPosAtUnit(fromUnits)' rectOnParent.Left + this.parentView.LeftSidebarSize) - 1; " is 126.
Long Statement,AdamsLair.WinForms.TimelineControls,TimelineViewTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewTrack.cs,Invalidate,The length of the statement  "			float toPixels = Math.Min(this.parentView.GetPosAtUnit(toUnits)' rectOnParent.Right - this.parentView.RightSidebarSize) + 2; " is 124.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The length of the statement  "			this.headerRect = new Rectangle(this.ClientRectangle.X' this.ClientRectangle.Y' this.ClientRectangle.Width' this.headerHeight); " is 127.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The length of the statement  "			bool parentExpand = (this.ParentEditor as GroupedPropertyEditor) != null && (this.ParentEditor as GroupedPropertyEditor).UseIndentChildExpand; " is 142.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The length of the statement  "				this.headerRect.Width - buttonRect.Width - iconRect.Width - this.expandCheckRect.Width - this.activeCheckRect.Width - 2'  " is 120.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The length of the statement  "			Color headerBgColor = this.ControlRenderer.GetBackgroundColor(this.headerColor.Value' focusBg && adaptBgColor' this.Location.X); " is 128.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintIndentExpandButton,The length of the statement  "			Rectangle indentExpandRect = new Rectangle(childGroup.Location.X - this.indent' childGroup.Location.Y' this.indent' childGroup.headerHeight); " is 141.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,IndentChildExpandOnMouseMove,The length of the statement  "			Rectangle expandRect = new Rectangle(childGroup.Location.X - this.indent' childGroup.Location.Y' this.indent' childGroup.headerHeight); " is 135.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,IndentChildExpandOnMouseLeave,The length of the statement  "			Rectangle expandRect = new Rectangle(childGroup.Location.X - this.indent' childGroup.Location.Y' this.indent' childGroup.headerHeight); " is 135.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,IndentChildExpandOnMouseDown,The length of the statement  "				Rectangle expandRect = new Rectangle(childGroup.Location.X - this.indent' childGroup.Location.Y' this.indent' childGroup.headerHeight); " is 135.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,IndentChildExpandOnMouseUp,The length of the statement  "				Rectangle expandRect = new Rectangle(childGroup.Location.X - this.indent' childGroup.Location.Y' this.indent' childGroup.headerHeight); " is 135.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnMouseMove,The length of the statement  "				Rectangle expandHotSpot = new Rectangle(this.expandCheckRect.X' this.headerRect.Y' this.expandCheckRect.Width' this.headerRect.Height); " is 135.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnMouseMove,The length of the statement  "				Rectangle activeHotSpot = new Rectangle(this.activeCheckRect.X' this.headerRect.Y' this.activeCheckRect.Width' this.headerRect.Height); " is 135.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnMouseMove,The length of the statement  "				this.expandCheckHovered = this.CanExpand && (this.Hints & HintFlags.ExpandEnabled) != HintFlags.None && expandHotSpot.Contains(e.Location); " is 139.
Long Statement,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnMouseMove,The length of the statement  "				this.activeCheckHovered = !this.ReadOnly && (this.Hints & HintFlags.ActiveEnabled) != HintFlags.None && activeHotSpot.Contains(e.Location); " is 139.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The length of the statement  "			Point buttonCenter = new Point(this.buttonRect.X + this.buttonRect.Width / 2' this.buttonRect.Y + this.buttonRect.Height / 2); " is 126.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The length of the statement  "			g.DrawImage(buttonImage' buttonCenter.X - buttonSize.Width / 2' buttonCenter.Y - buttonSize.Height / 2' buttonSize.Width' buttonSize.Height); " is 141.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,OnMouseMove,The length of the statement  "			bool buttonHovered = (this.Hints & HintFlags.ButtonEnabled) != HintFlags.None && !this.ReadOnly && this.ButtonRectangle.Contains(e.Location); " is 141.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,CreateEditor,The length of the statement  "			if (parentEditor.ParentGrid != this) throw new ArgumentException("The specified editor is not a child of this PropertyGrid"' "parentEditor"); " is 141.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,PickEditorAt,The length of the statement  "			return groupedMainEdit != null ? groupedMainEdit.PickEditorAt(x - this.ClientRectangle.X' y - this.ClientRectangle.Y) : this.mainEditor; " is 136.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,OnMouseDown,The length of the statement  "			if ((this.mouseDownTemp & e.Button) == e.Button) this.OnMouseUp(new MouseEventArgs((this.mouseDownTemp & e.Button)' e.Clicks' e.X' e.Y' e.Delta)); " is 146.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,OnMouseUp,The length of the statement  "			if ((this.mouseDownTemp & e.Button) == MouseButtons.None) this.OnMouseDown(new MouseEventArgs(e.Button' e.Clicks' e.X' e.Y' e.Delta)); " is 134.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,ProcessCmdKey,The length of the statement  "			if (keyData.HasFlag(Keys.Up) || keyData.HasFlag(Keys.Down) || keyData.HasFlag(Keys.Left) || keyData.HasFlag(Keys.Right) || keyData.HasFlag(Keys.Tab)) " is 149.
Long Statement,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,OnScroll,The length of the statement  "				MouseEventArgs childArgs = new MouseEventArgs(Control.MouseButtons' 0' Control.MousePosition.X' Control.MousePosition.Y' 0); " is 124.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,ComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\ComboBoxEditorTemplate.cs,OnPaint,The length of the statement  "			else if (this.pressed || this.IsDropDownOpened || (this.focused && (Control.ModifierKeys & Keys.Control) == Keys.Control)) " is 122.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,ComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\ComboBoxEditorTemplate.cs,OnMouseDown,The length of the statement  "				if (this.hovered && (e.Button & MouseButtons.Left) != MouseButtons.None && (DateTime.Now - this.mouseClosed).TotalMilliseconds > 200) " is 133.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,ComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\ComboBoxEditorTemplate.cs,ShowDropDown,The length of the statement  "			this.popupControl.Show(parentGrid' this.dropdown' dropDownLoc.X' dropDownLoc.Y' dropDownSize.Width' dropDownSize.Height' PopupResizeMode.None); " is 143.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,OnPaint,The length of the statement  "			else if (this.pressed || this.IsDropDownOpened || (this.focused && (Control.ModifierKeys & Keys.Control) == Keys.Control)) " is 122.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,OnMouseDown,The length of the statement  "				if (this.hovered && (e.Button & MouseButtons.Left) != MouseButtons.None && (DateTime.Now - this.mouseClosed).TotalMilliseconds > 200) " is 133.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,ShowDropDown,The length of the statement  "			this.popupControl.Show(parentGrid' this.dropdown' dropDownLoc.X' dropDownLoc.Y' dropDownSize.Width' dropDownSize.Height' PopupResizeMode.None); " is 143.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnPaint,The length of the statement  "			else if (this.pressed || this.IsDropDownOpened || (this.focused && (Control.ModifierKeys & Keys.Control) == Keys.Control)) " is 122.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnMouseDown,The length of the statement  "				if (this.hovered && (e.Button & MouseButtons.Left) != MouseButtons.None && (DateTime.Now - this.mouseClosed).TotalMilliseconds > 200) " is 133.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnKeyDown,The length of the statement  "					pasteObjProxy = pasteObj.Select(p => this.dropdownItems.FirstOrDefault(obj => object.Equals(obj' p))).Where(o => o != null).ToList();  " is 133.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnKeyDown,The length of the statement  "					pasteObjProxy = pasteObj.Select(p => this.dropdownItems.FirstOrDefault(obj => obj != null && p == obj.ToString())).ToList();  " is 124.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,ShowDropDown,The length of the statement  "			this.popupControl.Show(parentGrid' this.dropdown' dropDownLoc.X' dropDownLoc.Y' dropDownSize.Width' dropDownSize.Height' PopupResizeMode.None); " is 143.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnPaint,The length of the statement  "			this.parent.ControlRenderer.DrawButton(e.Graphics' gfxGripRect' gripState' null' (enabled && !this.ReadOnly) ? gripIcon.Normal : gripIcon.Disabled); " is 148.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnPaint,The length of the statement  "					this.minMaxRect.Width * Math.Min(Math.Max((float)((this.value - this.barMin) / (this.barMax - this.barMin))' 0.0f)' 1.0f)' " is 122.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnMouseDown,The length of the statement  "				this.Value = this.barMin + (decimal)Math.Min(Math.Max((float)(e.Location.X - this.minMaxRect.X) / (float)this.minMaxRect.Width' 0.0f)' 1.0f) * (this.barMax - this.barMin); " is 171.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnMouseMove,The length of the statement  "				this.Value = this.barMin + (decimal)Math.Min(Math.Max((float)(e.Location.X - this.minMaxRect.X) / (float)this.minMaxRect.Width' 0.0f)' 1.0f) * (this.barMax - this.barMin); " is 171.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,SetTextFromValue,The length of the statement  "				this.stringEditor.Text = (this.value < 0m ? "-" : "") + beforeSep.ToString() + "." + afterSep.ToString().PadLeft(this.decimalPlaces' '0'); " is 138.
Long Statement,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,SetValueFromText,The length of the statement  "			this.isTextValid = decimal.TryParse(this.stringEditor.Text' NumberStyles.Any' CultureInfo.InvariantCulture' out valResult); " is 123.
Complex Conditional,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The conditional expression  "this.clrBottomLeft.A < 255 || this.clrBottomRight.A < 255 || this.clrTopLeft.A < 255 || this.clrTopRight.A < 255"  is complex.
Complex Conditional,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The conditional expression  "state == ExpandBoxState.ExpandDisabled ||  					state == ExpandBoxState.ExpandHot ||  					state == ExpandBoxState.ExpandNormal ||  					state == ExpandBoxState.ExpandPressed"  is complex.
Complex Conditional,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The conditional expression  "state == ExpandBoxState.ExpandDisabled ||  					state == ExpandBoxState.ExpandHot ||  					state == ExpandBoxState.ExpandNormal ||  					state == ExpandBoxState.ExpandPressed"  is complex.
Complex Conditional,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnPaintItem,The conditional expression  "e.IsSelected || (Control.MouseButtons != MouseButtons.None && this.highlightHoverItems && e.IsHovered)"  is complex.
Complex Conditional,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,ProcessCmdKey,The conditional expression  "keyData.HasFlag(Keys.Up) || keyData.HasFlag(Keys.Down) || keyData.HasFlag(Keys.Left) || keyData.HasFlag(Keys.Right)"  is complex.
Complex Conditional,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnKeyDown,The conditional expression  "e.KeyCode == Keys.Right || e.KeyCode == Keys.Left || e.KeyCode == Keys.Up || e.KeyCode == Keys.Down"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnGetValue,The conditional expression  "!this.ReadOnly && (values.Any(o => o == null) || (trueCount > 0 && trueCount < values.Count()))"  is complex.
Complex Conditional,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateGeometry,The conditional expression  "this.rectTopRuler != lastRectTopRuler ||  				this.rectBottomRuler != lastRectBottomRuler ||  				this.rectLeftSidebar != lastRectLeftSidebar ||  				this.rectRightSidebar != lastRectRightSidebar ||  				this.rectContentArea != lastRectContentArea"  is complex.
Complex Conditional,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,IsInputKey,The conditional expression  "keyData == Keys.Left || keyData == Keys.Right || keyData == Keys.Up || keyData == Keys.Down"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnMouseDoubleClick,The conditional expression  "this.CanExpand &&   				(this.Hints & HintFlags.ExpandEnabled) != HintFlags.None &&   				(this.Hints & HintFlags.HasExpandCheck) != HintFlags.None &&   				!this.expandCheckHovered &&   				!this.activeCheckHovered &&   				this.headerRect.Contains(e.Location) &&   				!this.ButtonRectangle.Contains(e.Location)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,ProcessCmdKey,The conditional expression  "keyData.HasFlag(Keys.Up) || keyData.HasFlag(Keys.Down) || keyData.HasFlag(Keys.Left) || keyData.HasFlag(Keys.Right) || keyData.HasFlag(Keys.Tab)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing,MainEditorProvider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,CreateEditor,The conditional expression  "baseType == typeof(sbyte) || baseType == typeof(byte) ||  					baseType == typeof(short) || baseType == typeof(ushort) ||  					baseType == typeof(int) || baseType == typeof(uint) ||  					baseType == typeof(long) || baseType == typeof(ulong) ||  					baseType == typeof(float) || baseType == typeof(double) || baseType == typeof(decimal)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,ComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\ComboBoxEditorTemplate.cs,OnPaint,The conditional expression  "this.pressed || this.IsDropDownOpened || (this.focused && (Control.ModifierKeys & Keys.Control) == Keys.Control)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,OnPaint,The conditional expression  "this.pressed || this.IsDropDownOpened || (this.focused && (Control.ModifierKeys & Keys.Control) == Keys.Control)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,OnKeyDown,The conditional expression  "e.KeyCode == Keys.Return || e.KeyCode == Keys.Right || (e.KeyCode == Keys.Down && e.Control)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnPaint,The conditional expression  "this.pressed || this.IsDropDownOpened || (this.focused && (Control.ModifierKeys & Keys.Control) == Keys.Control)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnKeyDown,The conditional expression  "e.KeyCode == Keys.Return || e.KeyCode == Keys.Right || (e.KeyCode == Keys.Down && e.Control)"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnKeyDown,The conditional expression  "!this.readOnly && this.selectionLength == 0 && this.text != null && this.cursorIndex < this.text.Length"  is complex.
Complex Conditional,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnKeyDown,The conditional expression  "!this.readOnly && this.selectionLength == 0 && this.text != null && this.cursorIndex > 0"  is complex.
Virtual Method Call from Constructor,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,ControlRenderer,The constructor "ControlRenderer" calls a virtual method "Reset".
Virtual Method Call from Constructor,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,GroupedPropertyEditor,The constructor "GroupedPropertyEditor" calls a virtual method "ClearContent".
Empty Catch Block,AdamsLair.WinForms.PropertyEditing,MemberwisePropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\MemberwisePropertyEditor.cs,ReflectTypeForMember,The method has an empty catch block.
Empty Catch Block,AdamsLair.WinForms.PropertyEditing,MemberwisePropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\MemberwisePropertyEditor.cs,DefaultPropertySetter,The method has an empty catch block.
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupGradient,The following statement contains a magic number: Bitmap tempImg = new Bitmap(2' 2);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupGradient,The following statement contains a magic number: Bitmap tempImg = new Bitmap(2' 2);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' 1.0f)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' 1.0f) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueBrightnessGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' 1.0f' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' 1.0f' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendX.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendY.Colors = new Color[] {  				Color.FromArgb((int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness))'  				Color.Transparent };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendY.Colors = new Color[] {  				Color.FromArgb((int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness))'  				Color.Transparent };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,SetupHueSaturationGradient,The following statement contains a magic number: blendY.Colors = new Color[] {  				Color.FromArgb((int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness)' (int)Math.Round(255.0f * brightness))'  				Color.Transparent };
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: this.clrBottomLeft.A < 255 || this.clrBottomRight.A < 255 || this.clrTopLeft.A < 255 || this.clrTopRight.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: this.clrBottomLeft.A < 255 || this.clrBottomRight.A < 255 || this.clrTopLeft.A < 255 || this.clrTopRight.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: this.clrBottomLeft.A < 255 || this.clrBottomRight.A < 255 || this.clrTopLeft.A < 255 || this.clrTopRight.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: this.clrBottomLeft.A < 255 || this.clrBottomRight.A < 255 || this.clrTopLeft.A < 255 || this.clrTopRight.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: Pen innerPickerPen = this.valTemp.GetLuminance() > 0.5f ? Pens.Black : Pens.White;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawEllipse(innerPickerPen'  				pickerVisualPos.X - this.pickerSize / 2'  				pickerVisualPos.Y - this.pickerSize / 2'  				this.pickerSize'  				this.pickerSize);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawEllipse(innerPickerPen'  				pickerVisualPos.X - this.pickerSize / 2'  				pickerVisualPos.Y - this.pickerSize / 2'  				this.pickerSize'  				this.pickerSize);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPanel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPanel.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(Color.FromArgb(128' this.renderer.ColorBackground))' colorArea);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateText,The following statement contains a magic number: this.numHue.Value = (decimal)(this.selColor.h * 360.0f);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateText,The following statement contains a magic number: this.numSaturation.Value = (decimal)(this.selColor.s * 100.0f);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateText,The following statement contains a magic number: this.numValue.Value = (decimal)(this.selColor.v * 100.0f);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorShowBox,The following statement contains a magic number: this.colorShowBox.UpperColor = this.alphaEnabled ? this.oldColor.ToColor() : Color.FromArgb(255' this.oldColor.ToColor());
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorShowBox,The following statement contains a magic number: this.colorShowBox.LowerColor = this.alphaEnabled ? this.selColor.ToColor() : Color.FromArgb(255' this.selColor.ToColor());
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.SetupXYGradient(  						Color.White'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' 1.0f)'  						Color.Black'  						Color.Transparent);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.SetupHueBrightnessGradient(this.selColor.s);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.SetupHueSaturationGradient(this.selColor.v);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' tmp.R' 255' 0)'  						Color.FromArgb(255' tmp.R' 255' 255)'  						Color.FromArgb(255' tmp.R' 0' 0)'  						Color.FromArgb(255' tmp.R' 0' 255)'  						32);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' tmp.G' 0)'  						Color.FromArgb(255' 255' tmp.G' 255)'  						Color.FromArgb(255' 0' tmp.G' 0)'  						Color.FromArgb(255' 0' tmp.G' 255)'  						32);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.SetupGradient(  						Color.FromArgb(255' 255' 0' tmp.B)'  						Color.FromArgb(255' 255' 255' tmp.B)'  						Color.FromArgb(255' 0' 0' tmp.B)'  						Color.FromArgb(255' 0' 255' tmp.B)'  						32);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.s'  						this.selColor.v);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.v);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.s);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.G / 255.0f);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.R / 255.0f);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.G / 255.0f'  						tmp.R / 255.0f);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.s'  						this.selColor.v);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.v);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.s);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.G / 255.0f);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.R / 255.0f);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.G / 255.0f'  						tmp.R / 255.0f);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.s'  						this.selColor.v);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.v);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.s);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.G / 255.0f);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.R / 255.0f);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.G / 255.0f'  						tmp.R / 255.0f);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.s'  						this.selColor.v);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.v);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.s);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.G / 255.0f);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.R / 255.0f);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.G / 255.0f'  						tmp.R / 255.0f);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.s'  						this.selColor.v);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.v);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.s);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.G / 255.0f);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.R / 255.0f);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.G / 255.0f'  						tmp.R / 255.0f);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.s'  						this.selColor.v);  					break;  				case PrimaryAttrib.Saturation:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.v);  					break;  				case PrimaryAttrib.Brightness:  					this.colorPanel.ValuePercentual = new PointF(  						this.selColor.h'  						this.selColor.s);  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.G / 255.0f);  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.B / 255.0f'  						tmp.R / 255.0f);  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorPanel.ValuePercentual = new PointF(  						tmp.G / 255.0f'  						tmp.R / 255.0f);  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderGradient,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.SetupHueGradient(/*this.selColor.GetHSVSaturation()' this.selColor.GetHSVBrightness()*/);  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 0.0f' this.selColor.v)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' 1.0f' this.selColor.v));  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.SetupGradient(  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 0.0f)'  						ExtMethodsColor.ColorFromHSV(this.selColor.h' this.selColor.s' 1.0f));  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' 0' tmp.G' tmp.B)'  						Color.FromArgb(255' 255' tmp.G' tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' 0' tmp.B)'  						Color.FromArgb(255' tmp.R' 255' tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.SetupGradient(  						Color.FromArgb(255' tmp.R' tmp.G' 0)'  						Color.FromArgb(255' tmp.R' tmp.G' 255));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.ValuePercentual = this.selColor.h;  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.ValuePercentual = this.selColor.s;  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.ValuePercentual = this.selColor.v;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.R / 255.0f;  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.G / 255.0f;  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.B / 255.0f;  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.ValuePercentual = this.selColor.h;  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.ValuePercentual = this.selColor.s;  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.ValuePercentual = this.selColor.v;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.R / 255.0f;  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.G / 255.0f;  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.B / 255.0f;  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateColorSliderValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.colorSlider.ValuePercentual = this.selColor.h;  					break;  				case PrimaryAttrib.Saturation:  					this.colorSlider.ValuePercentual = this.selColor.s;  					break;  				case PrimaryAttrib.Brightness:  					this.colorSlider.ValuePercentual = this.selColor.v;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.R / 255.0f;  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.G / 255.0f;  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.colorSlider.ValuePercentual = tmp.B / 255.0f;  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateAlphaSliderGradient,The following statement contains a magic number: this.alphaSlider.SetupGradient(Color.Transparent' Color.FromArgb(255' this.selColor.ToColor()));
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromSliderValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.h = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.s = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.v = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)'   						tmp.G'   						tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)'   						tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						tmp.G'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromSliderValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.h = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.s = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.v = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)'   						tmp.G'   						tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)'   						tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						tmp.G'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromSliderValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.h = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.s = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.v = this.colorSlider.ValuePercentual;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)'   						tmp.G'   						tmp.B));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)'   						tmp.B));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						tmp.G'   						(int)Math.Round(this.colorSlider.ValuePercentual * 255.0f)));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.s = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.s = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						tmp.G'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)'  						tmp.B));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.s = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.s = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						tmp.G'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)'  						tmp.B));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.s = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.s = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						tmp.G'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)'  						tmp.B));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.s = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.s = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						tmp.G'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)'  						tmp.B));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.s = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.s = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						tmp.G'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)'  						tmp.B));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,UpdateSelectedColorFromPanelValue,The following statement contains a magic number: switch (this.primAttrib)  			{  				default:  				case PrimaryAttrib.Hue:  					this.selColor.s = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Saturation:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.v = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Brightness:  					this.selColor.h = this.colorPanel.ValuePercentual.X;  					this.selColor.s = this.colorPanel.ValuePercentual.Y;  					break;  				case PrimaryAttrib.Red:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						tmp.R'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Green:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						tmp.G'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)));  					break;  				case PrimaryAttrib.Blue:  					tmp = this.selColor.ToColor();  					this.selColor = new InternalColor(Color.FromArgb(  						tmp.A'   						(int)Math.Round(this.colorPanel.ValuePercentual.Y * 255.0f)'   						(int)Math.Round(this.colorPanel.ValuePercentual.X * 255.0f)'  						tmp.B));  					break;  			}
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,numHue_ValueChanged,The following statement contains a magic number: this.selColor.h = (float)this.numHue.Value / 360.0f;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,numSaturation_ValueChanged,The following statement contains a magic number: this.selColor.s = (float)this.numSaturation.Value / 100.0f;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,numValue_ValueChanged,The following statement contains a magic number: this.selColor.v = (float)this.numValue.Value / 100.0f;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioHue.Location = new System.Drawing.Point(363' 82);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioHue.Location = new System.Drawing.Point(363' 82);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioHue.Size = new System.Drawing.Size(33' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioHue.Size = new System.Drawing.Size(33' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioHue.TabIndex = 3;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioSaturation.Location = new System.Drawing.Point(363' 105);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioSaturation.Location = new System.Drawing.Point(363' 105);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioSaturation.Size = new System.Drawing.Size(32' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioSaturation.Size = new System.Drawing.Size(32' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioSaturation.TabIndex = 4;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioValue.Location = new System.Drawing.Point(363' 128);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioValue.Location = new System.Drawing.Point(363' 128);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioValue.Size = new System.Drawing.Size(32' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioValue.Size = new System.Drawing.Size(32' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioValue.TabIndex = 5;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioRed.Location = new System.Drawing.Point(363' 159);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioRed.Location = new System.Drawing.Point(363' 159);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioRed.Size = new System.Drawing.Size(33' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioRed.Size = new System.Drawing.Size(33' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioRed.TabIndex = 6;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioBlue.Location = new System.Drawing.Point(363' 205);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioBlue.Location = new System.Drawing.Point(363' 205);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioBlue.Size = new System.Drawing.Size(32' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioBlue.Size = new System.Drawing.Size(32' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioBlue.TabIndex = 7;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioGreen.Location = new System.Drawing.Point(363' 182);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioGreen.Location = new System.Drawing.Point(363' 182);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioGreen.Size = new System.Drawing.Size(33' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioGreen.Size = new System.Drawing.Size(33' 17);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.radioGreen.TabIndex = 8;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.Increment = new decimal(new int[] {              15'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.Location = new System.Drawing.Point(402' 82);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.Location = new System.Drawing.Point(402' 82);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.Maximum = new decimal(new int[] {              360'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numHue.TabIndex = 9;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numSaturation.Increment = new decimal(new int[] {              5'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numSaturation.Location = new System.Drawing.Point(402' 105);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numSaturation.Location = new System.Drawing.Point(402' 105);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numSaturation.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numSaturation.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numSaturation.TabIndex = 10;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numValue.Increment = new decimal(new int[] {              5'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numValue.Location = new System.Drawing.Point(402' 128);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numValue.Location = new System.Drawing.Point(402' 128);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numValue.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numValue.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numValue.TabIndex = 11;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numRed.Location = new System.Drawing.Point(402' 159);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numRed.Location = new System.Drawing.Point(402' 159);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numRed.Maximum = new decimal(new int[] {              255'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numRed.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numRed.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numRed.TabIndex = 12;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numGreen.Location = new System.Drawing.Point(402' 182);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numGreen.Location = new System.Drawing.Point(402' 182);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numGreen.Maximum = new decimal(new int[] {              255'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numGreen.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numGreen.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numGreen.TabIndex = 13;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numBlue.Location = new System.Drawing.Point(402' 205);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numBlue.Location = new System.Drawing.Point(402' 205);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numBlue.Maximum = new decimal(new int[] {              255'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numBlue.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numBlue.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numBlue.TabIndex = 14;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxHex.Location = new System.Drawing.Point(32' 279);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxHex.Location = new System.Drawing.Point(32' 279);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxHex.Size = new System.Drawing.Size(75' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxHex.Size = new System.Drawing.Size(75' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBoxHex.TabIndex = 16;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHex.Location = new System.Drawing.Point(12' 282);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHex.Location = new System.Drawing.Point(12' 282);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHex.Size = new System.Drawing.Size(14' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHex.Size = new System.Drawing.Size(14' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHex.TabIndex = 17;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelOld.Location = new System.Drawing.Point(423' 12);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelOld.Location = new System.Drawing.Point(423' 12);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelOld.Size = new System.Drawing.Size(33' 26);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelOld.Size = new System.Drawing.Size(33' 26);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelOld.TabIndex = 18;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelNew.Location = new System.Drawing.Point(423' 36);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelNew.Location = new System.Drawing.Point(423' 36);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelNew.Size = new System.Drawing.Size(33' 26);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelNew.Size = new System.Drawing.Size(33' 26);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelNew.TabIndex = 19;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(379' 277);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(379' 277);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(93' 23);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(93' 23);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 20;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonOk.Location = new System.Drawing.Point(280' 277);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonOk.Location = new System.Drawing.Point(280' 277);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonOk.Size = new System.Drawing.Size(93' 23);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonOk.Size = new System.Drawing.Size(93' 23);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.buttonOk.TabIndex = 21;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numAlpha.Location = new System.Drawing.Point(402' 236);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numAlpha.Location = new System.Drawing.Point(402' 236);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numAlpha.Maximum = new decimal(new int[] {              255'              0'              0'              0});
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numAlpha.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numAlpha.Size = new System.Drawing.Size(54' 20);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.numAlpha.TabIndex = 22;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelAlpha.Location = new System.Drawing.Point(379' 238);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelAlpha.Location = new System.Drawing.Point(379' 238);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelAlpha.Size = new System.Drawing.Size(14' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelAlpha.Size = new System.Drawing.Size(14' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelAlpha.TabIndex = 23;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHueUnit.Location = new System.Drawing.Point(461' 84);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHueUnit.Location = new System.Drawing.Point(461' 84);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHueUnit.Size = new System.Drawing.Size(11' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHueUnit.Size = new System.Drawing.Size(11' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelHueUnit.TabIndex = 24;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelSaturationUnit.Location = new System.Drawing.Point(462' 107);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelSaturationUnit.Location = new System.Drawing.Point(462' 107);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelSaturationUnit.Size = new System.Drawing.Size(15' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelSaturationUnit.Size = new System.Drawing.Size(15' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelSaturationUnit.TabIndex = 25;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelValueUnit.Location = new System.Drawing.Point(461' 130);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelValueUnit.Location = new System.Drawing.Point(461' 130);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelValueUnit.Size = new System.Drawing.Size(15' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelValueUnit.Size = new System.Drawing.Size(15' 13);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.labelValueUnit.TabIndex = 26;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.alphaSlider.Location = new System.Drawing.Point(312' 7);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.alphaSlider.Location = new System.Drawing.Point(312' 7);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.alphaSlider.Size = new System.Drawing.Size(32' 266);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.alphaSlider.Size = new System.Drawing.Size(32' 266);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.alphaSlider.TabIndex = 15;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorShowBox.Location = new System.Drawing.Point(363' 12);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorShowBox.Location = new System.Drawing.Point(363' 12);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorShowBox.Size = new System.Drawing.Size(54' 50);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorShowBox.Size = new System.Drawing.Size(54' 50);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorShowBox.TabIndex = 2;
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorSlider.Location = new System.Drawing.Point(274' 7);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorSlider.Location = new System.Drawing.Point(274' 7);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorSlider.Size = new System.Drawing.Size(32' 266);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorSlider.Size = new System.Drawing.Size(32' 266);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorPanel.Location = new System.Drawing.Point(12' 12);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorPanel.Location = new System.Drawing.Point(12' 12);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorPanel.Size = new System.Drawing.Size(256' 256);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.colorPanel.Size = new System.Drawing.Size(256' 256);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(484' 312);
Magic Number,AdamsLair.WinForms.ColorControls,ColorPickerDialog,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(484' 312);
Magic Number,AdamsLair.WinForms.ColorControls,InternalColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,InternalColor,The following statement contains a magic number: this.a = c.A / 255.0f;
Magic Number,AdamsLair.WinForms.ColorControls,InternalColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorPickerDialog.cs,ToColor,The following statement contains a magic number: return Color.FromArgb((int)Math.Round(this.a * 255.0f)' ExtMethodsColor.ColorFromHSV(this.h' this.s' this.v));
Magic Number,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnMouseClick,The following statement contains a magic number: e.Y > (this.ClientRectangle.Top + this.ClientRectangle.Bottom) / 2
Magic Number,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnPaint,The following statement contains a magic number: this.lowerColor.A < 255 || this.upperColor.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnPaint,The following statement contains a magic number: this.lowerColor.A < 255 || this.upperColor.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(this.upperColor)'  				colorArea.X'  				colorArea.Y'  				colorArea.Width'  				colorArea.Height / 2 + 1);
Magic Number,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(this.lowerColor)'  				colorArea.X'  				colorArea.Y + colorArea.Height / 2 + 1'  				colorArea.Width'  				colorArea.Height / 2);
Magic Number,AdamsLair.WinForms.ColorControls,ColorShowBox,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorShowBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(this.lowerColor)'  				colorArea.X'  				colorArea.Y + colorArea.Height / 2 + 1'  				colorArea.Width'  				colorArea.Height / 2);
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Colors = new Color[] {  				ExtMethodsColor.ColorFromHSV(0.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(2.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(3.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(4.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(5.0f / 6.0f' saturation' brightness)'  				ExtMethodsColor.ColorFromHSV(1.0f' saturation' brightness) };
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,SetupHueGradient,The following statement contains a magic number: blend.Positions = new float[] {  				0.0f'  				1.0f / 6.0f'  				2.0f / 6.0f'  				3.0f / 6.0f'  				4.0f / 6.0f'  				5.0f / 6.0f'  				1.0f};
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: Rectangle colorBox = new Rectangle(  				this.ClientRectangle.X + this.pickerSize'  				this.ClientRectangle.Y + this.pickerSize'  				this.ClientRectangle.Width - this.pickerSize * 2'  				this.ClientRectangle.Height - this.pickerSize * 2);
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: Rectangle colorBox = new Rectangle(  				this.ClientRectangle.X + this.pickerSize'  				this.ClientRectangle.Y + this.pickerSize'  				this.ClientRectangle.Width - this.pickerSize * 2'  				this.ClientRectangle.Height - this.pickerSize * 2);
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: this.min.A < 255 || this.max.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: this.min.A < 255 || this.max.A < 255
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: Pen outerPickerPen = this.Enabled ? Pens.Black : new Pen(Color.FromArgb(128' Color.Black));
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: Pen innerPickerPen = this.valTemp.GetLuminance() > 0.5f ? Pens.Black : Pens.White;
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawLine(innerPickerPen'  					new Point(colorArea.Left' pickerVisualPos)'  					new Point(colorArea.Left + 2' pickerVisualPos));
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawLine(innerPickerPen'  					new Point(colorArea.Right - 1' pickerVisualPos)'  					new Point(colorArea.Right - 1 - 2' pickerVisualPos));
Magic Number,AdamsLair.WinForms.ColorControls,ColorSlider,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ColorControls\ColorSlider.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(Color.FromArgb(128' this.renderer.ColorBackground))' colorArea);
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {1.0f' 0.0f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 1.0f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 1.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.65f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {1.3f' 0.0f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 1.3f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 1.3f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 1.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {1.3f' 0.0f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 1.3f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 1.3f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 1.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {1.3f' 0.0f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 1.3f' 0.0f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 1.3f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 1.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: this.images[2] = new Bitmap(source.Width' source.Height);
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: colorMatrix = new System.Drawing.Imaging.ColorMatrix(new float[][] {  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.34f' 0.34f' 0.34f' 0.0f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.5f' 0.0f}'  					new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms.Drawing,IconImage,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\IconImage.cs,IconImage,The following statement contains a magic number: this.images[3] = new Bitmap(source.Width' source.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,Reset,The following statement contains a magic number: this.FocusBrightnessScale = 0.85f;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,Reset,The following statement contains a magic number: this.NestedBrightnessScale = 0.95f;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The following statement contains a magic number: textRect.Width -= 5;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The following statement contains a magic number: g.DrawLine(ellipsisPen'   					textRect.Right - DrawStringWidthAdd'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f)'   					textRect.Right - DrawStringWidthAdd + 3'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The following statement contains a magic number: g.DrawLine(ellipsisPen'   					textRect.Right - DrawStringWidthAdd'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f)'   					textRect.Right - DrawStringWidthAdd + 3'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The following statement contains a magic number: g.DrawLine(ellipsisPen'   					textRect.Right - DrawStringWidthAdd'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f)'   					textRect.Right - DrawStringWidthAdd + 3'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The following statement contains a magic number: g.DrawLine(ellipsisPen'   					textRect.Right - DrawStringWidthAdd'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f)'   					textRect.Right - DrawStringWidthAdd + 3'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawStringLine,The following statement contains a magic number: g.DrawLine(ellipsisPen'   					textRect.Right - DrawStringWidthAdd'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f)'   					textRect.Right - DrawStringWidthAdd + 3'   					(textRect.Y + textRect.Height * 0.5f) + (nameLabelSize.Height * 0.3f));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,MeasureStringLine,The following statement contains a magic number: textRect.Width -= 5;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,PickCharStringLine,The following statement contains a magic number: textRect.Width -= 5;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetFontYOffset,The following statement contains a magic number: int fontOffset = font.Height - 2 * (int)(font.Height * 0.5f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetFontYOffset,The following statement contains a magic number: int fontOffset = font.Height - 2 * (int)(font.Height * 0.5f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The following statement contains a magic number: Color borderColor = this.ColorDarkBackground.ScaleBrightness(1.2f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The following statement contains a magic number: Color borderColorDark = this.ColorDarkBackground.ScaleBrightness(0.85f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The following statement contains a magic number: clientRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextBoxBorder,The following statement contains a magic number: clientRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: selectionRect.Inflate(0' 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: selectionRect.X -= 2;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: selectionRect.Width += 2;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: selectionRect.Width += 2;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: g.FillRectangle(new SolidBrush(Color.FromArgb(128' this.ColorGrayText))' selectionRect);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: textColor = Color.FromArgb(128' textColor);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: int curPixelPos = textRectScrolled.X + (int)textRectUntilCursor.Width + 2;
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawTextField,The following statement contains a magic number: g.FillRectangle(Brushes.Black' new Rectangle(curPixelPos' textRectScrolled.Top + 1' 1' textRectScrolled.Height - 2));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,PickCharTextField,The following statement contains a magic number: rect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,PickCharTextField,The following statement contains a magic number: rect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetCharPosTextField,The following statement contains a magic number: rect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetCharPosTextField,The following statement contains a magic number: rect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,GetCharPosTextField,The following statement contains a magic number: Rectangle rectScrolled = new Rectangle(  				rect.X - scroll'  				rect.Y'  				rect.Width + scroll + 10000000'  				rect.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawBorder,The following statement contains a magic number: Pen darkPen = new Pen(state == BorderState.Disabled ? Color.FromArgb(darkColor.A / 2' darkColor) : darkColor);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawBorder,The following statement contains a magic number: Pen lightPen = new Pen(state == BorderState.Disabled ? Color.FromArgb(lightColor.A / 2' lightColor) : lightColor);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawBorder,The following statement contains a magic number: g.DrawRectangle(lightPen' rect.X + 1' rect.Y + 1' rect.Width - 3' rect.Height - 3);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawBorder,The following statement contains a magic number: g.DrawRectangle(lightPen' rect.X + 1' rect.Y + 1' rect.Width - 3' rect.Height - 3);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Rectangle outerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Rectangle outerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: outerPath.AddPolygon(new [] {  				new Point(outerRect.Left' outerRect.Top + 1)'  				new Point(outerRect.Left + 1' outerRect.Top)'  				new Point(outerRect.Right - 2' outerRect.Top)'  				new Point(outerRect.Right - 1' outerRect.Top + 1)'  				new Point(outerRect.Right - 1' outerRect.Bottom - 2)'  				new Point(outerRect.Right - 2' outerRect.Bottom - 1)'  				new Point(outerRect.Left + 1' outerRect.Bottom - 1)'  				new Point(outerRect.Left' outerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: outerPath.AddPolygon(new [] {  				new Point(outerRect.Left' outerRect.Top + 1)'  				new Point(outerRect.Left + 1' outerRect.Top)'  				new Point(outerRect.Right - 2' outerRect.Top)'  				new Point(outerRect.Right - 1' outerRect.Top + 1)'  				new Point(outerRect.Right - 1' outerRect.Bottom - 2)'  				new Point(outerRect.Right - 2' outerRect.Bottom - 1)'  				new Point(outerRect.Left + 1' outerRect.Bottom - 1)'  				new Point(outerRect.Left' outerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: outerPath.AddPolygon(new [] {  				new Point(outerRect.Left' outerRect.Top + 1)'  				new Point(outerRect.Left + 1' outerRect.Top)'  				new Point(outerRect.Right - 2' outerRect.Top)'  				new Point(outerRect.Right - 1' outerRect.Top + 1)'  				new Point(outerRect.Right - 1' outerRect.Bottom - 2)'  				new Point(outerRect.Right - 2' outerRect.Bottom - 1)'  				new Point(outerRect.Left + 1' outerRect.Bottom - 1)'  				new Point(outerRect.Left' outerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: outerPath.AddPolygon(new [] {  				new Point(outerRect.Left' outerRect.Top + 1)'  				new Point(outerRect.Left + 1' outerRect.Top)'  				new Point(outerRect.Right - 2' outerRect.Top)'  				new Point(outerRect.Right - 1' outerRect.Top + 1)'  				new Point(outerRect.Right - 1' outerRect.Bottom - 2)'  				new Point(outerRect.Right - 2' outerRect.Bottom - 1)'  				new Point(outerRect.Left + 1' outerRect.Bottom - 1)'  				new Point(outerRect.Left' outerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Rectangle innerRectUpper = new Rectangle(innerRect.X' innerRect.Y' innerRect.Width' innerRect.Height / 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Color gradLight2 = colorGradBase.MixWith(colorInner' 0.9f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Color gradLight = colorGradBase.MixWith(colorInner' 0.8f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Color gradDark = colorGradBase.MixWith(colorInner' 0.725f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: Color gradDark2 = colorGradBase.MixWith(colorInner' 0.625f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: upperBrush = new LinearGradientBrush(innerRectUpper' gradLight2' gradLight' 90.0f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: lowerBrush = new LinearGradientBrush(innerRectUpper' gradDark' gradDark2' 90.0f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: g.DrawPath(new Pen(Color.FromArgb(128' colorInner))' outerPath);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButtonBackground,The following statement contains a magic number: g.DrawLine(new Pen((lowerBrush as LinearGradientBrush).LinearColors[1])' innerRectLower.X + 1' innerRectLower.Bottom - 1' innerRectLower.Right - 2' innerRectLower.Bottom - 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawButton,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: rect.Width < 8 + dropDownIcon.Width || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: rect.Width < 8 + dropDownIcon.Width || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: Rectangle dropDownIconRect = new Rectangle(  				innerRect.Right - dropDownIcon.Width - 4'  				innerRect.Y + innerRect.Height / 2 - dropDownIcon.Height / 2'  				dropDownIcon.Width'  				dropDownIcon.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: Rectangle dropDownIconRect = new Rectangle(  				innerRect.Right - dropDownIcon.Width - 4'  				innerRect.Y + innerRect.Height / 2 - dropDownIcon.Height / 2'  				dropDownIcon.Width'  				dropDownIcon.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: Rectangle dropDownIconRect = new Rectangle(  				innerRect.Right - dropDownIcon.Width - 4'  				innerRect.Y + innerRect.Height / 2 - dropDownIcon.Height / 2'  				dropDownIcon.Width'  				dropDownIcon.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: innerRect = new Rectangle(innerRect.X + 2' innerRect.Y' innerRect.Width - dropDownIconRect.Width - 6' innerRect.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: innerRect = new Rectangle(innerRect.X + 2' innerRect.Y' innerRect.Width - dropDownIconRect.Width - 6' innerRect.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: iconRect = new Rectangle(  					innerRect.X'   					innerRect.Y + innerRect.Height / 2 - icon.Height / 2'   					icon.Width'   					icon.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawComboBox,The following statement contains a magic number: iconRect = new Rectangle(  					innerRect.X'   					innerRect.Y + innerRect.Height / 2 - icon.Height / 2'   					icon.Width'   					icon.Height);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: rect.Width < 4 || rect.Height < 4
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: borderPath.AddPolygon(new [] {  				new Point(rect.Left' rect.Top + 2)'  				new Point(rect.Left + 2' rect.Top)'  				new Point(rect.Right - 3' rect.Top)'  				new Point(rect.Right - 1' rect.Top + 2)'  				new Point(rect.Right - 1' rect.Bottom - 3)'  				new Point(rect.Right - 3' rect.Bottom - 1)'  				new Point(rect.Left + 2' rect.Bottom - 1)'  				new Point(rect.Left' rect.Bottom - 3) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: Rectangle innerRect = new Rectangle(rect.X + 1' rect.Y + 1' rect.Width - 2' rect.Height - 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: innerPath.AddPolygon(new [] {  				new Point(innerRect.Left' innerRect.Top + 1)'  				new Point(innerRect.Left + 1' innerRect.Top)'  				new Point(innerRect.Right - 2' innerRect.Top)'  				new Point(innerRect.Right - 1' innerRect.Top + 1)'  				new Point(innerRect.Right - 1' innerRect.Bottom - 2)'  				new Point(innerRect.Right - 2' innerRect.Bottom - 1)'  				new Point(innerRect.Left + 1' innerRect.Bottom - 1)'  				new Point(innerRect.Left' innerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: innerPath.AddPolygon(new [] {  				new Point(innerRect.Left' innerRect.Top + 1)'  				new Point(innerRect.Left + 1' innerRect.Top)'  				new Point(innerRect.Right - 2' innerRect.Top)'  				new Point(innerRect.Right - 1' innerRect.Top + 1)'  				new Point(innerRect.Right - 1' innerRect.Bottom - 2)'  				new Point(innerRect.Right - 2' innerRect.Bottom - 1)'  				new Point(innerRect.Left + 1' innerRect.Bottom - 1)'  				new Point(innerRect.Left' innerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: innerPath.AddPolygon(new [] {  				new Point(innerRect.Left' innerRect.Top + 1)'  				new Point(innerRect.Left + 1' innerRect.Top)'  				new Point(innerRect.Right - 2' innerRect.Top)'  				new Point(innerRect.Right - 1' innerRect.Top + 1)'  				new Point(innerRect.Right - 1' innerRect.Bottom - 2)'  				new Point(innerRect.Right - 2' innerRect.Bottom - 1)'  				new Point(innerRect.Left + 1' innerRect.Bottom - 1)'  				new Point(innerRect.Left' innerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: innerPath.AddPolygon(new [] {  				new Point(innerRect.Left' innerRect.Top + 1)'  				new Point(innerRect.Left + 1' innerRect.Top)'  				new Point(innerRect.Right - 2' innerRect.Top)'  				new Point(innerRect.Right - 1' innerRect.Top + 1)'  				new Point(innerRect.Right - 1' innerRect.Bottom - 2)'  				new Point(innerRect.Right - 2' innerRect.Bottom - 1)'  				new Point(innerRect.Left + 1' innerRect.Bottom - 1)'  				new Point(innerRect.Left' innerRect.Bottom - 2) });
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: Color gradLight2 = this.ColorHightlight.MixWith(this.ColorVeryLightBackground' 0.8f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: Color gradLight = this.ColorHightlight.MixWith(this.ColorVeryLightBackground' 0.5f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: colorBorder = Color.FromArgb(128' colorBorder);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: colorInner = Color.FromArgb(64' colorInner);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: gradLight = Color.FromArgb(64' gradLight);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,DrawSelection,The following statement contains a magic number: innerBrush = new LinearGradientBrush(innerRect' gradLight2' gradLight' 90.0f);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: plusSignColor = Color.FromArgb(24' 32' 82);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: plusSignColor = Color.FromArgb(24' 32' 82);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: plusSignColor = Color.FromArgb(24' 32' 82);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: expandLinePen = new Pen(Color.FromArgb(255' plusSignColor));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: expandLineShadowPen = new Pen(Color.FromArgb(64' plusSignColor));
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 + 1'  					image.Width - 4'  					image.Height / 2 + 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 + 1'  					image.Width - 4'  					image.Height / 2 + 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 + 1'  					image.Width - 4'  					image.Height / 2 + 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 + 1'  					image.Width - 4'  					image.Height / 2 + 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 - 1'  					image.Width - 4'  					image.Height / 2 - 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 - 1'  					image.Width - 4'  					image.Height / 2 - 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 - 1'  					image.Width - 4'  					image.Height / 2 - 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   					3'  					image.Height / 2 - 1'  					image.Width - 4'  					image.Height / 2 - 1);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 + 1'  						3'  						image.Width / 2 + 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 + 1'  						3'  						image.Width / 2 + 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 + 1'  						3'  						image.Width / 2 + 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 + 1'  						3'  						image.Width / 2 + 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 - 1'  						3'  						image.Width / 2 - 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 - 1'  						3'  						image.Width / 2 - 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 - 1'  						3'  						image.Width / 2 - 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLineShadowPen'   						image.Width / 2 - 1'  						3'  						image.Width / 2 - 1'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   					3'  					image.Height / 2'  					image.Width - 4'  					image.Height / 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   					3'  					image.Height / 2'  					image.Width - 4'  					image.Height / 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   					3'  					image.Height / 2'  					image.Width - 4'  					image.Height / 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   					3'  					image.Height / 2'  					image.Width - 4'  					image.Height / 2);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   						image.Width / 2'  						3'  						image.Width / 2'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   						image.Width / 2'  						3'  						image.Width / 2'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   						image.Width / 2'  						3'  						image.Width / 2'  						image.Height - 4);
Magic Number,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandBox,The following statement contains a magic number: checkBoxGraphics.DrawLine(expandLinePen'   						image.Width / 2'  						3'  						image.Width / 2'  						image.Height - 4);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[2] = Properties.ResourcesCache.ArrowUpRight;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[3] = Properties.ResourcesCache.ArrowLeft;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[4] = null;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[5] = Properties.ResourcesCache.ArrowRight;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[6] = Properties.ResourcesCache.ArrowDownLeft;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[7] = Properties.ResourcesCache.ArrowDown;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OriginSelector,The following statement contains a magic number: this.arrows[8] = Properties.ResourcesCache.ArrowDownRight;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,GetButtonSize,The following statement contains a magic number: return new Size(  				(int)Math.Floor((float)this.ClientRectangle.Width / 3.0f)'  				(int)Math.Floor((float)this.ClientRectangle.Height / 3.0f));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,GetButtonSize,The following statement contains a magic number: return new Size(  				(int)Math.Floor((float)this.ClientRectangle.Width / 3.0f)'  				(int)Math.Floor((float)this.ClientRectangle.Height / 3.0f));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Pen gridPen = new Pen(Color.FromArgb(96' this.ForeColor));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: ColorMatrix arrowColorMatrix = new ColorMatrix(new float[][] {  				new float[] {this.ForeColor.R / 255.0f' 0.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' this.ForeColor.G / 255.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' this.ForeColor.B / 255.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' this.ForeColor.A / 255.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: ColorMatrix arrowColorMatrix = new ColorMatrix(new float[][] {  				new float[] {this.ForeColor.R / 255.0f' 0.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' this.ForeColor.G / 255.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' this.ForeColor.B / 255.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' this.ForeColor.A / 255.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: ColorMatrix arrowColorMatrix = new ColorMatrix(new float[][] {  				new float[] {this.ForeColor.R / 255.0f' 0.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' this.ForeColor.G / 255.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' this.ForeColor.B / 255.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' this.ForeColor.A / 255.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: ColorMatrix arrowColorMatrix = new ColorMatrix(new float[][] {  				new float[] {this.ForeColor.R / 255.0f' 0.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' this.ForeColor.G / 255.0f' 0.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' this.ForeColor.B / 255.0f' 0.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' this.ForeColor.A / 255.0f' 0.0f}'  				new float[] {0.0f' 0.0f' 0.0f' 0.0f' 1.0f}});
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: x < 3
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: y < 3
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: origTemp = (Origin)(x + y * 3);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: ((int)origTemp + 1) % 3 != 0 && origTemp == this.selOrigin - 1
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Size displayedSize = new Size(  							Math.Min(Math.Min(imgTemp.Width' buttonSize.Width - 2)' buttonSize.Width * 3 / 5)'  							Math.Min(Math.Min(imgTemp.Height' buttonSize.Height - 2)' buttonSize.Height * 3 / 5));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Size displayedSize = new Size(  							Math.Min(Math.Min(imgTemp.Width' buttonSize.Width - 2)' buttonSize.Width * 3 / 5)'  							Math.Min(Math.Min(imgTemp.Height' buttonSize.Height - 2)' buttonSize.Height * 3 / 5));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Size displayedSize = new Size(  							Math.Min(Math.Min(imgTemp.Width' buttonSize.Width - 2)' buttonSize.Width * 3 / 5)'  							Math.Min(Math.Min(imgTemp.Height' buttonSize.Height - 2)' buttonSize.Height * 3 / 5));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Size displayedSize = new Size(  							Math.Min(Math.Min(imgTemp.Width' buttonSize.Width - 2)' buttonSize.Width * 3 / 5)'  							Math.Min(Math.Min(imgTemp.Height' buttonSize.Height - 2)' buttonSize.Height * 3 / 5));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Size displayedSize = new Size(  							Math.Min(Math.Min(imgTemp.Width' buttonSize.Width - 2)' buttonSize.Width * 3 / 5)'  							Math.Min(Math.Min(imgTemp.Height' buttonSize.Height - 2)' buttonSize.Height * 3 / 5));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: Size displayedSize = new Size(  							Math.Min(Math.Min(imgTemp.Width' buttonSize.Width - 2)' buttonSize.Width * 3 / 5)'  							Math.Min(Math.Min(imgTemp.Height' buttonSize.Height - 2)' buttonSize.Height * 3 / 5));
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.DrawImage(imgTemp'  							new Rectangle(  								posUL.X + buttonSize.Width / 2 - displayedSize.Width / 2'   								posUL.Y + buttonSize.Height / 2 - displayedSize.Width / 2'  								displayedSize.Width'  								displayedSize.Height)'  							0' 0' imgTemp.Width' imgTemp.Height'  							GraphicsUnit.Pixel'  							arrowAttributes);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.DrawImage(imgTemp'  							new Rectangle(  								posUL.X + buttonSize.Width / 2 - displayedSize.Width / 2'   								posUL.Y + buttonSize.Height / 2 - displayedSize.Width / 2'  								displayedSize.Width'  								displayedSize.Height)'  							0' 0' imgTemp.Width' imgTemp.Height'  							GraphicsUnit.Pixel'  							arrowAttributes);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.DrawImage(imgTemp'  							new Rectangle(  								posUL.X + buttonSize.Width / 2 - displayedSize.Width / 2'   								posUL.Y + buttonSize.Height / 2 - displayedSize.Width / 2'  								displayedSize.Width'  								displayedSize.Height)'  							0' 0' imgTemp.Width' imgTemp.Height'  							GraphicsUnit.Pixel'  							arrowAttributes);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.DrawImage(imgTemp'  							new Rectangle(  								posUL.X + buttonSize.Width / 2 - displayedSize.Width / 2'   								posUL.Y + buttonSize.Height / 2 - displayedSize.Width / 2'  								displayedSize.Width'  								displayedSize.Height)'  							0' 0' imgTemp.Width' imgTemp.Height'  							GraphicsUnit.Pixel'  							arrowAttributes);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: x < 3
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: y < 3
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: int x = ((int)this.selOrigin) % 3;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: int y = ((int)this.selOrigin) / 3;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.FillRectangle(new SolidBrush(Color.FromArgb(64' this.selColor))'   					posUL.X'   					posUL.Y'   					posLR.X - posUL.X + 1'   					posLR.Y - posUL.Y + 1);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: int x = ((int)this.hoverOrigin) % 3;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: int y = ((int)this.hoverOrigin) / 3;
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.FillRectangle(new SolidBrush(Color.FromArgb(32' this.selColor))'   					posUL.X'   					posUL.Y'   					posLR.X - posUL.X + 1'   					posLR.Y - posUL.Y + 1);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.DrawRectangle(new Pen(Color.FromArgb(96' this.selColor))'  					posUL.X'   					posUL.Y'   					posLR.X - posUL.X + 1'   					posLR.Y - posUL.Y + 1);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnPaint,The following statement contains a magic number: g.FillRectangle(new SolidBrush(Color.FromArgb(128' this.BackColor))' this.ClientRectangle);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnMouseMove,The following statement contains a magic number: hoverInt += Math.Min(2' e.X / buttonSize.Width);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnMouseMove,The following statement contains a magic number: hoverInt += 3 * Math.Min(2' e.Y / buttonSize.Height);
Magic Number,AdamsLair.WinForms,OriginSelector,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\OriginSelector.cs,OnMouseMove,The following statement contains a magic number: hoverInt += 3 * Math.Min(2' e.Y / buttonSize.Height);
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ScaleBrightness,The following statement contains a magic number: return Color.FromArgb(c.A'  				(byte)Math.Min(Math.Max((float)c.R * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.G * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.B * ratio' 0.0f)' 255.0f));
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ScaleBrightness,The following statement contains a magic number: return Color.FromArgb(c.A'  				(byte)Math.Min(Math.Max((float)c.R * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.G * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.B * ratio' 0.0f)' 255.0f));
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ScaleBrightness,The following statement contains a magic number: return Color.FromArgb(c.A'  				(byte)Math.Min(Math.Max((float)c.R * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.G * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.B * ratio' 0.0f)' 255.0f));
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,MixWith,The following statement contains a magic number: return Color.FromArgb(c.A'  				(byte)Math.Min(Math.Max((float)c.R * myRatio + (float)other.R * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.G * myRatio + (float)other.G * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.B * myRatio + (float)other.B * ratio' 0.0f)' 255.0f));
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,MixWith,The following statement contains a magic number: return Color.FromArgb(c.A'  				(byte)Math.Min(Math.Max((float)c.R * myRatio + (float)other.R * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.G * myRatio + (float)other.G * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.B * myRatio + (float)other.B * ratio' 0.0f)' 255.0f));
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,MixWith,The following statement contains a magic number: return Color.FromArgb(c.A'  				(byte)Math.Min(Math.Max((float)c.R * myRatio + (float)other.R * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.G * myRatio + (float)other.G * ratio' 0.0f)' 255.0f)'  				(byte)Math.Min(Math.Max((float)c.B * myRatio + (float)other.B * ratio' 0.0f)' 255.0f));
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,GetLuminance,The following statement contains a magic number: return (0.2126f * color.R + 0.7152f * color.G + 0.0722f * color.B) / 255.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,GetLuminance,The following statement contains a magic number: return (0.2126f * color.R + 0.7152f * color.G + 0.0722f * color.B) / 255.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,GetLuminance,The following statement contains a magic number: return (0.2126f * color.R + 0.7152f * color.G + 0.0722f * color.B) / 255.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,GetLuminance,The following statement contains a magic number: return (0.2126f * color.R + 0.7152f * color.G + 0.0722f * color.B) / 255.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,GetHSVHue,The following statement contains a magic number: return color.GetHue() / 360.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,GetHSVBrightness,The following statement contains a magic number: return Math.Max(Math.Max(color.R' color.G)' color.B) / 255.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: hue *= 360.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: hue = (hue + 360.0f) % 360.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: hue = (hue + 360.0f) % 360.0f;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: int hi = Convert.ToInt32(Math.Floor(hue / 60)) % 6;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: int hi = Convert.ToInt32(Math.Floor(hue / 60)) % 6;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: double f = hue / 60 - Math.Floor(hue / 60);
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: double f = hue / 60 - Math.Floor(hue / 60);
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: value = value * 255;
Magic Number,AdamsLair.WinForms,ExtMethodsColor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Internal\ExtMethodsColor.cs,ColorFromHSV,The following statement contains a magic number: return Color.FromArgb(255' v' t' p);
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,PickModelIndexAt,The following statement contains a magic number: x -= this.ClientRectangle.X + this.Padding.Left - this.spacing.Width / 2;
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,PickModelIndexAt,The following statement contains a magic number: y -= this.ClientRectangle.Y + this.Padding.Top - this.spacing.Height / 2;
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,PickModelIndexAt,The following statement contains a magic number: switch (this.rowAlignment)  			{  				default:  				case HorizontalAlignment.Left:  					break;  				case HorizontalAlignment.Right:  					x -= this.additionalSpace;  					break;  				case HorizontalAlignment.Center:  					x -= this.additionalSpace / 2;  					break;  			}
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,GetModelIndexLocation,The following statement contains a magic number: switch (this.rowAlignment)  			{  				default:  				case HorizontalAlignment.Left:  					break;  				case HorizontalAlignment.Right:  					result.X += this.additionalSpace;  					break;  				case HorizontalAlignment.Center:  					result.X += this.additionalSpace / 2;  					break;  			}
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,CreateItemEditor,The following statement contains a magic number: iconOffset /= 2;
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnPaintItem,The following statement contains a magic number: e.Graphics.DrawImage(icon' new RectangleF(  						itemRect.X + (itemRect.Width - iconSize.Width) * 0.5f'   						itemRect.Y + Math.Max(0' iconAreaHeight - iconSize.Height) * 0.5f'   						iconSize.Width'   						iconSize.Height));
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnPaintItem,The following statement contains a magic number: e.Graphics.DrawImage(icon' new RectangleF(  						itemRect.X + (itemRect.Width - iconSize.Width) * 0.5f'   						itemRect.Y + Math.Max(0' iconAreaHeight - iconSize.Height) * 0.5f'   						iconSize.Width'   						iconSize.Height));
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(Color.FromArgb(128' this.renderer.ColorBackground))' this.ClientRectangle);
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnMouseMove,The following statement contains a magic number: bool dragSizeReached =   					Math.Abs(diff.X) > SystemInformation.DragSize.Width / 2 ||   					Math.Abs(diff.Y) > SystemInformation.DragSize.Height / 2;
Magic Number,AdamsLair.WinForms.ItemViews,TiledView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\ItemViews\TiledView.cs,OnMouseMove,The following statement contains a magic number: bool dragSizeReached =   					Math.Abs(diff.X) > SystemInformation.DragSize.Width / 2 ||   					Math.Abs(diff.Y) > SystemInformation.DragSize.Height / 2;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,LabelPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\LabelPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,LabelPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\LabelPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.selectableLabel.Rect = new Rectangle(  				this.ClientRectangle.X + 1'  				this.ClientRectangle.Y + 1'  				this.ClientRectangle.Width - 2'  				this.ClientRectangle.Height - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = Math.Max(13' 3 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height));
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = Math.Max(13' 3 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height));
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnPaint,The following statement contains a magic number: Point boxLoc = new Point(  				this.ClientRectangle.X + 2'  				this.ClientRectangle.Y + this.ClientRectangle.Height / 2 - boxSize.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnPaint,The following statement contains a magic number: Point boxLoc = new Point(  				this.ClientRectangle.X + 2'  				this.ClientRectangle.Y + this.ClientRectangle.Height / 2 - boxSize.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BoolPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BoolPropertyEditor.cs,OnPaint,The following statement contains a magic number: Point boxLoc = new Point(  				this.ClientRectangle.X + 2'  				this.ClientRectangle.Y + this.ClientRectangle.Height / 2 - boxSize.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,EnumPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\EnumPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,EnumPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\EnumPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.stringSelector.Rect = new Rectangle(  				this.ClientRectangle.X + 1'  				this.ClientRectangle.Y + 1'  				this.ClientRectangle.Width - 2'  				this.ClientRectangle.Height - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BitmaskPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BitmaskPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,BitmaskPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\BitmaskPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.bitmaskSelector.Rect = new Rectangle(  				this.ClientRectangle.X + 1'  				this.ClientRectangle.Y + 1'  				this.ClientRectangle.Width - 2'  				this.ClientRectangle.Height - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: this.offset = Math.Min(this.offset' visibleElementCount - 10);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: this.offsetEditor.Maximum = visibleElementCount - 10;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: visibleElementCount = 10;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: visibleElementCount > 10
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IListPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IListPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: this.internalEditors = showOffset ? 2 : 1;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: this.offset = Math.Min(this.offset' visibleElementCount - 10);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: this.offsetEditor.Maximum = visibleElementCount - 10;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: visibleElementCount = 10;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: visibleElementCount > 10
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,IDictionaryPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\IDictionaryPropertyEditor.cs,UpdateElementEditors,The following statement contains a magic number: this.internalEditors = showOffset ? 2 : 1;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,ObjectSelectorPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\ObjectSelectorPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,ObjectSelectorPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\ObjectSelectorPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.objSelector.Rect = new Rectangle(  				this.ClientRectangle.X + 1'  				this.ClientRectangle.Y + 1'  				this.ClientRectangle.Width - 2'  				this.ClientRectangle.Height - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,StringPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\StringPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.Height = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,StringPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\StringPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.stringEditor.Rect = new Rectangle(  				this.ClientRectangle.X + 1'  				this.ClientRectangle.Y + 1'  				this.ClientRectangle.Width - 2'  				this.ClientRectangle.Height - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,UpdateHeight,The following statement contains a magic number: showMinMaxBar = (float)((this.ValueBarMaximum - this.ValueBarMinimum) / this.Increment) < 10000.0f;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,UpdateHeight,The following statement contains a magic number: this.ValueBarMinimum > decimal.MinValue / 2 && this.ValueBarMaximum < decimal.MaxValue / 2
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,UpdateHeight,The following statement contains a magic number: this.ValueBarMinimum > decimal.MinValue / 2 && this.ValueBarMaximum < decimal.MaxValue / 2
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,UpdateHeight,The following statement contains a magic number: int prefHeight = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,UpdateHeight,The following statement contains a magic number: prefHeight += 3;
Magic Number,AdamsLair.WinForms.PropertyEditing.Editors,NumericPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditors\NumericPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.numEditor.Rect = new Rectangle(  				this.ClientRectangle.X + 1'  				this.ClientRectangle.Y + 1'  				this.ClientRectangle.Width - 2'  				this.ClientRectangle.Height - 1);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineLinearGraphModel,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\Models\TimelineLinearGraphModel.cs,SearchIndexBelow,The following statement contains a magic number: int mid = (left + right) / 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,GetEnvelopeVisibility,The following statement contains a magic number: float variance = this.parentTrack.ConvertUnitsToPixels(unitYRange) / 80.0f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaint,The following statement contains a magic number: pixelWidth < 5
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaint,The following statement contains a magic number: pixelWidth > 2
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: switch (e.GetAdjustedQuality(this.parentTrack.CurvePrecision))  			{  				case QualityLevel.High:  					minPixelStep = 0.25f;  					break;  				default:  				case QualityLevel.Medium:  					minPixelStep = 0.5f;  					break;  				case QualityLevel.Low:  					minPixelStep = 1.0f;  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: switch (e.GetAdjustedQuality(this.parentTrack.CurvePrecision))  			{  				case QualityLevel.High:  					minPixelStep = 0.25f;  					break;  				default:  				case QualityLevel.Medium:  					minPixelStep = 0.5f;  					break;  				case QualityLevel.Low:  					minPixelStep = 1.0f;  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: minPixelStep *= 8.0f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: visiblePixelHeight < 10.0f
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: minPixelStep = Math.Min(minPixelStep' 4);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: beginUnitX -= minUnitStep * 5.0f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: switch (e.GetAdjustedQuality(this.parentTrack.EnvelopePrecision))  					{  						case QualityLevel.High:  							minEnvelopeStepFactor = 0.1f;  							break;  						default:  						case QualityLevel.Medium:  							minEnvelopeStepFactor = 0.5f;  							break;  						case QualityLevel.Low:  							minEnvelopeStepFactor = 1.0f;  							break;  					}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: switch (e.GetAdjustedQuality(this.parentTrack.EnvelopePrecision))  					{  						case QualityLevel.High:  							minEnvelopeStepFactor = 0.1f;  							break;  						default:  						case QualityLevel.Medium:  							minEnvelopeStepFactor = 0.5f;  							break;  						case QualityLevel.Low:  							minEnvelopeStepFactor = 1.0f;  							break;  					}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: curvePointsEnvMax == null || curvePointsEnvMin == null || curvePointsEnvMax.Length + curvePointsEnvMin.Length < 3
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: float varianceUnitRadius = this.ParentView.ConvertPixelsToUnits(0.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: KeyValuePair<float'float>[] baseBlend = new KeyValuePair<float'float>[Math.Max(this.cacheCurveVertices.Length' 2)];
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: const int Samples = 21;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: const int SamplesHalf = Samples / 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: const int BlendSamplesPerChunk = 4;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: ColorBlend envelopeBlend = new ColorBlend(Math.Max(baseBlend.Length * BlendSamplesPerChunk / Samples' 2));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: ColorBlend curveBlend = new ColorBlend(Math.Max(baseBlend.Length * BlendSamplesPerChunk / Samples' 2));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: envelopeBlend.Colors[i] = Color.FromArgb((int)(localOpacity * this.envelopeOpacity * 255.0f)' this.baseColor);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: envelopeBlend.Positions[i] = baseBlend[firstIndex + (lastIndex - firstIndex) / 2].Key;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: curveBlend.Colors[i] = Color.FromArgb((int)((1.0f - localOpacity) * (1.0f - localOpacity) * this.curveOpacity * 255.0f)' this.baseColor);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: curveBlend.Positions[i] = baseBlend[firstIndex + (lastIndex - firstIndex) / 2].Key;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: highestOpacity <= 0.05f
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: curvePointsEnvMax != null && curvePointsEnvMin != null && curvePointsEnvMax.Length + curvePointsEnvMin.Length >= 3
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: this.cacheEnvelopeGradient != null && this.cacheEnvelopeVertices != null && this.cacheEnvelopeVertices.Length >= 3
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintCurve,The following statement contains a magic number: this.cacheCurveVertices != null && this.cacheCurveVertices.Length >= 2
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,OnPaintBoundaries,The following statement contains a magic number: Pen boundaryPen = new Pen(Color.FromArgb(128' this.baseColor));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraph,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraph.cs,GetLinearInterpolationError,The following statement contains a magic number: const double Samples = 2.0d;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetVisibleRulerMarks,The following statement contains a magic number: const float BigMarkDelta = 0.00001f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetVisibleRulerMarks,The following statement contains a magic number: float bigMarkRange = TimelineView.GetNiceMultiple(Math.Abs(this.verticalUnitTop - this.verticalUnitBottom) * 0.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetVisibleRulerMarks,The following statement contains a magic number: float rulerStep = -TimelineView.GetNiceMultiple(Math.Abs(this.verticalUnitTop - this.verticalUnitBottom)) / 10.0f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetVisibleRulerMarks,The following statement contains a magic number: (((unitValue + BigMarkDelta) % bigMarkRange) + bigMarkRange) % bigMarkRange <= BigMarkDelta * 2.0f
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,AdjustVerticalUnits,The following statement contains a magic number: this.verticalUnitBottom -= 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,AdjustVerticalUnits,The following statement contains a magic number: this.verticalUnitTop += 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,AdjustVerticalUnits,The following statement contains a magic number: Math.Abs(this.verticalUnitBottom - this.verticalUnitTop) <= 0.00000001f
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: float maxValue = graph.Model.GetMaxValueInRange(cursorUnits.X - unitsPerPixel.X * 2.5f' cursorUnits.X + unitsPerPixel.X * 2.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: float maxValue = graph.Model.GetMaxValueInRange(cursorUnits.X - unitsPerPixel.X * 2.5f' cursorUnits.X + unitsPerPixel.X * 2.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: float minValue = graph.Model.GetMinValueInRange(cursorUnits.X - unitsPerPixel.X * 2.5f' cursorUnits.X + unitsPerPixel.X * 2.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: float minValue = graph.Model.GetMinValueInRange(cursorUnits.X - unitsPerPixel.X * 2.5f' cursorUnits.X + unitsPerPixel.X * 2.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: float midValue = (maxValue + minValue) * 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: valueSpan = Math.Max(valueSpan' unitsPerPixel.Y * 10);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: minValue = midValue - valueSpan * 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateMouseoverState,The following statement contains a magic number: maxValue = midValue + valueSpan * 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateDisplayedGraphInfo,The following statement contains a magic number: const int SampleCount = 10;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateDisplayedGraphInfo,The following statement contains a magic number: float timeRadius = 0.5f * (sampleEnd - sampleBegin);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateDisplayedGraphInfo,The following statement contains a magic number: float sampleTime = sampleBegin + ((float)i / (float)(SampleCount - 1)) * 2.0f * timeRadius;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,UpdateDisplayedGraphInfo,The following statement contains a magic number: info.AverageValue += (localMin + localMax) * 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetDefaultGraphColor,The following statement contains a magic number: const double GoldenRatio = 1.618033988749895d;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetDefaultGraphColor,The following statement contains a magic number: return ExtMethodsColor.ColorFromHSV(  				(float)((graphIndex * GoldenRatio) % 1.0d)'   				0.75f'   				(float)Math.Sqrt(1.0d - ((graphIndex * GoldenRatio) % 0.5d)));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,GetDefaultGraphColor,The following statement contains a magic number: return ExtMethodsColor.ColorFromHSV(  				(float)((graphIndex * GoldenRatio) % 1.0d)'   				0.75f'   				(float)Math.Sqrt(1.0d - ((graphIndex * GoldenRatio) % 0.5d)));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnCursorMove,The following statement contains a magic number: this.Invalidate(e.CursorUnits - unitsPerPixel * 6' e.CursorUnits + unitsPerPixel * MaxGraphValueTextWidth);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnCursorMove,The following statement contains a magic number: this.Invalidate(e.LastCursorUnits - unitsPerPixel * 6' e.LastCursorUnits + unitsPerPixel * MaxGraphValueTextWidth);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnCursorEnter,The following statement contains a magic number: this.Invalidate(e.CursorUnits - unitsPerPixel * 6' e.CursorUnits + unitsPerPixel * MaxGraphValueTextWidth);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnCursorLeave,The following statement contains a magic number: this.Invalidate(e.LastCursorUnits - unitsPerPixel * 6' e.LastCursorUnits + unitsPerPixel * MaxGraphValueTextWidth);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaint,The following statement contains a magic number: Brush bigLineBrush = new SolidBrush(e.Renderer.ColorRulerMarkMajor.ScaleAlpha(0.25f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaint,The following statement contains a magic number: Brush medLineBrush = new SolidBrush(e.Renderer.ColorRulerMarkRegular.ScaleAlpha(0.25f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaint,The following statement contains a magic number: Brush minLineBrush = new SolidBrush(e.Renderer.ColorRulerMarkMinor.ScaleAlpha(0.25f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: int timeDecimals		= Math.Max(0' -(int)Math.Log10(visibleTimeSpan) + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: int valueDecimals		= Math.Max(0' -(int)Math.Log10(visibleValueSpan) + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: e.Graphics.DrawString(  						timeText'  						textFont'   						new SolidBrush(e.Renderer.ColorText)'   						(int)selectionEndPixels + 2'   						e.TargetRect.Y + 1'   						textFormat);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: e.Graphics.DrawString(  						timeText'  						textFont'   						new SolidBrush(e.Renderer.ColorText)'   						(int)selectionBeginPixels - 2 - textSize.Width'   						e.TargetRect.Y + 1'   						textFormat);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: float minPixels = Math.Min(e.TargetRect.Y + this.GetPosAtUnit(info.MinValue)' e.TargetRect.Bottom - 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: Color graphInfoColor = graph.BaseColor.ScaleBrightness(0.75f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: e.Graphics.FillRectangle(new SolidBrush(graphInfoColor.ScaleAlpha(0.3f))' selectionBeginPixels' Math.Min(minPixels' maxPixels)' selectionEndPixels - selectionBeginPixels' Math.Abs(maxPixels - minPixels));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' minPixels + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' minPixels + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' minPixels + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos.X = selectionEndPixels + 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos.Y = minPixels - 2 - textSize.Height;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' maxPixels - 2 - textSize.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' maxPixels - 2 - textSize.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos = new PointF((selectionBeginPixels + selectionEndPixels) * 0.5f - textSize.Width * 0.5f' maxPixels - 2 - textSize.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos.X = selectionEndPixels + 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,OnPaintOverlay,The following statement contains a magic number: textPos.Y = maxPixels + 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: int valueDecimals = Math.Max(0' -(int)Math.Log10(visibleValueSpan) + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: float markingRatio = 0.5f + 0.5f * (1.0f - Math.Max(Math.Min((float)rect.Height / 32.0f' 1.0f)' 0.0f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: float markingRatio = 0.5f + 0.5f * (1.0f - Math.Max(Math.Min((float)rect.Height / 32.0f' 1.0f)' 0.0f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: float markingRatio = 0.5f + 0.5f * (1.0f - Math.Max(Math.Min((float)rect.Height / 32.0f' 1.0f)' 0.0f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: rectTrackName = new Rectangle(  					rect.X'   					rect.Y'   					Math.Min(rect.Width' r.FontRegular.Height + 2)'   					rect.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: rectUnitMarkings = new Rectangle(  					rect.Right - Math.Min((int)(rect.Width * markingRatio)' 16)'  					rect.Y'  					Math.Min((int)(rect.Width * markingRatio)' 16)'  					rect.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: rectUnitMarkings = new Rectangle(  					rect.Right - Math.Min((int)(rect.Width * markingRatio)' 16)'  					rect.Y'  					Math.Min((int)(rect.Width * markingRatio)' 16)'  					rect.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: int maxUnitWidth = Math.Max(Math.Max(rectUnitMarkings.Width' (int)verticalTopTextSize.Width + 2)' (int)verticalBottomTextSize.Width + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: int maxUnitWidth = Math.Max(Math.Max(rectUnitMarkings.Width' (int)verticalTopTextSize.Width + 2)' (int)verticalBottomTextSize.Width + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: g.TranslateTransform(  					rectTrackName.X + (int)textSize.Height + 2'   					rectTrackName.Y);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: g.RotateTransform(90);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: g.DrawString(  					this.Model.TrackName'   					r.FontRegular'   					new SolidBrush(Color.FromArgb((int)(textOverlapAlpha * 255)' r.ColorText))'   					new Rectangle(0' 0' rectTrackName.Height' rectTrackName.Width)'   					format);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: int borderDistInner = r.FontSmall.Height / 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: int borderDistOuter = r.FontSmall.Height / 2 + 15;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: int borderDistOuter = r.FontSmall.Height / 2 + 15;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewGraphTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewGraphTrack.cs,DrawRuler,The following statement contains a magic number: g.DrawString(  								text'   								r.FontSmall'   								new SolidBrush(textColor)'   								left ? markTopX - textSize.Width : markBottomX'   								mark.PixelValue - textSize.Height * 0.5f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,TimelineView,The following statement contains a magic number: this.paintHqTimer.Interval = 50;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,TimelineView,The following statement contains a magic number: this.mouseActionTimer.Interval = 16;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetVisibleRulerMarks,The following statement contains a magic number: float rulerStep = GetNiceMultiple(this.ConvertPixelsToUnits(100.0f)) / 10.0f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetVisibleRulerMarks,The following statement contains a magic number: float rulerStep = GetNiceMultiple(this.ConvertPixelsToUnits(100.0f)) / 10.0f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetVisibleRulerMarks,The following statement contains a magic number: (lineIndex % 10) == 0
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetVisibleRulerMarks,The following statement contains a magic number: EnumerateRulerMarks(rulerStep' unitScroll' beginTime' endTime' 10)
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,AdjustZoomLevel,The following statement contains a magic number: targetPos = new Point(this.ClientRectangle.Width / 2' this.ClientRectangle.Height / 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,AdjustZoomLevel,The following statement contains a magic number: targetPos = new Point(this.ClientRectangle.Width / 2' this.ClientRectangle.Height / 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,AdjustZoomLevel,The following statement contains a magic number: this.SetUnitZoomInternal(this.unitZoom * (float)Math.Pow(1.5f' amount));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,InvalidateContent,The following statement contains a magic number: float toPixels = Math.Min(this.GetPosAtUnit(toUnits)' invalidateRect.Right) + 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,SetUnitZoomInternal,The following statement contains a magic number: newZoom = Math.Min(Math.Max(newZoom' 0.0001f)' 10000.0f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,SetUnitZoomInternal,The following statement contains a magic number: newZoom = Math.Min(Math.Max(newZoom' 0.0001f)' 10000.0f);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateGeometry,The following statement contains a magic number: this.rectLeftSidebar = new Rectangle(  				0'  				this.areaTopRuler.Size - 1'  				this.areaLeftSidebar.Size + 1'  				this.ClientRectangle.Height - this.areaTopRuler.Size - this.areaBottomRuler.Size + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateGeometry,The following statement contains a magic number: this.rectRightSidebar = new Rectangle(  				this.ClientRectangle.Width - this.areaRightSidebar.Size - 1'  				this.areaTopRuler.Size - 1'  				this.areaRightSidebar.Size + 1'  				this.ClientRectangle.Height - this.areaTopRuler.Size - this.areaBottomRuler.Size + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateGeometry,The following statement contains a magic number: this.rectContentArea = new Rectangle(  				this.areaLeftSidebar.Size'  				this.areaTopRuler.Size - 1'  				this.ClientRectangle.Width - this.areaLeftSidebar.Size - this.areaRightSidebar.Size'  				this.ClientRectangle.Height - this.areaTopRuler.Size - this.areaBottomRuler.Size + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateContentHeight,The following statement contains a magic number: int additionalHeight = Math.Max(0' this.ClientSize.Height - contentBaseHeight - this.trackSpacing * (this.trackList.Count - 1) + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,UpdateContentHeight,The following statement contains a magic number: int contentHeight = this.areaTopRuler.Size + this.areaBottomRuler.Size + this.trackList.Sum(t => t.Height) + this.trackSpacing * (this.trackList.Count - 1) - 2;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnModelTracksAdded,The following statement contains a magic number: track.FillHeight = 100;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: this.lastPaintHqTime.TotalMilliseconds < 20.0d
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Brush bigLineBrush = new SolidBrush(this.renderer.ColorRulerMarkMajor.ScaleAlpha(0.25f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Brush medLineBrush = new SolidBrush(this.renderer.ColorRulerMarkRegular.ScaleAlpha(0.25f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Brush minLineBrush = new SolidBrush(this.renderer.ColorRulerMarkMinor.ScaleAlpha(0.25f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Rectangle targetRect = new Rectangle(  						this.rectContentArea.X + 1'  						this.rectContentArea.Y + y + this.AutoScrollPosition.Y'  						this.rectContentArea.Width - 2'  						track.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Pen pen = new Pen(Color.FromArgb(128' this.Renderer.ColorText));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: SolidBrush brush = new SolidBrush(Color.FromArgb(32' this.Renderer.ColorText));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Pen mouseoverTimePen = new Pen(Color.FromArgb(128' this.Renderer.ColorText));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Rectangle targetRect = new Rectangle(  						this.rectContentArea.X + 1'  						this.rectContentArea.Y + y + this.AutoScrollPosition.Y'  						this.rectContentArea.Width - 2'  						track.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: shadowBlend.Positions	= new[] {	0.0f'								0.5f'								1.0f };
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: shadowBlend.Colors		= new[] {	Color.FromArgb(64' shadowColor)'	Color.FromArgb(16' shadowColor)'	Color.FromArgb(0' shadowColor) };
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: shadowBlend.Colors		= new[] {	Color.FromArgb(64' shadowColor)'	Color.FromArgb(16' shadowColor)'	Color.FromArgb(0' shadowColor) };
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Rectangle dropShadowH = new Rectangle(this.rectContentArea.Left' this.rectContentArea.Top' this.rectContentArea.Width' Math.Min(12' this.rectContentArea.Height));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: Rectangle dropShadowV = new Rectangle(this.rectContentArea.Left' this.rectContentArea.Top' Math.Min(12' this.rectContentArea.Width)' this.rectContentArea.Height);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillEllipse(new SolidBrush(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin.X - 3' this.mouseActionOrigin.Y - 3' 6' 6);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillEllipse(new SolidBrush(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin.X - 3' this.mouseActionOrigin.Y - 3' 6' 6);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillEllipse(new SolidBrush(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin.X - 3' this.mouseActionOrigin.Y - 3' 6' 6);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillEllipse(new SolidBrush(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin.X - 3' this.mouseActionOrigin.Y - 3' 6' 6);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillEllipse(new SolidBrush(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin.X - 3' this.mouseActionOrigin.Y - 3' 6' 6);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawLine(new Pen(this.renderer.ColorText.ScaleAlpha(0.5f))' this.mouseActionOrigin' this.PointToClient(Cursor.Position));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: float markingRatio = 0.5f + 0.5f * (1.0f - Math.Max(Math.Min((float)rect.Height / 32.0f' 1.0f)' 0.0f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: float markingRatio = 0.5f + 0.5f * (1.0f - Math.Max(Math.Min((float)rect.Height / 32.0f' 1.0f)' 0.0f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: float markingRatio = 0.5f + 0.5f * (1.0f - Math.Max(Math.Min((float)rect.Height / 32.0f' 1.0f)' 0.0f));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: rectUnitMarkings = new Rectangle(  						rect.X'  						rect.Bottom - Math.Min((int)(rect.Height * markingRatio)' 16)'  						rect.Width'  						Math.Min((int)(rect.Height * markingRatio)' 16));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: rectUnitMarkings = new Rectangle(  						rect.X'  						rect.Bottom - Math.Min((int)(rect.Height * markingRatio)' 16)'  						rect.Width'  						Math.Min((int)(rect.Height * markingRatio)' 16));
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: g.DrawString(  					unitText'   					this.renderer.FontRegular'   					new SolidBrush(Color.FromArgb((int)(textOverlapAlpha * 255)' this.renderer.ColorText))'   					rect'   					format);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: int timeDecimals = Math.Max(0' -(int)Math.Log10(this.VisibleUnitWidth) + 2);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: markTextY = rectUnitMarkings.Bottom - this.renderer.FontRegular.Height - Math.Max(Math.Min(3 + rectUnitMarkings.Top - rectUnitName.Bottom' rectUnitMarkings.Height / 2)' 0);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,DrawRuler,The following statement contains a magic number: markTextY = rectUnitMarkings.Bottom - this.renderer.FontRegular.Height - Math.Max(Math.Min(3 + rectUnitMarkings.Top - rectUnitName.Bottom' rectUnitMarkings.Height / 2)' 0);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,mouseActionTimer_Tick,The following statement contains a magic number: const float ScrollSpeed = 0.5f;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (granularity)  			{  				case NiceMultipleGranularity.Low:  					allowedFactors = new float[] { 1.0f' 5.0f' 10.0f };  					break;  				default:  				case NiceMultipleGranularity.Medium:  					allowedFactors = new float[] { 1.0f' 2.0f' 5.0f' 10.0f };  					break;  				case NiceMultipleGranularity.High:  					allowedFactors = new float[] { 1.0f' 2.0f' 3.0f' 4.0f' 5.0f' 6.0f' 7.0f' 8.0f' 9.0f' 10.0f };  					break;  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: float baseValue = (float)Math.Pow(10.0f' magnitude);
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,GetNiceMultiple,The following statement contains a magic number: switch (mode)  			{  				case NiceMultipleMode.Higher:  				{  					for (int i = 0; i < allowedFactors.Length; i++)  					{  						if (i == allowedFactors.Length - 1 || factor <= allowedFactors[i])  						{  							factor = allowedFactors[i];  							break;  						}  					}  					break;  				}  				case NiceMultipleMode.Lower:  				{  					for (int i = 0; i < allowedFactors.Length; i++)  					{  						if (i == allowedFactors.Length - 1 || factor < allowedFactors[i + 1])  						{  							factor = allowedFactors[i];  							break;  						}  					}  					break;  				}  				default:  				case NiceMultipleMode.Nearest:  				{  					for (int i = 0; i < allowedFactors.Length; i++)  					{  						if (i == allowedFactors.Length - 1 || factor < (allowedFactors[i] + allowedFactors[i + 1]) * 0.5f)  						{  							factor = allowedFactors[i];  							break;  						}  					}  					break;  				}  			}
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineView,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineView.cs,EnumerateRulerMarks,The following statement contains a magic number: int roundDecimals = 3;
Magic Number,AdamsLair.WinForms.TimelineControls,TimelineViewTrack,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\TimelineControls\TimelineViewTrack.cs,Invalidate,The following statement contains a magic number: float toPixels = Math.Min(this.parentView.GetPosAtUnit(toUnits)' rectOnParent.Right - this.parentView.RightSidebarSize) + 2;
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: buttonRect.Y = this.Location.Y + this.headerHeight / 2 - buttonRect.Height / 2;
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: buttonRect.Y = this.Location.Y + this.headerHeight / 2 - buttonRect.Height / 2;
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.expandCheckRect = new Rectangle(  					this.headerRect.X + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - ControlRenderer.CheckBoxSize.Height / 2 - 1'  					ControlRenderer.CheckBoxSize.Width'  					ControlRenderer.CheckBoxSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.expandCheckRect = new Rectangle(  					this.headerRect.X + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - ControlRenderer.CheckBoxSize.Height / 2 - 1'  					ControlRenderer.CheckBoxSize.Width'  					ControlRenderer.CheckBoxSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.expandCheckRect = new Rectangle(  					this.headerRect.X + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - ControlRenderer.CheckBoxSize.Height / 2 - 1'  					ControlRenderer.CheckBoxSize.Width'  					ControlRenderer.CheckBoxSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.activeCheckRect = new Rectangle(  					this.expandCheckRect.Right + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - ControlRenderer.CheckBoxSize.Height / 2 - 1'  					ControlRenderer.CheckBoxSize.Width'  					ControlRenderer.CheckBoxSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.activeCheckRect = new Rectangle(  					this.expandCheckRect.Right + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - ControlRenderer.CheckBoxSize.Height / 2 - 1'  					ControlRenderer.CheckBoxSize.Width'  					ControlRenderer.CheckBoxSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.activeCheckRect = new Rectangle(  					this.expandCheckRect.Right + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - ControlRenderer.CheckBoxSize.Height / 2 - 1'  					ControlRenderer.CheckBoxSize.Width'  					ControlRenderer.CheckBoxSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The following statement contains a magic number: iconRect = new Rectangle(  					this.activeCheckRect.Right + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - this.headerIcon.Height / 2'   					this.headerIcon.Width'  					this.headerIcon.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The following statement contains a magic number: iconRect = new Rectangle(  					this.activeCheckRect.Right + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - this.headerIcon.Height / 2'   					this.headerIcon.Width'  					this.headerIcon.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The following statement contains a magic number: iconRect = new Rectangle(  					this.activeCheckRect.Right + 2'  					this.headerRect.Y + this.headerRect.Height / 2 - this.headerIcon.Height / 2'   					this.headerIcon.Width'  					this.headerIcon.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintHeader,The following statement contains a magic number: Rectangle textRect = new Rectangle(  				iconRect.Right'   				this.headerRect.Y'   				this.headerRect.Width - buttonRect.Width - iconRect.Width - this.expandCheckRect.Width - this.activeCheckRect.Width - 2'   				this.headerRect.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintIndentExpandButton,The following statement contains a magic number: Rectangle expandButtonRect = new Rectangle(  				indentExpandRect.X + indentExpandRect.Width / 2 - ControlRenderer.ExpandNodeSize.Width / 2'  				indentExpandRect.Y + indentExpandRect.Height / 2 - ControlRenderer.ExpandNodeSize.Height / 2 - 1'  				ControlRenderer.ExpandNodeSize.Width'  				ControlRenderer.ExpandNodeSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintIndentExpandButton,The following statement contains a magic number: Rectangle expandButtonRect = new Rectangle(  				indentExpandRect.X + indentExpandRect.Width / 2 - ControlRenderer.ExpandNodeSize.Width / 2'  				indentExpandRect.Y + indentExpandRect.Height / 2 - ControlRenderer.ExpandNodeSize.Height / 2 - 1'  				ControlRenderer.ExpandNodeSize.Width'  				ControlRenderer.ExpandNodeSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintIndentExpandButton,The following statement contains a magic number: Rectangle expandButtonRect = new Rectangle(  				indentExpandRect.X + indentExpandRect.Width / 2 - ControlRenderer.ExpandNodeSize.Width / 2'  				indentExpandRect.Y + indentExpandRect.Height / 2 - ControlRenderer.ExpandNodeSize.Height / 2 - 1'  				ControlRenderer.ExpandNodeSize.Width'  				ControlRenderer.ExpandNodeSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,PaintIndentExpandButton,The following statement contains a magic number: Rectangle expandButtonRect = new Rectangle(  				indentExpandRect.X + indentExpandRect.Width / 2 - ControlRenderer.ExpandNodeSize.Width / 2'  				indentExpandRect.Y + indentExpandRect.Height / 2 - ControlRenderer.ExpandNodeSize.Height / 2 - 1'  				ControlRenderer.ExpandNodeSize.Width'  				ControlRenderer.ExpandNodeSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,OnParentEditorChanged,The following statement contains a magic number: this.HeaderHeight = 5 + (int)Math.Round((float)this.ControlRenderer.FontRegular.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: Color lightColor = baseColor.ScaleBrightness(style == GroupHeaderStyle.SmoothSunken ? 0.85f : 1.1f);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: Color lightColor = baseColor.ScaleBrightness(style == GroupHeaderStyle.SmoothSunken ? 0.85f : 1.1f);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: Color darkColor = baseColor.ScaleBrightness(style == GroupHeaderStyle.SmoothSunken ? 0.95f : 0.85f);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: Color darkColor = baseColor.ScaleBrightness(style == GroupHeaderStyle.SmoothSunken ? 0.95f : 0.85f);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: LinearGradientBrush gradientBrush = new LinearGradientBrush(rect' lightColor' darkColor' 90.0f);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: g.DrawLine(new Pen(Color.FromArgb(128' Color.White))' rect.Left' rect.Top' rect.Right' rect.Top);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: g.DrawLine(new Pen(Color.FromArgb(64' Color.Black))' rect.Left' rect.Bottom - 1' rect.Right' rect.Bottom - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: g.DrawLine(new Pen(Color.FromArgb(64' Color.White))' rect.Left' rect.Top' rect.Left' rect.Bottom - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing,GroupedPropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\GroupedPropertyEditor.cs,DrawGroupHeaderBackground,The following statement contains a magic number: g.DrawLine(new Pen(Color.FromArgb(32' Color.Black))' rect.Right' rect.Top' rect.Right' rect.Bottom - 1);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: Size buttonSize = this.buttonIcon != null ? this.buttonIcon.Size : new Size(10' 10);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: Size buttonSize = this.buttonIcon != null ? this.buttonIcon.Size : new Size(10' 10);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,UpdateGeometry,The following statement contains a magic number: this.buttonRect.Width = Math.Min(this.rect.Height' buttonSize.Height + 2);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: Point buttonCenter = new Point(this.buttonRect.X + this.buttonRect.Width / 2' this.buttonRect.Y + this.buttonRect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: Point buttonCenter = new Point(this.buttonRect.X + this.buttonRect.Width / 2' this.buttonRect.Y + this.buttonRect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: buttonBgRect.X = this.buttonRect.X + this.buttonRect.Width / 2 - buttonBgRect.Width / 2 - 1;
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: buttonBgRect.X = this.buttonRect.X + this.buttonRect.Width / 2 - buttonBgRect.Width / 2 - 1;
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: buttonBgRect.Y = this.buttonRect.Y + this.buttonRect.Height / 2 - buttonBgRect.Height / 2 - 1;
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: buttonBgRect.Y = this.buttonRect.Y + this.buttonRect.Height / 2 - buttonBgRect.Height / 2 - 1;
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: g.FillRectangle(new SolidBrush(Color.FromArgb(128' Color.White))' buttonBgRect);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: g.DrawImage(buttonImage' buttonCenter.X - buttonSize.Width / 2' buttonCenter.Y - buttonSize.Height / 2' buttonSize.Width' buttonSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyEditor,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyEditor.cs,PaintButton,The following statement contains a magic number: g.DrawImage(buttonImage' buttonCenter.X - buttonSize.Width / 2' buttonCenter.Y - buttonSize.Height / 2' buttonSize.Width' buttonSize.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing,PropertyGrid,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\PropertyGrid.cs,PropertyGrid,The following statement contains a magic number: this.updateTimer.Interval = 100;
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,ComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\ComboBoxEditorTemplate.cs,OnMouseDown,The following statement contains a magic number: this.hovered && (e.Button & MouseButtons.Left) != MouseButtons.None && (DateTime.Now - this.mouseClosed).TotalMilliseconds > 200
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,EditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\EditorTemplate.cs,OnMouseMove,The following statement contains a magic number: this.hovered = new Rectangle(this.rect.X + 2' this.rect.Y' this.rect.Width - 4' this.rect.Height).Contains(e.Location);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,EditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\EditorTemplate.cs,OnMouseMove,The following statement contains a magic number: this.hovered = new Rectangle(this.rect.X + 2' this.rect.Y' this.rect.Width - 4' this.rect.Height).Contains(e.Location);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,BitmaskEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\BitmaskEditorTemplate.cs,OnMouseDown,The following statement contains a magic number: this.hovered && (e.Button & MouseButtons.Left) != MouseButtons.None && (DateTime.Now - this.mouseClosed).TotalMilliseconds > 200
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,MultiComboBoxEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\MultiComboBoxEditorTemplate.cs,OnMouseDown,The following statement contains a magic number: this.hovered && (e.Button & MouseButtons.Left) != MouseButtons.None && (DateTime.Now - this.mouseClosed).TotalMilliseconds > 200
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnPaint,The following statement contains a magic number: minMaxBarColor = minMaxBarColor.MixWith(this.parent.ControlRenderer.ColorMultiple' 0.5f' true);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnPaint,The following statement contains a magic number: minMaxBarColor = Color.FromArgb(128' minMaxBarColor);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,OnMouseMove,The following statement contains a magic number: this.Value = this.gripDragVal - this.increment * Math.Round((e.Location.Y - this.gripDragPos.Y) / 3m);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,UpdateGeometry,The following statement contains a magic number: this.minMaxRect = new Rectangle(  					this.rect.X'  					this.rect.Bottom - 3'  					this.rect.Width'  					3);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,UpdateGeometry,The following statement contains a magic number: this.minMaxRect = new Rectangle(  					this.rect.X'  					this.rect.Bottom - 3'  					this.rect.Width'  					3);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,UpdateGeometry,The following statement contains a magic number: this.gripRect = new Rectangle(  				this.rect.Right - GripSize + 2'  				this.rect.Y'  				GripSize'  				this.rect.Height - this.minMaxRect.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,UpdateGeometry,The following statement contains a magic number: this.stringEditor.Rect = new Rectangle(  				this.rect.X'   				this.rect.Y'   				this.rect.Width - GripSize + 2'   				this.rect.Height - this.minMaxRect.Height);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,NumericEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\NumericEditorTemplate.cs,SetTextFromValue,The following statement contains a magic number: decimal placesMult = (decimal)Math.Pow(10.0d' this.decimalPlaces);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,UpdateScroll,The following statement contains a magic number: this.scroll = Math.Max(this.scroll - (15 - cursorPixelPos + this.rect.X)' 0);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,UpdateScroll,The following statement contains a magic number: cursorPixelPos - this.rect.X < 15 && this.scroll > 0
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnGotFocus,The following statement contains a magic number: this.cursorTimer.Interval = 500;
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnMouseDown,The following statement contains a magic number: Point pickLoc = new Point(Math.Min(Math.Max(e.X' rect.X + 2)' rect.Right - 2)' rect.Y + rect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnMouseDown,The following statement contains a magic number: Point pickLoc = new Point(Math.Min(Math.Max(e.X' rect.X + 2)' rect.Right - 2)' rect.Y + rect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnMouseDown,The following statement contains a magic number: Point pickLoc = new Point(Math.Min(Math.Max(e.X' rect.X + 2)' rect.Right - 2)' rect.Y + rect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnMouseMove,The following statement contains a magic number: Point pickLoc = new Point(Math.Min(Math.Max(e.X' rect.X + 2)' rect.Right - 2)' rect.Y + rect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnMouseMove,The following statement contains a magic number: Point pickLoc = new Point(Math.Min(Math.Max(e.X' rect.X + 2)' rect.Right - 2)' rect.Y + rect.Height / 2);
Magic Number,AdamsLair.WinForms.PropertyEditing.Templates,StringEditorTemplate,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\PropertyEditing\EditorTemplates\StringEditorTemplate.cs,OnMouseMove,The following statement contains a magic number: Point pickLoc = new Point(Math.Min(Math.Max(e.X' rect.X + 2)' rect.Right - 2)' rect.Y + rect.Height / 2);
Missing Default,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitCheckBox,The following switch statement is missing a default case: switch (state)  				{  					case CheckBoxState.CheckedDisabled:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.CheckedDisabled;		break;  					case CheckBoxState.CheckedHot:			vsState = System.Windows.Forms.VisualStyles.CheckBoxState.CheckedHot;			break;  					case CheckBoxState.CheckedNormal:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.CheckedNormal;		break;  					case CheckBoxState.CheckedPressed:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.CheckedPressed;		break;  					case CheckBoxState.MixedDisabled:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.MixedDisabled;		break;  					case CheckBoxState.MixedHot:			vsState = System.Windows.Forms.VisualStyles.CheckBoxState.MixedHot;				break;  					case CheckBoxState.MixedNormal:			vsState = System.Windows.Forms.VisualStyles.CheckBoxState.MixedNormal;			break;  					case CheckBoxState.MixedPressed:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.MixedPressed;			break;  					case CheckBoxState.UncheckedDisabled:	vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedDisabled;	break;  					case CheckBoxState.UncheckedHot:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedHot;			break;  					case CheckBoxState.UncheckedNormal:		vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal;		break;  					case CheckBoxState.UncheckedPressed:	vsState = System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedPressed;		break;  				}
Missing Default,AdamsLair.WinForms.Drawing,ControlRenderer,D:\research\architectureSmells\repos\AdamsLair_winforms\WinForms\Drawing\ControlRenderer.cs,InitExpandNode,The following switch statement is missing a default case: switch (expandState)  			{  				case ExpandNodeState.OpenedDisabled:	image = ResourcesCache.ExpandNodeOpenedDisabled;	break;  				case ExpandNodeState.OpenedNormal:		image = ResourcesCache.ExpandNodeOpenedNormal;	break;  				case ExpandNodeState.OpenedHot:			image = ResourcesCache.ExpandNodeOpenedHot;		break;  				case ExpandNodeState.OpenedPressed:		image = ResourcesCache.ExpandNodeOpenedPressed;	break;  				case ExpandNodeState.ClosedDisabled:	image = ResourcesCache.ExpandNodeClosedDisabled;	break;  				case ExpandNodeState.ClosedNormal:		image = ResourcesCache.ExpandNodeClosedNormal;	break;  				case ExpandNodeState.ClosedHot:			image = ResourcesCache.ExpandNodeClosedHot;		break;  				case ExpandNodeState.ClosedPressed:		image = ResourcesCache.ExpandNodeClosedPressed;	break;  			}
