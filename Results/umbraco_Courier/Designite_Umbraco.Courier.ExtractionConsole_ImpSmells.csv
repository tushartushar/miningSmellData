Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Umbraco.Courier.ExtractionConsole,Program,C:\repos\umbraco_Courier\Samples\Umbraco.Courier.ExtractionConsole\Program.cs,Package,The following statement contains a magic number: try              {                  string revision = args[1];                  string url = args[2];                    Console.WriteLine("");                  Console.WriteLine(@"       _");                  Console.WriteLine(@"      (_)");                  Console.WriteLine(@"     <___>");                  Console.WriteLine(@"      | |_________");                  Console.WriteLine(@"      | |`-._`-._(___________");                  Console.WriteLine(@"      | |`-._`-._|   :|    |(__________");                  Console.WriteLine(@"      | |    `-._|   :|    || _.-'_.-'|");                  Console.WriteLine(@"      | | _ _ _ _|._ :|    ||'_.-'_.-'|");                  Console.WriteLine(@"      | |--------|._`:|    ||'_.-'    |");                  Console.WriteLine(@"      | |        |----      |' _ _ _ _|");                  Console.WriteLine(@"      | |________|          |---------|");                  Console.WriteLine(@"      | |- - - - |____      |         |");                  Console.WriteLine(@"      | |     _.-|.--:|    ||_________|");                  Console.WriteLine(@"      | | _.-'_.-|.-':|    ||- - - - -|");                  Console.WriteLine(@"      | |'_.-'_.-|   :|    ||`-._     |");                  Console.WriteLine(@"      | |~~~~~~~~|   :|    ||`-._`-._ |");                  Console.WriteLine(@"      | |        '~~~~~~~~~~|`-._`-._`|");                  Console.WriteLine(@"      | |                   '~~~~~~~~~~");                  Console.WriteLine(@"      | |");                                        string[] providers = new string[0];                                    if(args.Length >= 4)                      providers = args[3].Split(''');                    Umbraco.Courier.Core.Settings.revisionsPath = "";                    var engine = new Core.Packaging.RevisionPackaging(revision);                  engine.AddedItem += new EventHandler<ItemEventArgs>(engine_AddedItem);                  engine.PackagedItem += new EventHandler<ItemEventArgs>(engine_PackagedItem);                  engine.PackagedItemResource += new EventHandler<ResourceEventArgs>(engine_PackagedItemResource);                                      Core.Storage.RepositoryStorage rs = new Core.Storage.RepositoryStorage();                  var r = rs.GetByAlias(url);                  rs.Dispose();                    engine.Source = r;                                    if (providers.Length == 0)                      engine.AddAllProvidersToQueue(true);                  else                  {                      foreach (var s in providers)                      {                          if (s.Contains(":"))                          {                              string provider = s.Split(':')[0];                              string[] items = s.Split(':')[1].Split(''');                            }                          else                          {                              var p = Umbraco.Courier.Core.ProviderModel.ItemProviderCollection.Instance.GetProvider(s);                              if (p != null)                              {                                  var rootItems = p.AvailableSystemItems();                                  engine.AddToQueue(rootItems' true' int.MaxValue);                              }                          }                      }                  }                      engine.Package();                    Console.WriteLine("================ DONE =======================");              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());              }
Magic Number,Umbraco.Courier.ExtractionConsole,Program,C:\repos\umbraco_Courier\Samples\Umbraco.Courier.ExtractionConsole\Program.cs,Package,The following statement contains a magic number: try              {                  string revision = args[1];                  string url = args[2];                    Console.WriteLine("");                  Console.WriteLine(@"       _");                  Console.WriteLine(@"      (_)");                  Console.WriteLine(@"     <___>");                  Console.WriteLine(@"      | |_________");                  Console.WriteLine(@"      | |`-._`-._(___________");                  Console.WriteLine(@"      | |`-._`-._|   :|    |(__________");                  Console.WriteLine(@"      | |    `-._|   :|    || _.-'_.-'|");                  Console.WriteLine(@"      | | _ _ _ _|._ :|    ||'_.-'_.-'|");                  Console.WriteLine(@"      | |--------|._`:|    ||'_.-'    |");                  Console.WriteLine(@"      | |        |----      |' _ _ _ _|");                  Console.WriteLine(@"      | |________|          |---------|");                  Console.WriteLine(@"      | |- - - - |____      |         |");                  Console.WriteLine(@"      | |     _.-|.--:|    ||_________|");                  Console.WriteLine(@"      | | _.-'_.-|.-':|    ||- - - - -|");                  Console.WriteLine(@"      | |'_.-'_.-|   :|    ||`-._     |");                  Console.WriteLine(@"      | |~~~~~~~~|   :|    ||`-._`-._ |");                  Console.WriteLine(@"      | |        '~~~~~~~~~~|`-._`-._`|");                  Console.WriteLine(@"      | |                   '~~~~~~~~~~");                  Console.WriteLine(@"      | |");                                        string[] providers = new string[0];                                    if(args.Length >= 4)                      providers = args[3].Split(''');                    Umbraco.Courier.Core.Settings.revisionsPath = "";                    var engine = new Core.Packaging.RevisionPackaging(revision);                  engine.AddedItem += new EventHandler<ItemEventArgs>(engine_AddedItem);                  engine.PackagedItem += new EventHandler<ItemEventArgs>(engine_PackagedItem);                  engine.PackagedItemResource += new EventHandler<ResourceEventArgs>(engine_PackagedItemResource);                                      Core.Storage.RepositoryStorage rs = new Core.Storage.RepositoryStorage();                  var r = rs.GetByAlias(url);                  rs.Dispose();                    engine.Source = r;                                    if (providers.Length == 0)                      engine.AddAllProvidersToQueue(true);                  else                  {                      foreach (var s in providers)                      {                          if (s.Contains(":"))                          {                              string provider = s.Split(':')[0];                              string[] items = s.Split(':')[1].Split(''');                            }                          else                          {                              var p = Umbraco.Courier.Core.ProviderModel.ItemProviderCollection.Instance.GetProvider(s);                              if (p != null)                              {                                  var rootItems = p.AvailableSystemItems();                                  engine.AddToQueue(rootItems' true' int.MaxValue);                              }                          }                      }                  }                      engine.Package();                    Console.WriteLine("================ DONE =======================");              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());              }
Magic Number,Umbraco.Courier.ExtractionConsole,Program,C:\repos\umbraco_Courier\Samples\Umbraco.Courier.ExtractionConsole\Program.cs,Package,The following statement contains a magic number: try              {                  string revision = args[1];                  string url = args[2];                    Console.WriteLine("");                  Console.WriteLine(@"       _");                  Console.WriteLine(@"      (_)");                  Console.WriteLine(@"     <___>");                  Console.WriteLine(@"      | |_________");                  Console.WriteLine(@"      | |`-._`-._(___________");                  Console.WriteLine(@"      | |`-._`-._|   :|    |(__________");                  Console.WriteLine(@"      | |    `-._|   :|    || _.-'_.-'|");                  Console.WriteLine(@"      | | _ _ _ _|._ :|    ||'_.-'_.-'|");                  Console.WriteLine(@"      | |--------|._`:|    ||'_.-'    |");                  Console.WriteLine(@"      | |        |----      |' _ _ _ _|");                  Console.WriteLine(@"      | |________|          |---------|");                  Console.WriteLine(@"      | |- - - - |____      |         |");                  Console.WriteLine(@"      | |     _.-|.--:|    ||_________|");                  Console.WriteLine(@"      | | _.-'_.-|.-':|    ||- - - - -|");                  Console.WriteLine(@"      | |'_.-'_.-|   :|    ||`-._     |");                  Console.WriteLine(@"      | |~~~~~~~~|   :|    ||`-._`-._ |");                  Console.WriteLine(@"      | |        '~~~~~~~~~~|`-._`-._`|");                  Console.WriteLine(@"      | |                   '~~~~~~~~~~");                  Console.WriteLine(@"      | |");                                        string[] providers = new string[0];                                    if(args.Length >= 4)                      providers = args[3].Split(''');                    Umbraco.Courier.Core.Settings.revisionsPath = "";                    var engine = new Core.Packaging.RevisionPackaging(revision);                  engine.AddedItem += new EventHandler<ItemEventArgs>(engine_AddedItem);                  engine.PackagedItem += new EventHandler<ItemEventArgs>(engine_PackagedItem);                  engine.PackagedItemResource += new EventHandler<ResourceEventArgs>(engine_PackagedItemResource);                                      Core.Storage.RepositoryStorage rs = new Core.Storage.RepositoryStorage();                  var r = rs.GetByAlias(url);                  rs.Dispose();                    engine.Source = r;                                    if (providers.Length == 0)                      engine.AddAllProvidersToQueue(true);                  else                  {                      foreach (var s in providers)                      {                          if (s.Contains(":"))                          {                              string provider = s.Split(':')[0];                              string[] items = s.Split(':')[1].Split(''');                            }                          else                          {                              var p = Umbraco.Courier.Core.ProviderModel.ItemProviderCollection.Instance.GetProvider(s);                              if (p != null)                              {                                  var rootItems = p.AvailableSystemItems();                                  engine.AddToQueue(rootItems' true' int.MaxValue);                              }                          }                      }                  }                      engine.Package();                    Console.WriteLine("================ DONE =======================");              }              catch (Exception ex)              {                  Console.WriteLine(ex.ToString());              }
