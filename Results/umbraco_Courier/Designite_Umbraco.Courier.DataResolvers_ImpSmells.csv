Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Umbraco.Courier.DataResolvers,ascxFiles,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\ascxFiles.cs,Packaging,Cyclomatic complexity of the method is 8
Complex Method,Umbraco.Courier.DataResolvers,ContentPicker,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\ContentPicker.cs,Extracting,Cyclomatic complexity of the method is 9
Complex Method,Umbraco.Courier.DataResolvers,ContentPicker,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\ContentPicker.cs,Packaging,Cyclomatic complexity of the method is 8
Complex Method,Umbraco.Courier.DataResolvers,KeyValuePrevalueEditor,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\KeyValuePrevalueEditor.cs,Packaging,Cyclomatic complexity of the method is 10
Complex Method,Umbraco.Courier.DataResolvers,MediaPicker,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\MediaPicker.cs,Packaging,Cyclomatic complexity of the method is 8
Complex Method,Umbraco.Courier.DataResolvers,RelatedLinks,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RelatedLinks.cs,Packaging,Cyclomatic complexity of the method is 9
Complex Method,Umbraco.Courier.DataResolvers,RelatedLinks,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RelatedLinks.cs,Extracting,Cyclomatic complexity of the method is 8
Complex Method,Umbraco.Courier.DataResolvers,TemplateResources,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\TemplateResources.cs,Packaging,Cyclomatic complexity of the method is 14
Complex Method,Umbraco.Courier.DataResolvers,Upload,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Upload.cs,Packaging,Cyclomatic complexity of the method is 8
Long Statement,Umbraco.Courier.DataResolvers,ascxFiles,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\ascxFiles.cs,ShouldExecute,The length of the statement  "            return (itemEvent == Core.Enums.ItemEvent.Packaging && item.Resources.Where(x => x.PackageFromPath.EndsWith(".ascx")).FirstOrDefault() != null); " is 144.
Long Statement,Umbraco.Courier.DataResolvers,ContentPicker,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\ContentPicker.cs,Packaging,The length of the statement  "                if (cp.Value != null && !string.IsNullOrEmpty(cp.Value.ToString()) && contentPickerDataTypes.Values.Contains(cp.DataTypeEditor.ToString().ToLower())) " is 149.
Long Statement,Umbraco.Courier.DataResolvers,DampResolver,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Damp.cs,PackagingDataType,The length of the statement  "            item.Dependencies.Add("~/umbraco/plugins/DigibizAdvancedMediaPicker"' Umbraco.Courier.ItemProviders.ProviderIDCollection.folderItemProviderGuid); " is 145.
Long Statement,Umbraco.Courier.DataResolvers,EmbeddedContent,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\EmbeddedContent.cs,PackagingProperty,The length of the statement  "                propertyData.Value = XmlDependencies.ReplaceIds(propertyData.Value.ToString()' "//* [@propertyid != '']"' Core.Enums.IdentifierReplaceDirection.FromNodeIdToGuid' out idsFound); " is 176.
Long Statement,Umbraco.Courier.DataResolvers,EmbeddedContent,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\EmbeddedContent.cs,ExtractingProperty,The length of the statement  "           propertyData.Value = XmlDependencies.ReplaceIds(propertyData.Value.ToString()' "//* [@propertyid != '']"' Core.Enums.IdentifierReplaceDirection.FromGuidToNodeId); " is 162.
Long Statement,Umbraco.Courier.DataResolvers,Images,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Images.cs,Packaging,The length of the statement  "                foreach (var prop in cpd.Data.Where(x => x.Value != null && macroDataTypes.Contains(x.DataTypeEditor.ToString().ToLower()))) { " is 126.
Long Statement,Umbraco.Courier.DataResolvers,LocalLinks,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\LocalLinks.cs,ShouldExecute,The length of the statement  "            foreach (var cp in cpd.Data.Where( X=> X.Value != null && localLinkDataTypes.Contains( X.DataTypeEditor.ToString().ToLower()) )) " is 128.
Long Statement,Umbraco.Courier.DataResolvers,LocalLinks,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\LocalLinks.cs,Packaging,The length of the statement  "            foreach (var cp in cpd.Data.Where(X => X.Value != null && localLinkDataTypes.Contains(X.DataTypeEditor.ToString().ToLower()))) " is 126.
Long Statement,Umbraco.Courier.DataResolvers,LocalLinks,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\LocalLinks.cs,Extracting,The length of the statement  "                foreach (var cp in cpd.Data.Where( X=> X.Value != null && localLinkDataTypes.Contains( X.DataTypeEditor.ToString().ToLower()) )) " is 128.
Long Statement,Umbraco.Courier.DataResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\MacroParameters.cs,ShouldExecute,The length of the statement  "            foreach (var cp in cpd.Data.Where(x => macroDataTypes.Contains(x.DataTypeEditor.ToString()' StringComparer.OrdinalIgnoreCase))) " is 127.
Long Statement,Umbraco.Courier.DataResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\MacroParameters.cs,Packaging,The length of the statement  "                foreach (var prop in cpd.Data.Where(x => x.Value != null && macroDataTypes.Contains(x.DataTypeEditor.ToString().ToLower()))) " is 124.
Long Statement,Umbraco.Courier.DataResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\MacroParameters.cs,Extracting,The length of the statement  "                foreach (var prop in cpd.Data.Where(x => x.Value != null && macroDataTypes.Contains(x.DataTypeEditor.ToString().ToLower()))) { " is 126.
Long Statement,Umbraco.Courier.DataResolvers,RTEstylesheets,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RTEstylesheets.cs,PackagingDataType,The length of the statement  "                        //we create a temp Id to fetch using the nodeId' which does not work across instances' but the returned object does return a valid alias " is 136.
Long Statement,Umbraco.Courier.DataResolvers,TemplateResources,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\TemplateResources.cs,Packaging,The length of the statement  "                var processTemplateRes = (settings.ContainsKey("processTemplateResources") && settings["processTemplateResources"] == "false") ? false : true; " is 142.
Long Statement,Umbraco.Courier.DataResolvers,TemplateResources,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\TemplateResources.cs,Packaging,The length of the statement  "                var registerMacrosNodes = (settings.ContainsKey("macroParametersAreDependencies") && settings["macroParametersAreDependencies"] == "false") ? false : true; " is 155.
Long Statement,Umbraco.Courier.DataResolvers,TemplateResources,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\TemplateResources.cs,Packaging,The length of the statement  "                var registeLocalLinks = (settings.ContainsKey("localLinksAreDependencies") && settings["localLinksAreDependencies"] == "false") ? false : true; " is 143.
Long Statement,Umbraco.Courier.DataResolvers,TemplateResources,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\TemplateResources.cs,Packaging,The length of the statement  "                var registerMacros = (settings.ContainsKey("macrosAreDependencies") && settings["macrosAreDependencies"] == "false") ? false : true; " is 132.
Long Statement,Umbraco.Courier.DataResolvers,PropertyDataResolverProvider,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\PropertyDataResolverProvider.cs,ShouldExecute,The length of the statement  "                return propertyData.Data.Any(x => x.Value != null && x.DataTypeEditor == DataTypeId) && (itemEvent == ItemEvent.Extracting || itemEvent == ItemEvent.Packaging); " is 160.
Long Statement,Umbraco.Courier.DataResolvers.Helpers,MacroResolver,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\Helpers\MacroResolver.cs,getElementAttributes,The length of the statement  "                ht.Add(attributeSet.Groups["attributeName"].Value.ToString().ToLower()' attributeSet.Groups["attributeValue"].Value.ToString()); " is 128.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,ReplaceMacrosInstring,The length of the statement  "            RevisionLog.Instance.Information(item.ItemId' this' RevisionLog.ItemDataResolvers + " - MacroParameters"' "Replacing macros in string to guid:" + toUnique.ToString()); " is 167.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,ReplaceMacrosInstring,The length of the statement  "                        // look for the different tags. we need to process them in order' though' we will never typically see both at the same time. " is 124.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,ReplaceMacrosInstring,The length of the statement  "                            RevisionLog.Instance.Information(item.ItemId' this' RevisionLog.ItemDataResolvers + " - MacroParameters"' "Found tag:" + tag); " is 126.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,TransformMacroTag,The length of the statement  "            var macro = PersistenceManager.Default.RetrieveItem<Macro>(new ItemIdentifier(macroTag.Alias' ProviderIDCollection.macroItemProviderGuid)); " is 139.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,TransformMacroTag,The length of the statement  "                RevisionLog.Instance.Error(this' "DataResolvers"' string.Format("Could not load the macro '{0}' that is called in the template {1}"' macroTag.Alias' item.Name)); " is 161.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,TransformMacroTag,The length of the statement  "            RevisionLog.Instance.Information(this' "DataResolvers"' "Transforming macroparameters on macro tag " + _g + ": \n\n'" + tag + "'"); " is 131.
Long Statement,Umbraco.Courier.ResourceResolvers,MacroParameters,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\ResourceResolvers\MacroParameters.cs,Setvalues,The length of the statement  "                foreach (var prop in m.Properties.Where(x => !string.IsNullOrEmpty(x.PropertyTypeAlias) && macroPropertyTypes.Contains(x.PropertyTypeAlias.ToLower()))) " is 151.
Magic Number,Umbraco.Courier.DataResolvers,DampResolver,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Damp.cs,PackagingDataType,The following statement contains a magic number: var source = item.Prevalues.Where(x => x.SortOrder == 2).FirstOrDefault();
Magic Number,Umbraco.Courier.DataResolvers,DampResolver,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Damp.cs,PackagingDataType,The following statement contains a magic number: var defaultType = item.Prevalues.Where(x => x.SortOrder == 13).FirstOrDefault();
Magic Number,Umbraco.Courier.DataResolvers,DampResolver,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Damp.cs,ExtractingDataType,The following statement contains a magic number: var source = item.Prevalues.Where(x => x.SortOrder == 2).FirstOrDefault();
Magic Number,Umbraco.Courier.DataResolvers,DampResolver,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\Damp.cs,ExtractingDataType,The following statement contains a magic number: var defaultType = item.Prevalues.Where(x => x.SortOrder == 13).FirstOrDefault();
Magic Number,Umbraco.Courier.DataResolvers,RTEstylesheets,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RTEstylesheets.cs,ExtractingDataType,The following statement contains a magic number: if (shouldRun(item))              {                  var valueArray = item.Prevalues[0].Value.Split('|');                  var ids = valueArray[5].Split(''');                    bool changed = false;                  string newIds = "";                                    foreach (var id in ids)                  {                      if (!string.IsNullOrEmpty(id))                      {                          var tempItemId = new ItemIdentifier(id' ItemProviders.StyleSheetItemProvider.Instance().Id);                          var stylesheet = CurrentItemProvider.DatabasePersistence.RetrieveItem<Stylesheet>(tempItemId);                            if (stylesheet != null)                          {                              newIds += stylesheet.Id.ToString() + "'";                              changed = true;                          }                      }                  }                    if (changed)                  {                      newIds = newIds.Trim(''');                      valueArray[5] = newIds;                      item.Prevalues[0].Value = string.Join("|"' valueArray);                      }              }
Magic Number,Umbraco.Courier.DataResolvers,RTEstylesheets,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RTEstylesheets.cs,ExtractingDataType,The following statement contains a magic number: if (shouldRun(item))              {                  var valueArray = item.Prevalues[0].Value.Split('|');                  var ids = valueArray[5].Split(''');                    bool changed = false;                  string newIds = "";                                    foreach (var id in ids)                  {                      if (!string.IsNullOrEmpty(id))                      {                          var tempItemId = new ItemIdentifier(id' ItemProviders.StyleSheetItemProvider.Instance().Id);                          var stylesheet = CurrentItemProvider.DatabasePersistence.RetrieveItem<Stylesheet>(tempItemId);                            if (stylesheet != null)                          {                              newIds += stylesheet.Id.ToString() + "'";                              changed = true;                          }                      }                  }                    if (changed)                  {                      newIds = newIds.Trim(''');                      valueArray[5] = newIds;                      item.Prevalues[0].Value = string.Join("|"' valueArray);                      }              }
Magic Number,Umbraco.Courier.DataResolvers,RTEstylesheets,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RTEstylesheets.cs,PackagingDataType,The following statement contains a magic number: if (shouldRun(item))              {                  var valueArray = item.Prevalues[0].Value.Split('|');                  var ids = valueArray[5].Split(''');                  bool changed = false;                  string newIds = "";                            foreach(var id in ids){                      int _id = 0;                        if(int.TryParse(id' out _id))                      {                          //we create a temp Id to fetch using the nodeId' which does not work across instances' but the returned object does return a valid alias                          var tempItemId = new ItemIdentifier(_id.ToString()' ItemProviders.StyleSheetItemProvider.Instance().Id);                          var stylesheet = CurrentItemProvider.DatabasePersistence.RetrieveItem<Stylesheet>(tempItemId);                            if (stylesheet != null)                          {                              item.Dependencies.Add(stylesheet.ItemId);                              newIds += stylesheet.Alias + "'";                              changed = true;                          }                      }                  }                                                        if (changed)                  {                      newIds = newIds.Trim(''');                      valueArray[5] = newIds;                      item.Prevalues[0].Value = string.Join("|"' valueArray);                      }              }
Magic Number,Umbraco.Courier.DataResolvers,RTEstylesheets,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RTEstylesheets.cs,PackagingDataType,The following statement contains a magic number: if (shouldRun(item))              {                  var valueArray = item.Prevalues[0].Value.Split('|');                  var ids = valueArray[5].Split(''');                  bool changed = false;                  string newIds = "";                            foreach(var id in ids){                      int _id = 0;                        if(int.TryParse(id' out _id))                      {                          //we create a temp Id to fetch using the nodeId' which does not work across instances' but the returned object does return a valid alias                          var tempItemId = new ItemIdentifier(_id.ToString()' ItemProviders.StyleSheetItemProvider.Instance().Id);                          var stylesheet = CurrentItemProvider.DatabasePersistence.RetrieveItem<Stylesheet>(tempItemId);                            if (stylesheet != null)                          {                              item.Dependencies.Add(stylesheet.ItemId);                              newIds += stylesheet.Alias + "'";                              changed = true;                          }                      }                  }                                                        if (changed)                  {                      newIds = newIds.Trim(''');                      valueArray[5] = newIds;                      item.Prevalues[0].Value = string.Join("|"' valueArray);                      }              }
Magic Number,Umbraco.Courier.DataResolvers,RTEstylesheets,C:\repos\umbraco_Courier\Providers\Umbraco.Courier.DataResolvers\DataResolvers\RTEstylesheets.cs,shouldRun,The following statement contains a magic number: if (item.Prevalues != null && item.Prevalues.Count > 0 && !string.IsNullOrEmpty(item.Prevalues[0].Value))                  if (item.Prevalues[0].Value.Split('|').Count() > 6)                      return true;
