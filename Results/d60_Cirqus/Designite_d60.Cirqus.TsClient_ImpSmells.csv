Implementation smell,Namespace,Class,File,Method,Description
Long Statement,d60.Cirqus.TsClient.Generation,ProxyGenerator,C:\repos\d60_Cirqus\d60.Cirqus.TsClient\Generation\ProxyGenerator.cs,GetTypes,The length of the statement  "                var message = string.Format(@"Could not load types from {0} - got the following loader exceptions: {1}"' assembly' string.Join(Environment.NewLine' loaderExceptions.Select(e => e.ToString()))); " is 193.
Long Statement,d60.Cirqus.TsClient.Model,ProxyGeneratorContext,C:\repos\d60_Cirqus\d60.Cirqus.TsClient\Model\ProxyGeneratorContext.cs,GetCommandProcessorDefinitation,The length of the statement  "        var guid = (this.g() + this.g() + ""-"" + this.g() + ""-"" + this.g() + ""-"" + this.g() + ""-"" + this.g() + this.g() + this.g()); " is 131.
Long Statement,d60.Cirqus.TsClient,CommandDeserializer,C:\repos\d60_Cirqus\d60.Cirqus.TsClient\CommandDeserializer.cs,GetJObject,The length of the statement  "                throw new FormatException(string.Format("Could not parse '{0}' into a valid JSON object"' stringifiedCommand)' exception); " is 122.
Magic Number,d60.Cirqus.TsClient.Model,QualifiedClassName,C:\repos\d60_Cirqus\d60.Cirqus.TsClient\Model\QualifiedClassName.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return ((Ns != null ? Ns.GetHashCode() : 0)*397) ^ (Name != null ? Name.GetHashCode() : 0);              }
Magic Number,d60.Cirqus.TsClient,Program,C:\repos\d60_Cirqus\d60.Cirqus.TsClient\Program.cs,Main,The following statement contains a magic number: try              {                  Writer.Print(@"-----------------------------------------------------------------------------               d60 Cirqus TypeScript client code generator  -----------------------------------------------------------------------------");                    Run(args);                    return 0;              }              catch (PrettyException exception)              {                  Writer.Print(exception.Message);                    return 1;              }              catch (Exception exception)              {                  Writer.Print("Unhandled exception: {0}"' exception);                    return 2;              }
Magic Number,d60.Cirqus.TsClient,Program,C:\repos\d60_Cirqus\d60.Cirqus.TsClient\Program.cs,Run,The following statement contains a magic number: if (args.Length != 2)              {                  throw new PrettyException(@"Please call the tool like this:        d60.Cirqus.TsClient <path-to-DLL> <output-directory>    where <path-to-DLL> should point to an assembly containing all of your commands'  and <output-directory> should be the directory in which you want the generated  'commands.ts' and 'commandProcessor.ts' to be put.");              }
