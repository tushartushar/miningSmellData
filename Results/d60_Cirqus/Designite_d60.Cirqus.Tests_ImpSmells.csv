Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,FormatGroup,The method has 6 parameters. Parameters: when' elapsedSeconds' max' width' scaleWidth' numberOfEvents
Long Identifier,d60.Cirqus.Tests.Contracts.AggregateRootRepository.Factories,DefaultAggregateRootRepositoryFactory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\AggregateRootRepository\Factories\DefaultAggregateRootRepositoryFactory.cs,,The length of the parameter _defaultAggregateRootRepository is 31.
Long Identifier,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUnique,The length of the parameter batchWithAlreadyUsedSequenceNumber is 34.
Long Identifier,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The length of the parameter batchWithAlreadyUsedSequenceNumberOnlyForAnotherAggregate is 57.
Long Identifier,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The length of the parameter batchWithAlreadyUsedSequenceNumber is 34.
Long Identifier,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The length of the parameter viewWithAggregateRootSubscription is 33.
Long Identifier,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The length of the parameter viewWithGeneralDomainEventSubscription is 38.
Long Identifier,d60.Cirqus.Tests.Contracts.Views,ViewLocators<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ViewLocators.cs,,The length of the parameter _instancePerAggregateRootViewManager is 36.
Long Identifier,d60.Cirqus.Tests.Contracts.Views,ViewProfiling<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ViewProfiling.cs,AssertThat,The length of the parameter approximateExpectedDurationMilliseconds is 39.
Long Identifier,d60.Cirqus.Tests.Contracts.Views.Factories,EntityFrameworkViewManagerFactory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\Factories\EntityFrameworkViewManagerFactory.cs,,The length of the parameter _createdEntityFrameworkViewManagers is 35.
Long Identifier,d60.Cirqus.Tests.Diagnostics,MyProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestLapTimes.cs,,The length of the parameter _millisecondsSpentSavingEvents is 30.
Long Identifier,d60.Cirqus.Tests.Diagnostics,MyProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestLapTimes.cs,,The length of the parameter _millisecondsSpentGettingNextSequenceNumber is 43.
Long Identifier,d60.Cirqus.Tests.Snapshotting,TestCachingAggregateRootRepositoryDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestCachingAggregateRootRepositoryDecorator.cs,,The length of the parameter _cachingAggregateRootRepository is 31.
Long Identifier,d60.Cirqus.Tests.Snapshotting,TimeTaker,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,,The length of the parameter _timeSpentHydratingAggregateRoots is 33.
Long Identifier,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcherWithOptimization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcherWithOptimization.cs,,The length of the parameter _thisBadBoyEnsuresThatTheEventStoreIsNotUsed is 44.
Long Statement,d60.Cirqus.Tests.Aggregates,TestCreationHookWithRealCommandProcessor,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestCreationHookWithRealCommandProcessor.cs,InvokesCreatedHookWhenAggregateRootIsFirstCreated,The length of the statement  "            var actualSequenceOfEvents = _eventStoreTask.Result.Select(e => domainEventSerializer.Deserialize(e).GetType()).ToArray(); " is 122.
Long Statement,d60.Cirqus.Tests.Aggregates,TestCreationHookWithRealCommandProcessor,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestCreationHookWithRealCommandProcessor.cs,InvokesCreatedHookWhenAggregateRootIsFirstCreatedAndNeverAgain,The length of the statement  "            var actualSequenceOfEvents = _eventStoreTask.Result.Select(e => domainEventSerializer.Deserialize(e).GetType()).ToArray(); " is 122.
Long Statement,d60.Cirqus.Tests.Aggregates,TestFactoryBasedAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestFactoryBasedAggregateRootRepository.cs,DoSetUp,The length of the statement  "            _repository = new FactoryBasedAggregateRootRepository(_eventStore' _domainEventSerializer' _defaultDomainTypeNameMapper' aggregateRootFactoryMethod); " is 149.
Long Statement,d60.Cirqus.Tests.Aggregates,TestInheritance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestInheritance.cs,ConcreteTypeIsAppliedAsOwnerToEmittedEvents,The length of the statement  "                Assert.That(emittedEvent.Meta[DomainEvent.MetadataKeys.Owner]' Is.StringContaining(typeof(EvenMoreExtendedAggregate).Name)); " is 124.
Long Statement,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The length of the statement  "            Assert.That(firstEvent.Meta[DomainEvent.MetadataKeys.Owner]' Is.EqualTo("d60.Cirqus.Tests.Aggregates.TestEventApplication+SomeAggregate' d60.Cirqus.Tests")); " is 157.
Long Statement,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The length of the statement  "            Assert.That(firstEvent.Meta[DomainEvent.MetadataKeys.Type]' Is.EqualTo("d60.Cirqus.Tests.Aggregates.TestEventApplication+SomeEvent' d60.Cirqus.Tests")); " is 152.
Long Statement,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The length of the statement  "            Assert.That(nextEvent.Meta[DomainEvent.MetadataKeys.Owner]' Is.EqualTo("d60.Cirqus.Tests.Aggregates.TestEventApplication+SomeAggregate' d60.Cirqus.Tests")); " is 156.
Long Statement,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The length of the statement  "            Assert.That(nextEvent.Meta[DomainEvent.MetadataKeys.Type]' Is.EqualTo("d60.Cirqus.Tests.Aggregates.TestEventApplication+SomeEvent' d60.Cirqus.Tests")); " is 151.
Long Statement,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,FailsOnSequenceMismatch,The length of the statement  "            Assert.Throws<ApplicationException>(() => someAggregate.ApplyEvent(@eventWithTooLateSeqNumber' ReplayState.ReplayApply)); " is 121.
Long Statement,d60.Cirqus.Tests.Bugs,VerifyThatCommandMetadataFlowsToOtherRoots,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\VerifyThatCommandMetadataFlowsToOtherRoots.cs,FlowsToEventsEmittedOnCreated,The length of the statement  "            var eventsInRealEventStore = _inMemoryEventStore.Select(x => _serializer.Deserialize(x)).OfType<CreatedEvent>().ToList();" is 121.
Long Statement,d60.Cirqus.Tests.Bugs,VerifyThatCommandMetadataFlowsToOtherRoots,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\VerifyThatCommandMetadataFlowsToOtherRoots.cs,VerifyEventMetadata,The length of the statement  "            VerifyEvents(expectedNumberOfEvents' _inMemoryEventStore.Select(x => _serializer.Deserialize(x)).OfType<Event>()' "real CommandProcessor");" is 139.
Long Statement,d60.Cirqus.Tests.Bugs.ReplicationScenario,VerifyThatWeCannotAccidentallyLoadOldRootsInReplicatedSetup,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\ReplicationScenario\VerifyThatWeCannotAccidentallyLoadOldRootsInReplicatedSetup.cs,CreateAndStartReplication,The length of the statement  "            var replicator = new EventReplicator(aalborgEventStore' new EventReplicatorDelayer(hongKongEventStore' replicationDelay)); " is 122.
Long Statement,d60.Cirqus.Tests.Commands,TestCommandProcessing,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,CanLetSpecificExceptionTypesThrough,The length of the statement  "            var unwrappedException = Assert.Throws<InvalidOperationException>(() => _cirqus.ProcessCommand(new CommandThatThrowsDomainException("someid1"))); " is 145.
Long Statement,d60.Cirqus.Tests.Commands,TestCommandProcessing,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,CanLetSpecificExceptionTypesThroughAlsoWhenUsingCustomMappedCommands,The length of the statement  "            var unwrappedException = Assert.Throws<InvalidOperationException>(() => _cirqus.ProcessCommand(new CustomMappedErronousCommand())); " is 131.
Long Statement,d60.Cirqus.Tests.Commands,TestCommandProcessing,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,GeneratesPrettyException,The length of the statement  "            var appEx = Assert.Throws<CommandProcessingException>(() => _cirqus.ProcessCommand(new CommandThatThrowsUnanticipatedException("someid1"))); " is 140.
Long Statement,d60.Cirqus.Tests.Commands,MyCommand,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,Execute,The length of the statement  "                AggregateRootIds.Select(x => (context.TryLoad<MyRoot>(x) ?? context.Create<MyRoot>(x))).ToList().ForEach(r => r.EmitMyEvent()); " is 127.
Long Statement,d60.Cirqus.Tests.Commands,MyCommand,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,Execute,The length of the statement  "                AggregateRootIds.Select(x => (context.TryLoad<MyRoot>(x) ?? context.Create<MyRoot>(x))).ToList().ForEach(r => r.EmitMyEvent()); " is 127.
Long Statement,d60.Cirqus.Tests.Commands,AnotherCommand,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,Execute,The length of the statement  "                throw new NotImplementedException("huigehugiehwugiehw hugehugeiwgh hugiewhugie whguiohwugewgoewa huigehugiehwugiehw hugehugeiwgh hugiewhugie whguiohwugewgoewa"); " is 161.
Long Statement,d60.Cirqus.Tests.Commands,ExecutableCommandTest,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,Execute,The length of the statement  "                AggregateRootIds.Select(x => (context.TryLoad<AnotherRoot>(x) ?? context.Create<AnotherRoot>(x))).ToList().ForEach(r => r.EmitBothEvents()); " is 140.
Long Statement,d60.Cirqus.Tests.Commands,ExecutableCommandTest,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,Execute,The length of the statement  "                AggregateRootIds.Select(x => (context.TryLoad<AnotherRoot>(x) ?? context.Create<AnotherRoot>(x))).ToList().ForEach(r => r.EmitBothEvents()); " is 140.
Long Statement,d60.Cirqus.Tests.Commands,TestCommandTypeNames,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandTypeNames.cs,AddsCommandTypeNameToAllEmittedEventOnExecutableCommands,The length of the statement  "                            DomainEvent.MetadataKeys.CommandTypeName' string.Join("' "' e.Meta.Select(kvp => string.Format("{0}={1}"' kvp.Key' kvp.Value))))); " is 130.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUnique,The length of the statement  "            var ex = Assert.Throws<ConcurrencyException>(() => _eventStore.Save(Guid.NewGuid()' batchWithAlreadyUsedSequenceNumber)); " is 121.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The length of the statement  "            var ex = Assert.Throws<ConcurrencyException>(() => _eventStore.Save(Guid.NewGuid()' batchWithAlreadyUsedSequenceNumber)); " is 121.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The length of the statement  "            Assert.That(allEventsForAgg1.Count' Is.EqualTo(4)' "Expected to get events 0' 1' 3' 4' but got only {0}"' string.Join("' "' allEventsForAgg1.Select(e => e.GetGlobalSequenceNumber()))); " is 184.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The length of the statement  "            Assert.That(allEventsForAgg2.Count' Is.EqualTo(2)' "Expected to get events 2' 5 but got only {0}"' string.Join("' "' allEventsForAgg2.Select(e => e.GetGlobalSequenceNumber()))); " is 177.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,PresentResults,The length of the statement  "            Console.WriteLine(string.Join(Environment.NewLine' intervalGroups.Select(g => FormatGroup(g.When' g.ElapsedSeconds' max' width' scaleWidth' g.NumberOfEvents)))); " is 161.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,PresentResults,The length of the statement  "            Console.WriteLine("{0}{1}{2}{3}"' new string(' '' scaleWidth)' minString' new string(' '' width - minString.Length - maxString.Length)' maxString); " is 147.
Long Statement,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,FormatGroup,The length of the statement  "            return string.Format("{0}: {1}{2}{3:0}"' time' new string('*'' charWidth)' new string(' '' valueWidth - charWidth + scaleWidth - eventsPerSecondString.Length)' eventsPerSecondString); " is 183.
Long Statement,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,WorksWithSimpleScenario,The length of the statement  "            var idsView = _factory.Load<GeneratedIds>(InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId(IdGenerator.InstanceId)); " is 128.
Long Statement,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,AutomaticallyCatchesUpWhenInitializing,The length of the statement  "            var idsView = _factory.Load<GeneratedIds>(InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId(IdGenerator.InstanceId)); " is 128.
Long Statement,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The length of the statement  "            Assert.That(viewWithAggregateRootSubscription.ProcessedEvents' Is.EqualTo(4)' "Expected that the view could get all events from this particular aggregate root"); " is 161.
Long Statement,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The length of the statement  "            Assert.That(viewWithGeneralDomainEventSubscription.ProcessedEvents' Is.EqualTo(4)' "Expected that the view could get ALL events"); " is 130.
Long Statement,d60.Cirqus.Tests.Contracts.Views,ViewLocators<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ViewLocators.cs,WorksWithInstancePerAggregateRootView,The length of the statement  "            var view = _factory.Load<InstancePerAggregateRootView>(InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId("id1")); " is 124.
Long Statement,d60.Cirqus.Tests.Diagnostics,TestLapTimes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestLapTimes.cs,CanDoTheThing,The length of the statement  "                var repo = new DefaultAggregateRootRepository(new MongoDbEventStore(database' "Events")' new JsonDomainEventSerializer()' new DefaultDomainTypeNameMapper()); " is 157.
Long Statement,d60.Cirqus.Tests.Diagnostics,MyProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestLapTimes.cs,ToString,The length of the statement  "                                             string.Join(Environment.NewLine' _aggregateRootHydrationTimes.Select(kvp => string.Format("    {0}: {1}"' kvp.Key' kvp.Value)))' " is 128.
Long Statement,d60.Cirqus.Tests.Diagnostics,TestProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestProfiler.cs,StatementOfSomething,The length of the statement  "                Is.EqualTo("RecordAggregateRootGet 00:00:00; RecordAggregateRootGet 00:00:00; RecordAggregateRootGet 00:00:00; RecordAggregateRootGet 00:00:00")' " is 145.
Long Statement,d60.Cirqus.Tests.Diagnostics,TestViewManagerProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestViewManagerProfiler.cs,CanMeasureTimeSpentInViewManagers,The length of the statement  "            Assert.That(accumulatedTimes[view2]' Is.GreaterThan(TimeSpan.FromSeconds(.1)).And.LessThan(TimeSpan.FromSeconds(0.15))); " is 120.
Long Statement,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,ThrowsWhenMappingEntityWithNonVirtualCollectionProperty,The length of the statement  "                .Throws<InvalidOperationException>(() => new EntityFrameworkViewManager<ParentWithNonVirtualCollectionProperty>(MsSqlTestHelper.ConnectionString)); " is 147.
Long Statement,d60.Cirqus.Tests.Events.Replicator,BasicReplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\BasicReplication.cs,ReplicatedEventsGetSourceBatchIdHeader,The length of the statement  "            Assert.That(myKindOfEvents.Count' Is.EqualTo(3)' "Expected event 0' 1' 2 but got only {0}"' string.Join("' "' myKindOfEvents.Select(e => e.GetGlobalSequenceNumber()))); " is 168.
Long Statement,d60.Cirqus.Tests.Events.Replicator,BasicReplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\BasicReplication.cs,ReplicatedEventsGetSourceBatchIdHeader,The length of the statement  "            Assert.That(myKindOfEvents.Select(e => e.Meta[EventReplicator.SourceEventBatchId]).ToArray()' Is.EqualTo(expectedSourceBatchIds)); " is 130.
Long Statement,d60.Cirqus.Tests.Events,TestInMemoryEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestInMemoryEventStore.cs,ReplayedEventsAreClones,The length of the statement  "            Assert.That(relevantEvent.ListOfStuff.Count' Is.EqualTo(3)' "Oh noes! It appears that the event was changed: {0}"' string.Join(" "' relevantEvent.ListOfStuff)); " is 160.
Long Statement,d60.Cirqus.Tests.Examples,ReadmeSnippet,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,TheSnippet,The length of the statement  "            var viewManager = new MsSqlViewManager<CounterView>(MsSqlTestHelper.ConnectionString' "counters"' automaticallyCreateSchema: true); " is 131.
Long Statement,d60.Cirqus.Tests.Extensions,Helpful,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Extensions\Helpful.cs,Get,The length of the statement  "            var aggregateRoot = repo.Get<TAggregateRoot>(aggregateRootId' new InMemoryUnitOfWork(repo' new DefaultDomainTypeNameMapper())' createIfNotExists: true); " is 152.
Long Statement,d60.Cirqus.Tests.Extensions,TestTypeExtensions,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Extensions\TestTypeExtensions.cs,CanPrettyFormatGenericType,The length of the statement  "            Assert.That(typeof(GenericsBaby<string>).GetPrettyName(includeNamespace: true)' Is.EqualTo("d60.Cirqus.Tests.Extensions.GenericsBaby<System.String>")); " is 151.
Long Statement,d60.Cirqus.Tests.Integration,SimpleScenarioWithDelegation,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Integration\SimpleScenarioWithDelegation.cs,DoSetUp,The length of the statement  "                    _aggregateRootRepository = new DefaultAggregateRootRepository(c.Get<IEventStore>()' c.Get<IDomainEventSerializer>()' c.Get<IDomainTypeNameMapper>()); " is 149.
Long Statement,d60.Cirqus.Tests.Integration,SimpleScenarioWithConcurrency,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Integration\SimpleScenarioWithConcurrency.cs,RunEntirePipelineAndProbePrivatesForMultipleAggregates,The length of the statement  "            var description = string.Format("{0} threads performing {1} ops distributed evenly among {2} aggregate roots"' parallellism' numberOfOperations' numberOfAggregates); " is 165.
Long Statement,d60.Cirqus.Tests.Integration,SimpleScenario,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Integration\SimpleScenario.cs,DoSetUp,The length of the statement  "                    _aggregateRootRepository = new DefaultAggregateRootRepository(c.Get<IEventStore>()' c.Get<IDomainEventSerializer>()' c.Get<IDomainTypeNameMapper>()); " is 149.
Long Statement,d60.Cirqus.Tests.MongoDb,MongoHelper,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\MongoHelper.cs,InitializeTestDatabase,The length of the statement  "                throw new ConfigurationErrorsException("Could not find MongoDB test database connection string with the name 'mongotestdb' in app.config"); " is 139.
Long Statement,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,VerifyLazinessOfStreamingApi,The length of the statement  "                Console.WriteLine("Iterated through {0} events... (ram: {1:0.0})"' Interlocked.Read(ref counter)' Process.GetCurrentProcess().WorkingSet64 / 1000000); " is 150.
Long Statement,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,TestPerformanceOfAggregateRootEventStreaming,The length of the statement  "                Console.WriteLine("Iterated through {0} events... (ram: {1:0.0})"' Interlocked.Read(ref counter)' Process.GetCurrentProcess().WorkingSet64 / 1000000); " is 150.
Long Statement,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStoreIndexPerf,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStoreIndexPerf.cs,IndexSpeedTest,The length of the statement  "                Func<string' long> getNextSequenceNumber = id => !sequenceNumbers.ContainsKey(id) ? (sequenceNumbers[id] = 0) : ++sequenceNumbers[id]; " is 134.
Long Statement,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStoreIndexPerf,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStoreIndexPerf.cs,IndexSpeedTest,The length of the statement  "                TakeTime("Execute " + numberOfQueries + " queries"' () => numberOfQueries.Times(() => eventStore.Load(randomAggregateRootId()).ToList())); " is 138.
Long Statement,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStoreIndexPerf,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStoreIndexPerf.cs,IndexSpeedTest,The length of the statement  "{0}"' string.Join(Environment.NewLine' sequenceNumbers.Select(kvp => string.Format("    {0}: {1}"' kvp.Key' kvp.Value)))); " is 122.
Long Statement,d60.Cirqus.Tests.MsSql,TestMsSqlEventStorePerformance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestMsSqlEventStorePerformance.cs,CheckReadPerformance,The length of the statement  "            Console.WriteLine("Writing {0} events took {1:0.0} s - that's {2:0.0} events/s"' numberOfEvents' seconds' numberOfEvents / seconds); " is 132.
Long Statement,d60.Cirqus.Tests.MsSql,TestMsSqlEventStorePerformance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestMsSqlEventStorePerformance.cs,CheckReadPerformance,The length of the statement  "                measuredSeconds.Average(a => a.Item1)' measuredSeconds.Average(a => a.Item2)' measuredSeconds.Average(a => a.Item2)/measuredSeconds.Average(a => a.Item1)); " is 155.
Long Statement,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The length of the statement  "            Assert.That(string.Join(" "' view.ListOfComplexThings.SelectMany(t => t.Children.Select(c => c.Message)))' Is.EqualTo("oh my god woota da f00k")); " is 146.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestCachingAggregateRootRepositoryDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestCachingAggregateRootRepositoryDecorator.cs,DoSetUp,The length of the statement  "            _realAggregateRootRepository = new DefaultAggregateRootRepository(_eventStore' _domainEventSerializer' _domainTypeNameMapper); " is 126.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestCachingAggregateRootRepositoryDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestCachingAggregateRootRepositoryDecorator.cs,DoSetUp,The length of the statement  "            _cachingAggregateRootRepository = new CachingAggregateRootRepositoryDecorator(_realAggregateRootRepository' snapshotCache' _eventStore' _domainEventSerializer); " is 160.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunCommandProcessingTest,The length of the statement  "            Console.WriteLine("Processing {0} commands took {1:0.0} s in total"' numberOfCommandsToProcess' stopwatch.Elapsed.TotalSeconds); " is 128.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunEventReplayingTest,The length of the statement  "            Console.WriteLine("Processing {0} events took {1:0.0} s in total"' numberOfEventsToGenerate' stopwatch.Elapsed.TotalSeconds); " is 125.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,GetCommandProcessor,The length of the statement  "            IAggregateRootRepository aggregateRootRepository = new DefaultAggregateRootRepository(_timeTaker' serializer' _domainTypeNameMapper); " is 133.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,GetCommandProcessor,The length of the statement  "                aggregateRootRepository = new CachingAggregateRootRepositoryDecorator(aggregateRootRepository' new InMemorySnapshotCache { ApproximateMaxNumberOfCacheEntries = 100 }' eventStore' serializer); " is 191.
Long Statement,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,GetCommandProcessor,The length of the statement  "            var commandProcessor = new CommandProcessor(_timeTaker' _timeTaker' eventDispatcher' serializer' _commandMapper' _domainTypeNameMapper' new Options()); " is 151.
Long Statement,d60.Cirqus.Tests.Stubs,TestNumberGenerator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Stubs\TestNumberGenerator.cs,AssignNumbers,The length of the statement  "            domainEvent.Meta[DomainEvent.MetadataKeys.SequenceNumber] = (_aggregateRootSequenceNumbers[aggregateRootId]++).ToString(Metadata.NumberCulture); " is 144.
Long Statement,d60.Cirqus.Tests.Stubs,TestNumberGenerator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Stubs\TestNumberGenerator.cs,AssignNumbers,The length of the statement  "            domainEvent.Meta[DomainEvent.MetadataKeys.GlobalSequenceNumber] = (_globalSequenceNumber++).ToString(Metadata.NumberCulture); " is 125.
Long Statement,d60.Cirqus.Tests.Views.Distribution,TestAutomaticViewManagerDistribution,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\Distribution\TestAutomaticViewManagerDistribution.cs,CanAccelerateViewsByPartitioning,The length of the statement  "    string.Join(Environment.NewLine' state.GetCurrentState().Select(s => string.Format("    {0}: {1}"' s.ManagerId' string.Join("' "' s.ViewIds))))' " is 144.
Long Statement,d60.Cirqus.Tests.Views.Distribution,TestAutomaticViewManagerDistribution,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\Distribution\TestAutomaticViewManagerDistribution.cs,CanAccelerateViewsByPartitioning,The length of the statement  "    string.Join(Environment.NewLine' viewManagers.Select(v => string.Format("    {0}: {1}"' v.GetPosition().Result' v.GetType().GetPrettyName())))); " is 144.
Long Statement,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcherWithOptimization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcherWithOptimization.cs,DoSetUp,The length of the statement  "                    _dispatcher = new ViewManagerEventDispatcher(repository' _thisBadBoyEnsuresThatTheEventStoreIsNotUsed' serializer' typeMapper) " is 126.
Long Statement,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The length of the statement  "            var potato1View = potatoTimeToBeConsumedView.Load(InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId("potato1")); " is 123.
Long Statement,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The length of the statement  "            var potato2View = potatoTimeToBeConsumedView.Load(InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId("potato2")); " is 123.
Long Statement,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The length of the statement  "            var potato3View = potatoTimeToBeConsumedView.Load(InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId("potato3")); " is 123.
Long Statement,d60.Cirqus.Tests.Views,ViewContextEx,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,Get,The length of the statement  "                    throw new InvalidCastException(string.Format("Could not get item {0} with key '{1}' as {2}!"' value' key' typeof(T))' exception); " is 129.
Long Statement,d60.Cirqus.Tests.Views,TestLoadAggregatesFromView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestLoadAggregatesFromView.cs,CanAccessAggregateRootInView,The length of the statement  "            Assert.That(view.Calls.All(c => c.Item1 == c.Item2)' "Registered calls contained a call where the version of the loaded aggregate root did not correspond to the version of the event that the view got to process: {0}"' " is 217.
Long Statement,d60.Cirqus.Tests.Views,TestLoadAggregatesFromView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestLoadAggregatesFromView.cs,CanAccessAggregateRootInViewWithImplicitDeductionOfGlobalSequenceNumberInView,The length of the statement  "            Assert.That(view.Calls.All(c => c.Item1 == c.Item2)' "Registered calls contained a call where the version of the loaded aggregate root did not correspond to the version of the event that the view got to process: {0}"' " is 217.
Empty Catch Block,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SaveIsAtomic,The method has an empty catch block.
Magic Number,d60.Cirqus.Tests.Aggregates,TestDefaultAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestDefaultAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id1"' 2' 2);
Magic Number,d60.Cirqus.Tests.Aggregates,TestDefaultAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestDefaultAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id1"' 2' 2);
Magic Number,d60.Cirqus.Tests.Aggregates,TestDefaultAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestDefaultAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id2"' 3' 0);
Magic Number,d60.Cirqus.Tests.Aggregates,TestDefaultAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestDefaultAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id2"' 4' 1);
Magic Number,d60.Cirqus.Tests.Aggregates,TestFactoryBasedAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestFactoryBasedAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id1"' 2' 2);
Magic Number,d60.Cirqus.Tests.Aggregates,TestFactoryBasedAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestFactoryBasedAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id1"' 2' 2);
Magic Number,d60.Cirqus.Tests.Aggregates,TestFactoryBasedAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestFactoryBasedAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id2"' 3' 0);
Magic Number,d60.Cirqus.Tests.Aggregates,TestFactoryBasedAggregateRootRepository,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestFactoryBasedAggregateRootRepository.cs,CanDetermineWhetherRootExistsAtDifferentPointsInTime,The following statement contains a magic number: SaveEvent("id2"' 4' 1);
Magic Number,d60.Cirqus.Tests.Aggregates,TestInheritance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestInheritance.cs,ConcreteTypeIsAppliedAsOwnerToEmittedEvents,The following statement contains a magic number: Assert.That(uow.EmittedEvents.Count()' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The following statement contains a magic number: var timeForFirstEvent = new DateTime(1979' 3' 19' 19' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The following statement contains a magic number: var timeForFirstEvent = new DateTime(1979' 3' 19' 19' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The following statement contains a magic number: var timeForFirstEvent = new DateTime(1979' 3' 19' 19' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The following statement contains a magic number: var timeForFirstEvent = new DateTime(1979' 3' 19' 19' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,ProvidesSuitableMetadataOnEvents,The following statement contains a magic number: var timeForNextEvent = timeForFirstEvent.AddMilliseconds(2);
Magic Number,d60.Cirqus.Tests.Aggregates,TestEventApplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Aggregates\TestEventApplication.cs,FailsOnSequenceMismatch,The following statement contains a magic number: @eventWithTooLateSeqNumber.Meta[DomainEvent.MetadataKeys.GlobalSequenceNumber] = 10.ToString();
Magic Number,d60.Cirqus.Tests.Assumptions,TestConcurrentBag,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Assumptions\TestConcurrentBag.cs,DoesNotContainMultipleInstancesOfTheSameObject,The following statement contains a magic number: Assert.That(baggerino.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Bugs,VerifyThatCommandMetadataFlowsToOtherRoots,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\VerifyThatCommandMetadataFlowsToOtherRoots.cs,FlowsCorrectlyViaCommandContext,The following statement contains a magic number: VerifyEventMetadata(2);
Magic Number,d60.Cirqus.Tests.Bugs,VerifyLoadedAggregateRootVersionIsCorrect,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\VerifyLoadedAggregateRootVersionIsCorrect.cs,ItShallNotBeSo,The following statement contains a magic number: await waitHandle.WaitFor<Wview>(lastResult' TimeSpan.FromSeconds(10));
Magic Number,d60.Cirqus.Tests.Bugs.ReplicationScenario,VerifyThatWeCannotAccidentallyLoadOldRootsInReplicatedSetup,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\ReplicationScenario\VerifyThatWeCannotAccidentallyLoadOldRootsInReplicatedSetup.cs,DoSetUp,The following statement contains a magic number: var replicationDelay = TimeSpan.FromSeconds(5);
Magic Number,d60.Cirqus.Tests.Bugs.ReplicationScenario,VerifyThatWeCannotAccidentallyLoadOldRootsInReplicatedSetup,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Bugs\ReplicationScenario\VerifyThatWeCannotAccidentallyLoadOldRootsInReplicatedSetup.cs,CheckIt,The following statement contains a magic number: _hongKongViewManager                  .WaitUntilProcessed(result' TimeSpan.FromSeconds(20))                  .Wait();
Magic Number,d60.Cirqus.Tests.Commands,TestCommandProcessing,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,CanProcessBaseCommand,The following statement contains a magic number: var aggregateRootIds = Enumerable.Range(0' 5).Select(i => i.ToString()).ToArray();
Magic Number,d60.Cirqus.Tests.Commands,TestCommandProcessing,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCommandProcessing.cs,CanProcessBaseCommand,The following statement contains a magic number: Assert.That(events.Count' Is.EqualTo(10));
Magic Number,d60.Cirqus.Tests.Commands,TestCustomMetadata,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCustomMetadata.cs,CopiesCustomHeadersToEmittedEvents,The following statement contains a magic number: Assert.That(allEvents.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Commands,TestCustomMetadata,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCustomMetadata.cs,CopiesCustomHeadersToEmittedEvents,The following statement contains a magic number: Assert.That(allEvents.Count(e => int.Parse(e.Meta[tenantId].ToString()) == 2)' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Commands,TestCustomMetadata,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Commands\TestCustomMetadata.cs,CopiesCustomHeadersToEmittedEvents,The following statement contains a magic number: Assert.That(allEvents.Count(e => int.Parse(e.Meta[tenantId].ToString()) == 2)' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: var commandProcessor = CommandProcessor.With()                  .Logging(l => l.UseConsole(minLevel: Logger.Level.Warn))                  .EventStore(e =>                  {                      e.UseMongoDb(database' "Events");                      e.EnableCaching(10);                  })                  .EventDispatcher(d =>                  {                      d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view1"))                          .WithWaitHandle(waiter)                          .WithMaxDomainEventsPerBatch(200);                        d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view2"))                          .WithWaitHandle(waiter);                                            d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view3"))                          .WithWaitHandle(waiter);                        d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view4"))                          .WithWaitHandle(waiter);                  })                  .Create();
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: var commandProcessor = CommandProcessor.With()                  .Logging(l => l.UseConsole(minLevel: Logger.Level.Warn))                  .EventStore(e =>                  {                      e.UseMongoDb(database' "Events");                      e.EnableCaching(10);                  })                  .EventDispatcher(d =>                  {                      d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view1"))                          .WithWaitHandle(waiter)                          .WithMaxDomainEventsPerBatch(200);                        d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view2"))                          .WithWaitHandle(waiter);                                            d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view3"))                          .WithWaitHandle(waiter);                        d.UseViewManagerEventDispatcher(new MongoDbViewManager<ConfigTestView>(database' "view4"))                          .WithWaitHandle(waiter);                  })                  .Create();
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: 99.Times(() =>              {                  commandProcessor.ProcessCommand(new ConfigTestCommand("id1"));                  commandProcessor.ProcessCommand(new ConfigTestCommand("id2"));              });
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: await waiter.WaitForAll(lastResult' TimeSpan.FromSeconds(5));
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: expectedViewCollectionNames.ToList()                  .ForEach(name =>                  {                      var doc = database.GetCollection<ConfigTestView>(name)                          .FindOne(Query.EQ("_id"' GlobalInstanceLocator.GetViewInstanceId()));                        Assert.That(doc.ProcessedEventNumbers' Is.EqualTo(Enumerable.Range(0' 200).ToArray()));                      Assert.That(doc.CountsByRootId["id1"]' Is.EqualTo(100));                      Assert.That(doc.CountsByRootId["id2"]' Is.EqualTo(100));                  });
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: expectedViewCollectionNames.ToList()                  .ForEach(name =>                  {                      var doc = database.GetCollection<ConfigTestView>(name)                          .FindOne(Query.EQ("_id"' GlobalInstanceLocator.GetViewInstanceId()));                        Assert.That(doc.ProcessedEventNumbers' Is.EqualTo(Enumerable.Range(0' 200).ToArray()));                      Assert.That(doc.CountsByRootId["id1"]' Is.EqualTo(100));                      Assert.That(doc.CountsByRootId["id2"]' Is.EqualTo(100));                  });
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanInstallMultipleEventDispatchers,The following statement contains a magic number: expectedViewCollectionNames.ToList()                  .ForEach(name =>                  {                      var doc = database.GetCollection<ConfigTestView>(name)                          .FindOne(Query.EQ("_id"' GlobalInstanceLocator.GetViewInstanceId()));                        Assert.That(doc.ProcessedEventNumbers' Is.EqualTo(Enumerable.Range(0' 200).ToArray()));                      Assert.That(doc.CountsByRootId["id1"]' Is.EqualTo(100));                      Assert.That(doc.CountsByRootId["id2"]' Is.EqualTo(100));                  });
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanDoTheConfigThing,The following statement contains a magic number: var fullConfiguration = CommandProcessor.With()                  .Logging(l => l.UseConsole())                  .EventStore(e => e.UseMongoDb(database' "Events"))                  .AggregateRootRepository(r => r.EnableInMemorySnapshotCaching(10000))                  .EventDispatcher(d => d.UseViewManagerEventDispatcher())                  .Options(o =>                  {                      o.PurgeExistingViews(true);                      o.AddDomainExceptionType<ApplicationException>();                      o.SetMaxRetries(10);                  });
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationApi,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,CanDoTheConfigThing,The following statement contains a magic number: var fullConfiguration = CommandProcessor.With()                  .Logging(l => l.UseConsole())                  .EventStore(e => e.UseMongoDb(database' "Events"))                  .AggregateRootRepository(r => r.EnableInMemorySnapshotCaching(10000))                  .EventDispatcher(d => d.UseViewManagerEventDispatcher())                  .Options(o =>                  {                      o.PurgeExistingViews(true);                      o.AddDomainExceptionType<ApplicationException>();                      o.SetMaxRetries(10);                  });
Magic Number,d60.Cirqus.Tests.Config,ConfigTestView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationApi.cs,Handle,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationContainer,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationContainer.cs,CanGetDecoratedInstanceWithAnArbitraryNumberOfDecorators,The following statement contains a magic number: Enumerable.Range(1' 7)                  .ToList()                  .ForEach(tal => _container.Decorate(c => c.Get<string>() + " " + tal));
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationContainer,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationContainer.cs,CanGetDecoratedInstanceWithAnArbitraryNumberOfInterleavedDecorators,The following statement contains a magic number: _container.Decorate(c => int.Parse(c.Get<string>()) + 2);
Magic Number,d60.Cirqus.Tests.Config,TestConfigurationContainer,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Config\TestConfigurationContainer.cs,CanGetDecoratedInstanceWithAnArbitraryNumberOfInterleavedDecorators,The following statement contains a magic number: Assert.That(resolvedString' Is.EqualTo(24));
Magic Number,d60.Cirqus.Tests.Contracts.AggregateRootRepository,TestAggregateRootRepositories<TAggregateRootRepositoryFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\AggregateRootRepository\TestAggregateRootRepositories.cs,CanLoadAggregateRoot,The following statement contains a magic number: _factory.SaveEvent<SomeEvent' SomeRoot>(NewEvent(aggregateRootId' 2));
Magic Number,d60.Cirqus.Tests.Contracts.AggregateRootRepository,TestAggregateRootRepositories<TAggregateRootRepositoryFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\AggregateRootRepository\TestAggregateRootRepositories.cs,CanLoadAggregateRoot,The following statement contains a magic number: _factory.SaveEvent<SomeEvent' SomeRoot>(NewEvent(aggregateRootId' 3));
Magic Number,d60.Cirqus.Tests.Contracts.AggregateRootRepository,TestAggregateRootRepositories<TAggregateRootRepositoryFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\AggregateRootRepository\TestAggregateRootRepositories.cs,CanLoadAggregateRoot,The following statement contains a magic number: _factory.SaveEvent<SomeEvent' SomeRoot>(NewEvent(aggregateRootId' 4));
Magic Number,d60.Cirqus.Tests.Contracts.AggregateRootRepository,TestAggregateRootRepositories<TAggregateRootRepositoryFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\AggregateRootRepository\TestAggregateRootRepositories.cs,CanLoadAggregateRoot,The following statement contains a magic number: Assert.That(instance.EventCounter' Is.EqualTo(5));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadFromWithinEventBatch,The following statement contains a magic number: var events = new List<EventData>              {                  Event(0' "id2")'                   Event(1' "id2")'                  Event(2' "id2")'                    Event(0' "id1")'                   Event(1' "id1")'                  Event(2' "id1")'              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadFromWithinEventBatch,The following statement contains a magic number: var events = new List<EventData>              {                  Event(0' "id2")'                   Event(1' "id2")'                  Event(2' "id2")'                    Event(0' "id1")'                   Event(1' "id1")'                  Event(2' "id1")'              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadFromWithinEventBatch,The following statement contains a magic number: Assert.That(loadedEvents.Count' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadFromWithinEventBatch,The following statement contains a magic number: Assert.That(loadedEvents[1].GetSequenceNumber()' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,BatchIdIsAppliedAsMetadataToEvents,The following statement contains a magic number: Assert.That(allEvents.Count' Is.EqualTo(5));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,BatchIdIsAppliedAsMetadataToEvents,The following statement contains a magic number: Assert.That(batches.Count' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,BatchIdIsAppliedAsMetadataToEvents,The following statement contains a magic number: Assert.That(batches[0].Count()' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,BatchIdIsAppliedAsMetadataToEvents,The following statement contains a magic number: Assert.That(batches[1].Count()' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,EventAreAutomaticallyGivenGlobalSequenceNumbers,The following statement contains a magic number: Assert.That(allEvents.Count' Is.EqualTo(5));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,EventAreAutomaticallyGivenGlobalSequenceNumbers,The following statement contains a magic number: Assert.That(allEvents.Select(a => a.GlobalSequenceNumber)' Is.EqualTo(new[] { 0' 1' 2' 3' 4 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,EventAreAutomaticallyGivenGlobalSequenceNumbers,The following statement contains a magic number: Assert.That(allEvents.Select(a => a.GlobalSequenceNumber)' Is.EqualTo(new[] { 0' 1' 2' 3' 4 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,EventAreAutomaticallyGivenGlobalSequenceNumbers,The following statement contains a magic number: Assert.That(allEvents.Select(a => a.GlobalSequenceNumber)' Is.EqualTo(new[] { 0' 1' 2' 3' 4 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,ValidatesSequenceOfSequenceNumbers,The following statement contains a magic number: var events = new[]              {                  EventData.FromMetadata(new Metadata                  {                      {DomainEvent.MetadataKeys.SequenceNumber' 1.ToString(Metadata.NumberCulture)}                  }' new byte[0])'                  EventData.FromMetadata(new Metadata                  {                      {DomainEvent.MetadataKeys.SequenceNumber' 2.ToString(Metadata.NumberCulture)}                  }' new byte[0])'                  EventData.FromMetadata(new Metadata                  {                      {DomainEvent.MetadataKeys.SequenceNumber' 4.ToString(Metadata.NumberCulture)}                  }' new byte[0])              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,ValidatesSequenceOfSequenceNumbers,The following statement contains a magic number: var events = new[]              {                  EventData.FromMetadata(new Metadata                  {                      {DomainEvent.MetadataKeys.SequenceNumber' 1.ToString(Metadata.NumberCulture)}                  }' new byte[0])'                  EventData.FromMetadata(new Metadata                  {                      {DomainEvent.MetadataKeys.SequenceNumber' 2.ToString(Metadata.NumberCulture)}                  }' new byte[0])'                  EventData.FromMetadata(new Metadata                  {                      {DomainEvent.MetadataKeys.SequenceNumber' 4.ToString(Metadata.NumberCulture)}                  }' new byte[0])              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUnique,The following statement contains a magic number: var events = new[]              {                  Event(1' "id")'                   Event(2' "id")'                   Event(3' "id")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUnique,The following statement contains a magic number: var events = new[]              {                  Event(1' "id")'                   Event(2' "id")'                   Event(3' "id")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUnique,The following statement contains a magic number: var batchWithAlreadyUsedSequenceNumber = new[] { Event(2' "id") };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The following statement contains a magic number: var events = new[]              {                  Event(1' "id1")'                   Event(2' "id1")'                   Event(3' "id1")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The following statement contains a magic number: var events = new[]              {                  Event(1' "id1")'                   Event(2' "id1")'                   Event(3' "id1")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The following statement contains a magic number: var batchWithAlreadyUsedSequenceNumberOnlyForAnotherAggregate = new[]              {                  Event(1' "id2")'                  Event(2' "id2")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The following statement contains a magic number: var batchWithAlreadyUsedSequenceNumber = new[]              {                  Event(4' "id1")'                  Event(2' "id2")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SavedSequenceNumbersAreUniqueScopedToAggregateRoot,The following statement contains a magic number: var batchWithAlreadyUsedSequenceNumber = new[]              {                  Event(4' "id1")'                  Event(2' "id2")              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(0' "rootid")'                  Event(1' "rootid")'                  Event(2' "rootid")'                  Event(3' "rootid")'                  Event(4' "rootid")'                  Event(5' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(0' "rootid")'                  Event(1' "rootid")'                  Event(2' "rootid")'                  Event(3' "rootid")'                  Event(4' "rootid")'                  Event(5' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(0' "rootid")'                  Event(1' "rootid")'                  Event(2' "rootid")'                  Event(3' "rootid")'                  Event(4' "rootid")'                  Event(5' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(0' "rootid")'                  Event(1' "rootid")'                  Event(2' "rootid")'                  Event(3' "rootid")'                  Event(4' "rootid")'                  Event(5' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(6' "rootid")'                  Event(7' "rootid")'                  Event(8' "rootid")'                  Event(9' "rootid")'                  Event(10' "rootid")'                  Event(11' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(6' "rootid")'                  Event(7' "rootid")'                  Event(8' "rootid")'                  Event(9' "rootid")'                  Event(10' "rootid")'                  Event(11' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(6' "rootid")'                  Event(7' "rootid")'                  Event(8' "rootid")'                  Event(9' "rootid")'                  Event(10' "rootid")'                  Event(11' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(6' "rootid")'                  Event(7' "rootid")'                  Event(8' "rootid")'                  Event(9' "rootid")'                  Event(10' "rootid")'                  Event(11' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(6' "rootid")'                  Event(7' "rootid")'                  Event(8' "rootid")'                  Event(9' "rootid")'                  Event(10' "rootid")'                  Event(11' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(6' "rootid")'                  Event(7' "rootid")'                  Event(8' "rootid")'                  Event(9' "rootid")'                  Event(10' "rootid")'                  Event(11' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(12' "rootid")'                  Event(13' "rootid")'                  Event(14' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(12' "rootid")'                  Event(13' "rootid")'                  Event(14' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(12' "rootid")'                  Event(13' "rootid")'                  Event(14' "rootid")'              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(2).Count()' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(2).Count()' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(2).GetSeq()' Is.EqualTo(Enumerable.Range(1' 2)));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(2).GetSeq()' Is.EqualTo(Enumerable.Range(1' 2)));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(10).Count()' Is.EqualTo(10));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(10).Count()' Is.EqualTo(10));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(10).GetSeq()' Is.EqualTo(Enumerable.Range(1' 10)));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 1).Take(10).GetSeq()' Is.EqualTo(Enumerable.Range(1' 10)));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).Count()' Is.EqualTo(10));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).Count()' Is.EqualTo(10));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).Count()' Is.EqualTo(10));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).GetSeq().ToArray()' Is.EqualTo(Enumerable.Range(4' 10).ToArray()));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).GetSeq().ToArray()' Is.EqualTo(Enumerable.Range(4' 10).ToArray()));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).GetSeq().ToArray()' Is.EqualTo(Enumerable.Range(4' 10).ToArray()));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEvents,The following statement contains a magic number: Assert.That(_eventStore.Load("rootid"' 4).Take(10).GetSeq().ToArray()' Is.EqualTo(Enumerable.Range(4' 10).ToArray()));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(0' "agg1")'                  Event(1' "agg1")'                  Event(2' "agg2")              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(3' "agg1")'                  Event(4' "agg1")'                  Event(5' "agg2")              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(3' "agg1")'                  Event(4' "agg1")'                  Event(5' "agg2")              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]              {                  Event(3' "agg1")'                  Event(4' "agg1")'                  Event(5' "agg2")              });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: Assert.That(allEventsForAgg1.Count' Is.EqualTo(4)' "Expected to get events 0' 1' 3' 4' but got only {0}"' string.Join("' "' allEventsForAgg1.Select(e => e.GetGlobalSequenceNumber())));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: Assert.That(allEventsForAgg1.GetSeq()' Is.EqualTo(new[] { 0' 1' 3' 4 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: Assert.That(allEventsForAgg1.GetSeq()' Is.EqualTo(new[] { 0' 1' 3' 4 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: Assert.That(allEventsForAgg2.Count' Is.EqualTo(2)' "Expected to get events 2' 5 but got only {0}"' string.Join("' "' allEventsForAgg2.Select(e => e.GetGlobalSequenceNumber())));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: Assert.That(allEventsForAgg2.GetSeq()' Is.EqualTo(new[] { 2' 5 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,CanLoadEventsByAggregateRootId,The following statement contains a magic number: Assert.That(allEventsForAgg2.GetSeq()' Is.EqualTo(new[] { 2' 5 }));
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,SaveIsAtomic,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()' new[]                  {                      Event(1' "agg1")'                      Event(1' "agg2")'                      new ThrowingEvent                      {                          Meta =                          {                              {DomainEvent.MetadataKeys.SequenceNumber' 2.ToString(Metadata.NumberCulture)}'                              {DomainEvent.MetadataKeys.AggregateRootId' "agg2"}                          }                      }                  });
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,TimeStampsCanRoundtripAsTheyShould,The following statement contains a magic number: var someLocalTime = new DateTime(2015' 10' 31' 12' 10' 15' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,TimeStampsCanRoundtripAsTheyShould,The following statement contains a magic number: var someLocalTime = new DateTime(2015' 10' 31' 12' 10' 15' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,TimeStampsCanRoundtripAsTheyShould,The following statement contains a magic number: var someLocalTime = new DateTime(2015' 10' 31' 12' 10' 15' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,TimeStampsCanRoundtripAsTheyShould,The following statement contains a magic number: var someLocalTime = new DateTime(2015' 10' 31' 12' 10' 15' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,TimeStampsCanRoundtripAsTheyShould,The following statement contains a magic number: var someLocalTime = new DateTime(2015' 10' 31' 12' 10' 15' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,EventStoreTest<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\EventStoreTest.cs,TimeStampsCanRoundtripAsTheyShould,The following statement contains a magic number: var someLocalTime = new DateTime(2015' 10' 31' 12' 10' 15' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,GenerateSaveReport,The following statement contains a magic number: const int repetitions = 10;
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,GenerateSaveReport,The following statement contains a magic number: const int numberOfEventsPerRepetition = 10;
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,PresentResults,The following statement contains a magic number: const int width = 80;
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,PresentResults,The following statement contains a magic number: const int scaleWidth = 20;
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,FormatGroup,The following statement contains a magic number: var time = string.Format("{0:##0}:{1:00}.{2:0}"' when.TotalMinutes' when.Seconds' when.Milliseconds/100)                  .PadRight(scaleWidth);
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,CreateEventWithRealisticPayload,The following statement contains a magic number: return new EventWithRealisticPayload              {                  Meta =                  {                      {DomainEvent.MetadataKeys.AggregateRootId' aggregateRootId.ToString()}'                      {DomainEvent.MetadataKeys.SequenceNumber' seqNo.ToString(Metadata.NumberCulture)}'                      {DomainEvent.MetadataKeys.GlobalSequenceNumber' globalSequenceNumber.ToString(Metadata.NumberCulture)}'                  }'                  AnInt = _random.Next(1000)'                  SomeStringValue = string.Format("This is a random number: {0}"' _random.Next(10))'                  Stuff = Enumerable.Range(0' _random.Next(4))                      .Select(n => new Something                      {                          Text = string.Format("Thing # {0}"' n)                      })                      .ToList()              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,CreateEventWithRealisticPayload,The following statement contains a magic number: return new EventWithRealisticPayload              {                  Meta =                  {                      {DomainEvent.MetadataKeys.AggregateRootId' aggregateRootId.ToString()}'                      {DomainEvent.MetadataKeys.SequenceNumber' seqNo.ToString(Metadata.NumberCulture)}'                      {DomainEvent.MetadataKeys.GlobalSequenceNumber' globalSequenceNumber.ToString(Metadata.NumberCulture)}'                  }'                  AnInt = _random.Next(1000)'                  SomeStringValue = string.Format("This is a random number: {0}"' _random.Next(10))'                  Stuff = Enumerable.Range(0' _random.Next(4))                      .Select(n => new Something                      {                          Text = string.Format("Thing # {0}"' n)                      })                      .ToList()              };
Magic Number,d60.Cirqus.Tests.Contracts.EventStore,InsertPerfOverTime<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\EventStore\InsertPerfOverTime.cs,CreateEventWithRealisticPayload,The following statement contains a magic number: return new EventWithRealisticPayload              {                  Meta =                  {                      {DomainEvent.MetadataKeys.AggregateRootId' aggregateRootId.ToString()}'                      {DomainEvent.MetadataKeys.SequenceNumber' seqNo.ToString(Metadata.NumberCulture)}'                      {DomainEvent.MetadataKeys.GlobalSequenceNumber' globalSequenceNumber.ToString(Metadata.NumberCulture)}'                  }'                  AnInt = _random.Next(1000)'                  SomeStringValue = string.Format("This is a random number: {0}"' _random.Next(10))'                  Stuff = Enumerable.Range(0' _random.Next(4))                      .Select(n => new Something                      {                          Text = string.Format("Thing # {0}"' n)                      })                      .ToList()              };
Magic Number,d60.Cirqus.Tests.Contracts.Views,DomainEventBatchDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\DomainEventBatchDispatch.cs,EventsCanBeDispatchedToViewLocatorAndViewInBatches,The following statement contains a magic number: var result = _commandProcessor.ProcessCommand(new DoStuffCommand("mogens"' 20));
Magic Number,d60.Cirqus.Tests.Contracts.Views,DomainEventBatchDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\DomainEventBatchDispatch.cs,EventsCanBeDispatchedToViewLocatorAndViewInBatches,The following statement contains a magic number: _waitHandle.WaitForAll(result' TimeSpan.FromSeconds(30)).Wait();
Magic Number,d60.Cirqus.Tests.Contracts.Views,LoadingStuffDuringViewLocation<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\LoadingStuffDuringViewLocation.cs,CanLoadRootsDuringViewLocation,The following statement contains a magic number: Assert.That(view.Nodes' Is.EqualTo(5));
Magic Number,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,WorksWithSimpleScenario,The following statement contains a magic number: Assert.That(storedIds.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,AutomaticallyCatchesUpWhenInitializing,The following statement contains a magic number: Assert.That(storedIds.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,AutomaticallyCatchesUpAfterPurging,The following statement contains a magic number: Assert.That(storedIds.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,CanManageViewWithLocatorWithMultipleIds,The following statement contains a magic number: Assert.That(batchIdView.HeaderValues.Count' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,CanManageViewWithLocatorWithMultipleIds,The following statement contains a magic number: Assert.That(aggregateRootIdView.HeaderValues.Count' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.Contracts.Views,GeneralViewManagerTests<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\GeneralViewManagerTests.cs,CanManageViewWithLocatorWithMultipleIds,The following statement contains a magic number: Assert.That(globalSequenceNumberView.HeaderValues.Count' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The following statement contains a magic number: Assert.That(normalView.ProcessedEvents' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The following statement contains a magic number: Assert.That(viewWithAggregateRootSubscription.ProcessedEvents' Is.EqualTo(4)' "Expected that the view could get all events from this particular aggregate root");
Magic Number,d60.Cirqus.Tests.Contracts.Views,PolymorphicDispatch<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\PolymorphicDispatch.cs,ViewsCanSubscribeToBaseClasses,The following statement contains a magic number: Assert.That(viewWithGeneralDomainEventSubscription.ProcessedEvents' Is.EqualTo(4)' "Expected that the view could get ALL events");
Magic Number,d60.Cirqus.Tests.Contracts.Views,RecoveryTest<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\RecoveryTest.cs,DoSetUp,The following statement contains a magic number: _context = RegisterForDisposal(                  TestContext.With()                      .EventDispatcher(x => x.UseViewManagerEventDispatcher(_viewManager).WithMaxDomainEventsPerBatch(10))                      .Options(x => x.Asynchronous())                      .Create());
Magic Number,d60.Cirqus.Tests.Contracts.Views,RecoveryTest<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\RecoveryTest.cs,CanRecoverAfterTransientErrors,The following statement contains a magic number: _context.WaitForViewsToCatchUp(300);
Magic Number,d60.Cirqus.Tests.Contracts.Views,UpdatedEvent<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\UpdatedEvent.cs,RaisesEventWheneverViewInstanceIsUpdated,The following statement contains a magic number: Assert.That(registeredUpdates["id1"]' Is.GreaterThanOrEqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.Views,UpdatedEvent<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\UpdatedEvent.cs,RaisesEventWheneverViewInstanceIsUpdated,The following statement contains a magic number: Assert.That(registeredUpdates.Count' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.Views,ViewInstanceDeletion<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ViewInstanceDeletion.cs,YayItWorks,The following statement contains a magic number: Assert.That(bomView.ThisManyThingsHappened' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.Views,ViewLocators<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ViewLocators.cs,WorksWithInstancePerAggregateRootView,The following statement contains a magic number: Assert.That(view.EventCounter' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.Views,ViewLocators<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ViewLocators.cs,WorksWithGlobalInstanceView,The following statement contains a magic number: Assert.That(view.EventCounter' Is.EqualTo(6));
Magic Number,d60.Cirqus.Tests.Contracts.Views,ObjectGraph<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ObjectGraph.cs,WorksWithChildren,The following statement contains a magic number: _context.Save(root1' new Event {NumberOfChildren = 3});
Magic Number,d60.Cirqus.Tests.Contracts.Views,ObjectGraph<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ObjectGraph.cs,WorksWithChildren,The following statement contains a magic number: Assert.That(view.Children.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Contracts.Views,ObjectGraph<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ObjectGraph.cs,ItWorksWithSeveralViewsAndDeletionOfRemovedChildren,The following statement contains a magic number: _context.Save(root1' new Event { NumberOfChildren = 30 });
Magic Number,d60.Cirqus.Tests.Contracts.Views,ObjectGraph<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ObjectGraph.cs,ItWorksWithSeveralViewsAndDeletionOfRemovedChildren,The following statement contains a magic number: _context.Save(root2' new Event { NumberOfChildren = 20 });
Magic Number,d60.Cirqus.Tests.Contracts.Views,ObjectGraph<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ObjectGraph.cs,ItWorksWithSeveralViewsAndDeletionOfRemovedChildren,The following statement contains a magic number: _context.Save(root2' new Event {NumberOfChildren = 2});
Magic Number,d60.Cirqus.Tests.Contracts.Views,ObjectGraph<TFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\ObjectGraph.cs,ItWorksWithSeveralViewsAndDeletionOfRemovedChildren,The following statement contains a magic number: Assert.That(view2.Children.Count' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Contracts.Views.Models.RecoveryTest,View,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Views\Models\RecoveryTest\View.cs,Handle,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,d60.Cirqus.Tests.Diagnostics,TestLapTimes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestLapTimes.cs,CanDoTheThing,The following statement contains a magic number: var commandProcessor = RegisterForDisposal(                      CommandProcessor.With()                          .Logging(l => l.UseConsole(minLevel: Logger.Level.Warn))                          .EventStore(e => e.UseMongoDb(database' "Events"))                                                  // try commenting this line in/out                          .AggregateRootRepository(e => e.EnableInMemorySnapshotCaching(1000))                                                    .EventDispatcher(e => e.UseViewManagerEventDispatcher())                          .Options(o =>                          {                              o.AddProfiler(profiler);                              o.SetMaxRetries(0);                          })                          .Create()                      );
Magic Number,d60.Cirqus.Tests.Diagnostics,SlowWrapper,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestProfiler.cs,Load,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,d60.Cirqus.Tests.Diagnostics,TestViewManagerProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestViewManagerProfiler.cs,CanMeasureTimeSpentInViewManagers,The following statement contains a magic number: var lastResult = Enumerable.Range(0' 10)                      .Select(i => commandProcessor.ProcessCommand(new Commando("someId")))                      .Last();
Magic Number,d60.Cirqus.Tests.Diagnostics,TestViewManagerProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestViewManagerProfiler.cs,CanMeasureTimeSpentInViewManagers,The following statement contains a magic number: Assert.That(accumulatedTimes[view2]' Is.GreaterThan(TimeSpan.FromSeconds(.1)).And.LessThan(TimeSpan.FromSeconds(0.15)));
Magic Number,d60.Cirqus.Tests.Diagnostics,TestViewManagerProfiler,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestViewManagerProfiler.cs,CanMeasureTimeSpentInViewManagers,The following statement contains a magic number: Assert.That(accumulatedTimes[view2]' Is.GreaterThan(TimeSpan.FromSeconds(.1)).And.LessThan(TimeSpan.FromSeconds(0.15)));
Magic Number,d60.Cirqus.Tests.Diagnostics,SlowView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestViewManagerProfiler.cs,Handle,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,d60.Cirqus.Tests.Diagnostics,QuickView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Diagnostics\TestViewManagerProfiler.cs,Handle,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,DoesNotLeaveConnectedOrphans,The following statement contains a magic number: var ids = Enumerable.Range(0' 10).Select(i => i.ToString());
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 2 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 3 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 2 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 2 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 3 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 2 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 2 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 3 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: _context.Save(id' new Event { NumberOfChildren = 2 });
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: Assert.That(parent.Children.Count' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.EntityFramework,TestEntityFrameworkViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,RunTest,The following statement contains a magic number: Assert.That(parent.OtherChildren.Count' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.EntityFramework,SomeParent,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\EntityFramework\TestEntityFrameworkViewManager.cs,Handle,The following statement contains a magic number: OtherChildren.AddRange(Enumerable.Range(0' domainEvent.NumberOfChildren*2)                      .Select(no => new AnotherChild {Value = "other child " + no}));
Magic Number,d60.Cirqus.Tests.Events.Replicator,ErrorHandling,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\ErrorHandling.cs,DoSetUp,The following statement contains a magic number: var source = new ThrowsAnErrorOnceInAWhile(_source' 0.5);
Magic Number,d60.Cirqus.Tests.Events.Replicator,ErrorHandling,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\ErrorHandling.cs,DoSetUp,The following statement contains a magic number: var destination = new ThrowsAnErrorOnceInAWhile(_destination' 0.5);
Magic Number,d60.Cirqus.Tests.Events.Replicator,ErrorHandling,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\ErrorHandling.cs,CanReplicateEventsEvenWhenErrorsOccurVeryOften,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,d60.Cirqus.Tests.Events.Replicator,BasicReplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\BasicReplication.cs,CanReplicateEventBatch,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,d60.Cirqus.Tests.Events.Replicator,BasicReplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\BasicReplication.cs,ReplicatedEventsGetSourceBatchIdHeader,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,d60.Cirqus.Tests.Events.Replicator,BasicReplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\BasicReplication.cs,ReplicatedEventsGetSourceBatchIdHeader,The following statement contains a magic number: Assert.That(myKindOfEvents.Count' Is.EqualTo(3)' "Expected event 0' 1' 2 but got only {0}"' string.Join("' "' myKindOfEvents.Select(e => e.GetGlobalSequenceNumber())));
Magic Number,d60.Cirqus.Tests.Events.Replicator,BasicReplication,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\BasicReplication.cs,GetAllEventsInDestinationStore,The following statement contains a magic number: attempt++ < 3
Magic Number,d60.Cirqus.Tests.Events.Replicator,TestEventReplicator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Replicator\TestEventReplicator.cs,TryReplicating,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromOkFile,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromOkFile,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromOkFile,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptCommit,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptCommit,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptCommit,The following statement contains a magic number: _log.Writer.Write((byte)11);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptCommit,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithCorruptCommit,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithCorruptCommit,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithCorruptCommit,The following statement contains a magic number: _log.Writer.Write((byte)11);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithCorruptCommit,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write(11L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write((byte)11);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithCorruptChecksum,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecvoerFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecvoerFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecvoerFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write(11L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecvoerFileWithCorruptChecksum,The following statement contains a magic number: _log.Writer.Write((byte)11);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecvoerFileWithCorruptChecksum,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithMissingChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithMissingChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithMissingChecksum,The following statement contains a magic number: _log.Writer.Write(11L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,GetLastComittedGlobalSequenceNumberFromFileWithMissingChecksum,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithMissingChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithMissingChecksum,The following statement contains a magic number: _log.Writer.Write(10L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithMissingChecksum,The following statement contains a magic number: _log.Writer.Write(11L);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestCommitLog,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestCommitLog.cs,RecoverFileWithMissingChecksum,The following statement contains a magic number: Assert.AreEqual(10' global);
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestNtfsEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestNtfsEventStore.cs,CanRecoverAfterWritingIndex,The following statement contains a magic number: Assert.AreEqual(2' stream.Count());
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestNtfsEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestNtfsEventStore.cs,CanRecoverAfterWritingIndex,The following statement contains a magic number: Assert.AreEqual(2' load.Count());
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestNtfsEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestNtfsEventStore.cs,CanRecoverAfterSavingEventData,The following statement contains a magic number: Assert.AreEqual(2' stream.Count());
Magic Number,d60.Cirqus.Tests.Events.Ntfs,TestNtfsEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\Ntfs\TestNtfsEventStore.cs,CanRecoverAfterSavingEventData,The following statement contains a magic number: Assert.AreEqual(2' load.Count());
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromCache,The following statement contains a magic number: Save("(H)aggrid"' 2);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromCache,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' results[2].Data);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromCache,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' results[2].Data);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromLatePartiallyCachedStream,The following statement contains a magic number: Save("(H)aggrid"' 2);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromLatePartiallyCachedStream,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' results[2].Data);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromLatePartiallyCachedStream,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' results[2].Data);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromEarlyPartiallyCachedStream,The following statement contains a magic number: Save("(H)aggrid"' 2);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromEarlyPartiallyCachedStream,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' results[2].Data);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromEarlyPartiallyCachedStream,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' results[2].Data);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromEarlyPartiallyCachedStream,The following statement contains a magic number: Assert.AreEqual(2' _store.CacheMisses.Count);
Magic Number,d60.Cirqus.Tests.Events,TestCachingEventStoreDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestCachingEventStoreDecorator.cs,LoadsFromEarlyPartiallyCachedStream,The following statement contains a magic number: Assert.AreEqual(DataForSeq(2)' _store.CacheMisses[1].Data);
Magic Number,d60.Cirqus.Tests.Events,TestInMemoryEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestInMemoryEventStore.cs,ReplayedEventsAreClones,The following statement contains a magic number: Assert.That(relevantEvent.ListOfStuff.Count' Is.EqualTo(3)' "Oh noes! It appears that the event was changed: {0}"' string.Join(" "' relevantEvent.ListOfStuff));
Magic Number,d60.Cirqus.Tests.Events,TestSerialization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestSerialization.cs,RoundtripEventWithReadonlyFields,The following statement contains a magic number: var e = new ComplexDomainEvent("hello there"' new ComplexValue(23))              {                  Meta =                  {                      {DomainEvent.MetadataKeys.AggregateRootId' rootId.ToString()}'                      {DomainEvent.MetadataKeys.TimeUtc' utcNow.ToString("u")}                  }              };
Magic Number,d60.Cirqus.Tests.Events,TestSerialization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Events\TestSerialization.cs,RoundtripEventWithReadonlyFields,The following statement contains a magic number: Assert.That(roundtrippedEvent.Value.Value' Is.EqualTo(23));
Magic Number,d60.Cirqus.Tests.Examples,ReadmeSnippet,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,TheSnippet,The following statement contains a magic number: processor.ProcessCommand(new IncrementCounter("id"' 2));
Magic Number,d60.Cirqus.Tests.Examples,ReadmeSnippet,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,TheSnippet,The following statement contains a magic number: processor.ProcessCommand(new IncrementCounter("id"' 3));
Magic Number,d60.Cirqus.Tests.Examples,ReadmeSnippet,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,TheSnippet,The following statement contains a magic number: processor.ProcessCommand(new IncrementCounter("id"' 5));
Magic Number,d60.Cirqus.Tests.Examples,ReadmeSnippet,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,TheSnippet,The following statement contains a magic number: processor.ProcessCommand(new IncrementCounter("id"' 8));
Magic Number,d60.Cirqus.Tests.Examples,Counter,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,GetSecretBizValue,The following statement contains a magic number: return CurrentValue % 2 == 0                      ? Math.PI                      : CurrentValue;
Magic Number,d60.Cirqus.Tests.Examples,CounterView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Examples\ReadmeSnippet.cs,Handle,The following statement contains a magic number: SomeRecentBizValues.Count > 10
Magic Number,d60.Cirqus.Tests,FixtureBase,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\FixtureBase.cs,TakeTime,The following statement contains a magic number: timer.Interval = 5000;
Magic Number,d60.Cirqus.Tests,FixtureBase,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\FixtureBase.cs,TakeTimeAsync,The following statement contains a magic number: timer.Interval = 5000;
Magic Number,d60.Cirqus.Tests.Identity,KeyParserTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\KeyParserTests.cs,ParseOnlyLiteralTextsAddsAUniqnessTerm,The following statement contains a magic number: terms.Count.ShouldBe(3);
Magic Number,d60.Cirqus.Tests.Identity,KeyParserTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\KeyParserTests.cs,ParseOnlyLiteralTextsAddsAUniqnessTerm,The following statement contains a magic number: terms[2].ShouldBeOfType<KeyFormat.GuidKeyword>();
Magic Number,d60.Cirqus.Tests.Identity,KeyParserTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\KeyParserTests.cs,ParseComplexExpression,The following statement contains a magic number: terms.Count.ShouldBe(5);
Magic Number,d60.Cirqus.Tests.Identity,KeyParserTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\KeyParserTests.cs,ParseComplexExpression,The following statement contains a magic number: terms[2].ShouldBeOfType<KeyFormat.LiteralText>().Text.ShouldBe("hvaderder");
Magic Number,d60.Cirqus.Tests.Identity,KeyParserTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\KeyParserTests.cs,ParseComplexExpression,The following statement contains a magic number: terms[3].ShouldBeOfType<KeyFormat.Placeholder>().Property.ShouldBe("props");
Magic Number,d60.Cirqus.Tests.Identity,KeyParserTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\KeyParserTests.cs,ParseComplexExpression,The following statement contains a magic number: terms[4].ShouldBeOfType<KeyFormat.SGuidKeyword>();
Magic Number,d60.Cirqus.Tests.Identity,IdTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\IdTests.cs,AppliesValuesToPlaceholders,The following statement contains a magic number: root.Int.ShouldBe(2);
Magic Number,d60.Cirqus.Tests.Identity,IdTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\IdTests.cs,AppliesValuesToPlaceholders,The following statement contains a magic number: root.Long.ShouldBe(10000000000);
Magic Number,d60.Cirqus.Tests.Identity,IdTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Identity\IdTests.cs,AcceptsOtherSeperatorChars,The following statement contains a magic number: var id = NewId("prefix/guid/{tal}"' 123);
Magic Number,d60.Cirqus.Tests.Integration,SimpleScenarioWithDelegation,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Integration\SimpleScenarioWithDelegation.cs,RunEntirePipelineAndProbePrivatesForMultipleAggregates,The following statement contains a magic number: Assert.That(afterBearingTwoChildren.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Integration,SimpleScenarioWithDelegation,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Integration\SimpleScenarioWithDelegation.cs,RunEntirePipelineAndProbePrivatesForMultipleAggregates,The following statement contains a magic number: Assert.That(afterBearingGrandChild.Count' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.Integration,VariousLoadingMethods,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Integration\VariousLoadingMethods.cs,CanCreateAggregateRoot,The following statement contains a magic number: Assert.That(createdEvents.Count' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,VerifyLazinessOfStreamingApi,The following statement contains a magic number: Action print = () =>              {                  Console.WriteLine("Iterated through {0} events... (ram: {1:0.0})"' Interlocked.Read(ref counter)' Process.GetCurrentProcess().WorkingSet64 / 1000000);              };
Magic Number,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,VerifyLazinessOfStreamingApi,The following statement contains a magic number: TakeTime(string.Format("load {0} events"' eventCount)' () =>              {                  using (var timer = new Timer(5000))                  {                      timer.Elapsed += delegate { print(); };                      timer.Start();                        foreach (var e in _eventStore.Stream())                      {                          Interlocked.Increment(ref counter);                      }                  }              });
Magic Number,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,TestPerformanceOfAggregateRootEventStreaming,The following statement contains a magic number: Action print = () =>              {                  Console.WriteLine("Iterated through {0} events... (ram: {1:0.0})"' Interlocked.Read(ref counter)' Process.GetCurrentProcess().WorkingSet64 / 1000000);              };
Magic Number,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,TestPerformanceOfAggregateRootEventStreaming,The following statement contains a magic number: TakeTime(string.Format("load {0}/{1} = {2} events"' eventCount' rootCount' eventCount/rootCount)' () =>              {                  using (var timer = new Timer(5000))                  {                      timer.Elapsed += delegate { print(); };                      timer.Start();                      var randoom = new Random();                        1000.Times(() =>                      {                          foreach (var e in _eventStore.Load(rootIds[randoom.Next(rootIds.Length)]))                          {                              Interlocked.Increment(ref counter);                          }                      });                  }              });
Magic Number,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStore,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStore.cs,TestPerformanceOfAggregateRootEventStreaming,The following statement contains a magic number: TakeTime(string.Format("load {0}/{1} = {2} events"' eventCount' rootCount' eventCount/rootCount)' () =>              {                  using (var timer = new Timer(5000))                  {                      timer.Elapsed += delegate { print(); };                      timer.Start();                      var randoom = new Random();                        1000.Times(() =>                      {                          foreach (var e in _eventStore.Load(rootIds[randoom.Next(rootIds.Length)]))                          {                              Interlocked.Increment(ref counter);                          }                      });                  }              });
Magic Number,d60.Cirqus.Tests.MongoDb,TestMongoDbEventStoreIndexPerf,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MongoDb\TestMongoDbEventStoreIndexPerf.cs,IndexSpeedTest,The following statement contains a magic number: var aggregateRootIds = Enumerable.Range(0' 1000).Select(i => i.ToString()).ToArray();
Magic Number,d60.Cirqus.Tests.MsSql,TestMsSqlEventStorePerformance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestMsSqlEventStorePerformance.cs,CheckReadPerformance,The following statement contains a magic number: 100.Times(() =>              {                  var readStopwatch = Stopwatch.StartNew();                  var randomAggregateRootId = GetRandomAggregateRootId();                    var events = _eventStore.Load(randomAggregateRootId).ToList();                    measuredSeconds.Add(Tuple.Create(readStopwatch.Elapsed.TotalSeconds' events.Count));              });
Magic Number,d60.Cirqus.Tests.MsSql,TestMsSqlEventStorePerformance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestMsSqlEventStorePerformance.cs,WriteEvents,The following statement contains a magic number: _eventStore.Save(Guid.NewGuid()'                      batch.Select(i => EventData.FromMetadata(GetMeta(sequenceNumbers)' FakeData(1024))));
Magic Number,d60.Cirqus.Tests.MsSql,TestMsSqlEventStorePerformance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestMsSqlEventStorePerformance.cs,WriteEvents,The following statement contains a magic number: Enumerable.Range(0' numberOfEvents).Batch(1000)
Magic Number,d60.Cirqus.Tests.MsSql,TestMsSqlEventStorePerformance,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestMsSqlEventStorePerformance.cs,GetRandomAggregateRootId,The following statement contains a magic number: return string.Format("agg-{0}"' _random.Next(100));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager_AutomaticSchemaRegeneration,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager_AutomaticSchemaRegeneration.cs,AutomaticallyRegeneratesSchemaIfColumnIsMissing,The following statement contains a magic number: Assert.That(view.Events' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.Integer' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.Shorty' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.Long' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.Double' Is.EqualTo(2.3));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.Decimal' Is.EqualTo(2.4m));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.Float' Is.EqualTo(1.2f));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.ListOfInt' Is.EqualTo(new List<int> { 6' 7 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.ListOfInt' Is.EqualTo(new List<int> { 6' 7 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.ListOfDouble' Is.EqualTo(new List<double> { 6' 7 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.ListOfDouble' Is.EqualTo(new List<double> { 6' 7 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.ListOfDecimal' Is.EqualTo(new List<decimal> { 6' 7 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.ListOfDecimal' Is.EqualTo(new List<decimal> { 6' 7 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.HashOfInts' Is.EqualTo(new HashSet<int> { 9' 3 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.HashOfInts' Is.EqualTo(new HashSet<int> { 9' 3 }));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTime' Is.EqualTo(new DateTime(1979' 3' 19' 13' 00' 00' DateTimeKind.Utc)));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTime' Is.EqualTo(new DateTime(1979' 3' 19' 13' 00' 00' DateTimeKind.Utc)));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTime' Is.EqualTo(new DateTime(1979' 3' 19' 13' 00' 00' DateTimeKind.Utc)));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTime' Is.EqualTo(new DateTime(1979' 3' 19' 13' 00' 00' DateTimeKind.Utc)));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTimeOffset' Is.EqualTo(new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1))));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTimeOffset' Is.EqualTo(new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1))));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTimeOffset' Is.EqualTo(new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1))));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.DateTimeOffset' Is.EqualTo(new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1))));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.TimeSpan' Is.EqualTo(new TimeSpan(2' 15' 20)));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.TimeSpan' Is.EqualTo(new TimeSpan(2' 15' 20)));
Magic Number,d60.Cirqus.Tests.MsSql,TestNewMsSqlViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,VerifyDataTypes,The following statement contains a magic number: Assert.That(view.TimeSpan' Is.EqualTo(new TimeSpan(2' 15' 20)));
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: Integer = 2;
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: Shorty = 3;
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: Long = 4;
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: Double = 2.3;
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: Decimal = 2.4m;
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: Float = 1.2f;
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: ListOfInt = new List<int> { 6' 7 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: ListOfInt = new List<int> { 6' 7 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: ListOfDouble = new List<double> { 6' 7 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: ListOfDouble = new List<double> { 6' 7 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: ListOfDecimal = new List<decimal> { 6' 7 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: ListOfDecimal = new List<decimal> { 6' 7 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: HashOfInts = new HashSet<int> { 9' 3 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: HashOfInts = new HashSet<int> { 9' 3 };
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTime = new DateTime(1979' 3' 19' 14' 00' 00' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTime = new DateTime(1979' 3' 19' 14' 00' 00' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTime = new DateTime(1979' 3' 19' 14' 00' 00' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTime = new DateTime(1979' 3' 19' 14' 00' 00' DateTimeKind.Local);
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTimeOffset = new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1));
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTimeOffset = new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1));
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTimeOffset = new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1));
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: DateTimeOffset = new DateTimeOffset(1979' 3' 19' 14' 00' 00' TimeSpan.FromHours(1));
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: TimeSpan = new TimeSpan(2' 15' 20);
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: TimeSpan = new TimeSpan(2' 15' 20);
Magic Number,d60.Cirqus.Tests.MsSql,ViewInstanceWithManyPropertyTypes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\MsSql\TestNewMsSqlViewManager.cs,ViewInstanceWithManyPropertyTypes,The following statement contains a magic number: TimeSpan = new TimeSpan(2' 15' 20);
Magic Number,d60.Cirqus.Tests.Contracts.Serialization,CustomSerilization<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Serialization\TestCustomSerialization.cs,WorksWithCustomSerializer,The following statement contains a magic number: _viewManager.WaitUntilProcessed(lastResult' TimeSpan.FromSeconds(10)).Wait();
Magic Number,d60.Cirqus.Tests.Contracts.Serialization,CustomSerilization<TEventStoreFactory>,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Contracts\Serialization\TestCustomSerialization.cs,WorksWithCustomSerializer,The following statement contains a magic number: Assert.That(view.SecretBizTimes.Length' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestCachingAggregateRootRepositoryDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestCachingAggregateRootRepositoryDecorator.cs,CheckHydrationPerformance,The following statement contains a magic number: TakeTime("Load instance"' () =>              {                  100.Times(() =>                  {                      var realUnitOfWork = new RealUnitOfWork(_cachingAggregateRootRepository' _domainTypeNameMapper);                        if (useCaching)                      {                          _cachingAggregateRootRepository.Get<Root>(aggregateRootId.ToString()' realUnitOfWork);                      }                      else                      {                          _realAggregateRootRepository.Get<Root>(aggregateRootId.ToString()' realUnitOfWork);                      }                  });              });
Magic Number,d60.Cirqus.Tests.Snapshotting,TestCachingAggregateRootRepositoryDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestCachingAggregateRootRepositoryDecorator.cs,GeneratePrettyLongHistory,The following statement contains a magic number: var batchSize = random.Next(10)+1;
Magic Number,d60.Cirqus.Tests.Snapshotting,TestCachingAggregateRootRepositoryDecorator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestCachingAggregateRootRepositoryDecorator.cs,GeneratePrettyLongHistory,The following statement contains a magic number: eventsToSave.Batch(100)
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunCommandProcessingTest,The following statement contains a magic number: viewManager.WaitUntilProcessed(lastResult' TimeSpan.FromMinutes(5)).Wait();
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunCommandProcessingTest,The following statement contains a magic number: var stats = handleTimes                  .GroupBy(l => RoundToSeconds(l' TimeSpan.FromSeconds(10)))                  .Select(g => new DispatchStats(g.Key' TimeSpan.FromSeconds(g.Average(e => e.Elapsed.TotalSeconds))))                  .ToList();
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunCommandProcessingTest,The following statement contains a magic number: var statsLines = string.Join(Environment.NewLine' stats                  .Select(time =>                  {                      var timeString = time.Elapsed.TotalSeconds.ToString("0.00").PadLeft(8);                      var bar = maxTime.TotalSeconds > 0.0000001                          ? new string('='' (int)(100.0 * (time.Elapsed.TotalSeconds / maxTime.TotalSeconds)))                          : "";                        return string.Concat(timeString' ": "' bar);                  }));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunCommandProcessingTest,The following statement contains a magic number: var statsLines = string.Join(Environment.NewLine' stats                  .Select(time =>                  {                      var timeString = time.Elapsed.TotalSeconds.ToString("0.00").PadLeft(8);                      var bar = maxTime.TotalSeconds > 0.0000001                          ? new string('='' (int)(100.0 * (time.Elapsed.TotalSeconds / maxTime.TotalSeconds)))                          : "";                        return string.Concat(timeString' ": "' bar);                  }));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunCommandProcessingTest,The following statement contains a magic number: var statsLines = string.Join(Environment.NewLine' stats                  .Select(time =>                  {                      var timeString = time.Elapsed.TotalSeconds.ToString("0.00").PadLeft(8);                      var bar = maxTime.TotalSeconds > 0.0000001                          ? new string('='' (int)(100.0 * (time.Elapsed.TotalSeconds / maxTime.TotalSeconds)))                          : "";                        return string.Concat(timeString' ": "' bar);                  }));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunEventReplayingTest,The following statement contains a magic number: viewManager.WaitUntilProcessed(lastResult' TimeSpan.FromMinutes(5)).Wait();
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,RunEventReplayingTest,The following statement contains a magic number: var statsLines = string.Join(Environment.NewLine' stats                  .Select(time =>                  {                      var timeString = time.Elapsed.TotalSeconds.ToString("0.00").PadLeft(8);                      var bar = GetBar(time' maxTime);                        return string.Concat(timeString' ": "' bar);                  }));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestNewNewSnapshotting,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestNewNewSnapshotting.cs,GetBar,The following statement contains a magic number: const double maxLength = 100.0;
Magic Number,d60.Cirqus.Tests.Snapshotting,SomeRootWithVariousDifficultThingsGoingOnForIt,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\ChallengingSnapshotSpecimens.cs,SomeRootWithVariousDifficultThingsGoingOnForIt,The following statement contains a magic number: _nestedBadBoys = new List<ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter>                  {                      new ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter(1)'                      new ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter(2)'                      new ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter(3)'                  };
Magic Number,d60.Cirqus.Tests.Snapshotting,SomeRootWithVariousDifficultThingsGoingOnForIt,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\ChallengingSnapshotSpecimens.cs,SomeRootWithVariousDifficultThingsGoingOnForIt,The following statement contains a magic number: _nestedBadBoys = new List<ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter>                  {                      new ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter(1)'                      new ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter(2)'                      new ThisBadBoyIsNestedAndHasPropertyWithPrivateSetter(3)'                  };
Magic Number,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,ProcessOneMoreCommand,The following statement contains a magic number: commandProcessor.ProcessCommand(new CrushItRealGood("id"' 0.1m));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,ProcessOneMoreCommand,The following statement contains a magic number: commandProcessor.ProcessCommand(new CrushItRealGood("id"' 0.1m));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,RunTest,The following statement contains a magic number: TakeTime(string.Format("Processing {0} commands distributed among {1} roots"' numberOfCommands' numberOfRoots)'                  () => Enumerable.Range(0' numberOfCommands)                      .Select(i => new CrushItRealGood(getRandomRootId()' 0.0001m))                      .ToList()                      .ForEach(cmd =>                      {                          commandProcessor.ProcessCommand(cmd);                          Interlocked.Increment(ref processedCommands);                      })'                      timeSpan => Console.WriteLine("{0} commands processed.... "' Interlocked.Read(ref processedCommands)));
Magic Number,d60.Cirqus.Tests.Snapshotting,TestSnapshottingWithFairlyLongHistory,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSnapshottingWithFairlyLongHistory.cs,GetCommandProcessor,The following statement contains a magic number: aggregateRootRepository = new CachingAggregateRootRepositoryDecorator(aggregateRootRepository' new InMemorySnapshotCache { ApproximateMaxNumberOfCacheEntries = 100 }' eventStore' serializer);
Magic Number,d60.Cirqus.Tests.Snapshotting,TestSturdylizer,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSturdylizer.cs,WorksWithThisBadBoyToo,The following statement contains a magic number: var roow = new Root{ClassWithConstructionValidation = new ClassWithConstructionValidation(4)};
Magic Number,d60.Cirqus.Tests.Snapshotting,TestSturdylizer,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Snapshotting\TestSturdylizer.cs,WorksWithThisBadBoyToo,The following statement contains a magic number: Assert.That(roundtrippedRoow.ClassWithConstructionValidation.Value ' Is.EqualTo(4));
Magic Number,d60.Cirqus.Tests.Playground,TestTypeHashCodes,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Playground\TestTypeHashCodes.cs,WhatIsDefaultOfNullableLong,The following statement contains a magic number: var value = false ? 23L : default(long?);
Magic Number,d60.Cirqus.Tests.Testing,TestCirqusTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestCirqusTests.cs,MultipleIdsOfSameType,The following statement contains a magic number: Id<RootA>(2).ShouldBe(id2);
Magic Number,d60.Cirqus.Tests.Testing,TestCirqusTests,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestCirqusTests.cs,MultipleIdsOfSameType,The following statement contains a magic number: Id<RootA>(3).ShouldBe(id3);
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,CanGetSpecialMetaFields,The following statement contains a magic number: var myBirthday = new DateTime(1979' 3' 19' 12' 30' 00' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,CanGetSpecialMetaFields,The following statement contains a magic number: var myBirthday = new DateTime(1979' 3' 19' 12' 30' 00' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,CanGetSpecialMetaFields,The following statement contains a magic number: var myBirthday = new DateTime(1979' 3' 19' 12' 30' 00' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,CanGetSpecialMetaFields,The following statement contains a magic number: var myBirthday = new DateTime(1979' 3' 19' 12' 30' 00' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,CanGetSpecialMetaFields,The following statement contains a magic number: var myBirthday = new DateTime(1979' 3' 19' 12' 30' 00' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,CanGetFullyHydratedAggregateRootOutsideOfUnitOfWork,The following statement contains a magic number: Assert.That(root1.DidStuffCount' Is.EqualTo(2));
Magic Number,d60.Cirqus.Tests.Testing,TestTestContext,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,HydratesEntitiesWithExistingEvents,The following statement contains a magic number: Assert.That(firstInstance.ProcessedEvents' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Testing,SillyViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestTestContext.cs,WaitUntilProcessed,The following statement contains a magic number: await Task.Delay(100);
Magic Number,d60.Cirqus.Tests.Testing,TestEventFormatter,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Testing\TestEventFormatter.cs,RenderProps,The following statement contains a magic number: var @event = new SomeEvent              {                  NoHayBanda = "llorando"'                  OleOgLone = 2              };
Magic Number,d60.Cirqus.Tests.Views.Distribution.Model,SomeRootView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\Distribution\Model\SomeRootView.cs,Handle,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,d60.Cirqus.Tests.Views.Distribution,TestAutomaticViewManagerDistribution,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\Distribution\TestAutomaticViewManagerDistribution.cs,CanAccelerateViewsByPartitioning,The following statement contains a magic number: var lastResult = Enumerable.Range(0' 20)                  .Select(i => firstCommandProcessor.ProcessCommand(new MakeSomeRootDoStuff("bimse")))                  .Last();
Magic Number,d60.Cirqus.Tests.Views.Distribution,TestAutomaticViewManagerDistribution,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\Distribution\TestAutomaticViewManagerDistribution.cs,CanAccelerateViewsByPartitioning,The following statement contains a magic number: var goal = TimeSpan.FromSeconds(45);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcherWithOptimization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcherWithOptimization.cs,DoSetUp,The following statement contains a magic number: _commandProcessor = CommandProcessor.With()                  .Logging(l => l.UseConsole(minLevel: Logger.Level.Warn))                  .EventStore(e => e.UseMongoDb(_mongoDatabase' "Events"))                  .EventDispatcher(e => e.Register<IEventDispatcher>(r =>                  {                      var repository = r.Get<IAggregateRootRepository>();                      var serializer = r.Get<IDomainEventSerializer>();                      var typeMapper = r.Get<IDomainTypeNameMapper>();                        _thisBadBoyEnsuresThatTheEventStoreIsNotUsed = new ThrowingEventStore();                        _dispatcher = new ViewManagerEventDispatcher(repository' _thisBadBoyEnsuresThatTheEventStoreIsNotUsed' serializer' typeMapper)                      {                          AutomaticCatchUpInterval = TimeSpan.FromHours(24) //<effectively disable automatic catchup                      };                        return _dispatcher;                  }))                  .Create();
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcherWithOptimization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcherWithOptimization.cs,CanDeliverDomainEventsDirectlyWhenEverythingAlignsPerfectly,The following statement contains a magic number: 10.Times(() => result = _commandProcessor.ProcessCommand(new LeCommand("someId")));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcherWithOptimization,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcherWithOptimization.cs,CanDeliverDomainEventsDirectlyWhenEverythingAlignsPerfectly,The following statement contains a magic number: testViewManager.WaitUntilProcessed(result' TimeSpan.FromSeconds(3)).Wait();
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManager,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcherWithOptimization.cs,WaitUntilProcessed,The following statement contains a magic number: await Task.Delay(100);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,AutomaticallyReplaysEventsIfViewIsPurged,The following statement contains a magic number: Enumerable.Range(0' numberOfCommands - 1)                  .ToList()                  .ForEach(i => _commandProcessor.ProcessCommand(new BitePotato("someid1"' .01m)));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,AutomaticallyReplaysEventsIfViewIsPurged,The following statement contains a magic number: var lastResult = _commandProcessor.ProcessCommand(new BitePotato("someid2"' .01m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,AutomaticallyReplaysEventsIfViewIsPurged,The following statement contains a magic number: allPotatoesView.WaitUntilProcessed(lastResult' TimeSpan.FromSeconds(2)).Wait();
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,AutomaticallyReplaysEventsIfViewIsPurged,The following statement contains a magic number: allPotatoesView.WaitUntilProcessed(lastResult' TimeSpan.FromSeconds(4)).Wait();
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato1"' .1m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato1"' .1m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato1"' .1m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato1"' .1m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following statement contains a magic number: switch (blockOption)              {                  case BlockOption.BlockOnViewManager:                      Console.WriteLine("Waiting for {0} on the view..."' result.GetNewPosition());                      slowView.WaitUntilProcessed(result' TimeSpan.FromSeconds(2)).Wait();                      break;                    case BlockOption.BlockOnEventDispatcher:                      Console.WriteLine("Waiting for {0} on the dispatcher..."' result.GetNewPosition());                      _dispatcher.WaitUntilProcessed<SlowView>(result' TimeSpan.FromSeconds(2)).Wait();                      break;              }
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following statement contains a magic number: switch (blockOption)              {                  case BlockOption.BlockOnViewManager:                      Console.WriteLine("Waiting for {0} on the view..."' result.GetNewPosition());                      slowView.WaitUntilProcessed(result' TimeSpan.FromSeconds(2)).Wait();                      break;                    case BlockOption.BlockOnEventDispatcher:                      Console.WriteLine("Waiting for {0} on the dispatcher..."' result.GetNewPosition());                      _dispatcher.WaitUntilProcessed<SlowView>(result' TimeSpan.FromSeconds(2)).Wait();                      break;              }
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var firstPointInTime = new DateTime(1979' 3' 1' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var firstPointInTime = new DateTime(1979' 3' 1' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var firstPointInTime = new DateTime(1979' 3' 1' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato1"' 0.5m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato2"' 0.3m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato2"' 0.3m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato3"' 0.3m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var nextPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var nextPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var nextPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var nextPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato1"' 0.5m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato2"' 0.5m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var lastPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var lastPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var lastPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: var lastPointInTime = new DateTime(1981' 6' 9' 12' 0' 0' DateTimeKind.Utc);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: _commandProcessor.ProcessCommand(new BitePotato("potato3"' 0.8m));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,BasicDispatchOfSomeEvents,The following statement contains a magic number: Assert.That(allPotatoes.NamesOfPotatoes.Count' Is.EqualTo(3));
Magic Number,d60.Cirqus.Tests.Views.NewViewManager.Views,SlowView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\Views\SlowView.cs,Handle,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,d60.Cirqus.Tests.Views.NewViewManager.Views,SlowView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\Views\SlowView.cs,Handle,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,d60.Cirqus.Tests.Views.TestAggregateRootView,AggregateRootViewWorks,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestAggregateRootView\AggregateRootViewWorks.cs,YeahItWorks,The following statement contains a magic number: var lastResult = Enumerable.Range(0'40)                  .Select(i => _commandProcessor.ProcessCommand(new IncrementNumberCommand("id1")))                  .Last();
Magic Number,d60.Cirqus.Tests.Views.TestAggregateRootView,AggregateRootViewWorks,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestAggregateRootView\AggregateRootViewWorks.cs,YeahItWorks,The following statement contains a magic number: await _waitHandler.WaitForAll(lastResult' TimeSpan.FromSeconds(10));
Magic Number,d60.Cirqus.Tests.Views.TestAggregateRootView,AggregateRootViewWorks,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestAggregateRootView\AggregateRootViewWorks.cs,YeahItWorks,The following statement contains a magic number: Assert.That(view.Counter' Is.EqualTo(40));
Magic Number,d60.Cirqus.Tests.Views,TestDependentViews,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,YeyItWorks,The following statement contains a magic number: var result = Enumerable.Range(0' 100)                  .Select(i => commandProcessor.ProcessCommand(new DoStuff("test"' "hej meddig min ven " + i)))                  .Last();
Magic Number,d60.Cirqus.Tests.Views,TestDependentViews,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,YeyItWorks,The following statement contains a magic number: await waitHandle.WaitForAll(result' TimeSpan.FromSeconds(5));
Magic Number,d60.Cirqus.Tests.Views,TestDependentViews,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,YeyItWorks,The following statement contains a magic number: Assert.That(firstViewInstance.Count' Is.EqualTo(100));
Magic Number,d60.Cirqus.Tests.Views,TestDependentViews,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,YeyItWorks,The following statement contains a magic number: Assert.That(secondViewInstance.Count' Is.EqualTo(500));
Magic Number,d60.Cirqus.Tests.Views,TestDependentViews,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,YeyItWorks,The following statement contains a magic number: await specialWaitHandle.WaitForAll(result' TimeSpan.FromSeconds(5));
Magic Number,d60.Cirqus.Tests.Views,TestDependentViews,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,YeyItWorks,The following statement contains a magic number: Assert.That(heyPercentageCalculator.HeyPercentage' Is.EqualTo(20));
Magic Number,d60.Cirqus.Tests.Views,HeyPercentageCalculator,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestDependentViews.cs,Handle,The following statement contains a magic number: HeyPercentage = 100M*heys.Count/words.Count;
Magic Number,d60.Cirqus.Tests.Views,TestLoadAggregatesFromView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestLoadAggregatesFromView.cs,ExceptionIsThrownIfAggregateRootDoesNotExist,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,d60.Cirqus.Tests.Views,TestLoadAggregatesFromView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestLoadAggregatesFromView.cs,ExceptionIsThrownIfAggregateRootEmitsFromView,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,d60.Cirqus.Tests.Views,TestLoadAggregatesFromView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestLoadAggregatesFromView.cs,CanAccessAggregateRootInView,The following statement contains a magic number: _eventDispatcher.WaitUntilProcessed(lastResult' TimeSpan.FromSeconds(3)).Wait();
Magic Number,d60.Cirqus.Tests.Views,TestLoadAggregatesFromView,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\TestLoadAggregatesFromView.cs,CanAccessAggregateRootInViewWithImplicitDeductionOfGlobalSequenceNumberInView,The following statement contains a magic number: _eventDispatcher.WaitUntilProcessed(lastResult' TimeSpan.FromSeconds(3)).Wait();
Missing Default,d60.Cirqus.Tests.Views.NewViewManager,TestViewManagerEventDispatcher,D:\research\architectureSmells\repos\d60_Cirqus\d60.Cirqus.Tests\Views\NewViewManager\TestViewManagerEventDispatcher.cs,CanBlockUntilViewIsUpdated,The following switch statement is missing a default case: switch (blockOption)              {                  case BlockOption.BlockOnViewManager:                      Console.WriteLine("Waiting for {0} on the view..."' result.GetNewPosition());                      slowView.WaitUntilProcessed(result' TimeSpan.FromSeconds(2)).Wait();                      break;                    case BlockOption.BlockOnEventDispatcher:                      Console.WriteLine("Waiting for {0} on the dispatcher..."' result.GetNewPosition());                      _dispatcher.WaitUntilProcessed<SlowView>(result' TimeSpan.FromSeconds(2)).Wait();                      break;              }
