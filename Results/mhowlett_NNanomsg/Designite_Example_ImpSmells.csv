Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Example,Program,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,Example,Pair,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Pair.cs,SendReceive,The length of the statement  "            NanomsgSocketOptions.SetTimespan(s.SocketID' SocketOptionLevel.Default' SocketOption.RCVTIMEO' TimeSpan.FromMilliseconds(100)); " is 127.
Magic Number,Example,Pair,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Pair.cs,SendReceive,The following statement contains a magic number: NanomsgSocketOptions.SetTimespan(s.SocketID' SocketOptionLevel.Default' SocketOption.RCVTIMEO' TimeSpan.FromMilliseconds(100));
Magic Number,Example,Pair,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Pair.cs,Execute,The following statement contains a magic number: switch (args[1])              {                  case "node0": Node0(args[2]);                      break;                  case "node1": Node1(args[2]);                      break;                  default:                      Console.WriteLine("Usage: ...");                      break;              }
Magic Number,Example,Pair,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Pair.cs,Execute,The following statement contains a magic number: switch (args[1])              {                  case "node0": Node0(args[2]);                      break;                  case "node1": Node1(args[2]);                      break;                  default:                      Console.WriteLine("Usage: ...");                      break;              }
Magic Number,Example,PubSub,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\PubSub.cs,Execute,The following statement contains a magic number: values.Length != 3
Magic Number,Example,PubSub,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\PubSub.cs,Execute,The following statement contains a magic number: switch (values[1].Trim().ToLower() )  			{  				case "publisher":  					using (var s = new PublishSocket())  					{  						s.Bind(values[2]);  						int i = 0;  						while(true)  						{  							byte[] b = Encoding.ASCII.GetBytes("Publish Counter is " + ++i ) ;  							s.Send(b);							  							Console.Write(".");  							Thread.Sleep(2000);  						}  					}  					break;  				case "subscriber":  					using (var s = new SubscribeSocket())  					{						  						//Needs to match the first portion of the message being received.  						s.Subscribe("Publish Counter");  						s.Connect(values[2]);  						while(true)  						{  							byte[] b = s.Receive();  							if( b != null )  							{  								Console.WriteLine("Received: " + Encoding.ASCII.GetString(b));  							} else  							{  								Console.WriteLine("x");  							}  						}  					}  					break;  			}
Magic Number,Example,PubSub,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\PubSub.cs,Execute,The following statement contains a magic number: switch (values[1].Trim().ToLower() )  			{  				case "publisher":  					using (var s = new PublishSocket())  					{  						s.Bind(values[2]);  						int i = 0;  						while(true)  						{  							byte[] b = Encoding.ASCII.GetBytes("Publish Counter is " + ++i ) ;  							s.Send(b);							  							Console.Write(".");  							Thread.Sleep(2000);  						}  					}  					break;  				case "subscriber":  					using (var s = new SubscribeSocket())  					{						  						//Needs to match the first portion of the message being received.  						s.Subscribe("Publish Counter");  						s.Connect(values[2]);  						while(true)  						{  							byte[] b = s.Receive();  							if( b != null )  							{  								Console.WriteLine("Received: " + Encoding.ASCII.GetString(b));  							} else  							{  								Console.WriteLine("x");  							}  						}  					}  					break;  			}
Magic Number,Example,PubSub,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\PubSub.cs,Execute,The following statement contains a magic number: switch (values[1].Trim().ToLower() )  			{  				case "publisher":  					using (var s = new PublishSocket())  					{  						s.Bind(values[2]);  						int i = 0;  						while(true)  						{  							byte[] b = Encoding.ASCII.GetBytes("Publish Counter is " + ++i ) ;  							s.Send(b);							  							Console.Write(".");  							Thread.Sleep(2000);  						}  					}  					break;  				case "subscriber":  					using (var s = new SubscribeSocket())  					{						  						//Needs to match the first portion of the message being received.  						s.Subscribe("Publish Counter");  						s.Connect(values[2]);  						while(true)  						{  							byte[] b = s.Receive();  							if( b != null )  							{  								Console.WriteLine("Received: " + Encoding.ASCII.GetString(b));  							} else  							{  								Console.WriteLine("x");  							}  						}  					}  					break;  			}
Magic Number,Example,ReqRep,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\ReqRep.cs,Execute,The following statement contains a magic number: switch (args[1])              {                  case "node0": Node0(args[2]);                      break;                  case "node1": Node1(args[2]);                      break;                  default:                      Console.WriteLine("Usage: ...");                      break;              }
Magic Number,Example,ReqRep,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\ReqRep.cs,Execute,The following statement contains a magic number: switch (args[1])              {                  case "node0": Node0(args[2]);                      break;                  case "node1": Node1(args[2]);                      break;                  default:                      Console.WriteLine("Usage: ...");                      break;              }
Magic Number,Example,Survey,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Survey.cs,Surveyor,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Example,Survey,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Survey.cs,Execute,The following statement contains a magic number: args.Length != 3
Magic Number,Example,Survey,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Survey.cs,Execute,The following statement contains a magic number: switch (args[1].ToLower())  			{  				case "surveyor":  					Surveyor(args[2]);  					break;  				case "respondant":  					Respondant(args[2] );  					break;  				default:  					printUsage();  					break;  			}
Magic Number,Example,Survey,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\Survey.cs,Execute,The following statement contains a magic number: switch (args[1].ToLower())  			{  				case "surveyor":  					Surveyor(args[2]);  					break;  				case "respondant":  					Respondant(args[2] );  					break;  				default:  					printUsage();  					break;  			}
Missing Default,Example,PubSub,D:\research\architectureSmells\repos\mhowlett_NNanomsg\Example\PubSub.cs,Execute,The following switch statement is missing a default case: switch (values[1].Trim().ToLower() )  			{  				case "publisher":  					using (var s = new PublishSocket())  					{  						s.Bind(values[2]);  						int i = 0;  						while(true)  						{  							byte[] b = Encoding.ASCII.GetBytes("Publish Counter is " + ++i ) ;  							s.Send(b);							  							Console.Write(".");  							Thread.Sleep(2000);  						}  					}  					break;  				case "subscriber":  					using (var s = new SubscribeSocket())  					{						  						//Needs to match the first portion of the message being received.  						s.Subscribe("Publish Counter");  						s.Connect(values[2]);  						while(true)  						{  							byte[] b = s.Receive();  							if( b != null )  							{  								Console.WriteLine("Received: " + Encoding.ASCII.GetString(b));  							} else  							{  								Console.WriteLine("x");  							}  						}  					}  					break;  			}
