Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The method has 8 parameters.
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: using (new DisposableTimer ("adding charts")) {  	xs = Enumerable.Range (0' count).Select (i => (double)i).ToArray ();  	y1 = Enumerable.Range (0' count).Select (i => 1 + rnd.NextDouble ()).ToArray ();  	y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  	y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  	y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  	y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  	var xds = xs.AsXDataSource ();  	var ds1 = xds.Join (y1.AsYDataSource ());  	var ds2 = xds.Join (y2.AsYDataSource ());  	var ds3 = xds.Join (y3.AsYDataSource ());  	var ds4 = xds.Join (y4.AsYDataSource ());  	var ds5 = xds.Join (y5.AsYDataSource ());  	plotter.Visible = new DataRect (-100' 0' 1200' 7);  	if (!useFilters) {  		plotter.Children.Add (new LineGraph {  			DataSource = ds1'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds2'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds3'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds4'  			Stroke = ColorHelper.RandomBrush  		});  		plotter.Children.Add (new LineGraph {  			DataSource = ds5'  			Stroke = ColorHelper.RandomBrush  		});  	}  	else {  		plotter.AddLineGraph (ds1);  		plotter.AddLineGraph (ds2);  		plotter.AddLineGraph (ds3);  		plotter.AddLineGraph (ds4);  		plotter.AddLineGraph (ds5);  	}  }  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: y2 = Enumerable.Range (0' count).Select (i => 2 + rnd.NextDouble ()).ToArray ();  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: y3 = Enumerable.Range (0' count).Select (i => 3 + rnd.NextDouble ()).ToArray ();  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: y4 = Enumerable.Range (0' count).Select (i => 4 + rnd.NextDouble ()).ToArray ();  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: y5 = Enumerable.Range (0' count).Select (i => 5 + rnd.NextDouble ()).ToArray ();  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: plotter.Visible = new DataRect (-100' 0' 1200' 7);  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: plotter.Visible = new DataRect (-100' 0' 1200' 7);  
Magic Number,_5x1000Charts,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Repros\5x1000Charts\Window1.xaml.cs,AddChartsBtn_Click,The following statement contains a magic number: plotter.Visible = new DataRect (-100' 0' 1200' 7);  
