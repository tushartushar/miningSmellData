Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotServer,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotServer.cs,MandelbrotServer,The following statement contains a magic number: MaxLevel = 31;  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotServer,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotServer.cs,MandelbrotServer,The following statement contains a magic number: manager = new LimitedConcurrencyLevelTaskScheduler (Environment.ProcessorCount * 10);  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetNumIterations,The following statement contains a magic number: for (int i = 0; i < MaxIterations; i++) {  	double t_re = prev_re - prev_im + re;  	double t_im = 2 * z_re * z_im + im;  	z_re = t_re;  	z_im = t_im;  	prev_re = z_re * z_re;  	prev_im = z_im * z_im;  	if (prev_re + prev_im > bailOutSquare)  		return i;  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: if (n < MaxIterations) {  	double t = n / (double)MaxIterations;  	return Palette.GetColor (t).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  	//return Color.FromArgb(255' (byte)(255 * Math.Sqrt(1 - t))' 0' (byte)Math.Sqrt(t)).ToArgb();  }  else {  	return Colors.Black.ToArgb ();  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: if (n < MaxIterations) {  	double t = n / (double)MaxIterations;  	return Palette.GetColor (t).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  	//return Color.FromArgb(255' (byte)(255 * Math.Sqrt(1 - t))' 0' (byte)Math.Sqrt(t)).ToArgb();  }  else {  	return Colors.Black.ToArgb ();  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: if (n < MaxIterations) {  	double t = n / (double)MaxIterations;  	return Palette.GetColor (t).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  	//return Color.FromArgb(255' (byte)(255 * Math.Sqrt(1 - t))' 0' (byte)Math.Sqrt(t)).ToArgb();  }  else {  	return Colors.Black.ToArgb ();  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: if (n < MaxIterations) {  	double t = n / (double)MaxIterations;  	return Palette.GetColor (t).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  	//return Color.FromArgb(255' (byte)(255 * Math.Sqrt(1 - t))' 0' (byte)Math.Sqrt(t)).ToArgb();  }  else {  	return Colors.Black.ToArgb ();  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: if (n < MaxIterations) {  	double t = n / (double)MaxIterations;  	return Palette.GetColor (t).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  	//return Color.FromArgb(255' (byte)(255 * Math.Sqrt(1 - t))' 0' (byte)Math.Sqrt(t)).ToArgb();  }  else {  	return Colors.Black.ToArgb ();  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: if (n < MaxIterations) {  	double t = n / (double)MaxIterations;  	return Palette.GetColor (t).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  	return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  	//return Color.FromArgb(255' (byte)(255 * Math.Sqrt(1 - t))' 0' (byte)Math.Sqrt(t)).ToArgb();  }  else {  	return Colors.Black.ToArgb ();  }  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)(255 * t)' (byte)(255 * (1 - t))' (byte)(255 * (t))).ToArgb ();  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  
Magic Number,Microsoft.Research.DynamicDataDisplay.Fractals,MandelbrotSet,C:\repos\dotnetprojects_DynamicDataDisplay\src\DynamicDataDisplay.Fractals\MandelbrotSet.cs,GetColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)(255 * Math.Sqrt (1 - t))' 0' (byte)Math.Sqrt (t)).ToArgb ();  
