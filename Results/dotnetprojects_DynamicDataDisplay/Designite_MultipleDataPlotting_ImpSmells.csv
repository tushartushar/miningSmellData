Implementation smell,Namespace,Class,File,Method,Description
Magic Number,MultipleDataPlotting,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\Window1.xaml.cs,Window1,The following statement contains a magic number: for (int ix = 0; ix < colNum; ix++) {  	for (int iy = 0; iy < rowNum; iy++) {  		ChartPlotter plotter = new ChartPlotter ();  		plotter.MainHorizontalAxis = null;  		plotter.MainVerticalAxis = null;  		plotter.BorderThickness = new Thickness (1);  		Grid.SetColumn (plotter' ix);  		Grid.SetRow (plotter' iy);  		content.Children.Add (plotter);  		plotter.LegendVisibility = Visibility.Hidden;  		plotter.Legend.AutoShowAndHide = false;  		AnimatedDataSource ds = new AnimatedDataSource ();  		data.Add (ds);  		LineGraph line = new LineGraph (ds.DataSource);  		line.Stroke = BrushHelper.CreateBrushWithRandomHue ();  		line.StrokeThickness = 2;  		line.Filters.Add (new FrequencyFilter ());  		plotter.Children.Add (line);  	}  }  
Magic Number,MultipleDataPlotting,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\Window1.xaml.cs,Window1,The following statement contains a magic number: for (int iy = 0; iy < rowNum; iy++) {  	ChartPlotter plotter = new ChartPlotter ();  	plotter.MainHorizontalAxis = null;  	plotter.MainVerticalAxis = null;  	plotter.BorderThickness = new Thickness (1);  	Grid.SetColumn (plotter' ix);  	Grid.SetRow (plotter' iy);  	content.Children.Add (plotter);  	plotter.LegendVisibility = Visibility.Hidden;  	plotter.Legend.AutoShowAndHide = false;  	AnimatedDataSource ds = new AnimatedDataSource ();  	data.Add (ds);  	LineGraph line = new LineGraph (ds.DataSource);  	line.Stroke = BrushHelper.CreateBrushWithRandomHue ();  	line.StrokeThickness = 2;  	line.Filters.Add (new FrequencyFilter ());  	plotter.Children.Add (line);  }  
Magic Number,MultipleDataPlotting,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\Window1.xaml.cs,Window1,The following statement contains a magic number: line.StrokeThickness = 2;  
Magic Number,MultipleDataPlotting,AnimatedDataSource,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\AnimatedDataSource.cs,Update,The following statement contains a magic number: for (int i = 0; i < x.Length; i++) {  	x [i] = 2 * Math.PI * i / x.Length + phase;  	y [i] = Math.Sin (x [i]);  }  
Magic Number,MultipleDataPlotting,AnimatedDataSource,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\AnimatedDataSource.cs,Update,The following statement contains a magic number: x [i] = 2 * Math.PI * i / x.Length + phase;  
Magic Number,MultipleDataPlotting,AnimatedDataSource,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\AnimatedDataSource.cs,Update,The following statement contains a magic number: phase += 0.03;  
Magic Number,MultipleDataPlotting,AnimatedDataSource,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\MultipleDataPlotting\AnimatedDataSource.cs,AnimatedDataSource,The following statement contains a magic number: phase = rnd.NextDouble () * 3;  
