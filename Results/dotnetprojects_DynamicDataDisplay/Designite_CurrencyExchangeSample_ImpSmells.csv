Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CurrencyExchangeSample,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Samples\v0.2\CurrencyExchangeSample\Window1.xaml.cs,Window1_Loaded,The following statement contains a magic number: plotter.AddLineGraph (CreateCurrencyDataSource (gbp)' colors [2]' 1' "RUB / £");  
Magic Number,CurrencyExchangeSample,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Samples\v0.2\CurrencyExchangeSample\Window1.xaml.cs,Window1_Loaded,The following statement contains a magic number: plotter.AddLineGraph (CreateCurrencyDataSource (jpy)' colors [3]' 1' "RUB / ¥");  
Magic Number,CurrencyExchangeSample,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Samples\v0.2\CurrencyExchangeSample\Window1.xaml.cs,LoadCurrencyRates,The following statement contains a magic number: using (Stream resourceStream = assembly.GetManifestResourceStream ("CurrencyExchangeSample." + fileName)) {  	using (StreamReader reader = new StreamReader (resourceStream)) {  		var strings = reader.ReadToEnd ().Split (new char[] {  			'\n'  		}' StringSplitOptions.RemoveEmptyEntries);  		var res = new List<CurrencyInfo> (strings.Length - 1);  		for (int i = 1; i < strings.Length; i++) {  			string line = strings [i];  			string[] subLines = line.Split ('\t');  			DateTime date = DateTime.Parse (subLines [1]);  			double rate = Double.Parse (subLines [5]' CultureInfo.InvariantCulture);  			res.Add (new CurrencyInfo {  				Date = date'  				Rate = rate  			});  		}  		return res;  	}  }  
Magic Number,CurrencyExchangeSample,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Samples\v0.2\CurrencyExchangeSample\Window1.xaml.cs,LoadCurrencyRates,The following statement contains a magic number: using (StreamReader reader = new StreamReader (resourceStream)) {  	var strings = reader.ReadToEnd ().Split (new char[] {  		'\n'  	}' StringSplitOptions.RemoveEmptyEntries);  	var res = new List<CurrencyInfo> (strings.Length - 1);  	for (int i = 1; i < strings.Length; i++) {  		string line = strings [i];  		string[] subLines = line.Split ('\t');  		DateTime date = DateTime.Parse (subLines [1]);  		double rate = Double.Parse (subLines [5]' CultureInfo.InvariantCulture);  		res.Add (new CurrencyInfo {  			Date = date'  			Rate = rate  		});  	}  	return res;  }  
Magic Number,CurrencyExchangeSample,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\Samples\v0.2\CurrencyExchangeSample\Window1.xaml.cs,LoadCurrencyRates,The following statement contains a magic number: for (int i = 1; i < strings.Length; i++) {  	string line = strings [i];  	string[] subLines = line.Split ('\t');  	DateTime date = DateTime.Parse (subLines [1]);  	double rate = Double.Parse (subLines [5]' CultureInfo.InvariantCulture);  	res.Add (new CurrencyInfo {  		Date = date'  		Rate = rate  	});  }  
