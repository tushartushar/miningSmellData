Implementation smell,Namespace,Class,File,Method,Description
Magic Number,AxesApp,Window1,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\Window1.xaml.cs,Window1,The following statement contains a magic number: genericPlotter.DataRect = new Microsoft.Research.DynamicDataDisplay.GenericRect<DateTime' double> (DateTime.Now' 0' DateTime.Now.AddMinutes (60)' 1);  
Magic Number,AxesApp,FiveMinutesMaxTicksProvider,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\FiveMinutesMaxTicksProvider.cs,ModifyTicks,The following statement contains a magic number: if (info.Equals (DifferenceIn.Minute)) {  	var result = ticks.Where (t => t.Minute % 5 == 0).ToArray ();  	var largerResult = new DateTime[result.Length + 2];  	largerResult [0] = result [0].AddMinutes (-5);  	result.CopyTo (largerResult' 1);  	largerResult [largerResult.Length - 1] = result [result.Length - 1].AddMinutes (5);  	return largerResult;  }  
Magic Number,AxesApp,FiveMinutesMaxTicksProvider,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\FiveMinutesMaxTicksProvider.cs,ModifyTicks,The following statement contains a magic number: if (info.Equals (DifferenceIn.Minute)) {  	var result = ticks.Where (t => t.Minute % 5 == 0).ToArray ();  	var largerResult = new DateTime[result.Length + 2];  	largerResult [0] = result [0].AddMinutes (-5);  	result.CopyTo (largerResult' 1);  	largerResult [largerResult.Length - 1] = result [result.Length - 1].AddMinutes (5);  	return largerResult;  }  
Magic Number,AxesApp,FiveMinutesMaxTicksProvider,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\FiveMinutesMaxTicksProvider.cs,ModifyTicks,The following statement contains a magic number: if (info.Equals (DifferenceIn.Minute)) {  	var result = ticks.Where (t => t.Minute % 5 == 0).ToArray ();  	var largerResult = new DateTime[result.Length + 2];  	largerResult [0] = result [0].AddMinutes (-5);  	result.CopyTo (largerResult' 1);  	largerResult [largerResult.Length - 1] = result [result.Length - 1].AddMinutes (5);  	return largerResult;  }  
Magic Number,AxesApp,FiveMinutesMaxTicksProvider,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\FiveMinutesMaxTicksProvider.cs,ModifyTicks,The following statement contains a magic number: if (info.Equals (DifferenceIn.Minute)) {  	var result = ticks.Where (t => t.Minute % 5 == 0).ToArray ();  	var largerResult = new DateTime[result.Length + 2];  	largerResult [0] = result [0].AddMinutes (-5);  	result.CopyTo (largerResult' 1);  	largerResult [largerResult.Length - 1] = result [result.Length - 1].AddMinutes (5);  	return largerResult;  }  
Magic Number,AxesApp,FiveMinutesMaxTicksProvider,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\FiveMinutesMaxTicksProvider.cs,ModifyTicks,The following statement contains a magic number: largerResult [0] = result [0].AddMinutes (-5);  
Magic Number,AxesApp,FiveMinutesMaxTicksProvider,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\AxesApp\FiveMinutesMaxTicksProvider.cs,ModifyTicks,The following statement contains a magic number: largerResult [largerResult.Length - 1] = result [result.Length - 1].AddMinutes (5);  
