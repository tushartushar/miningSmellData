Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The method has 7 parameters.
Long Statement,NewMarkersSample,CompositeDSPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\CompositeDSPage.xaml.cs,Window_Loaded,The length of the statement  "	ds = new CompositeDataSource (new DataSourcePartCollection (new DataSourcePart (xs' "X")' new DataSourcePart (ys' "Y"))); " is 121.
Long Statement,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,BuildData,The length of the statement  "	ObservableCollectionWrapper<Point> collection = new ObservableCollectionWrapper<Point> (new ObservableCollection<Point> ()); " is 124.
Long Statement,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The length of the statement  "		collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime)))); " is 147.
Long Statement,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The length of the statement  "	chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.RenderTransformProperty' p => new RotateTransform (120 * Math.Atan2 (p.Y' p.X))); " is 145.
Long Statement,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The length of the statement  "	genericPlotter.ViewportRect = new GenericRect<DateTime' double> (DateTime.Now.AddDays (-2)' -2.5' DateTime.Now.AddDays (60)' 2.5); " is 130.
Magic Number,NewMarkersSample,Segment,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\Segment.cs,LoadSegments,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	Segment seg = new Segment {  		X = i'  		YMin = Math.Sin (i * coeff)'  		YMax = Math.Sin (i * coeff) + 3  	};  	segments [i] = seg;  }  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.X = i + 0.2 * Math.Sin (i + speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartDataTriggerPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChartDataTriggerPage.xaml.cs,Page_Loaded,The following statement contains a magic number: segments = Segment.LoadSegments (10);  
Magic Number,NewMarkersSample.Pages,DateTimeRectanglesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DateTimeRectangles\DateTimeRectanglesPage.xaml.cs,CreateRandomRect,The following statement contains a magic number: rect.Start = lastFinish.AddMinutes (rnd.Next (2' 4));  
Magic Number,NewMarkersSample.Pages,DateTimeRectanglesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DateTimeRectangles\DateTimeRectanglesPage.xaml.cs,CreateRandomRect,The following statement contains a magic number: rect.Start = lastFinish.AddMinutes (rnd.Next (2' 4));  
Magic Number,NewMarkersSample.Pages,DateTimeRectanglesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DateTimeRectangles\DateTimeRectanglesPage.xaml.cs,CreateRandomRect,The following statement contains a magic number: rect.Duration = TimeSpan.FromMinutes (rnd.Next (4' 8));  
Magic Number,NewMarkersSample.Pages,DateTimeRectanglesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DateTimeRectangles\DateTimeRectanglesPage.xaml.cs,CreateRandomRect,The following statement contains a magic number: rect.Duration = TimeSpan.FromMinutes (rnd.Next (4' 8));  
Magic Number,NewMarkersSample.Pages,DateTimeRectanglesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DateTimeRectangles\DateTimeRectanglesPage.xaml.cs,CreateRandomRect,The following statement contains a magic number: rect.Height = 0.5 + rnd.NextDouble ();  
Magic Number,NewMarkersSample.Pages,ColumnChartSample,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ColumnChartSample.xaml.cs,addBtn_Click,The following statement contains a magic number: values.Add (rnd.NextDouble () + 0.2);  
Magic Number,NewMarkersSample.Pages,ColumnChartSample,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ColumnChartSample.xaml.cs,insertBtn_Click,The following statement contains a magic number: values.Insert (values.Count - 3' rnd.NextDouble () + 0.2);  
Magic Number,NewMarkersSample.Pages,ColumnChartSample,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ColumnChartSample.xaml.cs,insertBtn_Click,The following statement contains a magic number: values.Insert (values.Count - 3' rnd.NextDouble () + 0.2);  
Magic Number,NewMarkersSample.Pages,ConditionalBindingPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ConditionalBindingPage.xaml.cs,Page_Loaded,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	double x = i * 0.02 - 1;  	double y = Math.Sin (x * 10);  	Point p = new Point (x' y);  	pts [i] = p;  }  
Magic Number,NewMarkersSample.Pages,ConditionalBindingPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ConditionalBindingPage.xaml.cs,Page_Loaded,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	double x = i * 0.02 - 1;  	double y = Math.Sin (x * 10);  	Point p = new Point (x' y);  	pts [i] = p;  }  
Magic Number,NewMarkersSample.Pages,ConditionalBindingPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ConditionalBindingPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	Point p = pts [i];  	var x = p.X;  	p.Y = Math.Sin ((x + dt * 0.00005) * 10);  	pts [i] = p;  }  
Magic Number,NewMarkersSample.Pages,ConditionalBindingPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ConditionalBindingPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	Point p = pts [i];  	var x = p.X;  	p.Y = Math.Sin ((x + dt * 0.00005) * 10);  	pts [i] = p;  }  
Magic Number,NewMarkersSample.Pages,ConditionalBindingPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ConditionalBindingPage.xaml.cs,timer_Tick,The following statement contains a magic number: p.Y = Math.Sin ((x + dt * 0.00005) * 10);  
Magic Number,NewMarkersSample.Pages,ConditionalBindingPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\ConditionalBindingPage.xaml.cs,timer_Tick,The following statement contains a magic number: p.Y = Math.Sin ((x + dt * 0.00005) * 10);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart2.ItemsSource = BuildData (2);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart3.ItemsSource = BuildData (3);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart4.ItemsSource = BuildData (4);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart5.ItemsSource = BuildData (5);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart6.ItemsSource = BuildData (6);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart7.ItemsSource = BuildData (7);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,OnLoaded,The following statement contains a magic number: chart8.ItemsSource = BuildData (8);  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	double x = i / (double)count;  	collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  }  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	double x = i / (double)count;  	collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  }  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	double x = i / (double)count;  	collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  }  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	double x = i / (double)count;  	collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  }  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  
Magic Number,NewMarkersSample.Pages,DifferentBuildInMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\DifferentBuildInMarkersPage.xaml.cs,FillCollection,The following statement contains a magic number: collection.Add (new Point (x' 0.1 * dataSourceNumber + 0.06 * Math.Sin (10 * x + Math.Sqrt (dataSourceNumber + 1) * 0.0005 * (time - startTime))));  
Magic Number,NewMarkersSample.Pages,EndlessRandomValuesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\EndlessRandomValuesPage.xaml.cs,Page_Loaded,The following statement contains a magic number: plotter.Visible = new DataRect (0' -0.1' 10000' 1.2);  
Magic Number,NewMarkersSample.Pages,EndlessRandomValuesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\EndlessRandomValuesPage.xaml.cs,Page_Loaded,The following statement contains a magic number: plotter.Visible = new DataRect (0' -0.1' 10000' 1.2);  
Magic Number,NewMarkersSample.Pages,EndlessRandomValuesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\EndlessRandomValuesPage.xaml.cs,Page_Loaded,The following statement contains a magic number: plotter.Visible = new DataRect (0' -0.1' 10000' 1.2);  
Magic Number,NewMarkersSample.Pages,EndlessRandomValuesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\EndlessRandomValuesPage.xaml.cs,Page_Loaded,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	AddNextPoint ();  }  
Magic Number,NewMarkersSample.Pages,EndlessRandomValuesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\EndlessRandomValuesPage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBinding<Point> (Shape.FillProperty' p => p.Y > 0.5 ? Brushes.Green : Brushes.Red);  
Magic Number,NewMarkersSample.Pages,HeightToFillConverter,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\HeightToFillConverter.cs,Convert,The following statement contains a magic number: if (d > 3.75)  	return Brushes.Brown;  else if (d > 3.5)  	return Brushes.IndianRed;  else if (d > 3.25)  	return Brushes.BurlyWood;  else  	return Brushes.CadetBlue;  
Magic Number,NewMarkersSample.Pages,HeightToFillConverter,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\HeightToFillConverter.cs,Convert,The following statement contains a magic number: if (d > 3.75)  	return Brushes.Brown;  else if (d > 3.5)  	return Brushes.IndianRed;  else if (d > 3.25)  	return Brushes.BurlyWood;  else  	return Brushes.CadetBlue;  
Magic Number,NewMarkersSample.Pages,HeightToFillConverter,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\HeightToFillConverter.cs,Convert,The following statement contains a magic number: if (d > 3.75)  	return Brushes.Brown;  else if (d > 3.5)  	return Brushes.IndianRed;  else if (d > 3.25)  	return Brushes.BurlyWood;  else  	return Brushes.CadetBlue;  
Magic Number,NewMarkersSample.Pages,HeightToFillConverter,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\HeightToFillConverter.cs,Convert,The following statement contains a magic number: if (d > 3.5)  	return Brushes.IndianRed;  else if (d > 3.25)  	return Brushes.BurlyWood;  else  	return Brushes.CadetBlue;  
Magic Number,NewMarkersSample.Pages,HeightToFillConverter,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\HeightToFillConverter.cs,Convert,The following statement contains a magic number: if (d > 3.5)  	return Brushes.IndianRed;  else if (d > 3.25)  	return Brushes.BurlyWood;  else  	return Brushes.CadetBlue;  
Magic Number,NewMarkersSample.Pages,HeightToFillConverter,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\HeightToFillConverter.cs,Convert,The following statement contains a magic number: if (d > 3.25)  	return Brushes.BurlyWood;  else  	return Brushes.CadetBlue;  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: for (int i = 0; i < segments.Length; i++) {  	var segment = segments [i];  	segment.X = i + 0.2 * Math.Sin (i + speed * dt);  	segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  }  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.X = i + 0.2 * Math.Sin (i + speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,timer_Tick,The following statement contains a magic number: segment.YMax = 3 + 0.5 + 0.5 * Math.Sin (i + 0.32 * speed * dt);  
Magic Number,NewMarkersSample.Pages,BarChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BarChart page\BarChartPage.xaml.cs,Page_Loaded,The following statement contains a magic number: segments = Segment.LoadSegments (10);  
Magic Number,NewMarkersSample.Pages,BigPointArrayPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BigPointArrayPage.xaml.cs,Page_Loaded,The following statement contains a magic number: markerChart.AddPropertyBinding<Point> (Shape.FillProperty' p =>  {  	double length = Math.Sqrt (p.X * p.X + p.Y * p.Y) / Math.Sqrt (2);  	return new SolidColorBrush (palette.GetColor (length));  });  
Magic Number,NewMarkersSample.Pages,BigPointArrayPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BigPointArrayPage.xaml.cs,Page_Loaded,The following statement contains a magic number: markerChart.Filters.Add (new ParallelClusteringFilter {  	MarkerSize = 8  });  
Magic Number,NewMarkersSample.Pages,BigPointArrayPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\BigPointArrayPage.xaml.cs,Page_Loaded,The following statement contains a magic number: markerChart.Filters.Add (new UnitingPointGroupFilter {  	MarkerSize = 6  });  
Magic Number,NewMarkersSample.Pages,PieChartPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PieChart page\PieChartPage.xaml.cs,AddRandomSellInfo,The following statement contains a magic number: sells.Add (new SellInfo {  	CityName = CreateRandomString ()'  	Income = rnd.NextDouble (1' 3)  });  
Magic Number,NewMarkersSample.Pages,PieChartItemEditor,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PieChartApi page\PieChartItemEditor.xaml.cs,Reset,The following statement contains a magic number: colorSelector.SelectedValue = 0.5;  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,plotter_Loaded,The following statement contains a magic number: chart.Filters.Add (new UnitingPointGroupFilter {  	MarkerSize = 5  });  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,plotter_Loaded,The following statement contains a magic number: chart2.Filters.Add (new UnitingPointGroupFilter {  	MarkerSize = 10  });  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,GeneratePoint,The following statement contains a magic number: return new Point ((i - 128) % 256 - 128' i);  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,GeneratePoint,The following statement contains a magic number: return new Point ((i - 128) % 256 - 128' i);  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,GeneratePoint,The following statement contains a magic number: return new Point ((i - 128) % 256 - 128' i);  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,GeneratePoint2,The following statement contains a magic number: return new Point (128 - i % 256' i);  
Magic Number,NewMarkersSample.Pages,PointSetPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\PointSetPage.xaml.cs,GeneratePoint2,The following statement contains a magic number: return new Point (128 - i % 256' i);  
Magic Number,NewMarkersSample.Pages,RenderingMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RenderingMarkersPage.xaml.cs,ChartPlotter_Loaded,The following statement contains a magic number: for (int i = 0; i < 5000; i++) {  	pts.Add (new Point (rnd.NextDouble ()' rnd.NextDouble ()));  }  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.FillProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 0.2' 1);  	return new SolidColorBrush (color.ToArgbColor ()).MakeTransparent (0.7);  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.FillProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 0.2' 1);  	return new SolidColorBrush (color.ToArgbColor ()).MakeTransparent (0.7);  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.FillProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 0.2' 1);  	return new SolidColorBrush (color.ToArgbColor ()).MakeTransparent (0.7);  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.FillProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 0.2' 1);  	return new SolidColorBrush (color.ToArgbColor ()).MakeTransparent (0.7);  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.FillProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 0.2' 1);  	return new SolidColorBrush (color.ToArgbColor ()).MakeTransparent (0.7);  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: return new SolidColorBrush (color.ToArgbColor ()).MakeTransparent (0.7);  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.StrokeProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 1' 1);  	return new SolidColorBrush (color.ToArgbColor ());  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.StrokeProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 1' 1);  	return new SolidColorBrush (color.ToArgbColor ());  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.StrokeProperty' p =>  {  	double hue = Math.Sin (1000 * (p.X + p.Y)) * 180 + 180;  	var color = new HsbColor (hue' 1' 1);  	return new SolidColorBrush (color.ToArgbColor ());  });  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBindingForNamedPart<Point> ("ellipse"' Ellipse.RenderTransformProperty' p => new RotateTransform (120 * Math.Atan2 (p.Y' p.X)));  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBinding<Point> (ViewportPanel.ViewportWidthProperty' p => 0.2 * Math.Abs (Math.Sin (p.X)));  
Magic Number,NewMarkersSample.Pages,RotatedEllipsesPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\RotatedEllipsePage.xaml.cs,Page_Loaded,The following statement contains a magic number: chart.AddPropertyBinding<Point> (ViewportPanel.ViewportHeightProperty' p => 0.2 * Math.Abs (Math.Cos (p.X)));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: dateAxis.SetConversion (1000' now' 1010' now.AddDays (10));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: dateAxis.SetConversion (1000' now' 1010' now.AddDays (10));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: dateAxis.SetConversion (1000' now' 1010' now.AddDays (10));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: dateAxis2.SetConversion (1000' now' 1010' now.AddDays (10));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: dateAxis2.SetConversion (1000' now' 1010' now.AddDays (10));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: dateAxis2.SetConversion (1000' now' 1010' now.AddDays (10));  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: genericPlotter.ViewportRect = new GenericRect<DateTime' double> (DateTime.Now.AddDays (-2)' -2.5' DateTime.Now.AddDays (60)' 2.5);  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: genericPlotter.ViewportRect = new GenericRect<DateTime' double> (DateTime.Now.AddDays (-2)' -2.5' DateTime.Now.AddDays (60)' 2.5);  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: genericPlotter.ViewportRect = new GenericRect<DateTime' double> (DateTime.Now.AddDays (-2)' -2.5' DateTime.Now.AddDays (60)' 2.5);  
Magic Number,NewMarkersSample.Pages,StockMarkersPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\StockMarkersPage.xaml.cs,Page_Loaded,The following statement contains a magic number: genericPlotter.ViewportRect = new GenericRect<DateTime' double> (DateTime.Now.AddDays (-2)' -2.5' DateTime.Now.AddDays (60)' 2.5);  
Magic Number,NewMarkersSample.Pages,VectorFieldPage,C:\repos\dotnetprojects_DynamicDataDisplay\src\DevSamples\NewMarkersSample\Pages\VectorField page\VectorFieldPage.xaml.cs,LoadVectorField,The following statement contains a magic number: return new Vector (Math.Sin (scale * rnd.NextDouble ())' Math.Sin (scale * rnd.NextDouble ())) / count / 2;  
