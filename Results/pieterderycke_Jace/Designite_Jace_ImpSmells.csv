Implementation smell,Namespace,Class,File,Method,Description
Long Method,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,ConvertOperation,The method has 108 lines of code.
Long Method,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The method has 223 lines of code.
Long Method,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The method has 124 lines of code.
Long Method,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,Read,The method has 184 lines of code.
Complex Method,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,Build,Cyclomatic complexity of the method is 13
Complex Method,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,ConvertOperation,Cyclomatic complexity of the method is 16
Complex Method,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,Cyclomatic complexity of the method is 25
Complex Method,Jace.Execution,FunctionRegistry,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\FunctionRegistry.cs,RegisterFunction,Cyclomatic complexity of the method is 11
Complex Method,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,Cyclomatic complexity of the method is 23
Complex Method,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,Cyclomatic complexity of the method is 19
Complex Method,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,Read,Cyclomatic complexity of the method is 33
Long Parameter List,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,CalculationEngine,The method has 5 parameters. Parameters: cultureInfo' executionMode' cacheEnabled' optimizerEnabled' adjustVariableCaseEnabled
Long Parameter List,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,CalculationEngine,The method has 7 parameters. Parameters: cultureInfo' executionMode' cacheEnabled' optimizerEnabled' adjustVariableCaseEnabled' defaultFunctions' defaultConstants
Long Parameter List,Jace.Execution,FunctionInfo,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\FunctionInfo.cs,FunctionInfo,The method has 5 parameters. Parameters: functionName' numberOfParameters' isOverWritable' isDynamicFunc' function
Long Parameter List,Jace.Util,MathExtended,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Util\MathExtended.cs,NthOrderStatistic,The method has 5 parameters. Parameters: list' n' start' end' rnd
Long Statement,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,RequiredDataType,The length of the statement  "            return (argument1.DataType == DataType.FloatingPoint || argument2.DataType == DataType.FloatingPoint) ? DataType.FloatingPoint : DataType.Integer;" is 146.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,RegisterDefaultFunctions,The length of the statement  "            FunctionRegistry.RegisterFunction("if"' (Func<double' double' double' double>)((a' b' c) => (a != 0.0 ? b : c))' false);" is 120.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,RegisterDefaultFunctions,The length of the statement  "            FunctionRegistry.RegisterFunction("ifless"' (Func<double' double' double' double' double>)((a' b' c' d) => (a < b ? c : d))' false);" is 132.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,RegisterDefaultFunctions,The length of the statement  "            FunctionRegistry.RegisterFunction("ifmore"' (Func<double' double' double' double' double>)((a' b' c' d) => (a > b ? c : d))' false);" is 132.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,RegisterDefaultFunctions,The length of the statement  "            FunctionRegistry.RegisterFunction("ifequal"' (Func<double' double' double' double' double>)((a' b' c' d) => (a == b ? c : d))' false);" is 134.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,BuildFormula,The length of the statement  "            return executionFormulaCache.GetOrAdd(formulaText' v => executor.BuildFormula(operation' this.FunctionRegistry' this.ConstantRegistry));" is 136.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,VerifyVariableNames,The length of the statement  "                    throw new ArgumentException(string.Format("The name \"{0}\" is a reservered variable name that cannot be overwritten."' variableName)' "variables");" is 148.
Long Statement,Jace,CalculationEngine,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\CalculationEngine.cs,VerifyVariableNames,The length of the statement  "                    throw new ArgumentException(string.Format("The name \"{0}\" is a function name. Parameters cannot have this name."' variableName)' "variables");" is 144.
Long Statement,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The length of the statement  "                return Expression.Call(null' typeof(Math).GetRuntimeMethod("Pow"' new Type[] { typeof(double)' typeof(double) })' @base' exponent);" is 131.
Long Statement,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The length of the statement  "                Expression argument1 = Expression.NotEqual(GenerateMethodBody(and.Argument1' contextParameter' functionRegistry)' Expression.Constant(0.0));" is 140.
Long Statement,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The length of the statement  "                Expression argument2 = Expression.NotEqual(GenerateMethodBody(and.Argument2' contextParameter' functionRegistry)' Expression.Constant(0.0));" is 140.
Long Statement,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The length of the statement  "                Expression argument1 = Expression.NotEqual(GenerateMethodBody(and.Argument1' contextParameter' functionRegistry)' Expression.Constant(0.0));" is 140.
Long Statement,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The length of the statement  "                Expression argument2 = Expression.NotEqual(GenerateMethodBody(and.Argument2' contextParameter' functionRegistry)' Expression.Constant(0.0));" is 140.
Long Statement,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GenerateMethodBody,The length of the statement  "                throw new ArgumentException(string.Format("Unsupported operation \"{0}\"."' operation.GetType().FullName)' "operation");" is 120.
Long Statement,Jace.Execution,FormulaBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\FormulaBuilder.cs,Parameter,The length of the statement  "                throw new ArgumentException(string.Format("The name \"{0}\" is a function name. Parameters cannot have this name."' name)' "name");" is 131.
Long Statement,Jace.Execution,FunctionRegistry,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\FunctionRegistry.cs,RegisterFunction,The length of the statement  "                string message = string.Format("A Func can only be overwritten by another Func and a DynamicFunc can only be overwritten by another DynamicFunc.");" is 147.
Long Statement,Jace.Execution,FunctionRegistry,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\FunctionRegistry.cs,RegisterFunction,The length of the statement  "            FunctionInfo functionInfo = new FunctionInfo(functionName' numberOfParameters' isOverWritable' isDynamicFunc' function);" is 120.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return Execute(multiplication.Argument1' functionRegistry' constantRegistry'  variables) * Execute(multiplication.Argument2' functionRegistry' constantRegistry'  variables);" is 173.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return Execute(addition.Argument1' functionRegistry' constantRegistry'  variables) + Execute(addition.Argument2' functionRegistry' constantRegistry'  variables);" is 161.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return Execute(addition.Argument1' functionRegistry' constantRegistry'  variables) - Execute(addition.Argument2' functionRegistry' constantRegistry'  variables);" is 161.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return Execute(division.Dividend' functionRegistry' constantRegistry'  variables) / Execute(division.Divisor' functionRegistry' constantRegistry'  variables);" is 158.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return Execute(division.Dividend' functionRegistry' constantRegistry'  variables) % Execute(division.Divisor' functionRegistry' constantRegistry'  variables);" is 158.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return Math.Pow(Execute(exponentiation.Base' functionRegistry' constantRegistry'  variables)' Execute(exponentiation.Exponent' functionRegistry' constantRegistry'  variables));" is 176.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return (Execute(lessThan.Argument1' functionRegistry' constantRegistry'  variables) < Execute(lessThan.Argument2' functionRegistry' constantRegistry'  variables)) ? 1.0 : 0.0;" is 175.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return (Execute(lessOrEqualThan.Argument1' functionRegistry' constantRegistry'  variables) <= Execute(lessOrEqualThan.Argument2' functionRegistry' constantRegistry'  variables)) ? 1.0 : 0.0;" is 190.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return (Execute(greaterThan.Argument1' functionRegistry' constantRegistry'  variables) > Execute(greaterThan.Argument2' functionRegistry' constantRegistry'  variables)) ? 1.0 : 0.0;" is 181.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return (Execute(greaterOrEqualThan.Argument1' functionRegistry' constantRegistry'  variables) >= Execute(greaterOrEqualThan.Argument2' functionRegistry' constantRegistry'  variables)) ? 1.0 : 0.0;" is 196.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return (Execute(equal.Argument1' functionRegistry' constantRegistry'  variables) == Execute(equal.Argument2' functionRegistry' constantRegistry'  variables)) ? 1.0 : 0.0;" is 170.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                return (Execute(notEqual.Argument1' functionRegistry' constantRegistry'  variables) != Execute(notEqual.Argument2' functionRegistry' constantRegistry'  variables)) ? 1.0 : 0.0;" is 176.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                double[] arguments = new double[functionInfo.IsDynamicFunc ? function.Arguments.Count : functionInfo.NumberOfParameters];" is 121.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Execute,The length of the statement  "                throw new ArgumentException(string.Format("Unsupported operation \"{0}\"."' operation.GetType().FullName)' "operation");" is 120.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]);" is 127.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]);" is 149.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]);" is 171.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]);" is 193.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]);" is 215.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]);" is 237.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]);" is 259.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "            else if (function is Func<double' double' double' double' double' double' double' double' double' double' double' double>)" is 122.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]' arguments[10]);" is 282.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "            else if (function is Func<double' double' double' double' double' double' double' double' double' double' double' double' double>)" is 130.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]' arguments[10]' arguments[11]);" is 305.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "            else if (function is Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double>)" is 138.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]' arguments[10]' arguments[11]' arguments[12]);" is 328.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "            else if (function is Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double' double>)" is 146.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]' arguments[10]' arguments[11]' arguments[12]' arguments[13]);" is 351.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "            else if (function is Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double' double' double>)" is 154.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]' arguments[10]' arguments[11]' arguments[12]' arguments[13]' arguments[14]);" is 374.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "            else if (function is Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double' double' double' double>)" is 162.
Long Statement,Jace.Execution,Interpreter,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\Interpreter.cs,Invoke,The length of the statement  "                return ((Func<double' double' double' double' double' double' double' double' double' double' double' double' double' double' double' double' double>)function).Invoke(arguments[0]' arguments[1]' arguments[2]' arguments[3]' arguments[4]' arguments[5]' arguments[6]' arguments[7]' arguments[8]' arguments[9]' arguments[10]' arguments[11]' arguments[12]' arguments[13]' arguments[14]' arguments[15]);" is 397.
Long Statement,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,Read,The length of the statement  "                        tokens.Add(new Token() { TokenType = TokenType.Integer' Value = intValue' StartPosition = startPosition' Length = i - startPosition });" is 135.
Long Statement,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,Read,The length of the statement  "                            tokens.Add(new Token() { TokenType = TokenType.FloatingPoint' Value = doubleValue' StartPosition = startPosition' Length = i - startPosition });" is 144.
Long Statement,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,Read,The length of the statement  "                    tokens.Add(new Token() { TokenType = TokenType.Text' Value = buffer' StartPosition = startPosition' Length = i -startPosition });" is 129.
Long Statement,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,Read,The length of the statement  "                    tokens.Add(new Token() { TokenType = Tokenizer.TokenType.ArgumentSeparator' Value = characters[i]' StartPosition = i' Length = 1 });" is 132.
Long Statement,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,IsPartOfNumeric,The length of the statement  "            return character == decimalSeparator || (character >= '0' && character <= '9') || (isFormulaSubPart && isFirstCharacter && character == '-') || (!isFirstCharacter && character == 'e') || (!isFirstCharacter && character == 'E');" is 227.
Long Statement,Jace.Tokenizer,TokenReader,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Tokenizer\TokenReader.cs,IsPartOfVariable,The length of the statement  "            return (character >= 'a' && character <= 'z') || (character >= 'A' && character <= 'Z') || (!isFirstCharacter && character >= '0' && character <= '9') || (!isFirstCharacter && character == '_');" is 194.
Complex Conditional,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,PopOperations,The conditional expression  "operatorStack.Count > 0 && operatorStack.Peek().TokenType == TokenType.LeftBracket                      && !(currentToken.HasValue && currentToken.Value.TokenType == TokenType.ArgumentSeparator)"  is complex.
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('<'' 2);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('>'' 2);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('≤'' 2);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('≥'' 2);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('≠'' 2);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('='' 2);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('+'' 3);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('-'' 3);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('*'' 4);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('/'' 4);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('%'' 4);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('_'' 6);
Magic Number,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,AstBuilder,The following statement contains a magic number: operationPrecedence.Add('^'' 5);
Magic Number,Jace.Execution,DynamicCompiler,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Execution\DynamicCompiler.cs,GetFuncType,The following statement contains a magic number: numberOfParameters < 9
Magic Number,Jace.Util,MathExtended,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Util\MathExtended.cs,Median,The following statement contains a magic number: return list.NthOrderStatistic((list.Count - 1) / 2);
Magic Number,Jace.Util,MathExtended,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\Util\MathExtended.cs,Median,The following statement contains a magic number: var mid = (list.Count - 1) / 2;
Missing Default,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,Build,The following switch statement is missing a default case: switch (token.TokenType)                 {                     case TokenType.Integer:                         resultStack.Push(new IntegerConstant((int)token.Value));                         break;                     case TokenType.FloatingPoint:                         resultStack.Push(new FloatingPointConstant((double)token.Value));                         break;                     case TokenType.Text:                         if (functionRegistry.IsFunctionName((string)token.Value))                         {                             operatorStack.Push(token);                             parameterCount.Push(1);                         }                         else                         {                             string tokenValue = (string)token.Value;                             if (adjustVariableCaseEnabled)                             {                               tokenValue = tokenValue.ToLowerInvariant();                             }                             resultStack.Push(new Variable(tokenValue));                         }                         break;                     case TokenType.LeftBracket:                         operatorStack.Push(token);                         break;                     case TokenType.RightBracket:                         PopOperations(true' token);                         //parameterCount.Pop();                         break;                     case TokenType.ArgumentSeparator:                         PopOperations(false' token);                         parameterCount.Push(parameterCount.Pop() + 1);                         break;                     case TokenType.Operation:                         Token operation1Token = token;                         char operation1 = (char)operation1Token.Value;                          while (operatorStack.Count > 0 && (operatorStack.Peek().TokenType == TokenType.Operation ||                             operatorStack.Peek().TokenType == TokenType.Text))                         {                             Token operation2Token = operatorStack.Peek();                             bool isFunctionOnTopOfStack = operation2Token.TokenType == TokenType.Text;                              if (!isFunctionOnTopOfStack)                             {                                 char operation2 = (char)operation2Token.Value;                                  if ((IsLeftAssociativeOperation(operation1) &&                                         operationPrecedence[operation1] <= operationPrecedence[operation2]) ||                                     (operationPrecedence[operation1] < operationPrecedence[operation2]))                                 {                                     operatorStack.Pop();                                     resultStack.Push(ConvertOperation(operation2Token));                                 }                                 else                                 {                                     break;                                 }                             }                             else                             {                                 operatorStack.Pop();                                 resultStack.Push(ConvertFunction(operation2Token));                             }                         }                          operatorStack.Push(operation1Token);                         break;                 }
Missing Default,Jace,AstBuilder,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace\AstBuilder.cs,PopOperations,The following switch statement is missing a default case: switch (token.TokenType)                 {                     case TokenType.Operation:                         resultStack.Push(ConvertOperation(token));                         break;                     case TokenType.Text:                         resultStack.Push(ConvertFunction(token));                         break;                 }
