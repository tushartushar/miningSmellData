Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesCompiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' false' false' false);" is 124.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesInterpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' false' false' false);" is 127.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateSineFunctionCompiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateCosineFunctionCompiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateLognFunctionInterpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateLognFunctionCompiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNegativeConstant,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMultiplicationWithNegativeConstant,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus1Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus1Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus2Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus2Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus3Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus3Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus4Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus4Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus5Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus5Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivityNoToLowerCompiled,The length of the statement  "          CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' false' false' false);" is 124.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivityNoToLowerInterpreted,The length of the statement  "          CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' false' false' false);" is 127.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestAndCompiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestAndInterpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestOr1Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestOr1Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestOr2Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestOr2Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian1Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian1Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian2Compiled,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Compiled' true' false' true);" is 122.
Long Statement,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian2Interpreted,The length of the statement  "            CalculationEngine engine = new CalculationEngine(CultureInfo.InvariantCulture' ExecutionMode.Interpreted' true' false' true);" is 125.
Long Statement,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFourArguments,The length of the statement  "            Func<int' int' int' int' double> wrappedFunction = (Func<int' int' int' int' double>)adapater.Wrap(parameters' dictionary => dictionary["test4"]);" is 146.
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula1,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 42' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula1,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 42' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula1,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 42' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula1,The following statement contains a magic number: Assert.AreEqual(42' ((Constant<int>)addition.Argument1).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula1,The following statement contains a magic number: Assert.AreEqual(8' ((Constant<int>)addition.Argument2).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula1,The following statement contains a magic number: Assert.AreEqual(2' ((Constant<int>)multiplication.Argument2).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula2,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                 new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula2,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                 new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula2,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                 new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula2,The following statement contains a magic number: Assert.AreEqual(2' ((Constant<int>)addition.Argument1).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula2,The following statement contains a magic number: Assert.AreEqual(8' ((Constant<int>)multiplication.Argument1).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula2,The following statement contains a magic number: Assert.AreEqual(3' ((Constant<int>)multiplication.Argument2).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula3,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                 new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = '-'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula3,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                 new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = '-'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula3,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                 new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 8' TokenType = TokenType.Integer }'                  new Token() { Value = '-'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula3,The following statement contains a magic number: Assert.AreEqual(3' ((Constant<int>)substraction.Argument2).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula3,The following statement contains a magic number: Assert.AreEqual(2' ((Constant<int>)multiplication.Argument1).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildFormula3,The following statement contains a magic number: Assert.AreEqual(8' ((Constant<int>)multiplication.Argument2).Value);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestDivision,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 10' TokenType = TokenType.Integer }'                  new Token() { Value = '/'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestDivision,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 10' TokenType = TokenType.Integer }'                  new Token() { Value = '/'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestDivision,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(10)' division.Dividend);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestDivision,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(2)' division.Divisor);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultiplication,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 10' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 2.0' TokenType = TokenType.FloatingPoint }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultiplication,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 10' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = 2.0' TokenType = TokenType.FloatingPoint }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultiplication,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(10)' multiplication.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultiplication,The following statement contains a magic number: Assert.AreEqual(new FloatingPointConstant(2.0)' multiplication.Argument2);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestExponentiation,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '^'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestExponentiation,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '^'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestExponentiation,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(2)' exponentiation.Base);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestExponentiation,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(3)' exponentiation.Exponent);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestModulo,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 2.7' TokenType = TokenType.FloatingPoint }'                  new Token() { Value = '%'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestModulo,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 2.7' TokenType = TokenType.FloatingPoint }'                  new Token() { Value = '%'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestModulo,The following statement contains a magic number: Assert.AreEqual(new FloatingPointConstant(2.7)' modulo.Dividend);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestModulo,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(3)' modulo.Divisor);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestVariable,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 10' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = "var1"' TokenType = TokenType.Text }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestVariable,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(10)' multiplication.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultipleVariable,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "var1"' TokenType = TokenType.Text }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = "age"' TokenType = TokenType.Text }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultipleVariable,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "var1"' TokenType = TokenType.Text }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = '*'' TokenType = TokenType.Operation }'                  new Token() { Value = "age"' TokenType = TokenType.Text }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultipleVariable,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(2)' multiplication1.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestMultipleVariable,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(3)' multiplication2.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction1,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "sin"' TokenType = TokenType.Text }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction1,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(2)' sineFunction.Arguments.Single());
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction2,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "sin"' TokenType = TokenType.Text }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction2,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "sin"' TokenType = TokenType.Text }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction2,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(2)' addition.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction2,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(3)' addition.Argument2);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction3,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "sin"' TokenType = TokenType.Text }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'                 new Token() { Value = '*'' TokenType = TokenType.Operation }'                 new Token() { Value = 4.9' TokenType = TokenType.FloatingPoint }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction3,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "sin"' TokenType = TokenType.Text }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'                 new Token() { Value = '*'' TokenType = TokenType.Operation }'                 new Token() { Value = 4.9' TokenType = TokenType.FloatingPoint }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction3,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = "sin"' TokenType = TokenType.Text }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 2' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 3' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'                 new Token() { Value = '*'' TokenType = TokenType.Operation }'                 new Token() { Value = 4.9' TokenType = TokenType.FloatingPoint }             });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction3,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(2)' addition.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction3,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(3)' addition.Argument2);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestSinFunction3,The following statement contains a magic number: Assert.AreEqual(new FloatingPointConstant(4.9)' multiplication.Argument2);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestUnaryMinus,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 5.3' TokenType = TokenType.FloatingPoint }'                  new Token() { Value = '*'' TokenType = TokenType.Operation}'                  new Token() { Value = '_'' TokenType = TokenType.Operation }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 5' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 42' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestUnaryMinus,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 5.3' TokenType = TokenType.FloatingPoint }'                  new Token() { Value = '*'' TokenType = TokenType.Operation}'                  new Token() { Value = '_'' TokenType = TokenType.Operation }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 5' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 42' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestUnaryMinus,The following statement contains a magic number: Operation operation = builder.Build(new List<Token>() {                  new Token() { Value = 5.3' TokenType = TokenType.FloatingPoint }'                  new Token() { Value = '*'' TokenType = TokenType.Operation}'                  new Token() { Value = '_'' TokenType = TokenType.Operation }'                  new Token() { Value = '('' TokenType = TokenType.LeftBracket }'                  new Token() { Value = 5' TokenType = TokenType.Integer }'                  new Token() { Value = '+'' TokenType = TokenType.Operation }'                  new Token() { Value = 42' TokenType = TokenType.Integer }'                  new Token() { Value = ')'' TokenType = TokenType.RightBracket }'              });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(new FloatingPointConstant(5.3)' multiplication.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(5)' addition.Argument1);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(new IntegerConstant(42)' addition.Argument2);
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula1,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 5 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula1,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 5 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula1,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 5 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula1,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 5 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula1,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 5 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula1,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 5 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula2,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                          new Token() { Value = ')'' TokenType = TokenType.RightBracket' StartPosition = 4 }'                          new Token() { Value = '*'' TokenType = TokenType.Operation' StartPosition = 5 }'                          new Token() { Value = 2' TokenType = TokenType.Integer' StartPosition = 6 }'                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula3,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula3,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula3,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula3,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = '('' TokenType = TokenType.LeftBracket' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula4,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula4,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula4,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula4,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula4,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 1 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 3 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 4 }                     });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula5,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                         new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 4 }                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula5,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                         new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 4 }                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula5,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                         new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 4 }                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula5,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                         new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 4 }                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula5,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                         new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 4 }                      });                 });
Magic Number,Jace.Tests,AstBuilderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\AstBuilderTests.cs,TestBuildInvalidFormula5,The following statement contains a magic number: AssertExtensions.ThrowsException<ParseException>(() =>                 {                     Operation operation = builder.Build(new List<Token>() {                          new Token() { Value = 42' TokenType = TokenType.Integer' StartPosition = 0 }'                          new Token() { Value = '+'' TokenType = TokenType.Operation' StartPosition = 2 }'                          new Token() { Value = 8' TokenType = TokenType.Integer' StartPosition = 3 }'                         new Token() { Value = 5' TokenType = TokenType.Integer' StartPosition = 4 }                      });                 });
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterSubstraction,The following statement contains a magic number: double result = executor.Execute(new Subtraction(                 DataType.Integer'                 new IntegerConstant(6)'                 new IntegerConstant(9))' functionRegistry' constantRegistry);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterSubstraction,The following statement contains a magic number: double result = executor.Execute(new Subtraction(                 DataType.Integer'                 new IntegerConstant(6)'                 new IntegerConstant(9))' functionRegistry' constantRegistry);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterSubstraction,The following statement contains a magic number: Assert.AreEqual(-3.0' result);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreter1,The following statement contains a magic number: double result = executor.Execute(                 new Addition(                     DataType.Integer'                     new IntegerConstant(6)'                     new Multiplication(                         DataType.Integer'                          new IntegerConstant(2)'                          new IntegerConstant(4)))' functionRegistry' constantRegistry);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreter1,The following statement contains a magic number: double result = executor.Execute(                 new Addition(                     DataType.Integer'                     new IntegerConstant(6)'                     new Multiplication(                         DataType.Integer'                          new IntegerConstant(2)'                          new IntegerConstant(4)))' functionRegistry' constantRegistry);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreter1,The following statement contains a magic number: double result = executor.Execute(                 new Addition(                     DataType.Integer'                     new IntegerConstant(6)'                     new Multiplication(                         DataType.Integer'                          new IntegerConstant(2)'                          new IntegerConstant(4)))' functionRegistry' constantRegistry);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreter1,The following statement contains a magic number: Assert.AreEqual(14.0' result);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterWithVariables,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterWithVariables,The following statement contains a magic number: variables.Add("age"' 4);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterWithVariables,The following statement contains a magic number: double result = interpreter.Execute(                 new Addition(DataType.FloatingPoint'                     new Variable("var1")'                     new Multiplication(                         DataType.FloatingPoint'                         new IntegerConstant(2)'                         new Multiplication(                             DataType.FloatingPoint'                              new IntegerConstant(3)'                             new Variable("age"))))' functionRegistry' constantRegistry' variables);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterWithVariables,The following statement contains a magic number: double result = interpreter.Execute(                 new Addition(DataType.FloatingPoint'                     new Variable("var1")'                     new Multiplication(                         DataType.FloatingPoint'                         new IntegerConstant(2)'                         new Multiplication(                             DataType.FloatingPoint'                              new IntegerConstant(3)'                             new Variable("age"))))' functionRegistry' constantRegistry' variables);
Magic Number,Jace.Tests,BasicInterpreterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\BasicInterpreterTests.cs,TestBasicInterpreterWithVariables,The following statement contains a magic number: Assert.AreEqual(26.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculationFormula1FloatingPointCompiled,The following statement contains a magic number: Assert.AreEqual(5.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculationFormula1IntegersCompiled,The following statement contains a magic number: Assert.AreEqual(5.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormula1,The following statement contains a magic number: Assert.AreEqual(5.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateModuloCompiled,The following statement contains a magic number: Assert.AreEqual(2.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateModuloInterpreted,The following statement contains a magic number: Assert.AreEqual(2.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculatePowCompiled,The following statement contains a magic number: Assert.AreEqual(8.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculatePowInterpreted,The following statement contains a magic number: Assert.AreEqual(8.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithVariables,The following statement contains a magic number: variables.Add("var1"' 2.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithVariables,The following statement contains a magic number: variables.Add("var2"' 3.4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithVariables,The following statement contains a magic number: Assert.AreEqual(8.5' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesCompiled,The following statement contains a magic number: variables.Add("VaR1"' 2.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesCompiled,The following statement contains a magic number: variables.Add("vAr2"' 3.4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesCompiled,The following statement contains a magic number: Assert.AreEqual(8.5' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesInterpreted,The following statement contains a magic number: variables.Add("VaR1"' 2.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesInterpreted,The following statement contains a magic number: variables.Add("vAr2"' 3.4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaWithCaseSensitiveVariablesInterpreted,The following statement contains a magic number: Assert.AreEqual(8.5' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaVariableNotDefinedInterpreted,The following statement contains a magic number: variables.Add("var1"' 2.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateFormulaVariableNotDefinedCompiled,The following statement contains a magic number: variables.Add("var1"' 2.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateSineFunctionInterpreted,The following statement contains a magic number: Assert.AreEqual(Math.Sin(14.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateSineFunctionCompiled,The following statement contains a magic number: Assert.AreEqual(Math.Sin(14.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateCosineFunctionInterpreted,The following statement contains a magic number: Assert.AreEqual(Math.Cos(41.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateCosineFunctionCompiled,The following statement contains a magic number: Assert.AreEqual(Math.Cos(41.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateLognFunctionInterpreted,The following statement contains a magic number: Assert.AreEqual(Math.Log(14.0' 3.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateLognFunctionInterpreted,The following statement contains a magic number: Assert.AreEqual(Math.Log(14.0' 3.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateLognFunctionCompiled,The following statement contains a magic number: Assert.AreEqual(Math.Log(14.0' 3.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCalculateLognFunctionCompiled,The following statement contains a magic number: Assert.AreEqual(Math.Log(14.0' 3.0)' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNegativeConstant,The following statement contains a magic number: Assert.AreEqual(-100.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMultiplicationWithNegativeConstant,The following statement contains a magic number: Assert.AreEqual(-500.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus1Compiled,The following statement contains a magic number: Assert.AreEqual(-10.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus1Interpreted,The following statement contains a magic number: Assert.AreEqual(-10.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus2Compiled,The following statement contains a magic number: Assert.AreEqual(3.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus2Interpreted,The following statement contains a magic number: Assert.AreEqual(3.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus3Compiled,The following statement contains a magic number: Assert.AreEqual(-30.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus3Interpreted,The following statement contains a magic number: Assert.AreEqual(-30.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus4Compiled,The following statement contains a magic number: Assert.AreEqual(-10.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus4Interpreted,The following statement contains a magic number: Assert.AreEqual(-10.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus5Compiled,The following statement contains a magic number: Assert.AreEqual(-8.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestUnaryMinus5Interpreted,The following statement contains a magic number: Assert.AreEqual(-8.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestBuild,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestBuild,The following statement contains a magic number: variables.Add("age"' 4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestBuild,The following statement contains a magic number: Assert.AreEqual(26.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilder,The following statement contains a magic number: double result = function(2' 4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilder,The following statement contains a magic number: double result = function(2' 4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilder,The following statement contains a magic number: Assert.AreEqual(26.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderCompiled,The following statement contains a magic number: double result = function(2' 4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderCompiled,The following statement contains a magic number: double result = function(2' 4);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderCompiled,The following statement contains a magic number: Assert.AreEqual(26.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderConstantInterpreted,The following statement contains a magic number: engine.AddConstant("age"' 18.0);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderConstantInterpreted,The following statement contains a magic number: double result = function(3);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderConstantInterpreted,The following statement contains a magic number: Assert.AreEqual(21.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderConstantCompiled,The following statement contains a magic number: engine.AddConstant("age"' 18.0);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderConstantCompiled,The following statement contains a magic number: double result = function(3);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestFormulaBuilderConstantCompiled,The following statement contains a magic number: Assert.AreEqual(21.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestPiMultiplication,The following statement contains a magic number: Assert.AreEqual(2 * Math.PI' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestReservedVariableName,The following statement contains a magic number: AssertExtensions.ThrowsException<ArgumentException>(() =>             {                 Dictionary<string' double> variables = new Dictionary<string' double>();                 variables.Add("pi"' 2.0);                  CalculationEngine engine = new CalculationEngine();                 double result = engine.Calculate("2 * pI"' variables);             });
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivity,The following statement contains a magic number: variables.Add("blabla"' 42.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivity,The following statement contains a magic number: Assert.AreEqual(85.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivityNoToLowerCompiled,The following statement contains a magic number: variables.Add("BlAbLa"' 42.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivityNoToLowerCompiled,The following statement contains a magic number: Assert.AreEqual(85.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivityNoToLowerInterpreted,The following statement contains a magic number: variables.Add("BlAbLa"' 42.5);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableNameCaseSensitivityNoToLowerInterpreted,The following statement contains a magic number: Assert.AreEqual(85.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionInterpreted,The following statement contains a magic number: Assert.AreEqual(5.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionCompiled,The following statement contains a magic number: Assert.AreEqual(5.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestComplicatedPrecedence1,The following statement contains a magic number: Assert.AreEqual(0.378' Math.Round(result' 3));
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestComplicatedPrecedence1,The following statement contains a magic number: Assert.AreEqual(0.378' Math.Round(result' 3));
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestComplicatedPrecedence2,The following statement contains a magic number: Assert.AreEqual(0.378' Math.Round(result' 3));
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestComplicatedPrecedence2,The following statement contains a magic number: Assert.AreEqual(0.378' Math.Round(result' 3));
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestExpressionArguments1,The following statement contains a magic number: Assert.AreEqual(10' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestExpressionArguments2,The following statement contains a magic number: Assert.AreEqual(10' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNestedFunctions,The following statement contains a magic number: Assert.AreEqual(-0.517769799789505' Math.Round(result' 15));
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNestedFunctions,The following statement contains a magic number: Assert.AreEqual(-0.517769799789505' Math.Round(result' 15));
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableCaseFuncInterpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableCaseFuncInterpreted,The following statement contains a magic number: variables.Add("otherVariable"' 4.2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableCaseFuncCompiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableCaseFuncCompiled,The following statement contains a magic number: variables.Add("otherVariable"' 4.2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableCaseNonFunc,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableCaseNonFunc,The following statement contains a magic number: variables.Add("otherVariable"' 4.2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessThanInterpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessThanInterpreted,The following statement contains a magic number: variables.Add("var2"' 4.2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessThanCompiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessThanCompiled,The following statement contains a magic number: variables.Add("var2"' 4.2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan1Interpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan1Interpreted,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan1Compiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan1Compiled,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan2Interpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan2Interpreted,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan2Compiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestLessOrEqualThan2Compiled,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterThan1Interpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterThan1Interpreted,The following statement contains a magic number: variables.Add("var2"' 3);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterThan1Compiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterThan1Compiled,The following statement contains a magic number: variables.Add("var2"' 3);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterOrEqualThan1Interpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterOrEqualThan1Interpreted,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterOrEqualThan1Compiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestGreaterOrEqualThan1Compiled,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNotEqual1Interpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNotEqual1Interpreted,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNotEqual2Interpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNotEqual2Interpreted,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNotEqual2Compiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestNotEqual2Compiled,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestEqualInterpreted,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestEqualInterpreted,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestEqualCompiled,The following statement contains a magic number: variables.Add("var1"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestEqualCompiled,The following statement contains a magic number: variables.Add("var2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableUnderscoreInterpreted,The following statement contains a magic number: variables.Add("var_var_2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableUnderscoreInterpreted,The following statement contains a magic number: Assert.AreEqual(3.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableUnderscoreCompiled,The following statement contains a magic number: variables.Add("var_var_2"' 2);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestVariableUnderscoreCompiled,The following statement contains a magic number: Assert.AreEqual(3.0' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionFunc11Interpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionFunc11Interpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionFunc11Interpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionFunc11Compiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionFunc11Compiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionFunc11Compiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncInterpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncInterpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncInterpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncCompiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncCompiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncCompiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncNestedInterpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncNestedInterpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncNestedInterpreted,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncNestedDynamicCompiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncNestedDynamicCompiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestCustomFunctionDynamicFuncNestedDynamicCompiled,The following statement contains a magic number: double expected = (11 * (11 + 1)) / 2.0;
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian1Compiled,The following statement contains a magic number: Assert.AreEqual(3' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian1Interpreted,The following statement contains a magic number: Assert.AreEqual(3' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian2Compiled,The following statement contains a magic number: Assert.AreEqual(3' result);
Magic Number,Jace.Tests,CalculationEngineTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\CalculationEngineTests.cs,TestMedian2Interpreted,The following statement contains a magic number: Assert.AreEqual(3' result);
Magic Number,Jace.Tests,ConstantRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\ConstantRegistryTests.cs,TestAddConstant,The following statement contains a magic number: registry.RegisterConstant("test"' 42.0);
Magic Number,Jace.Tests,ConstantRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\ConstantRegistryTests.cs,TestAddConstant,The following statement contains a magic number: Assert.AreEqual(42.0' functionInfo.Value);
Magic Number,Jace.Tests,ConstantRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\ConstantRegistryTests.cs,TestOverwritable,The following statement contains a magic number: registry.RegisterConstant("test"' 42.0);
Magic Number,Jace.Tests,ConstantRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\ConstantRegistryTests.cs,TestOverwritable,The following statement contains a magic number: registry.RegisterConstant("test"' 26.3);
Magic Number,Jace.Tests,ConstantRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\ConstantRegistryTests.cs,TestNotOverwritable,The following statement contains a magic number: registry.RegisterConstant("test"' 42.0' false);
Magic Number,Jace.Tests,ConstantRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\ConstantRegistryTests.cs,TestNotOverwritable,The following statement contains a magic number: AssertExtensions.ThrowsException<Exception>(() =>                 {                     registry.RegisterConstant("test"' 26.3' false);                 });
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFuncAdapterWrap,The following statement contains a magic number: Assert.AreEqual(3.0' wrappedFunction(1' 2.0));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFuncAdapterWrap,The following statement contains a magic number: Assert.AreEqual(3.0' wrappedFunction(1' 2.0));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFuncAdapterWrapAndGC,The following statement contains a magic number: Assert.AreEqual(3.0' wrappedFunction(1' 2.0));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFuncAdapterWrapAndGC,The following statement contains a magic number: Assert.AreEqual(3.0' wrappedFunction(1' 2.0));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFourArguments,The following statement contains a magic number: Assert.AreEqual(8.0' wrappedFunction(2' 4' 6' 8));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFourArguments,The following statement contains a magic number: Assert.AreEqual(8.0' wrappedFunction(2' 4' 6' 8));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFourArguments,The following statement contains a magic number: Assert.AreEqual(8.0' wrappedFunction(2' 4' 6' 8));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFourArguments,The following statement contains a magic number: Assert.AreEqual(8.0' wrappedFunction(2' 4' 6' 8));
Magic Number,Jace.Tests,FuncAdapterTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FuncAdapterTests.cs,TestFourArguments,The following statement contains a magic number: Assert.AreEqual(8.0' wrappedFunction(2' 4' 6' 8));
Magic Number,Jace.Tests,FunctionRegistryTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\FunctionRegistryTests.cs,TestAddFunc2,The following statement contains a magic number: Assert.AreEqual(2' functionInfo.NumberOfParameters);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupOnlyAdd,The following statement contains a magic number: MemoryCache<string' int> cache = new MemoryCache<string' int>(3' 1);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupOnlyAdd,The following statement contains a magic number: cache.GetOrAdd("test2"' k => 2);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupOnlyAdd,The following statement contains a magic number: cache.GetOrAdd("test3"' k => 3);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupOnlyAdd,The following statement contains a magic number: cache.GetOrAdd("test4"' k => 3);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupOnlyAdd,The following statement contains a magic number: Assert.AreEqual(3' cache.Count);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupRetrieve,The following statement contains a magic number: MemoryCache<string' int> cache = new MemoryCache<string' int>(3' 1);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupRetrieve,The following statement contains a magic number: cache.GetOrAdd("test2"' k => 2);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupRetrieve,The following statement contains a magic number: cache.GetOrAdd("test3"' k => 3);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupRetrieve,The following statement contains a magic number: cache.GetOrAdd("test4"' k => 3);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupRetrieve,The following statement contains a magic number: Assert.AreEqual(3' cache.Count);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupBiggerThanCacheSize,The following statement contains a magic number: MemoryCache<string' int> cache = new MemoryCache<string' int>(1' 3);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupBiggerThanCacheSize,The following statement contains a magic number: cache.GetOrAdd("test2"' k => 2);
Magic Number,Jace.Tests,MemoryCacheTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\MemoryCacheTests.cs,TestCacheCleanupBiggerThanCacheSize,The following statement contains a magic number: cache.GetOrAdd("test3"' k => 3);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(42' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(2' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(2' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(31' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(31' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader1,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(5' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(42' tokens[1].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(2' tokens[1].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual('+'' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(31' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(31' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(2' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(2' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(')'' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(6' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(6' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader2,The following statement contains a magic number: Assert.AreEqual(1' tokens[4].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(4' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(42' tokens[1].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(2' tokens[1].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual('+'' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(31.0' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(31.0' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader3,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(7' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(42' tokens[1].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(2' tokens[1].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual('+'' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(3' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(8' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(8' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(5' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(5' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(1' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(')'' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(6' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(6' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(1' tokens[4].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual('*'' tokens[5].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(8' tokens[5].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(8' tokens[5].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(1' tokens[5].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(2' tokens[6].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(2' tokens[6].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(9' tokens[6].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(9' tokens[6].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader4,The following statement contains a magic number: Assert.AreEqual(1' tokens[6].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(4' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(42.87' tokens[1].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(5' tokens[1].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual('+'' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(6' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(6' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(31.0' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(31.0' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(7' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(7' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader5,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(4' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(3' tokens[1].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual('+'' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(4' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(4' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(31.0' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(31.0' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(5' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(5' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader6,The following statement contains a magic number: Assert.AreEqual(4' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader7,The following statement contains a magic number: Assert.AreEqual(4' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader8,The following statement contains a magic number: Assert.AreEqual(2' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader8,The following statement contains a magic number: Assert.AreEqual(4' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader8,The following statement contains a magic number: Assert.AreEqual(4' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader9,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader9,The following statement contains a magic number: Assert.AreEqual(4' tokens[1].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader9,The following statement contains a magic number: Assert.AreEqual('('' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader9,The following statement contains a magic number: Assert.AreEqual(5' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader9,The following statement contains a magic number: Assert.AreEqual(5' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader9,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(4' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(4' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(5' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(5' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader10,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(5.1' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(3' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(3' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(4' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(4' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader11,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader12,The following statement contains a magic number: Assert.AreEqual(-2.1' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader12,The following statement contains a magic number: Assert.AreEqual(4' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(5' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader13,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(5' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(-2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(-2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader14,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(5' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(5' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual('('' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(-2' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(-2' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(3' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(3' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(2' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(2' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(')'' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(5' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(5' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader15,The following statement contains a magic number: Assert.AreEqual(1' tokens[4].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(8' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(5' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual('_'' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual('('' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(3' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(3' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(1' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(2' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(2' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(4' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(4' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(1' tokens[4].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual('+'' tokens[5].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(5' tokens[5].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(5' tokens[5].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(1' tokens[5].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(43' tokens[6].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(43' tokens[6].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(6' tokens[6].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(6' tokens[6].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(2' tokens[6].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(2' tokens[6].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(')'' tokens[7].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(8' tokens[7].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(8' tokens[7].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader16,The following statement contains a magic number: Assert.AreEqual(1' tokens[7].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(6' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(4' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(4' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(5' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(5' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual('''' tokens[3].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(6' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(6' tokens[3].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(1' tokens[3].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(TokenType.ArgumentSeparator' tokens[3].TokenType);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(5' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(5' tokens[4].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(7' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(7' tokens[4].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(1' tokens[4].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(')'' tokens[5].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(8' tokens[5].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(8' tokens[5].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(1' tokens[5].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader17,The following statement contains a magic number: Assert.AreEqual(TokenType.RightBracket' tokens[5].TokenType);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(5' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(5' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(2' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(6' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(6' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader18,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader20,The following statement contains a magic number: Assert.AreEqual(2.11E-3' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader20,The following statement contains a magic number: Assert.AreEqual(7' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(5' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(5' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(2.11E-3' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(2.11E-3' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(6' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(6' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(7' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader21,The following statement contains a magic number: Assert.AreEqual(7' tokens[2].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader23,The following statement contains a magic number: Assert.AreEqual(2.11E3' tokens[0].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader23,The following statement contains a magic number: Assert.AreEqual(6' tokens[0].Length);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader24,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader24,The following statement contains a magic number: Assert.AreEqual(2' tokens[1].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader24,The following statement contains a magic number: Assert.AreEqual("e"' tokens[2].Value);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader24,The following statement contains a magic number: Assert.AreEqual(4' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader24,The following statement contains a magic number: Assert.AreEqual(4' tokens[2].StartPosition);
Magic Number,Jace.Tests,TokenReaderTests,C:\research\architectureSmells\repos\pieterderycke_Jace\Jace.Tests\TokenReaderTests.cs,TestTokenReader24,The following statement contains a magic number: Assert.AreEqual(1' tokens[2].Length);
