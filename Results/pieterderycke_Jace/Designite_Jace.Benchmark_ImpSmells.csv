Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Jace.Benchmark,Program,C:\repos\pieterderycke_Jace\Jace.Benchmark\Program.cs,,The length of the parameter NumberExecutionsPerRandomFunction is 33.
Long Statement,Jace.Benchmark,Program,C:\repos\pieterderycke_Jace\Jace.Benchmark\Program.cs,Main,The length of the statement  "            Console.WriteLine("Total Number Of Executions: {0}"' (NumberExecutionsPerRandomFunction * NumberOfFunctionsToGenerate).ToString("N0")); " is 135.
Magic Number,Jace.Benchmark,FunctionGenerator,C:\repos\pieterderycke_Jace\Jace.Benchmark\FunctionGenerator.cs,Generate,The following statement contains a magic number: if (value < 0.35)              {                  result.Append(variables.Dequeue());                  result.Append(GetRandomOperator());                    if(variables.Count > 0)                      Generate(result' variables);                  else                      result.Append(GetRandomValue());              }              else if (value < 0.8)              {                  result.Append(GetRandomValue());                  result.Append(GetRandomOperator());                    if (variables.Count > 0)                      Generate(result' variables);                  else                      result.Append(GetRandomValue());              }              else              {                  if (variables.Count > 0)                  {                      result.Append('(');                      Generate(result' variables);                      result.Append(')');                      result.Append(GetRandomOperator());                        if (variables.Count > 0)                          Generate(result' variables);                      else                          result.Append(GetRandomValue());                  }                  else                      result.Append(GetRandomValue());              }
Magic Number,Jace.Benchmark,FunctionGenerator,C:\repos\pieterderycke_Jace\Jace.Benchmark\FunctionGenerator.cs,Generate,The following statement contains a magic number: if (value < 0.35)              {                  result.Append(variables.Dequeue());                  result.Append(GetRandomOperator());                    if(variables.Count > 0)                      Generate(result' variables);                  else                      result.Append(GetRandomValue());              }              else if (value < 0.8)              {                  result.Append(GetRandomValue());                  result.Append(GetRandomOperator());                    if (variables.Count > 0)                      Generate(result' variables);                  else                      result.Append(GetRandomValue());              }              else              {                  if (variables.Count > 0)                  {                      result.Append('(');                      Generate(result' variables);                      result.Append(')');                      result.Append(GetRandomOperator());                        if (variables.Count > 0)                          Generate(result' variables);                      else                          result.Append(GetRandomValue());                  }                  else                      result.Append(GetRandomValue());              }
Magic Number,Jace.Benchmark,FunctionGenerator,C:\repos\pieterderycke_Jace\Jace.Benchmark\FunctionGenerator.cs,GetRandomOperator,The following statement contains a magic number: if (value < 0.2)                  return '+';              else if (value < 0.4)                  return '*';              else if (value < 0.6)                  return '/';              else //if (value < 0.8) TODO add support for '^'                  return '-';
Magic Number,Jace.Benchmark,FunctionGenerator,C:\repos\pieterderycke_Jace\Jace.Benchmark\FunctionGenerator.cs,GetRandomOperator,The following statement contains a magic number: if (value < 0.2)                  return '+';              else if (value < 0.4)                  return '*';              else if (value < 0.6)                  return '/';              else //if (value < 0.8) TODO add support for '^'                  return '-';
Magic Number,Jace.Benchmark,FunctionGenerator,C:\repos\pieterderycke_Jace\Jace.Benchmark\FunctionGenerator.cs,GetRandomOperator,The following statement contains a magic number: if (value < 0.2)                  return '+';              else if (value < 0.4)                  return '*';              else if (value < 0.6)                  return '/';              else //if (value < 0.8) TODO add support for '^'                  return '-';
Magic Number,Jace.Benchmark,FunctionGenerator,C:\repos\pieterderycke_Jace\Jace.Benchmark\FunctionGenerator.cs,GetRandomValue,The following statement contains a magic number: if (value < 0.6)                  return random.Next().ToString(cultureInfo);              else                  return (random.Next() * random.NextDouble()).ToString(cultureInfo);
Magic Number,Jace.Benchmark,Program,C:\repos\pieterderycke_Jace\Jace.Benchmark\Program.cs,Main,The following statement contains a magic number: Console.WriteLine("Number Of Variables Of Each Function: {0}"' 3);
