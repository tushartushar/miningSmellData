Implementation smell,Namespace,Class,File,Method,Description
Long Method,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The method has 125 lines of code.
Long Method,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The method has 174 lines of code.
Complex Method,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,Cyclomatic complexity of the method is 23
Complex Method,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,Cyclomatic complexity of the method is 26
Long Statement,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,printArgsHelp,The length of the statement  "	Console.WriteLine ("{0} [colors] [width] [height] [startx] [starty] [frames] [seed] [neighbors] [sorting] [algo]"' AppDomain.CurrentDomain.FriendlyName); " is 153.
Long Statement,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The length of the statement  "	//var checkpoints = Enumerable.Range(1' NumFrames).ToDictionary(i => (long)i * colors.Count / NumFrames - 1' i => i - 1); " is 121.
Long Statement,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The length of the statement  "			// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough " is 128.
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args.Length != 10) {  	Console.WriteLine ("There must be exactly 10 arguments given!");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: for (var i = 0; i <= 24; i++) {  	twopows.Add (p.ToString ());  	p *= 2;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: for (var i = 0; i <= 24; i++) {  	twopows.Add (p.ToString ());  	p *= 2;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: p *= 2;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (/*!twopows.Contains(args[0]) ||*/!int.TryParse (args [0]' out NumColors) || NumColors > 256) {  	Console.WriteLine ("[colors] is an invalid number");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (/*!twopows.Contains(args[2]) ||*/!int.TryParse (args [2]' out Height)) {  	Console.WriteLine ("[height] is an invalid number");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [3]' out StartX)) {  	Console.WriteLine ("[startx] is an invalid number");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [4]' out StartY)) {  	Console.WriteLine ("[starty] is an invalid number");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [5]' out NumFrames)) {  	Console.WriteLine ("[frames] is an invalid number");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [6]' out seed)) {  	Console.WriteLine ("[seed] is an invalid number");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!Regex.IsMatch (args [7]' "^[01]{8}$")) {  	Console.WriteLine ("[neighbors] is not given according to the rules");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: NeighX = Enumerable.Range (0' 8).Where (i => args [7] [i] == '1').Select (i => nx [i]).ToArray ();  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: NeighX = Enumerable.Range (0' 8).Where (i => args [7] [i] == '1').Select (i => nx [i]).ToArray ();  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: NeighY = Enumerable.Range (0' 8).Where (i => args [7] [i] == '1').Select (i => ny [i]).ToArray ();  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: NeighY = Enumerable.Range (0' 8).Where (i => args [7] [i] == '1').Select (i => ny [i]).ToArray ();  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8] == "rnd")  	Sorter = new RandomComparer ();  else if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("hue-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new HueComparer (hueshift);  } else if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  	Console.WriteLine ("[sorting] has an invalid hue parameter");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  	Console.WriteLine ("[sorting] has an invalid hue parameter");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  	Console.WriteLine ("[sorting] has an invalid hue parameter");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [8].StartsWith ("lum-")) {  	int hueshift;  	if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  		Console.WriteLine ("[sorting] has an invalid hue parameter");  		return false;  	}  	Sorter = new LumComparer (hueshift);  } else {  	Console.WriteLine ("[sorting] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  	Console.WriteLine ("[sorting] has an invalid hue parameter");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  	Console.WriteLine ("[sorting] has an invalid hue parameter");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (!int.TryParse (args [8].Substring (4)' out hueshift) || hueshift < 0 || hueshift > 360) {  	Console.WriteLine ("[sorting] has an invalid hue parameter");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [9] == "one")  	Algorithm = new OneNeighborSqAlgorithm ();  else if (args [9] == "avg")  	Algorithm = new AverageNeighborAlgorithm ();  else if (args [9] == "avgsq")  	Algorithm = new AverageNeighborSqAlgorithm ();  else {  	Console.WriteLine ("[algo] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [9] == "one")  	Algorithm = new OneNeighborSqAlgorithm ();  else if (args [9] == "avg")  	Algorithm = new AverageNeighborAlgorithm ();  else if (args [9] == "avgsq")  	Algorithm = new AverageNeighborSqAlgorithm ();  else {  	Console.WriteLine ("[algo] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [9] == "one")  	Algorithm = new OneNeighborSqAlgorithm ();  else if (args [9] == "avg")  	Algorithm = new AverageNeighborAlgorithm ();  else if (args [9] == "avgsq")  	Algorithm = new AverageNeighborSqAlgorithm ();  else {  	Console.WriteLine ("[algo] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [9] == "avg")  	Algorithm = new AverageNeighborAlgorithm ();  else if (args [9] == "avgsq")  	Algorithm = new AverageNeighborSqAlgorithm ();  else {  	Console.WriteLine ("[algo] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [9] == "avg")  	Algorithm = new AverageNeighborAlgorithm ();  else if (args [9] == "avgsq")  	Algorithm = new AverageNeighborSqAlgorithm ();  else {  	Console.WriteLine ("[algo] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,parseArgs,The following statement contains a magic number: if (args [9] == "avgsq")  	Algorithm = new AverageNeighborSqAlgorithm ();  else {  	Console.WriteLine ("[algo] is not one of the allowed values");  	return false;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var r = 0; r < NumColors; r++) {  	byte R = (byte)(r * 255 / (NumColors - 1));  	for (var g = 0; g < NumColors; g++) {  		byte G = (byte)(g * 255 / (NumColors - 1));  		for (var b = 0; b < NumColors; b++) {  			colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  				R = R'  				G = G'  				B = (byte)(b * 255 / (NumColors - 1))  			};  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var r = 0; r < NumColors; r++) {  	byte R = (byte)(r * 255 / (NumColors - 1));  	for (var g = 0; g < NumColors; g++) {  		byte G = (byte)(g * 255 / (NumColors - 1));  		for (var b = 0; b < NumColors; b++) {  			colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  				R = R'  				G = G'  				B = (byte)(b * 255 / (NumColors - 1))  			};  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var r = 0; r < NumColors; r++) {  	byte R = (byte)(r * 255 / (NumColors - 1));  	for (var g = 0; g < NumColors; g++) {  		byte G = (byte)(g * 255 / (NumColors - 1));  		for (var b = 0; b < NumColors; b++) {  			colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  				R = R'  				G = G'  				B = (byte)(b * 255 / (NumColors - 1))  			};  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var g = 0; g < NumColors; g++) {  	byte G = (byte)(g * 255 / (NumColors - 1));  	for (var b = 0; b < NumColors; b++) {  		colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  			R = R'  			G = G'  			B = (byte)(b * 255 / (NumColors - 1))  		};  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var g = 0; g < NumColors; g++) {  	byte G = (byte)(g * 255 / (NumColors - 1));  	for (var b = 0; b < NumColors; b++) {  		colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  			R = R'  			G = G'  			B = (byte)(b * 255 / (NumColors - 1))  		};  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var b = 0; b < NumColors; b++) {  	colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  		R = R'  		G = G'  		B = (byte)(b * 255 / (NumColors - 1))  	};  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: colors [r * NumColors * NumColors + g * NumColors + b] = new RGB {  	R = R'  	G = G'  	B = (byte)(b * 255 / (NumColors - 1))  };  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	// give progress report to the impatient user  	if (i % 4096 == 0) {  		//Algorithm.Queue.Compress();  		Console.WriteLine ("{0:P}' queue size {1}"' (double)i / Width / Height' Algorithm.Count);  	}  	// run the algorithm  	Algorithm.Place (colors [i]);  	// save a checkpoint if needed  	if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))  	 {  		// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  		PNGDoneEvent.WaitOne ();  		pngImageIndex = checkpointIndex;  		checkpointIndex++;  		// create the image  		if (img == null)  			img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  		bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  		int stride = bitmapData.Stride;  		if (ibytes == null) {  			ibytes = new byte[stride * bitmapData.Height];  		}  		for (var y = 0; y < Height; y++) {  			for (var x = 0; x < Width; x++) {  				var c = Image [y * Width + x].Color;  				ibytes [y * stride + x * 3 + 2] = c.R;  				ibytes [y * stride + x * 3 + 1] = c.G;  				ibytes [y * stride + x * 3 + 0] = c.B;  			}  		}  		runPNGEvent.Set ();  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	// give progress report to the impatient user  	if (i % 4096 == 0) {  		//Algorithm.Queue.Compress();  		Console.WriteLine ("{0:P}' queue size {1}"' (double)i / Width / Height' Algorithm.Count);  	}  	// run the algorithm  	Algorithm.Place (colors [i]);  	// save a checkpoint if needed  	if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))  	 {  		// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  		PNGDoneEvent.WaitOne ();  		pngImageIndex = checkpointIndex;  		checkpointIndex++;  		// create the image  		if (img == null)  			img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  		bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  		int stride = bitmapData.Stride;  		if (ibytes == null) {  			ibytes = new byte[stride * bitmapData.Height];  		}  		for (var y = 0; y < Height; y++) {  			for (var x = 0; x < Width; x++) {  				var c = Image [y * Width + x].Color;  				ibytes [y * stride + x * 3 + 2] = c.R;  				ibytes [y * stride + x * 3 + 1] = c.G;  				ibytes [y * stride + x * 3 + 0] = c.B;  			}  		}  		runPNGEvent.Set ();  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	// give progress report to the impatient user  	if (i % 4096 == 0) {  		//Algorithm.Queue.Compress();  		Console.WriteLine ("{0:P}' queue size {1}"' (double)i / Width / Height' Algorithm.Count);  	}  	// run the algorithm  	Algorithm.Place (colors [i]);  	// save a checkpoint if needed  	if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))  	 {  		// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  		PNGDoneEvent.WaitOne ();  		pngImageIndex = checkpointIndex;  		checkpointIndex++;  		// create the image  		if (img == null)  			img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  		bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  		int stride = bitmapData.Stride;  		if (ibytes == null) {  			ibytes = new byte[stride * bitmapData.Height];  		}  		for (var y = 0; y < Height; y++) {  			for (var x = 0; x < Width; x++) {  				var c = Image [y * Width + x].Color;  				ibytes [y * stride + x * 3 + 2] = c.R;  				ibytes [y * stride + x * 3 + 1] = c.G;  				ibytes [y * stride + x * 3 + 0] = c.B;  			}  		}  		runPNGEvent.Set ();  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	// give progress report to the impatient user  	if (i % 4096 == 0) {  		//Algorithm.Queue.Compress();  		Console.WriteLine ("{0:P}' queue size {1}"' (double)i / Width / Height' Algorithm.Count);  	}  	// run the algorithm  	Algorithm.Place (colors [i]);  	// save a checkpoint if needed  	if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))  	 {  		// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  		PNGDoneEvent.WaitOne ();  		pngImageIndex = checkpointIndex;  		checkpointIndex++;  		// create the image  		if (img == null)  			img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  		bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  		int stride = bitmapData.Stride;  		if (ibytes == null) {  			ibytes = new byte[stride * bitmapData.Height];  		}  		for (var y = 0; y < Height; y++) {  			for (var x = 0; x < Width; x++) {  				var c = Image [y * Width + x].Color;  				ibytes [y * stride + x * 3 + 2] = c.R;  				ibytes [y * stride + x * 3 + 1] = c.G;  				ibytes [y * stride + x * 3 + 0] = c.B;  			}  		}  		runPNGEvent.Set ();  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	// give progress report to the impatient user  	if (i % 4096 == 0) {  		//Algorithm.Queue.Compress();  		Console.WriteLine ("{0:P}' queue size {1}"' (double)i / Width / Height' Algorithm.Count);  	}  	// run the algorithm  	Algorithm.Place (colors [i]);  	// save a checkpoint if needed  	if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))  	 {  		// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  		PNGDoneEvent.WaitOne ();  		pngImageIndex = checkpointIndex;  		checkpointIndex++;  		// create the image  		if (img == null)  			img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  		bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  		int stride = bitmapData.Stride;  		if (ibytes == null) {  			ibytes = new byte[stride * bitmapData.Height];  		}  		for (var y = 0; y < Height; y++) {  			for (var x = 0; x < Width; x++) {  				var c = Image [y * Width + x].Color;  				ibytes [y * stride + x * 3 + 2] = c.R;  				ibytes [y * stride + x * 3 + 1] = c.G;  				ibytes [y * stride + x * 3 + 0] = c.B;  			}  		}  		runPNGEvent.Set ();  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (i % 4096 == 0) {  	//Algorithm.Queue.Compress();  	Console.WriteLine ("{0:P}' queue size {1}"' (double)i / Width / Height' Algorithm.Count);  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))   {  	// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  	PNGDoneEvent.WaitOne ();  	pngImageIndex = checkpointIndex;  	checkpointIndex++;  	// create the image  	if (img == null)  		img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  	bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  	int stride = bitmapData.Stride;  	if (ibytes == null) {  		ibytes = new byte[stride * bitmapData.Height];  	}  	for (var y = 0; y < Height; y++) {  		for (var x = 0; x < Width; x++) {  			var c = Image [y * Width + x].Color;  			ibytes [y * stride + x * 3 + 2] = c.R;  			ibytes [y * stride + x * 3 + 1] = c.G;  			ibytes [y * stride + x * 3 + 0] = c.B;  		}  	}  	runPNGEvent.Set ();  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))   {  	// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  	PNGDoneEvent.WaitOne ();  	pngImageIndex = checkpointIndex;  	checkpointIndex++;  	// create the image  	if (img == null)  		img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  	bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  	int stride = bitmapData.Stride;  	if (ibytes == null) {  		ibytes = new byte[stride * bitmapData.Height];  	}  	for (var y = 0; y < Height; y++) {  		for (var x = 0; x < Width; x++) {  			var c = Image [y * Width + x].Color;  			ibytes [y * stride + x * 3 + 2] = c.R;  			ibytes [y * stride + x * 3 + 1] = c.G;  			ibytes [y * stride + x * 3 + 0] = c.B;  		}  	}  	runPNGEvent.Set ();  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))   {  	// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  	PNGDoneEvent.WaitOne ();  	pngImageIndex = checkpointIndex;  	checkpointIndex++;  	// create the image  	if (img == null)  		img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  	bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  	int stride = bitmapData.Stride;  	if (ibytes == null) {  		ibytes = new byte[stride * bitmapData.Height];  	}  	for (var y = 0; y < Height; y++) {  		for (var x = 0; x < Width; x++) {  			var c = Image [y * Width + x].Color;  			ibytes [y * stride + x * 3 + 2] = c.R;  			ibytes [y * stride + x * 3 + 1] = c.G;  			ibytes [y * stride + x * 3 + 0] = c.B;  		}  	}  	runPNGEvent.Set ();  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (checkpointIndex < checkpoints.Count && checkpoints [checkpointIndex] == i)//checkpoints.TryGetValue(i' out chkidx))   {  	// png compression uses only one processor' so push it into the background' limiting to one thread at a time is more than enough  	PNGDoneEvent.WaitOne ();  	pngImageIndex = checkpointIndex;  	checkpointIndex++;  	// create the image  	if (img == null)  		img = new Bitmap (Width' Height' PixelFormat.Format24bppRgb);  	bitmapData = img.LockBits (new Rectangle (0' 0' Width' Height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb);  	int stride = bitmapData.Stride;  	if (ibytes == null) {  		ibytes = new byte[stride * bitmapData.Height];  	}  	for (var y = 0; y < Height; y++) {  		for (var x = 0; x < Width; x++) {  			var c = Image [y * Width + x].Color;  			ibytes [y * stride + x * 3 + 2] = c.R;  			ibytes [y * stride + x * 3 + 1] = c.G;  			ibytes [y * stride + x * 3 + 0] = c.B;  		}  	}  	runPNGEvent.Set ();  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var c = Image [y * Width + x].Color;  		ibytes [y * stride + x * 3 + 2] = c.R;  		ibytes [y * stride + x * 3 + 1] = c.G;  		ibytes [y * stride + x * 3 + 0] = c.B;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var c = Image [y * Width + x].Color;  		ibytes [y * stride + x * 3 + 2] = c.R;  		ibytes [y * stride + x * 3 + 1] = c.G;  		ibytes [y * stride + x * 3 + 0] = c.B;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var c = Image [y * Width + x].Color;  		ibytes [y * stride + x * 3 + 2] = c.R;  		ibytes [y * stride + x * 3 + 1] = c.G;  		ibytes [y * stride + x * 3 + 0] = c.B;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var c = Image [y * Width + x].Color;  		ibytes [y * stride + x * 3 + 2] = c.R;  		ibytes [y * stride + x * 3 + 1] = c.G;  		ibytes [y * stride + x * 3 + 0] = c.B;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var c = Image [y * Width + x].Color;  	ibytes [y * stride + x * 3 + 2] = c.R;  	ibytes [y * stride + x * 3 + 1] = c.G;  	ibytes [y * stride + x * 3 + 0] = c.B;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var c = Image [y * Width + x].Color;  	ibytes [y * stride + x * 3 + 2] = c.R;  	ibytes [y * stride + x * 3 + 1] = c.G;  	ibytes [y * stride + x * 3 + 0] = c.B;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var c = Image [y * Width + x].Color;  	ibytes [y * stride + x * 3 + 2] = c.R;  	ibytes [y * stride + x * 3 + 1] = c.G;  	ibytes [y * stride + x * 3 + 0] = c.B;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var c = Image [y * Width + x].Color;  	ibytes [y * stride + x * 3 + 2] = c.R;  	ibytes [y * stride + x * 3 + 1] = c.G;  	ibytes [y * stride + x * 3 + 0] = c.B;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: ibytes [y * stride + x * 3 + 2] = c.R;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: ibytes [y * stride + x * 3 + 2] = c.R;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: ibytes [y * stride + x * 3 + 1] = c.G;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: ibytes [y * stride + x * 3 + 0] = c.B;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var pix = Image [y * Width + x].Color;  		//img2.GetPixel(x' y);  		if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  			Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  		} else {  			used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var pix = Image [y * Width + x].Color;  		//img2.GetPixel(x' y);  		if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  			Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  		} else {  			used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var pix = Image [y * Width + x].Color;  		//img2.GetPixel(x' y);  		if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  			Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  		} else {  			used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var pix = Image [y * Width + x].Color;  		//img2.GetPixel(x' y);  		if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  			Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  		} else {  			used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var pix = Image [y * Width + x].Color;  		//img2.GetPixel(x' y);  		if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  			Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  		} else {  			used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var y = 0; y < Height; y++) {  	for (var x = 0; x < Width; x++) {  		var pix = Image [y * Width + x].Color;  		//img2.GetPixel(x' y);  		if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  			Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  		} else {  			used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  		}  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var pix = Image [y * Width + x].Color;  	//img2.GetPixel(x' y);  	if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  		Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  	} else {  		used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var pix = Image [y * Width + x].Color;  	//img2.GetPixel(x' y);  	if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  		Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  	} else {  		used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var pix = Image [y * Width + x].Color;  	//img2.GetPixel(x' y);  	if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  		Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  	} else {  		used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var pix = Image [y * Width + x].Color;  	//img2.GetPixel(x' y);  	if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  		Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  	} else {  		used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var pix = Image [y * Width + x].Color;  	//img2.GetPixel(x' y);  	if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  		Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  	} else {  		used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: for (var x = 0; x < Width; x++) {  	var pix = Image [y * Width + x].Color;  	//img2.GetPixel(x' y);  	if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  		Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  	} else {  		used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  	}  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  	Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  } else {  	used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  	Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  } else {  	used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  	Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  } else {  	used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  	Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  } else {  	used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  	Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  } else {  	used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: if (used [pix.R * 256 * 256 + pix.G * 256 + pix.B]) {  	Console.WriteLine ("Color {0}/{1}/{2} is added more than once!!!!!!"' pix.R' pix.G' pix.B);  } else {  	used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  }  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  
Magic Number,FejesJoco.Tools.RGBGenerator,Program,F:\newReposMay17\HalfVoxel_RGBGenerator\Program.cs,Main,The following statement contains a magic number: used [pix.R * 256 * 256 + pix.G * 256 + pix.B] = true;  
Magic Number,FejesJoco.Tools.RGBGenerator,RGB,F:\newReposMay17\HalfVoxel_RGBGenerator\RGB.cs,GetHashCode,The following statement contains a magic number: return R * 256 * 256 + G * 256 + B;  
Magic Number,FejesJoco.Tools.RGBGenerator,RGB,F:\newReposMay17\HalfVoxel_RGBGenerator\RGB.cs,GetHashCode,The following statement contains a magic number: return R * 256 * 256 + G * 256 + B;  
Magic Number,FejesJoco.Tools.RGBGenerator,RGB,F:\newReposMay17\HalfVoxel_RGBGenerator\RGB.cs,GetHashCode,The following statement contains a magic number: return R * 256 * 256 + G * 256 + B;  
