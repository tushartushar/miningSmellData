Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MongoDB.Azure.ReplicaSets.ReplicaSetRole,Utilities,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\Utilities.cs,GetMountedPathFromBlob,The method has 6 parameters. Parameters: localCachePath' cloudDir' containerName' blobName' driveSize' mongoDrive
Long Statement,MongoDB.Azure.ReplicaSets.ReplicaSetRole,ReplicaSetRole,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\ReplicaSetRole.cs,StartMongoD,The length of the statement  "                throw new ApplicationException("Can't start mongo: " + e.Message); // throwing an exception here causes the VM to recycle " is 121.
Long Statement,MongoDB.Azure.ReplicaSets.ReplicaSetRole,Utilities,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\Utilities.cs,GetMountedPathFromBlob,The length of the statement  "                DiagnosticsHelper.TraceInformation(string.Format("Write lock acquired on azure drive' mounted as {0}' on role instance"' " is 120.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DatabaseHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DatabaseHelper.cs,RunInitializeCommandLocally,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DiagnosticsHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DiagnosticsHelper.cs,TraceInformation,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DiagnosticsHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DiagnosticsHelper.cs,TraceWarning,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DiagnosticsHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DiagnosticsHelper.cs,TraceError,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,Settings,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\Settings.cs,Settings,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,Settings,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\Settings.cs,Settings,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,Settings,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\Settings.cs,Settings,The method has an empty catch block.
Empty Catch Block,MongoDB.Azure.ReplicaSets.ReplicaSetRole,Settings,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\Settings.cs,Settings,The method has an empty catch block.
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DatabaseHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DatabaseHelper.cs,IsReplicaSetInitialized,The following statement contains a magic number: try              {                  var result = ReplicaSetGetStatus(port);                  BsonValue startupStatus;                  result.Response.TryGetValue("startupStatus"' out startupStatus);                  if (startupStatus != null)                  {                      if (startupStatus == 3)                      {                          return false;                      }                  }                  return true;              }              catch              {                  return false;              }
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DatabaseHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DatabaseHelper.cs,SetLogLevel,The following statement contains a magic number: var commandDocument = new BsonDocument {                  {"setParameter"' 1}'                  {"logLevel"' (logLevel-1)<6?(logLevel-1):5}              };
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,DatabaseHelper,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\DatabaseHelper.cs,SetLogLevel,The following statement contains a magic number: var commandDocument = new BsonDocument {                  {"setParameter"' 1}'                  {"logLevel"' (logLevel-1)<6?(logLevel-1):5}              };
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,ReplicaSetRole,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\ReplicaSetRole.cs,Run,The following statement contains a magic number: while (mongodRunning)              {                  DatabaseHelper.RunCloudCommandLocally(instanceId' mongodPort);                  Thread.Sleep(15000);                  mongodRunning = CheckIfMongodRunning();              }
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,ReplicaSetRole,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\ReplicaSetRole.cs,Run,The following statement contains a magic number: Thread.Sleep(60000);
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,ReplicaSetRole,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\ReplicaSetRole.cs,OnStart,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 12;
Magic Number,MongoDB.Azure.ReplicaSets.ReplicaSetRole,ReplicaSetRole,C:\repos\richorama_AzurePluginLibrary\utils\StartMongo\ReplicaSetRole.cs,OnStart,The following statement contains a magic number: while (!commandSucceeded)              {                  try                  {                      DatabaseHelper.RunCloudCommandLocally(instanceId' mongodPort);                      commandSucceeded = true;                  }                  catch (Exception e)                  {                      DiagnosticsHelper.TraceInformation(e.Message);                      commandSucceeded = false;                      Thread.Sleep(1000);                  }              }
