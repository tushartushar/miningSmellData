Implementation smell,Namespace,Class,File,Method,Description
Complex Method,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,Cyclomatic complexity of the method is 12
Complex Method,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,Cyclomatic complexity of the method is 12
Complex Method,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,Cyclomatic complexity of the method is 13
Long Parameter List,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,CreateNode,The method has 6 parameters.
Long Parameter List,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,CreateNode,The method has 7 parameters.
Long Statement,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The length of the statement  "				ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title); " is 121.
Long Statement,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The length of the statement  "				ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title); " is 137.
Long Statement,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,ConvertDataArrayToXml,The length of the statement  "	//((TemplXML.FormDataValueSelect)res.Values[0]).Value = ((TemplXML.FormDataValueSelect)res.Values[0]).Field.Options.First(); " is 124.
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,CreateNode,The following statement contains a magic number: node.Font = new Font ("Arial"' 12.5' GraphicsUnit.World);  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,CreateNode,The following statement contains a magic number: node.Font = new Font ("Arial"' 12.5' GraphicsUnit.World);  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,SelectLinkLook,The following statement contains a magic number: link.FontSize = 16;  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,SelectLinkLook,The following statement contains a magic number: link.ZIndex = 10;  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,UnSelectLinkLook,The following statement contains a magic number: link.FontSize = 14;  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,SelectNodeLook,The following statement contains a magic number: node.Brush = new LinearGradientBrush (Colors.Green' Colors.BurlyWood' 20);  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,SelectNodeLook,The following statement contains a magic number: node.ZIndex = 20;  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,UnSelectNodeLook,The following statement contains a magic number: node.Brush = new LinearGradientBrush (Colors.Yellow' Colors.BurlyWood' 20);  
Magic Number,emds.ViewTrainLog,DiagramHelper,C:\repos\neismit_emds\emds.ViewTrainLog\DiagramHelper.cs,UnSelectNodeLook,The following statement contains a magic number: node.ZIndex = 10;  
Magic Number,emds.ViewTrainLog,ListBoxItemWidthConverter,C:\repos\neismit_emds\emds.ViewTrainLog\ListBoxItemWidthConverter.cs,Convert,The following statement contains a magic number: return tmp - 5;  
Magic Number,emds.ViewTrainLog,ListBoxItemWidthConverter,C:\repos\neismit_emds\emds.ViewTrainLog\ListBoxItemWidthConverter.cs,ConvertBack,The following statement contains a magic number: return tmp + 5;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,cbParametrs_SelectionChanged,The following statement contains a magic number: if (cbParametrs.SelectedIndex != -1 && cbAgeNumber.SelectedItem != null) {  	Iteration curIt = cbAgeNumber.SelectedItem as Iteration;  	switch (cbParametrs.SelectedIndex) {  	case 0: {  		neuralNetIter.DecodeFromArray (curIt.WeightBefore);  		ReLabelLinks (graphIterations' neuralNetIter);  		break;  	}  	case 1: {  		neuralNetIter.DecodeFromArray (curIt.GradientR);  		ReLabelLinks (graphIterations' neuralNetIter);  		break;  	}  	case 2: {  		neuralNetIter.DecodeFromArray (curIt.NewWeights);  		ReLabelLinks (graphIterations' neuralNetIter);  		break;  	}  	}  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,cbParametrs_SelectionChanged,The following statement contains a magic number: switch (cbParametrs.SelectedIndex) {  case 0: {  	neuralNetIter.DecodeFromArray (curIt.WeightBefore);  	ReLabelLinks (graphIterations' neuralNetIter);  	break;  }  case 1: {  	neuralNetIter.DecodeFromArray (curIt.GradientR);  	ReLabelLinks (graphIterations' neuralNetIter);  	break;  }  case 2: {  	neuralNetIter.DecodeFromArray (curIt.NewWeights);  	ReLabelLinks (graphIterations' neuralNetIter);  	break;  }  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  			DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  			link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  			DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  			link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  			DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  			link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  			DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  			link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  	ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  	tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  	;  	curN.Add (tmp);  	if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  		ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  		DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  		link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  	}  	startY += diam + rastNode;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  	ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  	tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  	;  	curN.Add (tmp);  	if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  		ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  		DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  		link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  	}  	startY += diam + rastNode;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  	ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  	DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  	link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  	ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx' startY' 200' 50' templ.Fields [j].Title);  	DiagramLink link = DiagramHelper.CreateLink (diagram' q' tmp);  	link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: if (i != 0)  	startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: if (i != 0)  	startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i > 0; i--) {  	countN = countN = neuralNet.Flat.LayerCounts [i - 1];  	if (i - 1 == neuralNet.LayerCount - 2 && neuralNet.GetLayerBiasActivation (i - 1) > 0)  		countN -= 1;  	for (int x = 0; x < neuralNet.Flat.LayerCounts [i]; x++) {  		for (int y = 0; y < countN; y++) {  			tmpWeigth = neuralNet.GetWeight (neuralNet.LayerCount - i - 1' x' y).ToString ("F4");  			var link = DiagramHelper.CreateLink (diagram' nodes [i] [x]' nodes [i - 1] [y]' tmpWeigth);  			link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		}  	}  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNet,The following statement contains a magic number: if (i - 1 == neuralNet.LayerCount - 2 && neuralNet.GetLayerBiasActivation (i - 1) > 0)  	countN -= 1;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  			if (form.Values [j] is TemplXML.FormDataValueNumber) {  				var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  				label = string.Format ("{0}"' tmpF.Value);  			}  			else {  				var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  				label = tmpF.Value.Title;  			}  			var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  			tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  			graphPairLinkInput.Add (tmpLink);  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  			if (form.Values [j] is TemplXML.FormDataValueNumber) {  				var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  				label = string.Format ("{0}"' tmpF.Value);  			}  			else {  				var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  				label = tmpF.Value.Title;  			}  			var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  			tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  			graphPairLinkInput.Add (tmpLink);  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  			if (form.Values [j] is TemplXML.FormDataValueNumber) {  				var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  				label = string.Format ("{0}"' tmpF.Value);  			}  			else {  				var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  				label = tmpF.Value.Title;  			}  			var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  			tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  			graphPairLinkInput.Add (tmpLink);  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  			if (form.Values [j] is TemplXML.FormDataValueNumber) {  				var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  				label = string.Format ("{0}"' tmpF.Value);  			}  			else {  				var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  				label = tmpF.Value.Title;  			}  			var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  			tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  			graphPairLinkInput.Add (tmpLink);  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  			if (form.Values [j] is TemplXML.FormDataValueNumber) {  				var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  				label = string.Format ("{0}"' tmpF.Value);  			}  			else {  				var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  				label = tmpF.Value.Title;  			}  			var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  			tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  			graphPairLinkInput.Add (tmpLink);  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i >= 0; i--) {  	List<ShapeNode> curN = new List<ShapeNode> ();  	for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  		ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  		tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  		curN.Add (tmp);  		if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  			ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  			if (form.Values [j] is TemplXML.FormDataValueNumber) {  				var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  				label = string.Format ("{0}"' tmpF.Value);  			}  			else {  				var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  				label = tmpF.Value.Title;  			}  			var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  			tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  			graphPairLinkInput.Add (tmpLink);  		}  		startY += diam + rastNode;  	}  	nodes [i] = curN;  	startX += dx;  	if (startYMax < startY)  		startYMax = startY;  	if (i != 0)  		startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  	ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  	tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  	curN.Add (tmp);  	if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  		ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  		if (form.Values [j] is TemplXML.FormDataValueNumber) {  			var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  			label = string.Format ("{0}"' tmpF.Value);  		}  		else {  			var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  			label = tmpF.Value.Title;  		}  		var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  		tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		graphPairLinkInput.Add (tmpLink);  	}  	startY += diam + rastNode;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  	ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  	tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  	curN.Add (tmp);  	if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  		ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  		if (form.Values [j] is TemplXML.FormDataValueNumber) {  			var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  			label = string.Format ("{0}"' tmpF.Value);  		}  		else {  			var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  			label = tmpF.Value.Title;  		}  		var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  		tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		graphPairLinkInput.Add (tmpLink);  	}  	startY += diam + rastNode;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  	ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  	tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  	curN.Add (tmp);  	if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  		ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  		if (form.Values [j] is TemplXML.FormDataValueNumber) {  			var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  			label = string.Format ("{0}"' tmpF.Value);  		}  		else {  			var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  			label = tmpF.Value.Title;  		}  		var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  		tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		graphPairLinkInput.Add (tmpLink);  	}  	startY += diam + rastNode;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int j = 0; j < neuralNet.Flat.LayerCounts [i]; j++) {  	ShapeNode tmp = DiagramHelper.CreateNode (diagram' startX' startY' diam' diam' j.ToString ());  	tmp.MouseLeftButtonDown += nodeSelected_MouseLeftButtonDown;  	curN.Add (tmp);  	if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  		ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  		if (form.Values [j] is TemplXML.FormDataValueNumber) {  			var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  			label = string.Format ("{0}"' tmpF.Value);  		}  		else {  			var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  			label = tmpF.Value.Title;  		}  		var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  		tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		graphPairLinkInput.Add (tmpLink);  	}  	startY += diam + rastNode;  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  	ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  	if (form.Values [j] is TemplXML.FormDataValueNumber) {  		var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  		label = string.Format ("{0}"' tmpF.Value);  	}  	else {  		var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  		label = tmpF.Value.Title;  	}  	var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  	tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  	graphPairLinkInput.Add (tmpLink);  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  	ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  	if (form.Values [j] is TemplXML.FormDataValueNumber) {  		var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  		label = string.Format ("{0}"' tmpF.Value);  	}  	else {  		var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  		label = tmpF.Value.Title;  	}  	var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  	tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  	graphPairLinkInput.Add (tmpLink);  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  	ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  	if (form.Values [j] is TemplXML.FormDataValueNumber) {  		var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  		label = string.Format ("{0}"' tmpF.Value);  	}  	else {  		var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  		label = tmpF.Value.Title;  	}  	var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  	tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  	graphPairLinkInput.Add (tmpLink);  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i == neuralNet.LayerCount - 1 && j < neuralNet.InputCount) {  	ShapeNode q = DiagramHelper.CreateNode (Shapes.Rectangle' diagram' startX - dx - 200' startY - 10' 200' 50' form.Values [j].Field.Title);  	if (form.Values [j] is TemplXML.FormDataValueNumber) {  		var tmpF = form.Values [j] as TemplXML.FormDataValueNumber;  		label = string.Format ("{0}"' tmpF.Value);  	}  	else {  		var tmpF = form.Values [j] as TemplXML.FormDataValueSelect;  		label = tmpF.Value.Title;  	}  	var tmpLink = DiagramHelper.CreateLink (diagram' q' tmp' label);  	tmpLink.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  	graphPairLinkInput.Add (tmpLink);  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i != 0)  	startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i != 0)  	startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: startY = startYMax / 2 - neuralNet.Flat.LayerCounts [i - 1] * (rastNode + diam) / 2;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: for (int i = neuralNet.LayerCount - 1; i > 0; i--) {  	countN = countN = neuralNet.Flat.LayerCounts [i - 1];  	if (i - 1 == neuralNet.LayerCount - 2 && neuralNet.GetLayerBiasActivation (i - 1) > 0)  		countN -= 1;  	for (int x = 0; x < neuralNet.Flat.LayerCounts [i]; x++) {  		for (int y = 0; y < countN; y++) {  			tmpWeigth = neuralNet.GetWeight (neuralNet.LayerCount - i - 1' x' y).ToString ("F4");  			var link = DiagramHelper.CreateLink (diagram' nodes [i] [x]' nodes [i - 1] [y]' tmpWeigth);  			link.MouseLeftButtonDown += linkSelect_MouseLeftButtonDown;  		}  	}  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawNeuralNetPair,The following statement contains a magic number: if (i - 1 == neuralNet.LayerCount - 2 && neuralNet.GetLayerBiasActivation (i - 1) > 0)  	countN -= 1;  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following statement contains a magic number: if (cbParametrsPair.SelectedIndex != -1 && cbProcessPair.SelectedItem != null) {  	ProcessPair curPP = cbProcessPair.SelectedItem as ProcessPair;  	switch (cbParametrsPair.SelectedIndex) {  	case 0: {  		//граиент набора данных  		neuralNetPair.DecodeFromArray (curPP.PairGradient);  		for (int i = 0; i < neuralNetPair.LayerCount; i++) {  			for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  				graphPair [i] [j].Text = j.ToString ();  				graphPair [i] [j].ToolTip = j;  			}  		}  		ReLabelLinks (graphPair' neuralNetPair);  		break;  	}  	case 1: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  		break;  	}  	case 2: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  		break;  	}  	case 3: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  		break;  	}  	case 4: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  		break;  	}  	}  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following statement contains a magic number: if (cbParametrsPair.SelectedIndex != -1 && cbProcessPair.SelectedItem != null) {  	ProcessPair curPP = cbProcessPair.SelectedItem as ProcessPair;  	switch (cbParametrsPair.SelectedIndex) {  	case 0: {  		//граиент набора данных  		neuralNetPair.DecodeFromArray (curPP.PairGradient);  		for (int i = 0; i < neuralNetPair.LayerCount; i++) {  			for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  				graphPair [i] [j].Text = j.ToString ();  				graphPair [i] [j].ToolTip = j;  			}  		}  		ReLabelLinks (graphPair' neuralNetPair);  		break;  	}  	case 1: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  		break;  	}  	case 2: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  		break;  	}  	case 3: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  		break;  	}  	case 4: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  		break;  	}  	}  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following statement contains a magic number: if (cbParametrsPair.SelectedIndex != -1 && cbProcessPair.SelectedItem != null) {  	ProcessPair curPP = cbProcessPair.SelectedItem as ProcessPair;  	switch (cbParametrsPair.SelectedIndex) {  	case 0: {  		//граиент набора данных  		neuralNetPair.DecodeFromArray (curPP.PairGradient);  		for (int i = 0; i < neuralNetPair.LayerCount; i++) {  			for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  				graphPair [i] [j].Text = j.ToString ();  				graphPair [i] [j].ToolTip = j;  			}  		}  		ReLabelLinks (graphPair' neuralNetPair);  		break;  	}  	case 1: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  		break;  	}  	case 2: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  		break;  	}  	case 3: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  		break;  	}  	case 4: {  		ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  		break;  	}  	}  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following statement contains a magic number: switch (cbParametrsPair.SelectedIndex) {  case 0: {  	//граиент набора данных  	neuralNetPair.DecodeFromArray (curPP.PairGradient);  	for (int i = 0; i < neuralNetPair.LayerCount; i++) {  		for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  			graphPair [i] [j].Text = j.ToString ();  			graphPair [i] [j].ToolTip = j;  		}  	}  	ReLabelLinks (graphPair' neuralNetPair);  	break;  }  case 1: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  	break;  }  case 2: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  	break;  }  case 3: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  	break;  }  case 4: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  	break;  }  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following statement contains a magic number: switch (cbParametrsPair.SelectedIndex) {  case 0: {  	//граиент набора данных  	neuralNetPair.DecodeFromArray (curPP.PairGradient);  	for (int i = 0; i < neuralNetPair.LayerCount; i++) {  		for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  			graphPair [i] [j].Text = j.ToString ();  			graphPair [i] [j].ToolTip = j;  		}  	}  	ReLabelLinks (graphPair' neuralNetPair);  	break;  }  case 1: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  	break;  }  case 2: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  	break;  }  case 3: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  	break;  }  case 4: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  	break;  }  }  
Magic Number,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following statement contains a magic number: switch (cbParametrsPair.SelectedIndex) {  case 0: {  	//граиент набора данных  	neuralNetPair.DecodeFromArray (curPP.PairGradient);  	for (int i = 0; i < neuralNetPair.LayerCount; i++) {  		for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  			graphPair [i] [j].Text = j.ToString ();  			graphPair [i] [j].ToolTip = j;  		}  	}  	ReLabelLinks (graphPair' neuralNetPair);  	break;  }  case 1: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  	break;  }  case 2: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  	break;  }  case 3: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  	break;  }  case 4: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  	break;  }  }  
Missing Default,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,cbParametrs_SelectionChanged,The following switch statement is missing a default case: switch (cbParametrs.SelectedIndex) {  case 0: {  	neuralNetIter.DecodeFromArray (curIt.WeightBefore);  	ReLabelLinks (graphIterations' neuralNetIter);  	break;  }  case 1: {  	neuralNetIter.DecodeFromArray (curIt.GradientR);  	ReLabelLinks (graphIterations' neuralNetIter);  	break;  }  case 2: {  	neuralNetIter.DecodeFromArray (curIt.NewWeights);  	ReLabelLinks (graphIterations' neuralNetIter);  	break;  }  }  
Missing Default,emds.ViewTrainLog,MainWindow,C:\repos\neismit_emds\emds.ViewTrainLog\MainWindow.xaml.cs,DrawPairParametrs,The following switch statement is missing a default case: switch (cbParametrsPair.SelectedIndex) {  case 0: {  	//граиент набора данных  	neuralNetPair.DecodeFromArray (curPP.PairGradient);  	for (int i = 0; i < neuralNetPair.LayerCount; i++) {  		for (int j = 0; j < neuralNetPair.Flat.LayerCounts [i]; j++) {  			graphPair [i] [j].Text = j.ToString ();  			graphPair [i] [j].ToolTip = j;  		}  	}  	ReLabelLinks (graphPair' neuralNetPair);  	break;  }  case 1: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerSums);  	break;  }  case 2: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.LayerOutput);  	break;  }  case 3: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.Error);  	break;  }  case 4: {  	ReLabelNeirons (graphPair' neuralNetPair' curPP.PairLayerDelta);  	break;  }  }  
