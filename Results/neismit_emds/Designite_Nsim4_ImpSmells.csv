Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xa1aa8795de6d838b,The method has 109 lines of code.
Long Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xe53cd3e4075af2b3,The method has 122 lines of code.
Long Method,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The method has 139 lines of code.
Long Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The method has 283 lines of code.
Long Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The method has 212 lines of code.
Long Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x63f05b2556ac6889,The method has 120 lines of code.
Long Method,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The method has 542 lines of code.
Long Method,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The method has 127 lines of code.
Long Method,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The method has 252 lines of code.
Long Method,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The method has 223 lines of code.
Long Method,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,The method has 342 lines of code.
Long Method,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The method has 259 lines of code.
Long Method,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The method has 318 lines of code.
Long Method,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,x83ae6ab9dbae58e2,The method has 120 lines of code.
Long Method,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Read,The method has 133 lines of code.
Long Method,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The method has 112 lines of code.
Long Method,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The method has 124 lines of code.
Long Method,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,The method has 318 lines of code.
Long Method,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The method has 332 lines of code.
Long Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The method has 156 lines of code.
Long Method,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The method has 167 lines of code.
Long Method,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The method has 280 lines of code.
Long Method,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The method has 112 lines of code.
Long Method,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The method has 100 lines of code.
Long Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The method has 514 lines of code.
Long Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,The method has 111 lines of code.
Long Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The method has 164 lines of code.
Long Method,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,x89083ecc6edaa4e0,The method has 126 lines of code.
Long Method,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The method has 162 lines of code.
Long Method,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,The method has 240 lines of code.
Long Method,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The method has 123 lines of code.
Long Method,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The method has 106 lines of code.
Long Method,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Init,The method has 164 lines of code.
Long Method,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The method has 269 lines of code.
Long Method,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The method has 127 lines of code.
Long Method,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The method has 169 lines of code.
Long Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The method has 201 lines of code.
Long Method,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The method has 129 lines of code.
Long Method,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The method has 136 lines of code.
Long Method,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdbksb,The method has 118 lines of code.
Long Method,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The method has 778 lines of code.
Long Method,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdfit,The method has 130 lines of code.
Long Method,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,PrepareOutputFile,The method has 100 lines of code.
Long Method,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,Analyze,The method has 170 lines of code.
Long Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The method has 140 lines of code.
Long Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The method has 119 lines of code.
Long Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The method has 124 lines of code.
Long Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The method has 310 lines of code.
Long Method,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The method has 133 lines of code.
Long Method,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The method has 104 lines of code.
Long Method,Encog.App.Analyst.Commands,CmdBalance,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdBalance.cs,ExecuteCommand,The method has 101 lines of code.
Long Method,Encog.App.Analyst.Script.Prop,PropertyEntry,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyEntry.cs,Validate,The method has 124 lines of code.
Long Method,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The method has 139 lines of code.
Long Method,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The method has 260 lines of code.
Long Method,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Save,The method has 148 lines of code.
Long Method,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The method has 396 lines of code.
Long Method,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The method has 248 lines of code.
Long Method,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The method has 159 lines of code.
Long Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The method has 142 lines of code.
Long Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The method has 211 lines of code.
Long Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The method has 216 lines of code.
Long Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Iteration,The method has 211 lines of code.
Long Method,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,Read,The method has 175 lines of code.
Long Method,Encog.Neural.CPN,CPNNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\CPNNetwork.cs,ComputeInstar,The method has 110 lines of code.
Long Method,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The method has 169 lines of code.
Long Method,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,The method has 100 lines of code.
Long Method,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The method has 105 lines of code.
Long Method,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The method has 100 lines of code.
Long Method,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The method has 116 lines of code.
Long Method,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,x972236628de6c041,The method has 138 lines of code.
Long Method,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,ExtractFields,The method has 154 lines of code.
Long Method,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,Normalize,The method has 128 lines of code.
Long Method,Encog.Neural.Networks.Structure,AnalyzeNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\AnalyzeNetwork.cs,AnalyzeNetwork,The method has 144 lines of code.
Long Method,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The method has 287 lines of code.
Long Method,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The method has 158 lines of code.
Long Method,Encog.ML.Data.Buffer,BinaryDataLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BinaryDataLoader.cs,Binary2External,The method has 111 lines of code.
Long Method,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,xc9abdba3fd865542,The method has 104 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Det,The method has 164 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The method has 176 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The method has 389 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PINV,The method has 210 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PrintMat,The method has 204 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The method has 389 lines of code.
Long Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The method has 1165 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,LUDecomposition,The method has 167 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Inverse,The method has 134 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Solve,The method has 108 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Solve,The method has 112 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,QRDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\QRDecomposition.cs,QRDecomposition,The method has 121 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,QRDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\QRDecomposition.cs,Solve,The method has 110 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,Solve,The method has 107 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,EigenvalueDecomposition,The method has 113 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,The method has 276 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The method has 242 lines of code.
Long Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xce4ff3ba0c1ec350,The method has 327 lines of code.
Long Method,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The method has 136 lines of code.
Long Method,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x6aa420caefd31103,The method has 137 lines of code.
Long Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The method has 169 lines of code.
Long Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,x107a35a18a760853,The method has 150 lines of code.
Long Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,xfb5fe5d1c31436ed,The method has 154 lines of code.
Long Method,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The method has 112 lines of code.
Long Method,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x1946c594c0dc53f6,The method has 132 lines of code.
Long Method,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,The method has 144 lines of code.
Long Method,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadContents,The method has 131 lines of code.
Long Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The method has 194 lines of code.
Long Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The method has 102 lines of code.
Long Method,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,x64b4cdf32944d344,The method has 107 lines of code.
Long Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The method has 166 lines of code.
Long Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The method has 226 lines of code.
Long Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xdd8dc65aef162a86,The method has 139 lines of code.
Long Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xfd33c8a1cd5c5a19,The method has 152 lines of code.
Long Method,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The method has 280 lines of code.
Complex Method,Nsim,Config,C:\repos\neismit_emds\Nsim4\Nsim\Config.cs,Config,Cyclomatic complexity of the method is 15
Complex Method,Nsim,RandomDecorator,C:\repos\neismit_emds\Nsim4\Nsim\RandomDecorator!1.cs,SetXml,Cyclomatic complexity of the method is 9
Complex Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,x20aee281977480cf,Cyclomatic complexity of the method is 10
Complex Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,x5416132d843fbf5e,Cyclomatic complexity of the method is 8
Complex Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xa1aa8795de6d838b,Cyclomatic complexity of the method is 15
Complex Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xd73759c200f2f3a3,Cyclomatic complexity of the method is 14
Complex Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xdc3df58d08a8655f,Cyclomatic complexity of the method is 8
Complex Method,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xe53cd3e4075af2b3,Cyclomatic complexity of the method is 21
Complex Method,Nsim,ServiceProvider,C:\repos\neismit_emds\Nsim4\Nsim\ServiceProvider.cs,FairEvent,Cyclomatic complexity of the method is 8
Complex Method,Nsim,ChartWindow,C:\repos\neismit_emds\Nsim4\Nsim\ChartWindow.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 14
Complex Method,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xde3e9f8cc0169fde,Cyclomatic complexity of the method is 11
Complex Method,Nsim,RandomConfig,C:\repos\neismit_emds\Nsim4\Nsim\RandomConfig.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 11
Complex Method,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,Cyclomatic complexity of the method is 18
Complex Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,Cyclomatic complexity of the method is 45
Complex Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,Cyclomatic complexity of the method is 28
Complex Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 9
Complex Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x63f05b2556ac6889,Cyclomatic complexity of the method is 21
Complex Method,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,xd2726b43b7407df0,Cyclomatic complexity of the method is 8
Complex Method,Nsim,x97d09efa0c4ea9c0,C:\repos\neismit_emds\Nsim4\Nsim\x97d09efa0c4ea9c0.cs,CalcData,Cyclomatic complexity of the method is 9
Complex Method,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 23
Complex Method,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,Cyclomatic complexity of the method is 85
Complex Method,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,Cyclomatic complexity of the method is 23
Complex Method,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,Cyclomatic complexity of the method is 46
Complex Method,Nsim,ImportExcelFileDialog,C:\repos\neismit_emds\Nsim4\Nsim\ImportExcelFileDialog.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 14
Complex Method,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,Cyclomatic complexity of the method is 43
Complex Method,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 13
Complex Method,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,xd7c6aaa737a7575c,Cyclomatic complexity of the method is 8
Complex Method,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,GetTrainer,Cyclomatic complexity of the method is 8
Complex Method,Nsim,SimpleFunctionalPreprocessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorConfig.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 14
Complex Method,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,Cyclomatic complexity of the method is 63
Complex Method,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,Cyclomatic complexity of the method is 10
Complex Method,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,GenericCorrelation,Cyclomatic complexity of the method is 9
Complex Method,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,ConvertFrom,Cyclomatic complexity of the method is 14
Complex Method,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValuesDictionary,Cyclomatic complexity of the method is 10
Complex Method,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,Cyclomatic complexity of the method is 40
Complex Method,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,Cyclomatic complexity of the method is 56
Complex Method,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 9
Complex Method,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,x83ae6ab9dbae58e2,Cyclomatic complexity of the method is 19
Complex Method,Nsim,DataProcessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\DataProcessorConfig.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 12
Complex Method,Nsim,LevenbergMarquardtTrainingTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\LevenbergMarquardtTrainingTrainerDecorator.cs,GetTrainer,Cyclomatic complexity of the method is 11
Complex Method,Nsim,TrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainerConfig.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 11
Complex Method,Nsim,NetConfig,C:\repos\neismit_emds\Nsim4\Nsim\NetConfig.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 11
Complex Method,Nsim,HiddenLayersConfig,C:\repos\neismit_emds\Nsim4\Nsim\HiddenLayersConfig.cs,xcecac585893337d9,Cyclomatic complexity of the method is 11
Complex Method,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 47
Complex Method,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x2800617c7cbf536c,Cyclomatic complexity of the method is 10
Complex Method,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x628e6c716ec340be,Cyclomatic complexity of the method is 11
Complex Method,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,PostIteration,Cyclomatic complexity of the method is 10
Complex Method,Encog.ML.Train.Strategy,RequiredImprovementStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\RequiredImprovementStrategy.cs,PreIteration,Cyclomatic complexity of the method is 15
Complex Method,Encog.ML.Train.Strategy,HybridStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\HybridStrategy.cs,PostIteration,Cyclomatic complexity of the method is 15
Complex Method,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,Cyclomatic complexity of the method is 8
Complex Method,Encog.MathUtil.Randomize,NguyenWidrowRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\NguyenWidrowRandomizer.cs,Randomize,Cyclomatic complexity of the method is 9
Complex Method,Encog.MathUtil.Randomize,BasicRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\BasicRandomizer.cs,Randomize,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Read,Cyclomatic complexity of the method is 25
Complex Method,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Save,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,ValidateNeuron,Cyclomatic complexity of the method is 8
Complex Method,Encog.Engine.Network.Activation,ActivationCompetitive,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationCompetitive.cs,ActivationFunction,Cyclomatic complexity of the method is 18
Complex Method,Encog.ML.Data.Buffer.CODEC,CSVDataCODEC,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\CODEC\CSVDataCODEC.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Data.Buffer.CODEC,SQLCODEC,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\CODEC\SQLCODEC.cs,Read,Cyclomatic complexity of the method is 10
Complex Method,Encog.Util.Concurrency,DetermineWorkload,C:\repos\neismit_emds\Nsim4\Encog\Util\Concurrency\DetermineWorkload.cs,DetermineWorkload,Cyclomatic complexity of the method is 8
Complex Method,Encog.Util.Concurrency,DetermineWorkload,C:\repos\neismit_emds\Nsim4\Encog\Util\Concurrency\DetermineWorkload.cs,CalculateWorkers,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,CalculateHessian,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,Cyclomatic complexity of the method is 17
Complex Method,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,Cyclomatic complexity of the method is 22
Complex Method,Encog.Neural.SOM.Training.Neighborhood,BestMatchingUnit,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BestMatchingUnit.cs,CalculateBMU,Cyclomatic complexity of the method is 14
Complex Method,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,Iteration,Cyclomatic complexity of the method is 18
Complex Method,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,x77dc8b40d5dfd791,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,Cyclomatic complexity of the method is 14
Complex Method,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,Cyclomatic complexity of the method is 23
Complex Method,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF1D,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF1D.cs,NeighborhoodRBF1D,Cyclomatic complexity of the method is 17
Complex Method,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,Mate,Cyclomatic complexity of the method is 18
Complex Method,Encog.ML.Genetic.Crossover,Splice,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Crossover\Splice.cs,Mate,Cyclomatic complexity of the method is 11
Complex Method,Encog.ML.Genetic.Crossover,SpliceNoRepeat,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Crossover\SpliceNoRepeat.cs,Mate,Cyclomatic complexity of the method is 11
Complex Method,Encog.ML.Genetic.Mutate,MutatePerturb,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Mutate\MutatePerturb.cs,PerformMutation,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Genetic.Mutate,MutateShuffle,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Mutate\MutateShuffle.cs,PerformMutation,Cyclomatic complexity of the method is 12
Complex Method,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,Cyclomatic complexity of the method is 68
Complex Method,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,Cyclomatic complexity of the method is 66
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineInputCount,Cyclomatic complexity of the method is 11
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineInputFieldCount,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineOutputCount,Cyclomatic complexity of the method is 11
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineTotalInputFieldCount,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineUniqueColumns,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineUniqueInputFieldCount,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineUniqueOutputFieldCount,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,ExecuteTask,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,Cyclomatic complexity of the method is 28
Complex Method,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,Cyclomatic complexity of the method is 8
Complex Method,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,Cyclomatic complexity of the method is 29
Complex Method,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseInt,Cyclomatic complexity of the method is 10
Complex Method,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,Cyclomatic complexity of the method is 8
Complex Method,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseMatrix,Cyclomatic complexity of the method is 8
Complex Method,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseParams,Cyclomatic complexity of the method is 9
Complex Method,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,SplitColumns,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Data.Market.Loader,YahooFinanceLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\YahooFinanceLoader.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x328c0b730b0ebcd7,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,Cyclomatic complexity of the method is 37
Complex Method,Encog.ML.Data.Market.Loader,CSVLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVLoader.cs,fromStringCSVFormattoCSVFormat,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Data.Market.Loader,CSVLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVLoader.cs,ReadAndCallLoader,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,DownSample,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,DownSampleRegion,Cyclomatic complexity of the method is 17
Complex Method,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,FindBounds,Cyclomatic complexity of the method is 16
Complex Method,Encog.Util.Time,xfa6e3ed04cba2b4d,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\xfa6e3ed04cba2b4d.cs,xeeb06d6ba66e71e9,Cyclomatic complexity of the method is 12
Complex Method,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,Cyclomatic complexity of the method is 11
Complex Method,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,x245c043bccc9a2f0,Cyclomatic complexity of the method is 19
Complex Method,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,xa7b27eb509663b32,Cyclomatic complexity of the method is 12
Complex Method,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,xb0b4ff1622a01d12,Cyclomatic complexity of the method is 16
Complex Method,Encog.Util.Normalize.Target,NormalizationStorageMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Target\NormalizationStorageMLDataSet.cs,Write,Cyclomatic complexity of the method is 11
Complex Method,Encog.ML.Factory.Method,PNNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\PNNFactory.cs,Create,Cyclomatic complexity of the method is 11
Complex Method,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,Cyclomatic complexity of the method is 12
Complex Method,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,Cyclomatic complexity of the method is 44
Complex Method,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,Cyclomatic complexity of the method is 20
Complex Method,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,Cyclomatic complexity of the method is 14
Complex Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,Cyclomatic complexity of the method is 101
Complex Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,Cyclomatic complexity of the method is 25
Complex Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,Cyclomatic complexity of the method is 41
Complex Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x73ce32110d615317,Cyclomatic complexity of the method is 14
Complex Method,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,Cyclomatic complexity of the method is 12
Complex Method,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,Cyclomatic complexity of the method is 8
Complex Method,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x99240096a9e3842c,Cyclomatic complexity of the method is 13
Complex Method,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xc60aa42cfbd0c1ed,Cyclomatic complexity of the method is 24
Complex Method,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,get_x4a3f0a05c02f235f,Cyclomatic complexity of the method is 9
Complex Method,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,x89083ecc6edaa4e0,Cyclomatic complexity of the method is 26
Complex Method,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,Cyclomatic complexity of the method is 36
Complex Method,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,Cyclomatic complexity of the method is 55
Complex Method,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,Cyclomatic complexity of the method is 23
Complex Method,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,Cyclomatic complexity of the method is 13
Complex Method,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatTimeSpan,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util,EngineArray,C:\repos\neismit_emds\Nsim4\Encog\Util\EngineArray.cs,MaxIndex,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util,EngineArray,C:\repos\neismit_emds\Nsim4\Encog\Util\EngineArray.cs,MaxIndex,Cyclomatic complexity of the method is 8
Complex Method,Encog.Util,HTMLReport,C:\repos\neismit_emds\Nsim4\Encog\Util\HTMLReport.cs,Encode,Cyclomatic complexity of the method is 16
Complex Method,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,Cyclomatic complexity of the method is 18
Complex Method,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,Cyclomatic complexity of the method is 19
Complex Method,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,Cyclomatic complexity of the method is 17
Complex Method,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,ClearContext,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Compute,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,ComputeLayer,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Init,Cyclomatic complexity of the method is 28
Complex Method,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Read,Cyclomatic complexity of the method is 15
Complex Method,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,Cyclomatic complexity of the method is 51
Complex Method,Encog.Neural.SOM,PersistSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\PersistSOM.cs,Read,Cyclomatic complexity of the method is 14
Complex Method,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,Cyclomatic complexity of the method is 34
Complex Method,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,Cyclomatic complexity of the method is 28
Complex Method,Encog.Plugin.SystemPlugin,SystemMethodsPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemMethodsPlugin.cs,CreateMethod,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,Cyclomatic complexity of the method is 36
Complex Method,Encog.Neural.Networks.Training.Strategy,SmartMomentum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartMomentum.cs,PostIteration,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,Cyclomatic complexity of the method is 12
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeight,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,TrainFlatNetworkSCG,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,Cyclomatic complexity of the method is 34
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkQPROP,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkQPROP.cs,UpdateWeight,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,CalculateGradients,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,Iteration,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,xd586e0c16bdae7fc,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,GradientWorker,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,x5d3a1f6283012a22,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,xdc972101a59889e3,Cyclomatic complexity of the method is 10
Complex Method,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,Cyclomatic complexity of the method is 15
Complex Method,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,x308cb2f3483de2a6,Cyclomatic complexity of the method is 12
Complex Method,Encog.ML.SVM.Training,EncodeSVMProblem,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\EncodeSVMProblem.cs,Encode,Cyclomatic complexity of the method is 12
Complex Method,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,Iteration,Cyclomatic complexity of the method is 15
Complex Method,Encog.ML.Anneal,SimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\ML\Anneal\SimulatedAnnealing!1.cs,Iteration,Cyclomatic complexity of the method is 11
Complex Method,Encog.ML.Genetic,BasicGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\BasicGeneticAlgorithm.cs,Iteration,Cyclomatic complexity of the method is 8
Complex Method,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,Cyclomatic complexity of the method is 23
Complex Method,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,GetSmallestDistance,Cyclomatic complexity of the method is 11
Complex Method,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,NumericRange,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Data.Basic,BasicMLDataPair,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataPair.cs,Clone,Cyclomatic complexity of the method is 13
Complex Method,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,Cyclomatic complexity of the method is 15
Complex Method,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,Cyclomatic complexity of the method is 15
Complex Method,Encog.ML.Data.Basic,BasicMLComplexData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLComplexData.cs,BasicMLComplexData,Cyclomatic complexity of the method is 13
Complex Method,Encog.Util.Simple,TrainingSetUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingSetUtil.cs,LoadCSVTOMemory,Cyclomatic complexity of the method is 13
Complex Method,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,Cyclomatic complexity of the method is 20
Complex Method,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,ConvertCSV2Binary,Cyclomatic complexity of the method is 8
Complex Method,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,Cyclomatic complexity of the method is 10
Complex Method,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,Cyclomatic complexity of the method is 12
Complex Method,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SimpleFeedForward,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdbksb,Cyclomatic complexity of the method is 23
Complex Method,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,Cyclomatic complexity of the method is 145
Complex Method,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdfit,Cyclomatic complexity of the method is 26
Complex Method,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,PerformBasicCounts,Cyclomatic complexity of the method is 13
Complex Method,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,PrepareOutputFile,Cyclomatic complexity of the method is 15
Complex Method,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,ReadHeaders,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,UpdateStatus,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,Analyze,Cyclomatic complexity of the method is 18
Complex Method,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,x0049197442052640,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,Cyclomatic complexity of the method is 23
Complex Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x3ed9c05d3bbdec37,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,Cyclomatic complexity of the method is 24
Complex Method,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,Cyclomatic complexity of the method is 77
Complex Method,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,Cyclomatic complexity of the method is 23
Complex Method,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,Cyclomatic complexity of the method is 23
Complex Method,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,Cyclomatic complexity of the method is 25
Complex Method,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DetermineClass,Cyclomatic complexity of the method is 11
Complex Method,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DetermineClass,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DetermineMode,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,MakeClass,Cyclomatic complexity of the method is 11
Complex Method,Encog.Util.Arrayutil,TemporalWindowArray,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowArray.cs,Process,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,DetermineClass,Cyclomatic complexity of the method is 11
Complex Method,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,EncodeHeaders,Cyclomatic complexity of the method is 18
Complex Method,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,CSVHeaders,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,GetSlice,Cyclomatic complexity of the method is 13
Complex Method,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,ParseTimeSlice,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,TagColumn,Cyclomatic complexity of the method is 19
Complex Method,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,x9437465b343430ed,Cyclomatic complexity of the method is 15
Complex Method,Encog.App.Analyst.Util,ConvertStringConst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\ConvertStringConst.cs,AnalystFileFormat2String,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Analyst.Util,ConvertStringConst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\ConvertStringConst.cs,ConvertToCSVFormat,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.Util,ConvertStringConst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\ConvertStringConst.cs,String2AnalystFileFormat,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.Commands,CmdEvaluateRaw,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdEvaluateRaw.cs,ExecuteCommand,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,x163e1f9de31a8b41,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,x176a88b9713cb7be,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.Commands,CmdNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdNormalize.cs,ExecuteCommand,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.Commands,CmdRandomize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdRandomize.cs,ExecuteCommand,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Analyst.Commands,CmdSegregate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSegregate.cs,ExecuteCommand,Cyclomatic complexity of the method is 13
Complex Method,Encog.App.Analyst.Commands,CmdBalance,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdBalance.cs,ExecuteCommand,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.Commands,CmdSet,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSet.cs,ExecuteCommand,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ClearFilenames,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.Script.Prop,PropertyEntry,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyEntry.cs,Validate,Cyclomatic complexity of the method is 24
Complex Method,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,Cyclomatic complexity of the method is 23
Complex Method,Encog.ML.Factory,MLMethodFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLMethodFactory.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Factory,MLTrainFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLTrainFactory.cs,Create,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,Cyclomatic complexity of the method is 10
Complex Method,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,ExtractFromIndex,Cyclomatic complexity of the method is 9
Complex Method,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,LoadPage,Cyclomatic complexity of the method is 11
Complex Method,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,Cyclomatic complexity of the method is 16
Complex Method,Encog.Util.HTTP,FormUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\FormUtility.cs,AddFile,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.HTTP,URLUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\URLUtility.cs,ConstructURL,Cyclomatic complexity of the method is 19
Complex Method,Encog.Util.HTTP,URLUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\URLUtility.cs,ConvertFilename,Cyclomatic complexity of the method is 20
Complex Method,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Read,Cyclomatic complexity of the method is 12
Complex Method,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,RunUntilStable,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,CalculateEnergy,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Thermal,PersistBoltzmann,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistBoltzmann.cs,Read,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.Thermal,BoltzmannMachine,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\BoltzmannMachine.cs,EstablishEquilibrium,Cyclomatic complexity of the method is 16
Complex Method,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,equals,Cyclomatic complexity of the method is 16
Complex Method,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Data.Specific,BiPolarMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\BiPolarMLData.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Save,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Compute,Cyclomatic complexity of the method is 16
Complex Method,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ComputeF2,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.BAM,PersistBAM,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\PersistBAM.cs,Read,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,PropagateLayer,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,Cyclomatic complexity of the method is 51
Complex Method,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Save,Cyclomatic complexity of the method is 21
Complex Method,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,Cyclomatic complexity of the method is 67
Complex Method,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,Cyclomatic complexity of the method is 41
Complex Method,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,StringToNeuronType,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.NEAT,NEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNetwork.cs,Compute,Cyclomatic complexity of the method is 18
Complex Method,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,String2NeuronType,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,ToString,Cyclomatic complexity of the method is 17
Complex Method,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,Cyclomatic complexity of the method is 31
Complex Method,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,Cyclomatic complexity of the method is 11
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,Cyclomatic complexity of the method is 27
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,Cyclomatic complexity of the method is 39
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,Decode,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,Cyclomatic complexity of the method is 17
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,IsDuplicateLink,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,MutateActivationResponse,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,MutateWeights,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.NEAT.Training,NEATInnovation,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovation.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,AdjustSpeciesScore,Cyclomatic complexity of the method is 14
Complex Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,Cyclomatic complexity of the method is 46
Complex Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Iteration,Cyclomatic complexity of the method is 39
Complex Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,ResetAndKill,Cyclomatic complexity of the method is 12
Complex Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,SpeciateAndCalculateSpawnLevels,Cyclomatic complexity of the method is 14
Complex Method,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,Cyclomatic complexity of the method is 18
Complex Method,Encog.Neural.NEAT.Training,NEATInnovationList,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovationList.cs,CreateNeuronFromID,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,Read,Cyclomatic complexity of the method is 34
Complex Method,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,Save,Cyclomatic complexity of the method is 13
Complex Method,Encog.Neural.CPN,PersistCPN,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\PersistCPN.cs,Read,Cyclomatic complexity of the method is 15
Complex Method,Encog.Neural.CPN,CPNNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\CPNNetwork.cs,ComputeInstar,Cyclomatic complexity of the method is 19
Complex Method,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,Cyclomatic complexity of the method is 33
Complex Method,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,Cyclomatic complexity of the method is 18
Complex Method,Encog.App.Analyst.CSV,TimeSeriesUtil,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\TimeSeriesUtil.cs,Process,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,Cyclomatic complexity of the method is 15
Complex Method,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,Cyclomatic complexity of the method is 22
Complex Method,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,Analyze,Cyclomatic complexity of the method is 14
Complex Method,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,Process,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,xf911a8958011bd6d,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,Cyclomatic complexity of the method is 19
Complex Method,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,x972236628de6c041,Cyclomatic complexity of the method is 21
Complex Method,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,ExtractFields,Cyclomatic complexity of the method is 28
Complex Method,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,Normalize,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Analyst.CSV.Shuffle,ShuffleCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Shuffle\ShuffleCSV.cs,xc4041c33ab048f27,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,Process,Cyclomatic complexity of the method is 17
Complex Method,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,xae1ebc39c039dcb2,Cyclomatic complexity of the method is 19
Complex Method,Encog.App.Analyst.CSV.Balance,BalanceCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Balance\BalanceCSV.cs,Process,Cyclomatic complexity of the method is 12
Complex Method,Encog.ML.Kmeans,KMeansClustering,C:\repos\neismit_emds\Nsim4\Encog\ML\Kmeans\KMeansClustering.cs,KMeansClustering,Cyclomatic complexity of the method is 13
Complex Method,Encog.ML.Kmeans,KMeansClustering,C:\repos\neismit_emds\Nsim4\Encog\ML\Kmeans\KMeansClustering.cs,Iteration,Cyclomatic complexity of the method is 14
Complex Method,Encog.ML.Kmeans,Centroid,C:\repos\neismit_emds\Nsim4\Encog\ML\Kmeans\Centroid.cs,CalcCentroid,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,FinalizeStructure,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,UpdateProperties,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.Networks.Structure,NetworkCODEC,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NetworkCODEC.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Networks.Structure,AnalyzeNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\AnalyzeNetwork.cs,AnalyzeNetwork,Cyclomatic complexity of the method is 25
Complex Method,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,Cyclomatic complexity of the method is 61
Complex Method,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,Cyclomatic complexity of the method is 19
Complex Method,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze2,Cyclomatic complexity of the method is 12
Complex Method,Encog.ML.Data.Buffer,MemoryDataLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\MemoryDataLoader.cs,External2Memory,Cyclomatic complexity of the method is 15
Complex Method,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,Close,Cyclomatic complexity of the method is 10
Complex Method,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,Create,Cyclomatic complexity of the method is 10
Complex Method,Encog.ML.Data.Buffer,BinaryDataLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BinaryDataLoader.cs,Binary2External,Cyclomatic complexity of the method is 19
Complex Method,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,Next,Cyclomatic complexity of the method is 15
Complex Method,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,x5e9e6297e1dda8c2,Cyclomatic complexity of the method is 11
Complex Method,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,xc9abdba3fd865542,Cyclomatic complexity of the method is 22
Complex Method,Encog.Util.CSV,NumberList,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\NumberList.cs,ToList,Cyclomatic complexity of the method is 8
Complex Method,Encog.Util.CSV,CSVFormat,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\CSVFormat.cs,CSVFormat,Cyclomatic complexity of the method is 10
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Add,Cyclomatic complexity of the method is 9
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,Cyclomatic complexity of the method is 14
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Det,Cyclomatic complexity of the method is 30
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,Cyclomatic complexity of the method is 29
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,IsEqual,Cyclomatic complexity of the method is 12
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,Cyclomatic complexity of the method is 67
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Multiply,Cyclomatic complexity of the method is 15
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PINV,Cyclomatic complexity of the method is 34
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PrintMat,Cyclomatic complexity of the method is 35
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,Cyclomatic complexity of the method is 67
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,Cyclomatic complexity of the method is 205
Complex Method,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,TwoD_2_OneD,Cyclomatic complexity of the method is 8
Complex Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,LUDecomposition,Cyclomatic complexity of the method is 28
Complex Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Inverse,Cyclomatic complexity of the method is 23
Complex Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Solve,Cyclomatic complexity of the method is 19
Complex Method,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Solve,Cyclomatic complexity of the method is 21
Complex Method,Encog.MathUtil.Matrices.Decomposition,QRDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\QRDecomposition.cs,QRDecomposition,Cyclomatic complexity of the method is 22
Complex Method,Encog.MathUtil.Matrices.Decomposition,QRDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\QRDecomposition.cs,Solve,Cyclomatic complexity of the method is 21
Complex Method,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,CholeskyDecomposition,Cyclomatic complexity of the method is 14
Complex Method,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,Solve,Cyclomatic complexity of the method is 20
Complex Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,EigenvalueDecomposition,Cyclomatic complexity of the method is 21
Complex Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,Cyclomatic complexity of the method is 52
Complex Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,Cyclomatic complexity of the method is 39
Complex Method,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xce4ff3ba0c1ec350,Cyclomatic complexity of the method is 55
Complex Method,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,Cyclomatic complexity of the method is 26
Complex Method,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x6aa420caefd31103,Cyclomatic complexity of the method is 27
Complex Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,DetermineNeuronSignificance,Cyclomatic complexity of the method is 12
Complex Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,Cyclomatic complexity of the method is 31
Complex Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,x04adb4fc58e5003d,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,x107a35a18a760853,Cyclomatic complexity of the method is 29
Complex Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,x86539420fafc72af,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,xfb5fe5d1c31436ed,Cyclomatic complexity of the method is 28
Complex Method,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,GenerateOutputNeuralData,Cyclomatic complexity of the method is 9
Complex Method,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,x8c7fc30b887213d1,Cyclomatic complexity of the method is 15
Complex Method,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,Cyclomatic complexity of the method is 14
Complex Method,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x08af8e36ac9914b5,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x1946c594c0dc53f6,Cyclomatic complexity of the method is 22
Complex Method,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,Cyclomatic complexity of the method is 13
Complex Method,Encog.App.Quant.Indicators,MovingAverage,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\MovingAverage.cs,Calculate,Cyclomatic complexity of the method is 11
Complex Method,Encog.App.Quant.Indicators.Predictive,BestReturn,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\Predictive\BestReturn.cs,Calculate,Cyclomatic complexity of the method is 14
Complex Method,Encog.App.Quant.Indicators.Predictive,BestClose,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\Predictive\BestClose.cs,Calculate,Cyclomatic complexity of the method is 11
Complex Method,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,Cyclomatic complexity of the method is 22
Complex Method,Encog.Bot.Browse,WebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\WebPage.cs,Find,Cyclomatic complexity of the method is 10
Complex Method,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,FindEndTag,Cyclomatic complexity of the method is 11
Complex Method,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadContents,Cyclomatic complexity of the method is 33
Complex Method,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadDataUnits,Cyclomatic complexity of the method is 16
Complex Method,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadForm,Cyclomatic complexity of the method is 10
Complex Method,Encog.Bot.Browse.Range,Form,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Form.cs,FindType,Cyclomatic complexity of the method is 12
Complex Method,Encog.Parse.Tags,Tag,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Tag.cs,ToString,Cyclomatic complexity of the method is 13
Complex Method,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,Peek,Cyclomatic complexity of the method is 10
Complex Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,Cyclomatic complexity of the method is 40
Complex Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,Cyclomatic complexity of the method is 19
Complex Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,Cyclomatic complexity of the method is 25
Complex Method,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,xdd33c6adbeca0968,Cyclomatic complexity of the method is 24
Complex Method,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,BuildForNetworkInput,Cyclomatic complexity of the method is 23
Complex Method,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,FirstPass,Cyclomatic complexity of the method is 12
Complex Method,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,Next,Cyclomatic complexity of the method is 11
Complex Method,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,OpenCSV,Cyclomatic complexity of the method is 11
Complex Method,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,OpenDataSet,Cyclomatic complexity of the method is 9
Complex Method,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,SecondPass,Cyclomatic complexity of the method is 13
Complex Method,Encog.App.Quant.Util,BarBuffer,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Util\BarBuffer.cs,AverageLoss,Cyclomatic complexity of the method is 9
Complex Method,Encog.App.Analyst.CSV.Sort,RowComparator,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\RowComparator.cs,Compare,Cyclomatic complexity of the method is 16
Complex Method,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,x64b4cdf32944d344,Cyclomatic complexity of the method is 20
Complex Method,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,AddProperty,Cyclomatic complexity of the method is 8
Complex Method,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,BeginTag,Cyclomatic complexity of the method is 9
Complex Method,Encog.Neural.CPN.Training,TrainOutstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainOutstar.cs,Iteration,Cyclomatic complexity of the method is 8
Complex Method,Encog.Neural.CPN.Training,TrainInstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainInstar.cs,Iteration,Cyclomatic complexity of the method is 14
Complex Method,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,ParseLayer,Cyclomatic complexity of the method is 19
Complex Method,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,x0738845e2abbf3d2,Cyclomatic complexity of the method is 20
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Wizard,Cyclomatic complexity of the method is 12
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x0b3092feb6dc609a,Cyclomatic complexity of the method is 16
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,Cyclomatic complexity of the method is 31
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xa39295d07e81cd8c,Cyclomatic complexity of the method is 19
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,Cyclomatic complexity of the method is 52
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xdd8dc65aef162a86,Cyclomatic complexity of the method is 28
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xf6e1c35864db42aa,Cyclomatic complexity of the method is 13
Complex Method,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xfd33c8a1cd5c5a19,Cyclomatic complexity of the method is 29
Complex Method,Encog.Util.Banchmark,RandomTrainingFactory,C:\repos\neismit_emds\Nsim4\Encog\Util\Banchmark\RandomTrainingFactory.cs,Generate,Cyclomatic complexity of the method is 10
Complex Method,Encog.Util.Banchmark,RandomTrainingFactory,C:\repos\neismit_emds\Nsim4\Encog\Util\Banchmark\RandomTrainingFactory.cs,Generate,Cyclomatic complexity of the method is 9
Complex Method,Encog.Bot.RSS,RSSItem,C:\repos\neismit_emds\Nsim4\Encog\Bot\RSS\RSSItem.cs,Load,Cyclomatic complexity of the method is 14
Complex Method,Encog.App.Analyst.CSV.Filter,FilterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Filter\FilterCSV.cs,Process,Cyclomatic complexity of the method is 15
Complex Method,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,Cyclomatic complexity of the method is 44
Complex Method,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,EndBar,Cyclomatic complexity of the method is 8
Complex Method,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,x6c260f7f6142106c,Cyclomatic complexity of the method is 10
Complex Method,Encog.App.Quant.Ninja,NinjaFileConvert,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaFileConvert.cs,Process,Cyclomatic complexity of the method is 10
Complex Method,Encog.Neural.Networks.Training.Simple,TrainAdaline,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Simple\TrainAdaline.cs,Iteration,Cyclomatic complexity of the method is 10
Long Parameter List,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,GenericCorrelation,The method has 5 parameters.
Long Parameter List,Encog.ML.Data.Buffer.CODEC,CSVDataCODEC,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\CODEC\CSVDataCODEC.cs,CSVDataCODEC,The method has 6 parameters.
Long Parameter List,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,SetAutoDecay,The method has 5 parameters.
Long Parameter List,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,Brentmin,The method has 6 parameters.
Long Parameter List,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,The method has 6 parameters.
Long Parameter List,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The method has 13 parameters.
Long Parameter List,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,xbfc8da7bffe4bca2,The method has 5 parameters.
Long Parameter List,Encog.ML.Data.Market.Loader,CSVLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVLoader.cs,ReadAndCallLoader,The method has 5 parameters.
Long Parameter List,Encog.Util.Normalize.Output,BasicOutputField,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\BasicOutputField.cs,Calculate,The method has 5 parameters.
Long Parameter List,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The method has 10 parameters.
Long Parameter List,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x22c1a1a99dd27273,The method has 10 parameters.
Long Parameter List,Encog.Util,EngineArray,C:\repos\neismit_emds\Nsim4\Encog\Util\EngineArray.cs,ArrayCopy,The method has 5 parameters.
Long Parameter List,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The method has 5 parameters.
Long Parameter List,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The method has 5 parameters.
Long Parameter List,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,CalculateGradient,The method has 10 parameters.
Long Parameter List,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,CalculateLayer,The method has 7 parameters.
Long Parameter List,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,TrainFlatNetworkResilient,The method has 5 parameters.
Long Parameter List,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,GradientWorker,The method has 7 parameters.
Long Parameter List,Encog.Neural.Networks.Training.Anneal,NeuralSimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Anneal\NeuralSimulatedAnnealing.cs,NeuralSimulatedAnnealing,The method has 5 parameters.
Long Parameter List,Encog.Neural.Networks.Training.Genetic,NeuralGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Genetic\NeuralGeneticAlgorithm.cs,NeuralGeneticAlgorithm,The method has 6 parameters.
Long Parameter List,Encog.Util.Simple,TrainingSetUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingSetUtil.cs,LoadCSVTOMemory,The method has 5 parameters.
Long Parameter List,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,ConvertCSV2Binary,The method has 6 parameters.
Long Parameter List,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,ConvertCSV2Binary,The method has 7 parameters.
Long Parameter List,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,LoadCSV2Memory,The method has 6 parameters.
Long Parameter List,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SimpleFeedForward,The method has 5 parameters.
Long Parameter List,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdbksb,The method has 5 parameters.
Long Parameter List,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,AnalystField,The method has 6 parameters.
Long Parameter List,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,MakeClass,The method has 5 parameters.
Long Parameter List,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,NormalizedField,The method has 6 parameters.
Long Parameter List,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The method has 5 parameters.
Long Parameter List,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,ExtractFromIndex,The method has 5 parameters.
Long Parameter List,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,SetMatrix,The method has 5 parameters.
Long Parameter List,Encog.ML.Data.Specific,CSVMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\CSVMLDataSet.cs,CSVMLDataSet,The method has 6 parameters.
Long Parameter List,Encog.Neural.NEAT,NEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNetwork.cs,NEATNetwork,The method has 6 parameters.
Long Parameter List,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,NEATNeuron,The method has 5 parameters.
Long Parameter List,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The method has 5 parameters.
Long Parameter List,Encog.Neural.NEAT.Training,NEATLinkGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATLinkGene.cs,NEATLinkGene,The method has 6 parameters.
Long Parameter List,Encog.Neural.NEAT.Training,NEATInnovation,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovation.cs,NEATInnovation,The method has 7 parameters.
Long Parameter List,Encog.Neural.NEAT.Training,NEATInnovationList,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovationList.cs,CreateNewInnovation,The method has 6 parameters.
Long Parameter List,Encog.Neural.Neat.Training,NEATNeuronGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\Training\NEATNeuronGene.cs,NEATNeuronGene,The method has 6 parameters.
Long Parameter List,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,ExtractFields,The method has 5 parameters.
Long Parameter List,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,xd7749c2e3652c828,The method has 9 parameters.
Long Parameter List,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PruneIncremental,The method has 6 parameters.
Long Parameter List,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,x107a35a18a760853,The method has 7 parameters.
Long Parameter List,Encog.ML.Data.Temporal,TemporalDataDescription,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalDataDescription.cs,TemporalDataDescription,The method has 6 parameters.
Long Parameter List,Encog.ML.Data.Market,MarketDataDescription,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\MarketDataDescription.cs,MarketDataDescription,The method has 5 parameters.
Long Parameter List,Encog.ML.Data.Market,MarketDataDescription,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\MarketDataDescription.cs,MarketDataDescription,The method has 6 parameters.
Long Parameter List,Encog.ML.Data.Image,ImageMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Image\ImageMLData.cs,Downsample,The method has 6 parameters.
Long Parameter List,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The method has 5 parameters.
Long Parameter List,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Wizard,The method has 5 parameters.
Long Parameter List,Encog.Util.Banchmark,RandomTrainingFactory,C:\repos\neismit_emds\Nsim4\Encog\Util\Banchmark\RandomTrainingFactory.cs,Generate,The method has 5 parameters.
Long Parameter List,Encog.Util.Banchmark,RandomTrainingFactory,C:\repos\neismit_emds\Nsim4\Encog\Util\Banchmark\RandomTrainingFactory.cs,Generate,The method has 6 parameters.
Long Statement,Nsim,XmlExtensions,C:\repos\neismit_emds\Nsim4\Nsim\XmlExtensions.cs,AsArray,The length of the statement  "	return ((x3ea1037ccf291a94 != null) ? null : Enumerable.Select<XElement' double> (xmlElement.Elements ("Data")' x3ea1037ccf291a94).ToArray<double> ()); " is 151.
Long Statement,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xa1aa8795de6d838b,The length of the statement  "	num5 = Math.Sqrt (Enumerable.Select<double' double> (res' new Func<double' double> (class2' (IntPtr))).Sum () / ((double)res.Length)); " is 134.
Long Statement,Nsim,xe362616ebc6ada30,C:\repos\neismit_emds\Nsim4\Nsim\xe362616ebc6ada30.cs,x20ef846b7fe0cd42,The length of the statement  "	return x4bbc2c453c470189.AddContent (App.Services.GetService<T> ().Xml.AddContent (xc15bd84e01929885.ToNameAttribute ())); " is 122.
Long Statement,Nsim,ActivationEmptyConfig,C:\repos\neismit_emds\Nsim4\Nsim\ActivationEmptyConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/activations/activationemptyconfig.xaml"' UriKind.Relative); " is 129.
Long Statement,Nsim,EnumValueConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumValueConverter.cs,Convert,The length of the statement  "	throw new ArgumentException (string.Format ("The interface \"{0}\" does not implemented by \"{1}\"."' typeof(IEnumerable)' targetType)' "targetType"); " is 150.
Long Statement,Nsim,TrainingStopConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainingStopConfig.cs,InitializeComponent,The length of the statement  "	Uri resourceLocator = new Uri ("/Nsim4;component/components/train/stoptrain/trainingstopconfig.xaml"' UriKind.Relative); " is 120.
Long Statement,Nsim,xb417a5fb2bc37c95,C:\repos\neismit_emds\Nsim4\Nsim\xb417a5fb2bc37c95.cs,GetRandom,The length of the statement  "	return ((App.Services.GetService<INetStruct> ().HiddenLayers.Layers.Count<ILayerStruct> () < 1) ? new RangeRandomizer (-1.0' 1.0) : new NguyenWidrowRandomizer (-1.0' 1.0)); " is 172.
Long Statement,Nsim,GaussianRandomizerConfig,C:\repos\neismit_emds\Nsim4\Nsim\GaussianRandomizerConfig.cs,InitializeComponent,The length of the statement  "			Uri resourceLocator = new Uri ("/Nsim4;component/components/train/random/gaussianrandomizerconfig.xaml"' UriKind.Relative); " is 123.
Long Statement,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x260f84eca0a6e365,The length of the statement  "	this.DataCollection.Add (new BasicMLDataPair (new BasicMLData (this.InputSize)' new BasicMLData (this.IdealSize)' new BasicMLData (this.CalcedSize)' new BasicMLData (this.ErrorSize))); " is 184.
Long Statement,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/dataanalisys/maverickdetectorconfig.xaml"' UriKind.Relative); " is 127.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "	Application application2 = (Application)Activator.CreateInstance (Type.GetTypeFromCLSID (new Guid ("00024500-0000-0000-C000-000000000046"))); " is 141.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Site17 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site18 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 194.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site19 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site15 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 194.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site16 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Site14 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site11 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site12 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 194.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site13 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Sitef = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 193.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site10 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 203.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Sitee = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Siteb = CallSite<Func<CallSite' object' string' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Sitec = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 193.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Sited = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site8 = CallSite<Func<CallSite' object' string' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site9 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 193.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Sitea = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site5 = CallSite<Func<CallSite' object' string' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site6 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 193.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "			p__Site7 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Site3 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 193.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Site4 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The length of the statement  "		p__Site2 = CallSite<Func<CallSite' object' string' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] { " is 202.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "	Microsoft.Office.Interop.Excel.Application application2 = (Microsoft.Office.Interop.Excel.Application)Activator.CreateInstance (Type.GetTypeFromCLSID (new Guid ("00024500-0000-0000-C000-000000000046"))); " is 203.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "		workbook = application.Workbooks.Open (xafe2f3653ee64ebc' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value' Missing.Value); " is 268.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "		ImportExcelFileDialog dialog2 = new ImportExcelFileDialog (Enumerable.Select<_Worksheet' string> (workbook.Sheets.OfType<_Worksheet> ()' x1db2b4a534698fc5)); " is 157.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "			set.Add (new BasicMLDataPair (new BasicMLData (list.ToArray ())' new BasicMLData (new double[0])' new BasicMLData (new double[0])' new BasicMLData (new double[0]))); " is 165.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "			p__Site15 = CallSite<Func<CallSite' object' double>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.Convert (CSharpBinderFlags.ConvertExplicit' typeof(double)' typeof(xe8f63ddfa545c93b))); " is 187.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "			p__Site16 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.None' "Value2"' typeof(xe8f63ddfa545c93b)' new CSharpArgumentInfo[] { " is 197.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The length of the statement  "		MessageBox.Show (string.Format ("Количество столбцов ({0}) меньше' чем количество входных параметров ({1})."' usedRange.Columns.Count' service.InputLayer.Size)); " is 161.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The length of the statement  "	KeyValuePair<string' BasicMLDataSet> pair = new KeyValuePair<string' BasicMLDataSet> (x99ecbc7e3ae0e29b.Name' new BasicMLDataSet ()); " is 133.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The length of the statement  "								p__Site5 = CallSite<Func<CallSite' object' double>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.Convert (CSharpBinderFlags.ConvertExplicit' typeof(double)' typeof(xe8f63ddfa545c93b))); " is 186.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The length of the statement  "								p__Site6 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.None' "Value2"' typeof(xe8f63ddfa545c93b)' new CSharpArgumentInfo[] { " is 196.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The length of the statement  "					pair.Value.Add (new BasicMLDataPair (new BasicMLData (dictionary2 ["X"].ToArray ())' new BasicMLData (dictionary2 ["D"].ToArray ())' new BasicMLData (dictionary2 ["Y"].ToArray ())' new BasicMLData (dictionary2 ["E"].ToArray ()))); " is 230.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The length of the statement  "		p__Site4 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.None' "Value2"' typeof(xe8f63ddfa545c93b)' new CSharpArgumentInfo[] { " is 196.
Long Statement,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The length of the statement  "	p__Site3 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.None' "Value2"' typeof(xe8f63ddfa545c93b)' new CSharpArgumentInfo[] { " is 196.
Long Statement,Nsim,ImportExcelFileDialog,C:\repos\neismit_emds\Nsim4\Nsim\ImportExcelFileDialog.cs,InitializeComponent,The length of the statement  "			Uri resourceLocator = new Uri ("/Nsim4;component/components/train/dataseteditor/importexcelfiledialog.xaml"' UriKind.Relative); " is 127.
Long Statement,Nsim,LinearScaleConfig,C:\repos\neismit_emds\Nsim4\Nsim\LinearScaleConfig.cs,InitializeComponent,The length of the statement  "			Uri resourceLocator = new Uri ("/Nsim4;component/components/train/dataprocessors/scale/linearscaleconfig.xaml"' UriKind.Relative); " is 130.
Long Statement,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ProcessDataVector,The length of the statement  "	return new BasicMLDataPair (this.ProcessInputVector (vectorToProcess.Input)' this.ProcessIdealVector (vectorToProcess.Ideal)); " is 126.
Long Statement,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,RestoreDataVector,The length of the statement  "	return new BasicMLDataPair (this.RestoreInputVector (vectorToProcess.Input)' this.RestoreIdealVector (vectorToProcess.Ideal)); " is 126.
Long Statement,Nsim,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\ActivationConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/activations/activationconfig.xaml"' UriKind.Relative); " is 124.
Long Statement,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/trainstatus/trainstatuscontrol.xaml"' UriKind.Relative); " is 122.
Long Statement,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,x5eb7e005797fdf8f,The length of the statement  "		control.SelectedItem = App.Services.GetService<x759d1c29622e3303> ().x1dba2c5863398e07 ("trainGraphTab") ?? control.SelectedItem; " is 129.
Long Statement,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,xd7c6aaa737a7575c,The length of the statement  "	base.Dispatcher.Invoke (new Action (null' (IntPtr)CommandManager.InvalidateRequerySuggested)' DispatcherPriority.Send' null); " is 125.
Long Statement,Nsim,BackpropagationTrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/trainers/backpropagationtrainerconfig.xaml"' UriKind.Relative); " is 129.
Long Statement,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,GetTrainer,The length of the statement  "		this._x74038d67405f0227 = new Backpropagation (xfefdde.x5b0926ce641e48a7' xfefdde.xddda66ad7e26f074' this.LearningRate' this.Momentum); " is 135.
Long Statement,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,GetTrainer,The length of the statement  "			((IMultiThreadable)this._x74038d67405f0227).ThreadCount = App.Services.GetService<x15b8c53ba4818b71> ().x3ca5a760576c2053.Value; " is 128.
Long Statement,Nsim,SimpleFunctionalPreprocessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/dataprocessors/functional/simplefunctionalpreprocessorconfig.xaml"' UriKind.Relative); " is 152.
Long Statement,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The length of the statement  "	double num = base.GenericCorrelation (x4a3f0a05c02f235f' x829059c1f308dc0c' new Func<double' double> (null' (IntPtr)FunctionalPreprocessorBase.X)' x437f2f55c5143ec3' xc25cf86b73e79253); " is 185.
Long Statement,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,GenericCorrelation,The length of the statement  "		num4 = Enumerable.Sum<IMLDataPair> (data' new Func<IMLDataPair' double> (class2' (IntPtr))) / ((double)data.Count<IMLDataPair> ()); " is 131.
Long Statement,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,GenericCorrelation,The length of the statement  "		double num5 = Enumerable.Sum<IMLDataPair> (data' new Func<IMLDataPair' double> (class2' (IntPtr))) / ((double)data.Count<IMLDataPair> ()); " is 138.
Long Statement,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetMemberText,The length of the statement  "	DescriptionAttribute customAttribute = (DescriptionAttribute)Attribute.GetCustomAttribute (field' typeof(DescriptionAttribute)); " is 128.
Long Statement,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValuesDictionary,The length of the statement  "	var enumerable = Enumerable.Select (Enumerable.Select (Enumerable.Select (type.GetFields (BindingFlags.Public | BindingFlags.Static)' xcd3a29c3cfb3776e)' new Func () <<  > ' (IntPtr)))' x98afab8c2756fce1; " is 204.
Long Statement,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValueText,The length of the statement  "	Debug.Assert (object.Equals (field.GetValue (null)' value)' string.Format ("Equals(field.GetValue(null) = \"{0}\"' value = \"{1}\")"' field.GetValue (null)' value)); " is 165.
Long Statement,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValueText,The length of the statement  "		throw new ArgumentException (string.Format ("Name for value \"{0}\" does not found in enum \"{1}\"."' value' base.EnumType)' "value"); " is 134.
Long Statement,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValueText,The length of the statement  "			throw new InvalidOperationException (string.Format ("Field \"{0}\" for value \"{1}\" does not found in enum \"{2}\"."' name' value' base.EnumType)); " is 148.
Long Statement,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/viewer/structureviewer2d.xaml"' UriKind.Relative); " is 120.
Long Statement,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The length of the statement  "	using (enumerator3 = Enumerable.Select<Point' Line> (list' new Func<Point' Line> (classa' (IntPtr))).GetEnumerator ()) { " is 120.
Long Statement,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The length of the statement  "			using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) { " is 121.
Long Statement,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/viewer/structureviewer3d.xaml"' UriKind.Relative); " is 120.
Long Statement,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The length of the statement  "	using (enumerator3 = Enumerable.Select<Point3D' ScreenSpaceLines3D> (list' new Func<Point3D' ScreenSpaceLines3D> (classa' (IntPtr))).GetEnumerator ()) { " is 152.
Long Statement,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The length of the statement  "		enumerator3 = Enumerable.Select<Point3D' ScreenSpaceLines3D> (list2' new Func<Point3D' ScreenSpaceLines3D> (class2' (IntPtr))).GetEnumerator (); " is 144.
Long Statement,Nsim,NeuralGeneticAlgorithmTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerDecorator.cs,GetTrainer,The length of the statement  "	this._x74038d67405f0227 = new NeuralGeneticAlgorithm (service.x5b0926ce641e48a7' randomizer' calculateScore' this.PopulationSize' this.MutationPercent' this.PercentToMate); " is 172.
Long Statement,Nsim,NeuralGeneticAlgorithmTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerDecorator.cs,GetTrainer,The length of the statement  "			((IMultiThreadable)this._x74038d67405f0227).ThreadCount = App.Services.GetService<x15b8c53ba4818b71> ().x3ca5a760576c2053.Value; " is 128.
Long Statement,Nsim,NeuralGeneticAlgorithmTrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerConfig.cs,InitializeComponent,The length of the statement  "			Uri resourceLocator = new Uri ("/Nsim4;component/components/train/trainers/neuralgeneticalgorithmtrainerconfig.xaml"' UriKind.Relative); " is 136.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,ProcessDataSet,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' BasicMLDataSet> (Enumerable.Where<IDataProcessor> (this' xcb5110745db8648f)' dataToProcess' x1ecac4c96d3f3733); " is 155.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,ProcessDataVector,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' IMLDataPair> (Enumerable.Where<IDataProcessor> (this' xcd3a29c3cfb3776e)' vectorToProcess' x98afab8c2756fce1); " is 154.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,ProcessIdealVector,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' IMLData> (Enumerable.Where<IDataProcessor> (this' x1eaffc8f4d56f3bd)' row' xdd534a2fc8520149); " is 138.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,ProcessInputVector,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' IMLData> (Enumerable.Where<IDataProcessor> (this' xdfe864e3cf5a1f6a)' row' x6feaca279d51dbd6); " is 138.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,RestoreDataSet,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' BasicMLDataSet> (Enumerable.Where<IDataProcessor> (this.x98b5c9f63d27aa65 ()' xca5ad8524f73e51f)' dataToRestore' x52e0eb7265061ab4); " is 176.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,RestoreDataVector,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' IMLDataPair> (Enumerable.Where<IDataProcessor> (this.x98b5c9f63d27aa65 ()' x21f584f1b098fa5d)' vectorToProcess' xcb0642a72e75e08e); " is 175.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,RestoreIdealVector,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' IMLData> (Enumerable.Where<IDataProcessor> (this.x98b5c9f63d27aa65 ()' xd0f28b05be53fb24)' row' x29a521ff37bb5782); " is 159.
Long Statement,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,RestoreInputVector,The length of the statement  "	return Enumerable.Aggregate<IDataProcessor' IMLData> (Enumerable.Where<IDataProcessor> (this.x98b5c9f63d27aa65 ()' x12426999b9efd872)' row' x09f3b7f7cda63a03); " is 159.
Long Statement,Nsim,LevenbergMarquardtTrainingTrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\LevenbergMarquardtTrainingTrainerConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/trainers/levenbergmarquardttrainingtrainerconfig.xaml"' UriKind.Relative); " is 140.
Long Statement,Nsim,LevenbergMarquardtTrainingTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\LevenbergMarquardtTrainingTrainerDecorator.cs,GetTrainer,The length of the statement  "		((IMultiThreadable)this._x74038d67405f0227).ThreadCount = App.Services.GetService<x15b8c53ba4818b71> ().x3ca5a760576c2053.Value; " is 128.
Long Statement,Nsim,HiddenLayersConfig,C:\repos\neismit_emds\Nsim4\Nsim\HiddenLayersConfig.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/layer/hiddenlayersconfig.xaml"' UriKind.Relative); " is 120.
Long Statement,Nsim,NetStatisticViewer,C:\repos\neismit_emds\Nsim4\Nsim\NetStatisticViewer.cs,InitializeComponent,The length of the statement  "		Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/statistics/netstatisticviewer.xaml"' UriKind.Relative); " is 125.
Long Statement,Nsim,NetStatisticViewer,C:\repos\neismit_emds\Nsim4\Nsim\NetStatisticViewer.cs,RebuldView,The length of the statement  "	int num = (service.InputLayer.Size + service.OutputLayer.Size) + Enumerable.Sum<ILayerStruct> (service.HiddenLayers.Layers' x31af784cbc72c68d); " is 143.
Long Statement,Encog.ML.Train.Strategy,RequiredImprovementStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\RequiredImprovementStrategy.cs,Init,The length of the statement  "		throw new TrainingError ("To use the required improvement strategy the machine learning method must support MLResettable."); " is 124.
Long Statement,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,Compute,The length of the statement  "		throw new NeuralNetworkError ("Index exception: there was likely a mismatch between layer sizes' or the size of the input presented to the network."' exception); " is 161.
Long Statement,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The length of the statement  "		x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2])); " is 129.
Long Statement,Encog.ML.Data.Buffer.CODEC,CSVDataCODEC,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\CODEC\CSVDataCODEC.cs,PrepareRead,The length of the statement  "		throw new BufferedDataError ("To import CSV' you must use the CSVDataCODEC constructor that specifies input and ideal sizes."); " is 127.
Long Statement,Encog.Neural.Pattern,RadialBasisPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\RadialBasisPattern.cs,Generate,The length of the statement  "	return new RBFNetwork (this._xcfe830a7176c14e5' this._xdf89f9cf9fc3d06f' this._x8f581d694fca0474' this._x7f0032ed2c1f3c80); " is 123.
Long Statement,Encog.Neural.Pattern,PNNPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\PNNPattern.cs,Generate,The length of the statement  "	return new BasicPNN (this._xec3b9fd87e7b3852' this._xb2ee160a618b6146' this._xcfe830a7176c14e5' this._x8f581d694fca0474); " is 121.
Long Statement,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The length of the statement  "			this._xc410e3804222557a [num5] [num5] = this._x3cb63876dda4b74a [num5] + (this._x3271cefb1a159639 + this._x6ad505c7ef981b0e); " is 125.
Long Statement,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The length of the statement  "	this._xbdeab667c25bbc32 [this._x4c51ad74d6bcc9e9] [this._x82d75873c9eb7116++] = num12 * this._x87a7fc6a72741c2e.GetLayerOutput (num3' num13); " is 141.
Long Statement,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The length of the statement  "		this._xbdeab667c25bbc32 [this._x4c51ad74d6bcc9e9] [this._x82d75873c9eb7116++] = xd3eb00c1c38e3a49 (this._x87a7fc6a72741c2e.GetActivation (num4)' layerOutput) * num9; " is 165.
Long Statement,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,xa87d489014b43b21,The length of the statement  "	return (x088735608d2b15df + ((this._x3d0ce91dbd8e0b1b.Function (xdfdd4c581c22a0f5' x05e293912078bf73) * this._x9b481c22b6706459) * (xcdaeea7afaf570ff - x088735608d2b15df))); " is 173.
Long Statement,Encog.App.Analyst,ConsoleAnalystListener,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\ConsoleAnalystListener.cs,ReportCommandEnd,The length of the statement  "	Console.Out.WriteLine ("Task " + this._xcd6e8e7cbb7973db + " " + str + "' task elapsed time " + Format.FormatTimeSpan ((int)(this._x7e449cf8c84697bd.ElapsedMilliseconds / 0x3e8L))); " is 181.
Long Statement,Encog.App.Analyst,ConsoleAnalystListener,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\ConsoleAnalystListener.cs,ReportTraining,The length of the statement  "	Console.Out.WriteLine ("Iteration #" + Format.FormatInteger (train.IterationNumber) + " Error:" + Format.FormatPercent (train.Error) + " elapsed time = " + Format.FormatTimeSpan ((int)(this._x7e449cf8c84697bd.ElapsedMilliseconds / 0x3e8L))); " is 241.
Long Statement,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,The length of the statement  "				throw new PersistError ("The file you are trying to read is from a later version of Encog.  Please upgrade Encog to read this file."); " is 134.
Long Statement,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The length of the statement  "		throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d); " is 124.
Long Statement,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The length of the statement  "	if (((csvFormat != CSVFormat.English) && ((0 != 0) || (csvFormat != CSVFormat.English))) && (csvFormat != CSVFormat.DecimalPoint)) { " is 132.
Long Statement,Encog.Util.Normalize.Output,OutputFieldRangeMapped,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\OutputFieldRangeMapped.cs,Calculate,The length of the statement  "	return ((((this._field.CurrentValue - this._field.Min) / (this._field.Max - this._field.Min)) * (this._high - this._low)) + this._low); " is 135.
Long Statement,Encog.Util.Normalize.Output,OutputFieldRangeMapped,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\OutputFieldRangeMapped.cs,ConvertBack,The length of the statement  "	return (((((this._field.Min - this._field.Max) * data) - (this._high * this._field.Min)) + (this._field.Max * this._low)) / (this._low - this._high)); " is 150.
Long Statement,Encog.Util.Time,xfa6e3ed04cba2b4d,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\xfa6e3ed04cba2b4d.cs,x898ebed938f437e5,The length of the statement  "	return (long)((this._x3ed4f4f0195b98d7.Month - this._x7f8a886f51b477eb.Month) + ((this._x3ed4f4f0195b98d7.Year - this._x7f8a886f51b477eb.Year) * 12)); " is 150.
Long Statement,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The length of the statement  "			num16 = (this.x26463655896fd90a [num8] - this.x26463655896fd90a [num9]) / ((double)Math.Max ((float)((numArray3 [num8] + numArray4 [num9]) - (2f * numArray3 [num9]))' (float)0f)); " is 179.
Long Statement,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The length of the statement  "		num14 = (-this.x26463655896fd90a [num8] - this.x26463655896fd90a [num9]) / ((double)Math.Max ((float)((numArray3 [num8] + numArray4 [num9]) + (2f * numArray3 [num9]))' (float)0f)); " is 180.
Long Statement,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The length of the statement  "		return Math.Pow ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90' this.x83735b10b6a3d76d); " is 201.
Long Statement,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The length of the statement  "		return Math.Exp (-this.xc7c4e9c099884228 * ((this.x4f9e236643454e9f [x7b28e8a789372508] + this.x4f9e236643454e9f [x1148d0e8cc982c04]) - (2.0 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])))); " is 253.
Long Statement,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The length of the statement  "		return xcb156489dc62ed23 ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90); " is 186.
Long Statement,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xc60aa42cfbd0c1ed,The length of the statement  "		return Math.Pow ((x0d173b5435b4d6ad.gamma * x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583)) + x0d173b5435b4d6ad.coef0' x0d173b5435b4d6ad.degree); " is 155.
Long Statement,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xc60aa42cfbd0c1ed,The length of the statement  "		return xcb156489dc62ed23 ((x0d173b5435b4d6ad.gamma * x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583)) + x0d173b5435b4d6ad.coef0); " is 138.
Long Statement,Encog.MathUtil.LIBSVM,xa68541a68dd6f460,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xa68541a68dd6f460.cs,get_x6648d9580110b138,The length of the statement  "		if ((num = this.x1f31bf6ca58166a1.get_x4a3f0a05c02f235f (x7b28e8a789372508' numArray' xb5964a891b6cf7c3)) < xb5964a891b6cf7c3) { " is 128.
Long Statement,Encog.MathUtil.LIBSVM,xa68541a68dd6f460,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xa68541a68dd6f460.cs,get_x6648d9580110b138,The length of the statement  "				numArray [0] [num2] = (float)((this.x1e218ceaee1bb583 [x7b28e8a789372508] * this.x1e218ceaee1bb583 [num2]) * this.x1e221c4999144ac5 (x7b28e8a789372508' num2)); " is 159.
Long Statement,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,x89083ecc6edaa4e0,The length of the statement  "	this.x4cbb0cc714782977 [x7b28e8a789372508].x4a3f0a05c02f235f = this.x4cbb0cc714782977 [x1148d0e8cc982c04].x4a3f0a05c02f235f; " is 124.
Long Statement,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,x89083ecc6edaa4e0,The length of the statement  "	this.x4cbb0cc714782977 [x7b28e8a789372508].xb5964a891b6cf7c3 = this.x4cbb0cc714782977 [x1148d0e8cc982c04].xb5964a891b6cf7c3; " is 124.
Long Statement,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x22c1a1a99dd27273,The length of the statement  "	base.x22c1a1a99dd27273 (x9fc3ee03a439f6f0' x6648d9580110b138' xe7ebe10fa44d8d49' x1e218ceaee1bb583' x6ad505c7ef981b0e' xcf0012763522c2a0' x34ece0b1f98e7c82' xc7984f54f516d44e' x0a6250b187271ea3' xe7f03bc283d49981); " is 214.
Long Statement,Encog.MathUtil.LIBSVM,x4607fc510d7665cf,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4607fc510d7665cf.cs,get_x6648d9580110b138,The length of the statement  "	if ((num = this.x1f31bf6ca58166a1.get_x4a3f0a05c02f235f (x7b28e8a789372508' numArray' xb5964a891b6cf7c3)) < xb5964a891b6cf7c3) { " is 128.
Long Statement,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,get_x6648d9580110b138,The length of the statement  "		if (((((uint)num4) - ((uint)num3)) > uint.MaxValue) || (this.x1f31bf6ca58166a1.get_x4a3f0a05c02f235f (num' numArray' this.x9fc3ee03a439f6f0) < this.x9fc3ee03a439f6f0)) { " is 169.
Long Statement,Encog.Util,ReflectionUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\ReflectionUtil.cs,ResolveEnum,The length of the statement  "	return field.GetType ().GetMembers (BindingFlags.Public | BindingFlags.Static).Cast<MemberInfo> ().FirstOrDefault<MemberInfo> (obj => obj.Name.Equals (v)); " is 155.
Long Statement,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The length of the statement  "	numArray [num7] [num10 - 1] = (((int)(((double)num9) / Math.Pow ((double)num8' (double)(num10 - 1)))) * (num3 / ((double)(num8 - 1)))) + minPosition; " is 149.
Long Statement,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The length of the statement  "		throw new NeuralNetworkError ("Total number of RBF neurons must be some integer to the power of 'dimensions'.\n" + Format.FormatDouble ((double)num4' 5) + " <> " + Format.FormatDouble (num5' 5)); " is 195.
Long Statement,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Init,The length of the statement  "	this._weightIndex [num2] = this._weightIndex [num2 - 1] + (this._layerCounts [num2] * this._layerFeedCounts [num2 - 1]); " is 120.
Long Statement,Encog.ML.Factory.Train,AnnealFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\AnnealFactory.cs,Create,The length of the statement  "	return new NeuralSimulatedAnnealing ((BasicNetwork)method' calculateScore' startTemp' num2' holder.GetInt ("cycles"' false' 100)); " is 130.
Long Statement,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The length of the statement  "		if (!str2.Equals ("InverseMultiquadric"' StringComparison.InvariantCultureIgnoreCase) || ((((uint)num2) + ((uint)num2)) < 0)) { " is 127.
Long Statement,Encog.ML.Factory.Train,GeneticFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\GeneticFactory.cs,Create,The length of the statement  "		train = new NeuralGeneticAlgorithm ((BasicNetwork)method' new RangeRandomizer (-1.0' 1.0)' calculateScore' num' mutationPercent' num3); " is 135.
Long Statement,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkBackPropagation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkBackPropagation.cs,UpdateWeight,The length of the statement  "	double num = (gradients [index] * this._x9b481c22b6706459) + (this._xe4def4d471bbc130 [index] * this._xef52c16be8e501c9); " is 121.
Long Statement,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,x9e4a53e1bba49db4,The length of the statement  "		EngineArray.ArrayCopy (this._xb542b50e13b3ecac [this._xb542b50e13b3ecac.Length - 1].Network.LayerOutput' this._x87a7fc6a72741c2e.LayerOutput); " is 142.
Long Statement,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,xd586e0c16bdae7fc,The length of the statement  "		this._xb542b50e13b3ecac [num2++] = new GradientWorker ((FlatNetwork)this._x87a7fc6a72741c2e.Clone ()' this' this._x9d091b0a73271a88.OpenAdditional ()' range.Low' range.High' this._x0ba854627e1326f9' this.ErrorFunction); " is 219.
Long Statement,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,Run,The length of the statement  "		this.x5d3a1f6283012a22 (this._x61830ac74d65acc3.InputArray' this._x61830ac74d65acc3.IdealArray' this._x61830ac74d65acc3.Significance); " is 134.
Long Statement,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,x5d3a1f6283012a22,The length of the statement  "		this._x58c3d5da5c5c72db [index] = ((this._x87a7fc6a72741c2e.ActivationFunctions [0].DerivativeFunction (this._x59e01312f2f4aa96 [index]' this._x5e72e5e601f79c78 [index]) + this._x0ba854627e1326f9 [0]) * this._x58c3d5da5c5c72db [index]) * xe4115acdf4fbfccc; " is 256.
Long Statement,Encog.Neural.Flat.Train.Prop,GradientWorker,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\GradientWorker.cs,xdc972101a59889e3,The length of the statement  "	this._x58c3d5da5c5c72db [num7] = num10 * (function.DerivativeFunction (this._x59e01312f2f4aa96 [num7]' this._x5e72e5e601f79c78 [num7]) + num6); " is 143.
Long Statement,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,Cos,The length of the statement  "	return new ComplexNumber (x96dd47ebf370a5ff (this._x1e218ceaee1bb583) * Math.Cos (this._x08db3aeabb253cb1)' -x00b7cb0e4eefe32a (this._x1e218ceaee1bb583) * Math.Sin (this._x08db3aeabb253cb1)); " is 191.
Long Statement,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,Cosh,The length of the statement  "	return new ComplexNumber (x96dd47ebf370a5ff (this._x08db3aeabb253cb1) * Math.Cos (this._x1e218ceaee1bb583)' x00b7cb0e4eefe32a (this._x08db3aeabb253cb1) * Math.Sin (this._x1e218ceaee1bb583)); " is 190.
Long Statement,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,Exp,The length of the statement  "	return new ComplexNumber (Math.Exp (this._x08db3aeabb253cb1) * Math.Cos (this._x1e218ceaee1bb583)' Math.Exp (this._x08db3aeabb253cb1) * Math.Sin (this._x1e218ceaee1bb583)); " is 172.
Long Statement,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,Mod,The length of the statement  "	return Math.Sqrt ((this._x08db3aeabb253cb1 * this._x08db3aeabb253cb1) + (this._x1e218ceaee1bb583 * this._x1e218ceaee1bb583)); " is 125.
Long Statement,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,Sin,The length of the statement  "	return new ComplexNumber (x96dd47ebf370a5ff (this._x1e218ceaee1bb583) * Math.Sin (this._x08db3aeabb253cb1)' x00b7cb0e4eefe32a (this._x1e218ceaee1bb583) * Math.Cos (this._x08db3aeabb253cb1)); " is 190.
Long Statement,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,Sinh,The length of the statement  "	return new ComplexNumber (x00b7cb0e4eefe32a (this._x08db3aeabb253cb1) * Math.Cos (this._x1e218ceaee1bb583)' x96dd47ebf370a5ff (this._x08db3aeabb253cb1) * Math.Sin (this._x1e218ceaee1bb583)); " is 190.
Long Statement,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The length of the statement  "	Console.Out.WriteLine ("Iteration #" + Format.FormatInteger (i) + " Error:" + Format.FormatPercent (train.Error) + " Target Error: " + Format.FormatPercent (error)); " is 165.
Long Statement,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,ReportDone,The length of the statement  "	this._x64343a0786fb9a3f.Report (this._x88770833a11cfa1a' this._x88770833a11cfa1a' isAnalyzing ? "Done analyzing" : "Done processing"); " is 134.
Long Statement,Encog.App.Analyst.Script,AnalystScript,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\AnalystScript.cs,DetermineInputFormat,The length of the statement  "	return this.Properties.GetPropertyCSVFormat (sourceID.Equals (propertyString) ? "HEADER:DATASOURCE_sourceFormat" : "SETUP:CONFIG_csvFormat"); " is 141.
Long Statement,Encog.App.Analyst.Script,AnalystScript,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\AnalystScript.cs,FindDataField,The length of the statement  "	return this._xa942970cc8a85fd4.FirstOrDefault<DataField> (dataField => dataField.Name.Equals (name' StringComparison.InvariantCultureIgnoreCase)); " is 146.
Long Statement,Encog.App.Analyst.Script,AnalystScript,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\AnalystScript.cs,FindNormalizedField,The length of the statement  "	return this.Normalize.NormalizedFields.FirstOrDefault<AnalystField> (field => (field.Name.Equals (name' StringComparison.InvariantCultureIgnoreCase) && (field.TimeSlice == slice))); " is 181.
Long Statement,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xcc624bb62259df2c,The length of the statement  "		throw new AnalystError ("Unknown property: " + PropertyEntry.DotForm (xb32f8dd719a105db' x1640122bb0e29c3e' xc15bd84e01929885)); " is 128.
Long Statement,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The length of the statement  "	if (!sectionName.Equals ("SETUP") || !subSectionName.Equals ("FILENAMES"' StringComparison.InvariantCultureIgnoreCase)) { " is 121.
Long Statement,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x2cf4bfede7840d5b,The length of the statement  "		xa58d1d9c6fa55c59.WriteProperty (str' info.DirectoryName.Equals (this._x594135906c55045c.BasePath' StringComparison.InvariantCultureIgnoreCase) ? info.Name : filename); " is 168.
Long Statement,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DeNormalize,The length of the statement  "	return (((((this._x4a1b740f8a477de7 - this._x945de103a2446d98) * v) - (this._x891507b50bbab0f9 * this._x4a1b740f8a477de7)) + (this._x945de103a2446d98 * this._x136bfff0efb12047)) / (this._x136bfff0efb12047 - this._x891507b50bbab0f9)); " is 233.
Long Statement,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,FixSingleValue,The length of the statement  "	if ((this._xab8fe3cd8c5556fb == NormalizationAction.Normalize) && (Math.Abs ((double)(this._x945de103a2446d98 - this._x4a1b740f8a477de7)) < 1E-07)) { " is 149.
Long Statement,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,Init,The length of the statement  "		this._x8959a01885d5f522 = new Equilateral (this._x8affa5274961ba3a.Count' this._x891507b50bbab0f9' this._x136bfff0efb12047); " is 124.
Long Statement,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,Normalize,The length of the statement  "	return ((((v - this._x4a1b740f8a477de7) / (this._x945de103a2446d98 - this._x4a1b740f8a477de7)) * (this._x891507b50bbab0f9 - this._x136bfff0efb12047)) + this._x136bfff0efb12047); " is 177.
Long Statement,Encog.Util.Arrayutil,NormalizationActionExtension,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizationActionExtension.cs,IsClassify,The length of the statement  "	if ((extensionParam != NormalizationAction.OneOf) && ((2 == 0) || (extensionParam != NormalizationAction.SingleField))) { " is 121.
Long Statement,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,DeNormalize,The length of the statement  "	return (((((this._x4a1b740f8a477de7 - this._x945de103a2446d98) * v) - (this._x891507b50bbab0f9 * this._x4a1b740f8a477de7)) + (this._x945de103a2446d98 * this._x136bfff0efb12047)) / (this._x136bfff0efb12047 - this._x891507b50bbab0f9)); " is 233.
Long Statement,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,FixSingleValue,The length of the statement  "	if ((this._xab8fe3cd8c5556fb == NormalizationAction.Normalize) && (Math.Abs ((double)(this._x945de103a2446d98 - this._x4a1b740f8a477de7)) < 1E-07)) { " is 149.
Long Statement,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,Init,The length of the statement  "		this._x8959a01885d5f522 = new Equilateral (this._x8affa5274961ba3a.Count' this._x891507b50bbab0f9' this._x136bfff0efb12047); " is 124.
Long Statement,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The length of the statement  "	if ((theAction == NormalizationAction.Equilateral) || ((theAction == NormalizationAction.OneOf) && ((((uint)num2) | 3) != 0))) { " is 128.
Long Statement,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,Normalize,The length of the statement  "	return ((((v - this._x4a1b740f8a477de7) / (this._x945de103a2446d98 - this._x4a1b740f8a477de7)) * (this._x891507b50bbab0f9 - this._x136bfff0efb12047)) + this._x136bfff0efb12047); " is 177.
Long Statement,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,ParseTimeSlice,The length of the statement  "		return source.Select<string' string> (x1ecac4c96d3f3733).Where<string> (x3ea1037ccf291a94).Select<string' int> (xec790bb6d0304faa).FirstOrDefault<int> (); " is 154.
Long Statement,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,GetEntry,The length of the statement  "	return source.FirstOrDefault<PropertyEntry> (entry => entry.Name.Equals (name' StringComparison.InvariantCultureIgnoreCase)); " is 125.
Long Statement,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,ExtractFromIndex,The length of the statement  "		if ((((((uint)num3) | 1) != 0) && ((((uint)num2) | 2) != 0)) || ((((uint)occurence) - ((uint)index)) <= uint.MaxValue)) { " is 121.
Long Statement,Encog.Util.HTTP,URLUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\URLUtility.cs,ConstructURL,The length of the statement  "			if (((((uint)stripFragment) - ((uint)port)) >= 0) && ((((uint)stripFragment) + ((uint)stripFragment)) > uint.MaxValue)) { " is 121.
Long Statement,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ComputeF1,The length of the statement  "	double num2 = this._weightsF1ToF2 [i' this.Winner] * (this._outputF2.GetBoolean (this.Winner) ? ((double)1) : ((double)0)); " is 123.
Long Statement,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ComputeF1,The length of the statement  "	double num3 = (((input.GetBoolean (i) ? ((double)1) : ((double)0)) + (this._d1 * num2)) - this._b1) / ((1.0 + (this._a1 * ((input.GetBoolean (i) ? ((double)1) : ((double)0)) + (this._d1 * num2)))) + this._c1); " is 209.
Long Statement,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,Compute,The length of the statement  "	throw new NeuralNetworkError ("Compute on BasicNetwork cannot be used' rather call the compute(NeuralData) method on the BAMLogic."); " is 133.
Long Statement,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,StringToInnovationType,The length of the statement  "	if (!t.Equals ("l"' StringComparison.InvariantCultureIgnoreCase) && t.Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) { " is 130.
Long Statement,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The length of the statement  "		NEATLinkGene gene6 = new NEATLinkGene (id' num4' true' innovation.InnovationID' RangeRandomizer.Randomize (-1.0' 1.0)' flag); " is 125.
Long Statement,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The length of the statement  "		num12 = ((NEATTraining)base.GA).Innovations.CreateNewInnovation (fromNeuronID' toNeuronID' NEATInnovationType.NewNeuron' NEATNeuronType.Hidden' num10' num9); " is 157.
Long Statement,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The length of the statement  "	innovation = ((NEATTraining)base.GA).Innovations.CheckInnovation (fromNeuronID' toNeuronID' NEATInnovationType.NewNeuron); " is 122.
Long Statement,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,Decode,The length of the statement  "	network = new NEATNetwork (this.inputCount' this.outputCount' neurons' population.NeatActivationFunction' population.OutputActivationFunction' 0); " is 146.
Long Statement,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The length of the statement  "					num4 += Math.Abs ((double)(((NEATLinkGene)this.linksChromosome.Get (num5)).Weight - ((NEATLinkGene)genome.Links.Get (num6)).Weight)); " is 133.
Long Statement,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,ResetAndKill,The length of the statement  "	if ((species.GensNoImprovement > this.xfca9d4aed1b3cd4b) && base.Comparator.IsBetterThan (this.x411ff254761a2325' species.BestScore)) { " is 135.
Long Statement,Encog.Neural.NEAT.Training,NEATInnovationList,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovationList.cs,CreateNewInnovation,The length of the statement  "	NEATInnovation innovation = new NEATInnovation (from' to' innovationType' this.population.AssignInnovationID ()' neuronType' x' y); " is 131.
Long Statement,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,StringToKernel,The length of the statement  "	if (!k.Equals ("gaussian"' StringComparison.InvariantCultureIgnoreCase) && k.Equals ("reciprocal"' StringComparison.InvariantCultureIgnoreCase)) { " is 146.
Long Statement,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,StringToOutputMode,The length of the statement  "		if (!mode.Equals ("unsupervised"' StringComparison.InvariantCultureIgnoreCase) && mode.Equals ("classification"' StringComparison.InvariantCultureIgnoreCase)) { " is 160.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The length of the statement  "	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 123.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The length of the statement  "	numArray = AnalystNormalizeCSV.ExtractFields (this._x554f16462d8d4675' this._xc5416b6511261016' csv' outputLength' true); " is 121.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,The length of the statement  "		using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 123.
Long Statement,Encog.App.Analyst.CSV,TimeSeriesUtil,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\TimeSeriesUtil.cs,Process,The length of the statement  "	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 123.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The length of the statement  "			while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) { " is 150.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The length of the statement  "		using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 123.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The length of the statement  "			using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 124.
Long Statement,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The length of the statement  "		using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 124.
Long Statement,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,Analyze,The length of the statement  "		double[] input = AnalystNormalizeCSV.ExtractFields (this._x554f16462d8d4675' this._xc5416b6511261016' dcsv' num2' true); " is 120.
Long Statement,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,x6c260f7f6142106c,The length of the statement  "	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 123.
Long Statement,Encog.ML.Kmeans,KMeansClustering,C:\repos\neismit_emds\Nsim4\Encog\ML\Kmeans\KMeansClustering.cs,x318cf87d7d6afed3,The length of the statement  "	numArray [num2] = (((this.xe6459878eee52706 (num2) - this.x2cf6175701bf1768 (num2)) / ((double)(this._x0068961b43401a6f.Length + 1))) * num) + this.x2cf6175701bf1768 (num2); " is 173.
Long Statement,Encog.ML.Data.Buffer,BufferedNeuralDataSetEnumerator,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedNeuralDataSetEnumerator.cs,MoveNext,The length of the statement  "			this._x27621a3c307a4a9a = BasicMLDataPair.CreatePair (this._x4a3f0a05c02f235f.InputSize' this._x4a3f0a05c02f235f.IdealSize); " is 124.
Long Statement,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The length of the statement  "			num19 = (((num24 - num26) * (num24 + num26)) + (num21 * ((num25 / (num19 + x0428c55343267861 (num20' num19))) - num21))) / num24; " is 129.
Long Statement,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,xd7749c2e3652c828,The length of the statement  "	x19218ffab70283ef [x7b28e8a789372508' x1148d0e8cc982c04] = x4b101060f4767186 - (xe4115acdf4fbfccc * (xe24dd90acb923d68 + (x4b101060f4767186 * xa0db54712cc6b16c))); " is 163.
Long Statement,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,xd7749c2e3652c828,The length of the statement  "	x19218ffab70283ef [x51ae3b338384d896' x9fc3ee03a439f6f0] = xe24dd90acb923d68 + (xe4115acdf4fbfccc * (x4b101060f4767186 - (xe24dd90acb923d68 * xa0db54712cc6b16c))); " is 163.
Long Statement,Encog.MathUtil.Matrices.Decomposition,SingularValueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\SingularValueDecomposition.cs,Cond,The length of the statement  "	return (this.xe4115acdf4fbfccc [0] / this.xe4115acdf4fbfccc [Math.Min (this.x6088325dec1baa2a' this.x57e9faf3ffdc07cc) - 1]); " is 125.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\neismit_emds\Nsim4\XamlGeneratedNamespace\GeneratedInternalTypeHelper.cs,CreateDelegate,The length of the statement  "	return (Delegate)target.GetType ().InvokeMember ("_CreateDelegate"' BindingFlags.InvokeMethod | BindingFlags.NonPublic | BindingFlags.Instance' null' target' new object[] { " is 172.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\neismit_emds\Nsim4\XamlGeneratedNamespace\GeneratedInternalTypeHelper.cs,CreateInstance,The length of the statement  "	return Activator.CreateInstance (type' BindingFlags.CreateInstance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance' null' null' culture); " is 160.
Long Statement,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The length of the statement  "	base.ReportStatus (context' "Current: " + NetworkToString (jobUnit) + "; Best: " + NetworkToString (this._x61bb83c40eed7f47)); " is 126.
Long Statement,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Process,The length of the statement  "	throw new EncogError ("To calculate the optimal hidden size' at least one neuron must be the minimum for the first hidden layer."); " is 131.
Long Statement,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The length of the statement  "		throw new NeuralNetworkError ("A layer must have at least a single neuron.  If you want to remove the entire layer you must create a new network."); " is 148.
Long Statement,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,Add,The length of the statement  "	throw new TemporalError ("Direct adds to the temporal dataset are not supported.  Add TemporalPoint objects and call generate."); " is 129.
Long Statement,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,Add,The length of the statement  "	throw new TemporalError ("Direct adds to the temporal dataset are not supported.  Add TemporalPoint objects and call generate."); " is 129.
Long Statement,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,Add,The length of the statement  "	throw new TemporalError ("Direct adds to the temporal dataset are not supported.  Add TemporalPoint objects and call generate."); " is 129.
Long Statement,Encog.ML.Data.Image,ImageMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Image\ImageMLDataSet.cs,Downsample,The length of the statement  "			throw new NeuralNetworkError ("Invalid class type found in ImageNeuralDataSet' only ImageNeuralData items are allowed."); " is 121.
Long Statement,Encog.ML.Data.Image,ImageMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Image\ImageMLDataSet.cs,Downsample,The length of the statement  "		input.Downsample (this.x0677e4dbe212e9d2' this.x103ca6537af9d723' height' width' this.x20133758a5984793' this.x8948c4575e007d39); " is 129.
Long Statement,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseAttributeName,The length of the statement  "	while ((!char.IsWhiteSpace ((char)this._x337e217cb3ba0627.Peek ()) && (this._x337e217cb3ba0627.Peek () != 0x3d)) && ((this._x337e217cb3ba0627.Peek () != 0x3e) && (this._x337e217cb3ba0627.Peek () != -1))) { " is 205.
Long Statement,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,BuildForNetworkInput,The length of the statement  "			throw new NormalizationError ("Can't build data' input fields used for neural input' must match provided data(" + data.Length + ")."); " is 134.
Long Statement,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,SecondPass,The length of the statement  "				this.ReportResult (flag ? "Second pass' normalizing data" : "Processing data (single pass)"' this._recordCount' ++num3); " is 120.
Long Statement,Encog.Neural.CPN.Training,TrainInstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainInstar.cs,x7ecfa86bb6039378,The length of the statement  "		throw new NeuralNetworkError ("If the weights are to be set from the training data' then there must be one instar neuron for each training element."); " is 150.
Long Statement,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Reanalyze,The length of the statement  "	this._x554f16462d8d4675.Analyze (file' this._x594135906c55045c.Properties.GetPropertyBoolean ("SETUP:CONFIG_inputHeaders")' this._x594135906c55045c.Properties.GetPropertyFormat ("SETUP:CONFIG_csvFormat")); " is 205.
Long Statement,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x9079d3066b3873db,The length of the statement  "	this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_arguments"' "ITERATIONS=1000'NEIGHBORHOOD=rbf1d'RBF_TYPE=gaussian"); " is 126.
Long Statement,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xa39295d07e81cd8c,The length of the statement  "	normalizedFields.Add ((this._x9b10ace6509508c0 == NormalizeRange.NegOne2One) ? new AnalystField (field.Name' singleField' 1.0' -1.0) : new AnalystField (field.Name' singleField' 1.0' 0.0)); " is 189.
Long Statement,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The length of the statement  "		using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 124.
Long Statement,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The length of the statement  "		throw new AnalystError ("Can't determine target field automatically' please specify one.\nThis can also happen if you specified the wrong file format."); " is 153.
Long Statement,Encog.Bot.RSS,RSS,C:\repos\neismit_emds\Nsim4\Encog\Bot\RSS\RSS.cs,ToString,The length of the statement  "	using (Dictionary<string' string>.KeyCollection.Enumerator enumerator = this._x233f092c536593eb.Keys.GetEnumerator ()) { " is 120.
Long Statement,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The length of the statement  "		using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) { " is 124.
Long Statement,Encog.Util.Normalize.Output.Multiplicative,MultiplicativeGroup,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\Multiplicative\MultiplicativeGroup.cs,RowInit,The length of the statement  "	double d = base.GroupedFields.Sum<OutputFieldGrouped> (field => field.SourceField.CurrentValue * field.SourceField.CurrentValue); " is 129.
Long Statement,Encog.Mathutil.Randomize,FanInRandomizer,C:\repos\neismit_emds\Nsim4\Encog\Mathutil\Randomize\FanInRandomizer.cs,x7417261f548b2c9b,The length of the statement  "	return ((this._x24324ae68083c4c8 / num) + (base.NextDouble () * ((this._x95b133adb6a0822b - this._x24324ae68083c4c8) / num))); " is 126.
Complex Conditional,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The conditional expression  "((csvFormat != CSVFormat.English) && ((0 != 0) || (csvFormat != CSVFormat.English))) && (csvFormat != CSVFormat.DecimalPoint)"  is complex.
Empty Catch Block,Nsim,Config,C:\repos\neismit_emds\Nsim4\Nsim\Config.cs,Config,The method has an empty catch block.
Empty Catch Block,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The method has an empty catch block.
Empty Catch Block,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The method has an empty catch block.
Magic Number,Nsim,Config,C:\repos\neismit_emds\Nsim4\Nsim\Config.cs,Config,The following statement contains a magic number: try {  	XElement root;  	XElement element2;  	bool flag;  	string uri = AppDomain.CurrentDomain.BaseDirectory.TrimEnd (new char[] {  		'\\'  	}) + @"\Config.xml";  	goto Label_0152;  	Label_0035:  	if (0 == 0) {  		return;  	}  	goto Label_0035;  	Label_003B:  	if (!flag) {  		goto Label_0070;  	}  	goto Label_0035;  	Label_0042:  	this.x3ca5a760576c2053 = 1;  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_0114;  	}  	goto Label_0035;  	Label_0070:  	this.x3ca5a760576c2053 = new int? (element2.Attribute ("ThreadCount").AsInt (0));  	goto Label_0035;  	Label_009B:  	if (flag) {  		return;  	}  	Label_00A2:  	this.xfc82d6bf51352ebe = element2.Attribute ("Enabled").AsBool (false);  	flag = !this.xfc82d6bf51352ebe;  	if (flag) {  		goto Label_0042;  	}  	flag = element2.Attribute ("ThreadCount") == null;  	goto Label_003B;  	Label_00ED:  	if (0 != 0) {  		goto Label_0114;  	}  	Label_00F0:  	element2 = root.Element ("MultiThreading");  	flag = element2 == null;  	goto Label_009B;  	Label_010E:  	if (!flag) {  		return;  	}  	goto Label_00ED;  	Label_0114:  	if ((((uint)flag) + ((uint)flag)) < 0) {  		goto Label_010E;  	}  	goto Label_00F0;  	Label_012E:  	if (!flag) {  		return;  	}  	root = XDocument.Load (uri).Root;  	flag = root != null;  	goto Label_010E;  	Label_0152:  	if (15 == 0) {  		goto Label_00A2;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_0114;  	}  	flag = File.Exists (uri);  	goto Label_012E;  	if ((((uint)flag) | 0x7fffffff) != 0) {  		goto Label_0114;  	}  	if (8 != 0) {  		goto Label_00ED;  	}  	goto Label_009B;  }  catch (Exception) {  }  
Magic Number,Nsim,Config,C:\repos\neismit_emds\Nsim4\Nsim\Config.cs,Config,The following statement contains a magic number: try {  	XElement root;  	XElement element2;  	bool flag;  	string uri = AppDomain.CurrentDomain.BaseDirectory.TrimEnd (new char[] {  		'\\'  	}) + @"\Config.xml";  	goto Label_0152;  	Label_0035:  	if (0 == 0) {  		return;  	}  	goto Label_0035;  	Label_003B:  	if (!flag) {  		goto Label_0070;  	}  	goto Label_0035;  	Label_0042:  	this.x3ca5a760576c2053 = 1;  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_0114;  	}  	goto Label_0035;  	Label_0070:  	this.x3ca5a760576c2053 = new int? (element2.Attribute ("ThreadCount").AsInt (0));  	goto Label_0035;  	Label_009B:  	if (flag) {  		return;  	}  	Label_00A2:  	this.xfc82d6bf51352ebe = element2.Attribute ("Enabled").AsBool (false);  	flag = !this.xfc82d6bf51352ebe;  	if (flag) {  		goto Label_0042;  	}  	flag = element2.Attribute ("ThreadCount") == null;  	goto Label_003B;  	Label_00ED:  	if (0 != 0) {  		goto Label_0114;  	}  	Label_00F0:  	element2 = root.Element ("MultiThreading");  	flag = element2 == null;  	goto Label_009B;  	Label_010E:  	if (!flag) {  		return;  	}  	goto Label_00ED;  	Label_0114:  	if ((((uint)flag) + ((uint)flag)) < 0) {  		goto Label_010E;  	}  	goto Label_00F0;  	Label_012E:  	if (!flag) {  		return;  	}  	root = XDocument.Load (uri).Root;  	flag = root != null;  	goto Label_010E;  	Label_0152:  	if (15 == 0) {  		goto Label_00A2;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_0114;  	}  	flag = File.Exists (uri);  	goto Label_012E;  	if ((((uint)flag) | 0x7fffffff) != 0) {  		goto Label_0114;  	}  	if (8 != 0) {  		goto Label_00ED;  	}  	goto Label_009B;  }  catch (Exception) {  }  
Magic Number,Nsim,Config,C:\repos\neismit_emds\Nsim4\Nsim\Config.cs,Config,The following statement contains a magic number: if (15 == 0) {  	goto Label_00A2;  }  
Magic Number,Nsim,Config,C:\repos\neismit_emds\Nsim4\Nsim\Config.cs,Config,The following statement contains a magic number: if (8 != 0) {  	goto Label_00ED;  }  
Magic Number,Nsim,ConstConfig,C:\repos\neismit_emds\Nsim4\Nsim\ConstConfig.cs,InitializeComponent,The following statement contains a magic number: while (true) {  	if (flag) {  		this._x7dc3d9d322900926 = true;  		do {  			Uri resourceLocator = new Uri ("/Nsim4;component/components/train/random/constconfig.xaml"' UriKind.Relative);  			Application.LoadComponent (this' resourceLocator);  		}  		while ((((uint)flag) | 3) == 0);  	}  	break;  }  
Magic Number,Nsim,ConstConfig,C:\repos\neismit_emds\Nsim4\Nsim\ConstConfig.cs,InitializeComponent,The following statement contains a magic number: if (flag) {  	this._x7dc3d9d322900926 = true;  	do {  		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/random/constconfig.xaml"' UriKind.Relative);  		Application.LoadComponent (this' resourceLocator);  	}  	while ((((uint)flag) | 3) == 0);  }  
Magic Number,Nsim,ConstConfig,C:\repos\neismit_emds\Nsim4\Nsim\ConstConfig.cs,InitializeComponent,The following statement contains a magic number: do {  	Uri resourceLocator = new Uri ("/Nsim4;component/components/train/random/constconfig.xaml"' UriKind.Relative);  	Application.LoadComponent (this' resourceLocator);  }  while ((((uint)flag) | 3) == 0);  
Magic Number,Nsim,RandomDecorator,C:\repos\neismit_emds\Nsim4\Nsim\RandomDecorator!1.cs,SetXml,The following statement contains a magic number: if ((((uint)flag) | 3) != 0) {  	if (3 != 0) {  		if ((((uint)flag) & 0) != 0) {  			return;  		}  		if (!flag) {  			throw new ArgumentException ();  		}  		if (0 == 0) {  			return;  		}  		goto Label_00AC;  	}  	if (xml.Name.LocalName != "RandomConfig") {  		goto Label_0037;  	}  }  
Magic Number,Nsim,RandomDecorator,C:\repos\neismit_emds\Nsim4\Nsim\RandomDecorator!1.cs,SetXml,The following statement contains a magic number: if ((((uint)flag) | 3) != 0) {  	if (3 != 0) {  		if ((((uint)flag) & 0) != 0) {  			return;  		}  		if (!flag) {  			throw new ArgumentException ();  		}  		if (0 == 0) {  			return;  		}  		goto Label_00AC;  	}  	if (xml.Name.LocalName != "RandomConfig") {  		goto Label_0037;  	}  }  
Magic Number,Nsim,RandomDecorator,C:\repos\neismit_emds\Nsim4\Nsim\RandomDecorator!1.cs,SetXml,The following statement contains a magic number: if (3 != 0) {  	if ((((uint)flag) & 0) != 0) {  		return;  	}  	if (!flag) {  		throw new ArgumentException ();  	}  	if (0 == 0) {  		return;  	}  	goto Label_00AC;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,x20aee281977480cf,The following statement contains a magic number: if (8 == 0) {  	return;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xa1aa8795de6d838b,The following statement contains a magic number: if ((((uint)num5) | 4) == 0) {  	goto Label_01C5;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xd73759c200f2f3a3,The following statement contains a magic number: if ((((uint)num4) | 2) != 0) {  	num2 = res.Max ();  	num = 0;  	goto Label_00F3;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xdc3df58d08a8655f,The following statement contains a magic number: if (15 != 0) {  	goto Label_0084;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xdc3df58d08a8655f,The following statement contains a magic number: if (3 == 0) {  	goto Label_00C4;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xe53cd3e4075af2b3,The following statement contains a magic number: if (num >= class2.res.Length) {  	this.xdc3df58d08a8655f ();  	index = class2.res.ToList<double> ().IndexOf (class2.res.Max ());  	flag = !this.xf69244535d02f4b9;  	if (2 != 0) {  		goto Label_001D;  	}  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xe53cd3e4075af2b3,The following statement contains a magic number: if (2 != 0) {  	goto Label_001D;  }  
Magic Number,Nsim,x5e7825063a2681aa,C:\repos\neismit_emds\Nsim4\Nsim\x5e7825063a2681aa.cs,xe53cd3e4075af2b3,The following statement contains a magic number: if (3 != 0) {  	if ((((uint)num) + ((uint)index)) >= 0) {  		goto Label_0202;  	}  	goto Label_01FD;  }  
Magic Number,Nsim,App,C:\repos\neismit_emds\Nsim4\Nsim\App.cs,InitializeComponent,The following statement contains a magic number: if (0 == 0) {  	while (!flag) {  		return;  	}  	if ((((uint)flag) | 2) == 0) {  		return;  	}  	this._x7dc3d9d322900926 = true;  	base.StartupUri = new Uri ("MainWindow.xaml"' UriKind.Relative);  	uri = new Uri ("/Nsim4;component/app.xaml"' UriKind.Relative);  }  
Magic Number,Nsim,App,C:\repos\neismit_emds\Nsim4\Nsim\App.cs,InitializeComponent,The following statement contains a magic number: if ((((uint)flag) | 2) == 0) {  	return;  }  
Magic Number,Nsim,App,C:\repos\neismit_emds\Nsim4\Nsim\App.cs,x61d76c7e178c32c4,The following statement contains a magic number: if (4 != 0) {  	flag = executingAssembly.GetManifestResourceNames ().Contains<string> ("Nsim.ThirdParty." + name.Name + ".dll");  	if (0 == 0) {  		if (!flag) {  			goto Label_00FD;  		}  	}  	else {  		goto Label_00FD;  	}  }  
Magic Number,Nsim,App,C:\repos\neismit_emds\Nsim4\Nsim\App.cs,x61d76c7e178c32c4,The following statement contains a magic number: try {  	flag = manifestResourceStream != null;  	while (flag) {  		byte[] buffer = new byte[manifestResourceStream.Length];  		manifestResourceStream.Read (buffer' 0' buffer.Length);  		assembly2 = Assembly.Load (buffer);  		if (8 == 0) {  			break;  		}  		return assembly2;  	}  	return null;  }  finally {  	flag = manifestResourceStream == null;  	if ((((uint)flag) > uint.MaxValue) || ((((uint)flag) - ((uint)flag)) >= 0)) {  		goto Label_00BE;  	}  	Label_00B5:  	manifestResourceStream.Dispose ();  	goto Label_00C2;  	Label_00BE:  	if (!flag) {  		goto Label_00B5;  	}  	Label_00C2:  	;  }  
Magic Number,Nsim,App,C:\repos\neismit_emds\Nsim4\Nsim\App.cs,x61d76c7e178c32c4,The following statement contains a magic number: while (flag) {  	byte[] buffer = new byte[manifestResourceStream.Length];  	manifestResourceStream.Read (buffer' 0' buffer.Length);  	assembly2 = Assembly.Load (buffer);  	if (8 == 0) {  		break;  	}  	return assembly2;  }  
Magic Number,Nsim,App,C:\repos\neismit_emds\Nsim4\Nsim\App.cs,x61d76c7e178c32c4,The following statement contains a magic number: if (8 == 0) {  	break;  }  
Magic Number,Nsim,ServiceProvider,C:\repos\neismit_emds\Nsim4\Nsim\ServiceProvider.cs,FairEvent,The following statement contains a magic number: using (List<xbff48450d40ecc36>.Enumerator enumerator = this._x5fd046377faacc9e.GetEnumerator ()) {  	xbff48450d40ecc36 xbffdecc;  	Action<T> action;  	bool flag;  	goto Label_001C;  	Label_0010:  	if (flag) {  		action (parameter);  	}  	Label_001C:  	if (enumerator.MoveNext ()) {  		goto Label_0053;  	}  	return;  	Label_002F:  	if (!flag) {  		goto Label_001C;  	}  	action = xbffdecc.xa160b1c73a8f9d06 as Action<T>;  	flag = action != null;  	if (-2 == 0) {  		return;  	}  	goto Label_0010;  	Label_0053:  	xbffdecc = enumerator.Current;  	flag = xbffdecc.x8884c63fbd777fd4 == typeof(T);  	if ((((uint)flag) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_002F;  	}  	goto Label_001C;  }  
Magic Number,Nsim,ServiceProvider,C:\repos\neismit_emds\Nsim4\Nsim\ServiceProvider.cs,FairEvent,The following statement contains a magic number: if (-2 == 0) {  	return;  }  
Magic Number,Nsim,ErrorDescriptor,C:\repos\neismit_emds\Nsim4\Nsim\ErrorDescriptor.cs,ErrorDescriptor,The following statement contains a magic number: do {  	descriptor.Title = "Ошибка обучения";  	descriptor.Color = Colors.Red;  }  while (2 == 0);  
Magic Number,Nsim,ChartWindow,C:\repos\neismit_emds\Nsim4\Nsim\ChartWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.chart = (Chart)x11d58b056c032b03;  	break;  case 2:  	this.barSeries = (ColumnSeries)x11d58b056c032b03;  	break;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x04abae94658fc85d);  	break;  default:  	this._x7dc3d9d322900926 = true;  	if ((((uint)xf3efd21c486a5cce) - ((uint)num)) <= uint.MaxValue) {  	}  	break;  }  
Magic Number,Nsim,ChartWindow,C:\repos\neismit_emds\Nsim4\Nsim\ChartWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.chart = (Chart)x11d58b056c032b03;  	break;  case 2:  	this.barSeries = (ColumnSeries)x11d58b056c032b03;  	break;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x04abae94658fc85d);  	break;  default:  	this._x7dc3d9d322900926 = true;  	if ((((uint)xf3efd21c486a5cce) - ((uint)num)) <= uint.MaxValue) {  	}  	break;  }  
Magic Number,Nsim,xdb76bc24a79224de,C:\repos\neismit_emds\Nsim4\Nsim\xdb76bc24a79224de!1.cs,GetActivation,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0020;  }  
Magic Number,Nsim,xdb76bc24a79224de,C:\repos\neismit_emds\Nsim4\Nsim\xdb76bc24a79224de!1.cs,SetXml,The following statement contains a magic number: if ((xml != null) && (xml.Name.LocalName == "ActivationFunction")) {  	if ((((uint)flag) < 0) && ((((uint)flag) | 8) == 0)) {  		return;  	}  	if (xml.Attribute ("Type") == null) {  	}  }  
Magic Number,Nsim,xdb76bc24a79224de,C:\repos\neismit_emds\Nsim4\Nsim\xdb76bc24a79224de!1.cs,SetXml,The following statement contains a magic number: if ((((uint)flag) < 0) && ((((uint)flag) | 8) == 0)) {  	return;  }  
Magic Number,Nsim,xdb76bc24a79224de,C:\repos\neismit_emds\Nsim4\Nsim\xdb76bc24a79224de!1.cs,SetXml,The following statement contains a magic number: if (4 != 0) {  	if (flag) {  		return;  	}  }  else if (3 == 0) {  	goto Label_0063;  }  
Magic Number,Nsim,xdb76bc24a79224de,C:\repos\neismit_emds\Nsim4\Nsim\xdb76bc24a79224de!1.cs,SetXml,The following statement contains a magic number: if (4 != 0) {  	if (flag) {  		return;  	}  }  else if (3 == 0) {  	goto Label_0063;  }  
Magic Number,Nsim,xdb76bc24a79224de,C:\repos\neismit_emds\Nsim4\Nsim\xdb76bc24a79224de!1.cs,SetXml,The following statement contains a magic number: if (3 == 0) {  	goto Label_0063;  }  
Magic Number,Nsim,TrainingStopConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainingStopConfig.cs,TrainingStopConfig,The following statement contains a magic number: TestErrorProperty = DependencyProperty.Register ("TestError"' typeof(double)' typeof(TrainingStopConfig)' new UIPropertyMetadata (0.01' new PropertyChangedCallback (TrainingStopConfig.xbe1cc5c5c6a5928c)));  
Magic Number,Nsim,TrainingStopConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainingStopConfig.cs,InitializeComponent,The following statement contains a magic number: if ((((uint)flag) | 15) != 0) {  	goto Label_0011;  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,x8e46c20a382f5c57,The following statement contains a magic number: numArray [i] = (100.0 * (num2 / ((double)dataSet.Count))) / num;  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xd9dac609ec6b6137,The following statement contains a magic number: try {  	IMLDataPair pair;  	IMLData data;  	Label_0024:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0099;  	}  	if ((((uint)flag) | 4) == 0) {  		return;  	}  	goto Label_0085;  	Label_004B:  	data = processor.ProcessInputVector (new BasicMLData (pair.InputArray));  	IMLData row = service.x5b0926ce641e48a7.Compute (data);  	IMLData data3 = processor.RestoreIdealVector (row);  	pair.CalcedArray = data3.Data;  	goto Label_0024;  	Label_0085:  	if ((((uint)flag) & 0) == 0) {  		return;  	}  	Label_0099:  	pair = enumerator.Current;  	if (((uint)flag) >= 0) {  		goto Label_004B;  	}  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		if (((uint)flag) > uint.MaxValue) {  		}  		break;  	}  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xd9dac609ec6b6137,The following statement contains a magic number: if ((((uint)flag) | 4) == 0) {  	return;  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xde3e9f8cc0169fde,The following statement contains a magic number: if (4 == 0) {  	goto Label_0082;  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xde3e9f8cc0169fde,The following statement contains a magic number: if (15 != 0) {  	func2 = null;  	int i;  	if ((((uint)num2) & 0) != 0) {  		return numArray2;  	}  	goto Label_0082;  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xde3e9f8cc0169fde,The following statement contains a magic number: if (15 != 0) {  	numArray [i] = (100.0 * Math.Sqrt (num2 / ((double)(dataSet.Count - 1L)))) / num;  	i++;  	goto Label_004D;  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xde3e9f8cc0169fde,The following statement contains a magic number: if (15 != 0) {  	numArray [i] = (100.0 * Math.Sqrt (num2 / ((double)(dataSet.Count - 1L)))) / num;  	i++;  	goto Label_004D;  }  
Magic Number,Nsim,x57162336149345a9,C:\repos\neismit_emds\Nsim4\Nsim\x57162336149345a9.cs,xde3e9f8cc0169fde,The following statement contains a magic number: numArray [i] = (100.0 * Math.Sqrt (num2 / ((double)(dataSet.Count - 1L)))) / num;  
Magic Number,Nsim,RandomConfig,C:\repos\neismit_emds\Nsim4\Nsim\RandomConfig.cs,OnFunctionChanged,The following statement contains a magic number: if ((-1 == 0) || !flag) {  	functionChanged (this' new RandomChangedEventArgs (this));  }  else if (-2147483648 != 0) {  }  
Magic Number,Nsim,RandomConfig,C:\repos\neismit_emds\Nsim4\Nsim\RandomConfig.cs,OnFunctionChanged,The following statement contains a magic number: if (-2147483648 != 0) {  }  
Magic Number,Nsim,RandomConfig,C:\repos\neismit_emds\Nsim4\Nsim\RandomConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (xf3efd21c486a5cce) {  case 1:  	this.cbTypeSelect = (ComboBox)x11d58b056c032b03;  	break;  case 2:  	this.xCont = (ScrollViewer)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) >= 0) {  	}  	break;  default:  	this._x7dc3d9d322900926 = true;  	break;  }  
Magic Number,Nsim,RandomConfig,C:\repos\neismit_emds\Nsim4\Nsim\RandomConfig.cs,xec742bca02015330,The following statement contains a magic number: if (flag) {  	config._xb6b7237a193ea7b0 = ((IRandomDecoratorDescriptor)xfbf34718e704c6bc.NewValue).GetDecorator ();  	config.OnFunctionChanged ();  	config.x6e9c9821bfcbb69d ();  	if (3 == 0) {  		goto Label_0036;  	}  }  
Magic Number,Nsim,RandomConfig,C:\repos\neismit_emds\Nsim4\Nsim\RandomConfig.cs,xec742bca02015330,The following statement contains a magic number: if (3 == 0) {  	goto Label_0036;  }  
Magic Number,Nsim,xea522cb7be4b23be,C:\repos\neismit_emds\Nsim4\Nsim\xea522cb7be4b23be.cs,GetXml,The following statement contains a magic number: do {  	xml.Add (new XAttribute ("Min"' this.Min));  	xml.Add (new XAttribute ("Max"' this.Max));  	xml.Add (new XAttribute ("Seed"' this.x3a6458ee5430aeeb));  	element2 = xml;  }  while (15 == 0);  
Magic Number,Nsim,GaussianRandomizerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\GaussianRandomizerDecorator.cs,GaussianRandomizerDecorator,The following statement contains a magic number: this.E = 0.3;  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: column5.set_Width (new DataGridLength (100.0));  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (!flag2) {  	DataGridTextColumn item = new DataGridTextColumn ();  	item.set_Header ("Ср.кв.отн.(Т)(%)");  	item.set_Width (new DataGridLength (100.0));  	item.set_Binding (new Binding ("RMEN"));  	item.set_IsReadOnly (true);  	this.errorsGrid.get_Columns ().Add (item);  }  else {  	goto Label_001D;  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: item.set_Width (new DataGridLength (100.0));  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: column2.set_Width (new DataGridLength (100.0));  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (!flag2) {  	DataGridTextColumn column3 = new DataGridTextColumn ();  	column3.set_Header ("Выход");  	column3.set_Width (new DataGridLength (50.0));  	column3.set_Binding (new Binding ("Title"));  	column3.set_IsReadOnly (true);  	this.errorsGrid.get_Columns ().Add (column3);  	DataGridTextColumn column4 = new DataGridTextColumn ();  	column4.set_Header ("Ср.кв.отн.(%)");  	column4.set_Width (new DataGridLength (100.0));  	column4.set_Binding (new Binding ("RME"));  	column4.set_IsReadOnly (true);  	this.errorsGrid.get_Columns ().Add (column4);  	goto Label_0108;  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (!flag2) {  	DataGridTextColumn column3 = new DataGridTextColumn ();  	column3.set_Header ("Выход");  	column3.set_Width (new DataGridLength (50.0));  	column3.set_Binding (new Binding ("Title"));  	column3.set_IsReadOnly (true);  	this.errorsGrid.get_Columns ().Add (column3);  	DataGridTextColumn column4 = new DataGridTextColumn ();  	column4.set_Header ("Ср.кв.отн.(%)");  	column4.set_Width (new DataGridLength (100.0));  	column4.set_Binding (new Binding ("RME"));  	column4.set_IsReadOnly (true);  	this.errorsGrid.get_Columns ().Add (column4);  	goto Label_0108;  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: column3.set_Width (new DataGridLength (50.0));  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: column4.set_Width (new DataGridLength (100.0));  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: rec.RME = Math.Round (numArray [num]' 4);  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: rec.AvgErr = Math.Round (numArray2 [num]' 4);  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (((uint)flag) <= uint.MaxValue) {  	if ((((uint)flag2) + ((uint)flag2)) <= uint.MaxValue) {  		flag2 = flag;  	}  	if (flag2 && (((uint)flag2) >= 0)) {  		recArray [num].RMEN = Math.Round (numArray3 [num]' 4);  		recArray [num].MaxErr = Math.Round (numArray4 [num]' 4);  	}  	num++;  	goto Label_0227;  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (((uint)flag) <= uint.MaxValue) {  	if ((((uint)flag2) + ((uint)flag2)) <= uint.MaxValue) {  		flag2 = flag;  	}  	if (flag2 && (((uint)flag2) >= 0)) {  		recArray [num].RMEN = Math.Round (numArray3 [num]' 4);  		recArray [num].MaxErr = Math.Round (numArray4 [num]' 4);  	}  	num++;  	goto Label_0227;  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (flag2 && (((uint)flag2) >= 0)) {  	recArray [num].RMEN = Math.Round (numArray3 [num]' 4);  	recArray [num].MaxErr = Math.Round (numArray4 [num]' 4);  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (flag2 && (((uint)flag2) >= 0)) {  	recArray [num].RMEN = Math.Round (numArray3 [num]' 4);  	recArray [num].MaxErr = Math.Round (numArray4 [num]' 4);  }  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: recArray [num].RMEN = Math.Round (numArray3 [num]' 4);  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: recArray [num].MaxErr = Math.Round (numArray4 [num]' 4);  
Magic Number,Nsim,FinalErrors,C:\repos\neismit_emds\Nsim4\Nsim\FinalErrors.cs,xf4e7b53eedfb7d89,The following statement contains a magic number: if (2 != 0) {  	goto Label_037F;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,InitializeComponent,The following statement contains a magic number: if ((0 == 0) && flag) {  	this._x7dc3d9d322900926 = true;  	do {  		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/dataseteditor/dataseteditor.xaml"' UriKind.Relative);  		Application.LoadComponent (this' resourceLocator);  	}  	while (3 == 0);  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,InitializeComponent,The following statement contains a magic number: do {  	Uri resourceLocator = new Uri ("/Nsim4;component/components/train/dataseteditor/dataseteditor.xaml"' UriKind.Relative);  	Application.LoadComponent (this' resourceLocator);  }  while (3 == 0);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  	if (flag) {  		flag = this.EditMode == DataSetEditMode.CheckData;  		if (((((uint)num) + ((uint)flag)) >= 0) && flag) {  			if (((uint)flag) <= uint.MaxValue) {  				goto Label_0311;  			}  			goto Label_03FD;  		}  		goto Label_0387;  	}  	this.DataCollection = new ObservableCollection<IMLDataPair> ();  	if ((((uint)num) - ((uint)flag)) >= 0) {  		if (oldData == null) {  			return;  		}  		IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  		try {  			IMLDataPair pair;  			BasicMLData data;  			BasicMLData data2;  			BasicMLData data3;  			BasicMLData data4;  			Label_004D:  			flag = enumerator.MoveNext ();  			if (flag) {  				goto Label_0272;  			}  			goto Label_04E3;  			Label_0062:  			if (flag) {  				goto Label_0099;  			}  			goto Label_006F;  			Label_0068:  			if (!flag) {  				goto Label_00E3;  			}  			Label_006F:  			this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  			if (((uint)num) >= 0) {  				goto Label_004D;  			}  			Label_0099:  			data4 [num] = pair.ErrorArray [num];  			num++;  			Label_00B1:  			flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  			if (-1 == 0) {  				goto Label_0099;  			}  			goto Label_0062;  			Label_00E3:  			num = 0;  			goto Label_00B1;  			Label_00E9:  			flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  			Label_0102:  			if (flag) {  				goto Label_013F;  			}  			goto Label_010C;  			Label_0108:  			if (!flag) {  				goto Label_013B;  			}  			Label_010C:  			data4 = new BasicMLData (this.CalcedSize);  			flag = pair.ErrorArray == null;  			if (0 == 0) {  				goto Label_0068;  			}  			goto Label_04E3;  			Label_012D:  			flag = pair.CalcedArray == null;  			goto Label_0108;  			Label_013B:  			num = 0;  			goto Label_00E9;  			Label_013F:  			data3 [num] = pair.CalcedArray [num];  			num++;  			goto Label_00E9;  			Label_015C:  			if (flag) {  				goto Label_01B6;  			}  			if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  				goto Label_010C;  			}  			data3 = new BasicMLData (this.CalcedSize);  			goto Label_012D;  			Label_018D:  			flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  			goto Label_015C;  			Label_01A8:  			num = 0;  			if (8 == 0) {  				goto Label_0102;  			}  			goto Label_018D;  			Label_01B6:  			data2 [num] = pair.IdealArray [num];  			num++;  			Label_01CE:  			if (0xff == 0) {  				goto Label_01E2;  			}  			goto Label_018D;  			Label_01DC:  			num++;  			Label_01E2:  			flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  			if (flag) {  				goto Label_0239;  			}  			data2 = new BasicMLData (this.IdealSize);  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_01A8;  			}  			goto Label_0272;  			Label_0229:  			if (15 == 0) {  				goto Label_0068;  			}  			goto Label_0292;  			Label_0235:  			num = 0;  			goto Label_01E2;  			Label_0239:  			data [num] = pair.InputArray [num];  			if (-2147483648 == 0) {  				goto Label_01CE;  			}  			if ((((uint)num) | 8) == 0) {  				goto Label_018D;  			}  			goto Label_028B;  			Label_0272:  			pair = enumerator.Current;  			data = new BasicMLData (this.InputSize);  			goto Label_0235;  			Label_028B:  			if (3 != 0) {  				goto Label_0229;  			}  			Label_0292:  			if (1 != 0) {  				goto Label_01DC;  			}  			goto Label_01A8;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  	}  	goto Label_04E3;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  	if (flag) {  		flag = this.EditMode == DataSetEditMode.CheckData;  		if (((((uint)num) + ((uint)flag)) >= 0) && flag) {  			if (((uint)flag) <= uint.MaxValue) {  				goto Label_0311;  			}  			goto Label_03FD;  		}  		goto Label_0387;  	}  	this.DataCollection = new ObservableCollection<IMLDataPair> ();  	if ((((uint)num) - ((uint)flag)) >= 0) {  		if (oldData == null) {  			return;  		}  		IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  		try {  			IMLDataPair pair;  			BasicMLData data;  			BasicMLData data2;  			BasicMLData data3;  			BasicMLData data4;  			Label_004D:  			flag = enumerator.MoveNext ();  			if (flag) {  				goto Label_0272;  			}  			goto Label_04E3;  			Label_0062:  			if (flag) {  				goto Label_0099;  			}  			goto Label_006F;  			Label_0068:  			if (!flag) {  				goto Label_00E3;  			}  			Label_006F:  			this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  			if (((uint)num) >= 0) {  				goto Label_004D;  			}  			Label_0099:  			data4 [num] = pair.ErrorArray [num];  			num++;  			Label_00B1:  			flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  			if (-1 == 0) {  				goto Label_0099;  			}  			goto Label_0062;  			Label_00E3:  			num = 0;  			goto Label_00B1;  			Label_00E9:  			flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  			Label_0102:  			if (flag) {  				goto Label_013F;  			}  			goto Label_010C;  			Label_0108:  			if (!flag) {  				goto Label_013B;  			}  			Label_010C:  			data4 = new BasicMLData (this.CalcedSize);  			flag = pair.ErrorArray == null;  			if (0 == 0) {  				goto Label_0068;  			}  			goto Label_04E3;  			Label_012D:  			flag = pair.CalcedArray == null;  			goto Label_0108;  			Label_013B:  			num = 0;  			goto Label_00E9;  			Label_013F:  			data3 [num] = pair.CalcedArray [num];  			num++;  			goto Label_00E9;  			Label_015C:  			if (flag) {  				goto Label_01B6;  			}  			if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  				goto Label_010C;  			}  			data3 = new BasicMLData (this.CalcedSize);  			goto Label_012D;  			Label_018D:  			flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  			goto Label_015C;  			Label_01A8:  			num = 0;  			if (8 == 0) {  				goto Label_0102;  			}  			goto Label_018D;  			Label_01B6:  			data2 [num] = pair.IdealArray [num];  			num++;  			Label_01CE:  			if (0xff == 0) {  				goto Label_01E2;  			}  			goto Label_018D;  			Label_01DC:  			num++;  			Label_01E2:  			flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  			if (flag) {  				goto Label_0239;  			}  			data2 = new BasicMLData (this.IdealSize);  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_01A8;  			}  			goto Label_0272;  			Label_0229:  			if (15 == 0) {  				goto Label_0068;  			}  			goto Label_0292;  			Label_0235:  			num = 0;  			goto Label_01E2;  			Label_0239:  			data [num] = pair.InputArray [num];  			if (-2147483648 == 0) {  				goto Label_01CE;  			}  			if ((((uint)num) | 8) == 0) {  				goto Label_018D;  			}  			goto Label_028B;  			Label_0272:  			pair = enumerator.Current;  			data = new BasicMLData (this.InputSize);  			goto Label_0235;  			Label_028B:  			if (3 != 0) {  				goto Label_0229;  			}  			Label_0292:  			if (1 != 0) {  				goto Label_01DC;  			}  			goto Label_01A8;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  	}  	goto Label_04E3;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  	if (flag) {  		flag = this.EditMode == DataSetEditMode.CheckData;  		if (((((uint)num) + ((uint)flag)) >= 0) && flag) {  			if (((uint)flag) <= uint.MaxValue) {  				goto Label_0311;  			}  			goto Label_03FD;  		}  		goto Label_0387;  	}  	this.DataCollection = new ObservableCollection<IMLDataPair> ();  	if ((((uint)num) - ((uint)flag)) >= 0) {  		if (oldData == null) {  			return;  		}  		IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  		try {  			IMLDataPair pair;  			BasicMLData data;  			BasicMLData data2;  			BasicMLData data3;  			BasicMLData data4;  			Label_004D:  			flag = enumerator.MoveNext ();  			if (flag) {  				goto Label_0272;  			}  			goto Label_04E3;  			Label_0062:  			if (flag) {  				goto Label_0099;  			}  			goto Label_006F;  			Label_0068:  			if (!flag) {  				goto Label_00E3;  			}  			Label_006F:  			this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  			if (((uint)num) >= 0) {  				goto Label_004D;  			}  			Label_0099:  			data4 [num] = pair.ErrorArray [num];  			num++;  			Label_00B1:  			flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  			if (-1 == 0) {  				goto Label_0099;  			}  			goto Label_0062;  			Label_00E3:  			num = 0;  			goto Label_00B1;  			Label_00E9:  			flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  			Label_0102:  			if (flag) {  				goto Label_013F;  			}  			goto Label_010C;  			Label_0108:  			if (!flag) {  				goto Label_013B;  			}  			Label_010C:  			data4 = new BasicMLData (this.CalcedSize);  			flag = pair.ErrorArray == null;  			if (0 == 0) {  				goto Label_0068;  			}  			goto Label_04E3;  			Label_012D:  			flag = pair.CalcedArray == null;  			goto Label_0108;  			Label_013B:  			num = 0;  			goto Label_00E9;  			Label_013F:  			data3 [num] = pair.CalcedArray [num];  			num++;  			goto Label_00E9;  			Label_015C:  			if (flag) {  				goto Label_01B6;  			}  			if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  				goto Label_010C;  			}  			data3 = new BasicMLData (this.CalcedSize);  			goto Label_012D;  			Label_018D:  			flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  			goto Label_015C;  			Label_01A8:  			num = 0;  			if (8 == 0) {  				goto Label_0102;  			}  			goto Label_018D;  			Label_01B6:  			data2 [num] = pair.IdealArray [num];  			num++;  			Label_01CE:  			if (0xff == 0) {  				goto Label_01E2;  			}  			goto Label_018D;  			Label_01DC:  			num++;  			Label_01E2:  			flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  			if (flag) {  				goto Label_0239;  			}  			data2 = new BasicMLData (this.IdealSize);  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_01A8;  			}  			goto Label_0272;  			Label_0229:  			if (15 == 0) {  				goto Label_0068;  			}  			goto Label_0292;  			Label_0235:  			num = 0;  			goto Label_01E2;  			Label_0239:  			data [num] = pair.InputArray [num];  			if (-2147483648 == 0) {  				goto Label_01CE;  			}  			if ((((uint)num) | 8) == 0) {  				goto Label_018D;  			}  			goto Label_028B;  			Label_0272:  			pair = enumerator.Current;  			data = new BasicMLData (this.InputSize);  			goto Label_0235;  			Label_028B:  			if (3 != 0) {  				goto Label_0229;  			}  			Label_0292:  			if (1 != 0) {  				goto Label_01DC;  			}  			goto Label_01A8;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  	}  	goto Label_04E3;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  	if (flag) {  		flag = this.EditMode == DataSetEditMode.CheckData;  		if (((((uint)num) + ((uint)flag)) >= 0) && flag) {  			if (((uint)flag) <= uint.MaxValue) {  				goto Label_0311;  			}  			goto Label_03FD;  		}  		goto Label_0387;  	}  	this.DataCollection = new ObservableCollection<IMLDataPair> ();  	if ((((uint)num) - ((uint)flag)) >= 0) {  		if (oldData == null) {  			return;  		}  		IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  		try {  			IMLDataPair pair;  			BasicMLData data;  			BasicMLData data2;  			BasicMLData data3;  			BasicMLData data4;  			Label_004D:  			flag = enumerator.MoveNext ();  			if (flag) {  				goto Label_0272;  			}  			goto Label_04E3;  			Label_0062:  			if (flag) {  				goto Label_0099;  			}  			goto Label_006F;  			Label_0068:  			if (!flag) {  				goto Label_00E3;  			}  			Label_006F:  			this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  			if (((uint)num) >= 0) {  				goto Label_004D;  			}  			Label_0099:  			data4 [num] = pair.ErrorArray [num];  			num++;  			Label_00B1:  			flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  			if (-1 == 0) {  				goto Label_0099;  			}  			goto Label_0062;  			Label_00E3:  			num = 0;  			goto Label_00B1;  			Label_00E9:  			flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  			Label_0102:  			if (flag) {  				goto Label_013F;  			}  			goto Label_010C;  			Label_0108:  			if (!flag) {  				goto Label_013B;  			}  			Label_010C:  			data4 = new BasicMLData (this.CalcedSize);  			flag = pair.ErrorArray == null;  			if (0 == 0) {  				goto Label_0068;  			}  			goto Label_04E3;  			Label_012D:  			flag = pair.CalcedArray == null;  			goto Label_0108;  			Label_013B:  			num = 0;  			goto Label_00E9;  			Label_013F:  			data3 [num] = pair.CalcedArray [num];  			num++;  			goto Label_00E9;  			Label_015C:  			if (flag) {  				goto Label_01B6;  			}  			if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  				goto Label_010C;  			}  			data3 = new BasicMLData (this.CalcedSize);  			goto Label_012D;  			Label_018D:  			flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  			goto Label_015C;  			Label_01A8:  			num = 0;  			if (8 == 0) {  				goto Label_0102;  			}  			goto Label_018D;  			Label_01B6:  			data2 [num] = pair.IdealArray [num];  			num++;  			Label_01CE:  			if (0xff == 0) {  				goto Label_01E2;  			}  			goto Label_018D;  			Label_01DC:  			num++;  			Label_01E2:  			flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  			if (flag) {  				goto Label_0239;  			}  			data2 = new BasicMLData (this.IdealSize);  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_01A8;  			}  			goto Label_0272;  			Label_0229:  			if (15 == 0) {  				goto Label_0068;  			}  			goto Label_0292;  			Label_0235:  			num = 0;  			goto Label_01E2;  			Label_0239:  			data [num] = pair.InputArray [num];  			if (-2147483648 == 0) {  				goto Label_01CE;  			}  			if ((((uint)num) | 8) == 0) {  				goto Label_018D;  			}  			goto Label_028B;  			Label_0272:  			pair = enumerator.Current;  			data = new BasicMLData (this.InputSize);  			goto Label_0235;  			Label_028B:  			if (3 != 0) {  				goto Label_0229;  			}  			Label_0292:  			if (1 != 0) {  				goto Label_01DC;  			}  			goto Label_01A8;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  	}  	goto Label_04E3;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  	if (flag) {  		flag = this.EditMode == DataSetEditMode.CheckData;  		if (((((uint)num) + ((uint)flag)) >= 0) && flag) {  			if (((uint)flag) <= uint.MaxValue) {  				goto Label_0311;  			}  			goto Label_03FD;  		}  		goto Label_0387;  	}  	this.DataCollection = new ObservableCollection<IMLDataPair> ();  	if ((((uint)num) - ((uint)flag)) >= 0) {  		if (oldData == null) {  			return;  		}  		IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  		try {  			IMLDataPair pair;  			BasicMLData data;  			BasicMLData data2;  			BasicMLData data3;  			BasicMLData data4;  			Label_004D:  			flag = enumerator.MoveNext ();  			if (flag) {  				goto Label_0272;  			}  			goto Label_04E3;  			Label_0062:  			if (flag) {  				goto Label_0099;  			}  			goto Label_006F;  			Label_0068:  			if (!flag) {  				goto Label_00E3;  			}  			Label_006F:  			this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  			if (((uint)num) >= 0) {  				goto Label_004D;  			}  			Label_0099:  			data4 [num] = pair.ErrorArray [num];  			num++;  			Label_00B1:  			flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  			if (-1 == 0) {  				goto Label_0099;  			}  			goto Label_0062;  			Label_00E3:  			num = 0;  			goto Label_00B1;  			Label_00E9:  			flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  			Label_0102:  			if (flag) {  				goto Label_013F;  			}  			goto Label_010C;  			Label_0108:  			if (!flag) {  				goto Label_013B;  			}  			Label_010C:  			data4 = new BasicMLData (this.CalcedSize);  			flag = pair.ErrorArray == null;  			if (0 == 0) {  				goto Label_0068;  			}  			goto Label_04E3;  			Label_012D:  			flag = pair.CalcedArray == null;  			goto Label_0108;  			Label_013B:  			num = 0;  			goto Label_00E9;  			Label_013F:  			data3 [num] = pair.CalcedArray [num];  			num++;  			goto Label_00E9;  			Label_015C:  			if (flag) {  				goto Label_01B6;  			}  			if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  				goto Label_010C;  			}  			data3 = new BasicMLData (this.CalcedSize);  			goto Label_012D;  			Label_018D:  			flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  			goto Label_015C;  			Label_01A8:  			num = 0;  			if (8 == 0) {  				goto Label_0102;  			}  			goto Label_018D;  			Label_01B6:  			data2 [num] = pair.IdealArray [num];  			num++;  			Label_01CE:  			if (0xff == 0) {  				goto Label_01E2;  			}  			goto Label_018D;  			Label_01DC:  			num++;  			Label_01E2:  			flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  			if (flag) {  				goto Label_0239;  			}  			data2 = new BasicMLData (this.IdealSize);  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_01A8;  			}  			goto Label_0272;  			Label_0229:  			if (15 == 0) {  				goto Label_0068;  			}  			goto Label_0292;  			Label_0235:  			num = 0;  			goto Label_01E2;  			Label_0239:  			data [num] = pair.InputArray [num];  			if (-2147483648 == 0) {  				goto Label_01CE;  			}  			if ((((uint)num) | 8) == 0) {  				goto Label_018D;  			}  			goto Label_028B;  			Label_0272:  			pair = enumerator.Current;  			data = new BasicMLData (this.InputSize);  			goto Label_0235;  			Label_028B:  			if (3 != 0) {  				goto Label_0229;  			}  			Label_0292:  			if (1 != 0) {  				goto Label_01DC;  			}  			goto Label_01A8;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  	}  	goto Label_04E3;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) >= 0) {  	if (oldData == null) {  		return;  	}  	IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  	try {  		IMLDataPair pair;  		BasicMLData data;  		BasicMLData data2;  		BasicMLData data3;  		BasicMLData data4;  		Label_004D:  		flag = enumerator.MoveNext ();  		if (flag) {  			goto Label_0272;  		}  		goto Label_04E3;  		Label_0062:  		if (flag) {  			goto Label_0099;  		}  		goto Label_006F;  		Label_0068:  		if (!flag) {  			goto Label_00E3;  		}  		Label_006F:  		this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  		if (((uint)num) >= 0) {  			goto Label_004D;  		}  		Label_0099:  		data4 [num] = pair.ErrorArray [num];  		num++;  		Label_00B1:  		flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  		if (-1 == 0) {  			goto Label_0099;  		}  		goto Label_0062;  		Label_00E3:  		num = 0;  		goto Label_00B1;  		Label_00E9:  		flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  		Label_0102:  		if (flag) {  			goto Label_013F;  		}  		goto Label_010C;  		Label_0108:  		if (!flag) {  			goto Label_013B;  		}  		Label_010C:  		data4 = new BasicMLData (this.CalcedSize);  		flag = pair.ErrorArray == null;  		if (0 == 0) {  			goto Label_0068;  		}  		goto Label_04E3;  		Label_012D:  		flag = pair.CalcedArray == null;  		goto Label_0108;  		Label_013B:  		num = 0;  		goto Label_00E9;  		Label_013F:  		data3 [num] = pair.CalcedArray [num];  		num++;  		goto Label_00E9;  		Label_015C:  		if (flag) {  			goto Label_01B6;  		}  		if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  			goto Label_010C;  		}  		data3 = new BasicMLData (this.CalcedSize);  		goto Label_012D;  		Label_018D:  		flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  		goto Label_015C;  		Label_01A8:  		num = 0;  		if (8 == 0) {  			goto Label_0102;  		}  		goto Label_018D;  		Label_01B6:  		data2 [num] = pair.IdealArray [num];  		num++;  		Label_01CE:  		if (0xff == 0) {  			goto Label_01E2;  		}  		goto Label_018D;  		Label_01DC:  		num++;  		Label_01E2:  		flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  		if (flag) {  			goto Label_0239;  		}  		data2 = new BasicMLData (this.IdealSize);  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_01A8;  		}  		goto Label_0272;  		Label_0229:  		if (15 == 0) {  			goto Label_0068;  		}  		goto Label_0292;  		Label_0235:  		num = 0;  		goto Label_01E2;  		Label_0239:  		data [num] = pair.InputArray [num];  		if (-2147483648 == 0) {  			goto Label_01CE;  		}  		if ((((uint)num) | 8) == 0) {  			goto Label_018D;  		}  		goto Label_028B;  		Label_0272:  		pair = enumerator.Current;  		data = new BasicMLData (this.InputSize);  		goto Label_0235;  		Label_028B:  		if (3 != 0) {  			goto Label_0229;  		}  		Label_0292:  		if (1 != 0) {  			goto Label_01DC;  		}  		goto Label_01A8;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) >= 0) {  	if (oldData == null) {  		return;  	}  	IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  	try {  		IMLDataPair pair;  		BasicMLData data;  		BasicMLData data2;  		BasicMLData data3;  		BasicMLData data4;  		Label_004D:  		flag = enumerator.MoveNext ();  		if (flag) {  			goto Label_0272;  		}  		goto Label_04E3;  		Label_0062:  		if (flag) {  			goto Label_0099;  		}  		goto Label_006F;  		Label_0068:  		if (!flag) {  			goto Label_00E3;  		}  		Label_006F:  		this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  		if (((uint)num) >= 0) {  			goto Label_004D;  		}  		Label_0099:  		data4 [num] = pair.ErrorArray [num];  		num++;  		Label_00B1:  		flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  		if (-1 == 0) {  			goto Label_0099;  		}  		goto Label_0062;  		Label_00E3:  		num = 0;  		goto Label_00B1;  		Label_00E9:  		flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  		Label_0102:  		if (flag) {  			goto Label_013F;  		}  		goto Label_010C;  		Label_0108:  		if (!flag) {  			goto Label_013B;  		}  		Label_010C:  		data4 = new BasicMLData (this.CalcedSize);  		flag = pair.ErrorArray == null;  		if (0 == 0) {  			goto Label_0068;  		}  		goto Label_04E3;  		Label_012D:  		flag = pair.CalcedArray == null;  		goto Label_0108;  		Label_013B:  		num = 0;  		goto Label_00E9;  		Label_013F:  		data3 [num] = pair.CalcedArray [num];  		num++;  		goto Label_00E9;  		Label_015C:  		if (flag) {  			goto Label_01B6;  		}  		if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  			goto Label_010C;  		}  		data3 = new BasicMLData (this.CalcedSize);  		goto Label_012D;  		Label_018D:  		flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  		goto Label_015C;  		Label_01A8:  		num = 0;  		if (8 == 0) {  			goto Label_0102;  		}  		goto Label_018D;  		Label_01B6:  		data2 [num] = pair.IdealArray [num];  		num++;  		Label_01CE:  		if (0xff == 0) {  			goto Label_01E2;  		}  		goto Label_018D;  		Label_01DC:  		num++;  		Label_01E2:  		flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  		if (flag) {  			goto Label_0239;  		}  		data2 = new BasicMLData (this.IdealSize);  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_01A8;  		}  		goto Label_0272;  		Label_0229:  		if (15 == 0) {  			goto Label_0068;  		}  		goto Label_0292;  		Label_0235:  		num = 0;  		goto Label_01E2;  		Label_0239:  		data [num] = pair.InputArray [num];  		if (-2147483648 == 0) {  			goto Label_01CE;  		}  		if ((((uint)num) | 8) == 0) {  			goto Label_018D;  		}  		goto Label_028B;  		Label_0272:  		pair = enumerator.Current;  		data = new BasicMLData (this.InputSize);  		goto Label_0235;  		Label_028B:  		if (3 != 0) {  			goto Label_0229;  		}  		Label_0292:  		if (1 != 0) {  			goto Label_01DC;  		}  		goto Label_01A8;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) >= 0) {  	if (oldData == null) {  		return;  	}  	IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  	try {  		IMLDataPair pair;  		BasicMLData data;  		BasicMLData data2;  		BasicMLData data3;  		BasicMLData data4;  		Label_004D:  		flag = enumerator.MoveNext ();  		if (flag) {  			goto Label_0272;  		}  		goto Label_04E3;  		Label_0062:  		if (flag) {  			goto Label_0099;  		}  		goto Label_006F;  		Label_0068:  		if (!flag) {  			goto Label_00E3;  		}  		Label_006F:  		this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  		if (((uint)num) >= 0) {  			goto Label_004D;  		}  		Label_0099:  		data4 [num] = pair.ErrorArray [num];  		num++;  		Label_00B1:  		flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  		if (-1 == 0) {  			goto Label_0099;  		}  		goto Label_0062;  		Label_00E3:  		num = 0;  		goto Label_00B1;  		Label_00E9:  		flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  		Label_0102:  		if (flag) {  			goto Label_013F;  		}  		goto Label_010C;  		Label_0108:  		if (!flag) {  			goto Label_013B;  		}  		Label_010C:  		data4 = new BasicMLData (this.CalcedSize);  		flag = pair.ErrorArray == null;  		if (0 == 0) {  			goto Label_0068;  		}  		goto Label_04E3;  		Label_012D:  		flag = pair.CalcedArray == null;  		goto Label_0108;  		Label_013B:  		num = 0;  		goto Label_00E9;  		Label_013F:  		data3 [num] = pair.CalcedArray [num];  		num++;  		goto Label_00E9;  		Label_015C:  		if (flag) {  			goto Label_01B6;  		}  		if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  			goto Label_010C;  		}  		data3 = new BasicMLData (this.CalcedSize);  		goto Label_012D;  		Label_018D:  		flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  		goto Label_015C;  		Label_01A8:  		num = 0;  		if (8 == 0) {  			goto Label_0102;  		}  		goto Label_018D;  		Label_01B6:  		data2 [num] = pair.IdealArray [num];  		num++;  		Label_01CE:  		if (0xff == 0) {  			goto Label_01E2;  		}  		goto Label_018D;  		Label_01DC:  		num++;  		Label_01E2:  		flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  		if (flag) {  			goto Label_0239;  		}  		data2 = new BasicMLData (this.IdealSize);  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_01A8;  		}  		goto Label_0272;  		Label_0229:  		if (15 == 0) {  			goto Label_0068;  		}  		goto Label_0292;  		Label_0235:  		num = 0;  		goto Label_01E2;  		Label_0239:  		data [num] = pair.InputArray [num];  		if (-2147483648 == 0) {  			goto Label_01CE;  		}  		if ((((uint)num) | 8) == 0) {  			goto Label_018D;  		}  		goto Label_028B;  		Label_0272:  		pair = enumerator.Current;  		data = new BasicMLData (this.InputSize);  		goto Label_0235;  		Label_028B:  		if (3 != 0) {  			goto Label_0229;  		}  		Label_0292:  		if (1 != 0) {  			goto Label_01DC;  		}  		goto Label_01A8;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) >= 0) {  	if (oldData == null) {  		return;  	}  	IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  	try {  		IMLDataPair pair;  		BasicMLData data;  		BasicMLData data2;  		BasicMLData data3;  		BasicMLData data4;  		Label_004D:  		flag = enumerator.MoveNext ();  		if (flag) {  			goto Label_0272;  		}  		goto Label_04E3;  		Label_0062:  		if (flag) {  			goto Label_0099;  		}  		goto Label_006F;  		Label_0068:  		if (!flag) {  			goto Label_00E3;  		}  		Label_006F:  		this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  		if (((uint)num) >= 0) {  			goto Label_004D;  		}  		Label_0099:  		data4 [num] = pair.ErrorArray [num];  		num++;  		Label_00B1:  		flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  		if (-1 == 0) {  			goto Label_0099;  		}  		goto Label_0062;  		Label_00E3:  		num = 0;  		goto Label_00B1;  		Label_00E9:  		flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  		Label_0102:  		if (flag) {  			goto Label_013F;  		}  		goto Label_010C;  		Label_0108:  		if (!flag) {  			goto Label_013B;  		}  		Label_010C:  		data4 = new BasicMLData (this.CalcedSize);  		flag = pair.ErrorArray == null;  		if (0 == 0) {  			goto Label_0068;  		}  		goto Label_04E3;  		Label_012D:  		flag = pair.CalcedArray == null;  		goto Label_0108;  		Label_013B:  		num = 0;  		goto Label_00E9;  		Label_013F:  		data3 [num] = pair.CalcedArray [num];  		num++;  		goto Label_00E9;  		Label_015C:  		if (flag) {  			goto Label_01B6;  		}  		if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  			goto Label_010C;  		}  		data3 = new BasicMLData (this.CalcedSize);  		goto Label_012D;  		Label_018D:  		flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  		goto Label_015C;  		Label_01A8:  		num = 0;  		if (8 == 0) {  			goto Label_0102;  		}  		goto Label_018D;  		Label_01B6:  		data2 [num] = pair.IdealArray [num];  		num++;  		Label_01CE:  		if (0xff == 0) {  			goto Label_01E2;  		}  		goto Label_018D;  		Label_01DC:  		num++;  		Label_01E2:  		flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  		if (flag) {  			goto Label_0239;  		}  		data2 = new BasicMLData (this.IdealSize);  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_01A8;  		}  		goto Label_0272;  		Label_0229:  		if (15 == 0) {  			goto Label_0068;  		}  		goto Label_0292;  		Label_0235:  		num = 0;  		goto Label_01E2;  		Label_0239:  		data [num] = pair.InputArray [num];  		if (-2147483648 == 0) {  			goto Label_01CE;  		}  		if ((((uint)num) | 8) == 0) {  			goto Label_018D;  		}  		goto Label_028B;  		Label_0272:  		pair = enumerator.Current;  		data = new BasicMLData (this.InputSize);  		goto Label_0235;  		Label_028B:  		if (3 != 0) {  			goto Label_0229;  		}  		Label_0292:  		if (1 != 0) {  			goto Label_01DC;  		}  		goto Label_01A8;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) >= 0) {  	if (oldData == null) {  		return;  	}  	IEnumerator<IMLDataPair> enumerator = oldData.GetEnumerator ();  	try {  		IMLDataPair pair;  		BasicMLData data;  		BasicMLData data2;  		BasicMLData data3;  		BasicMLData data4;  		Label_004D:  		flag = enumerator.MoveNext ();  		if (flag) {  			goto Label_0272;  		}  		goto Label_04E3;  		Label_0062:  		if (flag) {  			goto Label_0099;  		}  		goto Label_006F;  		Label_0068:  		if (!flag) {  			goto Label_00E3;  		}  		Label_006F:  		this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  		if (((uint)num) >= 0) {  			goto Label_004D;  		}  		Label_0099:  		data4 [num] = pair.ErrorArray [num];  		num++;  		Label_00B1:  		flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  		if (-1 == 0) {  			goto Label_0099;  		}  		goto Label_0062;  		Label_00E3:  		num = 0;  		goto Label_00B1;  		Label_00E9:  		flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  		Label_0102:  		if (flag) {  			goto Label_013F;  		}  		goto Label_010C;  		Label_0108:  		if (!flag) {  			goto Label_013B;  		}  		Label_010C:  		data4 = new BasicMLData (this.CalcedSize);  		flag = pair.ErrorArray == null;  		if (0 == 0) {  			goto Label_0068;  		}  		goto Label_04E3;  		Label_012D:  		flag = pair.CalcedArray == null;  		goto Label_0108;  		Label_013B:  		num = 0;  		goto Label_00E9;  		Label_013F:  		data3 [num] = pair.CalcedArray [num];  		num++;  		goto Label_00E9;  		Label_015C:  		if (flag) {  			goto Label_01B6;  		}  		if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  			goto Label_010C;  		}  		data3 = new BasicMLData (this.CalcedSize);  		goto Label_012D;  		Label_018D:  		flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  		goto Label_015C;  		Label_01A8:  		num = 0;  		if (8 == 0) {  			goto Label_0102;  		}  		goto Label_018D;  		Label_01B6:  		data2 [num] = pair.IdealArray [num];  		num++;  		Label_01CE:  		if (0xff == 0) {  			goto Label_01E2;  		}  		goto Label_018D;  		Label_01DC:  		num++;  		Label_01E2:  		flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  		if (flag) {  			goto Label_0239;  		}  		data2 = new BasicMLData (this.IdealSize);  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_01A8;  		}  		goto Label_0272;  		Label_0229:  		if (15 == 0) {  			goto Label_0068;  		}  		goto Label_0292;  		Label_0235:  		num = 0;  		goto Label_01E2;  		Label_0239:  		data [num] = pair.InputArray [num];  		if (-2147483648 == 0) {  			goto Label_01CE;  		}  		if ((((uint)num) | 8) == 0) {  			goto Label_018D;  		}  		goto Label_028B;  		Label_0272:  		pair = enumerator.Current;  		data = new BasicMLData (this.InputSize);  		goto Label_0235;  		Label_028B:  		if (3 != 0) {  			goto Label_0229;  		}  		Label_0292:  		if (1 != 0) {  			goto Label_01DC;  		}  		goto Label_01A8;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: try {  	IMLDataPair pair;  	BasicMLData data;  	BasicMLData data2;  	BasicMLData data3;  	BasicMLData data4;  	Label_004D:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0272;  	}  	goto Label_04E3;  	Label_0062:  	if (flag) {  		goto Label_0099;  	}  	goto Label_006F;  	Label_0068:  	if (!flag) {  		goto Label_00E3;  	}  	Label_006F:  	this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  	if (((uint)num) >= 0) {  		goto Label_004D;  	}  	Label_0099:  	data4 [num] = pair.ErrorArray [num];  	num++;  	Label_00B1:  	flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  	if (-1 == 0) {  		goto Label_0099;  	}  	goto Label_0062;  	Label_00E3:  	num = 0;  	goto Label_00B1;  	Label_00E9:  	flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  	Label_0102:  	if (flag) {  		goto Label_013F;  	}  	goto Label_010C;  	Label_0108:  	if (!flag) {  		goto Label_013B;  	}  	Label_010C:  	data4 = new BasicMLData (this.CalcedSize);  	flag = pair.ErrorArray == null;  	if (0 == 0) {  		goto Label_0068;  	}  	goto Label_04E3;  	Label_012D:  	flag = pair.CalcedArray == null;  	goto Label_0108;  	Label_013B:  	num = 0;  	goto Label_00E9;  	Label_013F:  	data3 [num] = pair.CalcedArray [num];  	num++;  	goto Label_00E9;  	Label_015C:  	if (flag) {  		goto Label_01B6;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_010C;  	}  	data3 = new BasicMLData (this.CalcedSize);  	goto Label_012D;  	Label_018D:  	flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  	goto Label_015C;  	Label_01A8:  	num = 0;  	if (8 == 0) {  		goto Label_0102;  	}  	goto Label_018D;  	Label_01B6:  	data2 [num] = pair.IdealArray [num];  	num++;  	Label_01CE:  	if (0xff == 0) {  		goto Label_01E2;  	}  	goto Label_018D;  	Label_01DC:  	num++;  	Label_01E2:  	flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  	if (flag) {  		goto Label_0239;  	}  	data2 = new BasicMLData (this.IdealSize);  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_01A8;  	}  	goto Label_0272;  	Label_0229:  	if (15 == 0) {  		goto Label_0068;  	}  	goto Label_0292;  	Label_0235:  	num = 0;  	goto Label_01E2;  	Label_0239:  	data [num] = pair.InputArray [num];  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	if ((((uint)num) | 8) == 0) {  		goto Label_018D;  	}  	goto Label_028B;  	Label_0272:  	pair = enumerator.Current;  	data = new BasicMLData (this.InputSize);  	goto Label_0235;  	Label_028B:  	if (3 != 0) {  		goto Label_0229;  	}  	Label_0292:  	if (1 != 0) {  		goto Label_01DC;  	}  	goto Label_01A8;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: try {  	IMLDataPair pair;  	BasicMLData data;  	BasicMLData data2;  	BasicMLData data3;  	BasicMLData data4;  	Label_004D:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0272;  	}  	goto Label_04E3;  	Label_0062:  	if (flag) {  		goto Label_0099;  	}  	goto Label_006F;  	Label_0068:  	if (!flag) {  		goto Label_00E3;  	}  	Label_006F:  	this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  	if (((uint)num) >= 0) {  		goto Label_004D;  	}  	Label_0099:  	data4 [num] = pair.ErrorArray [num];  	num++;  	Label_00B1:  	flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  	if (-1 == 0) {  		goto Label_0099;  	}  	goto Label_0062;  	Label_00E3:  	num = 0;  	goto Label_00B1;  	Label_00E9:  	flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  	Label_0102:  	if (flag) {  		goto Label_013F;  	}  	goto Label_010C;  	Label_0108:  	if (!flag) {  		goto Label_013B;  	}  	Label_010C:  	data4 = new BasicMLData (this.CalcedSize);  	flag = pair.ErrorArray == null;  	if (0 == 0) {  		goto Label_0068;  	}  	goto Label_04E3;  	Label_012D:  	flag = pair.CalcedArray == null;  	goto Label_0108;  	Label_013B:  	num = 0;  	goto Label_00E9;  	Label_013F:  	data3 [num] = pair.CalcedArray [num];  	num++;  	goto Label_00E9;  	Label_015C:  	if (flag) {  		goto Label_01B6;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_010C;  	}  	data3 = new BasicMLData (this.CalcedSize);  	goto Label_012D;  	Label_018D:  	flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  	goto Label_015C;  	Label_01A8:  	num = 0;  	if (8 == 0) {  		goto Label_0102;  	}  	goto Label_018D;  	Label_01B6:  	data2 [num] = pair.IdealArray [num];  	num++;  	Label_01CE:  	if (0xff == 0) {  		goto Label_01E2;  	}  	goto Label_018D;  	Label_01DC:  	num++;  	Label_01E2:  	flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  	if (flag) {  		goto Label_0239;  	}  	data2 = new BasicMLData (this.IdealSize);  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_01A8;  	}  	goto Label_0272;  	Label_0229:  	if (15 == 0) {  		goto Label_0068;  	}  	goto Label_0292;  	Label_0235:  	num = 0;  	goto Label_01E2;  	Label_0239:  	data [num] = pair.InputArray [num];  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	if ((((uint)num) | 8) == 0) {  		goto Label_018D;  	}  	goto Label_028B;  	Label_0272:  	pair = enumerator.Current;  	data = new BasicMLData (this.InputSize);  	goto Label_0235;  	Label_028B:  	if (3 != 0) {  		goto Label_0229;  	}  	Label_0292:  	if (1 != 0) {  		goto Label_01DC;  	}  	goto Label_01A8;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: try {  	IMLDataPair pair;  	BasicMLData data;  	BasicMLData data2;  	BasicMLData data3;  	BasicMLData data4;  	Label_004D:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0272;  	}  	goto Label_04E3;  	Label_0062:  	if (flag) {  		goto Label_0099;  	}  	goto Label_006F;  	Label_0068:  	if (!flag) {  		goto Label_00E3;  	}  	Label_006F:  	this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  	if (((uint)num) >= 0) {  		goto Label_004D;  	}  	Label_0099:  	data4 [num] = pair.ErrorArray [num];  	num++;  	Label_00B1:  	flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  	if (-1 == 0) {  		goto Label_0099;  	}  	goto Label_0062;  	Label_00E3:  	num = 0;  	goto Label_00B1;  	Label_00E9:  	flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  	Label_0102:  	if (flag) {  		goto Label_013F;  	}  	goto Label_010C;  	Label_0108:  	if (!flag) {  		goto Label_013B;  	}  	Label_010C:  	data4 = new BasicMLData (this.CalcedSize);  	flag = pair.ErrorArray == null;  	if (0 == 0) {  		goto Label_0068;  	}  	goto Label_04E3;  	Label_012D:  	flag = pair.CalcedArray == null;  	goto Label_0108;  	Label_013B:  	num = 0;  	goto Label_00E9;  	Label_013F:  	data3 [num] = pair.CalcedArray [num];  	num++;  	goto Label_00E9;  	Label_015C:  	if (flag) {  		goto Label_01B6;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_010C;  	}  	data3 = new BasicMLData (this.CalcedSize);  	goto Label_012D;  	Label_018D:  	flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  	goto Label_015C;  	Label_01A8:  	num = 0;  	if (8 == 0) {  		goto Label_0102;  	}  	goto Label_018D;  	Label_01B6:  	data2 [num] = pair.IdealArray [num];  	num++;  	Label_01CE:  	if (0xff == 0) {  		goto Label_01E2;  	}  	goto Label_018D;  	Label_01DC:  	num++;  	Label_01E2:  	flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  	if (flag) {  		goto Label_0239;  	}  	data2 = new BasicMLData (this.IdealSize);  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_01A8;  	}  	goto Label_0272;  	Label_0229:  	if (15 == 0) {  		goto Label_0068;  	}  	goto Label_0292;  	Label_0235:  	num = 0;  	goto Label_01E2;  	Label_0239:  	data [num] = pair.InputArray [num];  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	if ((((uint)num) | 8) == 0) {  		goto Label_018D;  	}  	goto Label_028B;  	Label_0272:  	pair = enumerator.Current;  	data = new BasicMLData (this.InputSize);  	goto Label_0235;  	Label_028B:  	if (3 != 0) {  		goto Label_0229;  	}  	Label_0292:  	if (1 != 0) {  		goto Label_01DC;  	}  	goto Label_01A8;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: try {  	IMLDataPair pair;  	BasicMLData data;  	BasicMLData data2;  	BasicMLData data3;  	BasicMLData data4;  	Label_004D:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0272;  	}  	goto Label_04E3;  	Label_0062:  	if (flag) {  		goto Label_0099;  	}  	goto Label_006F;  	Label_0068:  	if (!flag) {  		goto Label_00E3;  	}  	Label_006F:  	this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  	if (((uint)num) >= 0) {  		goto Label_004D;  	}  	Label_0099:  	data4 [num] = pair.ErrorArray [num];  	num++;  	Label_00B1:  	flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  	if (-1 == 0) {  		goto Label_0099;  	}  	goto Label_0062;  	Label_00E3:  	num = 0;  	goto Label_00B1;  	Label_00E9:  	flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  	Label_0102:  	if (flag) {  		goto Label_013F;  	}  	goto Label_010C;  	Label_0108:  	if (!flag) {  		goto Label_013B;  	}  	Label_010C:  	data4 = new BasicMLData (this.CalcedSize);  	flag = pair.ErrorArray == null;  	if (0 == 0) {  		goto Label_0068;  	}  	goto Label_04E3;  	Label_012D:  	flag = pair.CalcedArray == null;  	goto Label_0108;  	Label_013B:  	num = 0;  	goto Label_00E9;  	Label_013F:  	data3 [num] = pair.CalcedArray [num];  	num++;  	goto Label_00E9;  	Label_015C:  	if (flag) {  		goto Label_01B6;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_010C;  	}  	data3 = new BasicMLData (this.CalcedSize);  	goto Label_012D;  	Label_018D:  	flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  	goto Label_015C;  	Label_01A8:  	num = 0;  	if (8 == 0) {  		goto Label_0102;  	}  	goto Label_018D;  	Label_01B6:  	data2 [num] = pair.IdealArray [num];  	num++;  	Label_01CE:  	if (0xff == 0) {  		goto Label_01E2;  	}  	goto Label_018D;  	Label_01DC:  	num++;  	Label_01E2:  	flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  	if (flag) {  		goto Label_0239;  	}  	data2 = new BasicMLData (this.IdealSize);  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_01A8;  	}  	goto Label_0272;  	Label_0229:  	if (15 == 0) {  		goto Label_0068;  	}  	goto Label_0292;  	Label_0235:  	num = 0;  	goto Label_01E2;  	Label_0239:  	data [num] = pair.InputArray [num];  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	if ((((uint)num) | 8) == 0) {  		goto Label_018D;  	}  	goto Label_028B;  	Label_0272:  	pair = enumerator.Current;  	data = new BasicMLData (this.InputSize);  	goto Label_0235;  	Label_028B:  	if (3 != 0) {  		goto Label_0229;  	}  	Label_0292:  	if (1 != 0) {  		goto Label_01DC;  	}  	goto Label_01A8;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: try {  	IMLDataPair pair;  	BasicMLData data;  	BasicMLData data2;  	BasicMLData data3;  	BasicMLData data4;  	Label_004D:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0272;  	}  	goto Label_04E3;  	Label_0062:  	if (flag) {  		goto Label_0099;  	}  	goto Label_006F;  	Label_0068:  	if (!flag) {  		goto Label_00E3;  	}  	Label_006F:  	this.DataCollection.Add (new BasicMLDataPair (data' data2' data3' data4));  	if (((uint)num) >= 0) {  		goto Label_004D;  	}  	Label_0099:  	data4 [num] = pair.ErrorArray [num];  	num++;  	Label_00B1:  	flag = num < Math.Min (this.CalcedSize' pair.ErrorArray.Length);  	if (-1 == 0) {  		goto Label_0099;  	}  	goto Label_0062;  	Label_00E3:  	num = 0;  	goto Label_00B1;  	Label_00E9:  	flag = num < Math.Min (this.CalcedSize' pair.CalcedArray.Length);  	Label_0102:  	if (flag) {  		goto Label_013F;  	}  	goto Label_010C;  	Label_0108:  	if (!flag) {  		goto Label_013B;  	}  	Label_010C:  	data4 = new BasicMLData (this.CalcedSize);  	flag = pair.ErrorArray == null;  	if (0 == 0) {  		goto Label_0068;  	}  	goto Label_04E3;  	Label_012D:  	flag = pair.CalcedArray == null;  	goto Label_0108;  	Label_013B:  	num = 0;  	goto Label_00E9;  	Label_013F:  	data3 [num] = pair.CalcedArray [num];  	num++;  	goto Label_00E9;  	Label_015C:  	if (flag) {  		goto Label_01B6;  	}  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_010C;  	}  	data3 = new BasicMLData (this.CalcedSize);  	goto Label_012D;  	Label_018D:  	flag = num < Math.Min (this.IdealSize' pair.IdealArray.Length);  	goto Label_015C;  	Label_01A8:  	num = 0;  	if (8 == 0) {  		goto Label_0102;  	}  	goto Label_018D;  	Label_01B6:  	data2 [num] = pair.IdealArray [num];  	num++;  	Label_01CE:  	if (0xff == 0) {  		goto Label_01E2;  	}  	goto Label_018D;  	Label_01DC:  	num++;  	Label_01E2:  	flag = num < Math.Min (this.InputSize' pair.InputArray.Length);  	if (flag) {  		goto Label_0239;  	}  	data2 = new BasicMLData (this.IdealSize);  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_01A8;  	}  	goto Label_0272;  	Label_0229:  	if (15 == 0) {  		goto Label_0068;  	}  	goto Label_0292;  	Label_0235:  	num = 0;  	goto Label_01E2;  	Label_0239:  	data [num] = pair.InputArray [num];  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	if ((((uint)num) | 8) == 0) {  		goto Label_018D;  	}  	goto Label_028B;  	Label_0272:  	pair = enumerator.Current;  	data = new BasicMLData (this.InputSize);  	goto Label_0235;  	Label_028B:  	if (3 != 0) {  		goto Label_0229;  	}  	Label_0292:  	if (1 != 0) {  		goto Label_01DC;  	}  	goto Label_01A8;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (8 == 0) {  	goto Label_0102;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (15 == 0) {  	goto Label_0068;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_01CE;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) | 8) == 0) {  	goto Label_018D;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (3 != 0) {  	goto Label_0229;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: column4.set_Width (new DataGridLength (60.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (2 == 0) {  	goto Label_06C9;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: column3.set_Width (new DataGridLength (60.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (flag) {  	DataGridTextColumn item = new DataGridTextColumn ();  	item.set_Header ("D" + (num + 1));  	item.set_Width (new DataGridLength (60.0));  	item.set_Binding (new Binding ("Ideal[" + num + "]"));  	item.set_IsReadOnly (false);  	this.dataGrid.get_Columns ().Add (item);  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: item.set_Width (new DataGridLength (60.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (flag) {  	DataGridTextColumn column = new DataGridTextColumn ();  	column.set_Header ("X" + (num + 1));  	column.set_Width (new DataGridLength (60.0));  	column.set_Binding (new Binding ("Input[" + num + "]"));  	column.set_IsReadOnly (false);  	this.dataGrid.get_Columns ().Add (column);  	num++;  	goto Label_06BE;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: column.set_Width (new DataGridLength (60.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if (8 != 0) {  	if (0 != 0) {  		goto Label_0540;  	}  	if (0 == 0) {  		if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  			if ((((uint)num) + ((uint)num)) < 0) {  				goto Label_02DA;  			}  			if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  				num = 0;  			}  		}  		goto Label_0540;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,RebuildGrid,The following statement contains a magic number: if ((((uint)num) | 4) == 0) {  	goto Label_0465;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: item.set_Width (new DataGridLength (60.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: column2.set_Width (new DataGridLength (150.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: column3.set_Width (new DataGridLength (150.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: column4.set_Width (new DataGridLength (150.0));  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (flag) {  	recArray [num].RME = Math.Round (numArray2 [num]' 4);  	recArray [num].AvgErr = Math.Round (numArray [num]' 4);  }  else if (((uint)num) >= 0) {  	goto Label_023F;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (flag) {  	recArray [num].RME = Math.Round (numArray2 [num]' 4);  	recArray [num].AvgErr = Math.Round (numArray [num]' 4);  }  else if (((uint)num) >= 0) {  	goto Label_023F;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: recArray [num].RME = Math.Round (numArray2 [num]' 4);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: recArray [num].AvgErr = Math.Round (numArray [num]' 4);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: recArray [num].MaxErr = Math.Round (recArray [num].MaxErr' 4);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (flag) {  	recArray [num] = new ErrorRec {  		Title = "Y" + (num + 1)  	};  	if ((((uint)num2) | uint.MaxValue) == 0) {  		return;  	}  }  else {  	if ((((uint)num2) - ((uint)num2)) >= 0) {  	}  	numArray = this.Data.x8e46c20a382f5c57 ();  	if (0 != 0) {  		goto Label_0546;  	}  	if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  		numArray2 = this.Data.xde3e9f8cc0169fde ();  		IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  		try {  			ErrorRec rec1;  			IMLDataPair pair;  			IMLData data;  			IMLData data2;  			IMLData data4;  			IMLData data6;  			goto Label_0316;  			Label_030A:  			if (flag) {  				goto Label_04DF;  			}  			goto Label_0449;  			Label_0316:  			flag = enumerator.MoveNext ();  			goto Label_030A;  			Label_0324:  			if (!flag) {  				goto Label_03EA;  			}  			Label_032B:  			num++;  			if (((uint)num) > uint.MaxValue) {  				goto Label_0324;  			}  			Label_0342:  			flag = num < data6.Count;  			if (flag) {  				goto Label_047E;  			}  			goto Label_039F;  			Label_0358:  			rec1 = recArray [num];  			rec1.RME += num2 * num2;  			recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  			pair.ErrorArray [num] = Math.Round (num2' 4);  			goto Label_032B;  			Label_039F:  			if (0 == 0) {  				goto Label_0316;  			}  			goto Label_030A;  			Label_03AF:  			flag = this.EditMode != DataSetEditMode.CheckData;  			if (((uint)num2) < 0) {  				goto Label_03AF;  			}  			if ((((uint)num2) - ((uint)flag)) >= 0) {  				goto Label_0324;  			}  			Label_03EA:  			num2 = pair.CalcedArray [num] - pair.IdealArray [num];  			ErrorRec rec2 = recArray [num];  			rec2.AvgErr += Math.Abs (num2);  			if ((((uint)num2) | 4) == 0) {  				goto Label_04A7;  			}  			if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  				goto Label_0358;  			}  			Label_0449:  			if (3 != 0) {  				goto Label_0509;  			}  			goto Label_04DF;  			Label_0458:  			if (((uint)num) > uint.MaxValue) {  				goto Label_0509;  			}  			data6 = processor.RestoreIdealVector (data4);  			num = 0;  			goto Label_0342;  			Label_047E:  			pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  			goto Label_03AF;  			Label_0498:  			data = new BasicMLData (pair.InputArray);  			Label_04A7:  			data2 = processor.ProcessInputVector (data);  			data4 = service.x5b0926ce641e48a7.Compute (data2);  			IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  			goto Label_0458;  			Label_04DF:  			pair = enumerator.Current;  			goto Label_0498;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  		goto Label_0509;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (flag) {  	recArray [num] = new ErrorRec {  		Title = "Y" + (num + 1)  	};  	if ((((uint)num2) | uint.MaxValue) == 0) {  		return;  	}  }  else {  	if ((((uint)num2) - ((uint)num2)) >= 0) {  	}  	numArray = this.Data.x8e46c20a382f5c57 ();  	if (0 != 0) {  		goto Label_0546;  	}  	if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  		numArray2 = this.Data.xde3e9f8cc0169fde ();  		IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  		try {  			ErrorRec rec1;  			IMLDataPair pair;  			IMLData data;  			IMLData data2;  			IMLData data4;  			IMLData data6;  			goto Label_0316;  			Label_030A:  			if (flag) {  				goto Label_04DF;  			}  			goto Label_0449;  			Label_0316:  			flag = enumerator.MoveNext ();  			goto Label_030A;  			Label_0324:  			if (!flag) {  				goto Label_03EA;  			}  			Label_032B:  			num++;  			if (((uint)num) > uint.MaxValue) {  				goto Label_0324;  			}  			Label_0342:  			flag = num < data6.Count;  			if (flag) {  				goto Label_047E;  			}  			goto Label_039F;  			Label_0358:  			rec1 = recArray [num];  			rec1.RME += num2 * num2;  			recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  			pair.ErrorArray [num] = Math.Round (num2' 4);  			goto Label_032B;  			Label_039F:  			if (0 == 0) {  				goto Label_0316;  			}  			goto Label_030A;  			Label_03AF:  			flag = this.EditMode != DataSetEditMode.CheckData;  			if (((uint)num2) < 0) {  				goto Label_03AF;  			}  			if ((((uint)num2) - ((uint)flag)) >= 0) {  				goto Label_0324;  			}  			Label_03EA:  			num2 = pair.CalcedArray [num] - pair.IdealArray [num];  			ErrorRec rec2 = recArray [num];  			rec2.AvgErr += Math.Abs (num2);  			if ((((uint)num2) | 4) == 0) {  				goto Label_04A7;  			}  			if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  				goto Label_0358;  			}  			Label_0449:  			if (3 != 0) {  				goto Label_0509;  			}  			goto Label_04DF;  			Label_0458:  			if (((uint)num) > uint.MaxValue) {  				goto Label_0509;  			}  			data6 = processor.RestoreIdealVector (data4);  			num = 0;  			goto Label_0342;  			Label_047E:  			pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  			goto Label_03AF;  			Label_0498:  			data = new BasicMLData (pair.InputArray);  			Label_04A7:  			data2 = processor.ProcessInputVector (data);  			data4 = service.x5b0926ce641e48a7.Compute (data2);  			IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  			goto Label_0458;  			Label_04DF:  			pair = enumerator.Current;  			goto Label_0498;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  		goto Label_0509;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (flag) {  	recArray [num] = new ErrorRec {  		Title = "Y" + (num + 1)  	};  	if ((((uint)num2) | uint.MaxValue) == 0) {  		return;  	}  }  else {  	if ((((uint)num2) - ((uint)num2)) >= 0) {  	}  	numArray = this.Data.x8e46c20a382f5c57 ();  	if (0 != 0) {  		goto Label_0546;  	}  	if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  		numArray2 = this.Data.xde3e9f8cc0169fde ();  		IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  		try {  			ErrorRec rec1;  			IMLDataPair pair;  			IMLData data;  			IMLData data2;  			IMLData data4;  			IMLData data6;  			goto Label_0316;  			Label_030A:  			if (flag) {  				goto Label_04DF;  			}  			goto Label_0449;  			Label_0316:  			flag = enumerator.MoveNext ();  			goto Label_030A;  			Label_0324:  			if (!flag) {  				goto Label_03EA;  			}  			Label_032B:  			num++;  			if (((uint)num) > uint.MaxValue) {  				goto Label_0324;  			}  			Label_0342:  			flag = num < data6.Count;  			if (flag) {  				goto Label_047E;  			}  			goto Label_039F;  			Label_0358:  			rec1 = recArray [num];  			rec1.RME += num2 * num2;  			recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  			pair.ErrorArray [num] = Math.Round (num2' 4);  			goto Label_032B;  			Label_039F:  			if (0 == 0) {  				goto Label_0316;  			}  			goto Label_030A;  			Label_03AF:  			flag = this.EditMode != DataSetEditMode.CheckData;  			if (((uint)num2) < 0) {  				goto Label_03AF;  			}  			if ((((uint)num2) - ((uint)flag)) >= 0) {  				goto Label_0324;  			}  			Label_03EA:  			num2 = pair.CalcedArray [num] - pair.IdealArray [num];  			ErrorRec rec2 = recArray [num];  			rec2.AvgErr += Math.Abs (num2);  			if ((((uint)num2) | 4) == 0) {  				goto Label_04A7;  			}  			if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  				goto Label_0358;  			}  			Label_0449:  			if (3 != 0) {  				goto Label_0509;  			}  			goto Label_04DF;  			Label_0458:  			if (((uint)num) > uint.MaxValue) {  				goto Label_0509;  			}  			data6 = processor.RestoreIdealVector (data4);  			num = 0;  			goto Label_0342;  			Label_047E:  			pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  			goto Label_03AF;  			Label_0498:  			data = new BasicMLData (pair.InputArray);  			Label_04A7:  			data2 = processor.ProcessInputVector (data);  			data4 = service.x5b0926ce641e48a7.Compute (data2);  			IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  			goto Label_0458;  			Label_04DF:  			pair = enumerator.Current;  			goto Label_0498;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  		goto Label_0509;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (flag) {  	recArray [num] = new ErrorRec {  		Title = "Y" + (num + 1)  	};  	if ((((uint)num2) | uint.MaxValue) == 0) {  		return;  	}  }  else {  	if ((((uint)num2) - ((uint)num2)) >= 0) {  	}  	numArray = this.Data.x8e46c20a382f5c57 ();  	if (0 != 0) {  		goto Label_0546;  	}  	if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  		numArray2 = this.Data.xde3e9f8cc0169fde ();  		IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  		try {  			ErrorRec rec1;  			IMLDataPair pair;  			IMLData data;  			IMLData data2;  			IMLData data4;  			IMLData data6;  			goto Label_0316;  			Label_030A:  			if (flag) {  				goto Label_04DF;  			}  			goto Label_0449;  			Label_0316:  			flag = enumerator.MoveNext ();  			goto Label_030A;  			Label_0324:  			if (!flag) {  				goto Label_03EA;  			}  			Label_032B:  			num++;  			if (((uint)num) > uint.MaxValue) {  				goto Label_0324;  			}  			Label_0342:  			flag = num < data6.Count;  			if (flag) {  				goto Label_047E;  			}  			goto Label_039F;  			Label_0358:  			rec1 = recArray [num];  			rec1.RME += num2 * num2;  			recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  			pair.ErrorArray [num] = Math.Round (num2' 4);  			goto Label_032B;  			Label_039F:  			if (0 == 0) {  				goto Label_0316;  			}  			goto Label_030A;  			Label_03AF:  			flag = this.EditMode != DataSetEditMode.CheckData;  			if (((uint)num2) < 0) {  				goto Label_03AF;  			}  			if ((((uint)num2) - ((uint)flag)) >= 0) {  				goto Label_0324;  			}  			Label_03EA:  			num2 = pair.CalcedArray [num] - pair.IdealArray [num];  			ErrorRec rec2 = recArray [num];  			rec2.AvgErr += Math.Abs (num2);  			if ((((uint)num2) | 4) == 0) {  				goto Label_04A7;  			}  			if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  				goto Label_0358;  			}  			Label_0449:  			if (3 != 0) {  				goto Label_0509;  			}  			goto Label_04DF;  			Label_0458:  			if (((uint)num) > uint.MaxValue) {  				goto Label_0509;  			}  			data6 = processor.RestoreIdealVector (data4);  			num = 0;  			goto Label_0342;  			Label_047E:  			pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  			goto Label_03AF;  			Label_0498:  			data = new BasicMLData (pair.InputArray);  			Label_04A7:  			data2 = processor.ProcessInputVector (data);  			data4 = service.x5b0926ce641e48a7.Compute (data2);  			IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  			goto Label_0458;  			Label_04DF:  			pair = enumerator.Current;  			goto Label_0498;  		}  		finally {  			flag = enumerator == null;  			while (!flag) {  				enumerator.Dispose ();  				break;  			}  		}  		goto Label_0509;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  	numArray2 = this.Data.xde3e9f8cc0169fde ();  	IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  	try {  		ErrorRec rec1;  		IMLDataPair pair;  		IMLData data;  		IMLData data2;  		IMLData data4;  		IMLData data6;  		goto Label_0316;  		Label_030A:  		if (flag) {  			goto Label_04DF;  		}  		goto Label_0449;  		Label_0316:  		flag = enumerator.MoveNext ();  		goto Label_030A;  		Label_0324:  		if (!flag) {  			goto Label_03EA;  		}  		Label_032B:  		num++;  		if (((uint)num) > uint.MaxValue) {  			goto Label_0324;  		}  		Label_0342:  		flag = num < data6.Count;  		if (flag) {  			goto Label_047E;  		}  		goto Label_039F;  		Label_0358:  		rec1 = recArray [num];  		rec1.RME += num2 * num2;  		recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  		pair.ErrorArray [num] = Math.Round (num2' 4);  		goto Label_032B;  		Label_039F:  		if (0 == 0) {  			goto Label_0316;  		}  		goto Label_030A;  		Label_03AF:  		flag = this.EditMode != DataSetEditMode.CheckData;  		if (((uint)num2) < 0) {  			goto Label_03AF;  		}  		if ((((uint)num2) - ((uint)flag)) >= 0) {  			goto Label_0324;  		}  		Label_03EA:  		num2 = pair.CalcedArray [num] - pair.IdealArray [num];  		ErrorRec rec2 = recArray [num];  		rec2.AvgErr += Math.Abs (num2);  		if ((((uint)num2) | 4) == 0) {  			goto Label_04A7;  		}  		if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  			goto Label_0358;  		}  		Label_0449:  		if (3 != 0) {  			goto Label_0509;  		}  		goto Label_04DF;  		Label_0458:  		if (((uint)num) > uint.MaxValue) {  			goto Label_0509;  		}  		data6 = processor.RestoreIdealVector (data4);  		num = 0;  		goto Label_0342;  		Label_047E:  		pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  		goto Label_03AF;  		Label_0498:  		data = new BasicMLData (pair.InputArray);  		Label_04A7:  		data2 = processor.ProcessInputVector (data);  		data4 = service.x5b0926ce641e48a7.Compute (data2);  		IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  		goto Label_0458;  		Label_04DF:  		pair = enumerator.Current;  		goto Label_0498;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  	goto Label_0509;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  	numArray2 = this.Data.xde3e9f8cc0169fde ();  	IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  	try {  		ErrorRec rec1;  		IMLDataPair pair;  		IMLData data;  		IMLData data2;  		IMLData data4;  		IMLData data6;  		goto Label_0316;  		Label_030A:  		if (flag) {  			goto Label_04DF;  		}  		goto Label_0449;  		Label_0316:  		flag = enumerator.MoveNext ();  		goto Label_030A;  		Label_0324:  		if (!flag) {  			goto Label_03EA;  		}  		Label_032B:  		num++;  		if (((uint)num) > uint.MaxValue) {  			goto Label_0324;  		}  		Label_0342:  		flag = num < data6.Count;  		if (flag) {  			goto Label_047E;  		}  		goto Label_039F;  		Label_0358:  		rec1 = recArray [num];  		rec1.RME += num2 * num2;  		recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  		pair.ErrorArray [num] = Math.Round (num2' 4);  		goto Label_032B;  		Label_039F:  		if (0 == 0) {  			goto Label_0316;  		}  		goto Label_030A;  		Label_03AF:  		flag = this.EditMode != DataSetEditMode.CheckData;  		if (((uint)num2) < 0) {  			goto Label_03AF;  		}  		if ((((uint)num2) - ((uint)flag)) >= 0) {  			goto Label_0324;  		}  		Label_03EA:  		num2 = pair.CalcedArray [num] - pair.IdealArray [num];  		ErrorRec rec2 = recArray [num];  		rec2.AvgErr += Math.Abs (num2);  		if ((((uint)num2) | 4) == 0) {  			goto Label_04A7;  		}  		if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  			goto Label_0358;  		}  		Label_0449:  		if (3 != 0) {  			goto Label_0509;  		}  		goto Label_04DF;  		Label_0458:  		if (((uint)num) > uint.MaxValue) {  			goto Label_0509;  		}  		data6 = processor.RestoreIdealVector (data4);  		num = 0;  		goto Label_0342;  		Label_047E:  		pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  		goto Label_03AF;  		Label_0498:  		data = new BasicMLData (pair.InputArray);  		Label_04A7:  		data2 = processor.ProcessInputVector (data);  		data4 = service.x5b0926ce641e48a7.Compute (data2);  		IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  		goto Label_0458;  		Label_04DF:  		pair = enumerator.Current;  		goto Label_0498;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  	goto Label_0509;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  	numArray2 = this.Data.xde3e9f8cc0169fde ();  	IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  	try {  		ErrorRec rec1;  		IMLDataPair pair;  		IMLData data;  		IMLData data2;  		IMLData data4;  		IMLData data6;  		goto Label_0316;  		Label_030A:  		if (flag) {  			goto Label_04DF;  		}  		goto Label_0449;  		Label_0316:  		flag = enumerator.MoveNext ();  		goto Label_030A;  		Label_0324:  		if (!flag) {  			goto Label_03EA;  		}  		Label_032B:  		num++;  		if (((uint)num) > uint.MaxValue) {  			goto Label_0324;  		}  		Label_0342:  		flag = num < data6.Count;  		if (flag) {  			goto Label_047E;  		}  		goto Label_039F;  		Label_0358:  		rec1 = recArray [num];  		rec1.RME += num2 * num2;  		recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  		pair.ErrorArray [num] = Math.Round (num2' 4);  		goto Label_032B;  		Label_039F:  		if (0 == 0) {  			goto Label_0316;  		}  		goto Label_030A;  		Label_03AF:  		flag = this.EditMode != DataSetEditMode.CheckData;  		if (((uint)num2) < 0) {  			goto Label_03AF;  		}  		if ((((uint)num2) - ((uint)flag)) >= 0) {  			goto Label_0324;  		}  		Label_03EA:  		num2 = pair.CalcedArray [num] - pair.IdealArray [num];  		ErrorRec rec2 = recArray [num];  		rec2.AvgErr += Math.Abs (num2);  		if ((((uint)num2) | 4) == 0) {  			goto Label_04A7;  		}  		if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  			goto Label_0358;  		}  		Label_0449:  		if (3 != 0) {  			goto Label_0509;  		}  		goto Label_04DF;  		Label_0458:  		if (((uint)num) > uint.MaxValue) {  			goto Label_0509;  		}  		data6 = processor.RestoreIdealVector (data4);  		num = 0;  		goto Label_0342;  		Label_047E:  		pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  		goto Label_03AF;  		Label_0498:  		data = new BasicMLData (pair.InputArray);  		Label_04A7:  		data2 = processor.ProcessInputVector (data);  		data4 = service.x5b0926ce641e48a7.Compute (data2);  		IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  		goto Label_0458;  		Label_04DF:  		pair = enumerator.Current;  		goto Label_0498;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  	goto Label_0509;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if ((((uint)flag) + ((uint)num2)) <= uint.MaxValue) {  	numArray2 = this.Data.xde3e9f8cc0169fde ();  	IEnumerator<IMLDataPair> enumerator = this.DataCollection.GetEnumerator ();  	try {  		ErrorRec rec1;  		IMLDataPair pair;  		IMLData data;  		IMLData data2;  		IMLData data4;  		IMLData data6;  		goto Label_0316;  		Label_030A:  		if (flag) {  			goto Label_04DF;  		}  		goto Label_0449;  		Label_0316:  		flag = enumerator.MoveNext ();  		goto Label_030A;  		Label_0324:  		if (!flag) {  			goto Label_03EA;  		}  		Label_032B:  		num++;  		if (((uint)num) > uint.MaxValue) {  			goto Label_0324;  		}  		Label_0342:  		flag = num < data6.Count;  		if (flag) {  			goto Label_047E;  		}  		goto Label_039F;  		Label_0358:  		rec1 = recArray [num];  		rec1.RME += num2 * num2;  		recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  		pair.ErrorArray [num] = Math.Round (num2' 4);  		goto Label_032B;  		Label_039F:  		if (0 == 0) {  			goto Label_0316;  		}  		goto Label_030A;  		Label_03AF:  		flag = this.EditMode != DataSetEditMode.CheckData;  		if (((uint)num2) < 0) {  			goto Label_03AF;  		}  		if ((((uint)num2) - ((uint)flag)) >= 0) {  			goto Label_0324;  		}  		Label_03EA:  		num2 = pair.CalcedArray [num] - pair.IdealArray [num];  		ErrorRec rec2 = recArray [num];  		rec2.AvgErr += Math.Abs (num2);  		if ((((uint)num2) | 4) == 0) {  			goto Label_04A7;  		}  		if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  			goto Label_0358;  		}  		Label_0449:  		if (3 != 0) {  			goto Label_0509;  		}  		goto Label_04DF;  		Label_0458:  		if (((uint)num) > uint.MaxValue) {  			goto Label_0509;  		}  		data6 = processor.RestoreIdealVector (data4);  		num = 0;  		goto Label_0342;  		Label_047E:  		pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  		goto Label_03AF;  		Label_0498:  		data = new BasicMLData (pair.InputArray);  		Label_04A7:  		data2 = processor.ProcessInputVector (data);  		data4 = service.x5b0926ce641e48a7.Compute (data2);  		IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  		goto Label_0458;  		Label_04DF:  		pair = enumerator.Current;  		goto Label_0498;  	}  	finally {  		flag = enumerator == null;  		while (!flag) {  			enumerator.Dispose ();  			break;  		}  	}  	goto Label_0509;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: try {  	ErrorRec rec1;  	IMLDataPair pair;  	IMLData data;  	IMLData data2;  	IMLData data4;  	IMLData data6;  	goto Label_0316;  	Label_030A:  	if (flag) {  		goto Label_04DF;  	}  	goto Label_0449;  	Label_0316:  	flag = enumerator.MoveNext ();  	goto Label_030A;  	Label_0324:  	if (!flag) {  		goto Label_03EA;  	}  	Label_032B:  	num++;  	if (((uint)num) > uint.MaxValue) {  		goto Label_0324;  	}  	Label_0342:  	flag = num < data6.Count;  	if (flag) {  		goto Label_047E;  	}  	goto Label_039F;  	Label_0358:  	rec1 = recArray [num];  	rec1.RME += num2 * num2;  	recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  	pair.ErrorArray [num] = Math.Round (num2' 4);  	goto Label_032B;  	Label_039F:  	if (0 == 0) {  		goto Label_0316;  	}  	goto Label_030A;  	Label_03AF:  	flag = this.EditMode != DataSetEditMode.CheckData;  	if (((uint)num2) < 0) {  		goto Label_03AF;  	}  	if ((((uint)num2) - ((uint)flag)) >= 0) {  		goto Label_0324;  	}  	Label_03EA:  	num2 = pair.CalcedArray [num] - pair.IdealArray [num];  	ErrorRec rec2 = recArray [num];  	rec2.AvgErr += Math.Abs (num2);  	if ((((uint)num2) | 4) == 0) {  		goto Label_04A7;  	}  	if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0358;  	}  	Label_0449:  	if (3 != 0) {  		goto Label_0509;  	}  	goto Label_04DF;  	Label_0458:  	if (((uint)num) > uint.MaxValue) {  		goto Label_0509;  	}  	data6 = processor.RestoreIdealVector (data4);  	num = 0;  	goto Label_0342;  	Label_047E:  	pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  	goto Label_03AF;  	Label_0498:  	data = new BasicMLData (pair.InputArray);  	Label_04A7:  	data2 = processor.ProcessInputVector (data);  	data4 = service.x5b0926ce641e48a7.Compute (data2);  	IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  	goto Label_0458;  	Label_04DF:  	pair = enumerator.Current;  	goto Label_0498;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: try {  	ErrorRec rec1;  	IMLDataPair pair;  	IMLData data;  	IMLData data2;  	IMLData data4;  	IMLData data6;  	goto Label_0316;  	Label_030A:  	if (flag) {  		goto Label_04DF;  	}  	goto Label_0449;  	Label_0316:  	flag = enumerator.MoveNext ();  	goto Label_030A;  	Label_0324:  	if (!flag) {  		goto Label_03EA;  	}  	Label_032B:  	num++;  	if (((uint)num) > uint.MaxValue) {  		goto Label_0324;  	}  	Label_0342:  	flag = num < data6.Count;  	if (flag) {  		goto Label_047E;  	}  	goto Label_039F;  	Label_0358:  	rec1 = recArray [num];  	rec1.RME += num2 * num2;  	recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  	pair.ErrorArray [num] = Math.Round (num2' 4);  	goto Label_032B;  	Label_039F:  	if (0 == 0) {  		goto Label_0316;  	}  	goto Label_030A;  	Label_03AF:  	flag = this.EditMode != DataSetEditMode.CheckData;  	if (((uint)num2) < 0) {  		goto Label_03AF;  	}  	if ((((uint)num2) - ((uint)flag)) >= 0) {  		goto Label_0324;  	}  	Label_03EA:  	num2 = pair.CalcedArray [num] - pair.IdealArray [num];  	ErrorRec rec2 = recArray [num];  	rec2.AvgErr += Math.Abs (num2);  	if ((((uint)num2) | 4) == 0) {  		goto Label_04A7;  	}  	if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0358;  	}  	Label_0449:  	if (3 != 0) {  		goto Label_0509;  	}  	goto Label_04DF;  	Label_0458:  	if (((uint)num) > uint.MaxValue) {  		goto Label_0509;  	}  	data6 = processor.RestoreIdealVector (data4);  	num = 0;  	goto Label_0342;  	Label_047E:  	pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  	goto Label_03AF;  	Label_0498:  	data = new BasicMLData (pair.InputArray);  	Label_04A7:  	data2 = processor.ProcessInputVector (data);  	data4 = service.x5b0926ce641e48a7.Compute (data2);  	IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  	goto Label_0458;  	Label_04DF:  	pair = enumerator.Current;  	goto Label_0498;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: try {  	ErrorRec rec1;  	IMLDataPair pair;  	IMLData data;  	IMLData data2;  	IMLData data4;  	IMLData data6;  	goto Label_0316;  	Label_030A:  	if (flag) {  		goto Label_04DF;  	}  	goto Label_0449;  	Label_0316:  	flag = enumerator.MoveNext ();  	goto Label_030A;  	Label_0324:  	if (!flag) {  		goto Label_03EA;  	}  	Label_032B:  	num++;  	if (((uint)num) > uint.MaxValue) {  		goto Label_0324;  	}  	Label_0342:  	flag = num < data6.Count;  	if (flag) {  		goto Label_047E;  	}  	goto Label_039F;  	Label_0358:  	rec1 = recArray [num];  	rec1.RME += num2 * num2;  	recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  	pair.ErrorArray [num] = Math.Round (num2' 4);  	goto Label_032B;  	Label_039F:  	if (0 == 0) {  		goto Label_0316;  	}  	goto Label_030A;  	Label_03AF:  	flag = this.EditMode != DataSetEditMode.CheckData;  	if (((uint)num2) < 0) {  		goto Label_03AF;  	}  	if ((((uint)num2) - ((uint)flag)) >= 0) {  		goto Label_0324;  	}  	Label_03EA:  	num2 = pair.CalcedArray [num] - pair.IdealArray [num];  	ErrorRec rec2 = recArray [num];  	rec2.AvgErr += Math.Abs (num2);  	if ((((uint)num2) | 4) == 0) {  		goto Label_04A7;  	}  	if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0358;  	}  	Label_0449:  	if (3 != 0) {  		goto Label_0509;  	}  	goto Label_04DF;  	Label_0458:  	if (((uint)num) > uint.MaxValue) {  		goto Label_0509;  	}  	data6 = processor.RestoreIdealVector (data4);  	num = 0;  	goto Label_0342;  	Label_047E:  	pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  	goto Label_03AF;  	Label_0498:  	data = new BasicMLData (pair.InputArray);  	Label_04A7:  	data2 = processor.ProcessInputVector (data);  	data4 = service.x5b0926ce641e48a7.Compute (data2);  	IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  	goto Label_0458;  	Label_04DF:  	pair = enumerator.Current;  	goto Label_0498;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: try {  	ErrorRec rec1;  	IMLDataPair pair;  	IMLData data;  	IMLData data2;  	IMLData data4;  	IMLData data6;  	goto Label_0316;  	Label_030A:  	if (flag) {  		goto Label_04DF;  	}  	goto Label_0449;  	Label_0316:  	flag = enumerator.MoveNext ();  	goto Label_030A;  	Label_0324:  	if (!flag) {  		goto Label_03EA;  	}  	Label_032B:  	num++;  	if (((uint)num) > uint.MaxValue) {  		goto Label_0324;  	}  	Label_0342:  	flag = num < data6.Count;  	if (flag) {  		goto Label_047E;  	}  	goto Label_039F;  	Label_0358:  	rec1 = recArray [num];  	rec1.RME += num2 * num2;  	recArray [num].MaxErr = Math.Max (recArray [num].MaxErr' Math.Abs (num2));  	pair.ErrorArray [num] = Math.Round (num2' 4);  	goto Label_032B;  	Label_039F:  	if (0 == 0) {  		goto Label_0316;  	}  	goto Label_030A;  	Label_03AF:  	flag = this.EditMode != DataSetEditMode.CheckData;  	if (((uint)num2) < 0) {  		goto Label_03AF;  	}  	if ((((uint)num2) - ((uint)flag)) >= 0) {  		goto Label_0324;  	}  	Label_03EA:  	num2 = pair.CalcedArray [num] - pair.IdealArray [num];  	ErrorRec rec2 = recArray [num];  	rec2.AvgErr += Math.Abs (num2);  	if ((((uint)num2) | 4) == 0) {  		goto Label_04A7;  	}  	if ((((uint)flag) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0358;  	}  	Label_0449:  	if (3 != 0) {  		goto Label_0509;  	}  	goto Label_04DF;  	Label_0458:  	if (((uint)num) > uint.MaxValue) {  		goto Label_0509;  	}  	data6 = processor.RestoreIdealVector (data4);  	num = 0;  	goto Label_0342;  	Label_047E:  	pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  	goto Label_03AF;  	Label_0498:  	data = new BasicMLData (pair.InputArray);  	Label_04A7:  	data2 = processor.ProcessInputVector (data);  	data4 = service.x5b0926ce641e48a7.Compute (data2);  	IMLData data5 = processor.ProcessIdealVector (new BasicMLData (pair.IdealArray));  	goto Label_0458;  	Label_04DF:  	pair = enumerator.Current;  	goto Label_0498;  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		break;  	}  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: pair.ErrorArray [num] = Math.Round (num2' 4);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if ((((uint)num2) | 4) == 0) {  	goto Label_04A7;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: if (3 != 0) {  	goto Label_0509;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: pair.CalcedArray [num] = Math.Round (data6 [num]' 4);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x2977a400fde1078f,The following statement contains a magic number: recArray [num].RMEN = Math.Round (service.x5b0926ce641e48a7.CalculateError (processor.ProcessDataSet (this.Data))' 4);  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x628e6c716ec340be,The following statement contains a magic number: switch (xf3efd21c486a5cce) {  case 1:  	this.dataGrid = (DataGrid)x11d58b056c032b03;  	break;  case 2:  	this.errorsGrid = (DataGrid)x11d58b056c032b03;  	break;  default:  	this._x7dc3d9d322900926 = true;  	break;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x63f05b2556ac6889,The following statement contains a magic number: if ((((uint)num4) | 3) != 0) {  	goto Label_0016;  }  
Magic Number,Nsim,DataSetEditor,C:\repos\neismit_emds\Nsim4\Nsim\DataSetEditor.cs,x63f05b2556ac6889,The following statement contains a magic number: if (num3 >= 0.3) {  	ReflectorVariable0 = false;  	goto Label_00F8;  }  
Magic Number,Nsim,RelayCommand,C:\repos\neismit_emds\Nsim4\Nsim\RelayCommand.cs,RelayCommand,The following statement contains a magic number: if ((execute == null) && (8 != 0)) {  	throw new ArgumentNullException ("execute");  }  
Magic Number,Nsim,x97d09efa0c4ea9c0,C:\repos\neismit_emds\Nsim4\Nsim\x97d09efa0c4ea9c0.cs,CalcData,The following statement contains a magic number: if ((((uint)num2) | 15) != 0) {  	num2++;  	if ((((uint)num2) + ((uint)flag)) > uint.MaxValue) {  		goto Label_003D;  	}  	goto Label_00E9;  }  
Magic Number,Nsim,x97d09efa0c4ea9c0,C:\repos\neismit_emds\Nsim4\Nsim\x97d09efa0c4ea9c0.cs,xf266aaef11483efa,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = data.GetEnumerator ()) {  	IMLDataPair pair;  	goto Label_0040;  	Label_0039:  	num2++;  	Label_0040:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0796;  	}  	if (((uint)flag) < 0) {  		goto Label_01D4;  	}  	return;  	Label_006A:  	num++;  	num4++;  	Label_0075:  	flag = num4 <= pair.ErrorArray.Length;  	Label_0087:  	if (flag) {  		goto Label_01DC;  	}  	if (((uint)num4) >= 0) {  		goto Label_07CA;  	}  	goto Label_01FF;  	Label_00A8:  	;  	ExportToExcel;  	p__Site17 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	Label_00E9:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site18 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site19 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site17.Target.Invoke ();  	goto Label_006A;  	Label_01C4:  	if (mode != DataSetEditMode.CheckData) {  		goto Label_0039;  	}  	Label_01D4:  	num4 = 1;  	goto Label_0075;  	Label_01DC:  	ExportToExcel;  	{  		goto Label_00E9;  	}  	if ((((uint)num2) + ((uint)num4)) >= 0) {  		goto Label_00A8;  	}  	Label_01FF:  	if (flag) {  		goto Label_037C;  	}  	goto Label_01C4;  	Label_0208:  	if (!flag) {  		goto Label_03F0;  	}  	goto Label_01C4;  	Label_021D:  	num++;  	num4++;  	Label_0228:  	flag = num4 <= pair.CalcedArray.Length;  	if ((((uint)num) + ((uint)num4)) > uint.MaxValue) {  		goto Label_060D;  	}  	goto Label_01FF;  	Label_025E:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site15 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site16 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site14.Target.Invoke ();  	if (0 == 0) {  		goto Label_021D;  	}  	goto Label_0410;  	Label_0342:  	if ((((uint)flag) | 2) == 0) {  		goto Label_0506;  	}  	if (((uint)num5) < 0) {  		goto Label_0729;  	}  	goto Label_0449;  	Label_037C:  	ExportToExcel;  	{  		goto Label_025E;  	}  	ExportToExcel;  	p__Site14 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	if ((((uint)num3) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_043F;  	}  	Label_03DE:  	if (flag) {  		goto Label_04BD;  	}  	Label_03E5:  	flag = mode == DataSetEditMode.TrainData;  	goto Label_0208;  	Label_03F0:  	num4 = 1;  	if ((((uint)num) | 8) != 0) {  		goto Label_0228;  	}  	goto Label_043F;  	Label_0410:  	if ((((uint)num5) - ((uint)num3)) > uint.MaxValue) {  		goto Label_0087;  	}  	if ((((uint)num5) & 0) == 0) {  		goto Label_03DE;  	}  	Label_043F:  	if (2 != 0) {  		goto Label_0342;  	}  	Label_0449:  	if ((((uint)flag) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_025E;  	}  	goto Label_021D;  	Label_0466:  	num4++;  	Label_046D:  	flag = num4 <= data.IdealSize;  	if ((((uint)num2) | 4) == 0) {  		goto Label_01C4;  	}  	if ((((uint)flag) & 0) == 0) {  		goto Label_0410;  	}  	goto Label_021D;  	Label_04B0:  	num++;  	goto Label_0466;  	Label_04BD:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site11 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	Label_0506:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site12 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site13 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site11.Target.Invoke ();  	goto Label_04B0;  	Label_05EB:  	if (((uint)num5) < 0) {  		goto Label_0208;  	}  	if (mode == DataSetEditMode.CalcData) {  		goto Label_03E5;  	}  	Label_060D:  	num4 = 1;  	goto Label_046D;  	Label_061A:  	if (!flag) {  		if ((((uint)num) & 0) != 0) {  			goto Label_0228;  		}  		goto Label_05EB;  	}  	ExportToExcel;  	{  		goto Label_0750;  	}  	Label_0645:  	ExportToExcel;  	{  		ExportToExcel;  		p__Sitef = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site10 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Sitee.Target.Invoke ();  	num++;  	num3++;  	Label_0729:  	flag = num3 <= data.InputSize;  	if ((((uint)flag) - ((uint)num3)) >= 0) {  		goto Label_07AA;  	}  	Label_0750:  	;  	ExportToExcel;  	p__Sitee = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	goto Label_0645;  	Label_0796:  	pair = enumerator.Current;  	num = 1;  	num3 = 1;  	goto Label_0729;  	Label_07AA:  	if ((((uint)num) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_061A;  	}  	goto Label_05EB;  	Label_07CA:  	if (0xff != 0) {  		goto Label_0039;  	}  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = data.GetEnumerator ()) {  	IMLDataPair pair;  	goto Label_0040;  	Label_0039:  	num2++;  	Label_0040:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0796;  	}  	if (((uint)flag) < 0) {  		goto Label_01D4;  	}  	return;  	Label_006A:  	num++;  	num4++;  	Label_0075:  	flag = num4 <= pair.ErrorArray.Length;  	Label_0087:  	if (flag) {  		goto Label_01DC;  	}  	if (((uint)num4) >= 0) {  		goto Label_07CA;  	}  	goto Label_01FF;  	Label_00A8:  	;  	ExportToExcel;  	p__Site17 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	Label_00E9:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site18 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site19 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site17.Target.Invoke ();  	goto Label_006A;  	Label_01C4:  	if (mode != DataSetEditMode.CheckData) {  		goto Label_0039;  	}  	Label_01D4:  	num4 = 1;  	goto Label_0075;  	Label_01DC:  	ExportToExcel;  	{  		goto Label_00E9;  	}  	if ((((uint)num2) + ((uint)num4)) >= 0) {  		goto Label_00A8;  	}  	Label_01FF:  	if (flag) {  		goto Label_037C;  	}  	goto Label_01C4;  	Label_0208:  	if (!flag) {  		goto Label_03F0;  	}  	goto Label_01C4;  	Label_021D:  	num++;  	num4++;  	Label_0228:  	flag = num4 <= pair.CalcedArray.Length;  	if ((((uint)num) + ((uint)num4)) > uint.MaxValue) {  		goto Label_060D;  	}  	goto Label_01FF;  	Label_025E:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site15 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site16 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site14.Target.Invoke ();  	if (0 == 0) {  		goto Label_021D;  	}  	goto Label_0410;  	Label_0342:  	if ((((uint)flag) | 2) == 0) {  		goto Label_0506;  	}  	if (((uint)num5) < 0) {  		goto Label_0729;  	}  	goto Label_0449;  	Label_037C:  	ExportToExcel;  	{  		goto Label_025E;  	}  	ExportToExcel;  	p__Site14 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	if ((((uint)num3) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_043F;  	}  	Label_03DE:  	if (flag) {  		goto Label_04BD;  	}  	Label_03E5:  	flag = mode == DataSetEditMode.TrainData;  	goto Label_0208;  	Label_03F0:  	num4 = 1;  	if ((((uint)num) | 8) != 0) {  		goto Label_0228;  	}  	goto Label_043F;  	Label_0410:  	if ((((uint)num5) - ((uint)num3)) > uint.MaxValue) {  		goto Label_0087;  	}  	if ((((uint)num5) & 0) == 0) {  		goto Label_03DE;  	}  	Label_043F:  	if (2 != 0) {  		goto Label_0342;  	}  	Label_0449:  	if ((((uint)flag) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_025E;  	}  	goto Label_021D;  	Label_0466:  	num4++;  	Label_046D:  	flag = num4 <= data.IdealSize;  	if ((((uint)num2) | 4) == 0) {  		goto Label_01C4;  	}  	if ((((uint)flag) & 0) == 0) {  		goto Label_0410;  	}  	goto Label_021D;  	Label_04B0:  	num++;  	goto Label_0466;  	Label_04BD:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site11 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	Label_0506:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site12 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site13 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site11.Target.Invoke ();  	goto Label_04B0;  	Label_05EB:  	if (((uint)num5) < 0) {  		goto Label_0208;  	}  	if (mode == DataSetEditMode.CalcData) {  		goto Label_03E5;  	}  	Label_060D:  	num4 = 1;  	goto Label_046D;  	Label_061A:  	if (!flag) {  		if ((((uint)num) & 0) != 0) {  			goto Label_0228;  		}  		goto Label_05EB;  	}  	ExportToExcel;  	{  		goto Label_0750;  	}  	Label_0645:  	ExportToExcel;  	{  		ExportToExcel;  		p__Sitef = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site10 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Sitee.Target.Invoke ();  	num++;  	num3++;  	Label_0729:  	flag = num3 <= data.InputSize;  	if ((((uint)flag) - ((uint)num3)) >= 0) {  		goto Label_07AA;  	}  	Label_0750:  	;  	ExportToExcel;  	p__Sitee = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	goto Label_0645;  	Label_0796:  	pair = enumerator.Current;  	num = 1;  	num3 = 1;  	goto Label_0729;  	Label_07AA:  	if ((((uint)num) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_061A;  	}  	goto Label_05EB;  	Label_07CA:  	if (0xff != 0) {  		goto Label_0039;  	}  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = data.GetEnumerator ()) {  	IMLDataPair pair;  	goto Label_0040;  	Label_0039:  	num2++;  	Label_0040:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0796;  	}  	if (((uint)flag) < 0) {  		goto Label_01D4;  	}  	return;  	Label_006A:  	num++;  	num4++;  	Label_0075:  	flag = num4 <= pair.ErrorArray.Length;  	Label_0087:  	if (flag) {  		goto Label_01DC;  	}  	if (((uint)num4) >= 0) {  		goto Label_07CA;  	}  	goto Label_01FF;  	Label_00A8:  	;  	ExportToExcel;  	p__Site17 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	Label_00E9:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site18 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site19 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site17.Target.Invoke ();  	goto Label_006A;  	Label_01C4:  	if (mode != DataSetEditMode.CheckData) {  		goto Label_0039;  	}  	Label_01D4:  	num4 = 1;  	goto Label_0075;  	Label_01DC:  	ExportToExcel;  	{  		goto Label_00E9;  	}  	if ((((uint)num2) + ((uint)num4)) >= 0) {  		goto Label_00A8;  	}  	Label_01FF:  	if (flag) {  		goto Label_037C;  	}  	goto Label_01C4;  	Label_0208:  	if (!flag) {  		goto Label_03F0;  	}  	goto Label_01C4;  	Label_021D:  	num++;  	num4++;  	Label_0228:  	flag = num4 <= pair.CalcedArray.Length;  	if ((((uint)num) + ((uint)num4)) > uint.MaxValue) {  		goto Label_060D;  	}  	goto Label_01FF;  	Label_025E:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site15 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site16 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site14.Target.Invoke ();  	if (0 == 0) {  		goto Label_021D;  	}  	goto Label_0410;  	Label_0342:  	if ((((uint)flag) | 2) == 0) {  		goto Label_0506;  	}  	if (((uint)num5) < 0) {  		goto Label_0729;  	}  	goto Label_0449;  	Label_037C:  	ExportToExcel;  	{  		goto Label_025E;  	}  	ExportToExcel;  	p__Site14 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	if ((((uint)num3) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_043F;  	}  	Label_03DE:  	if (flag) {  		goto Label_04BD;  	}  	Label_03E5:  	flag = mode == DataSetEditMode.TrainData;  	goto Label_0208;  	Label_03F0:  	num4 = 1;  	if ((((uint)num) | 8) != 0) {  		goto Label_0228;  	}  	goto Label_043F;  	Label_0410:  	if ((((uint)num5) - ((uint)num3)) > uint.MaxValue) {  		goto Label_0087;  	}  	if ((((uint)num5) & 0) == 0) {  		goto Label_03DE;  	}  	Label_043F:  	if (2 != 0) {  		goto Label_0342;  	}  	Label_0449:  	if ((((uint)flag) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_025E;  	}  	goto Label_021D;  	Label_0466:  	num4++;  	Label_046D:  	flag = num4 <= data.IdealSize;  	if ((((uint)num2) | 4) == 0) {  		goto Label_01C4;  	}  	if ((((uint)flag) & 0) == 0) {  		goto Label_0410;  	}  	goto Label_021D;  	Label_04B0:  	num++;  	goto Label_0466;  	Label_04BD:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site11 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	Label_0506:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site12 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site13 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site11.Target.Invoke ();  	goto Label_04B0;  	Label_05EB:  	if (((uint)num5) < 0) {  		goto Label_0208;  	}  	if (mode == DataSetEditMode.CalcData) {  		goto Label_03E5;  	}  	Label_060D:  	num4 = 1;  	goto Label_046D;  	Label_061A:  	if (!flag) {  		if ((((uint)num) & 0) != 0) {  			goto Label_0228;  		}  		goto Label_05EB;  	}  	ExportToExcel;  	{  		goto Label_0750;  	}  	Label_0645:  	ExportToExcel;  	{  		ExportToExcel;  		p__Sitef = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site10 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Sitee.Target.Invoke ();  	num++;  	num3++;  	Label_0729:  	flag = num3 <= data.InputSize;  	if ((((uint)flag) - ((uint)num3)) >= 0) {  		goto Label_07AA;  	}  	Label_0750:  	;  	ExportToExcel;  	p__Sitee = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	goto Label_0645;  	Label_0796:  	pair = enumerator.Current;  	num = 1;  	num3 = 1;  	goto Label_0729;  	Label_07AA:  	if ((((uint)num) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_061A;  	}  	goto Label_05EB;  	Label_07CA:  	if (0xff != 0) {  		goto Label_0039;  	}  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = data.GetEnumerator ()) {  	IMLDataPair pair;  	goto Label_0040;  	Label_0039:  	num2++;  	Label_0040:  	flag = enumerator.MoveNext ();  	if (flag) {  		goto Label_0796;  	}  	if (((uint)flag) < 0) {  		goto Label_01D4;  	}  	return;  	Label_006A:  	num++;  	num4++;  	Label_0075:  	flag = num4 <= pair.ErrorArray.Length;  	Label_0087:  	if (flag) {  		goto Label_01DC;  	}  	if (((uint)num4) >= 0) {  		goto Label_07CA;  	}  	goto Label_01FF;  	Label_00A8:  	;  	ExportToExcel;  	p__Site17 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	Label_00E9:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site18 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site19 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site17.Target.Invoke ();  	goto Label_006A;  	Label_01C4:  	if (mode != DataSetEditMode.CheckData) {  		goto Label_0039;  	}  	Label_01D4:  	num4 = 1;  	goto Label_0075;  	Label_01DC:  	ExportToExcel;  	{  		goto Label_00E9;  	}  	if ((((uint)num2) + ((uint)num4)) >= 0) {  		goto Label_00A8;  	}  	Label_01FF:  	if (flag) {  		goto Label_037C;  	}  	goto Label_01C4;  	Label_0208:  	if (!flag) {  		goto Label_03F0;  	}  	goto Label_01C4;  	Label_021D:  	num++;  	num4++;  	Label_0228:  	flag = num4 <= pair.CalcedArray.Length;  	if ((((uint)num) + ((uint)num4)) > uint.MaxValue) {  		goto Label_060D;  	}  	goto Label_01FF;  	Label_025E:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site15 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site16 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site14.Target.Invoke ();  	if (0 == 0) {  		goto Label_021D;  	}  	goto Label_0410;  	Label_0342:  	if ((((uint)flag) | 2) == 0) {  		goto Label_0506;  	}  	if (((uint)num5) < 0) {  		goto Label_0729;  	}  	goto Label_0449;  	Label_037C:  	ExportToExcel;  	{  		goto Label_025E;  	}  	ExportToExcel;  	p__Site14 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	if ((((uint)num3) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_043F;  	}  	Label_03DE:  	if (flag) {  		goto Label_04BD;  	}  	Label_03E5:  	flag = mode == DataSetEditMode.TrainData;  	goto Label_0208;  	Label_03F0:  	num4 = 1;  	if ((((uint)num) | 8) != 0) {  		goto Label_0228;  	}  	goto Label_043F;  	Label_0410:  	if ((((uint)num5) - ((uint)num3)) > uint.MaxValue) {  		goto Label_0087;  	}  	if ((((uint)num5) & 0) == 0) {  		goto Label_03DE;  	}  	Label_043F:  	if (2 != 0) {  		goto Label_0342;  	}  	Label_0449:  	if ((((uint)flag) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_025E;  	}  	goto Label_021D;  	Label_0466:  	num4++;  	Label_046D:  	flag = num4 <= data.IdealSize;  	if ((((uint)num2) | 4) == 0) {  		goto Label_01C4;  	}  	if ((((uint)flag) & 0) == 0) {  		goto Label_0410;  	}  	goto Label_021D;  	Label_04B0:  	num++;  	goto Label_0466;  	Label_04BD:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site11 = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	Label_0506:  	ExportToExcel;  	{  		ExportToExcel;  		p__Site12 = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site13 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Site11.Target.Invoke ();  	goto Label_04B0;  	Label_05EB:  	if (((uint)num5) < 0) {  		goto Label_0208;  	}  	if (mode == DataSetEditMode.CalcData) {  		goto Label_03E5;  	}  	Label_060D:  	num4 = 1;  	goto Label_046D;  	Label_061A:  	if (!flag) {  		if ((((uint)num) & 0) != 0) {  			goto Label_0228;  		}  		goto Label_05EB;  	}  	ExportToExcel;  	{  		goto Label_0750;  	}  	Label_0645:  	ExportToExcel;  	{  		ExportToExcel;  		p__Sitef = CallSite<Func<CallSite' object' int' int' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetIndex (CSharpBinderFlags.None' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)'  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  		}));  	}  	ExportToExcel;  	{  		ExportToExcel;  		p__Site10 = CallSite<Func<CallSite' object' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.GetMember (CSharpBinderFlags.ResultIndexed' "Cells"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  			CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)  		}));  	}  	ExportToExcel;  	p__Sitee.Target.Invoke ();  	num++;  	num3++;  	Label_0729:  	flag = num3 <= data.InputSize;  	if ((((uint)flag) - ((uint)num3)) >= 0) {  		goto Label_07AA;  	}  	Label_0750:  	;  	ExportToExcel;  	p__Sitee = CallSite<Func<CallSite' object' double' object>>.Create (Microsoft.CSharp.RuntimeBinder.Binder.SetMember (CSharpBinderFlags.None' "Value2"' typeof(ExcelDataExport)' new CSharpArgumentInfo[] {  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.None' null)'  		CSharpArgumentInfo.Create (CSharpArgumentInfoFlags.UseCompileTimeType' null)  	}));  	goto Label_0645;  	Label_0796:  	pair = enumerator.Current;  	num = 1;  	num3 = 1;  	goto Label_0729;  	Label_07AA:  	if ((((uint)num) + ((uint)flag)) <= uint.MaxValue) {  		goto Label_061A;  	}  	goto Label_05EB;  	Label_07CA:  	if (0xff != 0) {  		goto Label_0039;  	}  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if ((((uint)flag) | 2) == 0) {  	goto Label_0506;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if ((((uint)num) | 8) != 0) {  	goto Label_0228;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if (2 != 0) {  	goto Label_0342;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if ((((uint)num2) | 4) == 0) {  	goto Label_01C4;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if (!flag) {  	num6 = 1;  	if (((uint)num) <= uint.MaxValue) {  		goto Label_07F9;  	}  	if ((((uint)num) + ((uint)num4)) <= uint.MaxValue) {  		if ((((uint)flag) + ((uint)num6)) >= 0) {  			if ((((uint)num3) - ((uint)num2)) >= 0) {  				if (3 == 0) {  					return;  				}  				goto Label_087B;  			}  			goto Label_0C38;  		}  		goto Label_0BF7;  	}  	goto Label_09F2;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if ((((uint)num) + ((uint)num4)) <= uint.MaxValue) {  	if ((((uint)flag) + ((uint)num6)) >= 0) {  		if ((((uint)num3) - ((uint)num2)) >= 0) {  			if (3 == 0) {  				return;  			}  			goto Label_087B;  		}  		goto Label_0C38;  	}  	goto Label_0BF7;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if ((((uint)flag) + ((uint)num6)) >= 0) {  	if ((((uint)num3) - ((uint)num2)) >= 0) {  		if (3 == 0) {  			return;  		}  		goto Label_087B;  	}  	goto Label_0C38;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if ((((uint)num3) - ((uint)num2)) >= 0) {  	if (3 == 0) {  		return;  	}  	goto Label_087B;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if (3 == 0) {  	return;  }  
Magic Number,Nsim,ExcelDataExport,C:\repos\neismit_emds\Nsim4\Nsim\ExcelDataExport.cs,ExportToExcel,The following statement contains a magic number: if (4 == 0) {  	goto Label_0E6A;  }  
Magic Number,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The following statement contains a magic number: flag = !((15 != 0) && nullable.HasValue);  
Magic Number,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The following statement contains a magic number: if (!flag) {  	set = new BasicMLDataSet ();  	list = new List<double> ();  	row = usedRange.Row;  	if ((((uint)num2) | 4) != 0) {  		goto Label_025C;  	}  }  
Magic Number,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xba08e03b3c6894f3,The following statement contains a magic number: if ((((uint)num2) | 4) != 0) {  	goto Label_025C;  }  
Magic Number,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The following statement contains a magic number: using (Dictionary<string' List<int>>.KeyCollection.Enumerator enumerator = dictionary.Keys.GetEnumerator ()) {  	string str2;  	char ch;  	goto Label_0410;  	Label_040B:  	if (!flag) {  		goto Label_041F;  	}  	Label_0410:  	if (enumerator.MoveNext ()) {  		goto Label_0484;  	}  	goto Label_04A7;  	Label_041F:  	dictionary [str2].Add (num4);  	if (((uint)num3) <= uint.MaxValue) {  	}  	goto Label_0410;  	Label_0446:  	ch = str.ToUpper () [0];  	flag = !(ch.ToString () == str2);  	if ((((uint)num2) & 0) == 0) {  		goto Label_040B;  	}  	goto Label_041F;  	Label_0484:  	str2 = enumerator.Current;  	if (8 == 0) {  		goto Label_0484;  	}  	goto Label_0446;  }  
Magic Number,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The following statement contains a magic number: if (8 == 0) {  	goto Label_0484;  }  
Magic Number,Nsim,xe8f63ddfa545c93b,C:\repos\neismit_emds\Nsim4\Nsim\xe8f63ddfa545c93b.cs,xebaf754dad416a25,The following statement contains a magic number: if ((((uint)num5) | 15) != 0) {  	if ((((uint)flag) + ((uint)num3)) >= 0) {  		dictionary3.Add ("Y"' new List<int> ());  	}  	goto Label_0631;  }  
Magic Number,Nsim,ImportExcelFileDialog,C:\repos\neismit_emds\Nsim4\Nsim\ImportExcelFileDialog.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	goto Label_0068;  case 2:  	this.btnOk = (Button)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if (1 != 0) {  			this.btnOk.Click += new RoutedEventHandler (this.xcd80a3ba12753aad);  			return;  		}  		if (0xff != 0) {  			break;  		}  		goto Label_0068;  	}  	goto Label_00B2;  case 3:  	break;  default:  	this._x7dc3d9d322900926 = true;  	return;  }  
Magic Number,Nsim,ImportExcelFileDialog,C:\repos\neismit_emds\Nsim4\Nsim\ImportExcelFileDialog.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	goto Label_0068;  case 2:  	this.btnOk = (Button)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if (1 != 0) {  			this.btnOk.Click += new RoutedEventHandler (this.xcd80a3ba12753aad);  			return;  		}  		if (0xff != 0) {  			break;  		}  		goto Label_0068;  	}  	goto Label_00B2;  case 3:  	break;  default:  	this._x7dc3d9d322900926 = true;  	return;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if (!flag) {  	flag = !num4.Equals ((double)0.0);  	if (!flag) {  		this.OutC [num5].D = 1.0;  		if ((((uint)num2) | 4) == 0) {  			goto Label_0400;  		}  		if (((uint)num2) >= 0) {  			goto Label_015E;  		}  	}  	this.OutC [num5].D = this.B / num4;  	if (((uint)flag) >= 0) {  		if ((((uint)num3) + ((uint)num)) <= uint.MaxValue) {  			if (((((uint)num5) - ((uint)num5)) <= uint.MaxValue) && ((((uint)num) & 0) != 0)) {  				goto Label_063E;  			}  			this.OutC [num5].C = (this.B - this.A) / 2.0;  			goto Label_00A8;  		}  		if (((uint)num3) <= uint.MaxValue) {  			goto Label_0399;  		}  		goto Label_036C;  	}  	goto Label_0286;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if (!flag) {  	flag = !num4.Equals ((double)0.0);  	if (!flag) {  		this.OutC [num5].D = 1.0;  		if ((((uint)num2) | 4) == 0) {  			goto Label_0400;  		}  		if (((uint)num2) >= 0) {  			goto Label_015E;  		}  	}  	this.OutC [num5].D = this.B / num4;  	if (((uint)flag) >= 0) {  		if ((((uint)num3) + ((uint)num)) <= uint.MaxValue) {  			if (((((uint)num5) - ((uint)num5)) <= uint.MaxValue) && ((((uint)num) & 0) != 0)) {  				goto Label_063E;  			}  			this.OutC [num5].C = (this.B - this.A) / 2.0;  			goto Label_00A8;  		}  		if (((uint)num3) <= uint.MaxValue) {  			goto Label_0399;  		}  		goto Label_036C;  	}  	goto Label_0286;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if (!flag) {  	this.OutC [num5].D = 1.0;  	if ((((uint)num2) | 4) == 0) {  		goto Label_0400;  	}  	if (((uint)num2) >= 0) {  		goto Label_015E;  	}  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)num2) | 4) == 0) {  	goto Label_0400;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if (((uint)flag) >= 0) {  	if ((((uint)num3) + ((uint)num)) <= uint.MaxValue) {  		if (((((uint)num5) - ((uint)num5)) <= uint.MaxValue) && ((((uint)num) & 0) != 0)) {  			goto Label_063E;  		}  		this.OutC [num5].C = (this.B - this.A) / 2.0;  		goto Label_00A8;  	}  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0399;  	}  	goto Label_036C;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)num3) + ((uint)num)) <= uint.MaxValue) {  	if (((((uint)num5) - ((uint)num5)) <= uint.MaxValue) && ((((uint)num) & 0) != 0)) {  		goto Label_063E;  	}  	this.OutC [num5].C = (this.B - this.A) / 2.0;  	goto Label_00A8;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: this.OutC [num5].C = (this.B - this.A) / 2.0;  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: this.InC [num].C = (this.B - this.A) / 2.0;  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)num4) | 2) == 0) {  	goto Label_0484;  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,RestoreDataSet,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = dataToProcess.GetEnumerator ()) {  	IMLDataPair pair;  	bool flag;  	goto Label_0026;  	Label_0011:  	pair = enumerator.Current;  	set.Add (this.RestoreDataVector (pair));  	Label_0026:  	flag = enumerator.MoveNext ();  	if (3 == 0) {  		goto Label_0026;  	}  	if (flag) {  		goto Label_0011;  	}  }  
Magic Number,Nsim,LinearScale,C:\repos\neismit_emds\Nsim4\Nsim\LinearScale.cs,RestoreDataSet,The following statement contains a magic number: if (3 == 0) {  	goto Label_0026;  }  
Magic Number,Nsim,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\ActivationConfig.cs,InitializeComponent,The following statement contains a magic number: while (flag) {  	if (15 != 0) {  	}  	this._x7dc3d9d322900926 = true;  	Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/activations/activationconfig.xaml"' UriKind.Relative);  	Application.LoadComponent (this' resourceLocator);  	if (0 == 0) {  		return;  	}  }  
Magic Number,Nsim,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\ActivationConfig.cs,InitializeComponent,The following statement contains a magic number: if (15 != 0) {  }  
Magic Number,Nsim,ActivationDecoratorFactory,C:\repos\neismit_emds\Nsim4\Nsim\ActivationDecoratorFactory.cs,ActivationDecoratorFactory,The following statement contains a magic number: while (true) {  	if (-2147483648 != 0) {  		x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationBiPolar>> ("Биполярная"));  		x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationCompetitive>> ("Конкуренции"));  		x0821fce41ef1687a.Add (new xf266003de4abb417<xc49d19d0e6c1e155> ("Гаусса"));  		x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationLinear>> ("Линейная"));  		x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationLOG>> ("Логорифмическая"));  		x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationRamp>> ("Наклонная"));  	}  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationSigmoid>> ("Сигмоида"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationSIN>> ("Синус"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationSoftMax>> ("Софтмакс"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationStep>> ("Ступенька"));  	if (0 == 0) {  		x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationTANH>> ("Тангенс Гиперболический"));  		return;  	}  }  
Magic Number,Nsim,ActivationDecoratorFactory,C:\repos\neismit_emds\Nsim4\Nsim\ActivationDecoratorFactory.cs,ActivationDecoratorFactory,The following statement contains a magic number: if (-2147483648 != 0) {  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationBiPolar>> ("Биполярная"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationCompetitive>> ("Конкуренции"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xc49d19d0e6c1e155> ("Гаусса"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationLinear>> ("Линейная"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationLOG>> ("Логорифмическая"));  	x0821fce41ef1687a.Add (new xf266003de4abb417<xdb76bc24a79224de<ActivationRamp>> ("Наклонная"));  }  
Magic Number,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,x628e6c716ec340be,The following statement contains a magic number: switch (xf3efd21c486a5cce) {  case 1:  	this.lblTrainError = (TextBlock)x11d58b056c032b03;  	break;  case 2:  	this.lblTestError = (TextBlock)x11d58b056c032b03;  	break;  case 3:  	do {  		this.lblTotalIterations = (TextBlock)x11d58b056c032b03;  	}  	while (-1 == 0);  	break;  default:  	this._x7dc3d9d322900926 = true;  	break;  }  
Magic Number,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,x628e6c716ec340be,The following statement contains a magic number: switch (xf3efd21c486a5cce) {  case 1:  	this.lblTrainError = (TextBlock)x11d58b056c032b03;  	break;  case 2:  	this.lblTestError = (TextBlock)x11d58b056c032b03;  	break;  case 3:  	do {  		this.lblTotalIterations = (TextBlock)x11d58b056c032b03;  	}  	while (-1 == 0);  	break;  default:  	this._x7dc3d9d322900926 = true;  	break;  }  
Magic Number,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,xd7c6aaa737a7575c,The following statement contains a magic number: if (8 != 0) {  	tchErrStp = service.TeachError;  }  
Magic Number,Nsim,TrainStatusControl,C:\repos\neismit_emds\Nsim4\Nsim\TrainStatusControl.cs,xd7c6aaa737a7575c,The following statement contains a magic number: if (15 == 0) {  	goto Label_00E5;  }  
Magic Number,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,BackpropagationTrainerDecorator,The following statement contains a magic number: this.Momentum = 0.5;  
Magic Number,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,BackpropagationTrainerDecorator,The following statement contains a magic number: this.LearningRate = 0.8;  
Magic Number,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,GetTrainer,The following statement contains a magic number: while (true) {  	this._x74038d67405f0227 = new Backpropagation (xfefdde.x5b0926ce641e48a7' xfefdde.xddda66ad7e26f074' this.LearningRate' this.Momentum);  	flag = !App.Services.GetService<x15b8c53ba4818b71> ().x3ca5a760576c2053.HasValue;  	if (!flag) {  		((IMultiThreadable)this._x74038d67405f0227).ThreadCount = App.Services.GetService<x15b8c53ba4818b71> ().x3ca5a760576c2053.Value;  	}  	if ((((uint)flag) & 0) == 0) {  		if (((((uint)flag) - ((uint)forceNew)) <= uint.MaxValue) && (8 != 0)) {  			goto Label_0018;  		}  		goto Label_0012;  	}  }  
Magic Number,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,GetTrainer,The following statement contains a magic number: if ((((uint)flag) & 0) == 0) {  	if (((((uint)flag) - ((uint)forceNew)) <= uint.MaxValue) && (8 != 0)) {  		goto Label_0018;  	}  	goto Label_0012;  }  
Magic Number,Nsim,BackpropagationTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\BackpropagationTrainerDecorator.cs,GetTrainer,The following statement contains a magic number: if (((((uint)flag) - ((uint)forceNew)) <= uint.MaxValue) && (8 != 0)) {  	goto Label_0018;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbUseFP = (CheckBox)x11d58b056c032b03;  	if (1 != 0) {  		return;  	}  	break;  case 2:  	break;  default:  	this._x7dc3d9d322900926 = true;  	if ((((uint)xf3efd21c486a5cce) + ((uint)num)) <= uint.MaxValue) {  		return;  	}  	goto Label_003D;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: if (15 == 0) {  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorConfig.cs,x7ce50b15d48de9a6,The following statement contains a magic number: if (((((uint)flag) + ((uint)flag)) <= uint.MaxValue) && flag) {  	SimpleFunctionalPreprocessorLogic logic2 = new SimpleFunctionalPreprocessorLogic {  		CorrelationSelectMode = this.CorrelationFunction  	};  	if ((((uint)flag) + ((uint)flag)) < 0) {  		goto Label_001D;  	}  	if (3 != 0) {  		logic = logic2;  		if ((((uint)flag) + ((uint)flag)) >= 0) {  			if ((((uint)flag) - ((uint)flag)) > uint.MaxValue) {  				return;  			}  			logic.ConfigureProcessor (data);  			goto Label_001D;  		}  	}  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorConfig.cs,x7ce50b15d48de9a6,The following statement contains a magic number: if (3 != 0) {  	logic = logic2;  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		if ((((uint)flag) - ((uint)flag)) > uint.MaxValue) {  			return;  		}  		logic.ConfigureProcessor (data);  		goto Label_001D;  	}  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)num6) | 15) == 0) {  	goto Label_0652;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)num4) + ((uint)num5)) >= 0) {  	if (4 != 0) {  		if ((((uint)num3) + ((uint)num2)) >= 0) {  			goto Label_02F7;  		}  		goto Label_021B;  	}  	goto Label_071B;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,The following statement contains a magic number: if (4 != 0) {  	if ((((uint)num3) + ((uint)num2)) >= 0) {  		goto Label_02F7;  	}  	goto Label_021B;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)flag) | 3) == 0) {  	goto Label_0135;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ConfigureProcessor,The following statement contains a magic number: if ((((uint)num2) | 15) != 0) {  	if ((0x7fffffff != 0) && ((((uint)num) + ((uint)num3)) < 0)) {  		goto Label_0114;  	}  	num++;  	goto Label_06BB;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,DecodeC,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ProcessDataSet,The following statement contains a magic number: try {  	IMLDataPair pair;  	goto Label_0026;  	Label_0011:  	pair = enumerator.Current;  	set.Add (this.ProcessDataVector (pair));  	Label_0026:  	flag = enumerator.MoveNext ();  	do {  		if (flag) {  			goto Label_0011;  		}  	}  	while (4 == 0);  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		goto Label_0057;  	}  	if (2 != 0) {  	}  	Label_0057:  	;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ProcessDataSet,The following statement contains a magic number: try {  	IMLDataPair pair;  	goto Label_0026;  	Label_0011:  	pair = enumerator.Current;  	set.Add (this.ProcessDataVector (pair));  	Label_0026:  	flag = enumerator.MoveNext ();  	do {  		if (flag) {  			goto Label_0011;  		}  	}  	while (4 == 0);  }  finally {  	flag = enumerator == null;  	while (!flag) {  		enumerator.Dispose ();  		goto Label_0057;  	}  	if (2 != 0) {  	}  	Label_0057:  	;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ProcessDataSet,The following statement contains a magic number: do {  	if (flag) {  		goto Label_0011;  	}  }  while (4 == 0);  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ProcessDataSet,The following statement contains a magic number: if (2 != 0) {  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ProcessInputVector,The following statement contains a magic number: if (flag) {  	data [num] = this.x5d3a1f6283012a22 (num' row [num]);  	num++;  	if (-2147483648 == 0) {  		IMLData data2;  		return data2;  	}  	goto Label_000F;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,ProcessInputVector,The following statement contains a magic number: if (-2147483648 == 0) {  	IMLData data2;  	return data2;  }  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: objArray [2] = x437f2f55c5143ec3;  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: objArray [3] = " ";  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: objArray [4] = xc25cf86b73e79253;  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: objArray [5] = " = ";  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: objArray [6] = num;  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: objArray [7] = Environment.NewLine;  
Magic Number,Nsim,SimpleFunctionalPreprocessorLogic,C:\repos\neismit_emds\Nsim4\Nsim\SimpleFunctionalPreprocessorLogic.cs,xc673bdb68956bba8,The following statement contains a magic number: if (2 != 0) {  	Trace.Write (string.Concat (objArray));  	num2 = num;  	if ((((uint)xc25cf86b73e79253) & 0) == 0) {  		return num2;  	}  	goto Label_0045;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [7] = "КореньТретьейСтепени(X)";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [8] = new Func<double' double> (null' (IntPtr)xbe016755c9220cec);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [8] = "Ln(X)";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (2 != 0) {  	if (0 == 0) {  		Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  		FunctionTitles [9] = "Sin(X)";  		Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  		FunctionTitles [10] = "Tg(X)";  		if (1 != 0) {  			return;  		}  		goto Label_0102;  	}  	goto Label_00B2;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (2 != 0) {  	if (0 == 0) {  		Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  		FunctionTitles [9] = "Sin(X)";  		Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  		FunctionTitles [10] = "Tg(X)";  		if (1 != 0) {  			return;  		}  		goto Label_0102;  	}  	goto Label_00B2;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (2 != 0) {  	if (0 == 0) {  		Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  		FunctionTitles [9] = "Sin(X)";  		Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  		FunctionTitles [10] = "Tg(X)";  		if (1 != 0) {  			return;  		}  		goto Label_0102;  	}  	goto Label_00B2;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (2 != 0) {  	if (0 == 0) {  		Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  		FunctionTitles [9] = "Sin(X)";  		Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  		FunctionTitles [10] = "Tg(X)";  		if (1 != 0) {  			return;  		}  		goto Label_0102;  	}  	goto Label_00B2;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (2 != 0) {  	if (0 == 0) {  		Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  		FunctionTitles [9] = "Sin(X)";  		Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  		FunctionTitles [10] = "Tg(X)";  		if (1 != 0) {  			return;  		}  		goto Label_0102;  	}  	goto Label_00B2;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  	FunctionTitles [9] = "Sin(X)";  	Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  	FunctionTitles [10] = "Tg(X)";  	if (1 != 0) {  		return;  	}  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  	FunctionTitles [9] = "Sin(X)";  	Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  	FunctionTitles [10] = "Tg(X)";  	if (1 != 0) {  		return;  	}  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  	FunctionTitles [9] = "Sin(X)";  	Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  	FunctionTitles [10] = "Tg(X)";  	if (1 != 0) {  		return;  	}  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  	FunctionTitles [9] = "Sin(X)";  	Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  	FunctionTitles [10] = "Tg(X)";  	if (1 != 0) {  		return;  	}  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [9] = new Func<double' double> (null' (IntPtr)x8570b57025969d68);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [9] = "Sin(X)";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [10] = new Func<double' double> (null' (IntPtr)xb1e0e9de1ea48efc);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [10] = "Tg(X)";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [6] = "Корень(X)";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [7] = new Func<double' double> (null' (IntPtr)xdfb7b34114e098fc);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [5] = new Func<double' double> (null' (IntPtr)x9c749dbd981c6e5b);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [5] = "1/X*X*X";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [6] = new Func<double' double> (null' (IntPtr)x2c656f67c9fa2169);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [4] = new Func<double' double> (null' (IntPtr)x26c0497cb6d16d45);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	FunctionTitles [4] = "1/X*X";  	goto Label_00B2;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [4] = "1/X*X";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [2] = new Func<double' double> (null' (IntPtr)xda195742e45e2fd4);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	FunctionTitles [2] = "X*X*X";  	Functions [3] = new Func<double' double> (null' (IntPtr)x25895157ffbf1e5c);  	FunctionTitles [3] = "1/X";  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	FunctionTitles [2] = "X*X*X";  	Functions [3] = new Func<double' double> (null' (IntPtr)x25895157ffbf1e5c);  	FunctionTitles [3] = "1/X";  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: if (0 == 0) {  	FunctionTitles [2] = "X*X*X";  	Functions [3] = new Func<double' double> (null' (IntPtr)x25895157ffbf1e5c);  	FunctionTitles [3] = "1/X";  	goto Label_0102;  }  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [2] = "X*X*X";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: Functions [3] = new Func<double' double> (null' (IntPtr)x25895157ffbf1e5c);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,FunctionalPreprocessorBase,The following statement contains a magic number: FunctionTitles [3] = "1/X";  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,x2c656f67c9fa2169,The following statement contains a magic number: return Math.Pow (x08db3aeabb253cb1' 0.5);  
Magic Number,Nsim,FunctionalPreprocessorBase,C:\repos\neismit_emds\Nsim4\Nsim\FunctionalPreprocessorBase.cs,xdfb7b34114e098fc,The following statement contains a magic number: return Math.Pow (x08db3aeabb253cb1' 0.33333333333333331);  
Magic Number,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetCultureAwareComparer,The following statement contains a magic number: if (2 != 0) {  	ReflectorVariable0 = true;  	goto Label_0026;  }  
Magic Number,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValuesDictionary,The following statement contains a magic number: if (15 != 0) {  	if (0 == 0) {  		if (0 != 0) {  			IDictionary<string' object> dictionary;  			return dictionary;  		}  		goto Label_0015;  	}  	goto Label_00D4;  }  
Magic Number,Nsim,EnumTypeConverter,C:\repos\neismit_emds\Nsim4\Nsim\EnumTypeConverter.cs,GetValuesDictionary,The following statement contains a magic number: if (8 != 0) {  	goto Label_00D4;  }  
Magic Number,Nsim,StructureViewer,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer.cs,StructureViewer,The following statement contains a magic number: if ((((uint)flag) - ((uint)flag)) >= 0) {  	if (flag) {  		base.Content = new StructureViewer3D ();  		if (0 == 0) {  			return;  		}  		goto Label_0033;  	}  }  else if (4 == 0) {  	return;  }  
Magic Number,Nsim,StructureViewer,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer.cs,StructureViewer,The following statement contains a magic number: if (4 == 0) {  	return;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: this.canvas.Width = (num * 20.0) * 2.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: this.canvas.Width = (num * 20.0) * 2.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: this.canvas.Height = (size * 20.0) * 2.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: this.canvas.Height = (size * 20.0) * 2.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (((uint)num3) <= uint.MaxValue) {  	if (!flag) {  		return;  	}  	Point point;  	ellipse4 = new Ellipse {  		Fill = Brushes.Orange'  		Width = 20.0  	};  	goto Label_01A4;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: ellipse4 = new Ellipse {  	Fill = Brushes.Orange'  	Width = 20.0  };  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: point = new Point (num3' num4 + (num5 * 40.0));  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: using (enumerator3 = Enumerable.Select<Point' Line> (list' new Func<Point' Line> (classa' (IntPtr))).GetEnumerator ()) {  	while (enumerator3.MoveNext ()) {  		current = enumerator3.Current;  		do {  			this._x929312ef8641a34b.Add (current);  		}  		while (3 == 0);  		this.canvas.Children.Add (current);  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: while (enumerator3.MoveNext ()) {  	current = enumerator3.Current;  	do {  		this._x929312ef8641a34b.Add (current);  	}  	while (3 == 0);  	this.canvas.Children.Add (current);  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: do {  	this._x929312ef8641a34b.Add (current);  }  while (3 == 0);  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if ((((uint)size) | 8) == 0) {  	goto Label_04D0;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: ellipse4.Height = 20.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num3 += 40.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.OutputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.OutputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.OutputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.OutputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: if (num5 < service.InputLayer.Size) {  	ellipse = new Ellipse {  		Fill = Brushes.DeepPink'  		Width = 20.0'  		Height = 20.0'  		Stroke = x96cd9c275173e5db  	};  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  }  else {  	if (((uint)num) > uint.MaxValue) {  		goto Label_0165;  	}  	IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ();  	try {  		ILayerStruct struct3;  		List<Point> list2;  		Ellipse ellipse3;  		c__DisplayClass8 class2;  		goto Label_020A;  		Label_01E7:  		if (flag) {  			goto Label_03BF;  		}  		if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  			goto Label_03C6;  		}  		Label_020A:  		flag = enumerator2.MoveNext ();  		if (flag) {  			goto Label_043D;  		}  		if ((((uint)num) + ((uint)flag)) >= 0) {  			goto Label_033B;  		}  		goto Label_0281;  		Label_0237:  		list.Add (class2.point);  		Label_0246:  		this._x929312ef8641a34b.Add (ellipse);  		this.canvas.Children.Add (ellipse);  		num5++;  		Label_026F:  		flag = num5 < struct3.Size;  		goto Label_01E7;  		Label_0281:  		class2.point = new Point (num3' num4 + (num5 * 40.0));  		using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  			goto Label_02FE;  			Label_02C3:  			if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  				this._x929312ef8641a34b.Add (current);  			}  			this.canvas.Children.Add (current);  			Label_02FE:  			if (enumerator3.MoveNext ()) {  				current = enumerator3.Current;  				goto Label_02C3;  			}  		}  		goto Label_0237;  		Label_033B:  		if (((uint)num) >= 0) {  			goto Label_04C1;  		}  		goto Label_03BF;  		Label_0352:  		ellipse3.Stroke = x96cd9c275173e5db;  		ellipse3.Width = 20.0;  		ellipse3.Height = 20.0;  		ellipse = ellipse3;  		Canvas.SetLeft (ellipse' num3);  		Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  		if ((((uint)num4) + ((uint)num4)) >= 0) {  			goto Label_0401;  		}  		Label_03BF:  		c__DisplayClass8 ();  		Label_03C6:  		ellipse3 = new Ellipse ();  		if ((((uint)num4) + ((uint)size)) < 0) {  			goto Label_0434;  		}  		if (-1 == 0) {  			goto Label_0246;  		}  		ellipse3.Fill = Brushes.Gold;  		goto Label_0352;  		Label_0401:  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0281;  		}  		goto Label_04C1;  		Label_041E:  		if (0 != 0) {  			goto Label_0246;  		}  		list2 = list.ToList<Point> ();  		list.Clear ();  		Label_0434:  		num5 = 0;  		goto Label_026F;  		Label_043D:  		struct3 = enumerator2.Current;  		num3 += 40.0;  		num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  		goto Label_041E;  	}  	finally {  		flag = enumerator2 == null;  		if (((uint)num) <= uint.MaxValue) {  			while (!flag) {  				enumerator2.Dispose ();  				break;  			}  		}  	}  	goto Label_04C1;  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: ellipse = new Ellipse {  	Fill = Brushes.DeepPink'  	Width = 20.0'  	Height = 20.0'  	Stroke = x96cd9c275173e5db  };  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: ellipse = new Ellipse {  	Fill = Brushes.DeepPink'  	Width = 20.0'  	Height = 20.0'  	Stroke = x96cd9c275173e5db  };  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: try {  	ILayerStruct struct3;  	List<Point> list2;  	Ellipse ellipse3;  	c__DisplayClass8 class2;  	goto Label_020A;  	Label_01E7:  	if (flag) {  		goto Label_03BF;  	}  	if ((((uint)num4) - ((uint)num5)) > uint.MaxValue) {  		goto Label_03C6;  	}  	Label_020A:  	flag = enumerator2.MoveNext ();  	if (flag) {  		goto Label_043D;  	}  	if ((((uint)num) + ((uint)flag)) >= 0) {  		goto Label_033B;  	}  	goto Label_0281;  	Label_0237:  	list.Add (class2.point);  	Label_0246:  	this._x929312ef8641a34b.Add (ellipse);  	this.canvas.Children.Add (ellipse);  	num5++;  	Label_026F:  	flag = num5 < struct3.Size;  	goto Label_01E7;  	Label_0281:  	class2.point = new Point (num3' num4 + (num5 * 40.0));  	using (enumerator3 = Enumerable.Select<Point' Line> (list2' new Func<Point' Line> (class2' (IntPtr))).GetEnumerator ()) {  		goto Label_02FE;  		Label_02C3:  		if ((((uint)num) + ((uint)size)) <= uint.MaxValue) {  			this._x929312ef8641a34b.Add (current);  		}  		this.canvas.Children.Add (current);  		Label_02FE:  		if (enumerator3.MoveNext ()) {  			current = enumerator3.Current;  			goto Label_02C3;  		}  	}  	goto Label_0237;  	Label_033B:  	if (((uint)num) >= 0) {  		goto Label_04C1;  	}  	goto Label_03BF;  	Label_0352:  	ellipse3.Stroke = x96cd9c275173e5db;  	ellipse3.Width = 20.0;  	ellipse3.Height = 20.0;  	ellipse = ellipse3;  	Canvas.SetLeft (ellipse' num3);  	Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  	if ((((uint)num4) + ((uint)num4)) >= 0) {  		goto Label_0401;  	}  	Label_03BF:  	c__DisplayClass8 ();  	Label_03C6:  	ellipse3 = new Ellipse ();  	if ((((uint)num4) + ((uint)size)) < 0) {  		goto Label_0434;  	}  	if (-1 == 0) {  		goto Label_0246;  	}  	ellipse3.Fill = Brushes.Gold;  	goto Label_0352;  	Label_0401:  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0281;  	}  	goto Label_04C1;  	Label_041E:  	if (0 != 0) {  		goto Label_0246;  	}  	list2 = list.ToList<Point> ();  	list.Clear ();  	Label_0434:  	num5 = 0;  	goto Label_026F;  	Label_043D:  	struct3 = enumerator2.Current;  	num3 += 40.0;  	num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  	goto Label_041E;  }  finally {  	flag = enumerator2 == null;  	if (((uint)num) <= uint.MaxValue) {  		while (!flag) {  			enumerator2.Dispose ();  			break;  		}  	}  }  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: class2.point = new Point (num3' num4 + (num5 * 40.0));  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: ellipse3.Width = 20.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: ellipse3.Height = 20.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: Canvas.SetTop (ellipse' num4 + (num5 * 40.0));  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num3 += 40.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)struct3.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: list.Add (new Point (num3' num4 + (num5 * 40.0)));  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num3 = 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.InputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.InputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.InputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,RebuldView,The following statement contains a magic number: num4 = ((this.canvas.ActualHeight / 2.0) - ((((double)service.InputLayer.Size) / 2.0) * 40.0)) + 10.0;  
Magic Number,Nsim,StructureViewer2D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer2D.cs,xa27fac46e21ed5f4,The following statement contains a magic number: if (-2147483648 == 0) {  	Line line3;  	return line3;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,InitializeComponent,The following statement contains a magic number: while (flag) {  	this._x7dc3d9d322900926 = true;  	Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/viewer/structureviewer3d.xaml"' UriKind.Relative);  	Application.LoadComponent (this' resourceLocator);  	if ((15 == 0) || ((((uint)flag) & 0) == 0)) {  		break;  	}  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,InitializeComponent,The following statement contains a magic number: if ((15 == 0) || ((((uint)flag) & 0) == 0)) {  	break;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if (((uint)num5) <= uint.MaxValue) {  	if ((((uint)num) + ((uint)num4)) >= 0) {  		if (((uint)num) >= 0) {  			do {  				sphere4.Radius = 0.2;  				sphere4.Color = Colors.Orange;  			}  			while ((((uint)num) & 0) != 0);  			sphere4.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  			sphere = sphere4;  			classa.point = new Point3D (num3' num4 + num5' 0.0);  			goto Label_0048;  		}  		goto Label_085E;  	}  	goto Label_0786;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if ((((uint)num) + ((uint)num4)) >= 0) {  	if (((uint)num) >= 0) {  		do {  			sphere4.Radius = 0.2;  			sphere4.Color = Colors.Orange;  		}  		while ((((uint)num) & 0) != 0);  		sphere4.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  		sphere = sphere4;  		classa.point = new Point3D (num3' num4 + num5' 0.0);  		goto Label_0048;  	}  	goto Label_085E;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if (((uint)num) >= 0) {  	do {  		sphere4.Radius = 0.2;  		sphere4.Color = Colors.Orange;  	}  	while ((((uint)num) & 0) != 0);  	sphere4.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  	sphere = sphere4;  	classa.point = new Point3D (num3' num4 + num5' 0.0);  	goto Label_0048;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: do {  	sphere4.Radius = 0.2;  	sphere4.Color = Colors.Orange;  }  while ((((uint)num) & 0) != 0);  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: sphere4.Radius = 0.2;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num4 = (service.OutputLayer.Size / 2) * -1;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: flag = (service.OutputLayer.Size % 2) != 0;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if (!flag) {  	num4 += 0.5;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num4 += 0.5;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: using (IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ()) {  	ILayerStruct struct3;  	List<Point3D> list2;  	Sphere sphere3;  	c__DisplayClass8 class2;  	goto Label_02B0;  	Label_0297:  	if ((((uint)num5) - ((uint)num)) < 0) {  		goto Label_02B9;  	}  	Label_02B0:  	flag = enumerator2.MoveNext ();  	Label_02B9:  	if (flag) {  		goto Label_052B;  	}  	goto Label_0313;  	Label_02C2:  	list.Add (class2.point);  	this._x929312ef8641a34b.Add (sphere);  	this.port.Children.Add (sphere);  	Label_02F2:  	num5++;  	Label_02FA:  	flag = num5 < struct3.Size;  	if (flag) {  		goto Label_04A8;  	}  	goto Label_0297;  	Label_0313:  	if ((((uint)size) + ((uint)num3)) >= 0) {  		goto Label_0440;  	}  	Label_032E:  	sphere3.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  	sphere = sphere3;  	if ((((uint)num4) - ((uint)num4)) < 0) {  		goto Label_02F2;  	}  	class2.point = new Point3D (num3' num4 + num5' 0.0);  	enumerator3 = Enumerable.Select<Point3D' ScreenSpaceLines3D> (list2' new Func<Point3D' ScreenSpaceLines3D> (class2' (IntPtr))).GetEnumerator ();  	try {  		Label_03A9:  		flag = enumerator3.MoveNext ();  		if (flag || (((uint)flag) < 0)) {  			current = enumerator3.Current;  			if ((((uint)size) | 0xff) != 0) {  				this._x929312ef8641a34b.Add (current);  				this.port.Children.Add (current);  				goto Label_03A9;  			}  		}  		goto Label_02C2;  	}  	finally {  		flag = enumerator3 == null;  		while (!flag) {  			enumerator3.Dispose ();  			break;  		}  	}  	if (((uint)size) <= uint.MaxValue) {  		goto Label_02C2;  	}  	Label_0440:  	if (0 == 0) {  		goto Label_0218;  	}  	goto Label_04D1;  	Label_044B:  	if (((uint)flag) < 0) {  		goto Label_0297;  	}  	sphere3.Radius = 0.2;  	sphere3.Color = Colors.Yellow;  	goto Label_032E;  	Label_0482:  	sphere3 = new Sphere ();  	goto Label_044B;  	Label_048C:  	if (0 != 0) {  		goto Label_04B3;  	}  	Label_048F:  	list2 = list.ToList<Point3D> ();  	list.Clear ();  	num5 = 0;  	goto Label_02FA;  	Label_04A8:  	c__DisplayClass8 ();  	goto Label_0482;  	Label_04B3:  	if (flag) {  		if (((uint)flag) >= 0) {  			goto Label_048F;  		}  		goto Label_048C;  	}  	Label_04D1:  	num4 += 0.5;  	goto Label_048C;  	Label_04ED:  	num4 = (struct3.Size / 2) * -1;  	if ((((uint)num5) - ((uint)num)) >= 0) {  		flag = (struct3.Size % 2) != 0;  		goto Label_04B3;  	}  	Label_052B:  	struct3 = enumerator2.Current;  	num3++;  	goto Label_04ED;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: using (IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ()) {  	ILayerStruct struct3;  	List<Point3D> list2;  	Sphere sphere3;  	c__DisplayClass8 class2;  	goto Label_02B0;  	Label_0297:  	if ((((uint)num5) - ((uint)num)) < 0) {  		goto Label_02B9;  	}  	Label_02B0:  	flag = enumerator2.MoveNext ();  	Label_02B9:  	if (flag) {  		goto Label_052B;  	}  	goto Label_0313;  	Label_02C2:  	list.Add (class2.point);  	this._x929312ef8641a34b.Add (sphere);  	this.port.Children.Add (sphere);  	Label_02F2:  	num5++;  	Label_02FA:  	flag = num5 < struct3.Size;  	if (flag) {  		goto Label_04A8;  	}  	goto Label_0297;  	Label_0313:  	if ((((uint)size) + ((uint)num3)) >= 0) {  		goto Label_0440;  	}  	Label_032E:  	sphere3.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  	sphere = sphere3;  	if ((((uint)num4) - ((uint)num4)) < 0) {  		goto Label_02F2;  	}  	class2.point = new Point3D (num3' num4 + num5' 0.0);  	enumerator3 = Enumerable.Select<Point3D' ScreenSpaceLines3D> (list2' new Func<Point3D' ScreenSpaceLines3D> (class2' (IntPtr))).GetEnumerator ();  	try {  		Label_03A9:  		flag = enumerator3.MoveNext ();  		if (flag || (((uint)flag) < 0)) {  			current = enumerator3.Current;  			if ((((uint)size) | 0xff) != 0) {  				this._x929312ef8641a34b.Add (current);  				this.port.Children.Add (current);  				goto Label_03A9;  			}  		}  		goto Label_02C2;  	}  	finally {  		flag = enumerator3 == null;  		while (!flag) {  			enumerator3.Dispose ();  			break;  		}  	}  	if (((uint)size) <= uint.MaxValue) {  		goto Label_02C2;  	}  	Label_0440:  	if (0 == 0) {  		goto Label_0218;  	}  	goto Label_04D1;  	Label_044B:  	if (((uint)flag) < 0) {  		goto Label_0297;  	}  	sphere3.Radius = 0.2;  	sphere3.Color = Colors.Yellow;  	goto Label_032E;  	Label_0482:  	sphere3 = new Sphere ();  	goto Label_044B;  	Label_048C:  	if (0 != 0) {  		goto Label_04B3;  	}  	Label_048F:  	list2 = list.ToList<Point3D> ();  	list.Clear ();  	num5 = 0;  	goto Label_02FA;  	Label_04A8:  	c__DisplayClass8 ();  	goto Label_0482;  	Label_04B3:  	if (flag) {  		if (((uint)flag) >= 0) {  			goto Label_048F;  		}  		goto Label_048C;  	}  	Label_04D1:  	num4 += 0.5;  	goto Label_048C;  	Label_04ED:  	num4 = (struct3.Size / 2) * -1;  	if ((((uint)num5) - ((uint)num)) >= 0) {  		flag = (struct3.Size % 2) != 0;  		goto Label_04B3;  	}  	Label_052B:  	struct3 = enumerator2.Current;  	num3++;  	goto Label_04ED;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: using (IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ()) {  	ILayerStruct struct3;  	List<Point3D> list2;  	Sphere sphere3;  	c__DisplayClass8 class2;  	goto Label_02B0;  	Label_0297:  	if ((((uint)num5) - ((uint)num)) < 0) {  		goto Label_02B9;  	}  	Label_02B0:  	flag = enumerator2.MoveNext ();  	Label_02B9:  	if (flag) {  		goto Label_052B;  	}  	goto Label_0313;  	Label_02C2:  	list.Add (class2.point);  	this._x929312ef8641a34b.Add (sphere);  	this.port.Children.Add (sphere);  	Label_02F2:  	num5++;  	Label_02FA:  	flag = num5 < struct3.Size;  	if (flag) {  		goto Label_04A8;  	}  	goto Label_0297;  	Label_0313:  	if ((((uint)size) + ((uint)num3)) >= 0) {  		goto Label_0440;  	}  	Label_032E:  	sphere3.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  	sphere = sphere3;  	if ((((uint)num4) - ((uint)num4)) < 0) {  		goto Label_02F2;  	}  	class2.point = new Point3D (num3' num4 + num5' 0.0);  	enumerator3 = Enumerable.Select<Point3D' ScreenSpaceLines3D> (list2' new Func<Point3D' ScreenSpaceLines3D> (class2' (IntPtr))).GetEnumerator ();  	try {  		Label_03A9:  		flag = enumerator3.MoveNext ();  		if (flag || (((uint)flag) < 0)) {  			current = enumerator3.Current;  			if ((((uint)size) | 0xff) != 0) {  				this._x929312ef8641a34b.Add (current);  				this.port.Children.Add (current);  				goto Label_03A9;  			}  		}  		goto Label_02C2;  	}  	finally {  		flag = enumerator3 == null;  		while (!flag) {  			enumerator3.Dispose ();  			break;  		}  	}  	if (((uint)size) <= uint.MaxValue) {  		goto Label_02C2;  	}  	Label_0440:  	if (0 == 0) {  		goto Label_0218;  	}  	goto Label_04D1;  	Label_044B:  	if (((uint)flag) < 0) {  		goto Label_0297;  	}  	sphere3.Radius = 0.2;  	sphere3.Color = Colors.Yellow;  	goto Label_032E;  	Label_0482:  	sphere3 = new Sphere ();  	goto Label_044B;  	Label_048C:  	if (0 != 0) {  		goto Label_04B3;  	}  	Label_048F:  	list2 = list.ToList<Point3D> ();  	list.Clear ();  	num5 = 0;  	goto Label_02FA;  	Label_04A8:  	c__DisplayClass8 ();  	goto Label_0482;  	Label_04B3:  	if (flag) {  		if (((uint)flag) >= 0) {  			goto Label_048F;  		}  		goto Label_048C;  	}  	Label_04D1:  	num4 += 0.5;  	goto Label_048C;  	Label_04ED:  	num4 = (struct3.Size / 2) * -1;  	if ((((uint)num5) - ((uint)num)) >= 0) {  		flag = (struct3.Size % 2) != 0;  		goto Label_04B3;  	}  	Label_052B:  	struct3 = enumerator2.Current;  	num3++;  	goto Label_04ED;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: using (IEnumerator<ILayerStruct> enumerator2 = service.HiddenLayers.Layers.GetEnumerator ()) {  	ILayerStruct struct3;  	List<Point3D> list2;  	Sphere sphere3;  	c__DisplayClass8 class2;  	goto Label_02B0;  	Label_0297:  	if ((((uint)num5) - ((uint)num)) < 0) {  		goto Label_02B9;  	}  	Label_02B0:  	flag = enumerator2.MoveNext ();  	Label_02B9:  	if (flag) {  		goto Label_052B;  	}  	goto Label_0313;  	Label_02C2:  	list.Add (class2.point);  	this._x929312ef8641a34b.Add (sphere);  	this.port.Children.Add (sphere);  	Label_02F2:  	num5++;  	Label_02FA:  	flag = num5 < struct3.Size;  	if (flag) {  		goto Label_04A8;  	}  	goto Label_0297;  	Label_0313:  	if ((((uint)size) + ((uint)num3)) >= 0) {  		goto Label_0440;  	}  	Label_032E:  	sphere3.Transform = new TranslateTransform3D (num3' num4 + num5' 0.0);  	sphere = sphere3;  	if ((((uint)num4) - ((uint)num4)) < 0) {  		goto Label_02F2;  	}  	class2.point = new Point3D (num3' num4 + num5' 0.0);  	enumerator3 = Enumerable.Select<Point3D' ScreenSpaceLines3D> (list2' new Func<Point3D' ScreenSpaceLines3D> (class2' (IntPtr))).GetEnumerator ();  	try {  		Label_03A9:  		flag = enumerator3.MoveNext ();  		if (flag || (((uint)flag) < 0)) {  			current = enumerator3.Current;  			if ((((uint)size) | 0xff) != 0) {  				this._x929312ef8641a34b.Add (current);  				this.port.Children.Add (current);  				goto Label_03A9;  			}  		}  		goto Label_02C2;  	}  	finally {  		flag = enumerator3 == null;  		while (!flag) {  			enumerator3.Dispose ();  			break;  		}  	}  	if (((uint)size) <= uint.MaxValue) {  		goto Label_02C2;  	}  	Label_0440:  	if (0 == 0) {  		goto Label_0218;  	}  	goto Label_04D1;  	Label_044B:  	if (((uint)flag) < 0) {  		goto Label_0297;  	}  	sphere3.Radius = 0.2;  	sphere3.Color = Colors.Yellow;  	goto Label_032E;  	Label_0482:  	sphere3 = new Sphere ();  	goto Label_044B;  	Label_048C:  	if (0 != 0) {  		goto Label_04B3;  	}  	Label_048F:  	list2 = list.ToList<Point3D> ();  	list.Clear ();  	num5 = 0;  	goto Label_02FA;  	Label_04A8:  	c__DisplayClass8 ();  	goto Label_0482;  	Label_04B3:  	if (flag) {  		if (((uint)flag) >= 0) {  			goto Label_048F;  		}  		goto Label_048C;  	}  	Label_04D1:  	num4 += 0.5;  	goto Label_048C;  	Label_04ED:  	num4 = (struct3.Size / 2) * -1;  	if ((((uint)num5) - ((uint)num)) >= 0) {  		flag = (struct3.Size % 2) != 0;  		goto Label_04B3;  	}  	Label_052B:  	struct3 = enumerator2.Current;  	num3++;  	goto Label_04ED;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: sphere3.Radius = 0.2;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num4 += 0.5;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num4 = (struct3.Size / 2) * -1;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if ((((uint)num5) - ((uint)num)) >= 0) {  	flag = (struct3.Size % 2) != 0;  	goto Label_04B3;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: flag = (struct3.Size % 2) != 0;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: sphere2.Radius = 0.2;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num4 += 0.5;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num3 = ((((double)num) / 2.0) * -1.0) + 0.5;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num3 = ((((double)num) / 2.0) * -1.0) + 0.5;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num4 = (service.InputLayer.Size / 2) * -1;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: flag = (service.InputLayer.Size % 2) != 0;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if (8 == 0) {  	goto Label_01E8;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: if ((((uint)num5) | 2) != 0) {  	if (!flag) {  		goto Label_0670;  	}  	goto Label_0684;  }  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: this.cam1.Position = new Point3D (0.0' 0.0' size * 1.5);  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,RebuldView,The following statement contains a magic number: num = service.HiddenLayers.Layers.Count<ILayerStruct> () + 2;  
Magic Number,Nsim,StructureViewer3D,C:\repos\neismit_emds\Nsim4\Nsim\StructureViewer3D.cs,x628e6c716ec340be,The following statement contains a magic number: switch (xf3efd21c486a5cce) {  case 1:  	this.port = (Viewport3D)x11d58b056c032b03;  	break;  case 2:  	this.cam1 = (PerspectiveCamera)x11d58b056c032b03;  	break;  default:  	this._x7dc3d9d322900926 = true;  	break;  }  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,x83ae6ab9dbae58e2,The following statement contains a magic number: if (flag) {  	num7 = num5;  	if ((((uint)num2) - ((uint)num8)) > uint.MaxValue) {  		goto Label_01EB;  	}  	if (-2 != 0) {  		num8 = num5 + 1;  		num9 = num3 * (x017e7115236ae0a5 + 1);  		num10 = (num3 + 1) * (x017e7115236ae0a5 + 1);  		geometryd.TriangleIndices.Add (num7 + num9);  		if ((((uint)num9) + ((uint)num9)) <= uint.MaxValue) {  			if (((uint)x017e7115236ae0a5) <= uint.MaxValue) {  				geometryd.TriangleIndices.Add (num7 + num10);  				geometryd.TriangleIndices.Add (num8 + num9);  				geometryd.TriangleIndices.Add (num8 + num9);  				goto Label_00E1;  			}  			goto Label_02CC;  		}  		goto Label_029B;  	}  	goto Label_0164;  }  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,x83ae6ab9dbae58e2,The following statement contains a magic number: if (-2 != 0) {  	num8 = num5 + 1;  	num9 = num3 * (x017e7115236ae0a5 + 1);  	num10 = (num3 + 1) * (x017e7115236ae0a5 + 1);  	geometryd.TriangleIndices.Add (num7 + num9);  	if ((((uint)num9) + ((uint)num9)) <= uint.MaxValue) {  		if (((uint)x017e7115236ae0a5) <= uint.MaxValue) {  			geometryd.TriangleIndices.Add (num7 + num10);  			geometryd.TriangleIndices.Add (num8 + num9);  			geometryd.TriangleIndices.Add (num8 + num9);  			goto Label_00E1;  		}  		goto Label_02CC;  	}  	goto Label_029B;  }  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,x83ae6ab9dbae58e2,The following statement contains a magic number: num2 = xeeb1463834404693 (180.0) / ((double)x1ee636813633b90b);  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,xc6b8c1d09a811ba1,The following statement contains a magic number: return new Point (x17338e069de9c29c / 6.2831853071795862' xa5e685957c5189d5 / 3.1415926535897931);  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,xc6b8c1d09a811ba1,The following statement contains a magic number: return new Point (x17338e069de9c29c / 6.2831853071795862' xa5e685957c5189d5 / 3.1415926535897931);  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,xeeb1463834404693,The following statement contains a magic number: return ((x08d0a6023d4ad136 / 180.0) * 3.1415926535897931);  
Magic Number,Nsim,Sphere,C:\repos\neismit_emds\Nsim4\Nsim\Sphere.cs,xeeb1463834404693,The following statement contains a magic number: return ((x08d0a6023d4ad136 / 180.0) * 3.1415926535897931);  
Magic Number,Nsim,ColumnDataPointColorConverter,C:\repos\neismit_emds\Nsim4\Nsim\ColumnDataPointColorConverter.cs,Convert,The following statement contains a magic number: while (flag) {  	Tuple<double' bool> tuple = (Tuple<double' bool>)value;  	Label_003B:  	if (!tuple.get_Item2 ()) {  		goto Label_002A;  	}  	if (-2147483648 == 0) {  		break;  	}  	if (4 == 0) {  		object obj2;  		return obj2;  	}  	if (0 == 0) {  		if ((0 != 0) && (((uint)flag) < 0)) {  			goto Label_003B;  		}  		goto Label_002A;  	}  }  
Magic Number,Nsim,ColumnDataPointColorConverter,C:\repos\neismit_emds\Nsim4\Nsim\ColumnDataPointColorConverter.cs,Convert,The following statement contains a magic number: while (flag) {  	Tuple<double' bool> tuple = (Tuple<double' bool>)value;  	Label_003B:  	if (!tuple.get_Item2 ()) {  		goto Label_002A;  	}  	if (-2147483648 == 0) {  		break;  	}  	if (4 == 0) {  		object obj2;  		return obj2;  	}  	if (0 == 0) {  		if ((0 != 0) && (((uint)flag) < 0)) {  			goto Label_003B;  		}  		goto Label_002A;  	}  }  
Magic Number,Nsim,ColumnDataPointColorConverter,C:\repos\neismit_emds\Nsim4\Nsim\ColumnDataPointColorConverter.cs,Convert,The following statement contains a magic number: if (-2147483648 == 0) {  	break;  }  
Magic Number,Nsim,ColumnDataPointColorConverter,C:\repos\neismit_emds\Nsim4\Nsim\ColumnDataPointColorConverter.cs,Convert,The following statement contains a magic number: if (4 == 0) {  	object obj2;  	return obj2;  }  
Magic Number,Nsim,NeuralGeneticAlgorithmTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerDecorator.cs,NeuralGeneticAlgorithmTrainerDecorator,The following statement contains a magic number: this.MutationPercent = 0.05;  
Magic Number,Nsim,NeuralGeneticAlgorithmTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerDecorator.cs,NeuralGeneticAlgorithmTrainerDecorator,The following statement contains a magic number: this.PopulationSize = 300;  
Magic Number,Nsim,NeuralGeneticAlgorithmTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerDecorator.cs,NeuralGeneticAlgorithmTrainerDecorator,The following statement contains a magic number: this.PercentToMate = 0.3;  
Magic Number,Nsim,NeuralGeneticAlgorithmTrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\NeuralGeneticAlgorithmTrainerConfig.cs,InitializeComponent,The following statement contains a magic number: while ((3 != 0) && ((((uint)flag) - ((uint)flag)) <= uint.MaxValue)) {  	if (flag) {  		this._x7dc3d9d322900926 = true;  		Uri resourceLocator = new Uri ("/Nsim4;component/components/train/trainers/neuralgeneticalgorithmtrainerconfig.xaml"' UriKind.Relative);  		Application.LoadComponent (this' resourceLocator);  	}  	break;  }  
Magic Number,Nsim,DataProcessorConfig,C:\repos\neismit_emds\Nsim4\Nsim\DataProcessorConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.func = (SimpleFunctionalPreprocessorConfig)x11d58b056c032b03;  	break;  case 2:  	this.scaler = (LinearScaleConfig)x11d58b056c032b03;  	break;  default:  	goto Label_001C;  }  
Magic Number,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,ConfigureProcessor,The following statement contains a magic number: try {  	IDataProcessor processor;  	goto Label_003D;  	Label_002F:  	data = processor.ProcessDataSet (data);  	if (0 != 0) {  		return;  	}  	Label_003D:  	if (enumerator.MoveNext ()) {  		enumerator.Current.ConfigureProcessor (data);  		goto Label_002F;  	}  }  finally {  	bool flag = enumerator == null;  	Label_0061:  	if ((((uint)flag) - ((uint)flag)) >= 0) {  		goto Label_0099;  	}  	Label_0079:  	enumerator.Dispose ();  	if (((uint)flag) <= uint.MaxValue) {  		goto Label_009C;  	}  	if (15 == 0) {  		goto Label_0061;  	}  	Label_0099:  	if (!flag) {  		goto Label_0079;  	}  	Label_009C:  	;  }  
Magic Number,Nsim,BatchDataProcessor,C:\repos\neismit_emds\Nsim4\Nsim\BatchDataProcessor.cs,ConfigureProcessor,The following statement contains a magic number: if (15 == 0) {  	goto Label_0061;  }  
Magic Number,Nsim,LevenbergMarquardtTrainingTrainerDecorator,C:\repos\neismit_emds\Nsim4\Nsim\LevenbergMarquardtTrainingTrainerDecorator.cs,GetTrainer,The following statement contains a magic number: if (2 != 0) {  	goto Label_0109;  }  
Magic Number,Nsim,TrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainerConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.cbTypeSelect = (ComboBox)x11d58b056c032b03;  	break;  case 2:  	this.xCont = (ScrollViewer)x11d58b056c032b03;  	break;  default:  	if ((((uint)num) + ((uint)xf3efd21c486a5cce)) >= 0) {  		this._x7dc3d9d322900926 = true;  		if ((((uint)xf3efd21c486a5cce) + ((uint)num)) >= 0) {  			break;  		}  	}  	goto Label_0042;  }  
Magic Number,Nsim,TrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainerConfig.cs,xec742bca02015330,The following statement contains a magic number: if ((((uint)flag) | uint.MaxValue) != 0) {  	if (!flag) {  		return;  	}  	config._xb6b7237a193ea7b0 = ((ITrainerDecoratorDescriptor)xfbf34718e704c6bc.NewValue).GetDecorator ();  }  else {  	if ((((uint)flag) | 15) != 0) {  	}  	return;  }  
Magic Number,Nsim,TrainerConfig,C:\repos\neismit_emds\Nsim4\Nsim\TrainerConfig.cs,xec742bca02015330,The following statement contains a magic number: if ((((uint)flag) | 15) != 0) {  }  
Magic Number,Nsim,TrainerDecoratorFactory,C:\repos\neismit_emds\Nsim4\Nsim\TrainerDecoratorFactory.cs,TrainerDecoratorFactory,The following statement contains a magic number: if (2 != 0) {  	x0821fce41ef1687a.Add (new x3e14c21047440e17<TrainerDecorator<ResilientPropagation>> ("Упругого распространения"));  	if (0 != 0) {  		return;  	}  }  
Magic Number,Nsim,TrainerDecoratorFactory,C:\repos\neismit_emds\Nsim4\Nsim\TrainerDecoratorFactory.cs,TrainerDecoratorFactory,The following statement contains a magic number: if (4 != 0) {  	x0821fce41ef1687a.Add (new x3e14c21047440e17<NeuralGeneticAlgorithmTrainerDecorator> ("Генетический"));  	x0821fce41ef1687a.Add (new x3e14c21047440e17<TrainerDecorator<ScaledConjugateGradient>> ("Сопряженных градиентов"));  	x0821fce41ef1687a.Add (new x3e14c21047440e17<LearningRateTrainerDecorator<ManhattanPropagation>> ("Манхэттена"));  	x0821fce41ef1687a.Add (new x3e14c21047440e17<LearningRateTrainerDecorator<QuickPropagation>> ("Быстрого распространения"));  }  
Magic Number,Nsim,NetConfig,C:\repos\neismit_emds\Nsim4\Nsim\NetConfig.cs,GetNewNetwork,The following statement contains a magic number: if (8 == 0) {  	BasicNetwork network2;  	return network2;  }  
Magic Number,Nsim,NetConfig,C:\repos\neismit_emds\Nsim4\Nsim\NetConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.inConfig = (LayerConfig)x11d58b056c032b03;  	return;  case 2:  	this.hiddenConfig = (HiddenLayersConfig)x11d58b056c032b03;  	if (-2147483648 == 0) {  		break;  	}  	return;  case 3:  	this.outConfig = (LayerConfig)x11d58b056c032b03;  	return;  default:  	if (((uint)num) <= uint.MaxValue) {  		break;  	}  	return;  }  
Magic Number,Nsim,NetConfig,C:\repos\neismit_emds\Nsim4\Nsim\NetConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.inConfig = (LayerConfig)x11d58b056c032b03;  	return;  case 2:  	this.hiddenConfig = (HiddenLayersConfig)x11d58b056c032b03;  	if (-2147483648 == 0) {  		break;  	}  	return;  case 3:  	this.outConfig = (LayerConfig)x11d58b056c032b03;  	return;  default:  	if (((uint)num) <= uint.MaxValue) {  		break;  	}  	return;  }  
Magic Number,Nsim,NetConfig,C:\repos\neismit_emds\Nsim4\Nsim\NetConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.inConfig = (LayerConfig)x11d58b056c032b03;  	return;  case 2:  	this.hiddenConfig = (HiddenLayersConfig)x11d58b056c032b03;  	if (-2147483648 == 0) {  		break;  	}  	return;  case 3:  	this.outConfig = (LayerConfig)x11d58b056c032b03;  	return;  default:  	if (((uint)num) <= uint.MaxValue) {  		break;  	}  	return;  }  
Magic Number,Nsim,NetConfig,C:\repos\neismit_emds\Nsim4\Nsim\NetConfig.cs,x628e6c716ec340be,The following statement contains a magic number: if (-2147483648 == 0) {  	break;  }  
Magic Number,Nsim,HiddenLayersConfig,C:\repos\neismit_emds\Nsim4\Nsim\HiddenLayersConfig.cs,x628e6c716ec340be,The following statement contains a magic number: if (((uint)num) >= 0) {  	switch (num) {  	case 1:  		goto Label_0015;  	case 2:  		goto Label_0023;  	}  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) >= 0) {  		this._x7dc3d9d322900926 = true;  		return;  	}  	goto Label_0023;  }  
Magic Number,Nsim,HiddenLayersConfig,C:\repos\neismit_emds\Nsim4\Nsim\HiddenLayersConfig.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	goto Label_0015;  case 2:  	goto Label_0023;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Magic Number,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following statement contains a magic number: if (15 != 0) {  	return;  }  
Magic Number,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x2800617c7cbf536c,The following statement contains a magic number: if (3 != 0) {  	goto Label_00A5;  }  
Magic Number,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x2800617c7cbf536c,The following statement contains a magic number: if (-2 != 0) {  	return;  }  
Magic Number,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x2800617c7cbf536c,The following statement contains a magic number: if (((2 != 0) && flag) && ((((uint)flag) + ((uint)flag)) >= 0)) {  	goto Label_006C;  }  
Magic Number,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x628399c54373f8c5,The following statement contains a magic number: this.plotter.AddLineGraph (pointSource' x0474811406941040.Color' 2.0' x0474811406941040.Title);  
Magic Number,Nsim,ErrorGraphControl,C:\repos\neismit_emds\Nsim4\Nsim\ErrorGraphControl.cs,x628e6c716ec340be,The following statement contains a magic number: switch (num) {  case 1:  	this.plotter = (ChartPlotter)x11d58b056c032b03;  	break;  case 2:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x04abae94658fc85d);  	break;  default:  	this._x7dc3d9d322900926 = true;  	if ((((uint)num) + ((uint)num)) >= 0) {  		break;  	}  	goto Label_0052;  }  
Magic Number,Nsim,BoolToVisibilityConverter,C:\repos\neismit_emds\Nsim4\Nsim\BoolToVisibilityConverter.cs,xbed0305adddfdcf6,The following statement contains a magic number: if (!(xbcea506a33cf9111 is Visibility) && (-2147483648 != 0)) {  	return DependencyProperty.UnsetValue;  }  
Magic Number,Nsim,NetStatisticViewer,C:\repos\neismit_emds\Nsim4\Nsim\NetStatisticViewer.cs,InitializeComponent,The following statement contains a magic number: while (flag) {  	this._x7dc3d9d322900926 = true;  	Uri resourceLocator = new Uri ("/Nsim4;component/components/structure/statistics/netstatisticviewer.xaml"' UriKind.Relative);  	Application.LoadComponent (this' resourceLocator);  	if ((0 != 0) || (((uint)flag) <= uint.MaxValue)) {  		return;  	}  	if (8 == 0) {  	}  }  
Magic Number,Nsim,NetStatisticViewer,C:\repos\neismit_emds\Nsim4\Nsim\NetStatisticViewer.cs,InitializeComponent,The following statement contains a magic number: if (8 == 0) {  }  
Magic Number,Nsim,NetStatisticViewer,C:\repos\neismit_emds\Nsim4\Nsim\NetStatisticViewer.cs,x628e6c716ec340be,The following statement contains a magic number: switch (xf3efd21c486a5cce) {  case 1:  	this.tbNeuronsCount = (TextBlock)x11d58b056c032b03;  	if (0x7fffffff != 0) {  		return;  	}  	break;  case 2:  	this.tbLinksCount = (TextBlock)x11d58b056c032b03;  	return;  }  
Magic Number,Encog.ML,BasicML,C:\repos\neismit_emds\Nsim4\Encog\ML\BasicML.cs,SetProperty,The following statement contains a magic number: this._properties [name] = CSVFormat.EgFormat.Format (d' 10);  
Magic Number,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,The following statement contains a magic number: if (!this._x6c7711ed04d2ac90) {  	this._x6c7711ed04d2ac90 = true;  	if (0 != 0) {  		return;  	}  }  else if (3 != 0) {  	if (Math.Abs ((double)(this._x8bfd70ace96b5df9 - this._xd87f6a9c53c2ed9f.Error)) >= this._x75deb38bfba59a18) {  		if (-2 != 0) {  			this._x0d60065f91a9e9e6 = 0;  		}  	}  	else {  		this._x0d60065f91a9e9e6++;  		if (0 == 0) {  		}  		if (this._x0d60065f91a9e9e6 > this._x26b3661872e072b7) {  			this._x33b5f28b377bcb1a = true;  		}  	}  }  
Magic Number,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,The following statement contains a magic number: if (!this._x6c7711ed04d2ac90) {  	this._x6c7711ed04d2ac90 = true;  	if (0 != 0) {  		return;  	}  }  else if (3 != 0) {  	if (Math.Abs ((double)(this._x8bfd70ace96b5df9 - this._xd87f6a9c53c2ed9f.Error)) >= this._x75deb38bfba59a18) {  		if (-2 != 0) {  			this._x0d60065f91a9e9e6 = 0;  		}  	}  	else {  		this._x0d60065f91a9e9e6++;  		if (0 == 0) {  		}  		if (this._x0d60065f91a9e9e6 > this._x26b3661872e072b7) {  			this._x33b5f28b377bcb1a = true;  		}  	}  }  
Magic Number,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,The following statement contains a magic number: if (3 != 0) {  	if (Math.Abs ((double)(this._x8bfd70ace96b5df9 - this._xd87f6a9c53c2ed9f.Error)) >= this._x75deb38bfba59a18) {  		if (-2 != 0) {  			this._x0d60065f91a9e9e6 = 0;  		}  	}  	else {  		this._x0d60065f91a9e9e6++;  		if (0 == 0) {  		}  		if (this._x0d60065f91a9e9e6 > this._x26b3661872e072b7) {  			this._x33b5f28b377bcb1a = true;  		}  	}  }  
Magic Number,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,The following statement contains a magic number: if (3 != 0) {  	if (Math.Abs ((double)(this._x8bfd70ace96b5df9 - this._xd87f6a9c53c2ed9f.Error)) >= this._x75deb38bfba59a18) {  		if (-2 != 0) {  			this._x0d60065f91a9e9e6 = 0;  		}  	}  	else {  		this._x0d60065f91a9e9e6++;  		if (0 == 0) {  		}  		if (this._x0d60065f91a9e9e6 > this._x26b3661872e072b7) {  			this._x33b5f28b377bcb1a = true;  		}  	}  }  
Magic Number,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,The following statement contains a magic number: if (Math.Abs ((double)(this._x8bfd70ace96b5df9 - this._xd87f6a9c53c2ed9f.Error)) >= this._x75deb38bfba59a18) {  	if (-2 != 0) {  		this._x0d60065f91a9e9e6 = 0;  	}  }  else {  	this._x0d60065f91a9e9e6++;  	if (0 == 0) {  	}  	if (this._x0d60065f91a9e9e6 > this._x26b3661872e072b7) {  		this._x33b5f28b377bcb1a = true;  	}  }  
Magic Number,Encog.ML.Train.Strategy,StopTrainingStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\StopTrainingStrategy.cs,PostIteration,The following statement contains a magic number: if (-2 != 0) {  	this._x0d60065f91a9e9e6 = 0;  }  
Magic Number,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,Init,The following statement contains a magic number: do {  	this._x1306445c04667cc7 = (IMLEncodable)train.Method;  }  while (2 == 0);  
Magic Number,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,PostIteration,The following statement contains a magic number: if (4 != 0) {  	goto Label_0024;  }  
Magic Number,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,PostIteration,The following statement contains a magic number: if (15 == 0) {  	goto Label_0011;  }  
Magic Number,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,PostIteration,The following statement contains a magic number: if (this._xd87f6a9c53c2ed9f.Error > this._xaf54fba65f108955) {  	EncogLogging.Log (0' "Greedy strategy dropped last iteration.");  	this._xd87f6a9c53c2ed9f.Error = this._xaf54fba65f108955;  	if (-2 != 0) {  		goto Label_003A;  	}  	goto Label_0083;  }  
Magic Number,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,PostIteration,The following statement contains a magic number: if (-2 != 0) {  	goto Label_003A;  }  
Magic Number,Encog.ML.Train.Strategy,Greedy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\Greedy.cs,PostIteration,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.ML.Train.Strategy,RequiredImprovementStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\RequiredImprovementStrategy.cs,RequiredImprovementStrategy,The following statement contains a magic number: if (4 != 0) {  	this._x3362caa77b1f70b4 = required;  }  
Magic Number,Encog.ML.Train.Strategy,HybridStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\HybridStrategy.cs,HybridStrategy,The following statement contains a magic number: if (((((uint)minImprovement) | 2) != 0) && (0 == 0)) {  	this._xa45232be281da68a = altTrain;  	this._x6c7711ed04d2ac90 = false;  }  
Magic Number,Encog.ML.Train.Strategy,ResetStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\ResetStrategy.cs,PreIteration,The following statement contains a magic number: if (this._xd87f6a9c53c2ed9f.Error <= this._x3362caa77b1f70b4) {  	this._x73b300efe91f4640 = 0;  }  else if (3 != 0) {  	this._x73b300efe91f4640++;  	if (this._x73b300efe91f4640 > this._x31fc5c65f8944f8b) {  		EncogLogging.Log (0' "Failed to imrove network' resetting.");  		this._x1306445c04667cc7.Reset ();  		this._x73b300efe91f4640 = 0;  	}  }  
Magic Number,Encog.ML.Train.Strategy,ResetStrategy,C:\repos\neismit_emds\Nsim4\Encog\ML\Train\Strategy\ResetStrategy.cs,PreIteration,The following statement contains a magic number: if (3 != 0) {  	this._x73b300efe91f4640++;  	if (this._x73b300efe91f4640 > this._x31fc5c65f8944f8b) {  		EncogLogging.Log (0' "Failed to imrove network' resetting.");  		this._x1306445c04667cc7.Reset ();  		this._x73b300efe91f4640 = 0;  	}  }  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: if (!this._x2df72d022f38625d) {  	double num2;  	do {  		num2 = (2.0 * base.NextDouble ()) - 1.0;  		num3 = (2.0 * base.NextDouble ()) - 1.0;  		num4 = (num2 * num2) + (num3 * num3);  	}  	while (num4 >= 1.0);  	num4 = Math.Sqrt ((-2.0 * Math.Log (num4)) / num4);  	num = num2 * num4;  	if (((uint)num2) <= uint.MaxValue) {  		if (((uint)m) <= uint.MaxValue) {  			goto Label_001D;  		}  	}  	else {  		goto Label_008C;  	}  	goto Label_00FE;  }  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: if (!this._x2df72d022f38625d) {  	double num2;  	do {  		num2 = (2.0 * base.NextDouble ()) - 1.0;  		num3 = (2.0 * base.NextDouble ()) - 1.0;  		num4 = (num2 * num2) + (num3 * num3);  	}  	while (num4 >= 1.0);  	num4 = Math.Sqrt ((-2.0 * Math.Log (num4)) / num4);  	num = num2 * num4;  	if (((uint)num2) <= uint.MaxValue) {  		if (((uint)m) <= uint.MaxValue) {  			goto Label_001D;  		}  	}  	else {  		goto Label_008C;  	}  	goto Label_00FE;  }  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: if (!this._x2df72d022f38625d) {  	double num2;  	do {  		num2 = (2.0 * base.NextDouble ()) - 1.0;  		num3 = (2.0 * base.NextDouble ()) - 1.0;  		num4 = (num2 * num2) + (num3 * num3);  	}  	while (num4 >= 1.0);  	num4 = Math.Sqrt ((-2.0 * Math.Log (num4)) / num4);  	num = num2 * num4;  	if (((uint)num2) <= uint.MaxValue) {  		if (((uint)m) <= uint.MaxValue) {  			goto Label_001D;  		}  	}  	else {  		goto Label_008C;  	}  	goto Label_00FE;  }  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: do {  	num2 = (2.0 * base.NextDouble ()) - 1.0;  	num3 = (2.0 * base.NextDouble ()) - 1.0;  	num4 = (num2 * num2) + (num3 * num3);  }  while (num4 >= 1.0);  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: do {  	num2 = (2.0 * base.NextDouble ()) - 1.0;  	num3 = (2.0 * base.NextDouble ()) - 1.0;  	num4 = (num2 * num2) + (num3 * num3);  }  while (num4 >= 1.0);  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: num2 = (2.0 * base.NextDouble ()) - 1.0;  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: num3 = (2.0 * base.NextDouble ()) - 1.0;  
Magic Number,Encog.MathUtil.Randomize,GaussianRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\GaussianRandomizer.cs,BoxMuller,The following statement contains a magic number: num4 = Math.Sqrt ((-2.0 * Math.Log (num4)) / num4);  
Magic Number,Encog.MathUtil.Randomize,NguyenWidrowRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\NguyenWidrowRandomizer.cs,Randomize,The following statement contains a magic number: while (true) {  	if (l >= (network.LayerCount - 1)) {  		if ((num >= 1) && ((((uint)num) + ((uint)l)) <= uint.MaxValue)) {  			this._x43f451310e815b76 = network.InputCount;  			this._xd7d571ecee49d1e4 = 0.7 * Math.Pow ((double)num' 1.0 / ((double)network.InputCount));  			base.Randomize (network);  			return;  		}  		return;  	}  	num += network.GetLayerTotalNeuronCount (l);  	if (((uint)l) < 0) {  		goto Label_00B3;  	}  	l++;  }  
Magic Number,Encog.MathUtil.Randomize,NguyenWidrowRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\NguyenWidrowRandomizer.cs,Randomize,The following statement contains a magic number: if (l >= (network.LayerCount - 1)) {  	if ((num >= 1) && ((((uint)num) + ((uint)l)) <= uint.MaxValue)) {  		this._x43f451310e815b76 = network.InputCount;  		this._xd7d571ecee49d1e4 = 0.7 * Math.Pow ((double)num' 1.0 / ((double)network.InputCount));  		base.Randomize (network);  		return;  	}  	return;  }  
Magic Number,Encog.MathUtil.Randomize,NguyenWidrowRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\NguyenWidrowRandomizer.cs,Randomize,The following statement contains a magic number: if ((num >= 1) && ((((uint)num) + ((uint)l)) <= uint.MaxValue)) {  	this._x43f451310e815b76 = network.InputCount;  	this._xd7d571ecee49d1e4 = 0.7 * Math.Pow ((double)num' 1.0 / ((double)network.InputCount));  	base.Randomize (network);  	return;  }  
Magic Number,Encog.MathUtil.Randomize,NguyenWidrowRandomizer,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\NguyenWidrowRandomizer.cs,Randomize,The following statement contains a magic number: this._xd7d571ecee49d1e4 = 0.7 * Math.Pow ((double)num' 1.0 / ((double)network.InputCount));  
Magic Number,Encog.MathUtil.Randomize,Distort,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Randomize\Distort.cs,Randomize,The following statement contains a magic number: return (d + (this._xa00f04d8b3a6664c - ((base.NextDouble () * this._xa00f04d8b3a6664c) * 2.0)));  
Magic Number,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Read,The following statement contains a magic number: if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  	if (8 != 0) {  		return network;  	}  	goto Label_03B8;  }  
Magic Number,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Read,The following statement contains a magic number: if (8 != 0) {  	return network;  }  
Magic Number,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IActivationFunction function;  	IList<string> list;  	Label_0064:  	if (enumerator.MoveNext ()) {  		goto Label_00E2;  	}  	goto Label_000B;  	Label_0072:  	network2.ActivationFunctions [num++] = function;  	if (0 == 0) {  		goto Label_00D6;  	}  	Label_0087:  	num2 = 0;  	while (num2 < function.ParamNames.Length) {  		function.Params [num2] = CSVFormat.EgFormat.Parse (list [num2 + 1]);  		num2++;  	}  	if ((((uint)num) + ((uint)num2)) <= uint.MaxValue) {  		goto Label_0072;  	}  	Label_00D6:  	if (4 != 0) {  		goto Label_0064;  	}  	goto Label_000B;  	Label_00E2:  	str = enumerator.Current;  	list = EncogFileSection.SplitColumns (str);  	string name = "Encog.Engine.Network.Activation." + list [0];  	try {  		function = (IActivationFunction)ReflectionUtil.LoadObject (name);  		goto Label_0087;  	}  	catch (TypeLoadException exception) {  		throw new PersistError (exception);  	}  	catch (TargetException exception2) {  		throw new PersistError (exception2);  	}  	catch (MemberAccessException exception3) {  		throw new PersistError (exception3);  	}  }  
Magic Number,Encog.Neural.Networks,PersistBasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\PersistBasicNetwork.cs,Read,The following statement contains a magic number: if (4 != 0) {  	goto Label_0064;  }  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,DecodeFromArray,The following statement contains a magic number: do {  	if (weights.Length != encoded.Length) {  		throw new NeuralNetworkError ("Size mismatch' encoded array should be of length " + weights.Length);  	}  	EngineArray.ArrayCopy (encoded' weights);  }  while (-2 == 0);  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,EnableConnection,The following statement contains a magic number: if (!enable) {  	if ((((uint)num) + ((uint)num)) < 0) {  		goto Label_0051;  	}  	if (!this._structure.ConnectionLimited) {  		base.SetProperty ("CONNECTION_LIMIT"' (double)1E-10);  		goto Label_0023;  	}  	goto Label_003D;  }  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,EnableConnection,The following statement contains a magic number: if (!this._structure.ConnectionLimited) {  	base.SetProperty ("CONNECTION_LIMIT"' (double)1E-10);  	goto Label_0023;  }  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,EnableConnection,The following statement contains a magic number: base.SetProperty ("CONNECTION_LIMIT"' (double)1E-10);  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,Equals,The following statement contains a magic number: return this.Equals (other' 10);  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,GetWeight,The following statement contains a magic number: while (true) {  	int num3;  	int num4;  	int num5;  	this.ValidateNeuron (fromLayer' fromNeuron);  	this.ValidateNeuron (fromLayer + 1' toNeuron);  	do {  		int num2;  		int index = (this.LayerCount - fromLayer) - 1;  		if ((((uint)num5) + ((uint)num3)) <= uint.MaxValue) {  			if ((((uint)index) + ((uint)num5)) < 0) {  				break;  			}  			num2 = index - 1;  			while (num2 < 0) {  				throw new NeuralNetworkError ("The specified layer is not connected to another layer: " + fromLayer);  			}  		}  		num3 = this._structure.Flat.WeightIndex [num2];  		num4 = this._structure.Flat.LayerCounts [index];  	}  	while (0 != 0);  	num5 = (num3 + fromNeuron) + (toNeuron * num4);  	if (4 != 0) {  		return this._structure.Flat.Weights [num5];  	}  }  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,GetWeight,The following statement contains a magic number: if (4 != 0) {  	return this._structure.Flat.Weights [num5];  }  
Magic Number,Encog.Neural.Networks,BasicNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\BasicNetwork.cs,Reset,The following statement contains a magic number: if (this.LayerCount < 3) {  	new RangeRandomizer (-1.0' 1.0).Randomize (this);  }  else {  	new NguyenWidrowRandomizer (-1.0' 1.0).Randomize (this);  }  
Magic Number,Encog.Engine.Network.Activation,ActivationCompetitive,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationCompetitive.cs,ActivationFunction,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_00C9;  }  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: for (int i = start; i < (start + size); i++) {  	x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  }  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: for (int i = start; i < (start + size); i++) {  	x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  }  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: for (int i = start; i < (start + size); i++) {  	x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  }  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: for (int i = start; i < (start + size); i++) {  	x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  }  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,ActivationFunction,The following statement contains a magic number: x [i] = this._paras [1] * BoundMath.Exp (-Math.Pow (x [i] - this._paras [0]' 2.0) / ((2.0 * this._paras [2]) * this._paras [2]));  
Magic Number,Encog.Engine.Network.Activation,ActivationGaussian,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationGaussian.cs,DerivativeFunction,The following statement contains a magic number: return ((((Math.Exp ((((-0.5 * num) * num) * b) * b) * num2) * num) * num) * ((((num * num) * b) * b) - 1.0));  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationRamp,The following statement contains a magic number: this._paras = new double[4];  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationRamp,The following statement contains a magic number: if ((((uint)thresholdLow) + ((uint)high)) <= uint.MaxValue) {  	this._paras [2] = high;  	this._paras [3] = low;  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationRamp,The following statement contains a magic number: if ((((uint)thresholdLow) + ((uint)high)) <= uint.MaxValue) {  	this._paras [2] = high;  	this._paras [3] = low;  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationRamp,The following statement contains a magic number: this._paras [2] = high;  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationRamp,The following statement contains a magic number: this._paras [3] = low;  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: if (index < (start + size)) {  	if (x [index] >= this._paras [1]) {  		Label_0078:  		if (x [index] > this._paras [0]) {  			x [index] = this._paras [2];  		}  		else {  			if ((((uint)size) + ((uint)start)) < 0) {  				if ((((uint)index) & 0) != 0) {  					goto Label_0029;  				}  				goto Label_0078;  			}  			x [index] = num * x [index];  		}  	}  	else {  		x [index] = this._paras [3];  	}  	goto Label_0029;  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: if (index < (start + size)) {  	if (x [index] >= this._paras [1]) {  		Label_0078:  		if (x [index] > this._paras [0]) {  			x [index] = this._paras [2];  		}  		else {  			if ((((uint)size) + ((uint)start)) < 0) {  				if ((((uint)index) & 0) != 0) {  					goto Label_0029;  				}  				goto Label_0078;  			}  			x [index] = num * x [index];  		}  	}  	else {  		x [index] = this._paras [3];  	}  	goto Label_0029;  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: if (x [index] >= this._paras [1]) {  	Label_0078:  	if (x [index] > this._paras [0]) {  		x [index] = this._paras [2];  	}  	else {  		if ((((uint)size) + ((uint)start)) < 0) {  			if ((((uint)index) & 0) != 0) {  				goto Label_0029;  			}  			goto Label_0078;  		}  		x [index] = num * x [index];  	}  }  else {  	x [index] = this._paras [3];  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: if (x [index] >= this._paras [1]) {  	Label_0078:  	if (x [index] > this._paras [0]) {  		x [index] = this._paras [2];  	}  	else {  		if ((((uint)size) + ((uint)start)) < 0) {  			if ((((uint)index) & 0) != 0) {  				goto Label_0029;  			}  			goto Label_0078;  		}  		x [index] = num * x [index];  	}  }  else {  	x [index] = this._paras [3];  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: if (x [index] > this._paras [0]) {  	x [index] = this._paras [2];  }  else {  	if ((((uint)size) + ((uint)start)) < 0) {  		if ((((uint)index) & 0) != 0) {  			goto Label_0029;  		}  		goto Label_0078;  	}  	x [index] = num * x [index];  }  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: x [index] = this._paras [2];  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,ActivationFunction,The following statement contains a magic number: x [index] = this._paras [3];  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,Clone,The following statement contains a magic number: return new ActivationRamp (this._paras [0]' this._paras [1]' this._paras [2]' this._paras [3]);  
Magic Number,Encog.Engine.Network.Activation,ActivationRamp,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationRamp.cs,Clone,The following statement contains a magic number: return new ActivationRamp (this._paras [0]' this._paras [1]' this._paras [2]' this._paras [3]);  
Magic Number,Encog.Engine.Network.Activation,ActivationStep,C:\repos\neismit_emds\Nsim4\Encog\Engine\Network\Activation\ActivationStep.cs,ActivationFunction,The following statement contains a magic number: x [index] = this._paras [2];  
Magic Number,Encog.ML.Data.Buffer.CODEC,CSVDataCODEC,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\CODEC\CSVDataCODEC.cs,Write,The following statement contains a magic number: if (3 != 0) {  	goto Label_00CF;  }  
Magic Number,Encog.ML.Data.Buffer.CODEC,ArrayDataCODEC,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\CODEC\ArrayDataCODEC.cs,Read,The following statement contains a magic number: do {  	significance = 1.0;  }  while (4 == 0);  
Magic Number,Encog,ConsoleStatusReportable,C:\repos\neismit_emds\Nsim4\Encog\ConsoleStatusReportable.cs,Report,The following statement contains a magic number: objArray = new object[5];  
Magic Number,Encog,ConsoleStatusReportable,C:\repos\neismit_emds\Nsim4\Encog\ConsoleStatusReportable.cs,Report,The following statement contains a magic number: do {  	objArray [0] = current;  	objArray [1] = "/";  	objArray [2] = total;  }  while ((((uint)current) - ((uint)current)) < 0);  
Magic Number,Encog,ConsoleStatusReportable,C:\repos\neismit_emds\Nsim4\Encog\ConsoleStatusReportable.cs,Report,The following statement contains a magic number: objArray [2] = total;  
Magic Number,Encog,ConsoleStatusReportable,C:\repos\neismit_emds\Nsim4\Encog\ConsoleStatusReportable.cs,Report,The following statement contains a magic number: objArray [3] = " : ";  
Magic Number,Encog,ConsoleStatusReportable,C:\repos\neismit_emds\Nsim4\Encog\ConsoleStatusReportable.cs,Report,The following statement contains a magic number: objArray [4] = message;  
Magic Number,Encog.Neural.Pattern,JordanPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\JordanPattern.cs,Generate,The following statement contains a magic number: if (0 == 0) {  	BasicLayer layer;  	BasicLayer layer2;  	network.AddLayer (new BasicLayer (null' true' this._xcfe830a7176c14e5));  	if (-2 == 0) {  		return network;  	}  	network.AddLayer (layer = new BasicLayer (this._x2a5a4034520336f3' true' this._xdf89f9cf9fc3d06f));  	network.AddLayer (layer2 = new BasicLayer (this._x2a5a4034520336f3' false' this._x8f581d694fca0474));  	layer.ContextFedBy = layer2;  	network.Structure.FinalizeStructure ();  }  
Magic Number,Encog.Neural.Pattern,JordanPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\JordanPattern.cs,Generate,The following statement contains a magic number: if (-2 == 0) {  	return network;  }  
Magic Number,Encog.Neural.Pattern,ADALINEPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ADALINEPattern.cs,Generate,The following statement contains a magic number: if (0 == 0) {  	method.AddLayer (layer);  	method.AddLayer (layer2);  	method.Structure.FinalizeStructure ();  	new RangeRandomizer (-0.5' 0.5).Randomize (method);  	return method;  }  
Magic Number,Encog.Neural.Pattern,ADALINEPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ADALINEPattern.cs,Generate,The following statement contains a magic number: if (0 == 0) {  	method.AddLayer (layer);  	method.AddLayer (layer2);  	method.Structure.FinalizeStructure ();  	new RangeRandomizer (-0.5' 0.5).Randomize (method);  	return method;  }  
Magic Number,Encog.Neural.Pattern,ADALINEPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ADALINEPattern.cs,Generate,The following statement contains a magic number: new RangeRandomizer (-0.5' 0.5).Randomize (method);  
Magic Number,Encog.Neural.Pattern,ADALINEPattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ADALINEPattern.cs,Generate,The following statement contains a magic number: new RangeRandomizer (-0.5' 0.5).Randomize (method);  
Magic Number,Encog.Neural.Pattern,ART1Pattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ART1Pattern.cs,ART1Pattern,The following statement contains a magic number: if (0 == 0) {  	this._x9fc3ee03a439f6f0 = 3.0;  	if (0 == 0) {  		this._x109822751b15259c = 0.9;  	}  }  
Magic Number,Encog.Neural.Pattern,ART1Pattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ART1Pattern.cs,ART1Pattern,The following statement contains a magic number: if (0 == 0) {  	this._x9fc3ee03a439f6f0 = 3.0;  	if (0 == 0) {  		this._x109822751b15259c = 0.9;  	}  }  
Magic Number,Encog.Neural.Pattern,ART1Pattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ART1Pattern.cs,ART1Pattern,The following statement contains a magic number: this._x9fc3ee03a439f6f0 = 3.0;  
Magic Number,Encog.Neural.Pattern,ART1Pattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ART1Pattern.cs,ART1Pattern,The following statement contains a magic number: if (0 == 0) {  	this._x109822751b15259c = 0.9;  }  
Magic Number,Encog.Neural.Pattern,ART1Pattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ART1Pattern.cs,ART1Pattern,The following statement contains a magic number: this._x109822751b15259c = 0.9;  
Magic Number,Encog.Neural.Pattern,ART1Pattern,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pattern\ART1Pattern.cs,Generate,The following statement contains a magic number: do {  	art2.A1 = this._x34f4b4706ab9e6e0;  	art2.B1 = this._x01ec8535a377ff25;  }  while (4 == 0);  
Magic Number,Encog.Util.Concurrency,DetermineWorkload,C:\repos\neismit_emds\Nsim4\Encog\Util\Concurrency\DetermineWorkload.cs,DetermineWorkload,The following statement contains a magic number: if (threads == 0) {  	num = (int)Math.Log ((double)(((int)Process.GetCurrentProcess ().ProcessorAffinity) + 1)' 2.0);  	if (num == 1) {  		goto Label_0059;  	}  	num++;  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0059;  	}  }  else if ((((uint)num2) + ((uint)workloadSize)) < 0) {  	return;  }  
Magic Number,Encog.Util.Concurrency,DetermineWorkload,C:\repos\neismit_emds\Nsim4\Encog\Util\Concurrency\DetermineWorkload.cs,DetermineWorkload,The following statement contains a magic number: num = (int)Math.Log ((double)(((int)Process.GetCurrentProcess ().ProcessorAffinity) + 1)' 2.0);  
Magic Number,Encog.MathUtil.RBF,GaussianFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\GaussianFunction.cs,Calculate,The following statement contains a magic number: while (true) {  	if (num3 < centers.Length) {  		num += Math.Pow (x [num3] - centers [num3]' 2.0) / ((2.0 * width) * width);  	}  	else {  		return (base.Peak * Math.Exp (-num));  	}  	num3++;  }  
Magic Number,Encog.MathUtil.RBF,GaussianFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\GaussianFunction.cs,Calculate,The following statement contains a magic number: while (true) {  	if (num3 < centers.Length) {  		num += Math.Pow (x [num3] - centers [num3]' 2.0) / ((2.0 * width) * width);  	}  	else {  		return (base.Peak * Math.Exp (-num));  	}  	num3++;  }  
Magic Number,Encog.MathUtil.RBF,GaussianFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\GaussianFunction.cs,Calculate,The following statement contains a magic number: if (num3 < centers.Length) {  	num += Math.Pow (x [num3] - centers [num3]' 2.0) / ((2.0 * width) * width);  }  else {  	return (base.Peak * Math.Exp (-num));  }  
Magic Number,Encog.MathUtil.RBF,GaussianFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\GaussianFunction.cs,Calculate,The following statement contains a magic number: if (num3 < centers.Length) {  	num += Math.Pow (x [num3] - centers [num3]' 2.0) / ((2.0 * width) * width);  }  else {  	return (base.Peak * Math.Exp (-num));  }  
Magic Number,Encog.MathUtil.RBF,GaussianFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\GaussianFunction.cs,Calculate,The following statement contains a magic number: num += Math.Pow (x [num3] - centers [num3]' 2.0) / ((2.0 * width) * width);  
Magic Number,Encog.MathUtil.RBF,GaussianFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\GaussianFunction.cs,Calculate,The following statement contains a magic number: num += Math.Pow (x [num3] - centers [num3]' 2.0) / ((2.0 * width) * width);  
Magic Number,Encog.MathUtil.RBF,MultiquadricFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\MultiquadricFunction.cs,Calculate,The following statement contains a magic number: if (num3 < numArray.Length) {  	a += Math.Pow (x [num3] - numArray [num3]' 2.0) + (width * width);  	num3++;  	if ((((uint)a) - ((uint)a)) <= uint.MaxValue) {  		goto Label_000C;  	}  	goto Label_006B;  }  
Magic Number,Encog.MathUtil.RBF,MultiquadricFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\MultiquadricFunction.cs,Calculate,The following statement contains a magic number: a += Math.Pow (x [num3] - numArray [num3]' 2.0) + (width * width);  
Magic Number,Encog.MathUtil.RBF,InverseMultiquadricFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\InverseMultiquadricFunction.cs,Calculate,The following statement contains a magic number: if (index < centers.Length) {  	a += Math.Pow (x [index] - centers [index]' 2.0) + (width * width);  	goto Label_000C;  }  
Magic Number,Encog.MathUtil.RBF,InverseMultiquadricFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\InverseMultiquadricFunction.cs,Calculate,The following statement contains a magic number: a += Math.Pow (x [index] - centers [index]' 2.0) + (width * width);  
Magic Number,Encog.MathUtil.RBF,MexicanHatFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\MexicanHatFunction.cs,Calculate,The following statement contains a magic number: for (num2 = 0; num2 < centers.Length; num2++) {  	num += Math.Pow (x [num2] - centers [num2]' 2.0);  }  
Magic Number,Encog.MathUtil.RBF,MexicanHatFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\MexicanHatFunction.cs,Calculate,The following statement contains a magic number: num += Math.Pow (x [num2] - centers [num2]' 2.0);  
Magic Number,Encog.MathUtil.RBF,MexicanHatFunction,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\RBF\MexicanHatFunction.cs,Calculate,The following statement contains a magic number: return ((base.Peak * (1.0 - num)) * Math.Exp (-num / 2.0));  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,LevenbergMarquardtTraining,The following statement contains a magic number: if (2 != 0) {  	ValidateNetwork.ValidateMethodToData (network' training);  	if (network.OutputCount != 1) {  		throw new TrainingError ("Levenberg Marquardt requires an output layer with a single neuron.");  	}  	this.Training = training;  	goto Label_0134;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,LevenbergMarquardtTraining,The following statement contains a magic number: this._x3271cefb1a159639 = 0.1;  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,CalculateHessian,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: if ((((uint)num4) | 15) != 0) {  	goto Label_0399;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: this._xd7d571ecee49d1e4 = Math.Abs ((double)((this._x8557b7ee760663f3 - this._xc7c4e9c099884228) / (2.0 * num)));  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: if ((num4 >= num3) && (this._x3271cefb1a159639 < 1E+25)) {  	this._x3271cefb1a159639 *= 10.0;  	num5 = 0;  	Label_01EF:  	if (num5 < this._xe2982b936ae423cd) {  		this._xc410e3804222557a [num5] [num5] = this._x3cb63876dda4b74a [num5] + (this._x3271cefb1a159639 + this._x6ad505c7ef981b0e);  		num5++;  		if ((((uint)num7) + ((uint)num3)) >= 0) {  			goto Label_01EF;  		}  	}  	else {  		if ((((uint)num7) + ((uint)num8)) > uint.MaxValue) {  			return;  		}  		decomposition = new LUDecomposition (this._x05fb16197e552de6);  		if (!decomposition.IsNonsingular) {  			goto Label_00F1;  		}  		this._xdadd8f92d75a3aba = decomposition.Solve (this._x878c4eb3cef19a5a);  	}  	if (((uint)num6) >= 0) {  		if (0 != 0) {  			goto Label_0340;  		}  		goto Label_01C7;  	}  	goto Label_029A;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: if ((num4 >= num3) && (this._x3271cefb1a159639 < 1E+25)) {  	this._x3271cefb1a159639 *= 10.0;  	num5 = 0;  	Label_01EF:  	if (num5 < this._xe2982b936ae423cd) {  		this._xc410e3804222557a [num5] [num5] = this._x3cb63876dda4b74a [num5] + (this._x3271cefb1a159639 + this._x6ad505c7ef981b0e);  		num5++;  		if ((((uint)num7) + ((uint)num3)) >= 0) {  			goto Label_01EF;  		}  	}  	else {  		if ((((uint)num7) + ((uint)num8)) > uint.MaxValue) {  			return;  		}  		decomposition = new LUDecomposition (this._x05fb16197e552de6);  		if (!decomposition.IsNonsingular) {  			goto Label_00F1;  		}  		this._xdadd8f92d75a3aba = decomposition.Solve (this._x878c4eb3cef19a5a);  	}  	if (((uint)num6) >= 0) {  		if (0 != 0) {  			goto Label_0340;  		}  		goto Label_01C7;  	}  	goto Label_029A;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: this._x3271cefb1a159639 *= 10.0;  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: this._x3271cefb1a159639 /= 10.0;  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: if (this._x6c57e14b737e51f6 && (decomposition != null)) {  	num8 = Trace (decomposition.Inverse ());  	this._xc7c4e9c099884228 = this._xe2982b936ae423cd - (this._x6ad505c7ef981b0e * num8);  	if (((uint)num7) < 0) {  		goto Label_0044;  	}  	this._x6ad505c7ef981b0e = ((double)this._xe2982b936ae423cd) / ((2.0 * num2) + num8);  	if ((((uint)num4) | 0xfffffffe) != 0) {  		goto Label_0044;  	}  	goto Label_0022;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: this._x6ad505c7ef981b0e = ((double)this._xe2982b936ae423cd) / ((2.0 * num2) + num8);  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: num /= 2.0;  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: this._x3271cefb1a159639 /= 10.0;  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,Iteration,The following statement contains a magic number: if ((((uint)num8) | 4) == 0) {  	goto Label_0022;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,UpdateWeights,The following statement contains a magic number: if (2 != 0) {  	numArray = (double[])this._x2f33d779e5a20b28.Clone ();  	num2 = 0;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,UpdateWeights,The following statement contains a magic number: while (true) {  	if (num2 >= numArray.Length) {  		NetworkCODEC.ArrayToNetwork (numArray' this._x87a7fc6a72741c2e);  		return (num / 2.0);  	}  	numArray [num2] += this._xdadd8f92d75a3aba [num2];  	num += numArray [num2] * numArray [num2];  	num2++;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,UpdateWeights,The following statement contains a magic number: if (num2 >= numArray.Length) {  	NetworkCODEC.ArrayToNetwork (numArray' this._x87a7fc6a72741c2e);  	return (num / 2.0);  }  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,UpdateWeights,The following statement contains a magic number: return (num / 2.0);  
Magic Number,Encog.Neural.Networks.Training.Lma,LevenbergMarquardtTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\LevenbergMarquardtTraining.cs,x01818299df58497e,The following statement contains a magic number: return (num / 2.0);  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,JacobianChainRule,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0009;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,Calculate,The following statement contains a magic number: if (index < this._x530ae94d583e0ea1) {  	this._x4c51ad74d6bcc9e9 = index;  	this._x82d75873c9eb7116 = 0;  	if ((((uint)index) - ((uint)num)) >= 0) {  		this._xb12276308f0fa6d9.GetRecord ((long)index' this._x61830ac74d65acc3);  		double num3 = this.xddf5c75e1d743e26 (this._x61830ac74d65acc3);  		this._xc8a462f994253347 [index] = num3;  		if (3 != 0) {  			num += num3 * num3;  		}  		index++;  		goto Label_000C;  	}  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,Calculate,The following statement contains a magic number: if ((((uint)index) - ((uint)num)) >= 0) {  	this._xb12276308f0fa6d9.GetRecord ((long)index' this._x61830ac74d65acc3);  	double num3 = this.xddf5c75e1d743e26 (this._x61830ac74d65acc3);  	this._xc8a462f994253347 [index] = num3;  	if (3 != 0) {  		num += num3 * num3;  	}  	index++;  	goto Label_000C;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,Calculate,The following statement contains a magic number: if (3 != 0) {  	num += num3 * num3;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,Calculate,The following statement contains a magic number: return (num / 2.0);  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The following statement contains a magic number: if (num3 > 0) {  	num3--;  	num4--;  	if ((((uint)layerOutput) - ((uint)layerNeuronCount)) <= uint.MaxValue) {  		layerTotalNeuronCount = this._x87a7fc6a72741c2e.GetLayerTotalNeuronCount (num3);  		layerNeuronCount = this._x87a7fc6a72741c2e.GetLayerNeuronCount (num4);  		if ((((uint)num8) + ((uint)layerTotalNeuronCount)) > uint.MaxValue) {  			goto Label_0095;  		}  		if (2 == 0) {  			goto Label_0115;  		}  		if ((((uint)num3) + ((uint)layerNeuronCount)) < 0) {  			goto Label_0352;  		}  		num10 = 0;  	}  	goto Label_0030;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The following statement contains a magic number: if ((((uint)layerOutput) - ((uint)layerNeuronCount)) <= uint.MaxValue) {  	layerTotalNeuronCount = this._x87a7fc6a72741c2e.GetLayerTotalNeuronCount (num3);  	layerNeuronCount = this._x87a7fc6a72741c2e.GetLayerNeuronCount (num4);  	if ((((uint)num8) + ((uint)layerTotalNeuronCount)) > uint.MaxValue) {  		goto Label_0095;  	}  	if (2 == 0) {  		goto Label_0115;  	}  	if ((((uint)num3) + ((uint)layerNeuronCount)) < 0) {  		goto Label_0352;  	}  	num10 = 0;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The following statement contains a magic number: if (2 == 0) {  	goto Label_0115;  }  
Magic Number,Encog.Neural.Networks.Training.Lma,JacobianChainRule,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Lma\JacobianChainRule.cs,xddf5c75e1d743e26,The following statement contains a magic number: num3 = this._x87a7fc6a72741c2e.LayerCount - 2;  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,AutoDecay,The following statement contains a magic number: while (this._x9b481c22b6706459 > this._x64078ba09fb4e08b) {  	this._x9b481c22b6706459 += this._x9f14b09b934a6c82;  	if (2 != 0) {  		goto Label_0010;  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,AutoDecay,The following statement contains a magic number: if (2 != 0) {  	goto Label_0010;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,Iteration,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this.Training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data2;  	int num2;  	IMLData data3;  	goto Label_006A;  	Label_0042:  	if (this._xf7c1f63ae5cd87f7) {  		goto Label_00AF;  	}  	goto Label_0064;  	Label_004C:  	if ((((uint)maxValue) - ((uint)maxValue)) < 0) {  		goto Label_0042;  	}  	Label_0064:  	this.x350499392b8d9d27 ();  	Label_006A:  	if (enumerator.MoveNext ()) {  		goto Label_0152;  	}  	goto Label_01AD;  	Label_0078:  	this.x350499392b8d9d27 ();  	goto Label_006A;  	Label_0089:  	if (data3 [num2] < maxValue) {  		goto Label_00DF;  	}  	Label_0095:  	this.x1441044d30b77751 (num2' this._x87a7fc6a72741c2e.Weights' data2);  	goto Label_0042;  	Label_00AF:  	if (this.x77dc8b40d5dfd791 (this._x87a7fc6a72741c2e.Weights' numArray' input)) {  		goto Label_006A;  	}  	if ((((uint)maxValue) + ((uint)maxValue)) >= 0) {  		goto Label_0103;  	}  	if (0 != 0) {  		goto Label_011B;  	}  	Label_00DF:  	maxValue = data3 [num2];  	input = pair.Input;  	if (-2147483648 != 0) {  	}  	goto Label_0095;  	Label_0103:  	if ((((uint)maxValue) + ((uint)maxValue)) <= uint.MaxValue) {  		goto Label_0078;  	}  	Label_011B:  	if (0 != 0) {  		goto Label_004C;  	}  	numArray [num2]++;  	data3 = this._x87a7fc6a72741c2e.Compute (pair.Input);  	if (-2 != 0) {  		goto Label_0089;  	}  	goto Label_0078;  	Label_0152:  	pair = enumerator.Current;  	data2 = pair.Input;  	num2 = this._x703660d5c67ed8fb.CalculateBMU (data2);  	if (!this._xf7c1f63ae5cd87f7) {  		goto Label_0095;  	}  	if ((((uint)maxValue) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_011B;  	}  	goto Label_0078;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,Iteration,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this.Training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data2;  	int num2;  	IMLData data3;  	goto Label_006A;  	Label_0042:  	if (this._xf7c1f63ae5cd87f7) {  		goto Label_00AF;  	}  	goto Label_0064;  	Label_004C:  	if ((((uint)maxValue) - ((uint)maxValue)) < 0) {  		goto Label_0042;  	}  	Label_0064:  	this.x350499392b8d9d27 ();  	Label_006A:  	if (enumerator.MoveNext ()) {  		goto Label_0152;  	}  	goto Label_01AD;  	Label_0078:  	this.x350499392b8d9d27 ();  	goto Label_006A;  	Label_0089:  	if (data3 [num2] < maxValue) {  		goto Label_00DF;  	}  	Label_0095:  	this.x1441044d30b77751 (num2' this._x87a7fc6a72741c2e.Weights' data2);  	goto Label_0042;  	Label_00AF:  	if (this.x77dc8b40d5dfd791 (this._x87a7fc6a72741c2e.Weights' numArray' input)) {  		goto Label_006A;  	}  	if ((((uint)maxValue) + ((uint)maxValue)) >= 0) {  		goto Label_0103;  	}  	if (0 != 0) {  		goto Label_011B;  	}  	Label_00DF:  	maxValue = data3 [num2];  	input = pair.Input;  	if (-2147483648 != 0) {  	}  	goto Label_0095;  	Label_0103:  	if ((((uint)maxValue) + ((uint)maxValue)) <= uint.MaxValue) {  		goto Label_0078;  	}  	Label_011B:  	if (0 != 0) {  		goto Label_004C;  	}  	numArray [num2]++;  	data3 = this._x87a7fc6a72741c2e.Compute (pair.Input);  	if (-2 != 0) {  		goto Label_0089;  	}  	goto Label_0078;  	Label_0152:  	pair = enumerator.Current;  	data2 = pair.Input;  	num2 = this._x703660d5c67ed8fb.CalculateBMU (data2);  	if (!this._xf7c1f63ae5cd87f7) {  		goto Label_0095;  	}  	if ((((uint)maxValue) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_011B;  	}  	goto Label_0078;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,Iteration,The following statement contains a magic number: if (-2147483648 != 0) {  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,Iteration,The following statement contains a magic number: if (-2 != 0) {  	goto Label_0089;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,Iteration,The following statement contains a magic number: this.Error = this._x703660d5c67ed8fb.WorstDistance / 100.0;  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,BasicTrainSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\BasicTrainSOM.cs,ToString,The following statement contains a magic number: builder.Append (Format.FormatDouble (this._xd6ed827fa7f40115' 2));  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-1 != 0) {  	RBFEnum enum2 = type;  	if (-2147483648 != 0) {  		switch (enum2) {  		case RBFEnum.Gaussian:  			this._x542ac40d5d0f20b7 = new GaussianFunction (2);  			break;  		case RBFEnum.Multiquadric:  			this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  			break;  		case RBFEnum.InverseMultiquadric:  			this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  			break;  		case RBFEnum.MexicanHat:  			this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  			break;  		}  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-1 != 0) {  	RBFEnum enum2 = type;  	if (-2147483648 != 0) {  		switch (enum2) {  		case RBFEnum.Gaussian:  			this._x542ac40d5d0f20b7 = new GaussianFunction (2);  			break;  		case RBFEnum.Multiquadric:  			this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  			break;  		case RBFEnum.InverseMultiquadric:  			this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  			break;  		case RBFEnum.MexicanHat:  			this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  			break;  		}  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-1 != 0) {  	RBFEnum enum2 = type;  	if (-2147483648 != 0) {  		switch (enum2) {  		case RBFEnum.Gaussian:  			this._x542ac40d5d0f20b7 = new GaussianFunction (2);  			break;  		case RBFEnum.Multiquadric:  			this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  			break;  		case RBFEnum.InverseMultiquadric:  			this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  			break;  		case RBFEnum.MexicanHat:  			this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  			break;  		}  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-1 != 0) {  	RBFEnum enum2 = type;  	if (-2147483648 != 0) {  		switch (enum2) {  		case RBFEnum.Gaussian:  			this._x542ac40d5d0f20b7 = new GaussianFunction (2);  			break;  		case RBFEnum.Multiquadric:  			this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  			break;  		case RBFEnum.InverseMultiquadric:  			this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  			break;  		case RBFEnum.MexicanHat:  			this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  			break;  		}  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-1 != 0) {  	RBFEnum enum2 = type;  	if (-2147483648 != 0) {  		switch (enum2) {  		case RBFEnum.Gaussian:  			this._x542ac40d5d0f20b7 = new GaussianFunction (2);  			break;  		case RBFEnum.Multiquadric:  			this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  			break;  		case RBFEnum.InverseMultiquadric:  			this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  			break;  		case RBFEnum.MexicanHat:  			this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  			break;  		}  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-2147483648 != 0) {  	switch (enum2) {  	case RBFEnum.Gaussian:  		this._x542ac40d5d0f20b7 = new GaussianFunction (2);  		break;  	case RBFEnum.Multiquadric:  		this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  		break;  	case RBFEnum.InverseMultiquadric:  		this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  		break;  	case RBFEnum.MexicanHat:  		this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  		break;  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-2147483648 != 0) {  	switch (enum2) {  	case RBFEnum.Gaussian:  		this._x542ac40d5d0f20b7 = new GaussianFunction (2);  		break;  	case RBFEnum.Multiquadric:  		this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  		break;  	case RBFEnum.InverseMultiquadric:  		this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  		break;  	case RBFEnum.MexicanHat:  		this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  		break;  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-2147483648 != 0) {  	switch (enum2) {  	case RBFEnum.Gaussian:  		this._x542ac40d5d0f20b7 = new GaussianFunction (2);  		break;  	case RBFEnum.Multiquadric:  		this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  		break;  	case RBFEnum.InverseMultiquadric:  		this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  		break;  	case RBFEnum.MexicanHat:  		this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  		break;  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-2147483648 != 0) {  	switch (enum2) {  	case RBFEnum.Gaussian:  		this._x542ac40d5d0f20b7 = new GaussianFunction (2);  		break;  	case RBFEnum.Multiquadric:  		this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  		break;  	case RBFEnum.InverseMultiquadric:  		this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  		break;  	case RBFEnum.MexicanHat:  		this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  		break;  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-2147483648 != 0) {  	switch (enum2) {  	case RBFEnum.Gaussian:  		this._x542ac40d5d0f20b7 = new GaussianFunction (2);  		break;  	case RBFEnum.Multiquadric:  		this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  		break;  	case RBFEnum.InverseMultiquadric:  		this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  		break;  	case RBFEnum.MexicanHat:  		this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  		break;  	}  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (enum2) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	break;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	break;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	break;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	break;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (enum2) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	break;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	break;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	break;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	break;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (enum2) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	break;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	break;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	break;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	break;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (enum2) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	break;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	break;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	break;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	break;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new GaussianFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (-2 != 0) {  	return;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: if (8 != 0) {  	if (0 == 0) {  		goto Label_000B;  	}  	goto Label_0129;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (type) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	goto Label_0068;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	if (((0 == 0) && (-1 != 0)) && (0 != 0)) {  		goto Label_00E4;  	}  	goto Label_0068;  default:  	goto Label_0068;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (type) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	goto Label_0068;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	if (((0 == 0) && (-1 != 0)) && (0 != 0)) {  		goto Label_00E4;  	}  	goto Label_0068;  default:  	goto Label_0068;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (type) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	goto Label_0068;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	if (((0 == 0) && (-1 != 0)) && (0 != 0)) {  		goto Label_00E4;  	}  	goto Label_0068;  default:  	goto Label_0068;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: switch (type) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	goto Label_0068;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	goto Label_0068;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	if (((0 == 0) && (-1 != 0)) && (0 != 0)) {  		goto Label_00E4;  	}  	goto Label_0068;  default:  	goto Label_0068;  }  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new GaussianFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: numArray2 = new double[2];  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following statement contains a magic number: numArray = new int[2];  
Magic Number,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,x2d3eee42a645354a,The following statement contains a magic number: if (8 == 0) {  	goto Label_0062;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,CompareTo,The following statement contains a magic number: if (this._ga != null) {  	if (!this._ga.CalculateScore.ShouldMinimize) {  		if (Math.Abs ((double)(this.Score - other.Score)) < 1E-07) {  			return 0;  		}  		if (this.Score <= other.Score) {  			return 1;  		}  		return -1;  	}  	if (Math.Abs ((double)(this.Score - other.Score)) >= 1E-07) {  		if (this.Score > other.Score) {  			return 1;  		}  		return -1;  	}  	return 0;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,CompareTo,The following statement contains a magic number: if (this._ga != null) {  	if (!this._ga.CalculateScore.ShouldMinimize) {  		if (Math.Abs ((double)(this.Score - other.Score)) < 1E-07) {  			return 0;  		}  		if (this.Score <= other.Score) {  			return 1;  		}  		return -1;  	}  	if (Math.Abs ((double)(this.Score - other.Score)) >= 1E-07) {  		if (this.Score > other.Score) {  			return 1;  		}  		return -1;  	}  	return 0;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,CompareTo,The following statement contains a magic number: if (!this._ga.CalculateScore.ShouldMinimize) {  	if (Math.Abs ((double)(this.Score - other.Score)) < 1E-07) {  		return 0;  	}  	if (this.Score <= other.Score) {  		return 1;  	}  	return -1;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,CompareTo,The following statement contains a magic number: if (Math.Abs ((double)(this.Score - other.Score)) < 1E-07) {  	return 0;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,CompareTo,The following statement contains a magic number: if (Math.Abs ((double)(this.Score - other.Score)) >= 1E-07) {  	if (this.Score > other.Score) {  		return 1;  	}  	return -1;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,Mate,The following statement contains a magic number: objArray [3] = num2;  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,Mate,The following statement contains a magic number: if (4 != 0) {  	goto Label_0227;  }  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,Mate,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.ML.Genetic.Genome,BasicGenome,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Genome\BasicGenome.cs,Mate,The following statement contains a magic number: objArray [2] = "'Father:";  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.YoungScoreBonus = 0.3;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (4 != 0) {  	if (0 != 0) {  		goto Label_0013;  	}  	this._innovationIDGenerate = new BasicGenerateID ();  	this.OldAgePenalty = 0.3;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (4 != 0) {  	if (0 != 0) {  		goto Label_0013;  	}  	this._innovationIDGenerate = new BasicGenerateID ();  	this.OldAgePenalty = 0.3;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.OldAgePenalty = 0.3;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.OldAgeThreshold = 50;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.SurvivalRate = 0.2;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (-2147483648 != 0) {  	if (4 != 0) {  		this._youngBonusAgeThreshold = 10;  		goto Label_0013;  	}  }  else {  	goto Label_0079;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (-2147483648 != 0) {  	if (4 != 0) {  		this._youngBonusAgeThreshold = 10;  		goto Label_0013;  	}  }  else {  	goto Label_0079;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (-2147483648 != 0) {  	if (4 != 0) {  		this._youngBonusAgeThreshold = 10;  		goto Label_0013;  	}  }  else {  	goto Label_0079;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (4 != 0) {  	this._youngBonusAgeThreshold = 10;  	goto Label_0013;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (4 != 0) {  	this._youngBonusAgeThreshold = 10;  	goto Label_0013;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this._youngBonusAgeThreshold = 10;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (0 == 0) {  	this.OldAgePenalty = 0.3;  	this.OldAgeThreshold = 50;  	this.Species = new List<ISpecies> ();  	this._speciesIDGenerate = new BasicGenerateID ();  	this.SurvivalRate = 0.2;  	if ((((uint)thePopulationSize) - ((uint)thePopulationSize)) >= 0) {  		this._youngBonusAgeThreshold = 10;  	}  	else {  		goto Label_00B3;  	}  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (0 == 0) {  	this.OldAgePenalty = 0.3;  	this.OldAgeThreshold = 50;  	this.Species = new List<ISpecies> ();  	this._speciesIDGenerate = new BasicGenerateID ();  	this.SurvivalRate = 0.2;  	if ((((uint)thePopulationSize) - ((uint)thePopulationSize)) >= 0) {  		this._youngBonusAgeThreshold = 10;  	}  	else {  		goto Label_00B3;  	}  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (0 == 0) {  	this.OldAgePenalty = 0.3;  	this.OldAgeThreshold = 50;  	this.Species = new List<ISpecies> ();  	this._speciesIDGenerate = new BasicGenerateID ();  	this.SurvivalRate = 0.2;  	if ((((uint)thePopulationSize) - ((uint)thePopulationSize)) >= 0) {  		this._youngBonusAgeThreshold = 10;  	}  	else {  		goto Label_00B3;  	}  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if (0 == 0) {  	this.OldAgePenalty = 0.3;  	this.OldAgeThreshold = 50;  	this.Species = new List<ISpecies> ();  	this._speciesIDGenerate = new BasicGenerateID ();  	this.SurvivalRate = 0.2;  	if ((((uint)thePopulationSize) - ((uint)thePopulationSize)) >= 0) {  		this._youngBonusAgeThreshold = 10;  	}  	else {  		goto Label_00B3;  	}  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.OldAgePenalty = 0.3;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.OldAgeThreshold = 50;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.SurvivalRate = 0.2;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: if ((((uint)thePopulationSize) - ((uint)thePopulationSize)) >= 0) {  	this._youngBonusAgeThreshold = 10;  }  else {  	goto Label_00B3;  }  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this._youngBonusAgeThreshold = 10;  
Magic Number,Encog.ML.Genetic.Population,BasicPopulation,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Population\BasicPopulation.cs,BasicPopulation,The following statement contains a magic number: this.YoungScoreBonus = 0.3;  
Magic Number,Encog.ML.Genetic.Mutate,MutatePerturb,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Mutate\MutatePerturb.cs,PerformMutation,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator = chromosome.Genes.GetEnumerator ()) {  	IGene gene;  	DoubleGene gene2;  	double num;  	goto Label_0031;  	Label_000E:  	if (0 != 0) {  		goto Label_003C;  	}  	if (0 != 0) {  		goto Label_009D;  	}  	goto Label_0031;  	Label_0019:  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_000E;  	}  	Label_0031:  	if (enumerator.MoveNext ()) {  		goto Label_008C;  	}  	goto Label_0046;  	Label_003C:  	if (gene is DoubleGene) {  		goto Label_0096;  	}  	goto Label_0019;  	Label_0046:  	if ((((uint)num) + ((uint)num)) >= 0) {  		return;  	}  	goto Label_008C;  	Label_0060:  	num += this._x0133fea5e9a09a63 - ((ThreadSafeRandom.NextDouble () * this._x0133fea5e9a09a63) * 2.0);  	gene2.Value = num;  	goto Label_000E;  	Label_008C:  	gene = enumerator.Current;  	goto Label_003C;  	Label_0096:  	gene2 = (DoubleGene)gene;  	Label_009D:  	num = gene2.Value;  	goto Label_0060;  }  
Magic Number,Encog.ML.Genetic.Mutate,MutatePerturb,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\Mutate\MutatePerturb.cs,PerformMutation,The following statement contains a magic number: num += this._x0133fea5e9a09a63 - ((ThreadSafeRandom.NextDouble () * this._x0133fea5e9a09a63) * 2.0);  
Magic Number,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,The following statement contains a magic number: num5 *= 3.0;  
Magic Number,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,The following statement contains a magic number: num5 *= 3.0;  
Magic Number,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,The following statement contains a magic number: if ((((uint)flag2) | 3) == 0) {  	return;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,GlobalMinimumSearch,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\GlobalMinimumSearch.cs,FindBestRange,The following statement contains a magic number: if ((((uint)num4) | 15) != 0) {  	goto Label_06CA;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if ((((uint)ystart) | 8) != 0) {  	num = network.CalcErrorWithMultipleSigma (x' direc' deriv2' true);  	num2 = 1E+30;  	num3 = 0;  	goto Label_07E4;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if ((((uint)ystart) | 8) != 0) {  	num = network.CalcErrorWithMultipleSigma (x' direc' deriv2' true);  	num2 = 1E+30;  	num3 = 0;  	goto Label_07E4;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num2 = 1E+30;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num5 >= 6) {  	goto Label_0096;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num5 < 2) {  	goto Label_0080;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num16 < n) {  	x [num16] = bs [num16] + (search.X2 * direc [num16]);  	if (((((uint)num3) | 0xfffffffe) == 0) || (x [num16] < 1E-10)) {  		x [num16] = 1E-10;  	}  	goto Label_0276;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num16 < n) {  	x [num16] = bs [num16] + (search.X2 * direc [num16]);  	if (((((uint)num3) | 0xfffffffe) == 0) || (x [num16] < 1E-10)) {  		x [num16] = 1E-10;  	}  	goto Label_0276;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (((((uint)num3) | 0xfffffffe) == 0) || (x [num16] < 1E-10)) {  	x [num16] = 1E-10;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (((((uint)num3) | 0xfffffffe) == 0) || (x [num16] < 1E-10)) {  	x [num16] = 1E-10;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: x [num16] = 1E-10;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (4 != 0) {  	if (num19 < 0.0) {  		num19 = 0.0;  	}  	if (num19 > 10.0) {  		num19 = 10.0;  	}  	else if ((((uint)maxError) | 0xff) == 0) {  		goto Label_06FD;  	}  	if (num17 >= 0.001) {  		num5 = 0;  	}  	else {  		if ((((uint)num10) | 1) == 0) {  			goto Label_0096;  		}  		num5++;  	}  	goto Label_009D;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (4 != 0) {  	if (num19 < 0.0) {  		num19 = 0.0;  	}  	if (num19 > 10.0) {  		num19 = 10.0;  	}  	else if ((((uint)maxError) | 0xff) == 0) {  		goto Label_06FD;  	}  	if (num17 >= 0.001) {  		num5 = 0;  	}  	else {  		if ((((uint)num10) | 1) == 0) {  			goto Label_0096;  		}  		num5++;  	}  	goto Label_009D;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (4 != 0) {  	if (num19 < 0.0) {  		num19 = 0.0;  	}  	if (num19 > 10.0) {  		num19 = 10.0;  	}  	else if ((((uint)maxError) | 0xff) == 0) {  		goto Label_06FD;  	}  	if (num17 >= 0.001) {  		num5 = 0;  	}  	else {  		if ((((uint)num10) | 1) == 0) {  			goto Label_0096;  		}  		num5++;  	}  	goto Label_009D;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (4 != 0) {  	if (num19 < 0.0) {  		num19 = 0.0;  	}  	if (num19 > 10.0) {  		num19 = 10.0;  	}  	else if ((((uint)maxError) | 0xff) == 0) {  		goto Label_06FD;  	}  	if (num17 >= 0.001) {  		num5 = 0;  	}  	else {  		if ((((uint)num10) | 1) == 0) {  			goto Label_0096;  		}  		num5++;  	}  	goto Label_009D;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num19 > 10.0) {  	num19 = 10.0;  }  else if ((((uint)maxError) | 0xff) == 0) {  	goto Label_06FD;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num19 > 10.0) {  	num19 = 10.0;  }  else if ((((uint)maxError) | 0xff) == 0) {  	goto Label_06FD;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num19 = 10.0;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num17 >= 0.001) {  	num5 = 0;  }  else {  	if ((((uint)num10) | 1) == 0) {  		goto Label_0096;  	}  	num5++;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num = search.Brentmin (10' maxError' 1E-06' 1E-05' network' search.Y2);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num = search.Brentmin (10' maxError' 1E-06' 1E-05' network' search.Y2);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num = search.Brentmin (10' maxError' 1E-06' 1E-05' network' search.Y2);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num4 > 0) {  	num = search.Brentmin (20' maxError' eps' 1E-07' network' search.Y2);  	goto Label_02C0;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num4 > 0) {  	num = search.Brentmin (20' maxError' eps' 1E-07' network' search.Y2);  	goto Label_02C0;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num = search.Brentmin (20' maxError' eps' 1E-07' network' search.Y2);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num = search.Brentmin (20' maxError' eps' 1E-07' network' search.Y2);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (x [num14] < 1E-10) {  	x [num14] = 1E-10;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (x [num14] < 1E-10) {  	x [num14] = 1E-10;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: x [num14] = 1E-10;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num13 = 10.0 * num11;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: search.FindBestRange (0.0' 2.0 * num13' -3' false' maxError' network);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: search.FindBestRange (0.0' 2.0 * num13' -3' false' maxError' network);  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if ((((uint)num17) + ((uint)maxIterations)) >= 0) {  	if (((uint)num9) >= 0) {  		if (num13 >= (0.1 * num11)) {  			if (num13 <= (10.0 * num11)) {  				goto Label_0469;  			}  		}  		else {  			num13 = 0.1 * num11;  			if ((((uint)num11) - ((uint)num16)) < 0) {  				goto Label_04CB;  			}  			goto Label_0469;  		}  	}  	goto Label_045B;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if ((((uint)num17) + ((uint)maxIterations)) >= 0) {  	if (((uint)num9) >= 0) {  		if (num13 >= (0.1 * num11)) {  			if (num13 <= (10.0 * num11)) {  				goto Label_0469;  			}  		}  		else {  			num13 = 0.1 * num11;  			if ((((uint)num11) - ((uint)num16)) < 0) {  				goto Label_04CB;  			}  			goto Label_0469;  		}  	}  	goto Label_045B;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if ((((uint)num17) + ((uint)maxIterations)) >= 0) {  	if (((uint)num9) >= 0) {  		if (num13 >= (0.1 * num11)) {  			if (num13 <= (10.0 * num11)) {  				goto Label_0469;  			}  		}  		else {  			num13 = 0.1 * num11;  			if ((((uint)num11) - ((uint)num16)) < 0) {  				goto Label_04CB;  			}  			goto Label_0469;  		}  	}  	goto Label_045B;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (((uint)num9) >= 0) {  	if (num13 >= (0.1 * num11)) {  		if (num13 <= (10.0 * num11)) {  			goto Label_0469;  		}  	}  	else {  		num13 = 0.1 * num11;  		if ((((uint)num11) - ((uint)num16)) < 0) {  			goto Label_04CB;  		}  		goto Label_0469;  	}  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (((uint)num9) >= 0) {  	if (num13 >= (0.1 * num11)) {  		if (num13 <= (10.0 * num11)) {  			goto Label_0469;  		}  	}  	else {  		num13 = 0.1 * num11;  		if ((((uint)num11) - ((uint)num16)) < 0) {  			goto Label_04CB;  		}  		goto Label_0469;  	}  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (((uint)num9) >= 0) {  	if (num13 >= (0.1 * num11)) {  		if (num13 <= (10.0 * num11)) {  			goto Label_0469;  		}  	}  	else {  		num13 = 0.1 * num11;  		if ((((uint)num11) - ((uint)num16)) < 0) {  			goto Label_04CB;  		}  		goto Label_0469;  	}  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num13 >= (0.1 * num11)) {  	if (num13 <= (10.0 * num11)) {  		goto Label_0469;  	}  }  else {  	num13 = 0.1 * num11;  	if ((((uint)num11) - ((uint)num16)) < 0) {  		goto Label_04CB;  	}  	goto Label_0469;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num13 >= (0.1 * num11)) {  	if (num13 <= (10.0 * num11)) {  		goto Label_0469;  	}  }  else {  	num13 = 0.1 * num11;  	if ((((uint)num11) - ((uint)num16)) < 0) {  		goto Label_04CB;  	}  	goto Label_0469;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num13 >= (0.1 * num11)) {  	if (num13 <= (10.0 * num11)) {  		goto Label_0469;  	}  }  else {  	num13 = 0.1 * num11;  	if ((((uint)num11) - ((uint)num16)) < 0) {  		goto Label_04CB;  	}  	goto Label_0469;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num13 <= (10.0 * num11)) {  	goto Label_0469;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num13 = 0.1 * num11;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num11 = 1.5 / num11;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (((((uint)tol) + ((uint)eps)) >= 0) && (num11 >= 0.0001)) {  	goto Label_04CB;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num11 = 0.0001;  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (num12 < n) {  	bs [num12] = x [num12];  	if (((uint)num8) > uint.MaxValue) {  		goto Label_009D;  	}  }  else {  	if (Math.Abs (num8) < 1E-07) {  		if ((((uint)num14) + ((uint)num4)) > uint.MaxValue) {  			goto Label_07E4;  		}  		num13 = 0.0;  		if ((((uint)num19) - ((uint)ystart)) < 0) {  			goto Label_0516;  		}  		goto Label_04F0;  	}  	num13 = num10 / num8;  	if ((((uint)num13) - ((uint)num15)) >= 0) {  		goto Label_04F0;  	}  	goto Label_05C6;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (Math.Abs (num8) < 1E-07) {  	if ((((uint)num14) + ((uint)num4)) > uint.MaxValue) {  		goto Label_07E4;  	}  	num13 = 0.0;  	if ((((uint)num19) - ((uint)ystart)) < 0) {  		goto Label_0516;  	}  	goto Label_04F0;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: if (++num4 >= 3) {  	return num;  }  
Magic Number,Encog.Neural.Networks.Training.PNN,DeriveMinimum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\PNN\DeriveMinimum.cs,Calculate,The following statement contains a magic number: num11 = 0.0001;  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,EncogAnalyst,The following statement contains a magic number: if (-2147483648 != 0) {  	this.AddCommand (new CmdGenerate (this));  	goto Label_0071;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineInputCount,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	goto Label_002C;  	Label_001C:  	if (!field.Input) {  		goto Label_002C;  	}  	Label_0024:  	if (!field.Ignored) {  		goto Label_004C;  	}  	Label_002C:  	if (enumerator.MoveNext ()) {  		goto Label_005A;  	}  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_0057;  	}  	Label_004C:  	num += field.ColumnsNeeded;  	goto Label_002C;  	Label_0057:  	if (0 == 0) {  		return num;  	}  	Label_005A:  	field = enumerator.Current;  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		goto Label_001C;  	}  	if (-2147483648 != 0) {  		goto Label_0024;  	}  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_004C;  	}  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineInputCount,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0024;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineOutputCount,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	goto Label_0037;  	Label_001A:  	if ((((uint)num) + ((uint)num)) >= 0) {  		return num;  	}  	Label_0034:  	if (0 != 0) {  		goto Label_0043;  	}  	Label_0037:  	if (enumerator.MoveNext ()) {  		goto Label_008F;  	}  	goto Label_0072;  	Label_0043:  	if ((((uint)num) & 0) == 0) {  		goto Label_005F;  	}  	Label_0057:  	if (!field.Output) {  		goto Label_0034;  	}  	Label_005F:  	if (!field.Ignored) {  		goto Label_0098;  	}  	goto Label_0037;  	Label_0069:  	if (-2 == 0) {  		goto Label_008F;  	}  	goto Label_0037;  	Label_0072:  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		goto Label_001A;  	}  	return num;  	Label_008F:  	field = enumerator.Current;  	goto Label_0057;  	Label_0098:  	num += field.ColumnsNeeded;  	goto Label_0069;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineOutputCount,The following statement contains a magic number: if (-2 == 0) {  	goto Label_008F;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineTotalInputFieldCount,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	goto Label_002B;  	Label_001A:  	if (!field.Ignored) {  		goto Label_0071;  	}  	goto Label_002B;  	Label_0024:  	if (-2147483648 == 0) {  		goto Label_004D;  	}  	Label_002B:  	if (!enumerator.MoveNext () && ((((uint)num) - ((uint)num)) <= uint.MaxValue)) {  		return num;  	}  	goto Label_007E;  	Label_004D:  	if (!field.Input) {  		goto Label_002B;  	}  	if ((((uint)num) + ((uint)num)) > uint.MaxValue) {  	}  	goto Label_001A;  	Label_0071:  	num += field.ColumnsNeeded;  	goto Label_0024;  	Label_007E:  	field = enumerator.Current;  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		goto Label_004D;  	}  	goto Label_001A;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineTotalInputFieldCount,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_004D;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineUniqueColumns,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	string str;  	goto Label_0051;  	Label_0021:  	if ((((uint)num) - ((uint)num)) > uint.MaxValue) {  		goto Label_007C;  	}  	if ((((uint)num) | 3) == 0) {  		goto Label_0021;  	}  	Label_0051:  	if (enumerator.MoveNext ()) {  		goto Label_009D;  	}  	return num;  	Label_005C:  	if (!field.Ignored) {  		goto Label_00A7;  	}  	goto Label_0051;  	Label_0066:  	if (dictionary.ContainsKey (str)) {  		goto Label_0086;  	}  	num += field.ColumnsNeeded;  	Label_007C:  	dictionary [str] = null;  	goto Label_0051;  	Label_0086:  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0021;  	}  	return num;  	Label_009D:  	field = enumerator.Current;  	goto Label_005C;  	Label_00A7:  	str = field.Name;  	goto Label_0066;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,DetermineUniqueColumns,The following statement contains a magic number: if ((((uint)num) | 3) == 0) {  	goto Label_0021;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,ExecuteTask,The following statement contains a magic number: using (IEnumerator<string> enumerator = task.Lines.GetEnumerator ()) {  	string str;  	bool flag;  	string str2;  	string str3;  	string str4;  	int num3;  	Cmd cmd;  	goto Label_0023;  	Label_001D:  	num2++;  	goto Label_0034;  	Label_0023:  	if (enumerator.MoveNext ()) {  		goto Label_0129;  	}  	return;  	Label_0034:  	if (!this.x1855cef31496f82f ()) {  		goto Label_0023;  	}  	goto Label_0122;  	Label_003E:  	this.x7946863605ccf4d8 (flag);  	this.CurrentQuantTask = null;  	goto Label_001D;  	Label_0050:  	cmd = this._xc8e5edc888efe6f5 [str2];  	if (cmd != null) {  		flag = cmd.ExecuteCommand (str3);  		goto Label_003E;  	}  	throw new AnalystError ("Unknown Command: " + str);  	Label_009A:  	str2 = str4.ToUpper ();  	str3 = "";  	goto Label_0050;  	Label_00AE:  	if (num3 != -1) {  		goto Label_00D7;  	}  	if (0 == 0) {  		goto Label_009A;  	}  	goto Label_0122;  	Label_00BD:  	if ((((uint)flag) + ((uint)num3)) > uint.MaxValue) {  		goto Label_0129;  	}  	goto Label_00AE;  	Label_00D7:  	str2 = str4.Substring (0' num3).ToUpper ();  	str3 = str4.Substring (num3 + 1);  	goto Label_0050;  	Label_00F9:  	flag = false;  	if (((uint)num3) > uint.MaxValue) {  		goto Label_0131;  	}  	str4 = str.Trim ();  	Label_0115:  	num3 = str4.IndexOf (' ');  	goto Label_00BD;  	Label_0122:  	if (4 != 0) {  		return;  	}  	Label_0129:  	str = enumerator.Current;  	Label_0131:  	EncogLogging.Log (0' "Execute analyst line: " + str);  	this.x1ce1584ce46d7cf9 (count' num2' str);  	if (((uint)num3) < 0) {  		goto Label_0115;  	}  	goto Label_00F9;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,ExecuteTask,The following statement contains a magic number: if (4 != 0) {  	return;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,x1855cef31496f82f,The following statement contains a magic number: foreach (IAnalystListener listener in this._xa1a7b04ac1ec3821) {  	if (listener.ShouldShutDown ()) {  		return true;  		if (8 != 0) {  		}  	}  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,x1855cef31496f82f,The following statement contains a magic number: if (listener.ShouldShutDown ()) {  	return true;  	if (8 != 0) {  	}  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,x1855cef31496f82f,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: try {  	FileInfo info;  	FileStream stream;  	int num;  	int num2;  	int num3;  	byte[] buffer;  	Stream responseStream;  	xb44380e048627945.Delete ();  	goto Label_027D;  	Label_000B:  	if (((uint)num) >= 0) {  		goto Label_014D;  	}  	Label_0020:  	using (FileStream stream3 = info.OpenRead ()) {  		using (FileStream stream4 = xb44380e048627945.Create ()) {  			using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  				num3 = 0;  				goto Label_00C4;  				Label_0042:  				num = 0;  				Label_0044:  				num++;  				if (num2 > 0) {  					goto Label_00C6;  				}  				goto Label_0134;  				Label_0054:  				if (num <= 10) {  					goto Label_0044;  				}  				Label_0059:  				this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  				goto Label_0042;  				Label_007F:  				if (-1 == 0) {  					goto Label_00FE;  				}  				Label_0089:  				if (num2 >= 0) {  					goto Label_00ED;  				}  				goto Label_0054;  				Label_008F:  				if ((((uint)num) & 0) != 0) {  					goto Label_0089;  				}  				if ((((uint)num3) | 0xfffffffe) == 0) {  					goto Label_0059;  				}  				goto Label_0054;  				Label_00C4:  				num = 0;  				Label_00C6:  				num2 = stream5.Read (buffer' 0' buffer.Length);  				if ((((uint)num) | uint.MaxValue) != 0) {  					goto Label_0089;  				}  				Label_00ED:  				stream4.Write (buffer' 0' num2);  				num3 += num2;  				Label_00FE:  				if (((uint)num) <= uint.MaxValue) {  					goto Label_008F;  				}  				goto Label_007F;  			}  		}  		Label_0134:  		info.Delete ();  		return;  	}  	goto Label_0167;  	Label_014D:  	if (xf50d6d3c10c0eac9.ToString ().ToLower ().EndsWith (".gz")) {  		goto Label_0020;  	}  	Label_0167:  	xb44380e048627945.Delete ();  	info.MoveTo (xb44380e048627945.ToString ());  	return;  	Label_017E:  	if (num2 > 0) {  		goto Label_0213;  	}  	Label_0185:  	if (num2 > 0) {  		goto Label_0219;  	}  	stream.Close ();  	goto Label_022D;  	Label_0194:  	this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Downloading... " + Format.FormatMemory ((long)num3));  	if (3 == 0) {  		goto Label_02A2;  	}  	num = 0;  	Label_01C4:  	num++;  	goto Label_0185;  	Label_01CA:  	if ((((uint)num3) | 8) == 0) {  		goto Label_0213;  	}  	Label_01E2:  	if (num <= 10) {  		goto Label_01C4;  	}  	goto Label_0194;  	Label_01EB:  	stream.Write (buffer' 0' num2);  	num3 += num2;  	if (((uint)num) >= 0) {  		goto Label_01CA;  	}  	if (0 != 0) {  		goto Label_0299;  	}  	Label_0213:  	if (num2 >= 0) {  		goto Label_01EB;  	}  	goto Label_01E2;  	Label_0219:  	num2 = responseStream.Read (buffer' 0' buffer.Length);  	goto Label_017E;  	Label_022D:  	if ((((uint)num2) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_000B;  	}  	return;  	Label_024A:  	num3 = 0;  	buffer = new byte[BotUtil.BufferSize];  	WebRequest request = WebRequest.Create (xf50d6d3c10c0eac9);  	if (0 != 0) {  		goto Label_0299;  	}  	responseStream = ((HttpWebResponse)request.GetResponse ()).GetResponseStream ();  	goto Label_0219;  	Label_027D:  	info = FileUtil.CombinePath (new FileInfo (xb44380e048627945.DirectoryName)' "temp.tmp");  	info.Delete ();  	Label_0299:  	stream = info.OpenWrite ();  	num = 0;  	Label_02A2:  	num2 = 0;  	goto Label_024A;  }  catch (IOException exception) {  	throw new AnalystError (exception);  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: try {  	FileInfo info;  	FileStream stream;  	int num;  	int num2;  	int num3;  	byte[] buffer;  	Stream responseStream;  	xb44380e048627945.Delete ();  	goto Label_027D;  	Label_000B:  	if (((uint)num) >= 0) {  		goto Label_014D;  	}  	Label_0020:  	using (FileStream stream3 = info.OpenRead ()) {  		using (FileStream stream4 = xb44380e048627945.Create ()) {  			using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  				num3 = 0;  				goto Label_00C4;  				Label_0042:  				num = 0;  				Label_0044:  				num++;  				if (num2 > 0) {  					goto Label_00C6;  				}  				goto Label_0134;  				Label_0054:  				if (num <= 10) {  					goto Label_0044;  				}  				Label_0059:  				this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  				goto Label_0042;  				Label_007F:  				if (-1 == 0) {  					goto Label_00FE;  				}  				Label_0089:  				if (num2 >= 0) {  					goto Label_00ED;  				}  				goto Label_0054;  				Label_008F:  				if ((((uint)num) & 0) != 0) {  					goto Label_0089;  				}  				if ((((uint)num3) | 0xfffffffe) == 0) {  					goto Label_0059;  				}  				goto Label_0054;  				Label_00C4:  				num = 0;  				Label_00C6:  				num2 = stream5.Read (buffer' 0' buffer.Length);  				if ((((uint)num) | uint.MaxValue) != 0) {  					goto Label_0089;  				}  				Label_00ED:  				stream4.Write (buffer' 0' num2);  				num3 += num2;  				Label_00FE:  				if (((uint)num) <= uint.MaxValue) {  					goto Label_008F;  				}  				goto Label_007F;  			}  		}  		Label_0134:  		info.Delete ();  		return;  	}  	goto Label_0167;  	Label_014D:  	if (xf50d6d3c10c0eac9.ToString ().ToLower ().EndsWith (".gz")) {  		goto Label_0020;  	}  	Label_0167:  	xb44380e048627945.Delete ();  	info.MoveTo (xb44380e048627945.ToString ());  	return;  	Label_017E:  	if (num2 > 0) {  		goto Label_0213;  	}  	Label_0185:  	if (num2 > 0) {  		goto Label_0219;  	}  	stream.Close ();  	goto Label_022D;  	Label_0194:  	this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Downloading... " + Format.FormatMemory ((long)num3));  	if (3 == 0) {  		goto Label_02A2;  	}  	num = 0;  	Label_01C4:  	num++;  	goto Label_0185;  	Label_01CA:  	if ((((uint)num3) | 8) == 0) {  		goto Label_0213;  	}  	Label_01E2:  	if (num <= 10) {  		goto Label_01C4;  	}  	goto Label_0194;  	Label_01EB:  	stream.Write (buffer' 0' num2);  	num3 += num2;  	if (((uint)num) >= 0) {  		goto Label_01CA;  	}  	if (0 != 0) {  		goto Label_0299;  	}  	Label_0213:  	if (num2 >= 0) {  		goto Label_01EB;  	}  	goto Label_01E2;  	Label_0219:  	num2 = responseStream.Read (buffer' 0' buffer.Length);  	goto Label_017E;  	Label_022D:  	if ((((uint)num2) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_000B;  	}  	return;  	Label_024A:  	num3 = 0;  	buffer = new byte[BotUtil.BufferSize];  	WebRequest request = WebRequest.Create (xf50d6d3c10c0eac9);  	if (0 != 0) {  		goto Label_0299;  	}  	responseStream = ((HttpWebResponse)request.GetResponse ()).GetResponseStream ();  	goto Label_0219;  	Label_027D:  	info = FileUtil.CombinePath (new FileInfo (xb44380e048627945.DirectoryName)' "temp.tmp");  	info.Delete ();  	Label_0299:  	stream = info.OpenWrite ();  	num = 0;  	Label_02A2:  	num2 = 0;  	goto Label_024A;  }  catch (IOException exception) {  	throw new AnalystError (exception);  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: try {  	FileInfo info;  	FileStream stream;  	int num;  	int num2;  	int num3;  	byte[] buffer;  	Stream responseStream;  	xb44380e048627945.Delete ();  	goto Label_027D;  	Label_000B:  	if (((uint)num) >= 0) {  		goto Label_014D;  	}  	Label_0020:  	using (FileStream stream3 = info.OpenRead ()) {  		using (FileStream stream4 = xb44380e048627945.Create ()) {  			using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  				num3 = 0;  				goto Label_00C4;  				Label_0042:  				num = 0;  				Label_0044:  				num++;  				if (num2 > 0) {  					goto Label_00C6;  				}  				goto Label_0134;  				Label_0054:  				if (num <= 10) {  					goto Label_0044;  				}  				Label_0059:  				this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  				goto Label_0042;  				Label_007F:  				if (-1 == 0) {  					goto Label_00FE;  				}  				Label_0089:  				if (num2 >= 0) {  					goto Label_00ED;  				}  				goto Label_0054;  				Label_008F:  				if ((((uint)num) & 0) != 0) {  					goto Label_0089;  				}  				if ((((uint)num3) | 0xfffffffe) == 0) {  					goto Label_0059;  				}  				goto Label_0054;  				Label_00C4:  				num = 0;  				Label_00C6:  				num2 = stream5.Read (buffer' 0' buffer.Length);  				if ((((uint)num) | uint.MaxValue) != 0) {  					goto Label_0089;  				}  				Label_00ED:  				stream4.Write (buffer' 0' num2);  				num3 += num2;  				Label_00FE:  				if (((uint)num) <= uint.MaxValue) {  					goto Label_008F;  				}  				goto Label_007F;  			}  		}  		Label_0134:  		info.Delete ();  		return;  	}  	goto Label_0167;  	Label_014D:  	if (xf50d6d3c10c0eac9.ToString ().ToLower ().EndsWith (".gz")) {  		goto Label_0020;  	}  	Label_0167:  	xb44380e048627945.Delete ();  	info.MoveTo (xb44380e048627945.ToString ());  	return;  	Label_017E:  	if (num2 > 0) {  		goto Label_0213;  	}  	Label_0185:  	if (num2 > 0) {  		goto Label_0219;  	}  	stream.Close ();  	goto Label_022D;  	Label_0194:  	this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Downloading... " + Format.FormatMemory ((long)num3));  	if (3 == 0) {  		goto Label_02A2;  	}  	num = 0;  	Label_01C4:  	num++;  	goto Label_0185;  	Label_01CA:  	if ((((uint)num3) | 8) == 0) {  		goto Label_0213;  	}  	Label_01E2:  	if (num <= 10) {  		goto Label_01C4;  	}  	goto Label_0194;  	Label_01EB:  	stream.Write (buffer' 0' num2);  	num3 += num2;  	if (((uint)num) >= 0) {  		goto Label_01CA;  	}  	if (0 != 0) {  		goto Label_0299;  	}  	Label_0213:  	if (num2 >= 0) {  		goto Label_01EB;  	}  	goto Label_01E2;  	Label_0219:  	num2 = responseStream.Read (buffer' 0' buffer.Length);  	goto Label_017E;  	Label_022D:  	if ((((uint)num2) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_000B;  	}  	return;  	Label_024A:  	num3 = 0;  	buffer = new byte[BotUtil.BufferSize];  	WebRequest request = WebRequest.Create (xf50d6d3c10c0eac9);  	if (0 != 0) {  		goto Label_0299;  	}  	responseStream = ((HttpWebResponse)request.GetResponse ()).GetResponseStream ();  	goto Label_0219;  	Label_027D:  	info = FileUtil.CombinePath (new FileInfo (xb44380e048627945.DirectoryName)' "temp.tmp");  	info.Delete ();  	Label_0299:  	stream = info.OpenWrite ();  	num = 0;  	Label_02A2:  	num2 = 0;  	goto Label_024A;  }  catch (IOException exception) {  	throw new AnalystError (exception);  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: try {  	FileInfo info;  	FileStream stream;  	int num;  	int num2;  	int num3;  	byte[] buffer;  	Stream responseStream;  	xb44380e048627945.Delete ();  	goto Label_027D;  	Label_000B:  	if (((uint)num) >= 0) {  		goto Label_014D;  	}  	Label_0020:  	using (FileStream stream3 = info.OpenRead ()) {  		using (FileStream stream4 = xb44380e048627945.Create ()) {  			using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  				num3 = 0;  				goto Label_00C4;  				Label_0042:  				num = 0;  				Label_0044:  				num++;  				if (num2 > 0) {  					goto Label_00C6;  				}  				goto Label_0134;  				Label_0054:  				if (num <= 10) {  					goto Label_0044;  				}  				Label_0059:  				this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  				goto Label_0042;  				Label_007F:  				if (-1 == 0) {  					goto Label_00FE;  				}  				Label_0089:  				if (num2 >= 0) {  					goto Label_00ED;  				}  				goto Label_0054;  				Label_008F:  				if ((((uint)num) & 0) != 0) {  					goto Label_0089;  				}  				if ((((uint)num3) | 0xfffffffe) == 0) {  					goto Label_0059;  				}  				goto Label_0054;  				Label_00C4:  				num = 0;  				Label_00C6:  				num2 = stream5.Read (buffer' 0' buffer.Length);  				if ((((uint)num) | uint.MaxValue) != 0) {  					goto Label_0089;  				}  				Label_00ED:  				stream4.Write (buffer' 0' num2);  				num3 += num2;  				Label_00FE:  				if (((uint)num) <= uint.MaxValue) {  					goto Label_008F;  				}  				goto Label_007F;  			}  		}  		Label_0134:  		info.Delete ();  		return;  	}  	goto Label_0167;  	Label_014D:  	if (xf50d6d3c10c0eac9.ToString ().ToLower ().EndsWith (".gz")) {  		goto Label_0020;  	}  	Label_0167:  	xb44380e048627945.Delete ();  	info.MoveTo (xb44380e048627945.ToString ());  	return;  	Label_017E:  	if (num2 > 0) {  		goto Label_0213;  	}  	Label_0185:  	if (num2 > 0) {  		goto Label_0219;  	}  	stream.Close ();  	goto Label_022D;  	Label_0194:  	this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Downloading... " + Format.FormatMemory ((long)num3));  	if (3 == 0) {  		goto Label_02A2;  	}  	num = 0;  	Label_01C4:  	num++;  	goto Label_0185;  	Label_01CA:  	if ((((uint)num3) | 8) == 0) {  		goto Label_0213;  	}  	Label_01E2:  	if (num <= 10) {  		goto Label_01C4;  	}  	goto Label_0194;  	Label_01EB:  	stream.Write (buffer' 0' num2);  	num3 += num2;  	if (((uint)num) >= 0) {  		goto Label_01CA;  	}  	if (0 != 0) {  		goto Label_0299;  	}  	Label_0213:  	if (num2 >= 0) {  		goto Label_01EB;  	}  	goto Label_01E2;  	Label_0219:  	num2 = responseStream.Read (buffer' 0' buffer.Length);  	goto Label_017E;  	Label_022D:  	if ((((uint)num2) - ((uint)num3)) <= uint.MaxValue) {  		goto Label_000B;  	}  	return;  	Label_024A:  	num3 = 0;  	buffer = new byte[BotUtil.BufferSize];  	WebRequest request = WebRequest.Create (xf50d6d3c10c0eac9);  	if (0 != 0) {  		goto Label_0299;  	}  	responseStream = ((HttpWebResponse)request.GetResponse ()).GetResponseStream ();  	goto Label_0219;  	Label_027D:  	info = FileUtil.CombinePath (new FileInfo (xb44380e048627945.DirectoryName)' "temp.tmp");  	info.Delete ();  	Label_0299:  	stream = info.OpenWrite ();  	num = 0;  	Label_02A2:  	num2 = 0;  	goto Label_024A;  }  catch (IOException exception) {  	throw new AnalystError (exception);  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: using (FileStream stream3 = info.OpenRead ()) {  	using (FileStream stream4 = xb44380e048627945.Create ()) {  		using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  			num3 = 0;  			goto Label_00C4;  			Label_0042:  			num = 0;  			Label_0044:  			num++;  			if (num2 > 0) {  				goto Label_00C6;  			}  			goto Label_0134;  			Label_0054:  			if (num <= 10) {  				goto Label_0044;  			}  			Label_0059:  			this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  			goto Label_0042;  			Label_007F:  			if (-1 == 0) {  				goto Label_00FE;  			}  			Label_0089:  			if (num2 >= 0) {  				goto Label_00ED;  			}  			goto Label_0054;  			Label_008F:  			if ((((uint)num) & 0) != 0) {  				goto Label_0089;  			}  			if ((((uint)num3) | 0xfffffffe) == 0) {  				goto Label_0059;  			}  			goto Label_0054;  			Label_00C4:  			num = 0;  			Label_00C6:  			num2 = stream5.Read (buffer' 0' buffer.Length);  			if ((((uint)num) | uint.MaxValue) != 0) {  				goto Label_0089;  			}  			Label_00ED:  			stream4.Write (buffer' 0' num2);  			num3 += num2;  			Label_00FE:  			if (((uint)num) <= uint.MaxValue) {  				goto Label_008F;  			}  			goto Label_007F;  		}  	}  	Label_0134:  	info.Delete ();  	return;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: using (FileStream stream4 = xb44380e048627945.Create ()) {  	using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  		num3 = 0;  		goto Label_00C4;  		Label_0042:  		num = 0;  		Label_0044:  		num++;  		if (num2 > 0) {  			goto Label_00C6;  		}  		goto Label_0134;  		Label_0054:  		if (num <= 10) {  			goto Label_0044;  		}  		Label_0059:  		this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  		goto Label_0042;  		Label_007F:  		if (-1 == 0) {  			goto Label_00FE;  		}  		Label_0089:  		if (num2 >= 0) {  			goto Label_00ED;  		}  		goto Label_0054;  		Label_008F:  		if ((((uint)num) & 0) != 0) {  			goto Label_0089;  		}  		if ((((uint)num3) | 0xfffffffe) == 0) {  			goto Label_0059;  		}  		goto Label_0054;  		Label_00C4:  		num = 0;  		Label_00C6:  		num2 = stream5.Read (buffer' 0' buffer.Length);  		if ((((uint)num) | uint.MaxValue) != 0) {  			goto Label_0089;  		}  		Label_00ED:  		stream4.Write (buffer' 0' num2);  		num3 += num2;  		Label_00FE:  		if (((uint)num) <= uint.MaxValue) {  			goto Label_008F;  		}  		goto Label_007F;  	}  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: using (GZipStream stream5 = new GZipStream (stream3' CompressionMode.Decompress)) {  	num3 = 0;  	goto Label_00C4;  	Label_0042:  	num = 0;  	Label_0044:  	num++;  	if (num2 > 0) {  		goto Label_00C6;  	}  	goto Label_0134;  	Label_0054:  	if (num <= 10) {  		goto Label_0044;  	}  	Label_0059:  	this.x5d9a63140eb6b015 (0' (int)(((long)num3) / 0x100000L)' "Uncompressing... " + Format.FormatMemory ((long)num3));  	goto Label_0042;  	Label_007F:  	if (-1 == 0) {  		goto Label_00FE;  	}  	Label_0089:  	if (num2 >= 0) {  		goto Label_00ED;  	}  	goto Label_0054;  	Label_008F:  	if ((((uint)num) & 0) != 0) {  		goto Label_0089;  	}  	if ((((uint)num3) | 0xfffffffe) == 0) {  		goto Label_0059;  	}  	goto Label_0054;  	Label_00C4:  	num = 0;  	Label_00C6:  	num2 = stream5.Read (buffer' 0' buffer.Length);  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0089;  	}  	Label_00ED:  	stream4.Write (buffer' 0' num2);  	num3 += num2;  	Label_00FE:  	if (((uint)num) <= uint.MaxValue) {  		goto Label_008F;  	}  	goto Label_007F;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: if (num <= 10) {  	goto Label_0044;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: if (3 == 0) {  	goto Label_02A2;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: if ((((uint)num3) | 8) == 0) {  	goto Label_0213;  }  
Magic Number,Encog.App.Analyst,EncogAnalyst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\EncogAnalyst.cs,xe98b6cac0003bda6,The following statement contains a magic number: if (num <= 10) {  	goto Label_01C4;  }  
Magic Number,Encog.App.Analyst,ConsoleAnalystListener,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\ConsoleAnalystListener.cs,ReportCommandEnd,The following statement contains a magic number: if (1 == 0) {  	if ((((uint)cancel) | 8) == 0) {  		goto Label_000B;  	}  	goto Label_0030;  }  
Magic Number,Encog.App.Analyst,ConsoleAnalystListener,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\ConsoleAnalystListener.cs,ReportCommandEnd,The following statement contains a magic number: if ((((uint)cancel) | 8) == 0) {  	goto Label_000B;  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,The following statement contains a magic number: if ((0 == 0) && "encog".Equals (strArray [0])) {  	IEncogPersistor persistor;  	if (4 != 0) {  		do {  			str2 = strArray [1];  			persistor = PersistorRegistry.Instance.GetPersistor (str2);  			if (0x7fffffff == 0) {  				goto Label_002E;  			}  		}  		while (0 != 0);  		if (persistor == null) {  			goto Label_002E;  		}  		if (persistor.FileVersion < int.Parse (strArray [4])) {  			throw new PersistError ("The file you are trying to read is from a later version of Encog.  Please upgrade Encog to read this file.");  		}  	}  	else if (0 == 0) {  		goto Label_002E;  	}  	return persistor.Read (mask0);  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,The following statement contains a magic number: if ((0 == 0) && "encog".Equals (strArray [0])) {  	IEncogPersistor persistor;  	if (4 != 0) {  		do {  			str2 = strArray [1];  			persistor = PersistorRegistry.Instance.GetPersistor (str2);  			if (0x7fffffff == 0) {  				goto Label_002E;  			}  		}  		while (0 != 0);  		if (persistor == null) {  			goto Label_002E;  		}  		if (persistor.FileVersion < int.Parse (strArray [4])) {  			throw new PersistError ("The file you are trying to read is from a later version of Encog.  Please upgrade Encog to read this file.");  		}  	}  	else if (0 == 0) {  		goto Label_002E;  	}  	return persistor.Read (mask0);  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,The following statement contains a magic number: if (4 != 0) {  	do {  		str2 = strArray [1];  		persistor = PersistorRegistry.Instance.GetPersistor (str2);  		if (0x7fffffff == 0) {  			goto Label_002E;  		}  	}  	while (0 != 0);  	if (persistor == null) {  		goto Label_002E;  	}  	if (persistor.FileVersion < int.Parse (strArray [4])) {  		throw new PersistError ("The file you are trying to read is from a later version of Encog.  Please upgrade Encog to read this file.");  	}  }  else if (0 == 0) {  	goto Label_002E;  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,The following statement contains a magic number: if (4 != 0) {  	do {  		str2 = strArray [1];  		persistor = PersistorRegistry.Instance.GetPersistor (str2);  		if (0x7fffffff == 0) {  			goto Label_002E;  		}  	}  	while (0 != 0);  	if (persistor == null) {  		goto Label_002E;  	}  	if (persistor.FileVersion < int.Parse (strArray [4])) {  		throw new PersistError ("The file you are trying to read is from a later version of Encog.  Please upgrade Encog to read this file.");  	}  }  else if (0 == 0) {  	goto Label_002E;  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,LoadObject,The following statement contains a magic number: if (persistor.FileVersion < int.Parse (strArray [4])) {  	throw new PersistError ("The file you are trying to read is from a later version of Encog.  Please upgrade Encog to read this file.");  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,SaveObject,The following statement contains a magic number: try {  	StreamWriter writer;  	IEncogPersistor persistor = PersistorRegistry.Instance.GetPersistor (obj.GetType ());  	goto Label_00B7;  	Label_0016:  	if (-2147483648 == 0) {  		goto Label_0030;  	}  	persistor.Save (os' obj);  	return;  	Label_002A:  	os.Flush ();  	Label_0030:  	writer = new StreamWriter (os);  	DateTime now = DateTime.Now;  	writer.WriteLine (string.Concat (new object[] {  		"encog'"'  		persistor.PersistClassString'  		"'java'"'  		EncogFramework.Version'  		"'"'  		persistor.FileVersion'  		"'"'  		now.Ticks / 0x2710L  	}));  	writer.Flush ();  	goto Label_0016;  	Label_00B7:  	if (persistor == null) {  		throw new PersistError ("Do not know how to persist object: " + obj.GetType ().Name);  	}  	goto Label_002A;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogDirectoryPersistence,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogDirectoryPersistence.cs,SaveObject,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0030;  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: try {  	string str;  	string str3;  	int index;  	string str4;  	string str5;  	goto Label_0107;  	Label_0005:  	return this.xb32f8dd719a105db;  	Label_0012:  	this.x0fda809a7e14c39d = "";  	this.x0f7286e9d651365c = "";  	goto Label_00B5;  	Label_002F:  	if (this.x0fda809a7e14c39d.Length == 0) {  		goto Label_00CC;  	}  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	foreach (string str6 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str6);  	}  	goto Label_0012;  	Label_00B5:  	if (0 == 0) {  		goto Label_0005;  	}  	return section;  	Label_00CC:  	section = null;  	goto Label_0370;  	Label_00D1:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Unknown command before first section: " + str);  	}  	Label_00F0:  	this.x0383ec486664fa18.Add (str);  	goto Label_0107;  	Label_00FE:  	if (str.Length >= 1) {  		goto Label_00D1;  	}  	Label_0107:  	if ((str = this.xe134235b3526fa75.ReadLine ()) != null) {  		goto Label_0328;  	}  	if (8 != 0) {  		goto Label_002F;  	}  	goto Label_0370;  	Label_0125:  	if (str.StartsWith ("[")) {  		goto Label_034A;  	}  	goto Label_00FE;  	Label_0139:  	throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d);  	Label_0157:  	if (!str4.Equals (this.x0fda809a7e14c39d)) {  		goto Label_0139;  	}  	Label_0166:  	this.x0f7286e9d651365c = str5;  	Label_016E:  	return this.xb32f8dd719a105db;  	Label_017D:  	if (1 == 0) {  		goto Label_0166;  	}  	if (15 != 0) {  		goto Label_0157;  	}  	goto Label_0139;  	Label_018F:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Can't begin subsection when a section has not yet been defined: " + str);  	}  	str4 = str3.Substring (0' index);  	str5 = str3.Substring (index + 1);  	goto Label_01D7;  	Label_01B4:  	if (index == -1) {  		goto Label_01FE;  	}  	if (3 == 0) {  		goto Label_0259;  	}  	goto Label_018F;  	Label_01D7:  	if ((((uint)index) + ((uint)index)) >= 0) {  		goto Label_017D;  	}  	if (0 == 0) {  		goto Label_0125;  	}  	goto Label_0215;  	Label_01FE:  	this.x0fda809a7e14c39d = str3;  	this.x0f7286e9d651365c = "";  	goto Label_016E;  	Label_0215:  	if (((uint)index) <= uint.MaxValue) {  		goto Label_00D1;  	}  	goto Label_0370;  	Label_022C:  	if (!str3.EndsWith ("]")) {  		goto Label_0278;  	}  	goto Label_0259;  	if ((((uint)index) & 0) != 0) {  		goto Label_022C;  	}  	if (8 == 0) {  		goto Label_0335;  	}  	Label_0259:  	str3 = str3.Substring (0' str.Length - 2);  	index = str3.IndexOf (':');  	goto Label_028B;  	Label_0278:  	throw new PersistError ("Invalid section: " + str);  	Label_028B:  	if (-1 != 0) {  		goto Label_01B4;  	}  	goto Label_0370;  	Label_029A:  	if ((((uint)index) | 2) != 0) {  		goto Label_022C;  	}  	if (((uint)index) < 0) {  		goto Label_018F;  	}  	goto Label_0278;  	Label_02CF:  	foreach (string str2 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str2);  	}  	this.x0383ec486664fa18.Clear ();  	str3 = str.Substring (1).Trim ();  	goto Label_029A;  	Label_0328:  	str = str.Trim ();  	if (0 != 0) {  		goto Label_00F0;  	}  	Label_0335:  	if (str.StartsWith ("//")) {  		goto Label_0107;  	}  	goto Label_0125;  	Label_034A:  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	goto Label_02CF;  	Label_0370:  	if ((((uint)index) & 0) == 0) {  		return section;  	}  	goto Label_0005;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: try {  	string str;  	string str3;  	int index;  	string str4;  	string str5;  	goto Label_0107;  	Label_0005:  	return this.xb32f8dd719a105db;  	Label_0012:  	this.x0fda809a7e14c39d = "";  	this.x0f7286e9d651365c = "";  	goto Label_00B5;  	Label_002F:  	if (this.x0fda809a7e14c39d.Length == 0) {  		goto Label_00CC;  	}  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	foreach (string str6 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str6);  	}  	goto Label_0012;  	Label_00B5:  	if (0 == 0) {  		goto Label_0005;  	}  	return section;  	Label_00CC:  	section = null;  	goto Label_0370;  	Label_00D1:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Unknown command before first section: " + str);  	}  	Label_00F0:  	this.x0383ec486664fa18.Add (str);  	goto Label_0107;  	Label_00FE:  	if (str.Length >= 1) {  		goto Label_00D1;  	}  	Label_0107:  	if ((str = this.xe134235b3526fa75.ReadLine ()) != null) {  		goto Label_0328;  	}  	if (8 != 0) {  		goto Label_002F;  	}  	goto Label_0370;  	Label_0125:  	if (str.StartsWith ("[")) {  		goto Label_034A;  	}  	goto Label_00FE;  	Label_0139:  	throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d);  	Label_0157:  	if (!str4.Equals (this.x0fda809a7e14c39d)) {  		goto Label_0139;  	}  	Label_0166:  	this.x0f7286e9d651365c = str5;  	Label_016E:  	return this.xb32f8dd719a105db;  	Label_017D:  	if (1 == 0) {  		goto Label_0166;  	}  	if (15 != 0) {  		goto Label_0157;  	}  	goto Label_0139;  	Label_018F:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Can't begin subsection when a section has not yet been defined: " + str);  	}  	str4 = str3.Substring (0' index);  	str5 = str3.Substring (index + 1);  	goto Label_01D7;  	Label_01B4:  	if (index == -1) {  		goto Label_01FE;  	}  	if (3 == 0) {  		goto Label_0259;  	}  	goto Label_018F;  	Label_01D7:  	if ((((uint)index) + ((uint)index)) >= 0) {  		goto Label_017D;  	}  	if (0 == 0) {  		goto Label_0125;  	}  	goto Label_0215;  	Label_01FE:  	this.x0fda809a7e14c39d = str3;  	this.x0f7286e9d651365c = "";  	goto Label_016E;  	Label_0215:  	if (((uint)index) <= uint.MaxValue) {  		goto Label_00D1;  	}  	goto Label_0370;  	Label_022C:  	if (!str3.EndsWith ("]")) {  		goto Label_0278;  	}  	goto Label_0259;  	if ((((uint)index) & 0) != 0) {  		goto Label_022C;  	}  	if (8 == 0) {  		goto Label_0335;  	}  	Label_0259:  	str3 = str3.Substring (0' str.Length - 2);  	index = str3.IndexOf (':');  	goto Label_028B;  	Label_0278:  	throw new PersistError ("Invalid section: " + str);  	Label_028B:  	if (-1 != 0) {  		goto Label_01B4;  	}  	goto Label_0370;  	Label_029A:  	if ((((uint)index) | 2) != 0) {  		goto Label_022C;  	}  	if (((uint)index) < 0) {  		goto Label_018F;  	}  	goto Label_0278;  	Label_02CF:  	foreach (string str2 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str2);  	}  	this.x0383ec486664fa18.Clear ();  	str3 = str.Substring (1).Trim ();  	goto Label_029A;  	Label_0328:  	str = str.Trim ();  	if (0 != 0) {  		goto Label_00F0;  	}  	Label_0335:  	if (str.StartsWith ("//")) {  		goto Label_0107;  	}  	goto Label_0125;  	Label_034A:  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	goto Label_02CF;  	Label_0370:  	if ((((uint)index) & 0) == 0) {  		return section;  	}  	goto Label_0005;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: try {  	string str;  	string str3;  	int index;  	string str4;  	string str5;  	goto Label_0107;  	Label_0005:  	return this.xb32f8dd719a105db;  	Label_0012:  	this.x0fda809a7e14c39d = "";  	this.x0f7286e9d651365c = "";  	goto Label_00B5;  	Label_002F:  	if (this.x0fda809a7e14c39d.Length == 0) {  		goto Label_00CC;  	}  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	foreach (string str6 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str6);  	}  	goto Label_0012;  	Label_00B5:  	if (0 == 0) {  		goto Label_0005;  	}  	return section;  	Label_00CC:  	section = null;  	goto Label_0370;  	Label_00D1:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Unknown command before first section: " + str);  	}  	Label_00F0:  	this.x0383ec486664fa18.Add (str);  	goto Label_0107;  	Label_00FE:  	if (str.Length >= 1) {  		goto Label_00D1;  	}  	Label_0107:  	if ((str = this.xe134235b3526fa75.ReadLine ()) != null) {  		goto Label_0328;  	}  	if (8 != 0) {  		goto Label_002F;  	}  	goto Label_0370;  	Label_0125:  	if (str.StartsWith ("[")) {  		goto Label_034A;  	}  	goto Label_00FE;  	Label_0139:  	throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d);  	Label_0157:  	if (!str4.Equals (this.x0fda809a7e14c39d)) {  		goto Label_0139;  	}  	Label_0166:  	this.x0f7286e9d651365c = str5;  	Label_016E:  	return this.xb32f8dd719a105db;  	Label_017D:  	if (1 == 0) {  		goto Label_0166;  	}  	if (15 != 0) {  		goto Label_0157;  	}  	goto Label_0139;  	Label_018F:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Can't begin subsection when a section has not yet been defined: " + str);  	}  	str4 = str3.Substring (0' index);  	str5 = str3.Substring (index + 1);  	goto Label_01D7;  	Label_01B4:  	if (index == -1) {  		goto Label_01FE;  	}  	if (3 == 0) {  		goto Label_0259;  	}  	goto Label_018F;  	Label_01D7:  	if ((((uint)index) + ((uint)index)) >= 0) {  		goto Label_017D;  	}  	if (0 == 0) {  		goto Label_0125;  	}  	goto Label_0215;  	Label_01FE:  	this.x0fda809a7e14c39d = str3;  	this.x0f7286e9d651365c = "";  	goto Label_016E;  	Label_0215:  	if (((uint)index) <= uint.MaxValue) {  		goto Label_00D1;  	}  	goto Label_0370;  	Label_022C:  	if (!str3.EndsWith ("]")) {  		goto Label_0278;  	}  	goto Label_0259;  	if ((((uint)index) & 0) != 0) {  		goto Label_022C;  	}  	if (8 == 0) {  		goto Label_0335;  	}  	Label_0259:  	str3 = str3.Substring (0' str.Length - 2);  	index = str3.IndexOf (':');  	goto Label_028B;  	Label_0278:  	throw new PersistError ("Invalid section: " + str);  	Label_028B:  	if (-1 != 0) {  		goto Label_01B4;  	}  	goto Label_0370;  	Label_029A:  	if ((((uint)index) | 2) != 0) {  		goto Label_022C;  	}  	if (((uint)index) < 0) {  		goto Label_018F;  	}  	goto Label_0278;  	Label_02CF:  	foreach (string str2 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str2);  	}  	this.x0383ec486664fa18.Clear ();  	str3 = str.Substring (1).Trim ();  	goto Label_029A;  	Label_0328:  	str = str.Trim ();  	if (0 != 0) {  		goto Label_00F0;  	}  	Label_0335:  	if (str.StartsWith ("//")) {  		goto Label_0107;  	}  	goto Label_0125;  	Label_034A:  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	goto Label_02CF;  	Label_0370:  	if ((((uint)index) & 0) == 0) {  		return section;  	}  	goto Label_0005;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: try {  	string str;  	string str3;  	int index;  	string str4;  	string str5;  	goto Label_0107;  	Label_0005:  	return this.xb32f8dd719a105db;  	Label_0012:  	this.x0fda809a7e14c39d = "";  	this.x0f7286e9d651365c = "";  	goto Label_00B5;  	Label_002F:  	if (this.x0fda809a7e14c39d.Length == 0) {  		goto Label_00CC;  	}  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	foreach (string str6 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str6);  	}  	goto Label_0012;  	Label_00B5:  	if (0 == 0) {  		goto Label_0005;  	}  	return section;  	Label_00CC:  	section = null;  	goto Label_0370;  	Label_00D1:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Unknown command before first section: " + str);  	}  	Label_00F0:  	this.x0383ec486664fa18.Add (str);  	goto Label_0107;  	Label_00FE:  	if (str.Length >= 1) {  		goto Label_00D1;  	}  	Label_0107:  	if ((str = this.xe134235b3526fa75.ReadLine ()) != null) {  		goto Label_0328;  	}  	if (8 != 0) {  		goto Label_002F;  	}  	goto Label_0370;  	Label_0125:  	if (str.StartsWith ("[")) {  		goto Label_034A;  	}  	goto Label_00FE;  	Label_0139:  	throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d);  	Label_0157:  	if (!str4.Equals (this.x0fda809a7e14c39d)) {  		goto Label_0139;  	}  	Label_0166:  	this.x0f7286e9d651365c = str5;  	Label_016E:  	return this.xb32f8dd719a105db;  	Label_017D:  	if (1 == 0) {  		goto Label_0166;  	}  	if (15 != 0) {  		goto Label_0157;  	}  	goto Label_0139;  	Label_018F:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Can't begin subsection when a section has not yet been defined: " + str);  	}  	str4 = str3.Substring (0' index);  	str5 = str3.Substring (index + 1);  	goto Label_01D7;  	Label_01B4:  	if (index == -1) {  		goto Label_01FE;  	}  	if (3 == 0) {  		goto Label_0259;  	}  	goto Label_018F;  	Label_01D7:  	if ((((uint)index) + ((uint)index)) >= 0) {  		goto Label_017D;  	}  	if (0 == 0) {  		goto Label_0125;  	}  	goto Label_0215;  	Label_01FE:  	this.x0fda809a7e14c39d = str3;  	this.x0f7286e9d651365c = "";  	goto Label_016E;  	Label_0215:  	if (((uint)index) <= uint.MaxValue) {  		goto Label_00D1;  	}  	goto Label_0370;  	Label_022C:  	if (!str3.EndsWith ("]")) {  		goto Label_0278;  	}  	goto Label_0259;  	if ((((uint)index) & 0) != 0) {  		goto Label_022C;  	}  	if (8 == 0) {  		goto Label_0335;  	}  	Label_0259:  	str3 = str3.Substring (0' str.Length - 2);  	index = str3.IndexOf (':');  	goto Label_028B;  	Label_0278:  	throw new PersistError ("Invalid section: " + str);  	Label_028B:  	if (-1 != 0) {  		goto Label_01B4;  	}  	goto Label_0370;  	Label_029A:  	if ((((uint)index) | 2) != 0) {  		goto Label_022C;  	}  	if (((uint)index) < 0) {  		goto Label_018F;  	}  	goto Label_0278;  	Label_02CF:  	foreach (string str2 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str2);  	}  	this.x0383ec486664fa18.Clear ();  	str3 = str.Substring (1).Trim ();  	goto Label_029A;  	Label_0328:  	str = str.Trim ();  	if (0 != 0) {  		goto Label_00F0;  	}  	Label_0335:  	if (str.StartsWith ("//")) {  		goto Label_0107;  	}  	goto Label_0125;  	Label_034A:  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	goto Label_02CF;  	Label_0370:  	if ((((uint)index) & 0) == 0) {  		return section;  	}  	goto Label_0005;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: try {  	string str;  	string str3;  	int index;  	string str4;  	string str5;  	goto Label_0107;  	Label_0005:  	return this.xb32f8dd719a105db;  	Label_0012:  	this.x0fda809a7e14c39d = "";  	this.x0f7286e9d651365c = "";  	goto Label_00B5;  	Label_002F:  	if (this.x0fda809a7e14c39d.Length == 0) {  		goto Label_00CC;  	}  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	foreach (string str6 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str6);  	}  	goto Label_0012;  	Label_00B5:  	if (0 == 0) {  		goto Label_0005;  	}  	return section;  	Label_00CC:  	section = null;  	goto Label_0370;  	Label_00D1:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Unknown command before first section: " + str);  	}  	Label_00F0:  	this.x0383ec486664fa18.Add (str);  	goto Label_0107;  	Label_00FE:  	if (str.Length >= 1) {  		goto Label_00D1;  	}  	Label_0107:  	if ((str = this.xe134235b3526fa75.ReadLine ()) != null) {  		goto Label_0328;  	}  	if (8 != 0) {  		goto Label_002F;  	}  	goto Label_0370;  	Label_0125:  	if (str.StartsWith ("[")) {  		goto Label_034A;  	}  	goto Label_00FE;  	Label_0139:  	throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d);  	Label_0157:  	if (!str4.Equals (this.x0fda809a7e14c39d)) {  		goto Label_0139;  	}  	Label_0166:  	this.x0f7286e9d651365c = str5;  	Label_016E:  	return this.xb32f8dd719a105db;  	Label_017D:  	if (1 == 0) {  		goto Label_0166;  	}  	if (15 != 0) {  		goto Label_0157;  	}  	goto Label_0139;  	Label_018F:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Can't begin subsection when a section has not yet been defined: " + str);  	}  	str4 = str3.Substring (0' index);  	str5 = str3.Substring (index + 1);  	goto Label_01D7;  	Label_01B4:  	if (index == -1) {  		goto Label_01FE;  	}  	if (3 == 0) {  		goto Label_0259;  	}  	goto Label_018F;  	Label_01D7:  	if ((((uint)index) + ((uint)index)) >= 0) {  		goto Label_017D;  	}  	if (0 == 0) {  		goto Label_0125;  	}  	goto Label_0215;  	Label_01FE:  	this.x0fda809a7e14c39d = str3;  	this.x0f7286e9d651365c = "";  	goto Label_016E;  	Label_0215:  	if (((uint)index) <= uint.MaxValue) {  		goto Label_00D1;  	}  	goto Label_0370;  	Label_022C:  	if (!str3.EndsWith ("]")) {  		goto Label_0278;  	}  	goto Label_0259;  	if ((((uint)index) & 0) != 0) {  		goto Label_022C;  	}  	if (8 == 0) {  		goto Label_0335;  	}  	Label_0259:  	str3 = str3.Substring (0' str.Length - 2);  	index = str3.IndexOf (':');  	goto Label_028B;  	Label_0278:  	throw new PersistError ("Invalid section: " + str);  	Label_028B:  	if (-1 != 0) {  		goto Label_01B4;  	}  	goto Label_0370;  	Label_029A:  	if ((((uint)index) | 2) != 0) {  		goto Label_022C;  	}  	if (((uint)index) < 0) {  		goto Label_018F;  	}  	goto Label_0278;  	Label_02CF:  	foreach (string str2 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str2);  	}  	this.x0383ec486664fa18.Clear ();  	str3 = str.Substring (1).Trim ();  	goto Label_029A;  	Label_0328:  	str = str.Trim ();  	if (0 != 0) {  		goto Label_00F0;  	}  	Label_0335:  	if (str.StartsWith ("//")) {  		goto Label_0107;  	}  	goto Label_0125;  	Label_034A:  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	goto Label_02CF;  	Label_0370:  	if ((((uint)index) & 0) == 0) {  		return section;  	}  	goto Label_0005;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: try {  	string str;  	string str3;  	int index;  	string str4;  	string str5;  	goto Label_0107;  	Label_0005:  	return this.xb32f8dd719a105db;  	Label_0012:  	this.x0fda809a7e14c39d = "";  	this.x0f7286e9d651365c = "";  	goto Label_00B5;  	Label_002F:  	if (this.x0fda809a7e14c39d.Length == 0) {  		goto Label_00CC;  	}  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	foreach (string str6 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str6);  	}  	goto Label_0012;  	Label_00B5:  	if (0 == 0) {  		goto Label_0005;  	}  	return section;  	Label_00CC:  	section = null;  	goto Label_0370;  	Label_00D1:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Unknown command before first section: " + str);  	}  	Label_00F0:  	this.x0383ec486664fa18.Add (str);  	goto Label_0107;  	Label_00FE:  	if (str.Length >= 1) {  		goto Label_00D1;  	}  	Label_0107:  	if ((str = this.xe134235b3526fa75.ReadLine ()) != null) {  		goto Label_0328;  	}  	if (8 != 0) {  		goto Label_002F;  	}  	goto Label_0370;  	Label_0125:  	if (str.StartsWith ("[")) {  		goto Label_034A;  	}  	goto Label_00FE;  	Label_0139:  	throw new PersistError ("Can't begin subsection " + str + "' while we are still in the section: " + this.x0fda809a7e14c39d);  	Label_0157:  	if (!str4.Equals (this.x0fda809a7e14c39d)) {  		goto Label_0139;  	}  	Label_0166:  	this.x0f7286e9d651365c = str5;  	Label_016E:  	return this.xb32f8dd719a105db;  	Label_017D:  	if (1 == 0) {  		goto Label_0166;  	}  	if (15 != 0) {  		goto Label_0157;  	}  	goto Label_0139;  	Label_018F:  	if (this.x0fda809a7e14c39d.Length < 1) {  		throw new PersistError ("Can't begin subsection when a section has not yet been defined: " + str);  	}  	str4 = str3.Substring (0' index);  	str5 = str3.Substring (index + 1);  	goto Label_01D7;  	Label_01B4:  	if (index == -1) {  		goto Label_01FE;  	}  	if (3 == 0) {  		goto Label_0259;  	}  	goto Label_018F;  	Label_01D7:  	if ((((uint)index) + ((uint)index)) >= 0) {  		goto Label_017D;  	}  	if (0 == 0) {  		goto Label_0125;  	}  	goto Label_0215;  	Label_01FE:  	this.x0fda809a7e14c39d = str3;  	this.x0f7286e9d651365c = "";  	goto Label_016E;  	Label_0215:  	if (((uint)index) <= uint.MaxValue) {  		goto Label_00D1;  	}  	goto Label_0370;  	Label_022C:  	if (!str3.EndsWith ("]")) {  		goto Label_0278;  	}  	goto Label_0259;  	if ((((uint)index) & 0) != 0) {  		goto Label_022C;  	}  	if (8 == 0) {  		goto Label_0335;  	}  	Label_0259:  	str3 = str3.Substring (0' str.Length - 2);  	index = str3.IndexOf (':');  	goto Label_028B;  	Label_0278:  	throw new PersistError ("Invalid section: " + str);  	Label_028B:  	if (-1 != 0) {  		goto Label_01B4;  	}  	goto Label_0370;  	Label_029A:  	if ((((uint)index) | 2) != 0) {  		goto Label_022C;  	}  	if (((uint)index) < 0) {  		goto Label_018F;  	}  	goto Label_0278;  	Label_02CF:  	foreach (string str2 in this.x0383ec486664fa18) {  		this.xb32f8dd719a105db.Lines.Add (str2);  	}  	this.x0383ec486664fa18.Clear ();  	str3 = str.Substring (1).Trim ();  	goto Label_029A;  	Label_0328:  	str = str.Trim ();  	if (0 != 0) {  		goto Label_00F0;  	}  	Label_0335:  	if (str.StartsWith ("//")) {  		goto Label_0107;  	}  	goto Label_0125;  	Label_034A:  	this.xb32f8dd719a105db = new EncogFileSection (this.x0fda809a7e14c39d' this.x0f7286e9d651365c);  	goto Label_02CF;  	Label_0370:  	if ((((uint)index) & 0) == 0) {  		return section;  	}  	goto Label_0005;  }  catch (IOException exception) {  	throw new PersistError (exception);  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: if (8 != 0) {  	goto Label_002F;  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: if (15 != 0) {  	goto Label_0157;  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: if (3 == 0) {  	goto Label_0259;  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: if (8 == 0) {  	goto Label_0335;  }  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: str3 = str3.Substring (0' str.Length - 2);  
Magic Number,Encog.Persist,EncogReadHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogReadHelper.cs,ReadNextSection,The following statement contains a magic number: if ((((uint)index) | 2) != 0) {  	goto Label_022C;  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseBoolean,The following statement contains a magic number: try {  	str = paras [name];  	while (str == null) {  		throw new PersistError ("Missing property: " + name);  	}  	if (15 != 0) {  	}  	flag = str.Trim ().ToLower () [0] == 't';  }  catch (FormatException) {  	throw new PersistError ("Field: " + name + "' invalid integer: " + str);  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseBoolean,The following statement contains a magic number: if (15 != 0) {  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: try {  	str = paras [name];  	goto Label_0034;  	Label_000E:  	if (str == null) {  		goto Label_003B;  	}  	if (15 == 0) {  		if (8 == 0) {  			goto Label_000E;  		}  		if (2 == 0) {  			return numArray;  		}  	}  	return NumberList.FromListInt (CSVFormat.EgFormat' str);  	Label_0034:  	if (0x7fffffff != 0) {  		goto Label_000E;  	}  	Label_003B:  	throw new PersistError ("Missing property: " + name);  	if (8 != 0) {  		goto Label_000E;  	}  }  catch (FormatException) {  	throw new PersistError ("Field: " + name + "' invalid integer: " + str);  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: try {  	str = paras [name];  	goto Label_0034;  	Label_000E:  	if (str == null) {  		goto Label_003B;  	}  	if (15 == 0) {  		if (8 == 0) {  			goto Label_000E;  		}  		if (2 == 0) {  			return numArray;  		}  	}  	return NumberList.FromListInt (CSVFormat.EgFormat' str);  	Label_0034:  	if (0x7fffffff != 0) {  		goto Label_000E;  	}  	Label_003B:  	throw new PersistError ("Missing property: " + name);  	if (8 != 0) {  		goto Label_000E;  	}  }  catch (FormatException) {  	throw new PersistError ("Field: " + name + "' invalid integer: " + str);  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: try {  	str = paras [name];  	goto Label_0034;  	Label_000E:  	if (str == null) {  		goto Label_003B;  	}  	if (15 == 0) {  		if (8 == 0) {  			goto Label_000E;  		}  		if (2 == 0) {  			return numArray;  		}  	}  	return NumberList.FromListInt (CSVFormat.EgFormat' str);  	Label_0034:  	if (0x7fffffff != 0) {  		goto Label_000E;  	}  	Label_003B:  	throw new PersistError ("Missing property: " + name);  	if (8 != 0) {  		goto Label_000E;  	}  }  catch (FormatException) {  	throw new PersistError ("Field: " + name + "' invalid integer: " + str);  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: try {  	str = paras [name];  	goto Label_0034;  	Label_000E:  	if (str == null) {  		goto Label_003B;  	}  	if (15 == 0) {  		if (8 == 0) {  			goto Label_000E;  		}  		if (2 == 0) {  			return numArray;  		}  	}  	return NumberList.FromListInt (CSVFormat.EgFormat' str);  	Label_0034:  	if (0x7fffffff != 0) {  		goto Label_000E;  	}  	Label_003B:  	throw new PersistError ("Missing property: " + name);  	if (8 != 0) {  		goto Label_000E;  	}  }  catch (FormatException) {  	throw new PersistError ("Field: " + name + "' invalid integer: " + str);  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: if (15 == 0) {  	if (8 == 0) {  		goto Label_000E;  	}  	if (2 == 0) {  		return numArray;  	}  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: if (15 == 0) {  	if (8 == 0) {  		goto Label_000E;  	}  	if (2 == 0) {  		return numArray;  	}  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: if (15 == 0) {  	if (8 == 0) {  		goto Label_000E;  	}  	if (2 == 0) {  		return numArray;  	}  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: if (8 == 0) {  	goto Label_000E;  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: if (2 == 0) {  	return numArray;  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseIntArray,The following statement contains a magic number: if (8 != 0) {  	goto Label_000E;  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseMatrix,The following statement contains a magic number: if (((uint)num3) <= uint.MaxValue) {  	num3 = 2;  	num4 = 0;  	goto Label_0017;  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseMatrix,The following statement contains a magic number: num3 = 2;  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseParams,The following statement contains a magic number: using (IEnumerator<string> enumerator = this._x0383ec486664fa18.GetEnumerator ()) {  	string str;  	string str2;  	int num;  	string str3;  	goto Label_0020;  	Label_0017:  	if (str2.Length > 0) {  		goto Label_007B;  	}  	Label_0020:  	if (enumerator.MoveNext ()) {  		goto Label_00AF;  	}  	if ((((uint)num) + ((uint)num)) >= 0) {  		return dictionary;  	}  	Label_0044:  	str3 = str2.Substring (0' num).Trim ();  	string str4 = str2.Substring (num + 1).Trim ();  	dictionary [str3] = str4;  	goto Label_0020;  	Label_0073:  	if (num == -1) {  		goto Label_009C;  	}  	goto Label_0044;  	Label_007B:  	num = str2.IndexOf ('=');  	if ((((uint)num) - ((uint)num)) >= 0) {  		goto Label_0073;  	}  	Label_009C:  	throw new EncogError ("Invalid setup item: " + str);  	Label_00AF:  	str = enumerator.Current;  	if (-2 == 0) {  		return dictionary;  	}  	str2 = str.Trim ();  	goto Label_0017;  }  
Magic Number,Encog.Persist,EncogFileSection,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogFileSection.cs,ParseParams,The following statement contains a magic number: if (-2 == 0) {  	return dictionary;  }  
Magic Number,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,AddColumn,The following statement contains a magic number: this.x311e7a92306d7199.Append (CSVFormat.English.Format (d' 10));  
Magic Number,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The following statement contains a magic number: builder.Append (CSVFormat.EgFormat.Format (act.Params [index]' 10));  
Magic Number,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The following statement contains a magic number: if ((((uint)index) | 3) == 0) {  	goto Label_0011;  }  
Magic Number,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The following statement contains a magic number: while (num2 < matrix.Cols) {  	builder.Append (''');  	builder.Append (CSVFormat.EgFormat.Format (matrix [num' num2]' 10));  	if ((((uint)num) + ((uint)num)) < 0) {  		goto Label_001C;  	}  	num2++;  }  
Magic Number,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The following statement contains a magic number: builder.Append (CSVFormat.EgFormat.Format (matrix [num' num2]' 10));  
Magic Number,Encog.Persist,EncogWriteHelper,C:\repos\neismit_emds\Nsim4\Encog\Persist\EncogWriteHelper.cs,WriteProperty,The following statement contains a magic number: this.xa58d1d9c6fa55c59.WriteLine (name + "=" + CSVFormat.EgFormat.Format (value_ren' 10));  
Magic Number,Encog.App.Analyst.Missing,NegateMissing,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Missing\NegateMissing.cs,HandleMissing,The following statement contains a magic number: if (2 != 0) {  	num = stat.NormalizedHigh - (stat.NormalizedHigh - (stat.NormalizedLow / 2.0));  	num2 = 0;  	goto Label_001A;  }  
Magic Number,Encog.App.Analyst.Missing,NegateMissing,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Missing\NegateMissing.cs,HandleMissing,The following statement contains a magic number: if (2 != 0) {  	num = stat.NormalizedHigh - (stat.NormalizedHigh - (stat.NormalizedLow / 2.0));  	num2 = 0;  	goto Label_001A;  }  
Magic Number,Encog.App.Analyst.Missing,NegateMissing,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Missing\NegateMissing.cs,HandleMissing,The following statement contains a magic number: num = stat.NormalizedHigh - (stat.NormalizedHigh - (stat.NormalizedLow / 2.0));  
Magic Number,Encog.ML.Data.Market.Loader,YahooFinanceLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\YahooFinanceLoader.cs,Load,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  	DateTime time;  	double num;  	double num2;  	double num3;  	double num4;  	double num5;  	double num6;  	LoadedMarketData data;  	ReadCSV dcsv = new ReadCSV (stream' true' CSVFormat.DecimalPoint);  	goto Label_005B;  	Label_003F:  	data.SetData (MarketDataType.Open' num2);  	Label_0049:  	data.SetData (MarketDataType.Volume' num6);  	is2.Add (data);  	Label_005B:  	if (dcsv.Next ()) {  		goto Label_01AF;  	}  	dcsv.Close ();  	stream.Close ();  	if ((((uint)num) - ((uint)num5)) <= uint.MaxValue) {  		goto Label_0125;  	}  	if ((((uint)num) & 0) == 0) {  		goto Label_00B0;  	}  	Label_00A4:  	data.SetData (MarketDataType.Low' num5);  	goto Label_003F;  	Label_00B0:  	data.SetData (MarketDataType.AdjustedClose' num);  	do {  		data.SetData (MarketDataType.Open' num2);  		if ((((uint)num) - ((uint)num6)) > uint.MaxValue) {  			goto Label_0049;  		}  		data.SetData (MarketDataType.Close' num3);  		data.SetData (MarketDataType.High' num4);  	}  	while ((((uint)num5) - ((uint)num3)) > uint.MaxValue);  	if (((uint)num2) >= 0) {  		goto Label_00A4;  	}  	goto Label_003F;  	Label_0125:  	if (((uint)num2) >= 0) {  		return is2;  	}  	goto Label_005B;  	Label_013C:  	num6 = dcsv.GetDouble ("volume");  	data = new LoadedMarketData (time' ticker);  	if ((((uint)num2) | 2) == 0) {  		goto Label_017C;  	}  	goto Label_00B0;  	Label_016E:  	num2 = dcsv.GetDouble ("open");  	Label_017C:  	num3 = dcsv.GetDouble ("close");  	num4 = dcsv.GetDouble ("high");  	num5 = dcsv.GetDouble ("low");  	goto Label_013C;  	Label_01AF:  	time = dcsv.GetDate ("date");  	num = dcsv.GetDouble ("adj close");  	if ((((uint)num3) + ((uint)num6)) <= uint.MaxValue) {  		goto Label_016E;  	}  	goto Label_00B0;  }  
Magic Number,Encog.ML.Data.Market.Loader,YahooFinanceLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\YahooFinanceLoader.cs,Load,The following statement contains a magic number: if ((((uint)num2) | 2) == 0) {  	goto Label_017C;  }  
Magic Number,Encog.ML.Data.Market.Loader,YahooFinanceLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\YahooFinanceLoader.cs,x38c212309d8d5dd3,The following statement contains a magic number: if (0 == 0) {  	utility.Add ("a"' (x7f8a886f51b477eb.Month - 1));  	utility.Add ("b"' x7f8a886f51b477eb.Day);  	if (4 == 0) {  		goto Label_0018;  	}  	utility.Add ("c"' x7f8a886f51b477eb.Year);  	utility.Add ("d"' (x3ed4f4f0195b98d7.Month - 1));  	utility.Add ("e"' x3ed4f4f0195b98d7.Day);  	utility.Add ("f"' x3ed4f4f0195b98d7.Year);  	utility.Add ("g"' "d");  	goto Label_0061;  }  
Magic Number,Encog.ML.Data.Market.Loader,YahooFinanceLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\YahooFinanceLoader.cs,x38c212309d8d5dd3,The following statement contains a magic number: if (4 == 0) {  	goto Label_0018;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x03ac32bfd933b13f,The following statement contains a magic number: this.x3994311431e22a29.SelectedIndex = 2;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x328c0b730b0ebcd7,The following statement contains a magic number: if (4 != 0) {  	goto Label_012F;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x328c0b730b0ebcd7,The following statement contains a magic number: this.xfb21f83c2b8edbd3.FilterIndex = 2;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (2 != 0) {  	goto Label_071B;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 == 0) {  	goto Label_01EC;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 == 0) {  	goto Label_033D;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (-2 != 0) {  	base.Controls.Add (this.xdc21fb076e1552c1);  	base.Controls.Add (this.DateTimeFormatTextBox);  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xcbde839f0e2dff8c.Location = new Point (100' 170);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xcbde839f0e2dff8c.Location = new Point (100' 170);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xcbde839f0e2dff8c.Size = new Size (0xe5' 20);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xcbde839f0e2dff8c.TabIndex = 10;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xd9083dfb11d608f7.Location = new Point (4' 170);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xd9083dfb11d608f7.Location = new Point (4' 170);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xd9083dfb11d608f7.Size = new Size (0x4e' 13);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xd9083dfb11d608f7.TabIndex = 9;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0158;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xdc21fb076e1552c1.Location = new Point (7' 0xed);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3b9a6a473765907c.TabIndex = 7;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x583d54b8bfac1f79.Location = new Point (100' 0x34);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x583d54b8bfac1f79.Size = new Size (120' 0x5f);  	this.x583d54b8bfac1f79.TabIndex = 8;  	this.xc4c34e75b01b4519.SetToolTip (this.x583d54b8bfac1f79' "Market data types to use in your csv");  	this.DateTimeFormatTextBox.Location = new Point (100' 0xe7);  	this.DateTimeFormatTextBox.Name = "DateTimeFormatTextBox";  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x583d54b8bfac1f79.Size = new Size (120' 0x5f);  	this.x583d54b8bfac1f79.TabIndex = 8;  	this.xc4c34e75b01b4519.SetToolTip (this.x583d54b8bfac1f79' "Market data types to use in your csv");  	this.DateTimeFormatTextBox.Location = new Point (100' 0xe7);  	this.DateTimeFormatTextBox.Name = "DateTimeFormatTextBox";  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x583d54b8bfac1f79.Size = new Size (120' 0x5f);  	this.x583d54b8bfac1f79.TabIndex = 8;  	this.xc4c34e75b01b4519.SetToolTip (this.x583d54b8bfac1f79' "Market data types to use in your csv");  	this.DateTimeFormatTextBox.Location = new Point (100' 0xe7);  	this.DateTimeFormatTextBox.Name = "DateTimeFormatTextBox";  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x583d54b8bfac1f79.Size = new Size (120' 0x5f);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x583d54b8bfac1f79.TabIndex = 8;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.DateTimeFormatTextBox.Location = new Point (100' 0xe7);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.DateTimeFormatTextBox.Size = new Size (0xe5' 20);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.DateTimeFormatTextBox.TabIndex = 11;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3b9a6a473765907c.Location = new Point (4' 0x44);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 != 0) {  	this.x3b9a6a473765907c.Size = new Size (0x57' 13);  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 != 0) {  	this.x3b9a6a473765907c.Size = new Size (0x57' 13);  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3b9a6a473765907c.Size = new Size (0x57' 13);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.Size = new Size (0x3b' 13);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.TabIndex = 4;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.Location = new Point (4' 14);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.Location = new Point (4' 14);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.Size = new Size (0x3f' 13);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.TabIndex = 5;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (2 == 0) {  	goto Label_01D3;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (2 == 0) {  	goto Label_07EB;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x90baa23478571135.Location = new Point (4' 0x167);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0946;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (3 == 0) {  	goto Label_0010;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x90baa23478571135.Size = new Size (0x37' 13);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x90baa23478571135.TabIndex = 6;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0x7fffffff != 0) {  	this.xdc21fb076e1552c1.Name = "label5";  	this.xdc21fb076e1552c1.Size = new Size (0x55' 13);  	this.xdc21fb076e1552c1.TabIndex = 12;  	this.xdc21fb076e1552c1.Text = "DateTime format";  	goto Label_029C;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0x7fffffff != 0) {  	this.xdc21fb076e1552c1.Name = "label5";  	this.xdc21fb076e1552c1.Size = new Size (0x55' 13);  	this.xdc21fb076e1552c1.TabIndex = 12;  	this.xdc21fb076e1552c1.Text = "DateTime format";  	goto Label_029C;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xdc21fb076e1552c1.Size = new Size (0x55' 13);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xdc21fb076e1552c1.TabIndex = 12;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x3d9c937c1f3cf311.Name = "textBox1";  	this.x3d9c937c1f3cf311.ReadOnly = true;  	this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  	this.x3d9c937c1f3cf311.TabIndex = 2;  	if ((0 == 0) && (4 == 0)) {  		goto Label_0425;  	}  	while (true) {  		this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  		this.x3994311431e22a29.FormattingEnabled = true;  		this.x3994311431e22a29.Location = new Point (100' 6);  		this.x3994311431e22a29.Name = "CSVFormatsCombo";  		this.x3994311431e22a29.Size = new Size (0x79' 0x15);  		this.x3994311431e22a29.TabIndex = 3;  		this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  		this.xf5622c25220a6c23.AutoSize = true;  		this.xf5622c25220a6c23.Location = new Point (4' 410);  		if (8 != 0) {  			goto Label_0605;  		}  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3d9c937c1f3cf311.Size = new Size (0x10b' 20);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3d9c937c1f3cf311.TabIndex = 2;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if ((0 == 0) && (4 == 0)) {  	goto Label_0425;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: while (true) {  	this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  	this.x3994311431e22a29.FormattingEnabled = true;  	this.x3994311431e22a29.Location = new Point (100' 6);  	this.x3994311431e22a29.Name = "CSVFormatsCombo";  	this.x3994311431e22a29.Size = new Size (0x79' 0x15);  	this.x3994311431e22a29.TabIndex = 3;  	this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (4' 410);  	if (8 != 0) {  		goto Label_0605;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: while (true) {  	this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  	this.x3994311431e22a29.FormattingEnabled = true;  	this.x3994311431e22a29.Location = new Point (100' 6);  	this.x3994311431e22a29.Name = "CSVFormatsCombo";  	this.x3994311431e22a29.Size = new Size (0x79' 0x15);  	this.x3994311431e22a29.TabIndex = 3;  	this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (4' 410);  	if (8 != 0) {  		goto Label_0605;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: while (true) {  	this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  	this.x3994311431e22a29.FormattingEnabled = true;  	this.x3994311431e22a29.Location = new Point (100' 6);  	this.x3994311431e22a29.Name = "CSVFormatsCombo";  	this.x3994311431e22a29.Size = new Size (0x79' 0x15);  	this.x3994311431e22a29.TabIndex = 3;  	this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (4' 410);  	if (8 != 0) {  		goto Label_0605;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: while (true) {  	this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  	this.x3994311431e22a29.FormattingEnabled = true;  	this.x3994311431e22a29.Location = new Point (100' 6);  	this.x3994311431e22a29.Name = "CSVFormatsCombo";  	this.x3994311431e22a29.Size = new Size (0x79' 0x15);  	this.x3994311431e22a29.TabIndex = 3;  	this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (4' 410);  	if (8 != 0) {  		goto Label_0605;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: while (true) {  	this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  	this.x3994311431e22a29.FormattingEnabled = true;  	this.x3994311431e22a29.Location = new Point (100' 6);  	this.x3994311431e22a29.Name = "CSVFormatsCombo";  	this.x3994311431e22a29.Size = new Size (0x79' 0x15);  	this.x3994311431e22a29.TabIndex = 3;  	this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (4' 410);  	if (8 != 0) {  		goto Label_0605;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: while (true) {  	this.xc4c34e75b01b4519.SetToolTip (this.x3d9c937c1f3cf311' "Path to your file");  	this.x3994311431e22a29.FormattingEnabled = true;  	this.x3994311431e22a29.Location = new Point (100' 6);  	this.x3994311431e22a29.Name = "CSVFormatsCombo";  	this.x3994311431e22a29.Size = new Size (0x79' 0x15);  	this.x3994311431e22a29.TabIndex = 3;  	this.xc4c34e75b01b4519.SetToolTip (this.x3994311431e22a29' "CSVFormat to use");  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (4' 410);  	if (8 != 0) {  		goto Label_0605;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3994311431e22a29.Location = new Point (100' 6);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3994311431e22a29.Location = new Point (100' 6);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.x3994311431e22a29.TabIndex = 3;  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.Location = new Point (4' 410);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.Location = new Point (4' 410);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (8 != 0) {  	goto Label_0605;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: this.xde320a064856d64c.Location = new Point (100' 0x14f);  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (4 != 0) {  	this.x476fc4e9403db277.TabIndex = 0;  	goto Label_0848;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (2 == 0) {  	return;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVFormLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVFormLoader.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 != 0) {  	this.x3b9a6a473765907c = new Label ();  	goto Label_093B;  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVLoader.cs,fromStringCSVFormattoCSVFormat,The following statement contains a magic number: if (str != null) {  	if (str == "Decimal Point") {  		if (2 != 0) {  			this.x9c5d9c5f2c877175 = CSVFormat.DecimalPoint;  			if (0 == 0) {  				goto Label_00A6;  			}  		}  		else {  			goto Label_00A6;  		}  	}  	if (str == "Decimal Comma") {  		this.x9c5d9c5f2c877175 = CSVFormat.DecimalComma;  	}  	else if (!(str == "English Format")) {  		if (str == "EG Format") {  			this.x9c5d9c5f2c877175 = CSVFormat.EgFormat;  		}  	}  	else {  		this.x9c5d9c5f2c877175 = CSVFormat.English;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVLoader.cs,fromStringCSVFormattoCSVFormat,The following statement contains a magic number: if (str == "Decimal Point") {  	if (2 != 0) {  		this.x9c5d9c5f2c877175 = CSVFormat.DecimalPoint;  		if (0 == 0) {  			goto Label_00A6;  		}  	}  	else {  		goto Label_00A6;  	}  }  
Magic Number,Encog.ML.Data.Market.Loader,CSVLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\Loader\CSVLoader.cs,fromStringCSVFormattoCSVFormat,The following statement contains a magic number: if (2 != 0) {  	this.x9c5d9c5f2c877175 = CSVFormat.DecimalPoint;  	if (0 == 0) {  		goto Label_00A6;  	}  }  else {  	goto Label_00A6;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,DownSample,The following statement contains a magic number: numArray = new double[(height * width) * 3];  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,DownSampleRegion,The following statement contains a magic number: if (num10 < num3) {  	Color pixel = this.Image.GetPixel (num10' num9);  	num5 += pixel.R;  	num6 += pixel.G;  	num7 += pixel.B;  	if ((((uint)num2) | 3) != 0) {  		if ((((uint)num5) - ((uint)num7)) <= uint.MaxValue) {  			if (((uint)num3) > uint.MaxValue) {  				return;  			}  			goto Label_00F9;  		}  		if (((uint)num2) <= uint.MaxValue) {  			goto Label_01F1;  		}  		goto Label_01C9;  	}  	if ((((uint)num4) - ((uint)x)) < 0) {  		goto Label_0062;  	}  	goto Label_0195;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,DownSampleRegion,The following statement contains a magic number: if ((((uint)num2) | 3) != 0) {  	if ((((uint)num5) - ((uint)num7)) <= uint.MaxValue) {  		if (((uint)num3) > uint.MaxValue) {  			return;  		}  		goto Label_00F9;  	}  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_01F1;  	}  	goto Label_01C9;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,DownSampleRegion,The following statement contains a magic number: if ((((uint)num5) | 3) != 0) {  	this.CurrentGreen = num6 / num8;  	this.CurrentBlue = num7 / num8;  	if (((uint)num4) <= uint.MaxValue) {  		return;  	}  	goto Label_00F9;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xb62a16ea0e9c8e4a,The following statement contains a magic number: if (pixel.R >= 250) {  	if ((pixel.G < 250) || (pixel.B < 250)) {  		goto Label_0004;  	}  	y++;  	goto Label_0018;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xb62a16ea0e9c8e4a,The following statement contains a magic number: if (pixel.R >= 250) {  	if ((pixel.G < 250) || (pixel.B < 250)) {  		goto Label_0004;  	}  	y++;  	goto Label_0018;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xb62a16ea0e9c8e4a,The following statement contains a magic number: if (pixel.R >= 250) {  	if ((pixel.G < 250) || (pixel.B < 250)) {  		goto Label_0004;  	}  	y++;  	goto Label_0018;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xb62a16ea0e9c8e4a,The following statement contains a magic number: if ((pixel.G < 250) || (pixel.B < 250)) {  	goto Label_0004;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xb62a16ea0e9c8e4a,The following statement contains a magic number: if ((pixel.G < 250) || (pixel.B < 250)) {  	goto Label_0004;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xb62a16ea0e9c8e4a,The following statement contains a magic number: if (3 != 0) {  	goto Label_0004;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (x < this._xb28e4e0b2e9dba92) {  	Color pixel = this.Image.GetPixel (x' x1e218ceaee1bb583);  	if (pixel.R >= 250) {  		if (pixel.G < 250) {  			goto Label_0046;  		}  	}  	else {  		goto Label_0046;  	}  	if (pixel.B < 250) {  		goto Label_0046;  	}  	goto Label_0015;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (x < this._xb28e4e0b2e9dba92) {  	Color pixel = this.Image.GetPixel (x' x1e218ceaee1bb583);  	if (pixel.R >= 250) {  		if (pixel.G < 250) {  			goto Label_0046;  		}  	}  	else {  		goto Label_0046;  	}  	if (pixel.B < 250) {  		goto Label_0046;  	}  	goto Label_0015;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (x < this._xb28e4e0b2e9dba92) {  	Color pixel = this.Image.GetPixel (x' x1e218ceaee1bb583);  	if (pixel.R >= 250) {  		if (pixel.G < 250) {  			goto Label_0046;  		}  	}  	else {  		goto Label_0046;  	}  	if (pixel.B < 250) {  		goto Label_0046;  	}  	goto Label_0015;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (pixel.R >= 250) {  	if (pixel.G < 250) {  		goto Label_0046;  	}  }  else {  	goto Label_0046;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (pixel.R >= 250) {  	if (pixel.G < 250) {  		goto Label_0046;  	}  }  else {  	goto Label_0046;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (pixel.G < 250) {  	goto Label_0046;  }  
Magic Number,Encog.Util.DownSample,RGBDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\RGBDownsample.cs,xc7e385f8fd8856df,The following statement contains a magic number: if (pixel.B < 250) {  	goto Label_0046;  }  
Magic Number,Encog.Util.DownSample,SimpleIntensityDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\SimpleIntensityDownsample.cs,DownSample,The following statement contains a magic number: while (true) {  	int num;  	int num2;  	int num3;  	if (((uint)num3) >= 0) {  	}  	base.ProcessImage (image);  	double[] numArray = new double[(height * width) * 3];  	if ((((uint)width) + ((uint)num2)) <= uint.MaxValue) {  		num = 0;  		num2 = 0;  	}  	while (num2 < height) {  		for (num3 = 0; num3 < width; num3++) {  			base.DownSampleRegion (num3' num2);  			numArray [num++] = ((base.CurrentRed + base.CurrentBlue) + base.CurrentGreen) / 3;  		}  		num2++;  	}  	if ((((uint)width) | 0xfffffffe) != 0) {  		return numArray;  	}  }  
Magic Number,Encog.Util.DownSample,SimpleIntensityDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\SimpleIntensityDownsample.cs,DownSample,The following statement contains a magic number: while (true) {  	int num;  	int num2;  	int num3;  	if (((uint)num3) >= 0) {  	}  	base.ProcessImage (image);  	double[] numArray = new double[(height * width) * 3];  	if ((((uint)width) + ((uint)num2)) <= uint.MaxValue) {  		num = 0;  		num2 = 0;  	}  	while (num2 < height) {  		for (num3 = 0; num3 < width; num3++) {  			base.DownSampleRegion (num3' num2);  			numArray [num++] = ((base.CurrentRed + base.CurrentBlue) + base.CurrentGreen) / 3;  		}  		num2++;  	}  	if ((((uint)width) | 0xfffffffe) != 0) {  		return numArray;  	}  }  
Magic Number,Encog.Util.DownSample,SimpleIntensityDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\SimpleIntensityDownsample.cs,DownSample,The following statement contains a magic number: while (num2 < height) {  	for (num3 = 0; num3 < width; num3++) {  		base.DownSampleRegion (num3' num2);  		numArray [num++] = ((base.CurrentRed + base.CurrentBlue) + base.CurrentGreen) / 3;  	}  	num2++;  }  
Magic Number,Encog.Util.DownSample,SimpleIntensityDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\SimpleIntensityDownsample.cs,DownSample,The following statement contains a magic number: for (num3 = 0; num3 < width; num3++) {  	base.DownSampleRegion (num3' num2);  	numArray [num++] = ((base.CurrentRed + base.CurrentBlue) + base.CurrentGreen) / 3;  }  
Magic Number,Encog.Util.DownSample,SimpleIntensityDownsample,C:\repos\neismit_emds\Nsim4\Encog\Util\DownSample\SimpleIntensityDownsample.cs,DownSample,The following statement contains a magic number: numArray [num++] = ((base.CurrentRed + base.CurrentBlue) + base.CurrentGreen) / 3;  
Magic Number,Encog.Util.Time,xfa6e3ed04cba2b4d,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\xfa6e3ed04cba2b4d.cs,x898ebed938f437e5,The following statement contains a magic number: return (long)((this._x3ed4f4f0195b98d7.Month - this._x7f8a886f51b477eb.Month) + ((this._x3ed4f4f0195b98d7.Year - this._x7f8a886f51b477eb.Year) * 12));  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (time.DayOfWeek) {  case DayOfWeek.Sunday:  	return 0;  case DayOfWeek.Monday:  	return 1;  case DayOfWeek.Tuesday:  	return 2;  case DayOfWeek.Wednesday:  	return 3;  case DayOfWeek.Thursday:  	return 4;  case DayOfWeek.Friday:  	break;  case DayOfWeek.Saturday:  	return 6;  default:  	if (15 == 0) {  		break;  	}  	return -1;  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (time.DayOfWeek) {  case DayOfWeek.Sunday:  	return 0;  case DayOfWeek.Monday:  	return 1;  case DayOfWeek.Tuesday:  	return 2;  case DayOfWeek.Wednesday:  	return 3;  case DayOfWeek.Thursday:  	return 4;  case DayOfWeek.Friday:  	break;  case DayOfWeek.Saturday:  	return 6;  default:  	if (15 == 0) {  		break;  	}  	return -1;  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (time.DayOfWeek) {  case DayOfWeek.Sunday:  	return 0;  case DayOfWeek.Monday:  	return 1;  case DayOfWeek.Tuesday:  	return 2;  case DayOfWeek.Wednesday:  	return 3;  case DayOfWeek.Thursday:  	return 4;  case DayOfWeek.Friday:  	break;  case DayOfWeek.Saturday:  	return 6;  default:  	if (15 == 0) {  		break;  	}  	return -1;  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (time.DayOfWeek) {  case DayOfWeek.Sunday:  	return 0;  case DayOfWeek.Monday:  	return 1;  case DayOfWeek.Tuesday:  	return 2;  case DayOfWeek.Wednesday:  	return 3;  case DayOfWeek.Thursday:  	return 4;  case DayOfWeek.Friday:  	break;  case DayOfWeek.Saturday:  	return 6;  default:  	if (15 == 0) {  		break;  	}  	return -1;  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (time.DayOfWeek) {  case DayOfWeek.Sunday:  	return 0;  case DayOfWeek.Monday:  	return 1;  case DayOfWeek.Tuesday:  	return 2;  case DayOfWeek.Wednesday:  	return 3;  case DayOfWeek.Thursday:  	return 4;  case DayOfWeek.Friday:  	break;  case DayOfWeek.Saturday:  	return 6;  default:  	if (15 == 0) {  		break;  	}  	return -1;  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: return 2;  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: return 3;  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: return 4;  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: return 6;  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: if (15 == 0) {  	break;  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,GetDayOfWeek,The following statement contains a magic number: return 5;  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,HaveSameDate,The following statement contains a magic number: if (d1.Day == d2.Day) {  	if (0 != 0) {  	}  	if (d1.Month == d2.Month) {  		return (d1.Year == d2.Year);  	}  	if (-2 != 0) {  	}  }  
Magic Number,Encog.Util.Time,NumericDateUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\NumericDateUtil.cs,HaveSameDate,The following statement contains a magic number: if (-2 != 0) {  }  
Magic Number,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,x245c043bccc9a2f0,The following statement contains a magic number: switch (x1c40252c1b8530fe) {  case TimeUnit.Seconds:  	return "seconds";  case TimeUnit.Minutes:  	return "minutes";  case TimeUnit.Hours:  	return "hours";  case TimeUnit.Days:  	return "days";  case TimeUnit.Weeks:  	goto Label_001C;  case TimeUnit.Fortnights:  	return "fortnights";  case TimeUnit.Months:  	return "months";  case TimeUnit.Years:  	return "years";  case TimeUnit.Decades:  	return "decades";  case TimeUnit.Scores:  	return "scores";  case TimeUnit.Centuries:  	return "centures";  case TimeUnit.Millennia:  	break;  default:  	if (0 == 0) {  		if (4 == 0) {  			break;  		}  		return "unknowns";  	}  	goto Label_001C;  }  
Magic Number,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,x245c043bccc9a2f0,The following statement contains a magic number: if (0 == 0) {  	if (4 == 0) {  		break;  	}  	return "unknowns";  }  
Magic Number,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,x245c043bccc9a2f0,The following statement contains a magic number: if (4 == 0) {  	break;  }  
Magic Number,Encog.Util.Normalize.Target,NormalizationStorageMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Target\NormalizationStorageMLDataSet.cs,Write,The following statement contains a magic number: if (3 == 0) {  	return;  }  
Magic Number,Encog.ML.Factory.Method,PNNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\PNNFactory.cs,Create,The following statement contains a magic number: if (list.Count != 3) {  	throw new EncogError ("PNN Networks must have exactly three elements' separated by ->.");  }  
Magic Number,Encog.ML.Factory.Method,PNNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\PNNFactory.cs,Create,The following statement contains a magic number: layer3 = ArchitectureParse.ParseLayer (list [2]' output);  
Magic Number,Encog.ML.Factory.Method,SOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SOMFactory.cs,Create,The following statement contains a magic number: if ((((uint)count) - ((uint)input)) >= 0) {  	while (list.Count != 2) {  		throw new EncogError ("SOM's must have exactly two elements' separated by ->.");  	}  	if ((((uint)input) + ((uint)input)) <= uint.MaxValue) {  		ArchitectureLayer layer = ArchitectureParse.ParseLayer (list [0]' input);  		ArchitectureLayer layer2 = ArchitectureParse.ParseLayer (list [1]' output);  		if ((((uint)count) + ((uint)count)) >= 0) {  			count = layer.Count;  			num2 = layer2.Count;  			pattern2 = new SOMPattern ();  		}  	}  	else {  		goto Label_00B9;  	}  	pattern2.InputNeurons = count;  }  
Magic Number,Encog.ML.Factory.Method,SOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SOMFactory.cs,Create,The following statement contains a magic number: while (list.Count != 2) {  	throw new EncogError ("SOM's must have exactly two elements' separated by ->.");  }  
Magic Number,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,The following statement contains a magic number: if ((((uint)output) + ((uint)count)) >= 0) {  	if (list.Count != 3) {  		throw new EncogError ("SRN Networks must have exactly three elements' separated by ->.");  	}  	ArchitectureLayer layer = ArchitectureParse.ParseLayer (list [0]' input);  	layer2 = ArchitectureParse.ParseLayer (list [1]' -1);  	ArchitectureLayer layer3 = ArchitectureParse.ParseLayer (list [2]' output);  	count = layer.Count;  	do {  		num2 = layer3.Count;  	}  	while ((((uint)count) - ((uint)output)) < 0);  	if (layer2.Name.Equals ("Gaussian"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.Gaussian;  		goto Label_003E;  	}  	if (layer2.Name.Equals ("Multiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.Multiquadric;  		goto Label_003E;  	}  	while (layer2.Name.Equals ("InverseMultiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.InverseMultiquadric;  		if (0 == 0) {  			goto Label_003E;  		}  		if (2 == 0) {  			goto Label_0055;  		}  	}  	goto Label_005A;  }  
Magic Number,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,The following statement contains a magic number: if ((((uint)output) + ((uint)count)) >= 0) {  	if (list.Count != 3) {  		throw new EncogError ("SRN Networks must have exactly three elements' separated by ->.");  	}  	ArchitectureLayer layer = ArchitectureParse.ParseLayer (list [0]' input);  	layer2 = ArchitectureParse.ParseLayer (list [1]' -1);  	ArchitectureLayer layer3 = ArchitectureParse.ParseLayer (list [2]' output);  	count = layer.Count;  	do {  		num2 = layer3.Count;  	}  	while ((((uint)count) - ((uint)output)) < 0);  	if (layer2.Name.Equals ("Gaussian"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.Gaussian;  		goto Label_003E;  	}  	if (layer2.Name.Equals ("Multiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.Multiquadric;  		goto Label_003E;  	}  	while (layer2.Name.Equals ("InverseMultiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.InverseMultiquadric;  		if (0 == 0) {  			goto Label_003E;  		}  		if (2 == 0) {  			goto Label_0055;  		}  	}  	goto Label_005A;  }  
Magic Number,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,The following statement contains a magic number: if ((((uint)output) + ((uint)count)) >= 0) {  	if (list.Count != 3) {  		throw new EncogError ("SRN Networks must have exactly three elements' separated by ->.");  	}  	ArchitectureLayer layer = ArchitectureParse.ParseLayer (list [0]' input);  	layer2 = ArchitectureParse.ParseLayer (list [1]' -1);  	ArchitectureLayer layer3 = ArchitectureParse.ParseLayer (list [2]' output);  	count = layer.Count;  	do {  		num2 = layer3.Count;  	}  	while ((((uint)count) - ((uint)output)) < 0);  	if (layer2.Name.Equals ("Gaussian"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.Gaussian;  		goto Label_003E;  	}  	if (layer2.Name.Equals ("Multiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.Multiquadric;  		goto Label_003E;  	}  	while (layer2.Name.Equals ("InverseMultiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  		gaussian = RBFEnum.InverseMultiquadric;  		if (0 == 0) {  			goto Label_003E;  		}  		if (2 == 0) {  			goto Label_0055;  		}  	}  	goto Label_005A;  }  
Magic Number,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,The following statement contains a magic number: if (list.Count != 3) {  	throw new EncogError ("SRN Networks must have exactly three elements' separated by ->.");  }  
Magic Number,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,The following statement contains a magic number: while (layer2.Name.Equals ("InverseMultiquadric"' StringComparison.InvariantCultureIgnoreCase)) {  	gaussian = RBFEnum.InverseMultiquadric;  	if (0 == 0) {  		goto Label_003E;  	}  	if (2 == 0) {  		goto Label_0055;  	}  }  
Magic Number,Encog.ML.Factory.Method,SRNFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Method\SRNFactory.cs,Create,The following statement contains a magic number: if (2 == 0) {  	goto Label_0055;  }  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: if (8 != 0) {  	goto Label_00A8;  }  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.eps = 0.001;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.p = 0.1;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.degree = 3.0;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.nu = 0.5;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.cache_size = 100.0;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.kernel_type = 3;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: switch (kernelType) {  case Encog.ML.SVM.KernelType.Linear:  	goto Label_0167;  case Encog.ML.SVM.KernelType.Poly:  	this._paras.kernel_type = 1;  	goto Label_00D1;  case Encog.ML.SVM.KernelType.RadialBasisFunction:  	this._paras.kernel_type = 2;  	goto Label_00D1;  case Encog.ML.SVM.KernelType.Sigmoid:  	goto Label_0134;  default:  	throw new NeuralNetworkError ("Invalid kernel type");  }  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.kernel_type = 2;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: if (8 != 0) {  	goto Label_019C;  }  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.svm_type = 2;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: switch (svmType) {  case Encog.ML.SVM.SVMType.SupportVectorClassification:  	this._paras.svm_type = 0;  	if (0 != 0) {  		goto Label_0017;  	}  	goto Label_019C;  case Encog.ML.SVM.SVMType.NewSupportVectorClassification:  	this._paras.svm_type = 1;  	if ((((uint)theInputCount) | uint.MaxValue) == 0) {  		goto Label_000B;  	}  	goto Label_019C;  case Encog.ML.SVM.SVMType.SupportVectorOneClass:  	goto Label_0256;  case Encog.ML.SVM.SVMType.EpsilonSupportVectorRegression:  	this._paras.svm_type = 3;  	if ((((uint)theInputCount) + ((uint)theInputCount)) <= uint.MaxValue) {  		goto Label_019C;  	}  	goto Label_02B7;  case Encog.ML.SVM.SVMType.NewSupportVectorRegression:  	this._paras.svm_type = 4;  	if (((uint)theInputCount) > uint.MaxValue) {  		return;  	}  	goto Label_019C;  default:  	goto Label_01CD;  }  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: switch (svmType) {  case Encog.ML.SVM.SVMType.SupportVectorClassification:  	this._paras.svm_type = 0;  	if (0 != 0) {  		goto Label_0017;  	}  	goto Label_019C;  case Encog.ML.SVM.SVMType.NewSupportVectorClassification:  	this._paras.svm_type = 1;  	if ((((uint)theInputCount) | uint.MaxValue) == 0) {  		goto Label_000B;  	}  	goto Label_019C;  case Encog.ML.SVM.SVMType.SupportVectorOneClass:  	goto Label_0256;  case Encog.ML.SVM.SVMType.EpsilonSupportVectorRegression:  	this._paras.svm_type = 3;  	if ((((uint)theInputCount) + ((uint)theInputCount)) <= uint.MaxValue) {  		goto Label_019C;  	}  	goto Label_02B7;  case Encog.ML.SVM.SVMType.NewSupportVectorRegression:  	this._paras.svm_type = 4;  	if (((uint)theInputCount) > uint.MaxValue) {  		return;  	}  	goto Label_019C;  default:  	goto Label_01CD;  }  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.svm_type = 3;  
Magic Number,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,SupportVectorMachine,The following statement contains a magic number: this._paras.svm_type = 4;  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (-2 == 0) {  	goto Label_023F;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (3 != 0) {  	goto Label_000B;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (0 == 0) {  	if (0 == 0) {  		while (true) {  			machine.Params.coef0 = EncogFileSection.ParseDouble (dictionary2' "coef0");  			machine.Params.degree = EncogFileSection.ParseDouble (dictionary2' "degree");  			machine.Params.eps = EncogFileSection.ParseDouble (dictionary2' "eps");  			machine.Params.gamma = EncogFileSection.ParseDouble (dictionary2' "gamma");  			machine.Params.kernel_type = EncogFileSection.ParseInt (dictionary2' "kernelType");  			machine.Params.nr_weight = EncogFileSection.ParseInt (dictionary2' "nrWeight");  			machine.Params.nu = EncogFileSection.ParseDouble (dictionary2' "nu");  			machine.Params.p = EncogFileSection.ParseDouble (dictionary2' "p");  			if (0 == 0) {  				machine.Params.probability = EncogFileSection.ParseInt (dictionary2' "probability");  				if (-2147483648 == 0) {  					goto Label_001D;  				}  				machine.Params.shrinking = EncogFileSection.ParseInt (dictionary2' "shrinking");  				machine.Params.svm_type = EncogFileSection.ParseInt (dictionary2' "svmType");  				machine.Params.weight = EncogFileSection.ParseDoubleArray (dictionary2' "weight");  				machine.Params.weight_label = EncogFileSection.ParseIntArray (dictionary2' "weightLabel");  				if (0xff != 0) {  					goto Label_001D;  				}  				goto Label_002F;  			}  		}  	}  	goto Label_000B;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (0 == 0) {  	while (true) {  		machine.Params.coef0 = EncogFileSection.ParseDouble (dictionary2' "coef0");  		machine.Params.degree = EncogFileSection.ParseDouble (dictionary2' "degree");  		machine.Params.eps = EncogFileSection.ParseDouble (dictionary2' "eps");  		machine.Params.gamma = EncogFileSection.ParseDouble (dictionary2' "gamma");  		machine.Params.kernel_type = EncogFileSection.ParseInt (dictionary2' "kernelType");  		machine.Params.nr_weight = EncogFileSection.ParseInt (dictionary2' "nrWeight");  		machine.Params.nu = EncogFileSection.ParseDouble (dictionary2' "nu");  		machine.Params.p = EncogFileSection.ParseDouble (dictionary2' "p");  		if (0 == 0) {  			machine.Params.probability = EncogFileSection.ParseInt (dictionary2' "probability");  			if (-2147483648 == 0) {  				goto Label_001D;  			}  			machine.Params.shrinking = EncogFileSection.ParseInt (dictionary2' "shrinking");  			machine.Params.svm_type = EncogFileSection.ParseInt (dictionary2' "svmType");  			machine.Params.weight = EncogFileSection.ParseDoubleArray (dictionary2' "weight");  			machine.Params.weight_label = EncogFileSection.ParseIntArray (dictionary2' "weightLabel");  			if (0xff != 0) {  				goto Label_001D;  			}  			goto Label_002F;  		}  	}  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: while (true) {  	machine.Params.coef0 = EncogFileSection.ParseDouble (dictionary2' "coef0");  	machine.Params.degree = EncogFileSection.ParseDouble (dictionary2' "degree");  	machine.Params.eps = EncogFileSection.ParseDouble (dictionary2' "eps");  	machine.Params.gamma = EncogFileSection.ParseDouble (dictionary2' "gamma");  	machine.Params.kernel_type = EncogFileSection.ParseInt (dictionary2' "kernelType");  	machine.Params.nr_weight = EncogFileSection.ParseInt (dictionary2' "nrWeight");  	machine.Params.nu = EncogFileSection.ParseDouble (dictionary2' "nu");  	machine.Params.p = EncogFileSection.ParseDouble (dictionary2' "p");  	if (0 == 0) {  		machine.Params.probability = EncogFileSection.ParseInt (dictionary2' "probability");  		if (-2147483648 == 0) {  			goto Label_001D;  		}  		machine.Params.shrinking = EncogFileSection.ParseInt (dictionary2' "shrinking");  		machine.Params.svm_type = EncogFileSection.ParseInt (dictionary2' "svmType");  		machine.Params.weight = EncogFileSection.ParseDoubleArray (dictionary2' "weight");  		machine.Params.weight_label = EncogFileSection.ParseIntArray (dictionary2' "weightLabel");  		if (0xff != 0) {  			goto Label_001D;  		}  		goto Label_002F;  	}  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (0 == 0) {  	machine.Params.probability = EncogFileSection.ParseInt (dictionary2' "probability");  	if (-2147483648 == 0) {  		goto Label_001D;  	}  	machine.Params.shrinking = EncogFileSection.ParseInt (dictionary2' "shrinking");  	machine.Params.svm_type = EncogFileSection.ParseInt (dictionary2' "svmType");  	machine.Params.weight = EncogFileSection.ParseDoubleArray (dictionary2' "weight");  	machine.Params.weight_label = EncogFileSection.ParseIntArray (dictionary2' "weightLabel");  	if (0xff != 0) {  		goto Label_001D;  	}  	goto Label_002F;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_001D;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("SVM") && section.SubSectionName.Equals ("SVM-PARAM")) {  	if (8 != 0) {  		if (3 == 0) {  			goto Label_001D;  		}  		goto Label_0237;  	}  }  else {  	goto Label_002F;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("SVM") && section.SubSectionName.Equals ("SVM-PARAM")) {  	if (8 != 0) {  		if (3 == 0) {  			goto Label_001D;  		}  		goto Label_0237;  	}  }  else {  	goto Label_002F;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (8 != 0) {  	if (3 == 0) {  		goto Label_001D;  	}  	goto Label_0237;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (8 != 0) {  	if (3 == 0) {  		goto Label_001D;  	}  	goto Label_0237;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Read,The following statement contains a magic number: if (3 == 0) {  	goto Label_001D;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: if (0 == 0) {  	while (true) {  		helper.AddSubSection ("PARAMS");  		helper.AddProperties (machine.Properties);  		helper.AddSubSection ("SVM-PARAM");  		helper.WriteProperty ("inputCount"' machine.InputCount);  		helper.WriteProperty ("C"' machine.Params.C);  		if (0 == 0) {  			helper.WriteProperty ("cacheSize"' machine.Params.cache_size);  			if (-2 == 0) {  				goto Label_026A;  			}  			helper.WriteProperty ("coef0"' machine.Params.coef0);  			helper.WriteProperty ("degree"' machine.Params.degree);  			helper.WriteProperty ("eps"' machine.Params.eps);  			helper.WriteProperty ("gamma"' machine.Params.gamma);  			helper.WriteProperty ("kernelType"' machine.Params.kernel_type);  		}  		helper.WriteProperty ("nrWeight"' machine.Params.nr_weight);  		if (1 != 0) {  			helper.WriteProperty ("nu"' machine.Params.nu);  			helper.WriteProperty ("p"' machine.Params.p);  			helper.WriteProperty ("probability"' machine.Params.probability);  			helper.WriteProperty ("shrinking"' machine.Params.shrinking);  			helper.WriteProperty ("svmType"' machine.Params.svm_type);  			helper.WriteProperty ("weight"' machine.Params.weight);  			helper.WriteProperty ("weightLabel"' machine.Params.weight_label);  			break;  		}  	}  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: while (true) {  	helper.AddSubSection ("PARAMS");  	helper.AddProperties (machine.Properties);  	helper.AddSubSection ("SVM-PARAM");  	helper.WriteProperty ("inputCount"' machine.InputCount);  	helper.WriteProperty ("C"' machine.Params.C);  	if (0 == 0) {  		helper.WriteProperty ("cacheSize"' machine.Params.cache_size);  		if (-2 == 0) {  			goto Label_026A;  		}  		helper.WriteProperty ("coef0"' machine.Params.coef0);  		helper.WriteProperty ("degree"' machine.Params.degree);  		helper.WriteProperty ("eps"' machine.Params.eps);  		helper.WriteProperty ("gamma"' machine.Params.gamma);  		helper.WriteProperty ("kernelType"' machine.Params.kernel_type);  	}  	helper.WriteProperty ("nrWeight"' machine.Params.nr_weight);  	if (1 != 0) {  		helper.WriteProperty ("nu"' machine.Params.nu);  		helper.WriteProperty ("p"' machine.Params.p);  		helper.WriteProperty ("probability"' machine.Params.probability);  		helper.WriteProperty ("shrinking"' machine.Params.shrinking);  		helper.WriteProperty ("svmType"' machine.Params.svm_type);  		helper.WriteProperty ("weight"' machine.Params.weight);  		helper.WriteProperty ("weightLabel"' machine.Params.weight_label);  		break;  	}  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: if (0 == 0) {  	helper.WriteProperty ("cacheSize"' machine.Params.cache_size);  	if (-2 == 0) {  		goto Label_026A;  	}  	helper.WriteProperty ("coef0"' machine.Params.coef0);  	helper.WriteProperty ("degree"' machine.Params.degree);  	helper.WriteProperty ("eps"' machine.Params.eps);  	helper.WriteProperty ("gamma"' machine.Params.gamma);  	helper.WriteProperty ("kernelType"' machine.Params.kernel_type);  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: if (-2 == 0) {  	goto Label_026A;  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: while (true) {  	helper.Flush ();  	if (-2147483648 != 0) {  		return;  	}  	if (0 != 0) {  		goto Label_0092;  	}  }  
Magic Number,Encog.ML.SVM,PersistSVM,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\PersistSVM.cs,Save,The following statement contains a magic number: if (-2147483648 != 0) {  	return;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: x0a6250b187271ea3.xa59bff7708de3a18 = num22 / 2.0;  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if (flag2) {  	num21 = 0;  	Label_019F:  	if (num21 < x9fc3ee03a439f6f0) {  		this.x0043d86b33a97e1a [num21] -= num11 * numArray4 [num21];  		num21++;  		if ((((uint)num20) | 8) != 0) {  			if ((((uint)num5) - ((uint)xcf0012763522c2a0)) <= uint.MaxValue) {  				if ((((uint)xc7984f54f516d44e) - ((uint)num13)) < 0) {  					goto Label_0ACA;  				}  				goto Label_019F;  			}  			goto Label_0165;  		}  		goto Label_0277;  	}  	goto Label_0A81;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if (num21 < x9fc3ee03a439f6f0) {  	this.x0043d86b33a97e1a [num21] -= num11 * numArray4 [num21];  	num21++;  	if ((((uint)num20) | 8) != 0) {  		if ((((uint)num5) - ((uint)xcf0012763522c2a0)) <= uint.MaxValue) {  			if ((((uint)xc7984f54f516d44e) - ((uint)num13)) < 0) {  				goto Label_0ACA;  			}  			goto Label_019F;  		}  		goto Label_0165;  	}  	goto Label_0277;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if ((((uint)num20) | 8) != 0) {  	if ((((uint)num5) - ((uint)xcf0012763522c2a0)) <= uint.MaxValue) {  		if ((((uint)xc7984f54f516d44e) - ((uint)num13)) < 0) {  			goto Label_0ACA;  		}  		goto Label_019F;  	}  	goto Label_0165;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if ((((uint)flag2) | 3) == 0) {  	goto Label_07FC;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if ((((uint)num10) | 2) != 0) {  	goto Label_05B9;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: numArray2 = new int[2];  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if (num5 < x9fc3ee03a439f6f0) {  	this.x0043d86b33a97e1a [num5] += this.get_x857912840ffd015f (num3) * numArray [num5];  	num5++;  	if ((((uint)num3) & 0) == 0) {  		if ((((uint)flag2) | 15) != 0) {  			goto Label_0ACA;  		}  		if (((uint)flag) < 0) {  			goto Label_01F3;  		}  		goto Label_0AE8;  	}  	goto Label_0BAF;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if ((((uint)num3) & 0) == 0) {  	if ((((uint)flag2) | 15) != 0) {  		goto Label_0ACA;  	}  	if (((uint)flag) < 0) {  		goto Label_01F3;  	}  	goto Label_0AE8;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if ((((uint)flag2) | 15) != 0) {  	goto Label_0ACA;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x22c1a1a99dd27273,The following statement contains a magic number: if ((((uint)num7) | 8) != 0) {  	goto Label_0B8A;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3ba1f55281c03c4f,The following statement contains a magic number: if (this.x6ad505c7ef981b0e [x7b28e8a789372508] < this.get_x857912840ffd015f (x7b28e8a789372508)) {  	if (this.x6ad505c7ef981b0e [x7b28e8a789372508] > 0.0) {  		this.xc2730e9ae2855ac0 [x7b28e8a789372508] = 2;  		if ((((uint)x7b28e8a789372508) + ((uint)x7b28e8a789372508)) < 0) {  		}  	}  	else {  		this.xc2730e9ae2855ac0 [x7b28e8a789372508] = 0;  	}  }  else {  	this.xc2730e9ae2855ac0 [x7b28e8a789372508] = 1;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3ba1f55281c03c4f,The following statement contains a magic number: if (this.x6ad505c7ef981b0e [x7b28e8a789372508] > 0.0) {  	this.xc2730e9ae2855ac0 [x7b28e8a789372508] = 2;  	if ((((uint)x7b28e8a789372508) + ((uint)x7b28e8a789372508)) < 0) {  	}  }  else {  	this.xc2730e9ae2855ac0 [x7b28e8a789372508] = 0;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3ba1f55281c03c4f,The following statement contains a magic number: this.xc2730e9ae2855ac0 [x7b28e8a789372508] = 2;  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num) - ((uint)num2)) > uint.MaxValue) {  	if (2 != 0) {  		goto Label_0132;  	}  	goto Label_014A;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if (2 != 0) {  	goto Label_0132;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if (4 != 0) {  	goto Label_020B;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if (((uint)num3) >= 0) {  	if ((((uint)num) | 2) == 0) {  		goto Label_020B;  	}  	goto Label_01BE;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num) | 2) == 0) {  	goto Label_020B;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (num3 >= this.xa6ab0c05af75ec81) {  	Label_010F:  	if (this.xedd159ce5b36c393 (num3)) {  		if (this.x1e218ceaee1bb583 [num3] != 1) {  			goto Label_0063;  		}  		if ((((uint)num4) <= uint.MaxValue) && (-this.x26463655896fd90a [num3] >= num4)) {  			if (((uint)num) >= 0) {  				goto Label_008E;  			}  			goto Label_010F;  		}  		goto Label_000C;  	}  }  else {  	if (2 != 0) {  		return;  	}  	goto Label_0063;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (-(num4 + num5) <= (this.xc7984f54f516d44e * 10.0)) {  	goto Label_0190;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (num3 < this.xa6ab0c05af75ec81) {  	if (!this.xedd159ce5b36c393 (num3)) {  		if (!this.xafe0f470f560f6d3 (num3)) {  			goto Label_01D7;  		}  		if (this.x1e218ceaee1bb583 [num3] != 1) {  			if (this.x26463655896fd90a [num3] < num4) {  				goto Label_0234;  			}  			goto Label_01D7;  		}  		if (((uint)num4) >= 0) {  			if (((((uint)num5) | 15) != 0) && (((uint)num4) <= uint.MaxValue)) {  				if (this.x26463655896fd90a [num3] >= num5) {  					goto Label_01D7;  				}  				if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  					goto Label_0234;  				}  				goto Label_03D2;  			}  			if ((((uint)num3) + ((uint)num5)) > uint.MaxValue) {  				goto Label_0375;  			}  			goto Label_01D7;  		}  		if (((uint)num2) <= uint.MaxValue) {  			goto Label_01DB;  		}  	}  	if (this.x1e218ceaee1bb583 [num3] == 1) {  		if (-this.x26463655896fd90a [num3] >= num4) {  			goto Label_01D7;  		}  		goto Label_0234;  	}  	if (-this.x26463655896fd90a [num3] < num5) {  		goto Label_0234;  	}  	goto Label_01D7;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (!this.xedd159ce5b36c393 (num3)) {  	if (!this.xafe0f470f560f6d3 (num3)) {  		goto Label_01D7;  	}  	if (this.x1e218ceaee1bb583 [num3] != 1) {  		if (this.x26463655896fd90a [num3] < num4) {  			goto Label_0234;  		}  		goto Label_01D7;  	}  	if (((uint)num4) >= 0) {  		if (((((uint)num5) | 15) != 0) && (((uint)num4) <= uint.MaxValue)) {  			if (this.x26463655896fd90a [num3] >= num5) {  				goto Label_01D7;  			}  			if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  				goto Label_0234;  			}  			goto Label_03D2;  		}  		if ((((uint)num3) + ((uint)num5)) > uint.MaxValue) {  			goto Label_0375;  		}  		goto Label_01D7;  	}  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_01DB;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (((uint)num4) >= 0) {  	if (((((uint)num5) | 15) != 0) && (((uint)num4) <= uint.MaxValue)) {  		if (this.x26463655896fd90a [num3] >= num5) {  			goto Label_01D7;  		}  		if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  			goto Label_0234;  		}  		goto Label_03D2;  	}  	if ((((uint)num3) + ((uint)num5)) > uint.MaxValue) {  		goto Label_0375;  	}  	goto Label_01D7;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (((((uint)num5) | 15) != 0) && (((uint)num4) <= uint.MaxValue)) {  	if (this.x26463655896fd90a [num3] >= num5) {  		goto Label_01D7;  	}  	if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  		goto Label_0234;  	}  	goto Label_03D2;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x619c04c90d9075b2,The following statement contains a magic number: return (this.xc2730e9ae2855ac0 [x7b28e8a789372508] == 2);  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x73ce32110d615317,The following statement contains a magic number: if (num2 <= 0) {  	num = (num3 + num4) / 2.0;  }  else if ((((uint)num4) - ((uint)num)) <= uint.MaxValue) {  	return (num5 / ((double)num2));  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x73ce32110d615317,The following statement contains a magic number: num = (num3 + num4) / 2.0;  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x73ce32110d615317,The following statement contains a magic number: if (this.xedd159ce5b36c393 (num6)) {  	if (this.x1e218ceaee1bb583 [num6] <= 0) {  		num4 = Math.Max (num4' num7);  		goto Label_0042;  	}  	num3 = Math.Min (num3' num7);  	if ((((uint)num6) | 3) != 0) {  		goto Label_0042;  	}  	goto Label_017F;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,x73ce32110d615317,The following statement contains a magic number: if ((((uint)num6) | 3) != 0) {  	goto Label_0042;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (num < this.xa6ab0c05af75ec81) {  	Label_0057:  	if (this.x619c04c90d9075b2 (num)) {  		float[] numArray = this.x6648d9580110b138.get_x6648d9580110b138 (num' this.x9fc3ee03a439f6f0);  		Label_00B6:  		if (((uint)num) >= 0) {  			int num3;  			num2 = this.x6ad505c7ef981b0e [num];  			if ((((uint)num) + ((uint)num)) >= 0) {  				if (8 == 0) {  					goto Label_010B;  				}  				if (-2 == 0) {  					goto Label_00B6;  				}  				num3 = this.xa6ab0c05af75ec81;  			}  			while (num3 < this.x9fc3ee03a439f6f0) {  				this.x26463655896fd90a [num3] += num2 * numArray [num3];  				num3++;  			}  			if (1 != 0) {  				goto Label_0016;  			}  			goto Label_0057;  		}  	}  	goto Label_0016;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (num < this.xa6ab0c05af75ec81) {  	Label_0057:  	if (this.x619c04c90d9075b2 (num)) {  		float[] numArray = this.x6648d9580110b138.get_x6648d9580110b138 (num' this.x9fc3ee03a439f6f0);  		Label_00B6:  		if (((uint)num) >= 0) {  			int num3;  			num2 = this.x6ad505c7ef981b0e [num];  			if ((((uint)num) + ((uint)num)) >= 0) {  				if (8 == 0) {  					goto Label_010B;  				}  				if (-2 == 0) {  					goto Label_00B6;  				}  				num3 = this.xa6ab0c05af75ec81;  			}  			while (num3 < this.x9fc3ee03a439f6f0) {  				this.x26463655896fd90a [num3] += num2 * numArray [num3];  				num3++;  			}  			if (1 != 0) {  				goto Label_0016;  			}  			goto Label_0057;  		}  	}  	goto Label_0016;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (this.x619c04c90d9075b2 (num)) {  	float[] numArray = this.x6648d9580110b138.get_x6648d9580110b138 (num' this.x9fc3ee03a439f6f0);  	Label_00B6:  	if (((uint)num) >= 0) {  		int num3;  		num2 = this.x6ad505c7ef981b0e [num];  		if ((((uint)num) + ((uint)num)) >= 0) {  			if (8 == 0) {  				goto Label_010B;  			}  			if (-2 == 0) {  				goto Label_00B6;  			}  			num3 = this.xa6ab0c05af75ec81;  		}  		while (num3 < this.x9fc3ee03a439f6f0) {  			this.x26463655896fd90a [num3] += num2 * numArray [num3];  			num3++;  		}  		if (1 != 0) {  			goto Label_0016;  		}  		goto Label_0057;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (this.x619c04c90d9075b2 (num)) {  	float[] numArray = this.x6648d9580110b138.get_x6648d9580110b138 (num' this.x9fc3ee03a439f6f0);  	Label_00B6:  	if (((uint)num) >= 0) {  		int num3;  		num2 = this.x6ad505c7ef981b0e [num];  		if ((((uint)num) + ((uint)num)) >= 0) {  			if (8 == 0) {  				goto Label_010B;  			}  			if (-2 == 0) {  				goto Label_00B6;  			}  			num3 = this.xa6ab0c05af75ec81;  		}  		while (num3 < this.x9fc3ee03a439f6f0) {  			this.x26463655896fd90a [num3] += num2 * numArray [num3];  			num3++;  		}  		if (1 != 0) {  			goto Label_0016;  		}  		goto Label_0057;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (((uint)num) >= 0) {  	int num3;  	num2 = this.x6ad505c7ef981b0e [num];  	if ((((uint)num) + ((uint)num)) >= 0) {  		if (8 == 0) {  			goto Label_010B;  		}  		if (-2 == 0) {  			goto Label_00B6;  		}  		num3 = this.xa6ab0c05af75ec81;  	}  	while (num3 < this.x9fc3ee03a439f6f0) {  		this.x26463655896fd90a [num3] += num2 * numArray [num3];  		num3++;  	}  	if (1 != 0) {  		goto Label_0016;  	}  	goto Label_0057;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (((uint)num) >= 0) {  	int num3;  	num2 = this.x6ad505c7ef981b0e [num];  	if ((((uint)num) + ((uint)num)) >= 0) {  		if (8 == 0) {  			goto Label_010B;  		}  		if (-2 == 0) {  			goto Label_00B6;  		}  		num3 = this.xa6ab0c05af75ec81;  	}  	while (num3 < this.x9fc3ee03a439f6f0) {  		this.x26463655896fd90a [num3] += num2 * numArray [num3];  		num3++;  	}  	if (1 != 0) {  		goto Label_0016;  	}  	goto Label_0057;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if ((((uint)num) + ((uint)num)) >= 0) {  	if (8 == 0) {  		goto Label_010B;  	}  	if (-2 == 0) {  		goto Label_00B6;  	}  	num3 = this.xa6ab0c05af75ec81;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if ((((uint)num) + ((uint)num)) >= 0) {  	if (8 == 0) {  		goto Label_010B;  	}  	if (-2 == 0) {  		goto Label_00B6;  	}  	num3 = this.xa6ab0c05af75ec81;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (8 == 0) {  	goto Label_010B;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf29af8ddc5c68ae7,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf29af8ddc5c68ae7.cs,xf5b89b08d9497860,The following statement contains a magic number: if (-2 == 0) {  	goto Label_00B6;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,The following statement contains a magic number: if ((((uint)num) | 0x80000000) != 0) {  	this.x83735b10b6a3d76d = param.degree;  	do {  		this.xc7c4e9c099884228 = param.gamma;  		this.x987b3666f8a37f90 = param.coef0;  		if (0xff != 0) {  			this.x08db3aeabb253cb1 = (svm_node[][])x_.Clone ();  			if (this.xbcd9612004129925 != 2) {  				this.x4f9e236643454e9f = null;  				if (0 == 0) {  					if (0 == 0) {  						return;  					}  					goto Label_00C5;  				}  				goto Label_0075;  			}  			this.x4f9e236643454e9f = new double[l];  		}  	}  	while (2 == 0);  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,The following statement contains a magic number: if ((((uint)num) | 0x80000000) != 0) {  	this.x83735b10b6a3d76d = param.degree;  	do {  		this.xc7c4e9c099884228 = param.gamma;  		this.x987b3666f8a37f90 = param.coef0;  		if (0xff != 0) {  			this.x08db3aeabb253cb1 = (svm_node[][])x_.Clone ();  			if (this.xbcd9612004129925 != 2) {  				this.x4f9e236643454e9f = null;  				if (0 == 0) {  					if (0 == 0) {  						return;  					}  					goto Label_00C5;  				}  				goto Label_0075;  			}  			this.x4f9e236643454e9f = new double[l];  		}  	}  	while (2 == 0);  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,The following statement contains a magic number: do {  	this.xc7c4e9c099884228 = param.gamma;  	this.x987b3666f8a37f90 = param.coef0;  	if (0xff != 0) {  		this.x08db3aeabb253cb1 = (svm_node[][])x_.Clone ();  		if (this.xbcd9612004129925 != 2) {  			this.x4f9e236643454e9f = null;  			if (0 == 0) {  				if (0 == 0) {  					return;  				}  				goto Label_00C5;  			}  			goto Label_0075;  		}  		this.x4f9e236643454e9f = new double[l];  	}  }  while (2 == 0);  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,The following statement contains a magic number: do {  	this.xc7c4e9c099884228 = param.gamma;  	this.x987b3666f8a37f90 = param.coef0;  	if (0xff != 0) {  		this.x08db3aeabb253cb1 = (svm_node[][])x_.Clone ();  		if (this.xbcd9612004129925 != 2) {  			this.x4f9e236643454e9f = null;  			if (0 == 0) {  				if (0 == 0) {  					return;  				}  				goto Label_00C5;  			}  			goto Label_0075;  		}  		this.x4f9e236643454e9f = new double[l];  	}  }  while (2 == 0);  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,The following statement contains a magic number: if (0xff != 0) {  	this.x08db3aeabb253cb1 = (svm_node[][])x_.Clone ();  	if (this.xbcd9612004129925 != 2) {  		this.x4f9e236643454e9f = null;  		if (0 == 0) {  			if (0 == 0) {  				return;  			}  			goto Label_00C5;  		}  		goto Label_0075;  	}  	this.x4f9e236643454e9f = new double[l];  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xf094e3229d63c9be,The following statement contains a magic number: if (this.xbcd9612004129925 != 2) {  	this.x4f9e236643454e9f = null;  	if (0 == 0) {  		if (0 == 0) {  			return;  		}  		goto Label_00C5;  	}  	goto Label_0075;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The following statement contains a magic number: switch (this.xbcd9612004129925) {  case 0:  	return x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]);  case 1:  	return Math.Pow ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90' this.x83735b10b6a3d76d);  case 2:  	return Math.Exp (-this.xc7c4e9c099884228 * ((this.x4f9e236643454e9f [x7b28e8a789372508] + this.x4f9e236643454e9f [x1148d0e8cc982c04]) - (2.0 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]))));  case 3:  	return xcb156489dc62ed23 ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90);  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The following statement contains a magic number: switch (this.xbcd9612004129925) {  case 0:  	return x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]);  case 1:  	return Math.Pow ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90' this.x83735b10b6a3d76d);  case 2:  	return Math.Exp (-this.xc7c4e9c099884228 * ((this.x4f9e236643454e9f [x7b28e8a789372508] + this.x4f9e236643454e9f [x1148d0e8cc982c04]) - (2.0 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]))));  case 3:  	return xcb156489dc62ed23 ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90);  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The following statement contains a magic number: switch (this.xbcd9612004129925) {  case 0:  	return x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]);  case 1:  	return Math.Pow ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90' this.x83735b10b6a3d76d);  case 2:  	return Math.Exp (-this.xc7c4e9c099884228 * ((this.x4f9e236643454e9f [x7b28e8a789372508] + this.x4f9e236643454e9f [x1148d0e8cc982c04]) - (2.0 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]))));  case 3:  	return xcb156489dc62ed23 ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90);  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The following statement contains a magic number: return Math.Exp (-this.xc7c4e9c099884228 * ((this.x4f9e236643454e9f [x7b28e8a789372508] + this.x4f9e236643454e9f [x1148d0e8cc982c04]) - (2.0 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]))));  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x99240096a9e3842c,The following statement contains a magic number: if (((((uint)length) | 4) != 0) && ((((uint)length) + ((uint)num)) >= 0)) {  	if ((((uint)num) & 0) != 0) {  		goto Label_00A4;  	}  	if ((((uint)num3) + ((uint)num5)) >= 0) {  		return num;  	}  	goto Label_00D0;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xc60aa42cfbd0c1ed,The following statement contains a magic number: switch (num7) {  case 0:  	return x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583);  case 1:  	return Math.Pow ((x0d173b5435b4d6ad.gamma * x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583)) + x0d173b5435b4d6ad.coef0' x0d173b5435b4d6ad.degree);  case 2:  	num = 0.0;  	length = x08db3aeabb253cb1.Length;  	num3 = x1e218ceaee1bb583.Length;  	num4 = 0;  	num5 = 0;  	goto Label_0095;  case 3:  	return xcb156489dc62ed23 ((x0d173b5435b4d6ad.gamma * x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583)) + x0d173b5435b4d6ad.coef0);  default:  	goto Label_021B;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xc60aa42cfbd0c1ed,The following statement contains a magic number: switch (num7) {  case 0:  	return x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583);  case 1:  	return Math.Pow ((x0d173b5435b4d6ad.gamma * x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583)) + x0d173b5435b4d6ad.coef0' x0d173b5435b4d6ad.degree);  case 2:  	num = 0.0;  	length = x08db3aeabb253cb1.Length;  	num3 = x1e218ceaee1bb583.Length;  	num4 = 0;  	num5 = 0;  	goto Label_0095;  case 3:  	return xcb156489dc62ed23 ((x0d173b5435b4d6ad.gamma * x99240096a9e3842c (x08db3aeabb253cb1' x1e218ceaee1bb583)) + x0d173b5435b4d6ad.coef0);  default:  	goto Label_021B;  }  
Magic Number,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,xcb156489dc62ed23,The following statement contains a magic number: return (1.0 - (2.0 / ((num * num) + 1.0)));  
Magic Number,Encog.MathUtil.LIBSVM,xa68541a68dd6f460,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xa68541a68dd6f460.cs,xa68541a68dd6f460,The following statement contains a magic number: this.x1f31bf6ca58166a1 = new xb730a77005d16cc1 (prob.l' (int)(param.cache_size * 1048576.0));  
Magic Number,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,xb730a77005d16cc1,The following statement contains a magic number: this.x0ceec69a97f73617 /= 4;  
Magic Number,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,xb730a77005d16cc1,The following statement contains a magic number: this.x0ceec69a97f73617 -= this.x9fc3ee03a439f6f0 * 4;  
Magic Number,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,get_x4a3f0a05c02f235f,The following statement contains a magic number: if ((((uint)num) | 8) != 0) {  	num2 = xfadcfee.xb5964a891b6cf7c3;  	xfadcfee.xb5964a891b6cf7c3 = xb5964a891b6cf7c3;  	xb5964a891b6cf7c3 = num2;  	goto Label_0023;  }  
Magic Number,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,x89083ecc6edaa4e0,The following statement contains a magic number: if ((((uint)num) | 2) != 0) {  	goto Label_01B3;  }  
Magic Number,Encog.MathUtil.LIBSVM,xb730a77005d16cc1,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xb730a77005d16cc1.cs,x89083ecc6edaa4e0,The following statement contains a magic number: if (2 != 0) {  	this.x4cbb0cc714782977 [x1148d0e8cc982c04].xb5964a891b6cf7c3 = num;  	if ((0 == 0) && (this.x4cbb0cc714782977 [x7b28e8a789372508].xb5964a891b6cf7c3 <= 0)) {  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_01E2;  		}  		goto Label_01B3;  	}  	this.xb91b0c69bab21504 (this.x4cbb0cc714782977 [x7b28e8a789372508]);  	goto Label_01E2;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num9) | 2) == 0) {  	goto Label_023B;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num2) | 2) == 0) {  	goto Label_0175;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if (!this.xafe0f470f560f6d3 (num9)) {  	if ((((uint)num4) - ((uint)num9)) <= uint.MaxValue) {  		if ((((uint)num7) | 15) == 0) {  			if ((((uint)num2) - ((uint)num4)) > uint.MaxValue) {  				goto Label_0360;  			}  			if (-2147483648 == 0) {  				goto Label_023B;  			}  		}  		if (-base.x26463655896fd90a [num9] > num5) {  			num5 = -base.x26463655896fd90a [num9];  			num6 = num9;  		}  		else {  			goto Label_01BC;  		}  	}  	if ((((uint)num6) - ((uint)num3)) < 0) {  		goto Label_023B;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if (!this.xafe0f470f560f6d3 (num9)) {  	if ((((uint)num4) - ((uint)num9)) <= uint.MaxValue) {  		if ((((uint)num7) | 15) == 0) {  			if ((((uint)num2) - ((uint)num4)) > uint.MaxValue) {  				goto Label_0360;  			}  			if (-2147483648 == 0) {  				goto Label_023B;  			}  		}  		if (-base.x26463655896fd90a [num9] > num5) {  			num5 = -base.x26463655896fd90a [num9];  			num6 = num9;  		}  		else {  			goto Label_01BC;  		}  	}  	if ((((uint)num6) - ((uint)num3)) < 0) {  		goto Label_023B;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num4) - ((uint)num9)) <= uint.MaxValue) {  	if ((((uint)num7) | 15) == 0) {  		if ((((uint)num2) - ((uint)num4)) > uint.MaxValue) {  			goto Label_0360;  		}  		if (-2147483648 == 0) {  			goto Label_023B;  		}  	}  	if (-base.x26463655896fd90a [num9] > num5) {  		num5 = -base.x26463655896fd90a [num9];  		num6 = num9;  	}  	else {  		goto Label_01BC;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num4) - ((uint)num9)) <= uint.MaxValue) {  	if ((((uint)num7) | 15) == 0) {  		if ((((uint)num2) - ((uint)num4)) > uint.MaxValue) {  			goto Label_0360;  		}  		if (-2147483648 == 0) {  			goto Label_023B;  		}  	}  	if (-base.x26463655896fd90a [num9] > num5) {  		num5 = -base.x26463655896fd90a [num9];  		num6 = num9;  	}  	else {  		goto Label_01BC;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num7) | 15) == 0) {  	if ((((uint)num2) - ((uint)num4)) > uint.MaxValue) {  		goto Label_0360;  	}  	if (-2147483648 == 0) {  		goto Label_023B;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if ((((uint)num7) | 15) == 0) {  	if ((((uint)num2) - ((uint)num4)) > uint.MaxValue) {  		goto Label_0360;  	}  	if (-2147483648 == 0) {  		goto Label_023B;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x3c0f9db5299ea9bb,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_023B;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (Math.Max (-(num6 + num7)' -(num8 + num9)) <= (base.xc7984f54f516d44e * 10.0)) {  	goto Label_0339;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,The following statement contains a magic number: if ((((uint)num) | 15) != 0) {  	goto Label_014D;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (-2 != 0) {  	goto Label_026D;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,The following statement contains a magic number: if ((((uint)num5) | 0x7fffffff) != 0) {  	if (-2 != 0) {  		goto Label_013A;  	}  	goto Label_009B;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x572e6a691aa05e0a,The following statement contains a magic number: if (-2 != 0) {  	goto Label_013A;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: num11 = (num4 + num6) / 2.0;  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: this.x0a6250b187271ea3.xb55b340ae3a3e4e0 = (num10 + num11) / 2.0;  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: return ((num10 - num11) / 2.0);  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if (num9 < base.xa6ab0c05af75ec81) {  	if (base.x1e218ceaee1bb583 [num9] != 1) {  		if ((((uint)num2) | 8) != 0) {  			goto Label_012B;  		}  		goto Label_02A2;  	}  	goto Label_019A;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if (base.x1e218ceaee1bb583 [num9] != 1) {  	if ((((uint)num2) | 8) != 0) {  		goto Label_012B;  	}  	goto Label_02A2;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if ((((uint)num2) | 8) != 0) {  	goto Label_012B;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if (num <= 0) {  	num10 = (num3 + num5) / 2.0;  	goto Label_001C;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: num10 = (num3 + num5) / 2.0;  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if ((((uint)num2) & 0) == 0) {  	num2 = 0;  	num3 = xf29af8ddc5c68ae7.x3f5ff8076fbf0702;  	num4 = xf29af8ddc5c68ae7.x3f5ff8076fbf0702;  	num5 = -xf29af8ddc5c68ae7.x3f5ff8076fbf0702;  	if ((((uint)num9) - ((uint)num3)) > uint.MaxValue) {  		goto Label_011D;  	}  	if ((((uint)num3) + ((uint)num4)) <= uint.MaxValue) {  		if ((((uint)num4) | 3) == 0) {  			goto Label_01A4;  		}  		num6 = -xf29af8ddc5c68ae7.x3f5ff8076fbf0702;  		num7 = 0.0;  		if ((((uint)num6) - ((uint)num9)) < 0) {  			if ((((uint)num11) & 0) == 0) {  				goto Label_019A;  			}  			goto Label_01E7;  		}  		num8 = 0.0;  		num9 = 0;  		goto Label_0088;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if ((((uint)num3) + ((uint)num4)) <= uint.MaxValue) {  	if ((((uint)num4) | 3) == 0) {  		goto Label_01A4;  	}  	num6 = -xf29af8ddc5c68ae7.x3f5ff8076fbf0702;  	num7 = 0.0;  	if ((((uint)num6) - ((uint)num9)) < 0) {  		if ((((uint)num11) & 0) == 0) {  			goto Label_019A;  		}  		goto Label_01E7;  	}  	num8 = 0.0;  	num9 = 0;  	goto Label_0088;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4964dba9a96eb09f,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4964dba9a96eb09f.cs,x73ce32110d615317,The following statement contains a magic number: if ((((uint)num4) | 3) == 0) {  	goto Label_01A4;  }  
Magic Number,Encog.MathUtil.LIBSVM,x4607fc510d7665cf,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4607fc510d7665cf.cs,x4607fc510d7665cf,The following statement contains a magic number: this.x1f31bf6ca58166a1 = new xb730a77005d16cc1 (prob.l' (int)(param.cache_size * 1048576.0));  
Magic Number,Encog.MathUtil.LIBSVM,x4607fc510d7665cf,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4607fc510d7665cf.cs,get_x6648d9580110b138,The following statement contains a magic number: if ((num = this.x1f31bf6ca58166a1.get_x4a3f0a05c02f235f (x7b28e8a789372508' numArray' xb5964a891b6cf7c3)) < xb5964a891b6cf7c3) {  	int index = num;  	if (2 == 0) {  		goto Label_002E;  	}  	while (index < xb5964a891b6cf7c3) {  		numArray [0] [index] = (float)this.x1e221c4999144ac5 (x7b28e8a789372508' index);  		index++;  	}  	if (((((uint)index) - ((uint)index)) > uint.MaxValue) || (0 != 0)) {  		goto Label_002E;  	}  }  
Magic Number,Encog.MathUtil.LIBSVM,x4607fc510d7665cf,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\x4607fc510d7665cf.cs,get_x6648d9580110b138,The following statement contains a magic number: if (2 == 0) {  	goto Label_002E;  }  
Magic Number,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,xfbfe48e5ee40f893,The following statement contains a magic number: this.x5cafa8d49ea71ea1 [num2] = new float[2 * this.x9fc3ee03a439f6f0];  
Magic Number,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,xfbfe48e5ee40f893,The following statement contains a magic number: if (num2 < 2) {  	goto Label_0024;  }  
Magic Number,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,xfbfe48e5ee40f893,The following statement contains a magic number: this.xc0c4c459c6ccbd00 = new int[2 * this.x9fc3ee03a439f6f0];  
Magic Number,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,xfbfe48e5ee40f893,The following statement contains a magic number: this.x5cafa8d49ea71ea1 = new float[2][];  
Magic Number,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,xfbfe48e5ee40f893,The following statement contains a magic number: this.x1f31bf6ca58166a1 = new xb730a77005d16cc1 (this.x9fc3ee03a439f6f0' (int)(param.cache_size * 1048576.0));  
Magic Number,Encog.MathUtil.LIBSVM,xfbfe48e5ee40f893,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xfbfe48e5ee40f893.cs,xfbfe48e5ee40f893,The following statement contains a magic number: this.x32dce50116aa0f1e = new sbyte[2 * this.x9fc3ee03a439f6f0];  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if (!str.Equals ("false"' StringComparison.InvariantCultureIgnoreCase)) {  	string[] strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	if ((((uint)defaultValue) | 0xff) == 0) {  		goto Label_000F;  	}  	if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  		strArray [2] = " has an invalid value of ";  		strArray [3] = str;  		strArray [4] = "' should be true/false.";  		throw new EncogError (string.Concat (strArray));  	}  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if (!str.Equals ("false"' StringComparison.InvariantCultureIgnoreCase)) {  	string[] strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	if ((((uint)defaultValue) | 0xff) == 0) {  		goto Label_000F;  	}  	if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  		strArray [2] = " has an invalid value of ";  		strArray [3] = str;  		strArray [4] = "' should be true/false.";  		throw new EncogError (string.Concat (strArray));  	}  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if (!str.Equals ("false"' StringComparison.InvariantCultureIgnoreCase)) {  	string[] strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	if ((((uint)defaultValue) | 0xff) == 0) {  		goto Label_000F;  	}  	if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  		strArray [2] = " has an invalid value of ";  		strArray [3] = str;  		strArray [4] = "' should be true/false.";  		throw new EncogError (string.Concat (strArray));  	}  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if (!str.Equals ("false"' StringComparison.InvariantCultureIgnoreCase)) {  	string[] strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	if ((((uint)defaultValue) | 0xff) == 0) {  		goto Label_000F;  	}  	if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  		strArray [2] = " has an invalid value of ";  		strArray [3] = str;  		strArray [4] = "' should be true/false.";  		throw new EncogError (string.Concat (strArray));  	}  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	strArray [4] = "' should be true/false.";  	throw new EncogError (string.Concat (strArray));  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	strArray [4] = "' should be true/false.";  	throw new EncogError (string.Concat (strArray));  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: if ((((uint)defaultValue) + ((uint)required)) <= uint.MaxValue) {  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	strArray [4] = "' should be true/false.";  	throw new EncogError (string.Concat (strArray));  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: strArray [2] = " has an invalid value of ";  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: strArray [3] = str;  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetBoolean,The following statement contains a magic number: strArray [4] = "' should be true/false.";  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: try {  	num = this._x5786461d089b10a0.Parse (str);  }  catch (FormatException) {  	string[] strArray;  	if ((((uint)num) - ((uint)required)) >= 0) {  		goto Label_0046;  	}  	Label_0039:  	if (0 == 0) {  		strArray [4] = "' should be valid floating point.";  		throw new EncogError (string.Concat (strArray));  	}  	Label_0046:  	strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	goto Label_0039;  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: try {  	num = this._x5786461d089b10a0.Parse (str);  }  catch (FormatException) {  	string[] strArray;  	if ((((uint)num) - ((uint)required)) >= 0) {  		goto Label_0046;  	}  	Label_0039:  	if (0 == 0) {  		strArray [4] = "' should be valid floating point.";  		throw new EncogError (string.Concat (strArray));  	}  	Label_0046:  	strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	goto Label_0039;  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: try {  	num = this._x5786461d089b10a0.Parse (str);  }  catch (FormatException) {  	string[] strArray;  	if ((((uint)num) - ((uint)required)) >= 0) {  		goto Label_0046;  	}  	Label_0039:  	if (0 == 0) {  		strArray [4] = "' should be valid floating point.";  		throw new EncogError (string.Concat (strArray));  	}  	Label_0046:  	strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	goto Label_0039;  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: try {  	num = this._x5786461d089b10a0.Parse (str);  }  catch (FormatException) {  	string[] strArray;  	if ((((uint)num) - ((uint)required)) >= 0) {  		goto Label_0046;  	}  	Label_0039:  	if (0 == 0) {  		strArray [4] = "' should be valid floating point.";  		throw new EncogError (string.Concat (strArray));  	}  	Label_0046:  	strArray = new string[5];  	strArray [0] = "Property ";  	strArray [1] = name;  	strArray [2] = " has an invalid value of ";  	strArray [3] = str;  	goto Label_0039;  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: if (0 == 0) {  	strArray [4] = "' should be valid floating point.";  	throw new EncogError (string.Concat (strArray));  }  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: strArray [4] = "' should be valid floating point.";  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: strArray = new string[5];  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: strArray [2] = " has an invalid value of ";  
Magic Number,Encog.Util,ParamsHolder,C:\repos\neismit_emds\Nsim4\Encog\Util\ParamsHolder.cs,GetDouble,The following statement contains a magic number: strArray [3] = str;  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (((uint)num2) <= uint.MaxValue) {  	Label_01D4:  	num2 = network.Flat.OutputCount;  	if (inputCount != training.InputSize) {  		objArray = new object[5];  		objArray [0] = "The input layer size of ";  		if (15 != 0) {  			objArray [1] = inputCount;  			goto Label_0187;  		}  		goto Label_01D4;  	}  	if ((((uint)num2) - ((uint)inputCount)) >= 0) {  		goto Label_008F;  	}  	goto Label_0098;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (((uint)num2) <= uint.MaxValue) {  	Label_01D4:  	num2 = network.Flat.OutputCount;  	if (inputCount != training.InputSize) {  		objArray = new object[5];  		objArray [0] = "The input layer size of ";  		if (15 != 0) {  			objArray [1] = inputCount;  			goto Label_0187;  		}  		goto Label_01D4;  	}  	if ((((uint)num2) - ((uint)inputCount)) >= 0) {  		goto Label_008F;  	}  	goto Label_0098;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (inputCount != training.InputSize) {  	objArray = new object[5];  	objArray [0] = "The input layer size of ";  	if (15 != 0) {  		objArray [1] = inputCount;  		goto Label_0187;  	}  	goto Label_01D4;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (inputCount != training.InputSize) {  	objArray = new object[5];  	objArray [0] = "The input layer size of ";  	if (15 != 0) {  		objArray [1] = inputCount;  		goto Label_0187;  	}  	goto Label_01D4;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray = new object[5];  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (15 != 0) {  	objArray [1] = inputCount;  	goto Label_0187;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (-2 != 0) {  	goto Label_0098;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: if (num2 != training.IdealSize) {  	objArray2 = new object[5];  	objArray2 [0] = "The output layer size of ";  }  else {  	return;  	if ((((uint)num2) + ((uint)inputCount)) <= uint.MaxValue) {  		goto Label_0088;  	}  	goto Label_008F;  }  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray2 = new object[5];  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray2 [2] = " must match the training input size of ";  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray2 [3] = training.IdealSize;  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray2 [4] = ".";  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray [3] = training.InputSize;  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray [4] = ".";  
Magic Number,Encog.Util,EncogValidate,C:\repos\neismit_emds\Nsim4\Encog\Util\EncogValidate.cs,ValidateNetworkForTraining,The following statement contains a magic number: objArray [2] = " must match the training input size of ";  
Magic Number,Encog.Util,ReflectionUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\ReflectionUtil.cs,GetAllFields,The following statement contains a magic number: if ((((uint)num) | 15) != 0) {  	return;  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,LookAhead,The following statement contains a magic number: if (ignoreCase) {  	ch = char.ToLower (ch);  	ch2 = char.ToLower (ch2);  	if (2 == 0) {  		goto Label_0052;  	}  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,LookAhead,The following statement contains a magic number: if (2 == 0) {  	goto Label_0052;  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,ReadQuotedString,The following statement contains a magic number: if ((this.Peek () == '"') || ((0 == 0) && (8 == 0))) {  	builder = new StringBuilder ();  	this.Advance ();  	if (4 != 0) {  		while ((this.Peek () != '"') && !this.EOL ()) {  			builder.Append (this.ReadChar ());  		}  		this.Advance ();  	}  }  else {  	return "";  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,ReadQuotedString,The following statement contains a magic number: if ((this.Peek () == '"') || ((0 == 0) && (8 == 0))) {  	builder = new StringBuilder ();  	this.Advance ();  	if (4 != 0) {  		while ((this.Peek () != '"') && !this.EOL ()) {  			builder.Append (this.ReadChar ());  		}  		this.Advance ();  	}  }  else {  	return "";  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,ReadQuotedString,The following statement contains a magic number: if (4 != 0) {  	while ((this.Peek () != '"') && !this.EOL ()) {  		builder.Append (this.ReadChar ());  	}  	this.Advance ();  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,ReadToWhiteSpace,The following statement contains a magic number: if (!this.IsWhiteSpace ()) {  	if (!this.EOL ()) {  		builder.Append (this.ReadChar ());  		goto Label_000A;  	}  }  else if (4 == 0) {  	goto Label_000A;  }  
Magic Number,Encog.Util,SimpleParser,C:\repos\neismit_emds\Nsim4\Encog\Util\SimpleParser.cs,ReadToWhiteSpace,The following statement contains a magic number: if (4 == 0) {  	goto Label_000A;  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory < 0x100000L) {  	return (FormatDouble (((double)memory) / 1024.0' 2) + " KB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory < 0x100000L) {  	return (FormatDouble (((double)memory) / 1024.0' 2) + " KB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1024.0' 2) + " KB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1024.0' 2) + " KB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory >= 0x40000000L) {  	if (memory < 0x10000000000L) {  		return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  	}  	return (FormatDouble (((double)memory) / 1099511627776' 2) + " TB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory >= 0x40000000L) {  	if (memory < 0x10000000000L) {  		return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  	}  	return (FormatDouble (((double)memory) / 1099511627776' 2) + " TB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory >= 0x40000000L) {  	if (memory < 0x10000000000L) {  		return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  	}  	return (FormatDouble (((double)memory) / 1099511627776' 2) + " TB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory >= 0x40000000L) {  	if (memory < 0x10000000000L) {  		return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  	}  	return (FormatDouble (((double)memory) / 1099511627776' 2) + " TB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory < 0x10000000000L) {  	return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: if (memory < 0x10000000000L) {  	return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  }  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1073741824.0' 2) + " GB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1099511627776' 2) + " TB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1099511627776' 2) + " TB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1048576.0' 2) + " MB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatMemory,The following statement contains a magic number: return (FormatDouble (((double)memory) / 1048576.0' 2) + " MB");  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatTimeSpan,The following statement contains a magic number: num4 = num / 60;  
Magic Number,Encog.Util,Format,C:\repos\neismit_emds\Nsim4\Encog\Util\Format.cs,FormatTimeSpan,The following statement contains a magic number: num -= num4 * 60;  
Magic Number,Encog.Util,EngineArray,C:\repos\neismit_emds\Nsim4\Encog\Util\EngineArray.cs,AllocateBool2D,The following statement contains a magic number: for (int i = 0; (i < rows) || (15 == 0); i++) {  	flagArray [i] = new bool[cols];  }  
Magic Number,Encog.Util,EngineArray,C:\repos\neismit_emds\Nsim4\Encog\Util\EngineArray.cs,MaxIndex,The following statement contains a magic number: if (8 == 0) {  	goto Label_003F;  }  
Magic Number,Encog.Util,StringUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\StringUtil.cs,FromBytes,The following statement contains a magic number: for (int i = 0; i < b.Length; i++) {  	bytes [i * 2] = b [i];  	if ((((uint)i) - ((uint)i)) > uint.MaxValue) {  		break;  	}  	bytes [(i * 2) + 1] = 0;  }  
Magic Number,Encog.Util,StringUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\StringUtil.cs,FromBytes,The following statement contains a magic number: for (int i = 0; i < b.Length; i++) {  	bytes [i * 2] = b [i];  	if ((((uint)i) - ((uint)i)) > uint.MaxValue) {  		break;  	}  	bytes [(i * 2) + 1] = 0;  }  
Magic Number,Encog.Util,StringUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\StringUtil.cs,FromBytes,The following statement contains a magic number: bytes [i * 2] = b [i];  
Magic Number,Encog.Util,StringUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\StringUtil.cs,FromBytes,The following statement contains a magic number: bytes [(i * 2) + 1] = 0;  
Magic Number,Encog.Util,HTMLReport,C:\repos\neismit_emds\Nsim4\Encog\Util\HTMLReport.cs,Encode,The following statement contains a magic number: if (2 != 0) {  	goto Label_0102;  }  
Magic Number,Encog.Util,HTMLReport,C:\repos\neismit_emds\Nsim4\Encog\Util\HTMLReport.cs,Encode,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0043;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,Search,The following statement contains a magic number: if (((uint)flag) <= uint.MaxValue) {  	os.Dispose ();  	Uri uri = new Uri ("http://search.yahooapis.com/WebSearchService/V1/webSearch?" + str);  	num = 0;  	flag = false;  	while (!flag) {  		try {  			is2 = this.x7cdeaeac68d869b5 (uri);  			flag = true;  		}  		catch (IOException) {  			do {  				if (num == 5) {  					throw;  				}  				Thread.Sleep (0x1388);  			}  			while ((((uint)flag) - ((uint)num)) > uint.MaxValue);  		}  		num++;  	}  	return is2;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,Search,The following statement contains a magic number: while (!flag) {  	try {  		is2 = this.x7cdeaeac68d869b5 (uri);  		flag = true;  	}  	catch (IOException) {  		do {  			if (num == 5) {  				throw;  			}  			Thread.Sleep (0x1388);  		}  		while ((((uint)flag) - ((uint)num)) > uint.MaxValue);  	}  	num++;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,Search,The following statement contains a magic number: try {  	is2 = this.x7cdeaeac68d869b5 (uri);  	flag = true;  }  catch (IOException) {  	do {  		if (num == 5) {  			throw;  		}  		Thread.Sleep (0x1388);  	}  	while ((((uint)flag) - ((uint)num)) > uint.MaxValue);  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,Search,The following statement contains a magic number: do {  	if (num == 5) {  		throw;  	}  	Thread.Sleep (0x1388);  }  while ((((uint)flag) - ((uint)num)) > uint.MaxValue);  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,Search,The following statement contains a magic number: if (num == 5) {  	throw;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  	StringBuilder builder;  	bool flag;  	int num;  	Tag lastTag;  	ReadHTML dhtml = new ReadHTML (stream);  	goto Label_014A;  	Label_002D:  	if (15 == 0) {  		goto Label_004F;  	}  	Label_0034:  	if ((num = dhtml.Read ()) != -1) {  		goto Label_0159;  	}  	goto Label_006F;  	Label_0046:  	if (0x7fffffff == 0) {  		goto Label_0078;  	}  	goto Label_002D;  	Label_004F:  	if ((((uint)flag) - ((uint)flag)) > uint.MaxValue) {  		goto Label_0046;  	}  	if (0 == 0) {  	}  	goto Label_0034;  	Label_006F:  	if (4 != 0) {  		goto Label_0181;  	}  	goto Label_0046;  	Label_0078:  	if (lastTag.Name.Equals ("/Url"' StringComparison.CurrentCultureIgnoreCase)) {  		goto Label_00F9;  	}  	if ((((uint)num) - ((uint)flag)) < 0) {  		goto Label_010B;  	}  	goto Label_0034;  	Label_00A9:  	if (!flag) {  		if ((((uint)flag) + ((uint)num)) >= 0) {  			goto Label_004F;  		}  		goto Label_0046;  	}  	builder.Append ((char)num);  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0046;  	}  	Label_00EF:  	if (4 != 0) {  		goto Label_0078;  	}  	Label_00F9:  	is2.Add (new Uri (builder.ToString ()));  	Label_010B:  	builder.Length = 0;  	flag = false;  	goto Label_0034;  	Label_011D:  	builder.Length = 0;  	flag = true;  	goto Label_0034;  	Label_012D:  	if (lastTag.Name.Equals ("Url"' StringComparison.CurrentCultureIgnoreCase)) {  		goto Label_011D;  	}  	if (0 == 0) {  	}  	goto Label_00EF;  	Label_014A:  	builder = new StringBuilder ();  	flag = false;  	goto Label_0034;  	Label_0159:  	if (num != 0) {  		goto Label_00A9;  	}  	lastTag = dhtml.LastTag;  	goto Label_012D;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  	StringBuilder builder;  	bool flag;  	int num;  	Tag lastTag;  	ReadHTML dhtml = new ReadHTML (stream);  	goto Label_014A;  	Label_002D:  	if (15 == 0) {  		goto Label_004F;  	}  	Label_0034:  	if ((num = dhtml.Read ()) != -1) {  		goto Label_0159;  	}  	goto Label_006F;  	Label_0046:  	if (0x7fffffff == 0) {  		goto Label_0078;  	}  	goto Label_002D;  	Label_004F:  	if ((((uint)flag) - ((uint)flag)) > uint.MaxValue) {  		goto Label_0046;  	}  	if (0 == 0) {  	}  	goto Label_0034;  	Label_006F:  	if (4 != 0) {  		goto Label_0181;  	}  	goto Label_0046;  	Label_0078:  	if (lastTag.Name.Equals ("/Url"' StringComparison.CurrentCultureIgnoreCase)) {  		goto Label_00F9;  	}  	if ((((uint)num) - ((uint)flag)) < 0) {  		goto Label_010B;  	}  	goto Label_0034;  	Label_00A9:  	if (!flag) {  		if ((((uint)flag) + ((uint)num)) >= 0) {  			goto Label_004F;  		}  		goto Label_0046;  	}  	builder.Append ((char)num);  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0046;  	}  	Label_00EF:  	if (4 != 0) {  		goto Label_0078;  	}  	Label_00F9:  	is2.Add (new Uri (builder.ToString ()));  	Label_010B:  	builder.Length = 0;  	flag = false;  	goto Label_0034;  	Label_011D:  	builder.Length = 0;  	flag = true;  	goto Label_0034;  	Label_012D:  	if (lastTag.Name.Equals ("Url"' StringComparison.CurrentCultureIgnoreCase)) {  		goto Label_011D;  	}  	if (0 == 0) {  	}  	goto Label_00EF;  	Label_014A:  	builder = new StringBuilder ();  	flag = false;  	goto Label_0034;  	Label_0159:  	if (num != 0) {  		goto Label_00A9;  	}  	lastTag = dhtml.LastTag;  	goto Label_012D;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,The following statement contains a magic number: using (Stream stream = response.GetResponseStream ()) {  	StringBuilder builder;  	bool flag;  	int num;  	Tag lastTag;  	ReadHTML dhtml = new ReadHTML (stream);  	goto Label_014A;  	Label_002D:  	if (15 == 0) {  		goto Label_004F;  	}  	Label_0034:  	if ((num = dhtml.Read ()) != -1) {  		goto Label_0159;  	}  	goto Label_006F;  	Label_0046:  	if (0x7fffffff == 0) {  		goto Label_0078;  	}  	goto Label_002D;  	Label_004F:  	if ((((uint)flag) - ((uint)flag)) > uint.MaxValue) {  		goto Label_0046;  	}  	if (0 == 0) {  	}  	goto Label_0034;  	Label_006F:  	if (4 != 0) {  		goto Label_0181;  	}  	goto Label_0046;  	Label_0078:  	if (lastTag.Name.Equals ("/Url"' StringComparison.CurrentCultureIgnoreCase)) {  		goto Label_00F9;  	}  	if ((((uint)num) - ((uint)flag)) < 0) {  		goto Label_010B;  	}  	goto Label_0034;  	Label_00A9:  	if (!flag) {  		if ((((uint)flag) + ((uint)num)) >= 0) {  			goto Label_004F;  		}  		goto Label_0046;  	}  	builder.Append ((char)num);  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0046;  	}  	Label_00EF:  	if (4 != 0) {  		goto Label_0078;  	}  	Label_00F9:  	is2.Add (new Uri (builder.ToString ()));  	Label_010B:  	builder.Length = 0;  	flag = false;  	goto Label_0034;  	Label_011D:  	builder.Length = 0;  	flag = true;  	goto Label_0034;  	Label_012D:  	if (lastTag.Name.Equals ("Url"' StringComparison.CurrentCultureIgnoreCase)) {  		goto Label_011D;  	}  	if (0 == 0) {  	}  	goto Label_00EF;  	Label_014A:  	builder = new StringBuilder ();  	flag = false;  	goto Label_0034;  	Label_0159:  	if (num != 0) {  		goto Label_00A9;  	}  	lastTag = dhtml.LastTag;  	goto Label_012D;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,The following statement contains a magic number: if (15 == 0) {  	goto Label_004F;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,The following statement contains a magic number: if (4 != 0) {  	goto Label_0181;  }  
Magic Number,Encog.Util,YahooSearch,C:\repos\neismit_emds\Nsim4\Encog\Util\YahooSearch.cs,x7cdeaeac68d869b5,The following statement contains a magic number: if (4 != 0) {  	goto Label_0078;  }  
Magic Number,Encog.Util,DirectoryUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\DirectoryUtil.cs,ReadStream,The following statement contains a magic number: try {  	byte[] buffer;  	string str;  	StringBuilder builder = new StringBuilder (0x400);  	goto Label_002A;  	Label_000D:  	if (istream.Read (buffer' 0' buffer.Length) > -1) {  		goto Label_003E;  	}  	str2 = builder.ToString ();  	if (1 != 0) {  		return str2;  	}  	Label_002A:  	if (-2147483648 == 0) {  		return str2;  	}  	buffer = new byte[0x400];  	goto Label_000D;  	Label_003E:  	str = Encoding.ASCII.GetString (buffer);  	builder.Append (str);  	if (4 != 0) {  		goto Label_000D;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util,DirectoryUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\DirectoryUtil.cs,ReadStream,The following statement contains a magic number: try {  	byte[] buffer;  	string str;  	StringBuilder builder = new StringBuilder (0x400);  	goto Label_002A;  	Label_000D:  	if (istream.Read (buffer' 0' buffer.Length) > -1) {  		goto Label_003E;  	}  	str2 = builder.ToString ();  	if (1 != 0) {  		return str2;  	}  	Label_002A:  	if (-2147483648 == 0) {  		return str2;  	}  	buffer = new byte[0x400];  	goto Label_000D;  	Label_003E:  	str = Encoding.ASCII.GetString (buffer);  	builder.Append (str);  	if (4 != 0) {  		goto Label_000D;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util,DirectoryUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\DirectoryUtil.cs,ReadStream,The following statement contains a magic number: if (-2147483648 == 0) {  	return str2;  }  
Magic Number,Encog.Util,DirectoryUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\DirectoryUtil.cs,ReadStream,The following statement contains a magic number: if (4 != 0) {  	goto Label_000D;  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,RBFNetwork,The following statement contains a magic number: if (hiddenCount != 0) {  	IRadialBasisFunction[] rbf = new IRadialBasisFunction[hiddenCount];  	double volumeNeuronRBFWidth = 2.0 / ((double)hiddenCount);  	this._flat = new FlatNetworkRBF (inputCount' rbf.Length' outputCount' rbf);  	try {  		this.SetRBFCentersAndWidthsEqualSpacing (-1.0' 1.0' t' volumeNeuronRBFWidth' false);  	}  	catch (EncogError) {  		this.RandomizeRBFCentersAndWidths (-1.0' 1.0' t);  	}  }  else {  	do {  		throw new NeuralNetworkError ("RBF network cannot have zero hidden neurons.");  	}  	while ((((uint)outputCount) | 2) == 0);  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,RBFNetwork,The following statement contains a magic number: if (hiddenCount != 0) {  	IRadialBasisFunction[] rbf = new IRadialBasisFunction[hiddenCount];  	double volumeNeuronRBFWidth = 2.0 / ((double)hiddenCount);  	this._flat = new FlatNetworkRBF (inputCount' rbf.Length' outputCount' rbf);  	try {  		this.SetRBFCentersAndWidthsEqualSpacing (-1.0' 1.0' t' volumeNeuronRBFWidth' false);  	}  	catch (EncogError) {  		this.RandomizeRBFCentersAndWidths (-1.0' 1.0' t);  	}  }  else {  	do {  		throw new NeuralNetworkError ("RBF network cannot have zero hidden neurons.");  	}  	while ((((uint)outputCount) | 2) == 0);  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,RBFNetwork,The following statement contains a magic number: do {  	throw new NeuralNetworkError ("RBF network cannot have zero hidden neurons.");  }  while ((((uint)outputCount) | 2) == 0);  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The following statement contains a magic number: if ((((uint)volumeNeuronRBFWidth) | 8) == 0) {  	goto Label_019F;  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The following statement contains a magic number: if (num4 != num5) {  	throw new NeuralNetworkError ("Total number of RBF neurons must be some integer to the power of 'dimensions'.\n" + Format.FormatDouble ((double)num4' 5) + " <> " + Format.FormatDouble (num5' 5));  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The following statement contains a magic number: if (num4 != num5) {  	throw new NeuralNetworkError ("Total number of RBF neurons must be some integer to the power of 'dimensions'.\n" + Format.FormatDouble ((double)num4' 5) + " <> " + Format.FormatDouble (num5' 5));  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The following statement contains a magic number: throw new NeuralNetworkError ("Total number of RBF neurons must be some integer to the power of 'dimensions'.\n" + Format.FormatDouble ((double)num4' 5) + " <> " + Format.FormatDouble (num5' 5));  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The following statement contains a magic number: throw new NeuralNetworkError ("Total number of RBF neurons must be some integer to the power of 'dimensions'.\n" + Format.FormatDouble ((double)num4' 5) + " <> " + Format.FormatDouble (num5' 5));  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFCentersAndWidthsEqualSpacing,The following statement contains a magic number: num6 = 2.5 * volumeNeuronRBFWidth;  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (t == RBFEnum.Gaussian) {  	this._flat.RBF [index] = new GaussianFunction (0.5' centers' width);  }  else {  	if (t == RBFEnum.Multiquadric) {  		this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  		if (-2 != 0) {  			return;  		}  	}  	else if (t != RBFEnum.InverseMultiquadric) {  		return;  	}  	this._flat.RBF [index] = new InverseMultiquadricFunction (0.5' centers' width);  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (t == RBFEnum.Gaussian) {  	this._flat.RBF [index] = new GaussianFunction (0.5' centers' width);  }  else {  	if (t == RBFEnum.Multiquadric) {  		this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  		if (-2 != 0) {  			return;  		}  	}  	else if (t != RBFEnum.InverseMultiquadric) {  		return;  	}  	this._flat.RBF [index] = new InverseMultiquadricFunction (0.5' centers' width);  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (t == RBFEnum.Gaussian) {  	this._flat.RBF [index] = new GaussianFunction (0.5' centers' width);  }  else {  	if (t == RBFEnum.Multiquadric) {  		this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  		if (-2 != 0) {  			return;  		}  	}  	else if (t != RBFEnum.InverseMultiquadric) {  		return;  	}  	this._flat.RBF [index] = new InverseMultiquadricFunction (0.5' centers' width);  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (t == RBFEnum.Gaussian) {  	this._flat.RBF [index] = new GaussianFunction (0.5' centers' width);  }  else {  	if (t == RBFEnum.Multiquadric) {  		this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  		if (-2 != 0) {  			return;  		}  	}  	else if (t != RBFEnum.InverseMultiquadric) {  		return;  	}  	this._flat.RBF [index] = new InverseMultiquadricFunction (0.5' centers' width);  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: this._flat.RBF [index] = new GaussianFunction (0.5' centers' width);  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (t == RBFEnum.Multiquadric) {  	this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  	if (-2 != 0) {  		return;  	}  }  else if (t != RBFEnum.InverseMultiquadric) {  	return;  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (t == RBFEnum.Multiquadric) {  	this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  	if (-2 != 0) {  		return;  	}  }  else if (t != RBFEnum.InverseMultiquadric) {  	return;  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: this._flat.RBF [index] = new MultiquadricFunction (0.5' centers' width);  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: if (-2 != 0) {  	return;  }  
Magic Number,Encog.Neural.RBF,RBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\RBFNetwork.cs,SetRBFFunction,The following statement contains a magic number: this._flat.RBF [index] = new InverseMultiquadricFunction (0.5' centers' width);  
Magic Number,Encog.Neural.Flat,FlatNetworkRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetworkRBF.cs,FlatNetworkRBF,The following statement contains a magic number: if (2 != 0) {  	layers [2] = new FlatLayer (new ActivationLinear ()' outputCount' 0.0);  	base.Init (layers);  }  
Magic Number,Encog.Neural.Flat,FlatNetworkRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetworkRBF.cs,FlatNetworkRBF,The following statement contains a magic number: if (2 != 0) {  	layers [2] = new FlatLayer (new ActivationLinear ()' outputCount' 0.0);  	base.Init (layers);  }  
Magic Number,Encog.Neural.Flat,FlatNetworkRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetworkRBF.cs,FlatNetworkRBF,The following statement contains a magic number: layers [2] = new FlatLayer (new ActivationLinear ()' outputCount' 0.0);  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: layerArray [3] = new FlatLayer (function2' output' 0.0);  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: if (hidden2 != 0) {  	if ((((uint)tanh) - ((uint)hidden2)) > uint.MaxValue) {  		goto Label_01AA;  	}  	layerArray = new FlatLayer[4];  	layerArray [0] = new FlatLayer (activation' input' 1.0);  	layerArray [1] = new FlatLayer (function2' hidden1' 1.0);  	if ((((uint)tanh) + ((uint)hidden2)) <= uint.MaxValue) {  		layerArray [2] = new FlatLayer (function2' hidden2' 1.0);  		if (((uint)hidden2) > uint.MaxValue) {  			goto Label_015F;  		}  		goto Label_0069;  	}  	goto Label_000B;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: if (hidden2 != 0) {  	if ((((uint)tanh) - ((uint)hidden2)) > uint.MaxValue) {  		goto Label_01AA;  	}  	layerArray = new FlatLayer[4];  	layerArray [0] = new FlatLayer (activation' input' 1.0);  	layerArray [1] = new FlatLayer (function2' hidden1' 1.0);  	if ((((uint)tanh) + ((uint)hidden2)) <= uint.MaxValue) {  		layerArray [2] = new FlatLayer (function2' hidden2' 1.0);  		if (((uint)hidden2) > uint.MaxValue) {  			goto Label_015F;  		}  		goto Label_0069;  	}  	goto Label_000B;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: layerArray = new FlatLayer[4];  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: if ((((uint)tanh) + ((uint)hidden2)) <= uint.MaxValue) {  	layerArray [2] = new FlatLayer (function2' hidden2' 1.0);  	if (((uint)hidden2) > uint.MaxValue) {  		goto Label_015F;  	}  	goto Label_0069;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: layerArray [2] = new FlatLayer (function2' hidden2' 1.0);  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,FlatNetwork,The following statement contains a magic number: if ((((uint)num) | 2) != 0) {  	goto Label_01EA;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CalculateError,The following statement contains a magic number: if ((((uint)num) | 8) != 0) {  	return calculation.Calculate ();  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CloneFlatNetwork,The following statement contains a magic number: if (num < result._activationFunctions.Length) {  	result._activationFunctions [num] = (IActivationFunction)this._activationFunctions [num].Clone ();  	if ((((uint)num) & 0) == 0) {  		if (-2 == 0) {  			goto Label_0133;  		}  		num++;  		goto Label_001F;  	}  	if ((((uint)num) | 4) != 0) {  		goto Label_0172;  	}  	goto Label_0122;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CloneFlatNetwork,The following statement contains a magic number: if (num < result._activationFunctions.Length) {  	result._activationFunctions [num] = (IActivationFunction)this._activationFunctions [num].Clone ();  	if ((((uint)num) & 0) == 0) {  		if (-2 == 0) {  			goto Label_0133;  		}  		num++;  		goto Label_001F;  	}  	if ((((uint)num) | 4) != 0) {  		goto Label_0172;  	}  	goto Label_0122;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CloneFlatNetwork,The following statement contains a magic number: if ((((uint)num) & 0) == 0) {  	if (-2 == 0) {  		goto Label_0133;  	}  	num++;  	goto Label_001F;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CloneFlatNetwork,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0133;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CloneFlatNetwork,The following statement contains a magic number: if ((((uint)num) | 4) != 0) {  	goto Label_0172;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,CloneFlatNetwork,The following statement contains a magic number: if (3 == 0) {  	goto Label_001F;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Compute,The following statement contains a magic number: if ((((uint)num3) | 15) == 0) {  	goto Label_0024;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,DecodeNetwork,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,DecodeNetwork,The following statement contains a magic number: if (-2 != 0) {  	objArray [2] = " to length=";  	objArray [3] = data.Length;  	throw new EncogError (string.Concat (objArray));  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,DecodeNetwork,The following statement contains a magic number: if (-2 != 0) {  	objArray [2] = " to length=";  	objArray [3] = data.Length;  	throw new EncogError (string.Concat (objArray));  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,DecodeNetwork,The following statement contains a magic number: if (-2 != 0) {  	objArray [2] = " to length=";  	objArray [3] = data.Length;  	throw new EncogError (string.Concat (objArray));  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,DecodeNetwork,The following statement contains a magic number: objArray [2] = " to length=";  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,DecodeNetwork,The following statement contains a magic number: objArray [3] = data.Length;  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Init,The following statement contains a magic number: if ((((uint)num6) | 8) == 0) {  	goto Label_00B2;  }  
Magic Number,Encog.Neural.Flat,FlatNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatNetwork.cs,Init,The following statement contains a magic number: if (2 != 0) {  	goto Label_02AC;  }  
Magic Number,Encog.Neural.Flat,FlatLayer,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatLayer.cs,HasBias,The following statement contains a magic number: return (Math.Abs (this._x25922738b86264c8) > 1E-07);  
Magic Number,Encog.Neural.Flat,FlatLayer,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\FlatLayer.cs,ToString,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_001F;  }  
Magic Number,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Read,The following statement contains a magic number: if (3 != 0) {  	helper = new EncogReadHelper (mask0);  	goto Label_001E;  }  
Magic Number,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Read,The following statement contains a magic number: if ((-2 == 0) || (4 == 0)) {  	goto Label_005C;  }  
Magic Number,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Read,The following statement contains a magic number: if ((-2 == 0) || (4 == 0)) {  	goto Label_005C;  }  
Magic Number,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("PARAMS")) {  	dictionary = section.ParseParams ();  }  else if ((0 == 0) && ((0 != 0) || (3 != 0))) {  	goto Label_001E;  }  
Magic Number,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Read,The following statement contains a magic number: if ((0 == 0) && ((0 != 0) || (3 != 0))) {  	goto Label_001E;  }  
Magic Number,Encog.Neural.Networks.Training.Propagation,PersistTrainingContinuation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\PersistTrainingContinuation.cs,Save,The following statement contains a magic number: if (4 != 0) {  	return;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this._samples.GetEnumerator ()) {  	IMLDataPair pair;  	double num5;  	int num6;  	goto Label_02AB;  	Label_0293:  	if ((((uint)num6) | 0xff) == 0) {  		goto Label_02CA;  	}  	Label_02AB:  	if (enumerator.MoveNext ()) {  		goto Label_059A;  	}  	if (base.OutputMode == PNNOutputMode.Classification) {  		num = 0.0;  		num9 = 0;  		if ((((uint)num7) | 15) == 0) {  			return data;  		}  		if ((((uint)num3) - ((uint)num2)) < 0) {  			goto Label_00F5;  		}  		goto Label_0139;  	}  	goto Label_004F;  	Label_02BC:  	if (base.OutputMode == PNNOutputMode.Regression) {  		goto Label_0342;  	}  	goto Label_02AB;  	Label_02CA:  	if (num2 != base.Exclude) {  		goto Label_05F3;  	}  	goto Label_02AB;  	Label_02DC:  	numArray [num8] += num3 * pair.Ideal [num8];  	num8++;  	Label_0306:  	if (num8 < base.OutputCount) {  		goto Label_02DC;  	}  	num += num3;  	if (((uint)num9) >= 0) {  		goto Label_0347;  	}  	if ((((uint)num4) | 0x7fffffff) != 0) {  		goto Label_02BC;  	}  	Label_0342:  	num8 = 0;  	goto Label_0306;  	Label_0347:  	if ((((uint)num11) + ((uint)num)) >= 0) {  		goto Label_0293;  	}  	goto Label_02CA;  	Label_0364:  	if ((((uint)num2) + ((uint)num12)) < 0) {  		goto Label_04A2;  	}  	goto Label_02BC;  	Label_0386:  	if (base.OutputMode == PNNOutputMode.Unsupervised) {  		goto Label_03F2;  	}  	goto Label_0364;  	Label_0395:  	if (num7 >= base.InputCount) {  		num += num3;  		if ((((uint)num3) - ((uint)num5)) > uint.MaxValue) {  			goto Label_0306;  		}  		goto Label_02AB;  	}  	numArray [num7] += num3 * pair.Input [num7];  	num7++;  	goto Label_0395;  	Label_03F2:  	num7 = 0;  	goto Label_0395;  	Label_03F7:  	numArray [num6] += num3;  	goto Label_02AB;  	Label_0412:  	if (base.OutputMode == PNNOutputMode.Classification) {  		goto Label_042F;  	}  	goto Label_0386;  	Label_0422:  	num3 = 1E-40;  	goto Label_0412;  	Label_042F:  	num6 = (int)pair.Ideal [0];  	if ((((uint)num10) | 15) == 0) {  		goto Label_059A;  	}  	goto Label_03F7;  	Label_045B:  	if (num3 >= 1E-40) {  		goto Label_0412;  	}  	if ((((uint)num2) | 0xff) == 0) {  		goto Label_02CA;  	}  	goto Label_0422;  	Label_0485:  	if ((((uint)num7) - ((uint)num8)) > uint.MaxValue) {  		goto Label_0386;  	}  	goto Label_04AD;  	Label_04A2:  	if (base.Kernel == PNNKernelType.Reciprocal) {  		goto Label_04CC;  	}  	goto Label_045B;  	Label_04AD:  	if ((((uint)num11) + ((uint)num)) < 0) {  		goto Label_04A2;  	}  	goto Label_0588;  	Label_04CC:  	num3 = 1.0 / (1.0 + num3);  	goto Label_0485;  	Label_04E9:  	if (base.Kernel == PNNKernelType.Gaussian) {  		goto Label_0519;  	}  	goto Label_04A2;  	Label_04FD:  	num3 += num5 * num5;  	num4++;  	Label_050D:  	if (num4 < base.InputCount) {  		goto Label_054E;  	}  	goto Label_04E9;  	Label_0519:  	num3 = Math.Exp (-num3);  	if ((((uint)num10) & 0) == 0) {  		goto Label_045B;  	}  	if (((uint)num2) >= 0) {  		goto Label_04E9;  	}  	Label_0549:  	num4 = 0;  	goto Label_050D;  	Label_054E:  	num5 = input [num4] - pair.Input [num4];  	num5 /= this._sigma [num4];  	goto Label_04FD;  	Label_0588:  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0603;  	}  	Label_059A:  	pair = enumerator.Current;  	if ((((uint)num) + ((uint)num11)) > uint.MaxValue) {  		goto Label_04AD;  	}  	num2++;  	if ((((uint)num2) - ((uint)num7)) > uint.MaxValue) {  		goto Label_04FD;  	}  	if ((((uint)num) & 0) == 0) {  		goto Label_02CA;  	}  	Label_05F3:  	num3 = 0.0;  	goto Label_0549;  	Label_0603:  	if (((uint)num12) >= 0) {  		goto Label_045B;  	}  	goto Label_0293;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this._samples.GetEnumerator ()) {  	IMLDataPair pair;  	double num5;  	int num6;  	goto Label_02AB;  	Label_0293:  	if ((((uint)num6) | 0xff) == 0) {  		goto Label_02CA;  	}  	Label_02AB:  	if (enumerator.MoveNext ()) {  		goto Label_059A;  	}  	if (base.OutputMode == PNNOutputMode.Classification) {  		num = 0.0;  		num9 = 0;  		if ((((uint)num7) | 15) == 0) {  			return data;  		}  		if ((((uint)num3) - ((uint)num2)) < 0) {  			goto Label_00F5;  		}  		goto Label_0139;  	}  	goto Label_004F;  	Label_02BC:  	if (base.OutputMode == PNNOutputMode.Regression) {  		goto Label_0342;  	}  	goto Label_02AB;  	Label_02CA:  	if (num2 != base.Exclude) {  		goto Label_05F3;  	}  	goto Label_02AB;  	Label_02DC:  	numArray [num8] += num3 * pair.Ideal [num8];  	num8++;  	Label_0306:  	if (num8 < base.OutputCount) {  		goto Label_02DC;  	}  	num += num3;  	if (((uint)num9) >= 0) {  		goto Label_0347;  	}  	if ((((uint)num4) | 0x7fffffff) != 0) {  		goto Label_02BC;  	}  	Label_0342:  	num8 = 0;  	goto Label_0306;  	Label_0347:  	if ((((uint)num11) + ((uint)num)) >= 0) {  		goto Label_0293;  	}  	goto Label_02CA;  	Label_0364:  	if ((((uint)num2) + ((uint)num12)) < 0) {  		goto Label_04A2;  	}  	goto Label_02BC;  	Label_0386:  	if (base.OutputMode == PNNOutputMode.Unsupervised) {  		goto Label_03F2;  	}  	goto Label_0364;  	Label_0395:  	if (num7 >= base.InputCount) {  		num += num3;  		if ((((uint)num3) - ((uint)num5)) > uint.MaxValue) {  			goto Label_0306;  		}  		goto Label_02AB;  	}  	numArray [num7] += num3 * pair.Input [num7];  	num7++;  	goto Label_0395;  	Label_03F2:  	num7 = 0;  	goto Label_0395;  	Label_03F7:  	numArray [num6] += num3;  	goto Label_02AB;  	Label_0412:  	if (base.OutputMode == PNNOutputMode.Classification) {  		goto Label_042F;  	}  	goto Label_0386;  	Label_0422:  	num3 = 1E-40;  	goto Label_0412;  	Label_042F:  	num6 = (int)pair.Ideal [0];  	if ((((uint)num10) | 15) == 0) {  		goto Label_059A;  	}  	goto Label_03F7;  	Label_045B:  	if (num3 >= 1E-40) {  		goto Label_0412;  	}  	if ((((uint)num2) | 0xff) == 0) {  		goto Label_02CA;  	}  	goto Label_0422;  	Label_0485:  	if ((((uint)num7) - ((uint)num8)) > uint.MaxValue) {  		goto Label_0386;  	}  	goto Label_04AD;  	Label_04A2:  	if (base.Kernel == PNNKernelType.Reciprocal) {  		goto Label_04CC;  	}  	goto Label_045B;  	Label_04AD:  	if ((((uint)num11) + ((uint)num)) < 0) {  		goto Label_04A2;  	}  	goto Label_0588;  	Label_04CC:  	num3 = 1.0 / (1.0 + num3);  	goto Label_0485;  	Label_04E9:  	if (base.Kernel == PNNKernelType.Gaussian) {  		goto Label_0519;  	}  	goto Label_04A2;  	Label_04FD:  	num3 += num5 * num5;  	num4++;  	Label_050D:  	if (num4 < base.InputCount) {  		goto Label_054E;  	}  	goto Label_04E9;  	Label_0519:  	num3 = Math.Exp (-num3);  	if ((((uint)num10) & 0) == 0) {  		goto Label_045B;  	}  	if (((uint)num2) >= 0) {  		goto Label_04E9;  	}  	Label_0549:  	num4 = 0;  	goto Label_050D;  	Label_054E:  	num5 = input [num4] - pair.Input [num4];  	num5 /= this._sigma [num4];  	goto Label_04FD;  	Label_0588:  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0603;  	}  	Label_059A:  	pair = enumerator.Current;  	if ((((uint)num) + ((uint)num11)) > uint.MaxValue) {  		goto Label_04AD;  	}  	num2++;  	if ((((uint)num2) - ((uint)num7)) > uint.MaxValue) {  		goto Label_04FD;  	}  	if ((((uint)num) & 0) == 0) {  		goto Label_02CA;  	}  	Label_05F3:  	num3 = 0.0;  	goto Label_0549;  	Label_0603:  	if (((uint)num12) >= 0) {  		goto Label_045B;  	}  	goto Label_0293;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this._samples.GetEnumerator ()) {  	IMLDataPair pair;  	double num5;  	int num6;  	goto Label_02AB;  	Label_0293:  	if ((((uint)num6) | 0xff) == 0) {  		goto Label_02CA;  	}  	Label_02AB:  	if (enumerator.MoveNext ()) {  		goto Label_059A;  	}  	if (base.OutputMode == PNNOutputMode.Classification) {  		num = 0.0;  		num9 = 0;  		if ((((uint)num7) | 15) == 0) {  			return data;  		}  		if ((((uint)num3) - ((uint)num2)) < 0) {  			goto Label_00F5;  		}  		goto Label_0139;  	}  	goto Label_004F;  	Label_02BC:  	if (base.OutputMode == PNNOutputMode.Regression) {  		goto Label_0342;  	}  	goto Label_02AB;  	Label_02CA:  	if (num2 != base.Exclude) {  		goto Label_05F3;  	}  	goto Label_02AB;  	Label_02DC:  	numArray [num8] += num3 * pair.Ideal [num8];  	num8++;  	Label_0306:  	if (num8 < base.OutputCount) {  		goto Label_02DC;  	}  	num += num3;  	if (((uint)num9) >= 0) {  		goto Label_0347;  	}  	if ((((uint)num4) | 0x7fffffff) != 0) {  		goto Label_02BC;  	}  	Label_0342:  	num8 = 0;  	goto Label_0306;  	Label_0347:  	if ((((uint)num11) + ((uint)num)) >= 0) {  		goto Label_0293;  	}  	goto Label_02CA;  	Label_0364:  	if ((((uint)num2) + ((uint)num12)) < 0) {  		goto Label_04A2;  	}  	goto Label_02BC;  	Label_0386:  	if (base.OutputMode == PNNOutputMode.Unsupervised) {  		goto Label_03F2;  	}  	goto Label_0364;  	Label_0395:  	if (num7 >= base.InputCount) {  		num += num3;  		if ((((uint)num3) - ((uint)num5)) > uint.MaxValue) {  			goto Label_0306;  		}  		goto Label_02AB;  	}  	numArray [num7] += num3 * pair.Input [num7];  	num7++;  	goto Label_0395;  	Label_03F2:  	num7 = 0;  	goto Label_0395;  	Label_03F7:  	numArray [num6] += num3;  	goto Label_02AB;  	Label_0412:  	if (base.OutputMode == PNNOutputMode.Classification) {  		goto Label_042F;  	}  	goto Label_0386;  	Label_0422:  	num3 = 1E-40;  	goto Label_0412;  	Label_042F:  	num6 = (int)pair.Ideal [0];  	if ((((uint)num10) | 15) == 0) {  		goto Label_059A;  	}  	goto Label_03F7;  	Label_045B:  	if (num3 >= 1E-40) {  		goto Label_0412;  	}  	if ((((uint)num2) | 0xff) == 0) {  		goto Label_02CA;  	}  	goto Label_0422;  	Label_0485:  	if ((((uint)num7) - ((uint)num8)) > uint.MaxValue) {  		goto Label_0386;  	}  	goto Label_04AD;  	Label_04A2:  	if (base.Kernel == PNNKernelType.Reciprocal) {  		goto Label_04CC;  	}  	goto Label_045B;  	Label_04AD:  	if ((((uint)num11) + ((uint)num)) < 0) {  		goto Label_04A2;  	}  	goto Label_0588;  	Label_04CC:  	num3 = 1.0 / (1.0 + num3);  	goto Label_0485;  	Label_04E9:  	if (base.Kernel == PNNKernelType.Gaussian) {  		goto Label_0519;  	}  	goto Label_04A2;  	Label_04FD:  	num3 += num5 * num5;  	num4++;  	Label_050D:  	if (num4 < base.InputCount) {  		goto Label_054E;  	}  	goto Label_04E9;  	Label_0519:  	num3 = Math.Exp (-num3);  	if ((((uint)num10) & 0) == 0) {  		goto Label_045B;  	}  	if (((uint)num2) >= 0) {  		goto Label_04E9;  	}  	Label_0549:  	num4 = 0;  	goto Label_050D;  	Label_054E:  	num5 = input [num4] - pair.Input [num4];  	num5 /= this._sigma [num4];  	goto Label_04FD;  	Label_0588:  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0603;  	}  	Label_059A:  	pair = enumerator.Current;  	if ((((uint)num) + ((uint)num11)) > uint.MaxValue) {  		goto Label_04AD;  	}  	num2++;  	if ((((uint)num2) - ((uint)num7)) > uint.MaxValue) {  		goto Label_04FD;  	}  	if ((((uint)num) & 0) == 0) {  		goto Label_02CA;  	}  	Label_05F3:  	num3 = 0.0;  	goto Label_0549;  	Label_0603:  	if (((uint)num12) >= 0) {  		goto Label_045B;  	}  	goto Label_0293;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this._samples.GetEnumerator ()) {  	IMLDataPair pair;  	double num5;  	int num6;  	goto Label_02AB;  	Label_0293:  	if ((((uint)num6) | 0xff) == 0) {  		goto Label_02CA;  	}  	Label_02AB:  	if (enumerator.MoveNext ()) {  		goto Label_059A;  	}  	if (base.OutputMode == PNNOutputMode.Classification) {  		num = 0.0;  		num9 = 0;  		if ((((uint)num7) | 15) == 0) {  			return data;  		}  		if ((((uint)num3) - ((uint)num2)) < 0) {  			goto Label_00F5;  		}  		goto Label_0139;  	}  	goto Label_004F;  	Label_02BC:  	if (base.OutputMode == PNNOutputMode.Regression) {  		goto Label_0342;  	}  	goto Label_02AB;  	Label_02CA:  	if (num2 != base.Exclude) {  		goto Label_05F3;  	}  	goto Label_02AB;  	Label_02DC:  	numArray [num8] += num3 * pair.Ideal [num8];  	num8++;  	Label_0306:  	if (num8 < base.OutputCount) {  		goto Label_02DC;  	}  	num += num3;  	if (((uint)num9) >= 0) {  		goto Label_0347;  	}  	if ((((uint)num4) | 0x7fffffff) != 0) {  		goto Label_02BC;  	}  	Label_0342:  	num8 = 0;  	goto Label_0306;  	Label_0347:  	if ((((uint)num11) + ((uint)num)) >= 0) {  		goto Label_0293;  	}  	goto Label_02CA;  	Label_0364:  	if ((((uint)num2) + ((uint)num12)) < 0) {  		goto Label_04A2;  	}  	goto Label_02BC;  	Label_0386:  	if (base.OutputMode == PNNOutputMode.Unsupervised) {  		goto Label_03F2;  	}  	goto Label_0364;  	Label_0395:  	if (num7 >= base.InputCount) {  		num += num3;  		if ((((uint)num3) - ((uint)num5)) > uint.MaxValue) {  			goto Label_0306;  		}  		goto Label_02AB;  	}  	numArray [num7] += num3 * pair.Input [num7];  	num7++;  	goto Label_0395;  	Label_03F2:  	num7 = 0;  	goto Label_0395;  	Label_03F7:  	numArray [num6] += num3;  	goto Label_02AB;  	Label_0412:  	if (base.OutputMode == PNNOutputMode.Classification) {  		goto Label_042F;  	}  	goto Label_0386;  	Label_0422:  	num3 = 1E-40;  	goto Label_0412;  	Label_042F:  	num6 = (int)pair.Ideal [0];  	if ((((uint)num10) | 15) == 0) {  		goto Label_059A;  	}  	goto Label_03F7;  	Label_045B:  	if (num3 >= 1E-40) {  		goto Label_0412;  	}  	if ((((uint)num2) | 0xff) == 0) {  		goto Label_02CA;  	}  	goto Label_0422;  	Label_0485:  	if ((((uint)num7) - ((uint)num8)) > uint.MaxValue) {  		goto Label_0386;  	}  	goto Label_04AD;  	Label_04A2:  	if (base.Kernel == PNNKernelType.Reciprocal) {  		goto Label_04CC;  	}  	goto Label_045B;  	Label_04AD:  	if ((((uint)num11) + ((uint)num)) < 0) {  		goto Label_04A2;  	}  	goto Label_0588;  	Label_04CC:  	num3 = 1.0 / (1.0 + num3);  	goto Label_0485;  	Label_04E9:  	if (base.Kernel == PNNKernelType.Gaussian) {  		goto Label_0519;  	}  	goto Label_04A2;  	Label_04FD:  	num3 += num5 * num5;  	num4++;  	Label_050D:  	if (num4 < base.InputCount) {  		goto Label_054E;  	}  	goto Label_04E9;  	Label_0519:  	num3 = Math.Exp (-num3);  	if ((((uint)num10) & 0) == 0) {  		goto Label_045B;  	}  	if (((uint)num2) >= 0) {  		goto Label_04E9;  	}  	Label_0549:  	num4 = 0;  	goto Label_050D;  	Label_054E:  	num5 = input [num4] - pair.Input [num4];  	num5 /= this._sigma [num4];  	goto Label_04FD;  	Label_0588:  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0603;  	}  	Label_059A:  	pair = enumerator.Current;  	if ((((uint)num) + ((uint)num11)) > uint.MaxValue) {  		goto Label_04AD;  	}  	num2++;  	if ((((uint)num2) - ((uint)num7)) > uint.MaxValue) {  		goto Label_04FD;  	}  	if ((((uint)num) & 0) == 0) {  		goto Label_02CA;  	}  	Label_05F3:  	num3 = 0.0;  	goto Label_0549;  	Label_0603:  	if (((uint)num12) >= 0) {  		goto Label_045B;  	}  	goto Label_0293;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: if (base.OutputMode == PNNOutputMode.Classification) {  	num = 0.0;  	num9 = 0;  	if ((((uint)num7) | 15) == 0) {  		return data;  	}  	if ((((uint)num3) - ((uint)num2)) < 0) {  		goto Label_00F5;  	}  	goto Label_0139;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: if ((((uint)num7) | 15) == 0) {  	return data;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: num3 = 1E-40;  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: if ((((uint)num10) | 15) == 0) {  	goto Label_059A;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: if (num3 >= 1E-40) {  	goto Label_0412;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: if (((((uint)num3) | uint.MaxValue) == 0) || (num < 1E-40)) {  	num = 1E-40;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: if (((((uint)num3) | uint.MaxValue) == 0) || (num < 1E-40)) {  	num = 1E-40;  }  
Magic Number,Encog.Neural.PNN,BasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\PNN\BasicPNN.cs,Compute,The following statement contains a magic number: num = 1E-40;  
Magic Number,Encog.Neural.SOM,SOMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\SOMNetwork.cs,CalculateError,The following statement contains a magic number: return (unit.WorstDistance / 100.0);  
Magic Number,Encog.Neural.SOM,SOMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\SOMNetwork.cs,Compute,The following statement contains a magic number: if (3 == 0) {  	goto Label_003F;  }  
Magic Number,Encog.Neural.SOM,PersistSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\PersistSOM.cs,Read,The following statement contains a magic number: if (15 != 0) {  	return network;  }  
Magic Number,Encog.Neural.SOM,PersistSOM,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\PersistSOM.cs,Read,The following statement contains a magic number: if (4 == 0) {  	goto Label_0055;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (string.Compare ("qprop"' type) != 0) {  	if (8 != 0) {  		if (2 != 0) {  			goto Label_00CB;  		}  		goto Label_006E;  	}  	goto Label_003A;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (string.Compare ("qprop"' type) != 0) {  	if (8 != 0) {  		if (2 != 0) {  			goto Label_00CB;  		}  		goto Label_006E;  	}  	goto Label_003A;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (8 != 0) {  	if (2 != 0) {  		goto Label_00CB;  	}  	goto Label_006E;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (8 != 0) {  	if (2 != 0) {  		goto Label_00CB;  	}  	goto Label_006E;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (2 != 0) {  	goto Label_00CB;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (15 == 0) {  	goto Label_0008;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if ((3 != 0) && (string.Compare ("som-cluster"' type) != 0)) {  	goto Label_006E;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (string.Compare ("scg"' type) != 0) {  	if (string.Compare ("lma"' type) == 0) {  		if (0x7fffffff != 0) {  			return this.xd950e9a874b78a08.Create (method' training' str);  		}  		goto Label_0017;  	}  	if (string.Compare ("svm-train"' type) == 0) {  		if (-2 != 0) {  			return this.xc0e7cfa6d6f1a7b0.Create (method' training' str);  		}  		goto Label_0221;  	}  	if (string.Compare ("svm-search"' type) == 0) {  		return this.xeba17a6fbab1950e.Create (method' training' str);  	}  	if (string.Compare ("som-neighborhood"' type) == 0) {  		if (-1 == 0) {  			goto Label_0008;  		}  		if (0 == 0) {  			return this.xfb94dffcab6e5c84.Create (method' training' str);  		}  		if (1 == 0) {  			if (0 == 0) {  				if (0 != 0) {  					goto Label_0219;  				}  				if (8 == 0) {  					goto Label_01A4;  				}  				goto Label_00F7;  			}  			goto Label_009E;  		}  	}  	if (string.Compare ("anneal"' type) == 0) {  		goto Label_00F7;  	}  	goto Label_009E;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (string.Compare ("scg"' type) != 0) {  	if (string.Compare ("lma"' type) == 0) {  		if (0x7fffffff != 0) {  			return this.xd950e9a874b78a08.Create (method' training' str);  		}  		goto Label_0017;  	}  	if (string.Compare ("svm-train"' type) == 0) {  		if (-2 != 0) {  			return this.xc0e7cfa6d6f1a7b0.Create (method' training' str);  		}  		goto Label_0221;  	}  	if (string.Compare ("svm-search"' type) == 0) {  		return this.xeba17a6fbab1950e.Create (method' training' str);  	}  	if (string.Compare ("som-neighborhood"' type) == 0) {  		if (-1 == 0) {  			goto Label_0008;  		}  		if (0 == 0) {  			return this.xfb94dffcab6e5c84.Create (method' training' str);  		}  		if (1 == 0) {  			if (0 == 0) {  				if (0 != 0) {  					goto Label_0219;  				}  				if (8 == 0) {  					goto Label_01A4;  				}  				goto Label_00F7;  			}  			goto Label_009E;  		}  	}  	if (string.Compare ("anneal"' type) == 0) {  		goto Label_00F7;  	}  	goto Label_009E;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (string.Compare ("svm-train"' type) == 0) {  	if (-2 != 0) {  		return this.xc0e7cfa6d6f1a7b0.Create (method' training' str);  	}  	goto Label_0221;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (-2 != 0) {  	return this.xc0e7cfa6d6f1a7b0.Create (method' training' str);  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (string.Compare ("som-neighborhood"' type) == 0) {  	if (-1 == 0) {  		goto Label_0008;  	}  	if (0 == 0) {  		return this.xfb94dffcab6e5c84.Create (method' training' str);  	}  	if (1 == 0) {  		if (0 == 0) {  			if (0 != 0) {  				goto Label_0219;  			}  			if (8 == 0) {  				goto Label_01A4;  			}  			goto Label_00F7;  		}  		goto Label_009E;  	}  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (1 == 0) {  	if (0 == 0) {  		if (0 != 0) {  			goto Label_0219;  		}  		if (8 == 0) {  			goto Label_01A4;  		}  		goto Label_00F7;  	}  	goto Label_009E;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (0 == 0) {  	if (0 != 0) {  		goto Label_0219;  	}  	if (8 == 0) {  		goto Label_01A4;  	}  	goto Label_00F7;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (8 == 0) {  	goto Label_01A4;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemTrainingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemTrainingPlugin.cs,CreateTraining,The following statement contains a magic number: if (-2 != 0) {  	goto Label_01F3;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,The following statement contains a magic number: if ((((uint)num) - ((uint)level)) >= 0) {  	DateTime now = DateTime.Now;  	builder = new StringBuilder ();  	builder.Append (now.ToString ());  	if (((uint)level) < 0) {  		goto Label_0065;  	}  	Label_01D0:  	builder.Append (" [");  	num = level;  	if ((((uint)level) - ((uint)num)) < 0) {  		if ((((uint)level) - ((uint)num)) < 0) {  			return;  		}  		goto Label_0130;  	}  	switch (num) {  	case 0:  		builder.Append ("DEBUG");  		if ((((uint)level) + ((uint)num)) > uint.MaxValue) {  			goto Label_01D0;  		}  		if ((((uint)level) + ((uint)level)) > uint.MaxValue) {  			goto Label_0130;  		}  		goto Label_00B2;  	case 1:  		goto Label_0130;  	case 2:  		builder.Append ("ERROR");  		goto Label_00B2;  	case 3:  		builder.Append ("CRITICAL");  		goto Label_00B2;  	}  	builder.Append ("?");  	goto Label_00B2;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,The following statement contains a magic number: if ((((uint)num) - ((uint)level)) >= 0) {  	DateTime now = DateTime.Now;  	builder = new StringBuilder ();  	builder.Append (now.ToString ());  	if (((uint)level) < 0) {  		goto Label_0065;  	}  	Label_01D0:  	builder.Append (" [");  	num = level;  	if ((((uint)level) - ((uint)num)) < 0) {  		if ((((uint)level) - ((uint)num)) < 0) {  			return;  		}  		goto Label_0130;  	}  	switch (num) {  	case 0:  		builder.Append ("DEBUG");  		if ((((uint)level) + ((uint)num)) > uint.MaxValue) {  			goto Label_01D0;  		}  		if ((((uint)level) + ((uint)level)) > uint.MaxValue) {  			goto Label_0130;  		}  		goto Label_00B2;  	case 1:  		goto Label_0130;  	case 2:  		builder.Append ("ERROR");  		goto Label_00B2;  	case 3:  		builder.Append ("CRITICAL");  		goto Label_00B2;  	}  	builder.Append ("?");  	goto Label_00B2;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,The following statement contains a magic number: switch (num) {  case 0:  	builder.Append ("DEBUG");  	if ((((uint)level) + ((uint)num)) > uint.MaxValue) {  		goto Label_01D0;  	}  	if ((((uint)level) + ((uint)level)) > uint.MaxValue) {  		goto Label_0130;  	}  	goto Label_00B2;  case 1:  	goto Label_0130;  case 2:  	builder.Append ("ERROR");  	goto Label_00B2;  case 3:  	builder.Append ("CRITICAL");  	goto Label_00B2;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,The following statement contains a magic number: switch (num) {  case 0:  	builder.Append ("DEBUG");  	if ((((uint)level) + ((uint)num)) > uint.MaxValue) {  		goto Label_01D0;  	}  	if ((((uint)level) + ((uint)level)) > uint.MaxValue) {  		goto Label_0130;  	}  	goto Label_00B2;  case 1:  	goto Label_0130;  case 2:  	builder.Append ("ERROR");  	goto Label_00B2;  case 3:  	builder.Append ("CRITICAL");  	goto Label_00B2;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,The following statement contains a magic number: if (this.x6b468d6a6158972e > 2) {  	Console.Error.WriteLine (builder.ToString ());  	if (0 == 0) {  		return;  	}  }  else {  	Console.Out.WriteLine (builder.ToString ());  	return;  }  
Magic Number,Encog.Plugin.SystemPlugin,SystemMethodsPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemMethodsPlugin.cs,CreateMethod,The following statement contains a magic number: if (2 != 0) {  	throw new EncogError ("Unknown method type: " + methodType);  }  
Magic Number,Encog.ML.Factory.Train,BackPropFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\BackPropFactory.cs,Create,The following statement contains a magic number: return new Backpropagation ((BasicNetwork)method' training' learnRate' holder.GetDouble ("MOM"' false' 0.3));  
Magic Number,Encog.ML.Factory.Train,LMAFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\LMAFactory.cs,Create,The following statement contains a magic number: if (method is BasicNetwork) {  	flag = new ParamsHolder (ArchitectureParse.ParseParams (argsStr)).GetBoolean ("BAYES_REG"' false' false);  	training3 = new LevenbergMarquardtTraining ((BasicNetwork)method' training);  	if (3 == 0) {  		LevenbergMarquardtTraining training2;  		return training2;  	}  }  else if (0 == 0) {  	throw new EncogError ("LMA training cannot be used on a method of type: " + method.GetType ().FullName);  }  
Magic Number,Encog.ML.Factory.Train,LMAFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\LMAFactory.cs,Create,The following statement contains a magic number: if (3 == 0) {  	LevenbergMarquardtTraining training2;  	return training2;  }  
Magic Number,Encog.ML.Factory.Train,RPROPFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\RPROPFactory.cs,Create,The following statement contains a magic number: if (method is IContainsFlat) {  	ParamsHolder holder = new ParamsHolder (ArchitectureParse.ParseParams (argsStr));  	double initialUpdate = holder.GetDouble ("INIT_UPDATE"' false' 0.1);  	double maxStep = holder.GetDouble ("MAX_STEP"' false' 50.0);  	if ((((uint)initialUpdate) - ((uint)maxStep)) >= 0) {  		return new ResilientPropagation ((IContainsFlat)method' training' initialUpdate' maxStep);  	}  }  
Magic Number,Encog.ML.Factory.Train,RPROPFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\RPROPFactory.cs,Create,The following statement contains a magic number: if (method is IContainsFlat) {  	ParamsHolder holder = new ParamsHolder (ArchitectureParse.ParseParams (argsStr));  	double initialUpdate = holder.GetDouble ("INIT_UPDATE"' false' 0.1);  	double maxStep = holder.GetDouble ("MAX_STEP"' false' 50.0);  	if ((((uint)initialUpdate) - ((uint)maxStep)) >= 0) {  		return new ResilientPropagation ((IContainsFlat)method' training' initialUpdate' maxStep);  	}  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if (method is SupportVectorMachine) {  	IDictionary<string' string> theParams = ArchitectureParse.ParseParams (argsStr);  	new ParamsHolder (theParams);  	if ((((uint)num3) - ((uint)num4)) < 0) {  		goto Label_0053;  	}  	if ((((uint)num2) + ((uint)num6)) <= uint.MaxValue) {  		holder = new ParamsHolder (theParams);  		num = holder.GetDouble ("GAMMA1"' false' -10.0);  		num2 = holder.GetDouble ("C1"' false' -5.0);  		goto Label_0101;  	}  	goto Label_016E;  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if (method is SupportVectorMachine) {  	IDictionary<string' string> theParams = ArchitectureParse.ParseParams (argsStr);  	new ParamsHolder (theParams);  	if ((((uint)num3) - ((uint)num4)) < 0) {  		goto Label_0053;  	}  	if ((((uint)num2) + ((uint)num6)) <= uint.MaxValue) {  		holder = new ParamsHolder (theParams);  		num = holder.GetDouble ("GAMMA1"' false' -10.0);  		num2 = holder.GetDouble ("C1"' false' -5.0);  		goto Label_0101;  	}  	goto Label_016E;  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if ((((uint)num2) + ((uint)num6)) <= uint.MaxValue) {  	holder = new ParamsHolder (theParams);  	num = holder.GetDouble ("GAMMA1"' false' -10.0);  	num2 = holder.GetDouble ("C1"' false' -5.0);  	goto Label_0101;  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if ((((uint)num2) + ((uint)num6)) <= uint.MaxValue) {  	holder = new ParamsHolder (theParams);  	num = holder.GetDouble ("GAMMA1"' false' -10.0);  	num2 = holder.GetDouble ("C1"' false' -5.0);  	goto Label_0101;  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: num = holder.GetDouble ("GAMMA1"' false' -10.0);  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: num2 = holder.GetDouble ("C1"' false' -5.0);  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if (((uint)num3) >= 0) {  	train2.ConstBegin = num2;  	train2.ConstEnd = num4;  	if ((((uint)num4) | 3) != 0) {  		train2.ConstStep = num6;  		return train2;  	}  }  else {  	return train2;  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if ((((uint)num4) | 3) != 0) {  	train2.ConstStep = num6;  	return train2;  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: num3 = holder.GetDouble ("GAMMA2"' false' 10.0);  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: num4 = holder.GetDouble ("C2"' false' 15.0);  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: if (((uint)num4) <= uint.MaxValue) {  	num5 = holder.GetDouble ("GAMMASTEP"' false' 1.0);  	num6 = holder.GetDouble ("CSTEP"' false' 2.0);  	train2 = new SVMSearchTrain ((SupportVectorMachine)method' training) {  		GammaBegin = num  	};  }  
Magic Number,Encog.ML.Factory.Train,SVMSearchFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\SVMSearchFactory.cs,Create,The following statement contains a magic number: num6 = holder.GetDouble ("CSTEP"' false' 2.0);  
Magic Number,Encog.ML.Factory.Train,AnnealFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\AnnealFactory.cs,Create,The following statement contains a magic number: num2 = holder.GetDouble ("stopTemp"' false' 2.0);  
Magic Number,Encog.ML.Factory.Train,AnnealFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\AnnealFactory.cs,Create,The following statement contains a magic number: return new NeuralSimulatedAnnealing ((BasicNetwork)method' calculateScore' startTemp' num2' holder.GetInt ("cycles"' false' 100));  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: if (method is SupportVectorMachine) {  	dictionary = ArchitectureParse.ParseParams (argsStr);  	holder = new ParamsHolder (dictionary);  	num = holder.GetDouble ("LR"' false' 0.7);  	str = holder.GetString ("NEIGHBORHOOD"' false' "rbf");  	if (2 != 0) {  		goto Label_03DF;  	}  	goto Label_039F;  }  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: if (method is SupportVectorMachine) {  	dictionary = ArchitectureParse.ParseParams (argsStr);  	holder = new ParamsHolder (dictionary);  	num = holder.GetDouble ("LR"' false' 0.7);  	str = holder.GetString ("NEIGHBORHOOD"' false' "rbf");  	if (2 != 0) {  		goto Label_03DF;  	}  	goto Label_039F;  }  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: num = holder.GetDouble ("LR"' false' 0.7);  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: if (2 != 0) {  	goto Label_03DF;  }  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: num4 = holder.GetDouble ("END_LR"' false' 0.05);  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: if (4 == 0) {  	if ((((uint)num3) + ((uint)num2)) > uint.MaxValue) {  		goto Label_0292;  	}  	goto Label_02F8;  }  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: do {  	if (dictionary.ContainsKey ("ITERATIONS")) {  		do {  			num2 = holder.GetInt ("ITERATIONS"' false' 0x3e8);  			num3 = holder.GetDouble ("START_LR"' false' 0.05);  		}  		while ((((uint)num3) | 15) == 0);  		goto Label_0083;  	}  }  while ((((uint)num6) | 0xff) == 0);  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: do {  	if (dictionary.ContainsKey ("ITERATIONS")) {  		do {  			num2 = holder.GetInt ("ITERATIONS"' false' 0x3e8);  			num3 = holder.GetDouble ("START_LR"' false' 0.05);  		}  		while ((((uint)num3) | 15) == 0);  		goto Label_0083;  	}  }  while ((((uint)num6) | 0xff) == 0);  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: if (dictionary.ContainsKey ("ITERATIONS")) {  	do {  		num2 = holder.GetInt ("ITERATIONS"' false' 0x3e8);  		num3 = holder.GetDouble ("START_LR"' false' 0.05);  	}  	while ((((uint)num3) | 15) == 0);  	goto Label_0083;  }  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: if (dictionary.ContainsKey ("ITERATIONS")) {  	do {  		num2 = holder.GetInt ("ITERATIONS"' false' 0x3e8);  		num3 = holder.GetDouble ("START_LR"' false' 0.05);  	}  	while ((((uint)num3) | 15) == 0);  	goto Label_0083;  }  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: do {  	num2 = holder.GetInt ("ITERATIONS"' false' 0x3e8);  	num3 = holder.GetDouble ("START_LR"' false' 0.05);  }  while ((((uint)num3) | 15) == 0);  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: do {  	num2 = holder.GetInt ("ITERATIONS"' false' 0x3e8);  	num3 = holder.GetDouble ("START_LR"' false' 0.05);  }  while ((((uint)num3) | 15) == 0);  
Magic Number,Encog.ML.Factory.Train,NeighborhoodSOMFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\NeighborhoodSOMFactory.cs,Create,The following statement contains a magic number: num3 = holder.GetDouble ("START_LR"' false' 0.05);  
Magic Number,Encog.ML.Factory.Train,GeneticFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\GeneticFactory.cs,Create,The following statement contains a magic number: do {  	ParamsHolder holder = new ParamsHolder (ArchitectureParse.ParseParams (argsStr));  	num = holder.GetInt ("population"' false' 0x1388);  	double mutationPercent = holder.GetDouble ("mutate"' false' 0.1);  	num3 = holder.GetDouble ("mate"' false' 0.25);  	train = new NeuralGeneticAlgorithm ((BasicNetwork)method' new RangeRandomizer (-1.0' 1.0)' calculateScore' num' mutationPercent' num3);  }  while ((((uint)num) - ((uint)num3)) < 0);  
Magic Number,Encog.ML.Factory.Train,GeneticFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\GeneticFactory.cs,Create,The following statement contains a magic number: do {  	ParamsHolder holder = new ParamsHolder (ArchitectureParse.ParseParams (argsStr));  	num = holder.GetInt ("population"' false' 0x1388);  	double mutationPercent = holder.GetDouble ("mutate"' false' 0.1);  	num3 = holder.GetDouble ("mate"' false' 0.25);  	train = new NeuralGeneticAlgorithm ((BasicNetwork)method' new RangeRandomizer (-1.0' 1.0)' calculateScore' num' mutationPercent' num3);  }  while ((((uint)num) - ((uint)num3)) < 0);  
Magic Number,Encog.ML.Factory.Train,GeneticFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Train\GeneticFactory.cs,Create,The following statement contains a magic number: num3 = holder.GetDouble ("mate"' false' 0.25);  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartLearningRate,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartLearningRate.cs,Init,The following statement contains a magic number: while (true) {  	this._x6c7711ed04d2ac90 = false;  	this._x6947f9fc231e17e8 = (ILearningRate)train;  	this._x985befeef351542c = train.Training.Count;  	this._x6300a707dc67f3a2 = 1.0 / ((double)this._x985befeef351542c);  	EncogLogging.Log (0' "Starting learning rate: " + this._x6300a707dc67f3a2);  	do {  		this._x6947f9fc231e17e8.LearningRate = this._x6300a707dc67f3a2;  	}  	while (-2147483648 == 0);  	if (0 == 0) {  		return;  	}  }  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartLearningRate,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartLearningRate.cs,Init,The following statement contains a magic number: do {  	this._x6947f9fc231e17e8.LearningRate = this._x6300a707dc67f3a2;  }  while (-2147483648 == 0);  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartLearningRate,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartLearningRate.cs,PostIteration,The following statement contains a magic number: this._x6300a707dc67f3a2 *= 0.99;  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartMomentum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartMomentum.cs,PostIteration,The following statement contains a magic number: if (3 != 0) {  	goto Label_0057;  }  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartMomentum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartMomentum.cs,PostIteration,The following statement contains a magic number: if (Math.Abs (this._x8b06dafb536c34dc) < 0.0001) {  	goto Label_013B;  }  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartMomentum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartMomentum.cs,PostIteration,The following statement contains a magic number: this._xd02ba004f6c6d639 *= 1.01;  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartMomentum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartMomentum.cs,PostIteration,The following statement contains a magic number: if (this._x009d742f4c5063d6 > 10.0) {  	this._x009d742f4c5063d6 = 0;  	if (((int)this._xd02ba004f6c6d639) != 0) {  		goto Label_00DA;  	}  }  else {  	return;  }  
Magic Number,Encog.Neural.Networks.Training.Strategy,SmartMomentum,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Strategy\SmartMomentum.cs,PostIteration,The following statement contains a magic number: this._xd02ba004f6c6d639 = 0.1;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: if ((((uint)num2) & 0) == 0) {  	Label_008C:  	if (num <= 0) {  		if ((((uint)num) + ((uint)index)) < 0) {  			return num2;  		}  		num3 = this._xe4def4d471bbc130 [index] * 0.5;  		num3 = Math.Max (num3' 1E-06);  		lastGradient [index] = 0.0;  		if (0 != 0) {  			goto Label_008C;  		}  		goto Label_0050;  	}  }  else if (((uint)num3) < 0) {  	goto Label_0050;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: if ((((uint)num2) & 0) == 0) {  	Label_008C:  	if (num <= 0) {  		if ((((uint)num) + ((uint)index)) < 0) {  			return num2;  		}  		num3 = this._xe4def4d471bbc130 [index] * 0.5;  		num3 = Math.Max (num3' 1E-06);  		lastGradient [index] = 0.0;  		if (0 != 0) {  			goto Label_008C;  		}  		goto Label_0050;  	}  }  else if (((uint)num3) < 0) {  	goto Label_0050;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: if (num <= 0) {  	if ((((uint)num) + ((uint)index)) < 0) {  		return num2;  	}  	num3 = this._xe4def4d471bbc130 [index] * 0.5;  	num3 = Math.Max (num3' 1E-06);  	lastGradient [index] = 0.0;  	if (0 != 0) {  		goto Label_008C;  	}  	goto Label_0050;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: if (num <= 0) {  	if ((((uint)num) + ((uint)index)) < 0) {  		return num2;  	}  	num3 = this._xe4def4d471bbc130 [index] * 0.5;  	num3 = Math.Max (num3' 1E-06);  	lastGradient [index] = 0.0;  	if (0 != 0) {  		goto Label_008C;  	}  	goto Label_0050;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: num3 = this._xe4def4d471bbc130 [index] * 0.5;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: num3 = Math.Max (num3' 1E-06);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightMinus,The following statement contains a magic number: num3 = this._xe4def4d471bbc130 [index] * 1.2;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: if (num > 0) {  	num3 = this._x3cb1c2ba1a55e11e [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  	if (0 == 0) {  		if ((((uint)num3) - ((uint)num4)) >= 0) {  			num2 = this.x0428c55343267861 (gradients [index]) * num3;  			this._x3cb1c2ba1a55e11e [index] = num3;  		}  		lastGradient [index] = gradients [index];  	}  }  else {  	if ((0 == 0) && (num >= 0)) {  		goto Label_0033;  	}  	num4 = this.UpdateValues [index] * 0.5;  	num4 = Math.Max (num4' 1E-06);  	if ((((uint)num3) - ((uint)index)) < 0) {  		goto Label_0033;  	}  	this.UpdateValues [index] = num4;  	if (base.CurrentError <= this._xaf54fba65f108955) {  		goto Label_0063;  	}  	if ((((uint)num4) & 0) == 0) {  		goto Label_0059;  	}  	goto Label_0013;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: if (num > 0) {  	num3 = this._x3cb1c2ba1a55e11e [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  	if (0 == 0) {  		if ((((uint)num3) - ((uint)num4)) >= 0) {  			num2 = this.x0428c55343267861 (gradients [index]) * num3;  			this._x3cb1c2ba1a55e11e [index] = num3;  		}  		lastGradient [index] = gradients [index];  	}  }  else {  	if ((0 == 0) && (num >= 0)) {  		goto Label_0033;  	}  	num4 = this.UpdateValues [index] * 0.5;  	num4 = Math.Max (num4' 1E-06);  	if ((((uint)num3) - ((uint)index)) < 0) {  		goto Label_0033;  	}  	this.UpdateValues [index] = num4;  	if (base.CurrentError <= this._xaf54fba65f108955) {  		goto Label_0063;  	}  	if ((((uint)num4) & 0) == 0) {  		goto Label_0059;  	}  	goto Label_0013;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: if (num > 0) {  	num3 = this._x3cb1c2ba1a55e11e [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  	if (0 == 0) {  		if ((((uint)num3) - ((uint)num4)) >= 0) {  			num2 = this.x0428c55343267861 (gradients [index]) * num3;  			this._x3cb1c2ba1a55e11e [index] = num3;  		}  		lastGradient [index] = gradients [index];  	}  }  else {  	if ((0 == 0) && (num >= 0)) {  		goto Label_0033;  	}  	num4 = this.UpdateValues [index] * 0.5;  	num4 = Math.Max (num4' 1E-06);  	if ((((uint)num3) - ((uint)index)) < 0) {  		goto Label_0033;  	}  	this.UpdateValues [index] = num4;  	if (base.CurrentError <= this._xaf54fba65f108955) {  		goto Label_0063;  	}  	if ((((uint)num4) & 0) == 0) {  		goto Label_0059;  	}  	goto Label_0013;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: num3 = this._x3cb1c2ba1a55e11e [index] * 1.2;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: num4 = this.UpdateValues [index] * 0.5;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: num4 = Math.Max (num4' 1E-06);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateiWeightPlus,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0063;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: if (num > 0) {  	num3 = this._xe4def4d471bbc130 [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  }  else {  	num3 = this._xe4def4d471bbc130 [index] * 0.5;  	num3 = Math.Max (num3' 1E-06);  	if ((((uint)num2) - ((uint)num)) > uint.MaxValue) {  		goto Label_007B;  	}  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: if (num > 0) {  	num3 = this._xe4def4d471bbc130 [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  }  else {  	num3 = this._xe4def4d471bbc130 [index] * 0.5;  	num3 = Math.Max (num3' 1E-06);  	if ((((uint)num2) - ((uint)num)) > uint.MaxValue) {  		goto Label_007B;  	}  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: if (num > 0) {  	num3 = this._xe4def4d471bbc130 [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  }  else {  	num3 = this._xe4def4d471bbc130 [index] * 0.5;  	num3 = Math.Max (num3' 1E-06);  	if ((((uint)num2) - ((uint)num)) > uint.MaxValue) {  		goto Label_007B;  	}  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: num3 = this._xe4def4d471bbc130 [index] * 1.2;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: num3 = this._xe4def4d471bbc130 [index] * 0.5;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: num3 = Math.Max (num3' 1E-06);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightMinus,The following statement contains a magic number: if (8 == 0) {  	goto Label_0068;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: if (num > 0) {  	if ((((uint)num5) | 2) == 0) {  		return num2;  	}  	double num3 = this.UpdateValues [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  	num2 = this.x0428c55343267861 (gradients [index]) * num3;  	this.UpdateValues [index] = num3;  	if ((((uint)num4) & 0) == 0) {  		lastGradient [index] = gradients [index];  		return num2;  	}  	goto Label_006B;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: if (num > 0) {  	if ((((uint)num5) | 2) == 0) {  		return num2;  	}  	double num3 = this.UpdateValues [index] * 1.2;  	num3 = Math.Min (num3' this._xc63f21bb42b68cf5);  	num2 = this.x0428c55343267861 (gradients [index]) * num3;  	this.UpdateValues [index] = num3;  	if ((((uint)num4) & 0) == 0) {  		lastGradient [index] = gradients [index];  		return num2;  	}  	goto Label_006B;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: if ((((uint)num5) | 2) == 0) {  	return num2;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: if (num < 0) {  	num4 = this.UpdateValues [index] * 0.5;  	num4 = Math.Max (num4' 1E-06);  }  else {  	if (num == 0) {  		num5 = this._x3cb1c2ba1a55e11e [index];  		num2 = this.x0428c55343267861 (gradients [index]) * num5;  		lastGradient [index] = gradients [index];  	}  	return num2;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: if (num < 0) {  	num4 = this.UpdateValues [index] * 0.5;  	num4 = Math.Max (num4' 1E-06);  }  else {  	if (num == 0) {  		num5 = this._x3cb1c2ba1a55e11e [index];  		num2 = this.x0428c55343267861 (gradients [index]) * num5;  		lastGradient [index] = gradients [index];  	}  	return num2;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: num4 = this.UpdateValues [index] * 0.5;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeightPlus,The following statement contains a magic number: num4 = Math.Max (num4' 1E-06);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,TrainFlatNetworkSCG,The following statement contains a magic number: this._x3271cefb1a159639 = 1E-06;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,CalculateGradients,The following statement contains a magic number: do {  	base.CalculateGradients ();  	num2 = (-2.0 / ((double)base.Gradients.Length)) / ((double)outputCount);  	for (int i = 0; i < base.Gradients.Length; i++) {  		base.Gradients [i] *= num2;  	}  }  while (((((uint)num2) + ((uint)outputCount)) <= uint.MaxValue) && ((((uint)num2) - ((uint)num2)) > uint.MaxValue));  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,CalculateGradients,The following statement contains a magic number: num2 = (-2.0 / ((double)base.Gradients.Length)) / ((double)outputCount);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: if (num9 >= 0.75) {  	this._x3271cefb1a159639 *= 0.25;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: if (num9 >= 0.75) {  	this._x3271cefb1a159639 *= 0.25;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: this._x3271cefb1a159639 *= 0.25;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: if (num9 < 0.25) {  	this._x3271cefb1a159639 += (this._xf7845a6fecd5afc3 * (1.0 - num9)) / this._x20753e64c7ee4faf;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: num9 = ((2.0 * this._xf7845a6fecd5afc3) * (this._xd4d57078d70c1d3d - base.Error)) / (num6 * num6);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: if (4 == 0) {  	goto Label_0298;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: this._x31add3b0010a0a52 = 2.0 * (this._x3271cefb1a159639 - (this._xf7845a6fecd5afc3 / this._x20753e64c7ee4faf));  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: num2 = 0.0001 / Math.Sqrt (this._x20753e64c7ee4faf);  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: while (this._xac19ed778412b7a3) {  	this._x3271cefb1a159639 = 1E-06;  	this._x31add3b0010a0a52 = 0.0;  	this._x51ae3b338384d896 = 1;  	if (((uint)num2) < 0) {  		goto Label_04B9;  	}  	this._xd938fd32778a1c95 = true;  	this._xac19ed778412b7a3 = false;  	if ((((uint)num14) + ((uint)num2)) >= 0) {  		goto Label_0401;  	}  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkSCG,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkSCG.cs,Iteration,The following statement contains a magic number: this._x3271cefb1a159639 = 1E-06;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkManhattan,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkManhattan.cs,TrainFlatNetworkManhattan,The following statement contains a magic number: this._x04273e480202ea1d = 1E-17;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkQPROP,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkQPROP.cs,TrainFlatNetworkQPROP,The following statement contains a magic number: this.Decay = 0.0001;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkQPROP,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkQPROP.cs,TrainFlatNetworkQPROP,The following statement contains a magic number: this.OutputEpsilon = 0.35;  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,TrainFlatNetworkProp,The following statement contains a magic number: if (4 != 0) {  	this._x9d091b0a73271a88 = training;  	this._xc2715388adc0d1f8 = 0;  	this._xb8f73f2bca8b57ea = null;  	this.FixFlatSpot = true;  	this.ErrorFunction = new LinearErrorFunction ();  	if (0xff == 0) {  		goto Label_0036;  	}  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,CalculateGradients,The following statement contains a magic number: if (this._xb542b50e13b3ecac.Length > 1) {  	TaskGroup group = EngineConcurrency.Instance.CreateTaskGroup ();  	GradientWorker[] workerArray = this._xb542b50e13b3ecac;  	num = 0;  	while (num < workerArray.Length) {  		GradientWorker task = workerArray [num];  		EngineConcurrency.Instance.ProcessTask (task' group);  		num++;  	}  	if ((((uint)num) - ((uint)num)) >= 0) {  		if (0x7fffffff == 0) {  			goto Label_0012;  		}  		if (4 == 0) {  			return;  		}  		group.WaitForComplete ();  		if (0 == 0) {  			goto Label_002A;  		}  	}  	else {  		goto Label_002A;  	}  	goto Label_00B3;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,CalculateGradients,The following statement contains a magic number: if ((((uint)num) - ((uint)num)) >= 0) {  	if (0x7fffffff == 0) {  		goto Label_0012;  	}  	if (4 == 0) {  		return;  	}  	group.WaitForComplete ();  	if (0 == 0) {  		goto Label_002A;  	}  }  else {  	goto Label_002A;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,CalculateGradients,The following statement contains a magic number: if (4 == 0) {  	return;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,xd586e0c16bdae7fc,The following statement contains a magic number: if (8 != 0) {  	return;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,xd586e0c16bdae7fc,The following statement contains a magic number: if (function is ActivationSigmoid) {  	this._x0ba854627e1326f9 [index] = 0.1;  	goto Label_012A;  }  
Magic Number,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkProp,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkProp.cs,xd586e0c16bdae7fc,The following statement contains a magic number: this._x0ba854627e1326f9 [index] = 0.1;  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (method is IMLInput) {  	if (method is IMLOutput) {  		inputSize = training.InputSize;  		if ((((uint)inputSize) & 0) != 0) {  			goto Label_001F;  		}  		idealSize = training.IdealSize;  		if ((((uint)inputCount) | 1) == 0) {  			goto Label_00B4;  		}  		inputCount = 0;  		if (((uint)num4) <= uint.MaxValue) {  			if (((uint)num4) < 0) {  				goto Label_0150;  			}  			num4 = 0;  			if (!(method is IMLInput)) {  				goto Label_0150;  			}  			inputCount = ((IMLInput)method).InputCount;  		}  	}  	else if (2 != 0) {  		goto Label_018C;  	}  	if (((uint)num4) <= uint.MaxValue) {  		goto Label_0150;  	}  	goto Label_013F;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (method is IMLOutput) {  	inputSize = training.InputSize;  	if ((((uint)inputSize) & 0) != 0) {  		goto Label_001F;  	}  	idealSize = training.IdealSize;  	if ((((uint)inputCount) | 1) == 0) {  		goto Label_00B4;  	}  	inputCount = 0;  	if (((uint)num4) <= uint.MaxValue) {  		if (((uint)num4) < 0) {  			goto Label_0150;  		}  		num4 = 0;  		if (!(method is IMLInput)) {  			goto Label_0150;  		}  		inputCount = ((IMLInput)method).InputCount;  	}  }  else if (2 != 0) {  	goto Label_018C;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (2 != 0) {  	goto Label_018C;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray2 [3] = idealSize;  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray2 [4] = ". They must be the same.";  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (inputCount != inputSize) {  	object[] objArray = new object[5];  	objArray [0] = "The machine learning method has an input length of ";  	objArray [1] = inputCount;  	if ((((uint)inputSize) & 0) == 0) {  		objArray [2] = "' but the training data has ";  		objArray [3] = inputSize;  		if ((((uint)inputCount) + ((uint)num4)) >= 0) {  		}  		objArray [4] = ". They must be the same.";  		throw new EncogError (string.Concat (objArray));  	}  	return;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (inputCount != inputSize) {  	object[] objArray = new object[5];  	objArray [0] = "The machine learning method has an input length of ";  	objArray [1] = inputCount;  	if ((((uint)inputSize) & 0) == 0) {  		objArray [2] = "' but the training data has ";  		objArray [3] = inputSize;  		if ((((uint)inputCount) + ((uint)num4)) >= 0) {  		}  		objArray [4] = ". They must be the same.";  		throw new EncogError (string.Concat (objArray));  	}  	return;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (inputCount != inputSize) {  	object[] objArray = new object[5];  	objArray [0] = "The machine learning method has an input length of ";  	objArray [1] = inputCount;  	if ((((uint)inputSize) & 0) == 0) {  		objArray [2] = "' but the training data has ";  		objArray [3] = inputSize;  		if ((((uint)inputCount) + ((uint)num4)) >= 0) {  		}  		objArray [4] = ". They must be the same.";  		throw new EncogError (string.Concat (objArray));  	}  	return;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if (inputCount != inputSize) {  	object[] objArray = new object[5];  	objArray [0] = "The machine learning method has an input length of ";  	objArray [1] = inputCount;  	if ((((uint)inputSize) & 0) == 0) {  		objArray [2] = "' but the training data has ";  		objArray [3] = inputSize;  		if ((((uint)inputCount) + ((uint)num4)) >= 0) {  		}  		objArray [4] = ". They must be the same.";  		throw new EncogError (string.Concat (objArray));  	}  	return;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if ((((uint)inputSize) & 0) == 0) {  	objArray [2] = "' but the training data has ";  	objArray [3] = inputSize;  	if ((((uint)inputCount) + ((uint)num4)) >= 0) {  	}  	objArray [4] = ". They must be the same.";  	throw new EncogError (string.Concat (objArray));  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if ((((uint)inputSize) & 0) == 0) {  	objArray [2] = "' but the training data has ";  	objArray [3] = inputSize;  	if ((((uint)inputCount) + ((uint)num4)) >= 0) {  	}  	objArray [4] = ". They must be the same.";  	throw new EncogError (string.Concat (objArray));  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if ((((uint)inputSize) & 0) == 0) {  	objArray [2] = "' but the training data has ";  	objArray [3] = inputSize;  	if ((((uint)inputCount) + ((uint)num4)) >= 0) {  	}  	objArray [4] = ". They must be the same.";  	throw new EncogError (string.Concat (objArray));  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray [2] = "' but the training data has ";  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray [3] = inputSize;  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray [4] = ". They must be the same.";  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if ((idealSize > 0) && (num4 != idealSize)) {  	objArray2 = new object[5];  	objArray2 [0] = "The machine learning method has an output length of ";  	objArray2 [1] = num4;  	objArray2 [2] = "' but the training data has ";  	goto Label_001F;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: if ((idealSize > 0) && (num4 != idealSize)) {  	objArray2 = new object[5];  	objArray2 [0] = "The machine learning method has an output length of ";  	objArray2 [1] = num4;  	objArray2 [2] = "' but the training data has ";  	goto Label_001F;  }  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray2 = new object[5];  
Magic Number,Encog.Util.Validate,ValidateNetwork,C:\repos\neismit_emds\Nsim4\Encog\Util\Validate\ValidateNetwork.cs,ValidateMethodToData,The following statement contains a magic number: objArray2 [2] = "' but the training data has ";  
Magic Number,Encog.Neural.Networks.Training.Propagation.Resilient,ResilientPropagation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Propagation\Resilient\ResilientPropagation.cs,Resume,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,Iteration,The following statement contains a magic number: if (0 == 0) {  	this._x87a7fc6a72741c2e.Params.gamma = this._xc7c4e9c099884228;  	if (this._x9425fdc2df7bcafc > 1) {  		double[] target = new double[this._x77eae494203cfff5.l];  		svm.svm_cross_validation (this._x77eae494203cfff5' this._x87a7fc6a72741c2e.Params' this._x9425fdc2df7bcafc' target);  		this._x87a7fc6a72741c2e.Model = null;  		if (-2147483648 != 0) {  			this.Error = x308cb2f3483de2a6 (this._x87a7fc6a72741c2e.Params' this._x77eae494203cfff5' target);  			goto Label_0050;  		}  		if (-1 == 0) {  			return;  		}  	}  	this._x87a7fc6a72741c2e.Model = svm.svm_train (this._x77eae494203cfff5' this._x87a7fc6a72741c2e.Params);  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,Iteration,The following statement contains a magic number: if (this._x9425fdc2df7bcafc > 1) {  	double[] target = new double[this._x77eae494203cfff5.l];  	svm.svm_cross_validation (this._x77eae494203cfff5' this._x87a7fc6a72741c2e.Params' this._x9425fdc2df7bcafc' target);  	this._x87a7fc6a72741c2e.Model = null;  	if (-2147483648 != 0) {  		this.Error = x308cb2f3483de2a6 (this._x87a7fc6a72741c2e.Params' this._x77eae494203cfff5' target);  		goto Label_0050;  	}  	if (-1 == 0) {  		return;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,Iteration,The following statement contains a magic number: if (-2147483648 != 0) {  	this.Error = x308cb2f3483de2a6 (this._x87a7fc6a72741c2e.Params' this._x77eae494203cfff5' target);  	goto Label_0050;  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,x308cb2f3483de2a6,The following statement contains a magic number: if (((x0d173b5435b4d6ad.svm_type != 3) && ((((uint)num5) | 3) != 0)) && (x0d173b5435b4d6ad.svm_type != 4)) {  	num5 = 0;  	if ((((uint)num3) + ((uint)actual)) <= uint.MaxValue) {  		goto Label_00D4;  	}  	goto Label_008C;  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,x308cb2f3483de2a6,The following statement contains a magic number: if (((x0d173b5435b4d6ad.svm_type != 3) && ((((uint)num5) | 3) != 0)) && (x0d173b5435b4d6ad.svm_type != 4)) {  	num5 = 0;  	if ((((uint)num3) + ((uint)actual)) <= uint.MaxValue) {  		goto Label_00D4;  	}  	goto Label_008C;  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,x308cb2f3483de2a6,The following statement contains a magic number: if (((x0d173b5435b4d6ad.svm_type != 3) && ((((uint)num5) | 3) != 0)) && (x0d173b5435b4d6ad.svm_type != 4)) {  	num5 = 0;  	if ((((uint)num3) + ((uint)actual)) <= uint.MaxValue) {  		goto Label_00D4;  	}  	goto Label_008C;  }  
Magic Number,Encog.ML.SVM.Training,SVMTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMTrain.cs,x308cb2f3483de2a6,The following statement contains a magic number: return ((100.0 * num) / ((double)xdee3898b83df48b4.l));  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: this._x2350dfd8c7639ed6 = -5.0;  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: this._x38c942a9bdfcbac4 = 2.0;  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: while (true) {  	if (3 != 0) {  		this._xdee5cbd981b6d49e = 15.0;  		if (0 == 0) {  			this._xec9380575da42aee = -10.0;  		}  	}  	this._xd522fee165affb59 = 10.0;  	this._x441f2c3a7d69c688 = 1.0;  	this._x87a7fc6a72741c2e = method;  	this.Training = training;  	this._x9eeb587621db687c = false;  	if (0 == 0) {  		if (0 == 0) {  			this._xab248fa87e95a7df = false;  			this._x1e074b5762f8595b = new SVMTrain (this._x87a7fc6a72741c2e' training);  			return;  		}  		return;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: while (true) {  	if (3 != 0) {  		this._xdee5cbd981b6d49e = 15.0;  		if (0 == 0) {  			this._xec9380575da42aee = -10.0;  		}  	}  	this._xd522fee165affb59 = 10.0;  	this._x441f2c3a7d69c688 = 1.0;  	this._x87a7fc6a72741c2e = method;  	this.Training = training;  	this._x9eeb587621db687c = false;  	if (0 == 0) {  		if (0 == 0) {  			this._xab248fa87e95a7df = false;  			this._x1e074b5762f8595b = new SVMTrain (this._x87a7fc6a72741c2e' training);  			return;  		}  		return;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: while (true) {  	if (3 != 0) {  		this._xdee5cbd981b6d49e = 15.0;  		if (0 == 0) {  			this._xec9380575da42aee = -10.0;  		}  	}  	this._xd522fee165affb59 = 10.0;  	this._x441f2c3a7d69c688 = 1.0;  	this._x87a7fc6a72741c2e = method;  	this.Training = training;  	this._x9eeb587621db687c = false;  	if (0 == 0) {  		if (0 == 0) {  			this._xab248fa87e95a7df = false;  			this._x1e074b5762f8595b = new SVMTrain (this._x87a7fc6a72741c2e' training);  			return;  		}  		return;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: while (true) {  	if (3 != 0) {  		this._xdee5cbd981b6d49e = 15.0;  		if (0 == 0) {  			this._xec9380575da42aee = -10.0;  		}  	}  	this._xd522fee165affb59 = 10.0;  	this._x441f2c3a7d69c688 = 1.0;  	this._x87a7fc6a72741c2e = method;  	this.Training = training;  	this._x9eeb587621db687c = false;  	if (0 == 0) {  		if (0 == 0) {  			this._xab248fa87e95a7df = false;  			this._x1e074b5762f8595b = new SVMTrain (this._x87a7fc6a72741c2e' training);  			return;  		}  		return;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: if (3 != 0) {  	this._xdee5cbd981b6d49e = 15.0;  	if (0 == 0) {  		this._xec9380575da42aee = -10.0;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: if (3 != 0) {  	this._xdee5cbd981b6d49e = 15.0;  	if (0 == 0) {  		this._xec9380575da42aee = -10.0;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: if (3 != 0) {  	this._xdee5cbd981b6d49e = 15.0;  	if (0 == 0) {  		this._xec9380575da42aee = -10.0;  	}  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: this._xdee5cbd981b6d49e = 15.0;  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: if (0 == 0) {  	this._xec9380575da42aee = -10.0;  }  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: this._xec9380575da42aee = -10.0;  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,SVMSearchTrain,The following statement contains a magic number: this._xd522fee165affb59 = 10.0;  
Magic Number,Encog.ML.SVM.Training,SVMSearchTrain,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\Training\SVMSearchTrain.cs,Iteration,The following statement contains a magic number: if (8 != 0) {  	goto Label_0122;  }  
Magic Number,Encog.Neural.Networks.Training.Anneal,NeuralSimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Anneal\NeuralSimulatedAnnealing.cs,Randomize,The following statement contains a magic number: if (0 == 0) {  	while (true) {  		if (index >= array.Length) {  			NetworkCODEC.ArrayToNetwork (array' this._x87a7fc6a72741c2e);  			if (0 == 0) {  				return;  			}  		}  		double num2 = 0.5 - ThreadSafeRandom.NextDouble ();  		num2 /= this._xcad10f1a21e41441.StartTemperature;  		num2 *= this._xcad10f1a21e41441.Temperature;  		do {  			array [index] += num2;  			index++;  		}  		while (0 != 0);  	}  }  
Magic Number,Encog.Neural.Networks.Training.Anneal,NeuralSimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Anneal\NeuralSimulatedAnnealing.cs,Randomize,The following statement contains a magic number: while (true) {  	if (index >= array.Length) {  		NetworkCODEC.ArrayToNetwork (array' this._x87a7fc6a72741c2e);  		if (0 == 0) {  			return;  		}  	}  	double num2 = 0.5 - ThreadSafeRandom.NextDouble ();  	num2 /= this._xcad10f1a21e41441.StartTemperature;  	num2 *= this._xcad10f1a21e41441.Temperature;  	do {  		array [index] += num2;  		index++;  	}  	while (0 != 0);  }  
Magic Number,Encog.ML.Anneal,SimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\ML\Anneal\SimulatedAnnealing!1.cs,Iteration,The following statement contains a magic number: if (num2 > this.Score) {  	arrayCopy = this.ArrayCopy;  	if ((((uint)num) - ((uint)num2)) >= 0) {  		if ((((uint)num2) | 8) == 0) {  			return;  		}  		goto Label_00C3;  	}  	goto Label_010B;  }  
Magic Number,Encog.ML.Anneal,SimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\ML\Anneal\SimulatedAnnealing!1.cs,Iteration,The following statement contains a magic number: if ((((uint)num) - ((uint)num2)) >= 0) {  	if ((((uint)num2) | 8) == 0) {  		return;  	}  	goto Label_00C3;  }  
Magic Number,Encog.ML.Anneal,SimulatedAnnealing,C:\repos\neismit_emds\Nsim4\Encog\ML\Anneal\SimulatedAnnealing!1.cs,Iteration,The following statement contains a magic number: if ((((uint)num2) | 8) == 0) {  	return;  }  
Magic Number,Encog.Neural.Networks.Training.Genetic,NeuralGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Genetic\NeuralGeneticAlgorithm.cs,NeuralGeneticAlgorithm,The following statement contains a magic number: this.Genetic.MatingPopulation = percentToMate * 2.0;  
Magic Number,Encog.Neural.Networks.Training.Genetic,NeuralGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Genetic\NeuralGeneticAlgorithm.cs,NeuralGeneticAlgorithm,The following statement contains a magic number: this.Genetic.Crossover = new Splice (network.Structure.CalculateSize () / 3);  
Magic Number,Encog.Neural.Networks.Training.Genetic,NeuralGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Genetic\NeuralGeneticAlgorithm.cs,NeuralGeneticAlgorithm,The following statement contains a magic number: this.Genetic.Mutate = new MutatePerturb (4.0);  
Magic Number,Encog.ML.Genetic,BasicGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\BasicGeneticAlgorithm.cs,Iteration,The following statement contains a magic number: num3 += 2;  
Magic Number,Encog.ML.Genetic,BasicGeneticAlgorithm,C:\repos\neismit_emds\Nsim4\Encog\ML\Genetic\BasicGeneticAlgorithm.cs,Iteration,The following statement contains a magic number: num2 = num * 2;  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: if (d >= -1E+20) {  	do {  		if (d <= 1E+20) {  			return d;  		}  	}  	while (((((uint)d) + ((uint)d)) > uint.MaxValue) && (-1 == 0));  }  else {  	return -1E+20;  }  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: if (d >= -1E+20) {  	do {  		if (d <= 1E+20) {  			return d;  		}  	}  	while (((((uint)d) + ((uint)d)) > uint.MaxValue) && (-1 == 0));  }  else {  	return -1E+20;  }  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: if (d >= -1E+20) {  	do {  		if (d <= 1E+20) {  			return d;  		}  	}  	while (((((uint)d) + ((uint)d)) > uint.MaxValue) && (-1 == 0));  }  else {  	return -1E+20;  }  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: do {  	if (d <= 1E+20) {  		return d;  	}  }  while (((((uint)d) + ((uint)d)) > uint.MaxValue) && (-1 == 0));  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: if (d <= 1E+20) {  	return d;  }  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: return -1E+20;  
Magic Number,Encog.MathUtil,BoundNumbers,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\BoundNumbers.cs,Bound,The following statement contains a magic number: return 1E+20;  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Decode,The following statement contains a magic number: if ((((uint)num3) | 8) == 0) {  	return num2;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if (num9 < numArray.GetLength (0)) {  	int index = 0;  	while (index < numArray [0].GetLength (0)) {  		numArray [num9] [index] = (((numArray [num9] [index] - -1.0) / 2.0) * (high - low)) + low;  		index++;  		if ((((uint)num5) | 3) == 0) {  			goto Label_015C;  		}  	}  	if ((((uint)num5) & 0) != 0) {  		goto Label_0281;  	}  	if (8 != 0) {  		goto Label_003E;  	}  	goto Label_010A;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if (num9 < numArray.GetLength (0)) {  	int index = 0;  	while (index < numArray [0].GetLength (0)) {  		numArray [num9] [index] = (((numArray [num9] [index] - -1.0) / 2.0) * (high - low)) + low;  		index++;  		if ((((uint)num5) | 3) == 0) {  			goto Label_015C;  		}  	}  	if ((((uint)num5) & 0) != 0) {  		goto Label_0281;  	}  	if (8 != 0) {  		goto Label_003E;  	}  	goto Label_010A;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if (num9 < numArray.GetLength (0)) {  	int index = 0;  	while (index < numArray [0].GetLength (0)) {  		numArray [num9] [index] = (((numArray [num9] [index] - -1.0) / 2.0) * (high - low)) + low;  		index++;  		if ((((uint)num5) | 3) == 0) {  			goto Label_015C;  		}  	}  	if ((((uint)num5) & 0) != 0) {  		goto Label_0281;  	}  	if (8 != 0) {  		goto Label_003E;  	}  	goto Label_010A;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: while (index < numArray [0].GetLength (0)) {  	numArray [num9] [index] = (((numArray [num9] [index] - -1.0) / 2.0) * (high - low)) + low;  	index++;  	if ((((uint)num5) | 3) == 0) {  		goto Label_015C;  	}  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: while (index < numArray [0].GetLength (0)) {  	numArray [num9] [index] = (((numArray [num9] [index] - -1.0) / 2.0) * (high - low)) + low;  	index++;  	if ((((uint)num5) | 3) == 0) {  		goto Label_015C;  	}  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: numArray [num9] [index] = (((numArray [num9] [index] - -1.0) / 2.0) * (high - low)) + low;  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if ((((uint)num5) | 3) == 0) {  	goto Label_015C;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if (8 != 0) {  	goto Label_003E;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: num2 = 2;  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if (num < n) {  	numArray [num] = new double[n - 1];  	num++;  	if ((((uint)low) - ((uint)num9)) > uint.MaxValue) {  		goto Label_0178;  	}  	if ((((uint)num3) + ((uint)num9)) <= uint.MaxValue) {  		if ((((uint)num6) | 2) == 0) {  			goto Label_019E;  		}  		goto Label_027B;  	}  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if ((((uint)num3) + ((uint)num9)) <= uint.MaxValue) {  	if ((((uint)num6) | 2) == 0) {  		goto Label_019E;  	}  	goto Label_027B;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,Equilat,The following statement contains a magic number: if ((((uint)num6) | 2) == 0) {  	goto Label_019E;  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,GetDistance,The following statement contains a magic number: for (int i = 0; i < data.GetLength (0); i++) {  	d += Math.Pow (data [i] - this._matrix [set] [i]' 2.0);  }  
Magic Number,Encog.MathUtil,Equilateral,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Equilateral.cs,GetDistance,The following statement contains a magic number: d += Math.Pow (data [i] - this._matrix [set] [i]' 2.0);  
Magic Number,Encog.MathUtil,LinearCongruentialGenerator,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LinearCongruentialGenerator.cs,NextDouble,The following statement contains a magic number: return (((double)this.NextLong ()) / 4294967295);  
Magic Number,Encog.MathUtil,EncogMath,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\EncogMath.cs,Deg2Rad,The following statement contains a magic number: return (deg * 0.017453292519943295);  
Magic Number,Encog.MathUtil,EncogMath,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\EncogMath.cs,Rad2Deg,The following statement contains a magic number: return (rad * 57.295779513082323);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (this._x08db3aeabb253cb1 != 0.0) {  	do {  		if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  			if (-2147483648 == 0) {  				goto Label_00F2;  			}  			goto Label_0051;  		}  		objArray = new object[4];  		objArray [0] = this._x08db3aeabb253cb1;  		objArray [1] = " + ";  		if (0 == 0) {  			objArray [2] = this._x1e218ceaee1bb583;  			goto Label_00F2;  		}  	}  	while (15 == 0);  	goto Label_0135;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (this._x08db3aeabb253cb1 != 0.0) {  	do {  		if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  			if (-2147483648 == 0) {  				goto Label_00F2;  			}  			goto Label_0051;  		}  		objArray = new object[4];  		objArray [0] = this._x08db3aeabb253cb1;  		objArray [1] = " + ";  		if (0 == 0) {  			objArray [2] = this._x1e218ceaee1bb583;  			goto Label_00F2;  		}  	}  	while (15 == 0);  	goto Label_0135;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (this._x08db3aeabb253cb1 != 0.0) {  	do {  		if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  			if (-2147483648 == 0) {  				goto Label_00F2;  			}  			goto Label_0051;  		}  		objArray = new object[4];  		objArray [0] = this._x08db3aeabb253cb1;  		objArray [1] = " + ";  		if (0 == 0) {  			objArray [2] = this._x1e218ceaee1bb583;  			goto Label_00F2;  		}  	}  	while (15 == 0);  	goto Label_0135;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (this._x08db3aeabb253cb1 != 0.0) {  	do {  		if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  			if (-2147483648 == 0) {  				goto Label_00F2;  			}  			goto Label_0051;  		}  		objArray = new object[4];  		objArray [0] = this._x08db3aeabb253cb1;  		objArray [1] = " + ";  		if (0 == 0) {  			objArray [2] = this._x1e218ceaee1bb583;  			goto Label_00F2;  		}  	}  	while (15 == 0);  	goto Label_0135;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: do {  	if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  		if (-2147483648 == 0) {  			goto Label_00F2;  		}  		goto Label_0051;  	}  	objArray = new object[4];  	objArray [0] = this._x08db3aeabb253cb1;  	objArray [1] = " + ";  	if (0 == 0) {  		objArray [2] = this._x1e218ceaee1bb583;  		goto Label_00F2;  	}  }  while (15 == 0);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: do {  	if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  		if (-2147483648 == 0) {  			goto Label_00F2;  		}  		goto Label_0051;  	}  	objArray = new object[4];  	objArray [0] = this._x08db3aeabb253cb1;  	objArray [1] = " + ";  	if (0 == 0) {  		objArray [2] = this._x1e218ceaee1bb583;  		goto Label_00F2;  	}  }  while (15 == 0);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: do {  	if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  		if (-2147483648 == 0) {  			goto Label_00F2;  		}  		goto Label_0051;  	}  	objArray = new object[4];  	objArray [0] = this._x08db3aeabb253cb1;  	objArray [1] = " + ";  	if (0 == 0) {  		objArray [2] = this._x1e218ceaee1bb583;  		goto Label_00F2;  	}  }  while (15 == 0);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: do {  	if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  		if (-2147483648 == 0) {  			goto Label_00F2;  		}  		goto Label_0051;  	}  	objArray = new object[4];  	objArray [0] = this._x08db3aeabb253cb1;  	objArray [1] = " + ";  	if (0 == 0) {  		objArray [2] = this._x1e218ceaee1bb583;  		goto Label_00F2;  	}  }  while (15 == 0);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if ((0 == 0) && (this._x1e218ceaee1bb583 <= 0.0)) {  	if (-2147483648 == 0) {  		goto Label_00F2;  	}  	goto Label_0051;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_00F2;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (0 == 0) {  	objArray [2] = this._x1e218ceaee1bb583;  	goto Label_00F2;  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: objArray [2] = this._x1e218ceaee1bb583;  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: while ((this._x08db3aeabb253cb1 != 0.0) && (this._x1e218ceaee1bb583 < 0.0)) {  	object[] objArray2 = new object[4];  	objArray2 [0] = this._x08db3aeabb253cb1;  	if (0 == 0) {  		objArray2 [1] = " - ";  		objArray2 [2] = -this._x1e218ceaee1bb583;  		objArray2 [3] = "i";  		return string.Concat (objArray2);  	}  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: while ((this._x08db3aeabb253cb1 != 0.0) && (this._x1e218ceaee1bb583 < 0.0)) {  	object[] objArray2 = new object[4];  	objArray2 [0] = this._x08db3aeabb253cb1;  	if (0 == 0) {  		objArray2 [1] = " - ";  		objArray2 [2] = -this._x1e218ceaee1bb583;  		objArray2 [3] = "i";  		return string.Concat (objArray2);  	}  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: while ((this._x08db3aeabb253cb1 != 0.0) && (this._x1e218ceaee1bb583 < 0.0)) {  	object[] objArray2 = new object[4];  	objArray2 [0] = this._x08db3aeabb253cb1;  	if (0 == 0) {  		objArray2 [1] = " - ";  		objArray2 [2] = -this._x1e218ceaee1bb583;  		objArray2 [3] = "i";  		return string.Concat (objArray2);  	}  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (0 == 0) {  	objArray2 [1] = " - ";  	objArray2 [2] = -this._x1e218ceaee1bb583;  	objArray2 [3] = "i";  	return string.Concat (objArray2);  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (0 == 0) {  	objArray2 [1] = " - ";  	objArray2 [2] = -this._x1e218ceaee1bb583;  	objArray2 [3] = "i";  	return string.Concat (objArray2);  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: objArray2 [2] = -this._x1e218ceaee1bb583;  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: objArray2 [3] = "i";  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: if (this._x1e218ceaee1bb583 == 0.0) {  	return Format.FormatDouble (this._x08db3aeabb253cb1' 4);  }  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: return Format.FormatDouble (this._x08db3aeabb253cb1' 4);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,ToString,The following statement contains a magic number: objArray [3] = "i";  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,x00b7cb0e4eefe32a,The following statement contains a magic number: return ((Math.Exp (x17338e069de9c29c) - Math.Exp (-x17338e069de9c29c)) / 2.0);  
Magic Number,Encog.MathUtil,ComplexNumber,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\ComplexNumber.cs,x96dd47ebf370a5ff,The following statement contains a magic number: return ((Math.Exp (x17338e069de9c29c) + Math.Exp (-x17338e069de9c29c)) / 2.0);  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: if (0 == 0) {  	builder.Append (Format.FormatDouble (this._xd12d1dba8a023d95' 5));  	builder.Append (" to ");  	builder.Append (Format.FormatDouble (this._x628ea9b89457a2a9' 5));  	builder.Append ("'samples: ");  	builder.Append (Format.FormatInteger (this._xdc8f3f8857bee4c6));  }  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: if (0 == 0) {  	builder.Append (Format.FormatDouble (this._xd12d1dba8a023d95' 5));  	builder.Append (" to ");  	builder.Append (Format.FormatDouble (this._x628ea9b89457a2a9' 5));  	builder.Append ("'samples: ");  	builder.Append (Format.FormatInteger (this._xdc8f3f8857bee4c6));  }  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: builder.Append (Format.FormatDouble (this._xd12d1dba8a023d95' 5));  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: builder.Append (Format.FormatDouble (this._x628ea9b89457a2a9' 5));  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: builder.Append (Format.FormatDouble (this._x0eb49ee242305597' 5));  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: builder.Append (Format.FormatDouble (this._xcce91100698a4514' 5));  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: do {  	builder.Append ("'s.deviation: ");  	builder.Append (Format.FormatDouble (this._x8db8a12c7e795fea' 5));  }  while (0xff == 0);  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,ToString,The following statement contains a magic number: builder.Append (Format.FormatDouble (this._x8db8a12c7e795fea' 5));  
Magic Number,Encog.MathUtil,NumericRange,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\NumericRange.cs,xf29670e286f5562f,The following statement contains a magic number: return Math.Pow (x73f821c71fe1e676 - this._x0eb49ee242305597' 2.0);  
Magic Number,Encog.ML.Data.Basic,BasicMLDataPair,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataPair.cs,Clone,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_00AF;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataPair,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataPair.cs,Clone,The following statement contains a magic number: if ((2 == 0) || (-2147483648 != 0)) {  	if (0 == 0) {  		goto Label_0028;  	}  	if (0 != 0) {  		goto Label_0045;  	}  	goto Label_000D;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataPair,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataPair.cs,Clone,The following statement contains a magic number: if ((2 == 0) || (-2147483648 != 0)) {  	if (0 == 0) {  		goto Label_0028;  	}  	if (0 != 0) {  		goto Label_0045;  	}  	goto Label_000D;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataPair,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataPair.cs,Clone,The following statement contains a magic number: if (15 != 0) {  	goto Label_00AF;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: if ((((uint)num3) | 0xff) != 0) {  	this.Add (data2' data);  	if ((((uint)num2) + ((uint)num)) < 0) {  		goto Label_010B;  	}  	num++;  	if (3 == 0) {  		goto Label_005A;  	}  	goto Label_0046;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: if (3 == 0) {  	goto Label_005A;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: if (num3 >= numArray2.Length) {  	data = new BasicMLData (numArray2);  	do {  		if ((((uint)num2) | 2) != 0) {  			goto Label_005A;  		}  	}  	while ((((uint)num2) + ((uint)num2)) < 0);  	goto Label_0054;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: do {  	if ((((uint)num2) | 2) != 0) {  		goto Label_005A;  	}  }  while ((((uint)num2) + ((uint)num2)) < 0);  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: if ((((uint)num2) | 2) != 0) {  	goto Label_005A;  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: if (num2 >= numArray.Length) {  	data = null;  	if (0 == 0) {  		goto Label_0054;  	}  	if ((((uint)num3) | 15) != 0) {  		goto Label_00CB;  	}  }  else {  	numArray [num2] = input [num] [num2];  	if ((((uint)num3) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0107;  	}  }  
Magic Number,Encog.ML.Data.Basic,BasicMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Basic\BasicMLDataSet.cs,BasicMLDataSet,The following statement contains a magic number: if ((((uint)num3) | 15) != 0) {  	goto Label_00CB;  }  
Magic Number,Encog.Neural.Rbf.Training,SVDTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\Training\SVDTraining.cs,SVDTraining,The following statement contains a magic number: while (-2147483648 != 0) {  	if (network_0.OutputCount != 1) {  		break;  	}  	this.Training = training;  	this.x87a7fc6a72741c2e = network_0;  	if (0 != 0) {  		break;  	}  	return;  }  
Magic Number,Encog.Neural.Rbf.Training,SVDTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\Training\SVDTraining.cs,FlatToMatrix,The following statement contains a magic number: if ((((uint)num3) | 2) == 0) {  	return;  }  
Magic Number,Encog.Neural.Rbf.Training,SVDTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\Training\SVDTraining.cs,Iteration,The following statement contains a magic number: if (index < length) {  	function = this.x87a7fc6a72741c2e.RBF [index];  }  else {  	pair = TrainingSetUtil.TrainingToArray (this.Training);  	numArray = EngineArray.AllocateDouble2D (length' this.x87a7fc6a72741c2e.OutputCount);  	if (4 != 0) {  		goto Label_0013;  	}  }  
Magic Number,Encog.Neural.Rbf.Training,SVDTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\Training\SVDTraining.cs,Iteration,The following statement contains a magic number: if (4 != 0) {  	goto Label_0013;  }  
Magic Number,Encog.Neural.Rbf.Training,SVDTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\Training\SVDTraining.cs,Iteration,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0013;  }  
Magic Number,Encog.Util.Simple,TrainingSetUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingSetUtil.cs,LoadCSVTOMemory,The following statement contains a magic number: if (num2 < inputSize) {  	double num3 = dcsv.GetDouble (num++);  	if (-2147483648 != 0) {  		data2 [num2] = num3;  		if ((((uint)idealSize) + ((uint)num)) >= 0) {  			num2++;  		}  		if ((((uint)num) - ((uint)idealSize)) >= 0) {  			goto Label_006A;  		}  		goto Label_0125;  	}  }  else {  	if (0 == 0) {  		goto Label_000B;  	}  	if (0 == 0) {  		goto Label_0125;  	}  }  
Magic Number,Encog.Util.Simple,TrainingSetUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingSetUtil.cs,LoadCSVTOMemory,The following statement contains a magic number: if (-2147483648 != 0) {  	data2 [num2] = num3;  	if ((((uint)idealSize) + ((uint)num)) >= 0) {  		num2++;  	}  	if ((((uint)num) - ((uint)idealSize)) >= 0) {  		goto Label_006A;  	}  	goto Label_0125;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: do {  	this.x90baa23478571135 = new Label ();  	this.x69348f12a2d182e0 = new TextBox ();  	this.xdbf51c857aeb8093 = new TextBox ();  	this.x5eeb14dd32b55d82 = new TextBox ();  	base.SuspendLayout ();  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (12' 9);  }  while (0 != 0);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: do {  	this.x90baa23478571135 = new Label ();  	this.x69348f12a2d182e0 = new TextBox ();  	this.xdbf51c857aeb8093 = new TextBox ();  	this.x5eeb14dd32b55d82 = new TextBox ();  	base.SuspendLayout ();  	this.xf5622c25220a6c23.AutoSize = true;  	this.xf5622c25220a6c23.Location = new Point (12' 9);  }  while (0 != 0);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.Location = new Point (12' 9);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.Location = new Point (12' 9);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 != 0) {  	base.Controls.Add (this.xf5622c25220a6c23);  	base.Name = "TrainingDialog";  	this.Text = "Training";  	base.ResumeLayout (false);  	base.PerformLayout ();  	if (0 == 0) {  		return;  	}  	goto Label_0272;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (15 != 0) {  	if (0xff == 0) {  		goto Label_00CD;  	}  	goto Label_0096;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x5eeb14dd32b55d82.Size = new Size (100' 20);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x5eeb14dd32b55d82.Size = new Size (100' 20);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (8 != 0) {  	this.x5eeb14dd32b55d82.TabIndex = 6;  	base.AutoScaleDimensions = new SizeF (6f' 13f);  	goto Label_00CD;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (8 != 0) {  	this.x5eeb14dd32b55d82.TabIndex = 6;  	base.AutoScaleDimensions = new SizeF (6f' 13f);  	goto Label_00CD;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x5eeb14dd32b55d82.TabIndex = 6;  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xdbf51c857aeb8093.Size = new Size (100' 20);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xdbf51c857aeb8093.Size = new Size (100' 20);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (3 == 0) {  	goto Label_02A0;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xdbf51c857aeb8093.TabIndex = 5;  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.x5eeb14dd32b55d82.ReadOnly = true;  	if (4 == 0) {  		goto Label_00E6;  	}  	goto Label_0120;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (4 == 0) {  	goto Label_00E6;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (4 == 0) {  	goto Label_00D4;  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x90baa23478571135.Size = new Size (0x4a' 13);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x90baa23478571135.TabIndex = 3;  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x69348f12a2d182e0.Location = new Point (0x85' 6);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x69348f12a2d182e0.Size = new Size (100' 20);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x69348f12a2d182e0.Size = new Size (100' 20);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x69348f12a2d182e0.TabIndex = 4;  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xf5622c25220a6c23.Size = new Size (0x45' 13);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	this.xde320a064856d64c.Location = new Point (15' 0x60);  	this.xde320a064856d64c.Name = "button1";  	this.xde320a064856d64c.Size = new Size (0xda' 0x17);  	this.xde320a064856d64c.TabIndex = 1;  	if (0 != 0) {  		goto Label_03E4;  	}  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.xde320a064856d64c.Location = new Point (15' 0x60);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	do {  		this.xde320a064856d64c.Text = "Stop";  		this.xde320a064856d64c.UseVisualStyleBackColor = true;  		this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  		this.x9001f8afc870fc4c.AutoSize = true;  		this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  		this.x9001f8afc870fc4c.Name = "label2";  		this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  		this.x9001f8afc870fc4c.TabIndex = 2;  		this.x9001f8afc870fc4c.Text = "Iterations:";  		this.x90baa23478571135.AutoSize = true;  		this.x90baa23478571135.Location = new Point (12' 0x42);  	}  	while (0 != 0);  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	do {  		this.xde320a064856d64c.Text = "Stop";  		this.xde320a064856d64c.UseVisualStyleBackColor = true;  		this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  		this.x9001f8afc870fc4c.AutoSize = true;  		this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  		this.x9001f8afc870fc4c.Name = "label2";  		this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  		this.x9001f8afc870fc4c.TabIndex = 2;  		this.x9001f8afc870fc4c.Text = "Iterations:";  		this.x90baa23478571135.AutoSize = true;  		this.x90baa23478571135.Location = new Point (12' 0x42);  	}  	while (0 != 0);  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	do {  		this.xde320a064856d64c.Text = "Stop";  		this.xde320a064856d64c.UseVisualStyleBackColor = true;  		this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  		this.x9001f8afc870fc4c.AutoSize = true;  		this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  		this.x9001f8afc870fc4c.Name = "label2";  		this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  		this.x9001f8afc870fc4c.TabIndex = 2;  		this.x9001f8afc870fc4c.Text = "Iterations:";  		this.x90baa23478571135.AutoSize = true;  		this.x90baa23478571135.Location = new Point (12' 0x42);  	}  	while (0 != 0);  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: if (0 == 0) {  	do {  		this.xde320a064856d64c.Text = "Stop";  		this.xde320a064856d64c.UseVisualStyleBackColor = true;  		this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  		this.x9001f8afc870fc4c.AutoSize = true;  		this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  		this.x9001f8afc870fc4c.Name = "label2";  		this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  		this.x9001f8afc870fc4c.TabIndex = 2;  		this.x9001f8afc870fc4c.Text = "Iterations:";  		this.x90baa23478571135.AutoSize = true;  		this.x90baa23478571135.Location = new Point (12' 0x42);  	}  	while (0 != 0);  }  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: do {  	this.xde320a064856d64c.Text = "Stop";  	this.xde320a064856d64c.UseVisualStyleBackColor = true;  	this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  	this.x9001f8afc870fc4c.AutoSize = true;  	this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  	this.x9001f8afc870fc4c.Name = "label2";  	this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  	this.x9001f8afc870fc4c.TabIndex = 2;  	this.x9001f8afc870fc4c.Text = "Iterations:";  	this.x90baa23478571135.AutoSize = true;  	this.x90baa23478571135.Location = new Point (12' 0x42);  }  while (0 != 0);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: do {  	this.xde320a064856d64c.Text = "Stop";  	this.xde320a064856d64c.UseVisualStyleBackColor = true;  	this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  	this.x9001f8afc870fc4c.AutoSize = true;  	this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  	this.x9001f8afc870fc4c.Name = "label2";  	this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  	this.x9001f8afc870fc4c.TabIndex = 2;  	this.x9001f8afc870fc4c.Text = "Iterations:";  	this.x90baa23478571135.AutoSize = true;  	this.x90baa23478571135.Location = new Point (12' 0x42);  }  while (0 != 0);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: do {  	this.xde320a064856d64c.Text = "Stop";  	this.xde320a064856d64c.UseVisualStyleBackColor = true;  	this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  	this.x9001f8afc870fc4c.AutoSize = true;  	this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  	this.x9001f8afc870fc4c.Name = "label2";  	this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  	this.x9001f8afc870fc4c.TabIndex = 2;  	this.x9001f8afc870fc4c.Text = "Iterations:";  	this.x90baa23478571135.AutoSize = true;  	this.x90baa23478571135.Location = new Point (12' 0x42);  }  while (0 != 0);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: do {  	this.xde320a064856d64c.Text = "Stop";  	this.xde320a064856d64c.UseVisualStyleBackColor = true;  	this.xde320a064856d64c.Click += new EventHandler (this.x328c0b730b0ebcd7);  	this.x9001f8afc870fc4c.AutoSize = true;  	this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  	this.x9001f8afc870fc4c.Name = "label2";  	this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  	this.x9001f8afc870fc4c.TabIndex = 2;  	this.x9001f8afc870fc4c.Text = "Iterations:";  	this.x90baa23478571135.AutoSize = true;  	this.x90baa23478571135.Location = new Point (12' 0x42);  }  while (0 != 0);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.Location = new Point (12' 0x24);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.Size = new Size (0x35' 13);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x9001f8afc870fc4c.TabIndex = 2;  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,x85601834555fb7d5,The following statement contains a magic number: this.x90baa23478571135.Location = new Point (12' 0x42);  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,xf2ddabe42457f139,The following statement contains a magic number: objArray [2] = Encog.Util.Format.FormatTimeSpan ((int)num4) ?? "";  
Magic Number,Encog.Util.Simple,TrainingDialog,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\TrainingDialog.cs,xf2ddabe42457f139,The following statement contains a magic number: objArray = new object[3];  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,ConvertCSV2Binary,The following statement contains a magic number: if (dcsv.Next () || ((((uint)num) - ((uint)num2)) > uint.MaxValue)) {  	data = new BasicMLData (input.Length);  	if ((((uint)headers) | uint.MaxValue) != 0) {  		data2 = new BasicMLData (ideal.Length);  		if (4 != 0) {  			if (((uint)num) <= uint.MaxValue) {  				goto Label_0073;  			}  			goto Label_00FB;  		}  	}  	goto Label_00C0;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,ConvertCSV2Binary,The following statement contains a magic number: if ((((uint)headers) | uint.MaxValue) != 0) {  	data2 = new BasicMLData (ideal.Length);  	if (4 != 0) {  		if (((uint)num) <= uint.MaxValue) {  			goto Label_0073;  		}  		goto Label_00FB;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,ConvertCSV2Binary,The following statement contains a magic number: if (4 != 0) {  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0073;  	}  	goto Label_00FB;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	string[] strArray;  	Label_0009:  	if (!enumerator.MoveNext ()) {  		if (2 == 0) {  			goto Label_005B;  		}  		if (0 == 0) {  			return;  		}  	}  	goto Label_0095;  	Label_0026:  	strArray [4] = "' Ideal=";  	Label_002E:  	strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  	Console.WriteLine (string.Concat (strArray));  	if (0 == 0) {  		goto Label_00A3;  	}  	goto Label_0095;  	Label_004C:  	strArray = new string[6];  	strArray [0] = "Input=";  	Label_005B:  	strArray [1] = x8d742ff2b6748ce6 (pair.Input);  	strArray [2] = "' Actual=";  	strArray [3] = x8d742ff2b6748ce6 (data);  	goto Label_0026;  	Label_007C:  	if (0 != 0) {  		goto Label_002E;  	}  	data = network.Compute (pair.Input);  	if (1 != 0) {  		goto Label_004C;  	}  	goto Label_0026;  	Label_0095:  	pair = enumerator.Current;  	goto Label_007C;  	Label_00A3:  	if (0xff != 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	string[] strArray;  	Label_0009:  	if (!enumerator.MoveNext ()) {  		if (2 == 0) {  			goto Label_005B;  		}  		if (0 == 0) {  			return;  		}  	}  	goto Label_0095;  	Label_0026:  	strArray [4] = "' Ideal=";  	Label_002E:  	strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  	Console.WriteLine (string.Concat (strArray));  	if (0 == 0) {  		goto Label_00A3;  	}  	goto Label_0095;  	Label_004C:  	strArray = new string[6];  	strArray [0] = "Input=";  	Label_005B:  	strArray [1] = x8d742ff2b6748ce6 (pair.Input);  	strArray [2] = "' Actual=";  	strArray [3] = x8d742ff2b6748ce6 (data);  	goto Label_0026;  	Label_007C:  	if (0 != 0) {  		goto Label_002E;  	}  	data = network.Compute (pair.Input);  	if (1 != 0) {  		goto Label_004C;  	}  	goto Label_0026;  	Label_0095:  	pair = enumerator.Current;  	goto Label_007C;  	Label_00A3:  	if (0xff != 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	string[] strArray;  	Label_0009:  	if (!enumerator.MoveNext ()) {  		if (2 == 0) {  			goto Label_005B;  		}  		if (0 == 0) {  			return;  		}  	}  	goto Label_0095;  	Label_0026:  	strArray [4] = "' Ideal=";  	Label_002E:  	strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  	Console.WriteLine (string.Concat (strArray));  	if (0 == 0) {  		goto Label_00A3;  	}  	goto Label_0095;  	Label_004C:  	strArray = new string[6];  	strArray [0] = "Input=";  	Label_005B:  	strArray [1] = x8d742ff2b6748ce6 (pair.Input);  	strArray [2] = "' Actual=";  	strArray [3] = x8d742ff2b6748ce6 (data);  	goto Label_0026;  	Label_007C:  	if (0 != 0) {  		goto Label_002E;  	}  	data = network.Compute (pair.Input);  	if (1 != 0) {  		goto Label_004C;  	}  	goto Label_0026;  	Label_0095:  	pair = enumerator.Current;  	goto Label_007C;  	Label_00A3:  	if (0xff != 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	string[] strArray;  	Label_0009:  	if (!enumerator.MoveNext ()) {  		if (2 == 0) {  			goto Label_005B;  		}  		if (0 == 0) {  			return;  		}  	}  	goto Label_0095;  	Label_0026:  	strArray [4] = "' Ideal=";  	Label_002E:  	strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  	Console.WriteLine (string.Concat (strArray));  	if (0 == 0) {  		goto Label_00A3;  	}  	goto Label_0095;  	Label_004C:  	strArray = new string[6];  	strArray [0] = "Input=";  	Label_005B:  	strArray [1] = x8d742ff2b6748ce6 (pair.Input);  	strArray [2] = "' Actual=";  	strArray [3] = x8d742ff2b6748ce6 (data);  	goto Label_0026;  	Label_007C:  	if (0 != 0) {  		goto Label_002E;  	}  	data = network.Compute (pair.Input);  	if (1 != 0) {  		goto Label_004C;  	}  	goto Label_0026;  	Label_0095:  	pair = enumerator.Current;  	goto Label_007C;  	Label_00A3:  	if (0xff != 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	string[] strArray;  	Label_0009:  	if (!enumerator.MoveNext ()) {  		if (2 == 0) {  			goto Label_005B;  		}  		if (0 == 0) {  			return;  		}  	}  	goto Label_0095;  	Label_0026:  	strArray [4] = "' Ideal=";  	Label_002E:  	strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  	Console.WriteLine (string.Concat (strArray));  	if (0 == 0) {  		goto Label_00A3;  	}  	goto Label_0095;  	Label_004C:  	strArray = new string[6];  	strArray [0] = "Input=";  	Label_005B:  	strArray [1] = x8d742ff2b6748ce6 (pair.Input);  	strArray [2] = "' Actual=";  	strArray [3] = x8d742ff2b6748ce6 (data);  	goto Label_0026;  	Label_007C:  	if (0 != 0) {  		goto Label_002E;  	}  	data = network.Compute (pair.Input);  	if (1 != 0) {  		goto Label_004C;  	}  	goto Label_0026;  	Label_0095:  	pair = enumerator.Current;  	goto Label_007C;  	Label_00A3:  	if (0xff != 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = training.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	string[] strArray;  	Label_0009:  	if (!enumerator.MoveNext ()) {  		if (2 == 0) {  			goto Label_005B;  		}  		if (0 == 0) {  			return;  		}  	}  	goto Label_0095;  	Label_0026:  	strArray [4] = "' Ideal=";  	Label_002E:  	strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  	Console.WriteLine (string.Concat (strArray));  	if (0 == 0) {  		goto Label_00A3;  	}  	goto Label_0095;  	Label_004C:  	strArray = new string[6];  	strArray [0] = "Input=";  	Label_005B:  	strArray [1] = x8d742ff2b6748ce6 (pair.Input);  	strArray [2] = "' Actual=";  	strArray [3] = x8d742ff2b6748ce6 (data);  	goto Label_0026;  	Label_007C:  	if (0 != 0) {  		goto Label_002E;  	}  	data = network.Compute (pair.Input);  	if (1 != 0) {  		goto Label_004C;  	}  	goto Label_0026;  	Label_0095:  	pair = enumerator.Current;  	goto Label_007C;  	Label_00A3:  	if (0xff != 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: if (!enumerator.MoveNext ()) {  	if (2 == 0) {  		goto Label_005B;  	}  	if (0 == 0) {  		return;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: if (2 == 0) {  	goto Label_005B;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: strArray [4] = "' Ideal=";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: strArray [5] = x8d742ff2b6748ce6 (pair.Ideal);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: strArray = new string[6];  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: strArray [2] = "' Actual=";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,Evaluate,The following statement contains a magic number: strArray [3] = x8d742ff2b6748ce6 (data);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: try {  	StreamWriter writer = new StreamWriter (targetFile.ToString ());  	using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  		IMLDataPair pair;  		StringBuilder builder;  		int num;  		double num2;  		int num3;  		double num4;  		goto Label_002E;  		Label_0016:  		if ((((uint)num2) + ((uint)num2)) >= 0) {  		}  		Label_002E:  		if (enumerator.MoveNext ()) {  			goto Label_00F5;  		}  		goto Label_012F;  		Label_003F:  		writer.WriteLine (builder);  		goto Label_0117;  		Label_004B:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num4' 10));  		num3++;  		Label_0069:  		if (num3 >= pair.Ideal.Count) {  			if (3 != 0) {  				goto Label_003F;  			}  		}  		else {  			num4 = pair.Ideal [num3];  			goto Label_004B;  		}  		Label_0094:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num2' 10));  		num++;  		Label_00B0:  		if (num < pair.Input.Count) {  			goto Label_0107;  		}  		num3 = 0;  		goto Label_0069;  		Label_00CF:  		if (15 == 0) {  			goto Label_0069;  		}  		if ((((uint)num3) | 0xff) != 0) {  			goto Label_0094;  		}  		Label_00F5:  		pair = enumerator.Current;  		builder = new StringBuilder ();  		num = 0;  		goto Label_00B0;  		Label_0107:  		num2 = pair.Input [num];  		goto Label_00CF;  		Label_0117:  		if (-2147483648 != 0) {  			goto Label_0016;  		}  	}  	Label_012F:  	writer.Close ();  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: try {  	StreamWriter writer = new StreamWriter (targetFile.ToString ());  	using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  		IMLDataPair pair;  		StringBuilder builder;  		int num;  		double num2;  		int num3;  		double num4;  		goto Label_002E;  		Label_0016:  		if ((((uint)num2) + ((uint)num2)) >= 0) {  		}  		Label_002E:  		if (enumerator.MoveNext ()) {  			goto Label_00F5;  		}  		goto Label_012F;  		Label_003F:  		writer.WriteLine (builder);  		goto Label_0117;  		Label_004B:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num4' 10));  		num3++;  		Label_0069:  		if (num3 >= pair.Ideal.Count) {  			if (3 != 0) {  				goto Label_003F;  			}  		}  		else {  			num4 = pair.Ideal [num3];  			goto Label_004B;  		}  		Label_0094:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num2' 10));  		num++;  		Label_00B0:  		if (num < pair.Input.Count) {  			goto Label_0107;  		}  		num3 = 0;  		goto Label_0069;  		Label_00CF:  		if (15 == 0) {  			goto Label_0069;  		}  		if ((((uint)num3) | 0xff) != 0) {  			goto Label_0094;  		}  		Label_00F5:  		pair = enumerator.Current;  		builder = new StringBuilder ();  		num = 0;  		goto Label_00B0;  		Label_0107:  		num2 = pair.Input [num];  		goto Label_00CF;  		Label_0117:  		if (-2147483648 != 0) {  			goto Label_0016;  		}  	}  	Label_012F:  	writer.Close ();  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: try {  	StreamWriter writer = new StreamWriter (targetFile.ToString ());  	using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  		IMLDataPair pair;  		StringBuilder builder;  		int num;  		double num2;  		int num3;  		double num4;  		goto Label_002E;  		Label_0016:  		if ((((uint)num2) + ((uint)num2)) >= 0) {  		}  		Label_002E:  		if (enumerator.MoveNext ()) {  			goto Label_00F5;  		}  		goto Label_012F;  		Label_003F:  		writer.WriteLine (builder);  		goto Label_0117;  		Label_004B:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num4' 10));  		num3++;  		Label_0069:  		if (num3 >= pair.Ideal.Count) {  			if (3 != 0) {  				goto Label_003F;  			}  		}  		else {  			num4 = pair.Ideal [num3];  			goto Label_004B;  		}  		Label_0094:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num2' 10));  		num++;  		Label_00B0:  		if (num < pair.Input.Count) {  			goto Label_0107;  		}  		num3 = 0;  		goto Label_0069;  		Label_00CF:  		if (15 == 0) {  			goto Label_0069;  		}  		if ((((uint)num3) | 0xff) != 0) {  			goto Label_0094;  		}  		Label_00F5:  		pair = enumerator.Current;  		builder = new StringBuilder ();  		num = 0;  		goto Label_00B0;  		Label_0107:  		num2 = pair.Input [num];  		goto Label_00CF;  		Label_0117:  		if (-2147483648 != 0) {  			goto Label_0016;  		}  	}  	Label_012F:  	writer.Close ();  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: try {  	StreamWriter writer = new StreamWriter (targetFile.ToString ());  	using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  		IMLDataPair pair;  		StringBuilder builder;  		int num;  		double num2;  		int num3;  		double num4;  		goto Label_002E;  		Label_0016:  		if ((((uint)num2) + ((uint)num2)) >= 0) {  		}  		Label_002E:  		if (enumerator.MoveNext ()) {  			goto Label_00F5;  		}  		goto Label_012F;  		Label_003F:  		writer.WriteLine (builder);  		goto Label_0117;  		Label_004B:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num4' 10));  		num3++;  		Label_0069:  		if (num3 >= pair.Ideal.Count) {  			if (3 != 0) {  				goto Label_003F;  			}  		}  		else {  			num4 = pair.Ideal [num3];  			goto Label_004B;  		}  		Label_0094:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num2' 10));  		num++;  		Label_00B0:  		if (num < pair.Input.Count) {  			goto Label_0107;  		}  		num3 = 0;  		goto Label_0069;  		Label_00CF:  		if (15 == 0) {  			goto Label_0069;  		}  		if ((((uint)num3) | 0xff) != 0) {  			goto Label_0094;  		}  		Label_00F5:  		pair = enumerator.Current;  		builder = new StringBuilder ();  		num = 0;  		goto Label_00B0;  		Label_0107:  		num2 = pair.Input [num];  		goto Label_00CF;  		Label_0117:  		if (-2147483648 != 0) {  			goto Label_0016;  		}  	}  	Label_012F:  	writer.Close ();  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: try {  	StreamWriter writer = new StreamWriter (targetFile.ToString ());  	using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  		IMLDataPair pair;  		StringBuilder builder;  		int num;  		double num2;  		int num3;  		double num4;  		goto Label_002E;  		Label_0016:  		if ((((uint)num2) + ((uint)num2)) >= 0) {  		}  		Label_002E:  		if (enumerator.MoveNext ()) {  			goto Label_00F5;  		}  		goto Label_012F;  		Label_003F:  		writer.WriteLine (builder);  		goto Label_0117;  		Label_004B:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num4' 10));  		num3++;  		Label_0069:  		if (num3 >= pair.Ideal.Count) {  			if (3 != 0) {  				goto Label_003F;  			}  		}  		else {  			num4 = pair.Ideal [num3];  			goto Label_004B;  		}  		Label_0094:  		BasicFile.AppendSeparator (builder' format);  		builder.Append (format.Format (num2' 10));  		num++;  		Label_00B0:  		if (num < pair.Input.Count) {  			goto Label_0107;  		}  		num3 = 0;  		goto Label_0069;  		Label_00CF:  		if (15 == 0) {  			goto Label_0069;  		}  		if ((((uint)num3) | 0xff) != 0) {  			goto Label_0094;  		}  		Label_00F5:  		pair = enumerator.Current;  		builder = new StringBuilder ();  		num = 0;  		goto Label_00B0;  		Label_0107:  		num2 = pair.Input [num];  		goto Label_00CF;  		Label_0117:  		if (-2147483648 != 0) {  			goto Label_0016;  		}  	}  	Label_012F:  	writer.Close ();  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  	IMLDataPair pair;  	StringBuilder builder;  	int num;  	double num2;  	int num3;  	double num4;  	goto Label_002E;  	Label_0016:  	if ((((uint)num2) + ((uint)num2)) >= 0) {  	}  	Label_002E:  	if (enumerator.MoveNext ()) {  		goto Label_00F5;  	}  	goto Label_012F;  	Label_003F:  	writer.WriteLine (builder);  	goto Label_0117;  	Label_004B:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num4' 10));  	num3++;  	Label_0069:  	if (num3 >= pair.Ideal.Count) {  		if (3 != 0) {  			goto Label_003F;  		}  	}  	else {  		num4 = pair.Ideal [num3];  		goto Label_004B;  	}  	Label_0094:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num2' 10));  	num++;  	Label_00B0:  	if (num < pair.Input.Count) {  		goto Label_0107;  	}  	num3 = 0;  	goto Label_0069;  	Label_00CF:  	if (15 == 0) {  		goto Label_0069;  	}  	if ((((uint)num3) | 0xff) != 0) {  		goto Label_0094;  	}  	Label_00F5:  	pair = enumerator.Current;  	builder = new StringBuilder ();  	num = 0;  	goto Label_00B0;  	Label_0107:  	num2 = pair.Input [num];  	goto Label_00CF;  	Label_0117:  	if (-2147483648 != 0) {  		goto Label_0016;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  	IMLDataPair pair;  	StringBuilder builder;  	int num;  	double num2;  	int num3;  	double num4;  	goto Label_002E;  	Label_0016:  	if ((((uint)num2) + ((uint)num2)) >= 0) {  	}  	Label_002E:  	if (enumerator.MoveNext ()) {  		goto Label_00F5;  	}  	goto Label_012F;  	Label_003F:  	writer.WriteLine (builder);  	goto Label_0117;  	Label_004B:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num4' 10));  	num3++;  	Label_0069:  	if (num3 >= pair.Ideal.Count) {  		if (3 != 0) {  			goto Label_003F;  		}  	}  	else {  		num4 = pair.Ideal [num3];  		goto Label_004B;  	}  	Label_0094:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num2' 10));  	num++;  	Label_00B0:  	if (num < pair.Input.Count) {  		goto Label_0107;  	}  	num3 = 0;  	goto Label_0069;  	Label_00CF:  	if (15 == 0) {  		goto Label_0069;  	}  	if ((((uint)num3) | 0xff) != 0) {  		goto Label_0094;  	}  	Label_00F5:  	pair = enumerator.Current;  	builder = new StringBuilder ();  	num = 0;  	goto Label_00B0;  	Label_0107:  	num2 = pair.Input [num];  	goto Label_00CF;  	Label_0117:  	if (-2147483648 != 0) {  		goto Label_0016;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  	IMLDataPair pair;  	StringBuilder builder;  	int num;  	double num2;  	int num3;  	double num4;  	goto Label_002E;  	Label_0016:  	if ((((uint)num2) + ((uint)num2)) >= 0) {  	}  	Label_002E:  	if (enumerator.MoveNext ()) {  		goto Label_00F5;  	}  	goto Label_012F;  	Label_003F:  	writer.WriteLine (builder);  	goto Label_0117;  	Label_004B:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num4' 10));  	num3++;  	Label_0069:  	if (num3 >= pair.Ideal.Count) {  		if (3 != 0) {  			goto Label_003F;  		}  	}  	else {  		num4 = pair.Ideal [num3];  		goto Label_004B;  	}  	Label_0094:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num2' 10));  	num++;  	Label_00B0:  	if (num < pair.Input.Count) {  		goto Label_0107;  	}  	num3 = 0;  	goto Label_0069;  	Label_00CF:  	if (15 == 0) {  		goto Label_0069;  	}  	if ((((uint)num3) | 0xff) != 0) {  		goto Label_0094;  	}  	Label_00F5:  	pair = enumerator.Current;  	builder = new StringBuilder ();  	num = 0;  	goto Label_00B0;  	Label_0107:  	num2 = pair.Input [num];  	goto Label_00CF;  	Label_0117:  	if (-2147483648 != 0) {  		goto Label_0016;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  	IMLDataPair pair;  	StringBuilder builder;  	int num;  	double num2;  	int num3;  	double num4;  	goto Label_002E;  	Label_0016:  	if ((((uint)num2) + ((uint)num2)) >= 0) {  	}  	Label_002E:  	if (enumerator.MoveNext ()) {  		goto Label_00F5;  	}  	goto Label_012F;  	Label_003F:  	writer.WriteLine (builder);  	goto Label_0117;  	Label_004B:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num4' 10));  	num3++;  	Label_0069:  	if (num3 >= pair.Ideal.Count) {  		if (3 != 0) {  			goto Label_003F;  		}  	}  	else {  		num4 = pair.Ideal [num3];  		goto Label_004B;  	}  	Label_0094:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num2' 10));  	num++;  	Label_00B0:  	if (num < pair.Input.Count) {  		goto Label_0107;  	}  	num3 = 0;  	goto Label_0069;  	Label_00CF:  	if (15 == 0) {  		goto Label_0069;  	}  	if ((((uint)num3) | 0xff) != 0) {  		goto Label_0094;  	}  	Label_00F5:  	pair = enumerator.Current;  	builder = new StringBuilder ();  	num = 0;  	goto Label_00B0;  	Label_0107:  	num2 = pair.Input [num];  	goto Label_00CF;  	Label_0117:  	if (-2147483648 != 0) {  		goto Label_0016;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = set.GetEnumerator ()) {  	IMLDataPair pair;  	StringBuilder builder;  	int num;  	double num2;  	int num3;  	double num4;  	goto Label_002E;  	Label_0016:  	if ((((uint)num2) + ((uint)num2)) >= 0) {  	}  	Label_002E:  	if (enumerator.MoveNext ()) {  		goto Label_00F5;  	}  	goto Label_012F;  	Label_003F:  	writer.WriteLine (builder);  	goto Label_0117;  	Label_004B:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num4' 10));  	num3++;  	Label_0069:  	if (num3 >= pair.Ideal.Count) {  		if (3 != 0) {  			goto Label_003F;  		}  	}  	else {  		num4 = pair.Ideal [num3];  		goto Label_004B;  	}  	Label_0094:  	BasicFile.AppendSeparator (builder' format);  	builder.Append (format.Format (num2' 10));  	num++;  	Label_00B0:  	if (num < pair.Input.Count) {  		goto Label_0107;  	}  	num3 = 0;  	goto Label_0069;  	Label_00CF:  	if (15 == 0) {  		goto Label_0069;  	}  	if ((((uint)num3) | 0xff) != 0) {  		goto Label_0094;  	}  	Label_00F5:  	pair = enumerator.Current;  	builder = new StringBuilder ();  	num = 0;  	goto Label_00B0;  	Label_0107:  	num2 = pair.Input [num];  	goto Label_00CF;  	Label_0117:  	if (-2147483648 != 0) {  		goto Label_0016;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: builder.Append (format.Format (num4' 10));  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: if (num3 >= pair.Ideal.Count) {  	if (3 != 0) {  		goto Label_003F;  	}  }  else {  	num4 = pair.Ideal [num3];  	goto Label_004B;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: if (3 != 0) {  	goto Label_003F;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: builder.Append (format.Format (num2' 10));  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: if (15 == 0) {  	goto Label_0069;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SaveCSV,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0016;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,SimpleFeedForward,The following statement contains a magic number: if ((((uint)tanh) | 3) != 0) {  	goto Label_0067;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: while (true) {  	string[] strArray = new string[8];  	if ((((uint)num5) | 4) == 0) {  		goto Label_0194;  	}  	strArray [0] = "Iteration #";  	strArray [1] = Format.FormatInteger (i);  	strArray [2] = " Error:";  	strArray [3] = Format.FormatPercent (train.Error);  	strArray [4] = " elapsed time = ";  	if ((((uint)i) + ((uint)i)) >= 0) {  		if ((((uint)num4) & 0) == 0) {  			if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  				goto Label_0025;  			}  			if (((uint)num5) > uint.MaxValue) {  				goto Label_003A;  			}  			strArray [5] = Format.FormatTimeSpan ((int)num5);  			strArray [6] = " time left = ";  		}  		strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  		Console.WriteLine (string.Concat (strArray));  		i++;  		goto Label_0052;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)num5) | 4) == 0) {  	goto Label_0194;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [2] = " Error:";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [3] = Format.FormatPercent (train.Error);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [4] = " elapsed time = ";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)i) + ((uint)i)) >= 0) {  	if ((((uint)num4) & 0) == 0) {  		if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  			goto Label_0025;  		}  		if (((uint)num5) > uint.MaxValue) {  			goto Label_003A;  		}  		strArray [5] = Format.FormatTimeSpan ((int)num5);  		strArray [6] = " time left = ";  	}  	strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  	Console.WriteLine (string.Concat (strArray));  	i++;  	goto Label_0052;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)i) + ((uint)i)) >= 0) {  	if ((((uint)num4) & 0) == 0) {  		if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  			goto Label_0025;  		}  		if (((uint)num5) > uint.MaxValue) {  			goto Label_003A;  		}  		strArray [5] = Format.FormatTimeSpan ((int)num5);  		strArray [6] = " time left = ";  	}  	strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  	Console.WriteLine (string.Concat (strArray));  	i++;  	goto Label_0052;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)i) + ((uint)i)) >= 0) {  	if ((((uint)num4) & 0) == 0) {  		if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  			goto Label_0025;  		}  		if (((uint)num5) > uint.MaxValue) {  			goto Label_003A;  		}  		strArray [5] = Format.FormatTimeSpan ((int)num5);  		strArray [6] = " time left = ";  	}  	strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  	Console.WriteLine (string.Concat (strArray));  	i++;  	goto Label_0052;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)i) + ((uint)i)) >= 0) {  	if ((((uint)num4) & 0) == 0) {  		if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  			goto Label_0025;  		}  		if (((uint)num5) > uint.MaxValue) {  			goto Label_003A;  		}  		strArray [5] = Format.FormatTimeSpan ((int)num5);  		strArray [6] = " time left = ";  	}  	strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  	Console.WriteLine (string.Concat (strArray));  	i++;  	goto Label_0052;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)num4) & 0) == 0) {  	if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  		goto Label_0025;  	}  	if (((uint)num5) > uint.MaxValue) {  		goto Label_003A;  	}  	strArray [5] = Format.FormatTimeSpan ((int)num5);  	strArray [6] = " time left = ";  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: if ((((uint)num4) & 0) == 0) {  	if ((((uint)minutes) + ((uint)minutes)) > uint.MaxValue) {  		goto Label_0025;  	}  	if (((uint)num5) > uint.MaxValue) {  		goto Label_003A;  	}  	strArray [5] = Format.FormatTimeSpan ((int)num5);  	strArray [6] = " time left = ";  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [5] = Format.FormatTimeSpan ((int)num5);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [6] = " time left = ";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainConsole,The following statement contains a magic number: strArray [7] = Format.FormatTimeSpan (((int)num2) * 60);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: if ((((uint)i) | 8) != 0) {  	goto Label_0048;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: if ((((uint)i) | 3) != 0) {  	return;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: do {  	if (0 != 0) {  		goto Label_0037;  	}  	strArray [2] = " Error:";  }  while ((((uint)error) + ((uint)i)) > uint.MaxValue);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: strArray [2] = " Error:";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: strArray [3] = Format.FormatPercent (train.Error);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: strArray [4] = " Target Error: ";  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: strArray [5] = Format.FormatPercent (error);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,TrainToError,The following statement contains a magic number: strArray = new string[6];  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,x8d742ff2b6748ce6,The following statement contains a magic number: if (-2 != 0) {  	num = 0;  	if (0 != 0) {  		goto Label_005C;  	}  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,x8d742ff2b6748ce6,The following statement contains a magic number: do {  	if (0 == 0) {  	}  	while (num < x4a3f0a05c02f235f.Count) {  		if (num != 0) {  			builder.Append (''');  		}  		builder.Append (Format.FormatDouble (x4a3f0a05c02f235f [num]' 4));  		num++;  	}  }  while (((uint)num) > uint.MaxValue);  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,x8d742ff2b6748ce6,The following statement contains a magic number: while (num < x4a3f0a05c02f235f.Count) {  	if (num != 0) {  		builder.Append (''');  	}  	builder.Append (Format.FormatDouble (x4a3f0a05c02f235f [num]' 4));  	num++;  }  
Magic Number,Encog.Util.Simple,EncogUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\Simple\EncogUtility.cs,x8d742ff2b6748ce6,The following statement contains a magic number: builder.Append (Format.FormatDouble (x4a3f0a05c02f235f [num]' 4));  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdbksb,The following statement contains a magic number: if (-2 == 0) {  	goto Label_007D;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdbksb,The following statement contains a magic number: if (15 != 0) {  	if (((uint)num7) < 0) {  		goto Label_00CC;  	}  	goto Label_0014;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if (num5 >= 0) {  	num2 = 0;  }  else {  	if ((((uint)num5) - ((uint)num11)) <= uint.MaxValue) {  		if (-2147483648 != 0) {  			goto Label_03C4;  		}  		goto Label_02F9;  	}  	goto Label_02CF;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if ((((uint)num5) - ((uint)num11)) <= uint.MaxValue) {  	if (-2147483648 != 0) {  		goto Label_03C4;  	}  	goto Label_02F9;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_03C4;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if (num2 < 30) {  	flag = true;  	index = num5;  	goto Label_0819;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if ((((uint)num11) | 15) != 0) {  	w [num3] = num17;  	goto Label_017C;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: num10 = (((num16 - num17) * (num16 + num17)) + ((num11 - num12) * (num11 + num12))) / ((2.0 * num12) * num16);  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if (num14 != 0.0) {  	num5 = index - 1;  	do {  		if (num5 < num19) {  			a [num] [num5] /= num14;  			if (((uint)num12) > uint.MaxValue) {  				goto Label_08AD;  			}  		}  		else {  			num10 = a [num] [index - 1];  			num11 = -SIGN (Math.Sqrt (num13)' num10);  			num12 = (num10 * num11) - num13;  			if ((((uint)num10) & 0) != 0) {  				goto Label_0CB7;  			}  			break;  		}  		num13 += a [num] [num5] * a [num] [num5];  		num5++;  	}  	while ((((uint)num16) | 4) != 0);  	a [num] [index - 1] = num10 - num11;  	num5 = index - 1;  	goto Label_0E97;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: do {  	if (num5 < num19) {  		a [num] [num5] /= num14;  		if (((uint)num12) > uint.MaxValue) {  			goto Label_08AD;  		}  	}  	else {  		num10 = a [num] [index - 1];  		num11 = -SIGN (Math.Sqrt (num13)' num10);  		num12 = (num10 * num11) - num13;  		if ((((uint)num10) & 0) != 0) {  			goto Label_0CB7;  		}  		break;  	}  	num13 += a [num] [num5] * a [num] [num5];  	num5++;  }  while ((((uint)num16) | 4) != 0);  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if ((((uint)num10) | 4) != 0) {  	goto Label_0415;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: while (num5 < length) {  	num13 += a [num5] [num] * a [num5] [num3];  	num5++;  	if ((((uint)num) | 3) == 0) {  		if (((uint)num16) > uint.MaxValue) {  			goto Label_090B;  		}  		goto Label_12C3;  	}  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if ((((uint)num) | 3) == 0) {  	if (((uint)num16) > uint.MaxValue) {  		goto Label_090B;  	}  	goto Label_12C3;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: index = num + 2;  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdcmp,The following statement contains a magic number: if ((((uint)num13) | 3) != 0) {  	num11 = num13 = num14 = 0.0;  	if ((((uint)num5) & 0) != 0) {  		goto Label_000E;  	}  	if (num < length) {  		num5 = num;  		goto Label_12D9;  	}  	if (((uint)index) <= uint.MaxValue) {  		goto Label_106B;  	}  	goto Label_10F0;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdfit,The following statement contains a magic number: if (num3 < y [0].Length) {  	num = 0;  	if ((((uint)num7) | 15) != 0) {  		goto Label_0010;  	}  	goto Label_010E;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdfit,The following statement contains a magic number: if ((((uint)num7) | 15) != 0) {  	goto Label_0010;  }  
Magic Number,Encog.Neural.RBF.Training,SVD,C:\repos\neismit_emds\Nsim4\Encog\Neural\RBF\Training\SVD.cs,Svdfit,The following statement contains a magic number: if (-2 != 0) {  	Label_018D:  	if (num < x.Length) {  		num2 = 0;  	}  	else {  		Svdcmp (numArray' numArray3' numArray2);  		if (((uint)num) > uint.MaxValue) {  			goto Label_011C;  		}  		if (0 != 0) {  			goto Label_001A;  		}  		num4 = 0.0;  		num2 = 0;  		goto Label_0120;  	}  	while (true) {  		if (num2 < funcs.Length) {  			numArray [num] [num2] = funcs [num2].Calculate (x [num]);  		}  		else {  			if ((((uint)num3) | 1) == 0) {  				goto Label_00F9;  			}  			if ((((uint)num7) + ((uint)num5)) >= 0) {  				num++;  			}  			goto Label_018D;  		}  		num2++;  		if (((uint)num3) <= uint.MaxValue) {  		}  	}  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,BasicFile,The following statement contains a magic number: this.Precision = 10;  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,BasicFile,The following statement contains a magic number: if (-2 != 0) {  	this._x525a82e24ad75a48 = true;  	this.ResetStatus ();  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,ReadHeaders,The following statement contains a magic number: if (!this._x54d89fa16687eadd) {  	this._x4f6082340db02fc8 = new string[csv.ColumnCount];  	num2 = 0;  	if (-2147483648 == 0) {  		return;  	}  	if ((((uint)num) - ((uint)num)) >= 0) {  		goto Label_0010;  	}  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,ReadHeaders,The following statement contains a magic number: if (-2147483648 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,WriteRow,The following statement contains a magic number: while (num >= strArray.Length) {  	tw.WriteLine (line.ToString ());  	if (-2 != 0) {  		if (8 != 0) {  			return;  		}  		goto Label_004B;  	}  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,WriteRow,The following statement contains a magic number: while (num >= strArray.Length) {  	tw.WriteLine (line.ToString ());  	if (-2 != 0) {  		if (8 != 0) {  			return;  		}  		goto Label_004B;  	}  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,WriteRow,The following statement contains a magic number: if (-2 != 0) {  	if (8 != 0) {  		return;  	}  	goto Label_004B;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,WriteRow,The following statement contains a magic number: if (-2 != 0) {  	if (8 != 0) {  		return;  	}  	goto Label_004B;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,WriteRow,The following statement contains a magic number: if (8 != 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicFile.cs,WriteRow,The following statement contains a magic number: if (2 == 0) {  	goto Label_002E;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,Analyze,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,Analyze,The following statement contains a magic number: try {  	int num = 0;  	goto Label_0099;  	Label_002A:  	if ((((uint)num) | 0xfffffffe) != 0) {  		goto Label_0049;  	}  	Label_0044:  	if (headers) {  		goto Label_008E;  	}  	goto Label_0061;  	Label_0049:  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0044;  	}  	Label_0061:  	base.RecordCount = num;  	goto Label_0143;  	Label_006A:  	num++;  	Label_006E:  	if (reader.ReadLine () != null) {  		goto Label_00AC;  	}  	if ((((uint)num2) | 3) != 0) {  		goto Label_0044;  	}  	Label_008E:  	num--;  	goto Label_002A;  	Label_0099:  	reader = new StreamReader (base.InputFilename.OpenRead ());  	goto Label_006E;  	Label_00AC:  	base.UpdateStatus (true);  	goto Label_006A;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  finally {  	base.ReportDone (true);  	goto Label_011E;  	Label_00CD:  	if ((((uint)headers) + ((uint)num2)) < 0) {  		goto Label_00EC;  	}  	goto Label_0142;  	Label_00E7:  	if (reader != null) {  		goto Label_0130;  	}  	goto Label_0104;  	Label_00EC:  	if ((((uint)num2) + ((uint)flag)) < 0) {  		goto Label_00E7;  	}  	Label_0104:  	base.InputFilename = input;  	base.ExpectInputHeaders = headers;  	base.InputFormat = format;  	if (0 == 0) {  		goto Label_00CD;  	}  	goto Label_0142;  	Label_011E:  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_00E7;  	}  	Label_0130:  	try {  		reader.Close ();  		goto Label_0104;  	}  	catch (IOException exception2) {  		throw new QuantError (exception2);  	}  	goto Label_00EC;  	Label_0142:  	;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,Analyze,The following statement contains a magic number: if ((((uint)num2) | 3) != 0) {  	goto Label_0044;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,x0049197442052640,The following statement contains a magic number: if (15 != 0) {  	return "high";  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,x0049197442052640,The following statement contains a magic number: if (4 == 0) {  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.CSV.Basic,BasicCachedFile,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Basic\BasicCachedFile.cs,x0049197442052640,The following statement contains a magic number: if (2 != 0) {  	goto Label_0069;  }  
Magic Number,Encog.App.Analyst.Script,AnalystScript,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\AnalystScript.cs,AnalystScript,The following statement contains a magic number: while (true) {  	this._x137d2319cbd2bef2 = new AnalystNormalize (this);  	this._x41b21b8404d1e8fd = new AnalystSegregate ();  	this._xb2331775ea68cd6f = new List<string> ();  	this._xa4ef4a3fe0a24a84 = new Dictionary<string' AnalystTask> ();  	this._xe11545499171cc05 = new ScriptProperties ();  	this._xe11545499171cc05.SetProperty ("SETUP:CONFIG_csvFormat"' AnalystFileFormat.DecpntComma);  	this._xe11545499171cc05.SetProperty ("SETUP:CONFIG_maxClassCount"' 50);  	this._xe11545499171cc05.SetProperty ("SETUP:CONFIG_allowedClasses"' "integer'string");  	if (0xff != 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.Script,AnalystScript,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\AnalystScript.cs,AnalystScript,The following statement contains a magic number: this._xe11545499171cc05.SetProperty ("SETUP:CONFIG_maxClassCount"' 50);  
Magic Number,Encog.App.Analyst.Script,DataField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\DataField.cs,DataField,The following statement contains a magic number: if (0 == 0) {  	this.StandardDeviation = double.NaN;  	this.Integer = true;  	if (-2 == 0) {  		goto Label_0092;  	}  	this.Real = true;  }  
Magic Number,Encog.App.Analyst.Script,DataField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\DataField.cs,DataField,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0092;  }  
Magic Number,Encog.App.Analyst.Script,DataField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\DataField.cs,DataField,The following statement contains a magic number: if (-2147483648 != 0) {  	this.Class = true;  	this.Complete = true;  	if (0 == 0) {  		return;  	}  	goto Label_004B;  }  
Magic Number,Encog.App.Analyst.Script,AnalystClassItem,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\AnalystClassItem.cs,ToString,The following statement contains a magic number: if (15 != 0) {  	builder.Append (base.GetType ().Name);  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	bool flag2;  	int num;  	string str3;  	double num2;  	double num3;  	NormalizationAction oneOf;  	AnalystField field;  	AnalystField field2;  	goto Label_0047;  	Label_0026:  	this._x594135906c55045c.Normalize.NormalizedFields.Add (field);  	goto Label_0047;  	Label_003F:  	if (!flag) {  		goto Label_02B1;  	}  	flag = false;  	Label_0047:  	if (enumerator.MoveNext ()) {  		goto Label_02C2;  	}  	goto Label_0064;  	Label_0055:  	field2.Output = flag2;  	field = field2;  	goto Label_0026;  	Label_0064:  	if (((uint)num2) >= 0) {  		goto Label_009C;  	}  	Label_0076:  	if ((((uint)flag) + ((uint)flag2)) > uint.MaxValue) {  		goto Label_0145;  	}  	field2.TimeSlice = num;  	goto Label_0055;  	Label_009C:  	if ((((uint)num3) | 0xff) != 0) {  		return;  	}  	goto Label_00DA;  	Label_00CA:  	field2 = new AnalystField (str2' oneOf' num2' num3);  	goto Label_0076;  	Label_00DA:  	if (str3.Equals ("equilateral")) {  		goto Label_013D;  	}  	if (str3.Equals ("single")) {  		oneOf = NormalizationAction.SingleField;  		goto Label_00CA;  	}  	if (!str3.Equals ("oneof")) {  		throw new AnalystError ("Unknown field type:" + str3);  	}  	oneOf = NormalizationAction.OneOf;  	if (0xff != 0) {  		goto Label_00CA;  	}  	goto Label_0076;  	Label_011D:  	if ((((uint)num3) + ((uint)num3)) < 0) {  		goto Label_024D;  	}  	goto Label_00DA;  	Label_013D:  	oneOf = NormalizationAction.Equilateral;  	goto Label_00CA;  	Label_0145:  	if (((uint)flag) > uint.MaxValue) {  		goto Label_0177;  	}  	Label_0157:  	if (str3.Equals ("pass")) {  		goto Label_0177;  	}  	goto Label_00DA;  	Label_016F:  	oneOf = NormalizationAction.Ignore;  	goto Label_00CA;  	Label_0177:  	oneOf = NormalizationAction.PassThrough;  	goto Label_00CA;  	Label_017F:  	if ((((uint)flag) - ((uint)flag2)) < 0) {  		goto Label_00DA;  	}  	if (!str3.Equals ("ignore")) {  		goto Label_0157;  	}  	if (((uint)flag) >= 0) {  		goto Label_016F;  	}  	if (((uint)num2) >= 0) {  		goto Label_00DA;  	}  	if ((((uint)num3) - ((uint)flag2)) <= uint.MaxValue) {  		goto Label_0145;  	}  	goto Label_011D;  	Label_01E9:  	oneOf = NormalizationAction.Normalize;  	goto Label_00CA;  	Label_01F1:  	if (str3.Equals ("range")) {  		goto Label_01E9;  	}  	goto Label_017F;  	Label_0215:  	num3 = CSVFormat.EgFormat.Parse (list [5]);  	goto Label_01F1;  	Label_022D:  	str2 = list [0];  	flag2 = list [1].ToLower ().Equals ("output");  	Label_024D:  	num = int.Parse (list [2]);  	str3 = list [3];  	if ((((uint)flag2) - ((uint)num3)) > uint.MaxValue) {  		goto Label_022D;  	}  	num2 = CSVFormat.EgFormat.Parse (list [4]);  	if ((((uint)flag2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0215;  	}  	goto Label_01F1;  	Label_02B1:  	list = EncogFileSection.SplitColumns (str);  	goto Label_022D;  	Label_02C2:  	str = enumerator.Current;  	goto Label_003F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	bool flag2;  	int num;  	string str3;  	double num2;  	double num3;  	NormalizationAction oneOf;  	AnalystField field;  	AnalystField field2;  	goto Label_0047;  	Label_0026:  	this._x594135906c55045c.Normalize.NormalizedFields.Add (field);  	goto Label_0047;  	Label_003F:  	if (!flag) {  		goto Label_02B1;  	}  	flag = false;  	Label_0047:  	if (enumerator.MoveNext ()) {  		goto Label_02C2;  	}  	goto Label_0064;  	Label_0055:  	field2.Output = flag2;  	field = field2;  	goto Label_0026;  	Label_0064:  	if (((uint)num2) >= 0) {  		goto Label_009C;  	}  	Label_0076:  	if ((((uint)flag) + ((uint)flag2)) > uint.MaxValue) {  		goto Label_0145;  	}  	field2.TimeSlice = num;  	goto Label_0055;  	Label_009C:  	if ((((uint)num3) | 0xff) != 0) {  		return;  	}  	goto Label_00DA;  	Label_00CA:  	field2 = new AnalystField (str2' oneOf' num2' num3);  	goto Label_0076;  	Label_00DA:  	if (str3.Equals ("equilateral")) {  		goto Label_013D;  	}  	if (str3.Equals ("single")) {  		oneOf = NormalizationAction.SingleField;  		goto Label_00CA;  	}  	if (!str3.Equals ("oneof")) {  		throw new AnalystError ("Unknown field type:" + str3);  	}  	oneOf = NormalizationAction.OneOf;  	if (0xff != 0) {  		goto Label_00CA;  	}  	goto Label_0076;  	Label_011D:  	if ((((uint)num3) + ((uint)num3)) < 0) {  		goto Label_024D;  	}  	goto Label_00DA;  	Label_013D:  	oneOf = NormalizationAction.Equilateral;  	goto Label_00CA;  	Label_0145:  	if (((uint)flag) > uint.MaxValue) {  		goto Label_0177;  	}  	Label_0157:  	if (str3.Equals ("pass")) {  		goto Label_0177;  	}  	goto Label_00DA;  	Label_016F:  	oneOf = NormalizationAction.Ignore;  	goto Label_00CA;  	Label_0177:  	oneOf = NormalizationAction.PassThrough;  	goto Label_00CA;  	Label_017F:  	if ((((uint)flag) - ((uint)flag2)) < 0) {  		goto Label_00DA;  	}  	if (!str3.Equals ("ignore")) {  		goto Label_0157;  	}  	if (((uint)flag) >= 0) {  		goto Label_016F;  	}  	if (((uint)num2) >= 0) {  		goto Label_00DA;  	}  	if ((((uint)num3) - ((uint)flag2)) <= uint.MaxValue) {  		goto Label_0145;  	}  	goto Label_011D;  	Label_01E9:  	oneOf = NormalizationAction.Normalize;  	goto Label_00CA;  	Label_01F1:  	if (str3.Equals ("range")) {  		goto Label_01E9;  	}  	goto Label_017F;  	Label_0215:  	num3 = CSVFormat.EgFormat.Parse (list [5]);  	goto Label_01F1;  	Label_022D:  	str2 = list [0];  	flag2 = list [1].ToLower ().Equals ("output");  	Label_024D:  	num = int.Parse (list [2]);  	str3 = list [3];  	if ((((uint)flag2) - ((uint)num3)) > uint.MaxValue) {  		goto Label_022D;  	}  	num2 = CSVFormat.EgFormat.Parse (list [4]);  	if ((((uint)flag2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0215;  	}  	goto Label_01F1;  	Label_02B1:  	list = EncogFileSection.SplitColumns (str);  	goto Label_022D;  	Label_02C2:  	str = enumerator.Current;  	goto Label_003F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	bool flag2;  	int num;  	string str3;  	double num2;  	double num3;  	NormalizationAction oneOf;  	AnalystField field;  	AnalystField field2;  	goto Label_0047;  	Label_0026:  	this._x594135906c55045c.Normalize.NormalizedFields.Add (field);  	goto Label_0047;  	Label_003F:  	if (!flag) {  		goto Label_02B1;  	}  	flag = false;  	Label_0047:  	if (enumerator.MoveNext ()) {  		goto Label_02C2;  	}  	goto Label_0064;  	Label_0055:  	field2.Output = flag2;  	field = field2;  	goto Label_0026;  	Label_0064:  	if (((uint)num2) >= 0) {  		goto Label_009C;  	}  	Label_0076:  	if ((((uint)flag) + ((uint)flag2)) > uint.MaxValue) {  		goto Label_0145;  	}  	field2.TimeSlice = num;  	goto Label_0055;  	Label_009C:  	if ((((uint)num3) | 0xff) != 0) {  		return;  	}  	goto Label_00DA;  	Label_00CA:  	field2 = new AnalystField (str2' oneOf' num2' num3);  	goto Label_0076;  	Label_00DA:  	if (str3.Equals ("equilateral")) {  		goto Label_013D;  	}  	if (str3.Equals ("single")) {  		oneOf = NormalizationAction.SingleField;  		goto Label_00CA;  	}  	if (!str3.Equals ("oneof")) {  		throw new AnalystError ("Unknown field type:" + str3);  	}  	oneOf = NormalizationAction.OneOf;  	if (0xff != 0) {  		goto Label_00CA;  	}  	goto Label_0076;  	Label_011D:  	if ((((uint)num3) + ((uint)num3)) < 0) {  		goto Label_024D;  	}  	goto Label_00DA;  	Label_013D:  	oneOf = NormalizationAction.Equilateral;  	goto Label_00CA;  	Label_0145:  	if (((uint)flag) > uint.MaxValue) {  		goto Label_0177;  	}  	Label_0157:  	if (str3.Equals ("pass")) {  		goto Label_0177;  	}  	goto Label_00DA;  	Label_016F:  	oneOf = NormalizationAction.Ignore;  	goto Label_00CA;  	Label_0177:  	oneOf = NormalizationAction.PassThrough;  	goto Label_00CA;  	Label_017F:  	if ((((uint)flag) - ((uint)flag2)) < 0) {  		goto Label_00DA;  	}  	if (!str3.Equals ("ignore")) {  		goto Label_0157;  	}  	if (((uint)flag) >= 0) {  		goto Label_016F;  	}  	if (((uint)num2) >= 0) {  		goto Label_00DA;  	}  	if ((((uint)num3) - ((uint)flag2)) <= uint.MaxValue) {  		goto Label_0145;  	}  	goto Label_011D;  	Label_01E9:  	oneOf = NormalizationAction.Normalize;  	goto Label_00CA;  	Label_01F1:  	if (str3.Equals ("range")) {  		goto Label_01E9;  	}  	goto Label_017F;  	Label_0215:  	num3 = CSVFormat.EgFormat.Parse (list [5]);  	goto Label_01F1;  	Label_022D:  	str2 = list [0];  	flag2 = list [1].ToLower ().Equals ("output");  	Label_024D:  	num = int.Parse (list [2]);  	str3 = list [3];  	if ((((uint)flag2) - ((uint)num3)) > uint.MaxValue) {  		goto Label_022D;  	}  	num2 = CSVFormat.EgFormat.Parse (list [4]);  	if ((((uint)flag2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0215;  	}  	goto Label_01F1;  	Label_02B1:  	list = EncogFileSection.SplitColumns (str);  	goto Label_022D;  	Label_02C2:  	str = enumerator.Current;  	goto Label_003F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	bool flag2;  	int num;  	string str3;  	double num2;  	double num3;  	NormalizationAction oneOf;  	AnalystField field;  	AnalystField field2;  	goto Label_0047;  	Label_0026:  	this._x594135906c55045c.Normalize.NormalizedFields.Add (field);  	goto Label_0047;  	Label_003F:  	if (!flag) {  		goto Label_02B1;  	}  	flag = false;  	Label_0047:  	if (enumerator.MoveNext ()) {  		goto Label_02C2;  	}  	goto Label_0064;  	Label_0055:  	field2.Output = flag2;  	field = field2;  	goto Label_0026;  	Label_0064:  	if (((uint)num2) >= 0) {  		goto Label_009C;  	}  	Label_0076:  	if ((((uint)flag) + ((uint)flag2)) > uint.MaxValue) {  		goto Label_0145;  	}  	field2.TimeSlice = num;  	goto Label_0055;  	Label_009C:  	if ((((uint)num3) | 0xff) != 0) {  		return;  	}  	goto Label_00DA;  	Label_00CA:  	field2 = new AnalystField (str2' oneOf' num2' num3);  	goto Label_0076;  	Label_00DA:  	if (str3.Equals ("equilateral")) {  		goto Label_013D;  	}  	if (str3.Equals ("single")) {  		oneOf = NormalizationAction.SingleField;  		goto Label_00CA;  	}  	if (!str3.Equals ("oneof")) {  		throw new AnalystError ("Unknown field type:" + str3);  	}  	oneOf = NormalizationAction.OneOf;  	if (0xff != 0) {  		goto Label_00CA;  	}  	goto Label_0076;  	Label_011D:  	if ((((uint)num3) + ((uint)num3)) < 0) {  		goto Label_024D;  	}  	goto Label_00DA;  	Label_013D:  	oneOf = NormalizationAction.Equilateral;  	goto Label_00CA;  	Label_0145:  	if (((uint)flag) > uint.MaxValue) {  		goto Label_0177;  	}  	Label_0157:  	if (str3.Equals ("pass")) {  		goto Label_0177;  	}  	goto Label_00DA;  	Label_016F:  	oneOf = NormalizationAction.Ignore;  	goto Label_00CA;  	Label_0177:  	oneOf = NormalizationAction.PassThrough;  	goto Label_00CA;  	Label_017F:  	if ((((uint)flag) - ((uint)flag2)) < 0) {  		goto Label_00DA;  	}  	if (!str3.Equals ("ignore")) {  		goto Label_0157;  	}  	if (((uint)flag) >= 0) {  		goto Label_016F;  	}  	if (((uint)num2) >= 0) {  		goto Label_00DA;  	}  	if ((((uint)num3) - ((uint)flag2)) <= uint.MaxValue) {  		goto Label_0145;  	}  	goto Label_011D;  	Label_01E9:  	oneOf = NormalizationAction.Normalize;  	goto Label_00CA;  	Label_01F1:  	if (str3.Equals ("range")) {  		goto Label_01E9;  	}  	goto Label_017F;  	Label_0215:  	num3 = CSVFormat.EgFormat.Parse (list [5]);  	goto Label_01F1;  	Label_022D:  	str2 = list [0];  	flag2 = list [1].ToLower ().Equals ("output");  	Label_024D:  	num = int.Parse (list [2]);  	str3 = list [3];  	if ((((uint)flag2) - ((uint)num3)) > uint.MaxValue) {  		goto Label_022D;  	}  	num2 = CSVFormat.EgFormat.Parse (list [4]);  	if ((((uint)flag2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0215;  	}  	goto Label_01F1;  	Label_02B1:  	list = EncogFileSection.SplitColumns (str);  	goto Label_022D;  	Label_02C2:  	str = enumerator.Current;  	goto Label_003F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: num3 = CSVFormat.EgFormat.Parse (list [5]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: num = int.Parse (list [2]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: str3 = list [3];  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x23a952ae96385f94,The following statement contains a magic number: num2 = CSVFormat.EgFormat.Parse (list [4]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x3ed9c05d3bbdec37,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	AnalystSegregateTarget target;  	Label_0055:  	if (enumerator.MoveNext ()) {  		goto Label_00A0;  	}  	goto Label_00C0;  	Label_0060:  	flag = false;  	goto Label_0055;  	Label_0064:  	list.Add (target);  	goto Label_0055;  	Label_006E:  	list2 = EncogFileSection.SplitColumns (str);  	string theFile = list2 [0];  	if (-2 == 0) {  		goto Label_0060;  	}  	int thePercent = int.Parse (list2 [1]);  	target = new AnalystSegregateTarget (theFile' thePercent);  	goto Label_0064;  	Label_00A0:  	str = enumerator.Current;  	if (!flag && (0 == 0)) {  		goto Label_006E;  	}  	goto Label_0060;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,x3ed9c05d3bbdec37,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0060;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	string str2;  	bool flag3;  	double num;  	double num2;  	double num3;  	double num4;  	DataField field2;  	goto Label_007F;  	Label_0065:  	if (!flag) {  		goto Label_0257;  	}  	if (((uint)flag3) >= 0) {  	}  	flag = false;  	Label_007F:  	if (enumerator.MoveNext ()) {  		goto Label_0269;  	}  	goto Label_02A5;  	Label_008D:  	field2.StandardDeviation = num4;  	DataField item = field2;  	Label_009A:  	list.Add (item);  	goto Label_007F;  	Label_00AB:  	field2.Integer = flag4;  	field2.Real = flag5;  	field2.Max = num;  	field2.Min = num2;  	field2.Mean = num3;  	goto Label_008D;  	Label_00DD:  	field2.Complete = flag3;  	if ((((uint)flag) + ((uint)num)) >= 0) {  		goto Label_00AB;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0182;  	}  	Label_0119:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0257;  	}  	Label_0130:  	num2 = CSVFormat.EgFormat.Parse (list2 [6]);  	num3 = CSVFormat.EgFormat.Parse (list2 [7]);  	num4 = CSVFormat.EgFormat.Parse (list2 [8]);  	field2 = new DataField (str2) {  		Class = flag2  	};  	if (0xff != 0) {  		goto Label_00DD;  	}  	Label_0182:  	if ((((uint)flag) | 0xfffffffe) == 0) {  		goto Label_0130;  	}  	if ((((uint)num2) | 8) != 0) {  		goto Label_0119;  	}  	goto Label_00DD;  	Label_01C4:  	num = CSVFormat.EgFormat.Parse (list2 [5]);  	if ((((uint)num) & 0) == 0) {  		goto Label_0182;  	}  	goto Label_0269;  	Label_01F3:  	if (((uint)flag4) < 0) {  		goto Label_009A;  	}  	str2 = list2 [0];  	flag2 = int.Parse (list2 [1]) > 0;  	flag3 = int.Parse (list2 [2]) > 0;  	flag4 = int.Parse (list2 [3]) > 0;  	flag5 = int.Parse (list2 [4]) > 0;  	goto Label_01C4;  	Label_0257:  	list2 = EncogFileSection.SplitColumns (str);  	goto Label_01F3;  	Label_0269:  	str = enumerator.Current;  	goto Label_0065;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: num2 = CSVFormat.EgFormat.Parse (list2 [6]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: num3 = CSVFormat.EgFormat.Parse (list2 [7]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: num4 = CSVFormat.EgFormat.Parse (list2 [8]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: if ((((uint)num2) | 8) != 0) {  	goto Label_0119;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: num = CSVFormat.EgFormat.Parse (list2 [5]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: flag3 = int.Parse (list2 [2]) > 0;  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: flag4 = int.Parse (list2 [3]) > 0;  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xeb630b6ed5f8b04a,The following statement contains a magic number: flag5 = int.Parse (list2 [4]) > 0;  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	string str3;  	string str4;  	DataField field;  	List<AnalystClassItem> list2;  	Label_00E2:  	if (enumerator.MoveNext ()) {  		goto Label_0263;  	}  	if (((uint)num) >= 0) {  		goto Label_02A4;  	}  	goto Label_0144;  	Label_0102:  	flag = false;  	Label_0104:  	if (-2147483648 == 0) {  		goto Label_0102;  	}  	goto Label_00E2;  	Label_010D:  	list2.Add (new AnalystClassItem (str3' str4' num));  	goto Label_00E2;  	Label_0121:  	if (!flag) {  		goto Label_0270;  	}  	goto Label_0102;  	Label_0129:  	if (!dictionary.ContainsKey (str2)) {  		goto Label_0163;  	}  	list2 = dictionary [str2];  	if (0 == 0) {  		goto Label_010D;  	}  	goto Label_0102;  	Label_0144:  	dictionary [str2] = list2;  	goto Label_010D;  	Label_015A:  	if (field == null) {  		goto Label_0215;  	}  	goto Label_0129;  	Label_0163:  	list2 = new List<AnalystClassItem> ();  	if ((((uint)num2) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0144;  	}  	if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0263;  	}  	if ((((uint)flag) & 0) != 0) {  		if ((((uint)flag) + ((uint)num2)) > uint.MaxValue) {  			goto Label_0104;  		}  		goto Label_0129;  	}  	Label_01D4:  	str4 = list [2];  	num = int.Parse (list [3]);  	field = this._x594135906c55045c.FindDataField (str2);  	if ((((uint)num2) + ((uint)flag)) >= 0) {  		goto Label_015A;  	}  	Label_0215:  	throw new AnalystError ("Attempting to add class to unknown field: " + str4);  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0144;  	}  	goto Label_024F;  	Label_0246:  	if (list.Count < 4) {  		throw new AnalystError ("Invalid data class: " + str);  	}  	Label_024F:  	str2 = list [0];  	str3 = list [1];  	goto Label_01D4;  	Label_0263:  	str = enumerator.Current;  	goto Label_0121;  	Label_0270:  	list = EncogFileSection.SplitColumns (str);  	goto Label_0246;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	string str3;  	string str4;  	DataField field;  	List<AnalystClassItem> list2;  	Label_00E2:  	if (enumerator.MoveNext ()) {  		goto Label_0263;  	}  	if (((uint)num) >= 0) {  		goto Label_02A4;  	}  	goto Label_0144;  	Label_0102:  	flag = false;  	Label_0104:  	if (-2147483648 == 0) {  		goto Label_0102;  	}  	goto Label_00E2;  	Label_010D:  	list2.Add (new AnalystClassItem (str3' str4' num));  	goto Label_00E2;  	Label_0121:  	if (!flag) {  		goto Label_0270;  	}  	goto Label_0102;  	Label_0129:  	if (!dictionary.ContainsKey (str2)) {  		goto Label_0163;  	}  	list2 = dictionary [str2];  	if (0 == 0) {  		goto Label_010D;  	}  	goto Label_0102;  	Label_0144:  	dictionary [str2] = list2;  	goto Label_010D;  	Label_015A:  	if (field == null) {  		goto Label_0215;  	}  	goto Label_0129;  	Label_0163:  	list2 = new List<AnalystClassItem> ();  	if ((((uint)num2) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0144;  	}  	if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0263;  	}  	if ((((uint)flag) & 0) != 0) {  		if ((((uint)flag) + ((uint)num2)) > uint.MaxValue) {  			goto Label_0104;  		}  		goto Label_0129;  	}  	Label_01D4:  	str4 = list [2];  	num = int.Parse (list [3]);  	field = this._x594135906c55045c.FindDataField (str2);  	if ((((uint)num2) + ((uint)flag)) >= 0) {  		goto Label_015A;  	}  	Label_0215:  	throw new AnalystError ("Attempting to add class to unknown field: " + str4);  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0144;  	}  	goto Label_024F;  	Label_0246:  	if (list.Count < 4) {  		throw new AnalystError ("Invalid data class: " + str);  	}  	Label_024F:  	str2 = list [0];  	str3 = list [1];  	goto Label_01D4;  	Label_0263:  	str = enumerator.Current;  	goto Label_0121;  	Label_0270:  	list = EncogFileSection.SplitColumns (str);  	goto Label_0246;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	string str3;  	string str4;  	DataField field;  	List<AnalystClassItem> list2;  	Label_00E2:  	if (enumerator.MoveNext ()) {  		goto Label_0263;  	}  	if (((uint)num) >= 0) {  		goto Label_02A4;  	}  	goto Label_0144;  	Label_0102:  	flag = false;  	Label_0104:  	if (-2147483648 == 0) {  		goto Label_0102;  	}  	goto Label_00E2;  	Label_010D:  	list2.Add (new AnalystClassItem (str3' str4' num));  	goto Label_00E2;  	Label_0121:  	if (!flag) {  		goto Label_0270;  	}  	goto Label_0102;  	Label_0129:  	if (!dictionary.ContainsKey (str2)) {  		goto Label_0163;  	}  	list2 = dictionary [str2];  	if (0 == 0) {  		goto Label_010D;  	}  	goto Label_0102;  	Label_0144:  	dictionary [str2] = list2;  	goto Label_010D;  	Label_015A:  	if (field == null) {  		goto Label_0215;  	}  	goto Label_0129;  	Label_0163:  	list2 = new List<AnalystClassItem> ();  	if ((((uint)num2) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0144;  	}  	if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0263;  	}  	if ((((uint)flag) & 0) != 0) {  		if ((((uint)flag) + ((uint)num2)) > uint.MaxValue) {  			goto Label_0104;  		}  		goto Label_0129;  	}  	Label_01D4:  	str4 = list [2];  	num = int.Parse (list [3]);  	field = this._x594135906c55045c.FindDataField (str2);  	if ((((uint)num2) + ((uint)flag)) >= 0) {  		goto Label_015A;  	}  	Label_0215:  	throw new AnalystError ("Attempting to add class to unknown field: " + str4);  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0144;  	}  	goto Label_024F;  	Label_0246:  	if (list.Count < 4) {  		throw new AnalystError ("Invalid data class: " + str);  	}  	Label_024F:  	str2 = list [0];  	str3 = list [1];  	goto Label_01D4;  	Label_0263:  	str = enumerator.Current;  	goto Label_0121;  	Label_0270:  	list = EncogFileSection.SplitColumns (str);  	goto Label_0246;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: using (IEnumerator<string> enumerator = xb32f8dd719a105db.Lines.GetEnumerator ()) {  	string str;  	IList<string> list;  	string str2;  	string str3;  	string str4;  	DataField field;  	List<AnalystClassItem> list2;  	Label_00E2:  	if (enumerator.MoveNext ()) {  		goto Label_0263;  	}  	if (((uint)num) >= 0) {  		goto Label_02A4;  	}  	goto Label_0144;  	Label_0102:  	flag = false;  	Label_0104:  	if (-2147483648 == 0) {  		goto Label_0102;  	}  	goto Label_00E2;  	Label_010D:  	list2.Add (new AnalystClassItem (str3' str4' num));  	goto Label_00E2;  	Label_0121:  	if (!flag) {  		goto Label_0270;  	}  	goto Label_0102;  	Label_0129:  	if (!dictionary.ContainsKey (str2)) {  		goto Label_0163;  	}  	list2 = dictionary [str2];  	if (0 == 0) {  		goto Label_010D;  	}  	goto Label_0102;  	Label_0144:  	dictionary [str2] = list2;  	goto Label_010D;  	Label_015A:  	if (field == null) {  		goto Label_0215;  	}  	goto Label_0129;  	Label_0163:  	list2 = new List<AnalystClassItem> ();  	if ((((uint)num2) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0144;  	}  	if ((((uint)num) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_0263;  	}  	if ((((uint)flag) & 0) != 0) {  		if ((((uint)flag) + ((uint)num2)) > uint.MaxValue) {  			goto Label_0104;  		}  		goto Label_0129;  	}  	Label_01D4:  	str4 = list [2];  	num = int.Parse (list [3]);  	field = this._x594135906c55045c.FindDataField (str2);  	if ((((uint)num2) + ((uint)flag)) >= 0) {  		goto Label_015A;  	}  	Label_0215:  	throw new AnalystError ("Attempting to add class to unknown field: " + str4);  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0144;  	}  	goto Label_024F;  	Label_0246:  	if (list.Count < 4) {  		throw new AnalystError ("Invalid data class: " + str);  	}  	Label_024F:  	str2 = list [0];  	str3 = list [1];  	goto Label_01D4;  	Label_0263:  	str = enumerator.Current;  	goto Label_0121;  	Label_0270:  	list = EncogFileSection.SplitColumns (str);  	goto Label_0246;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0102;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: str4 = list [2];  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: num = int.Parse (list [3]);  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xee831a85a4a1093a,The following statement contains a magic number: if (list.Count < 4) {  	throw new AnalystError ("Invalid data class: " + str);  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (0x7fffffff == 0) {  	if (2 != 0) {  		goto Label_0366;  	}  	goto Label_03A8;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (2 != 0) {  	goto Label_0366;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (3 == 0) {  	goto Label_03ED;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (subSectionName.Length <= 0) {  	if (3 != 0) {  		goto Label_002D;  	}  	if (0 == 0) {  		goto Label_000E;  	}  	if (0 != 0) {  		goto Label_03FF;  	}  	goto Label_0044;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (3 != 0) {  	goto Label_002D;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2147483648 != 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2 != 0) {  	if (8 != 0) {  		if (subSectionName.Equals ("DATASOURCE"' StringComparison.InvariantCultureIgnoreCase)) {  			this.xff55b61ba453487f (xb32f8dd719a105db);  			return;  		}  		if (1 == 0) {  			goto Label_02C5;  		}  		goto Label_00DC;  	}  	goto Label_0055;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2 != 0) {  	if (8 != 0) {  		if (subSectionName.Equals ("DATASOURCE"' StringComparison.InvariantCultureIgnoreCase)) {  			this.xff55b61ba453487f (xb32f8dd719a105db);  			return;  		}  		if (1 == 0) {  			goto Label_02C5;  		}  		goto Label_00DC;  	}  	goto Label_0055;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (8 != 0) {  	if (subSectionName.Equals ("DATASOURCE"' StringComparison.InvariantCultureIgnoreCase)) {  		this.xff55b61ba453487f (xb32f8dd719a105db);  		return;  	}  	if (1 == 0) {  		goto Label_02C5;  	}  	goto Label_00DC;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0136;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (!sectionName.Equals ("SEGREGATE")) {  	if (4 == 0) {  		return;  	}  	goto Label_013E;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (4 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (!subSectionName.Equals ("CONFIG"' StringComparison.InvariantCultureIgnoreCase)) {  	if (-2147483648 == 0) {  		return;  	}  	if (3 == 0) {  		return;  	}  	if (-2147483648 == 0) {  		goto Label_0210;  	}  	if (0 != 0) {  		goto Label_01A4;  	}  	goto Label_0164;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (!subSectionName.Equals ("CONFIG"' StringComparison.InvariantCultureIgnoreCase)) {  	if (-2147483648 == 0) {  		return;  	}  	if (3 == 0) {  		return;  	}  	if (-2147483648 == 0) {  		goto Label_0210;  	}  	if (0 != 0) {  		goto Label_01A4;  	}  	goto Label_0164;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (!subSectionName.Equals ("CONFIG"' StringComparison.InvariantCultureIgnoreCase)) {  	if (-2147483648 == 0) {  		return;  	}  	if (3 == 0) {  		return;  	}  	if (-2147483648 == 0) {  		goto Label_0210;  	}  	if (0 != 0) {  		goto Label_01A4;  	}  	goto Label_0164;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2147483648 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (3 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0210;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2 != 0) {  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (sectionName.Equals ("NORMALIZE")) {  	if (subSectionName.Equals ("RANGE"' StringComparison.InvariantCultureIgnoreCase)) {  		this.x23a952ae96385f94 (xb32f8dd719a105db);  		return;  	}  	if (8 == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (8 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (-2 != 0) {  	goto Label_02F2;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (15 != 0) {  	goto Label_0348;  }  
Magic Number,Encog.App.Analyst.Script,ScriptLoad,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptLoad.cs,xf9edee23632d6876,The following statement contains a magic number: if (!sectionName.Equals ("DATA") && (15 != 0)) {  	if (0 != 0) {  		goto Label_03D4;  	}  	if (0 == 0) {  		goto Label_03A8;  	}  	goto Label_038D;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,Save,The following statement contains a magic number: if (-2 == 0) {  	goto Label_00C8;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,Save,The following statement contains a magic number: if (2 != 0) {  	if (0 != 0) {  		goto Label_00BF;  	}  	goto Label_0094;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (num < segregateTargets.Length) {  	AnalystSegregateTarget target = segregateTargets [num];  	if (4 != 0) {  		if (15 != 0) {  			xa58d1d9c6fa55c59.AddColumn (target.File);  			xa58d1d9c6fa55c59.AddColumn (target.Percent);  			if (15 == 0) {  				return;  			}  			goto Label_0023;  		}  		goto Label_009F;  	}  }  else {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (num < segregateTargets.Length) {  	AnalystSegregateTarget target = segregateTargets [num];  	if (4 != 0) {  		if (15 != 0) {  			xa58d1d9c6fa55c59.AddColumn (target.File);  			xa58d1d9c6fa55c59.AddColumn (target.Percent);  			if (15 == 0) {  				return;  			}  			goto Label_0023;  		}  		goto Label_009F;  	}  }  else {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (num < segregateTargets.Length) {  	AnalystSegregateTarget target = segregateTargets [num];  	if (4 != 0) {  		if (15 != 0) {  			xa58d1d9c6fa55c59.AddColumn (target.File);  			xa58d1d9c6fa55c59.AddColumn (target.Percent);  			if (15 == 0) {  				return;  			}  			goto Label_0023;  		}  		goto Label_009F;  	}  }  else {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (4 != 0) {  	if (15 != 0) {  		xa58d1d9c6fa55c59.AddColumn (target.File);  		xa58d1d9c6fa55c59.AddColumn (target.Percent);  		if (15 == 0) {  			return;  		}  		goto Label_0023;  	}  	goto Label_009F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (4 != 0) {  	if (15 != 0) {  		xa58d1d9c6fa55c59.AddColumn (target.File);  		xa58d1d9c6fa55c59.AddColumn (target.Percent);  		if (15 == 0) {  			return;  		}  		goto Label_0023;  	}  	goto Label_009F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (4 != 0) {  	if (15 != 0) {  		xa58d1d9c6fa55c59.AddColumn (target.File);  		xa58d1d9c6fa55c59.AddColumn (target.Percent);  		if (15 == 0) {  			return;  		}  		goto Label_0023;  	}  	goto Label_009F;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (15 != 0) {  	xa58d1d9c6fa55c59.AddColumn (target.File);  	xa58d1d9c6fa55c59.AddColumn (target.Percent);  	if (15 == 0) {  		return;  	}  	goto Label_0023;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (15 != 0) {  	xa58d1d9c6fa55c59.AddColumn (target.File);  	xa58d1d9c6fa55c59.AddColumn (target.Percent);  	if (15 == 0) {  		return;  	}  	goto Label_0023;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x312a5c458079831e,The following statement contains a magic number: if (15 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: using (List<PropertyEntry>.Enumerator enumerator = entries.GetEnumerator ()) {  	PropertyEntry entry;  	string str2;  	string[] strArray;  	goto Label_0059;  	Label_003C:  	if (15 != 0) {  	}  	xa58d1d9c6fa55c59.WriteProperty (entry.Name' str2 ?? "");  	Label_0059:  	if (enumerator.MoveNext ()) {  		goto Label_00BC;  	}  	goto Label_00B5;  	Label_0064:  	strArray [3] = "_";  	strArray [4] = entry.Name;  	string name = string.Concat (strArray);  	Label_007F:  	str2 = this._x594135906c55045c.Properties.GetPropertyString (name);  	goto Label_003C;  	Label_0095:  	if (0 != 0) {  		goto Label_007F;  	}  	strArray = new string[5];  	strArray [0] = xb32f8dd719a105db;  	strArray [1] = ":";  	strArray [2] = x1640122bb0e29c3e;  	goto Label_0064;  	Label_00B5:  	if (4 != 0) {  		return;  	}  	Label_00BC:  	entry = enumerator.Current;  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: using (List<PropertyEntry>.Enumerator enumerator = entries.GetEnumerator ()) {  	PropertyEntry entry;  	string str2;  	string[] strArray;  	goto Label_0059;  	Label_003C:  	if (15 != 0) {  	}  	xa58d1d9c6fa55c59.WriteProperty (entry.Name' str2 ?? "");  	Label_0059:  	if (enumerator.MoveNext ()) {  		goto Label_00BC;  	}  	goto Label_00B5;  	Label_0064:  	strArray [3] = "_";  	strArray [4] = entry.Name;  	string name = string.Concat (strArray);  	Label_007F:  	str2 = this._x594135906c55045c.Properties.GetPropertyString (name);  	goto Label_003C;  	Label_0095:  	if (0 != 0) {  		goto Label_007F;  	}  	strArray = new string[5];  	strArray [0] = xb32f8dd719a105db;  	strArray [1] = ":";  	strArray [2] = x1640122bb0e29c3e;  	goto Label_0064;  	Label_00B5:  	if (4 != 0) {  		return;  	}  	Label_00BC:  	entry = enumerator.Current;  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: using (List<PropertyEntry>.Enumerator enumerator = entries.GetEnumerator ()) {  	PropertyEntry entry;  	string str2;  	string[] strArray;  	goto Label_0059;  	Label_003C:  	if (15 != 0) {  	}  	xa58d1d9c6fa55c59.WriteProperty (entry.Name' str2 ?? "");  	Label_0059:  	if (enumerator.MoveNext ()) {  		goto Label_00BC;  	}  	goto Label_00B5;  	Label_0064:  	strArray [3] = "_";  	strArray [4] = entry.Name;  	string name = string.Concat (strArray);  	Label_007F:  	str2 = this._x594135906c55045c.Properties.GetPropertyString (name);  	goto Label_003C;  	Label_0095:  	if (0 != 0) {  		goto Label_007F;  	}  	strArray = new string[5];  	strArray [0] = xb32f8dd719a105db;  	strArray [1] = ":";  	strArray [2] = x1640122bb0e29c3e;  	goto Label_0064;  	Label_00B5:  	if (4 != 0) {  		return;  	}  	Label_00BC:  	entry = enumerator.Current;  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: using (List<PropertyEntry>.Enumerator enumerator = entries.GetEnumerator ()) {  	PropertyEntry entry;  	string str2;  	string[] strArray;  	goto Label_0059;  	Label_003C:  	if (15 != 0) {  	}  	xa58d1d9c6fa55c59.WriteProperty (entry.Name' str2 ?? "");  	Label_0059:  	if (enumerator.MoveNext ()) {  		goto Label_00BC;  	}  	goto Label_00B5;  	Label_0064:  	strArray [3] = "_";  	strArray [4] = entry.Name;  	string name = string.Concat (strArray);  	Label_007F:  	str2 = this._x594135906c55045c.Properties.GetPropertyString (name);  	goto Label_003C;  	Label_0095:  	if (0 != 0) {  		goto Label_007F;  	}  	strArray = new string[5];  	strArray [0] = xb32f8dd719a105db;  	strArray [1] = ":";  	strArray [2] = x1640122bb0e29c3e;  	goto Label_0064;  	Label_00B5:  	if (4 != 0) {  		return;  	}  	Label_00BC:  	entry = enumerator.Current;  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: using (List<PropertyEntry>.Enumerator enumerator = entries.GetEnumerator ()) {  	PropertyEntry entry;  	string str2;  	string[] strArray;  	goto Label_0059;  	Label_003C:  	if (15 != 0) {  	}  	xa58d1d9c6fa55c59.WriteProperty (entry.Name' str2 ?? "");  	Label_0059:  	if (enumerator.MoveNext ()) {  		goto Label_00BC;  	}  	goto Label_00B5;  	Label_0064:  	strArray [3] = "_";  	strArray [4] = entry.Name;  	string name = string.Concat (strArray);  	Label_007F:  	str2 = this._x594135906c55045c.Properties.GetPropertyString (name);  	goto Label_003C;  	Label_0095:  	if (0 != 0) {  		goto Label_007F;  	}  	strArray = new string[5];  	strArray [0] = xb32f8dd719a105db;  	strArray [1] = ":";  	strArray [2] = x1640122bb0e29c3e;  	goto Label_0064;  	Label_00B5:  	if (4 != 0) {  		return;  	}  	Label_00BC:  	entry = enumerator.Current;  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: using (List<PropertyEntry>.Enumerator enumerator = entries.GetEnumerator ()) {  	PropertyEntry entry;  	string str2;  	string[] strArray;  	goto Label_0059;  	Label_003C:  	if (15 != 0) {  	}  	xa58d1d9c6fa55c59.WriteProperty (entry.Name' str2 ?? "");  	Label_0059:  	if (enumerator.MoveNext ()) {  		goto Label_00BC;  	}  	goto Label_00B5;  	Label_0064:  	strArray [3] = "_";  	strArray [4] = entry.Name;  	string name = string.Concat (strArray);  	Label_007F:  	str2 = this._x594135906c55045c.Properties.GetPropertyString (name);  	goto Label_003C;  	Label_0095:  	if (0 != 0) {  		goto Label_007F;  	}  	strArray = new string[5];  	strArray [0] = xb32f8dd719a105db;  	strArray [1] = ":";  	strArray [2] = x1640122bb0e29c3e;  	goto Label_0064;  	Label_00B5:  	if (4 != 0) {  		return;  	}  	Label_00BC:  	entry = enumerator.Current;  	goto Label_0095;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: if (15 != 0) {  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: strArray [3] = "_";  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: strArray [4] = entry.Name;  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: strArray = new string[5];  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: strArray [2] = x1640122bb0e29c3e;  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x4ec53e22935ca8a4,The following statement contains a magic number: if (4 != 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	Label_0060:  	if (enumerator.MoveNext ()) {  		goto Label_015A;  	}  	return;  	Label_008D:  	xa58d1d9c6fa55c59.AddColumn (field.NormalizedHigh);  	xa58d1d9c6fa55c59.AddColumn (field.NormalizedLow);  	xa58d1d9c6fa55c59.WriteLine ();  	if (0 == 0) {  		goto Label_0060;  	}  	goto Label_008D;  	Label_00B0:  	xa58d1d9c6fa55c59.AddColumn ("single");  	if (2 == 0) {  		goto Label_015A;  	}  	goto Label_008D;  	Label_00C9:  	xa58d1d9c6fa55c59.AddColumn ("pass");  	goto Label_008D;  	Label_00D6:  	xa58d1d9c6fa55c59.AddColumn ("oneof");  	goto Label_008D;  	Label_00E3:  	xa58d1d9c6fa55c59.AddColumn ("equilateral");  	goto Label_008D;  	Label_00F7:  	xa58d1d9c6fa55c59.AddColumn ("range");  	goto Label_008D;  	Label_010C:  	xa58d1d9c6fa55c59.AddColumn (field.TimeSlice);  	switch (field.Action) {  	case NormalizationAction.PassThrough:  		goto Label_00C9;  	case NormalizationAction.Normalize:  		goto Label_00F7;  	case NormalizationAction.Ignore:  		break;  	case NormalizationAction.OneOf:  		goto Label_00D6;  	case NormalizationAction.Equilateral:  		goto Label_00E3;  	case NormalizationAction.SingleField:  		goto Label_00B0;  	default:  		throw new AnalystError ("Unknown action: " + field.Action);  	}  	xa58d1d9c6fa55c59.AddColumn ("ignore");  	if (15 != 0) {  		goto Label_018C;  	}  	if (0 != 0) {  		goto Label_0060;  	}  	Label_015A:  	field = enumerator.Current;  	xa58d1d9c6fa55c59.AddColumn (field.Name);  	xa58d1d9c6fa55c59.AddColumn (field.Input ? "input" : "output");  	goto Label_010C;  	Label_018C:  	if (4 != 0) {  		goto Label_008D;  	}  	goto Label_0060;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	Label_0060:  	if (enumerator.MoveNext ()) {  		goto Label_015A;  	}  	return;  	Label_008D:  	xa58d1d9c6fa55c59.AddColumn (field.NormalizedHigh);  	xa58d1d9c6fa55c59.AddColumn (field.NormalizedLow);  	xa58d1d9c6fa55c59.WriteLine ();  	if (0 == 0) {  		goto Label_0060;  	}  	goto Label_008D;  	Label_00B0:  	xa58d1d9c6fa55c59.AddColumn ("single");  	if (2 == 0) {  		goto Label_015A;  	}  	goto Label_008D;  	Label_00C9:  	xa58d1d9c6fa55c59.AddColumn ("pass");  	goto Label_008D;  	Label_00D6:  	xa58d1d9c6fa55c59.AddColumn ("oneof");  	goto Label_008D;  	Label_00E3:  	xa58d1d9c6fa55c59.AddColumn ("equilateral");  	goto Label_008D;  	Label_00F7:  	xa58d1d9c6fa55c59.AddColumn ("range");  	goto Label_008D;  	Label_010C:  	xa58d1d9c6fa55c59.AddColumn (field.TimeSlice);  	switch (field.Action) {  	case NormalizationAction.PassThrough:  		goto Label_00C9;  	case NormalizationAction.Normalize:  		goto Label_00F7;  	case NormalizationAction.Ignore:  		break;  	case NormalizationAction.OneOf:  		goto Label_00D6;  	case NormalizationAction.Equilateral:  		goto Label_00E3;  	case NormalizationAction.SingleField:  		goto Label_00B0;  	default:  		throw new AnalystError ("Unknown action: " + field.Action);  	}  	xa58d1d9c6fa55c59.AddColumn ("ignore");  	if (15 != 0) {  		goto Label_018C;  	}  	if (0 != 0) {  		goto Label_0060;  	}  	Label_015A:  	field = enumerator.Current;  	xa58d1d9c6fa55c59.AddColumn (field.Name);  	xa58d1d9c6fa55c59.AddColumn (field.Input ? "input" : "output");  	goto Label_010C;  	Label_018C:  	if (4 != 0) {  		goto Label_008D;  	}  	goto Label_0060;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x594135906c55045c.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	Label_0060:  	if (enumerator.MoveNext ()) {  		goto Label_015A;  	}  	return;  	Label_008D:  	xa58d1d9c6fa55c59.AddColumn (field.NormalizedHigh);  	xa58d1d9c6fa55c59.AddColumn (field.NormalizedLow);  	xa58d1d9c6fa55c59.WriteLine ();  	if (0 == 0) {  		goto Label_0060;  	}  	goto Label_008D;  	Label_00B0:  	xa58d1d9c6fa55c59.AddColumn ("single");  	if (2 == 0) {  		goto Label_015A;  	}  	goto Label_008D;  	Label_00C9:  	xa58d1d9c6fa55c59.AddColumn ("pass");  	goto Label_008D;  	Label_00D6:  	xa58d1d9c6fa55c59.AddColumn ("oneof");  	goto Label_008D;  	Label_00E3:  	xa58d1d9c6fa55c59.AddColumn ("equilateral");  	goto Label_008D;  	Label_00F7:  	xa58d1d9c6fa55c59.AddColumn ("range");  	goto Label_008D;  	Label_010C:  	xa58d1d9c6fa55c59.AddColumn (field.TimeSlice);  	switch (field.Action) {  	case NormalizationAction.PassThrough:  		goto Label_00C9;  	case NormalizationAction.Normalize:  		goto Label_00F7;  	case NormalizationAction.Ignore:  		break;  	case NormalizationAction.OneOf:  		goto Label_00D6;  	case NormalizationAction.Equilateral:  		goto Label_00E3;  	case NormalizationAction.SingleField:  		goto Label_00B0;  	default:  		throw new AnalystError ("Unknown action: " + field.Action);  	}  	xa58d1d9c6fa55c59.AddColumn ("ignore");  	if (15 != 0) {  		goto Label_018C;  	}  	if (0 != 0) {  		goto Label_0060;  	}  	Label_015A:  	field = enumerator.Current;  	xa58d1d9c6fa55c59.AddColumn (field.Name);  	xa58d1d9c6fa55c59.AddColumn (field.Input ? "input" : "output");  	goto Label_010C;  	Label_018C:  	if (4 != 0) {  		goto Label_008D;  	}  	goto Label_0060;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,The following statement contains a magic number: if (2 == 0) {  	goto Label_015A;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,The following statement contains a magic number: if (15 != 0) {  	goto Label_018C;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x6f59fa9537dbb843,The following statement contains a magic number: if (4 != 0) {  	goto Label_008D;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The following statement contains a magic number: if ((((uint)num) | 8) != 0) {  	xa58d1d9c6fa55c59.AddSubSection ("STATS");  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The following statement contains a magic number: if (field2.Class) {  	using (IEnumerator<AnalystClassItem> enumerator = field2.ClassMembers.GetEnumerator ()) {  		goto Label_00AE;  		Label_0090:  		if ((((uint)num) | 3) == 0) {  			goto Label_0045;  		}  		xa58d1d9c6fa55c59.WriteLine ();  		Label_00AE:  		if (enumerator.MoveNext ()) {  			AnalystClassItem current = enumerator.Current;  			xa58d1d9c6fa55c59.AddColumn (field2.Name);  			xa58d1d9c6fa55c59.AddColumn (current.Code);  			xa58d1d9c6fa55c59.AddColumn (current.Name);  			xa58d1d9c6fa55c59.AddColumn (current.Count);  			goto Label_0090;  		}  		goto Label_0045;  	}  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The following statement contains a magic number: using (IEnumerator<AnalystClassItem> enumerator = field2.ClassMembers.GetEnumerator ()) {  	goto Label_00AE;  	Label_0090:  	if ((((uint)num) | 3) == 0) {  		goto Label_0045;  	}  	xa58d1d9c6fa55c59.WriteLine ();  	Label_00AE:  	if (enumerator.MoveNext ()) {  		AnalystClassItem current = enumerator.Current;  		xa58d1d9c6fa55c59.AddColumn (field2.Name);  		xa58d1d9c6fa55c59.AddColumn (current.Code);  		xa58d1d9c6fa55c59.AddColumn (current.Name);  		xa58d1d9c6fa55c59.AddColumn (current.Count);  		goto Label_0090;  	}  	goto Label_0045;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The following statement contains a magic number: if ((((uint)num) | 3) == 0) {  	goto Label_0045;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The following statement contains a magic number: if (8 == 0) {  	goto Label_0062;  }  
Magic Number,Encog.App.Analyst.Script,ScriptSave,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\ScriptSave.cs,x80a029c2a0fbca61,The following statement contains a magic number: if (3 == 0) {  	goto Label_0045;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: if (this._xcb632f1b59a7f901 != null) {  	using (IEnumerator<AnalystField> enumerator = this._xcb632f1b59a7f901.GetEnumerator ()) {  		AnalystField field;  		DataField field2;  		int num;  		Label_0018:  		if (enumerator.MoveNext ()) {  			goto Label_0177;  		}  		goto Label_00BE;  		Label_0029:  		if (((uint)num) > uint.MaxValue) {  			goto Label_009D;  		}  		Label_003B:  		num = 0;  		foreach (AnalystClassItem item in field2.ClassMembers) {  			field.Classes.Add (new ClassItem (item.Name' num++));  		}  		goto Label_0018;  		Label_008B:  		if (field.Action == NormalizationAction.SingleField) {  			goto Label_0029;  		}  		if (3 == 0) {  			goto Label_003B;  		}  		goto Label_0018;  		Label_009D:  		if (field.Action == NormalizationAction.Equilateral) {  			goto Label_003B;  		}  		Label_00AB:  		if (field.Action != NormalizationAction.OneOf) {  			goto Label_008B;  		}  		goto Label_003B;  		Label_00BE:  		if (((uint)num) <= uint.MaxValue) {  			return;  		}  		if ((((uint)num) | 2) != 0) {  			goto Label_0171;  		}  		if (0 == 0) {  			goto Label_012F;  		}  		goto Label_008B;  		Label_00F3:  		if (0 != 0) {  			goto Label_0018;  		}  		goto Label_0029;  		Label_00FE:  		field.ActualHigh = field2.Max;  		field.ActualLow = field2.Min;  		goto Label_009D;  		Label_011B:  		if (field.Action == NormalizationAction.Normalize) {  			goto Label_00FE;  		}  		if (0 == 0) {  			goto Label_009D;  		}  		goto Label_00AB;  		Label_012F:  		if (0 == 0) {  			goto Label_011B;  		}  		if (2 != 0) {  			goto Label_00FE;  		}  		if (0 == 0) {  			goto Label_008B;  		}  		goto Label_019C;  		Label_013E:  		field2 = script.FindDataField (field.Name);  		if (-1 == 0) {  			goto Label_00F3;  		}  		while (field2 == null) {  			throw new AnalystError ("Normalize specifies unknown field: " + field.Name);  		}  		goto Label_0181;  		Label_0171:  		if (0 != 0) {  			goto Label_0029;  		}  		Label_0177:  		field = enumerator.Current;  		goto Label_013E;  		Label_0181:  		if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  			goto Label_012F;  		}  		Label_019C:  		if ((((uint)num) + ((uint)num)) >= 0) {  			goto Label_009D;  		}  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: if (this._xcb632f1b59a7f901 != null) {  	using (IEnumerator<AnalystField> enumerator = this._xcb632f1b59a7f901.GetEnumerator ()) {  		AnalystField field;  		DataField field2;  		int num;  		Label_0018:  		if (enumerator.MoveNext ()) {  			goto Label_0177;  		}  		goto Label_00BE;  		Label_0029:  		if (((uint)num) > uint.MaxValue) {  			goto Label_009D;  		}  		Label_003B:  		num = 0;  		foreach (AnalystClassItem item in field2.ClassMembers) {  			field.Classes.Add (new ClassItem (item.Name' num++));  		}  		goto Label_0018;  		Label_008B:  		if (field.Action == NormalizationAction.SingleField) {  			goto Label_0029;  		}  		if (3 == 0) {  			goto Label_003B;  		}  		goto Label_0018;  		Label_009D:  		if (field.Action == NormalizationAction.Equilateral) {  			goto Label_003B;  		}  		Label_00AB:  		if (field.Action != NormalizationAction.OneOf) {  			goto Label_008B;  		}  		goto Label_003B;  		Label_00BE:  		if (((uint)num) <= uint.MaxValue) {  			return;  		}  		if ((((uint)num) | 2) != 0) {  			goto Label_0171;  		}  		if (0 == 0) {  			goto Label_012F;  		}  		goto Label_008B;  		Label_00F3:  		if (0 != 0) {  			goto Label_0018;  		}  		goto Label_0029;  		Label_00FE:  		field.ActualHigh = field2.Max;  		field.ActualLow = field2.Min;  		goto Label_009D;  		Label_011B:  		if (field.Action == NormalizationAction.Normalize) {  			goto Label_00FE;  		}  		if (0 == 0) {  			goto Label_009D;  		}  		goto Label_00AB;  		Label_012F:  		if (0 == 0) {  			goto Label_011B;  		}  		if (2 != 0) {  			goto Label_00FE;  		}  		if (0 == 0) {  			goto Label_008B;  		}  		goto Label_019C;  		Label_013E:  		field2 = script.FindDataField (field.Name);  		if (-1 == 0) {  			goto Label_00F3;  		}  		while (field2 == null) {  			throw new AnalystError ("Normalize specifies unknown field: " + field.Name);  		}  		goto Label_0181;  		Label_0171:  		if (0 != 0) {  			goto Label_0029;  		}  		Label_0177:  		field = enumerator.Current;  		goto Label_013E;  		Label_0181:  		if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  			goto Label_012F;  		}  		Label_019C:  		if ((((uint)num) + ((uint)num)) >= 0) {  			goto Label_009D;  		}  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: if (this._xcb632f1b59a7f901 != null) {  	using (IEnumerator<AnalystField> enumerator = this._xcb632f1b59a7f901.GetEnumerator ()) {  		AnalystField field;  		DataField field2;  		int num;  		Label_0018:  		if (enumerator.MoveNext ()) {  			goto Label_0177;  		}  		goto Label_00BE;  		Label_0029:  		if (((uint)num) > uint.MaxValue) {  			goto Label_009D;  		}  		Label_003B:  		num = 0;  		foreach (AnalystClassItem item in field2.ClassMembers) {  			field.Classes.Add (new ClassItem (item.Name' num++));  		}  		goto Label_0018;  		Label_008B:  		if (field.Action == NormalizationAction.SingleField) {  			goto Label_0029;  		}  		if (3 == 0) {  			goto Label_003B;  		}  		goto Label_0018;  		Label_009D:  		if (field.Action == NormalizationAction.Equilateral) {  			goto Label_003B;  		}  		Label_00AB:  		if (field.Action != NormalizationAction.OneOf) {  			goto Label_008B;  		}  		goto Label_003B;  		Label_00BE:  		if (((uint)num) <= uint.MaxValue) {  			return;  		}  		if ((((uint)num) | 2) != 0) {  			goto Label_0171;  		}  		if (0 == 0) {  			goto Label_012F;  		}  		goto Label_008B;  		Label_00F3:  		if (0 != 0) {  			goto Label_0018;  		}  		goto Label_0029;  		Label_00FE:  		field.ActualHigh = field2.Max;  		field.ActualLow = field2.Min;  		goto Label_009D;  		Label_011B:  		if (field.Action == NormalizationAction.Normalize) {  			goto Label_00FE;  		}  		if (0 == 0) {  			goto Label_009D;  		}  		goto Label_00AB;  		Label_012F:  		if (0 == 0) {  			goto Label_011B;  		}  		if (2 != 0) {  			goto Label_00FE;  		}  		if (0 == 0) {  			goto Label_008B;  		}  		goto Label_019C;  		Label_013E:  		field2 = script.FindDataField (field.Name);  		if (-1 == 0) {  			goto Label_00F3;  		}  		while (field2 == null) {  			throw new AnalystError ("Normalize specifies unknown field: " + field.Name);  		}  		goto Label_0181;  		Label_0171:  		if (0 != 0) {  			goto Label_0029;  		}  		Label_0177:  		field = enumerator.Current;  		goto Label_013E;  		Label_0181:  		if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  			goto Label_012F;  		}  		Label_019C:  		if ((((uint)num) + ((uint)num)) >= 0) {  			goto Label_009D;  		}  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._xcb632f1b59a7f901.GetEnumerator ()) {  	AnalystField field;  	DataField field2;  	int num;  	Label_0018:  	if (enumerator.MoveNext ()) {  		goto Label_0177;  	}  	goto Label_00BE;  	Label_0029:  	if (((uint)num) > uint.MaxValue) {  		goto Label_009D;  	}  	Label_003B:  	num = 0;  	foreach (AnalystClassItem item in field2.ClassMembers) {  		field.Classes.Add (new ClassItem (item.Name' num++));  	}  	goto Label_0018;  	Label_008B:  	if (field.Action == NormalizationAction.SingleField) {  		goto Label_0029;  	}  	if (3 == 0) {  		goto Label_003B;  	}  	goto Label_0018;  	Label_009D:  	if (field.Action == NormalizationAction.Equilateral) {  		goto Label_003B;  	}  	Label_00AB:  	if (field.Action != NormalizationAction.OneOf) {  		goto Label_008B;  	}  	goto Label_003B;  	Label_00BE:  	if (((uint)num) <= uint.MaxValue) {  		return;  	}  	if ((((uint)num) | 2) != 0) {  		goto Label_0171;  	}  	if (0 == 0) {  		goto Label_012F;  	}  	goto Label_008B;  	Label_00F3:  	if (0 != 0) {  		goto Label_0018;  	}  	goto Label_0029;  	Label_00FE:  	field.ActualHigh = field2.Max;  	field.ActualLow = field2.Min;  	goto Label_009D;  	Label_011B:  	if (field.Action == NormalizationAction.Normalize) {  		goto Label_00FE;  	}  	if (0 == 0) {  		goto Label_009D;  	}  	goto Label_00AB;  	Label_012F:  	if (0 == 0) {  		goto Label_011B;  	}  	if (2 != 0) {  		goto Label_00FE;  	}  	if (0 == 0) {  		goto Label_008B;  	}  	goto Label_019C;  	Label_013E:  	field2 = script.FindDataField (field.Name);  	if (-1 == 0) {  		goto Label_00F3;  	}  	while (field2 == null) {  		throw new AnalystError ("Normalize specifies unknown field: " + field.Name);  	}  	goto Label_0181;  	Label_0171:  	if (0 != 0) {  		goto Label_0029;  	}  	Label_0177:  	field = enumerator.Current;  	goto Label_013E;  	Label_0181:  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		goto Label_012F;  	}  	Label_019C:  	if ((((uint)num) + ((uint)num)) >= 0) {  		goto Label_009D;  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._xcb632f1b59a7f901.GetEnumerator ()) {  	AnalystField field;  	DataField field2;  	int num;  	Label_0018:  	if (enumerator.MoveNext ()) {  		goto Label_0177;  	}  	goto Label_00BE;  	Label_0029:  	if (((uint)num) > uint.MaxValue) {  		goto Label_009D;  	}  	Label_003B:  	num = 0;  	foreach (AnalystClassItem item in field2.ClassMembers) {  		field.Classes.Add (new ClassItem (item.Name' num++));  	}  	goto Label_0018;  	Label_008B:  	if (field.Action == NormalizationAction.SingleField) {  		goto Label_0029;  	}  	if (3 == 0) {  		goto Label_003B;  	}  	goto Label_0018;  	Label_009D:  	if (field.Action == NormalizationAction.Equilateral) {  		goto Label_003B;  	}  	Label_00AB:  	if (field.Action != NormalizationAction.OneOf) {  		goto Label_008B;  	}  	goto Label_003B;  	Label_00BE:  	if (((uint)num) <= uint.MaxValue) {  		return;  	}  	if ((((uint)num) | 2) != 0) {  		goto Label_0171;  	}  	if (0 == 0) {  		goto Label_012F;  	}  	goto Label_008B;  	Label_00F3:  	if (0 != 0) {  		goto Label_0018;  	}  	goto Label_0029;  	Label_00FE:  	field.ActualHigh = field2.Max;  	field.ActualLow = field2.Min;  	goto Label_009D;  	Label_011B:  	if (field.Action == NormalizationAction.Normalize) {  		goto Label_00FE;  	}  	if (0 == 0) {  		goto Label_009D;  	}  	goto Label_00AB;  	Label_012F:  	if (0 == 0) {  		goto Label_011B;  	}  	if (2 != 0) {  		goto Label_00FE;  	}  	if (0 == 0) {  		goto Label_008B;  	}  	goto Label_019C;  	Label_013E:  	field2 = script.FindDataField (field.Name);  	if (-1 == 0) {  		goto Label_00F3;  	}  	while (field2 == null) {  		throw new AnalystError ("Normalize specifies unknown field: " + field.Name);  	}  	goto Label_0181;  	Label_0171:  	if (0 != 0) {  		goto Label_0029;  	}  	Label_0177:  	field = enumerator.Current;  	goto Label_013E;  	Label_0181:  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		goto Label_012F;  	}  	Label_019C:  	if ((((uint)num) + ((uint)num)) >= 0) {  		goto Label_009D;  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._xcb632f1b59a7f901.GetEnumerator ()) {  	AnalystField field;  	DataField field2;  	int num;  	Label_0018:  	if (enumerator.MoveNext ()) {  		goto Label_0177;  	}  	goto Label_00BE;  	Label_0029:  	if (((uint)num) > uint.MaxValue) {  		goto Label_009D;  	}  	Label_003B:  	num = 0;  	foreach (AnalystClassItem item in field2.ClassMembers) {  		field.Classes.Add (new ClassItem (item.Name' num++));  	}  	goto Label_0018;  	Label_008B:  	if (field.Action == NormalizationAction.SingleField) {  		goto Label_0029;  	}  	if (3 == 0) {  		goto Label_003B;  	}  	goto Label_0018;  	Label_009D:  	if (field.Action == NormalizationAction.Equilateral) {  		goto Label_003B;  	}  	Label_00AB:  	if (field.Action != NormalizationAction.OneOf) {  		goto Label_008B;  	}  	goto Label_003B;  	Label_00BE:  	if (((uint)num) <= uint.MaxValue) {  		return;  	}  	if ((((uint)num) | 2) != 0) {  		goto Label_0171;  	}  	if (0 == 0) {  		goto Label_012F;  	}  	goto Label_008B;  	Label_00F3:  	if (0 != 0) {  		goto Label_0018;  	}  	goto Label_0029;  	Label_00FE:  	field.ActualHigh = field2.Max;  	field.ActualLow = field2.Min;  	goto Label_009D;  	Label_011B:  	if (field.Action == NormalizationAction.Normalize) {  		goto Label_00FE;  	}  	if (0 == 0) {  		goto Label_009D;  	}  	goto Label_00AB;  	Label_012F:  	if (0 == 0) {  		goto Label_011B;  	}  	if (2 != 0) {  		goto Label_00FE;  	}  	if (0 == 0) {  		goto Label_008B;  	}  	goto Label_019C;  	Label_013E:  	field2 = script.FindDataField (field.Name);  	if (-1 == 0) {  		goto Label_00F3;  	}  	while (field2 == null) {  		throw new AnalystError ("Normalize specifies unknown field: " + field.Name);  	}  	goto Label_0181;  	Label_0171:  	if (0 != 0) {  		goto Label_0029;  	}  	Label_0177:  	field = enumerator.Current;  	goto Label_013E;  	Label_0181:  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		goto Label_012F;  	}  	Label_019C:  	if ((((uint)num) + ((uint)num)) >= 0) {  		goto Label_009D;  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: if (3 == 0) {  	goto Label_003B;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: if ((((uint)num) | 2) != 0) {  	goto Label_0171;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystNormalize.cs,Init,The following statement contains a magic number: if (2 != 0) {  	goto Label_00FE;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,AnalystField,The following statement contains a magic number: if (8 != 0) {  	if (0 == 0) {  		this._x8affa5274961ba3a = new List<ClassItem> ();  		this._xba38fdafb6633fdf = new Dictionary<string' int> ();  		this._x945de103a2446d98 = field._x945de103a2446d98;  		this._x4a1b740f8a477de7 = field._x4a1b740f8a477de7;  	}  	else {  		goto Label_0093;  	}  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DetermineClass,The following statement contains a magic number: switch (this._xab8fe3cd8c5556fb) {  case NormalizationAction.OneOf:  	num = EngineArray.IndexOfLargest (numArray);  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_0028;  	}  	goto Label_0068;  case NormalizationAction.Equilateral:  	num = this._x8959a01885d5f522.Decode (numArray);  	goto Label_001F;  case NormalizationAction.SingleField:  	num = (int)numArray [0];  	goto Label_001F;  default:  	if (4 != 0) {  		break;  	}  	goto Label_0028;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DetermineClass,The following statement contains a magic number: if (4 != 0) {  	break;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,DetermineClass,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0004;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,FixSingleValue,The following statement contains a magic number: if ((this._xab8fe3cd8c5556fb == NormalizationAction.Normalize) && (Math.Abs ((double)(this._x945de103a2446d98 - this._x4a1b740f8a477de7)) < 1E-07)) {  	this._x945de103a2446d98++;  	this._x4a1b740f8a477de7--;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,Init,The following statement contains a magic number: if (this._x8affa5274961ba3a.Count < 3) {  	throw new QuantError ("There must be at least three classes to make use of equilateral normalization.");  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,xd8118cff55f2b045,The following statement contains a magic number: if (num >= this._x8affa5274961ba3a.Count) {  	if ((((uint)num) + ((uint)num)) > uint.MaxValue) {  		goto Label_0049;  	}  	if (-2 != 0) {  		return numArray;  	}  	goto Label_0087;  }  
Magic Number,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,xd8118cff55f2b045,The following statement contains a magic number: if (-2 != 0) {  	return numArray;  }  
Magic Number,Encog.Util.Arrayutil,ClassItem,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\ClassItem.cs,ToString,The following statement contains a magic number: if (4 != 0) {  	return builder.ToString ();  }  
Magic Number,Encog.Util.Arrayutil,NormalizationActionExtension,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizationActionExtension.cs,IsClassify,The following statement contains a magic number: if ((extensionParam != NormalizationAction.OneOf) && ((2 == 0) || (extensionParam != NormalizationAction.SingleField))) {  	return (extensionParam == NormalizationAction.Equilateral);  }  
Magic Number,Encog.Util.Arrayutil,TemporalWindowArray,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowArray.cs,Process,The following statement contains a magic number: if (num3 < num2) {  	int num5;  	data2 = new BasicMLData (this._xdf118c3be13cc35d);  	do {  		data3 = new BasicMLData (this._x819dc6aed7346fc6);  		if ((((uint)num3) | 3) == 0) {  			goto Label_004D;  		}  		num4 = num3;  	}  	while ((((uint)num3) - ((uint)num5)) < 0);  	num5 = 0;  	if ((((uint)num5) | 0xff) != 0) {  		Label_007A:  		if (num5 < this._xdf118c3be13cc35d) {  			data2 [num5] = data [num4++];  			if ((((uint)num3) + ((uint)num5)) <= uint.MaxValue) {  				num5++;  				goto Label_007A;  			}  		}  		num6 = 0;  		goto Label_0053;  	}  	goto Label_00F0;  }  
Magic Number,Encog.Util.Arrayutil,TemporalWindowArray,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowArray.cs,Process,The following statement contains a magic number: do {  	data3 = new BasicMLData (this._x819dc6aed7346fc6);  	if ((((uint)num3) | 3) == 0) {  		goto Label_004D;  	}  	num4 = num3;  }  while ((((uint)num3) - ((uint)num5)) < 0);  
Magic Number,Encog.Util.Arrayutil,TemporalWindowArray,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowArray.cs,Process,The following statement contains a magic number: if ((((uint)num3) | 3) == 0) {  	goto Label_004D;  }  
Magic Number,Encog.Util.Arrayutil,TemporalWindowArray,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowArray.cs,Process,The following statement contains a magic number: if (num6 < this._x819dc6aed7346fc6) {  	data3 [num6] = data [num4++];  	if ((((uint)num6) | 15) == 0) {  		return set;  	}  	goto Label_004D;  }  
Magic Number,Encog.Util.Arrayutil,TemporalWindowArray,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowArray.cs,Process,The following statement contains a magic number: if ((((uint)num6) | 15) == 0) {  	return set;  }  
Magic Number,Encog.Util.Arrayutil,TemporalWindowField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\TemporalWindowField.cs,ToString,The following statement contains a magic number: if (3 != 0) {  	builder.Append ("]");  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,NormalizedField,The following statement contains a magic number: if ((((uint)ahigh) | 2) != 0) {  	this._x8affa5274961ba3a = new List<ClassItem> ();  	this._xba38fdafb6633fdf = new Dictionary<string' int> ();  	if (0 == 0) {  	}  	this._xab8fe3cd8c5556fb = theAction;  	this._x945de103a2446d98 = ahigh;  	this._x4a1b740f8a477de7 = alow;  	this._x891507b50bbab0f9 = nhigh;  	this._x136bfff0efb12047 = nlow;  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,FixSingleValue,The following statement contains a magic number: if ((this._xab8fe3cd8c5556fb == NormalizationAction.Normalize) && (Math.Abs ((double)(this._x945de103a2446d98 - this._x4a1b740f8a477de7)) < 1E-07)) {  	this._x945de103a2446d98++;  	this._x4a1b740f8a477de7--;  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,Init,The following statement contains a magic number: if (this._xab8fe3cd8c5556fb == NormalizationAction.Equilateral) {  	if (this._x8affa5274961ba3a.Count < 3) {  		throw new QuantError ("There must be at least three classes to make use of equilateral normalization.");  	}  	this._x8959a01885d5f522 = new Equilateral (this._x8affa5274961ba3a.Count' this._x891507b50bbab0f9' this._x136bfff0efb12047);  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,Init,The following statement contains a magic number: if (this._x8affa5274961ba3a.Count < 3) {  	throw new QuantError ("There must be at least three classes to make use of equilateral normalization.");  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The following statement contains a magic number: if ((theAction == NormalizationAction.Equilateral) || ((theAction == NormalizationAction.OneOf) && ((((uint)num2) | 3) != 0))) {  	goto Label_0114;  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The following statement contains a magic number: if ((((uint)num2) | 3) == 0) {  	goto Label_003E;  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The following statement contains a magic number: if ((((uint)high) | 8) == 0) {  	goto Label_0110;  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The following statement contains a magic number: if (0 == 0) {  	if (((uint)num) > uint.MaxValue) {  		goto Label_00AB;  	}  	if ((((uint)classFrom) | 4) != 0) {  		return;  	}  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,MakeClass,The following statement contains a magic number: if ((((uint)classFrom) | 4) != 0) {  	return;  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,ToString,The following statement contains a magic number: if (0 == 0) {  	builder.Append (base.GetType ().Name);  	builder.Append (" name=");  	if (4 == 0) {  		goto Label_0027;  	}  	builder.Append (this._xc15bd84e01929885);  	builder.Append ("' actualHigh=");  	builder.Append (this._x945de103a2446d98);  }  
Magic Number,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,ToString,The following statement contains a magic number: if (4 == 0) {  	goto Label_0027;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,CSVHeaders,The following statement contains a magic number: try {  	int num;  	dcsv = new ReadCSV (filename.ToString ()' headers' format);  	if (2 != 0) {  		goto Label_00D4;  	}  	goto Label_0098;  	Label_003B:  	if (num < dcsv.ColumnCount) {  		goto Label_004E;  	}  	Label_0044:  	this.xd586e0c16bdae7fc ();  	return;  	Label_004E:  	this._x36c9f86d45fbd962.Add ("field:" + (num + 1));  	num++;  	goto Label_003B;  	Label_0071:  	if (headers) {  		goto Label_0098;  	}  	goto Label_008B;  	if (0 != 0) {  		goto Label_0071;  	}  	if (((uint)headers) <= uint.MaxValue) {  	}  	Label_008B:  	num = 0;  	if (0 != 0) {  	}  	goto Label_003B;  	Label_0098:  	foreach (string str in dcsv.ColumnNames) {  		this._x36c9f86d45fbd962.Add (str);  	}  	goto Label_0044;  	Label_00D4:  	if ((-2147483648 != 0) && !dcsv.Next ()) {  		goto Label_0044;  	}  	goto Label_0071;  }  finally {  	if (dcsv != null) {  		dcsv.Close ();  	}  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,CSVHeaders,The following statement contains a magic number: try {  	int num;  	dcsv = new ReadCSV (filename.ToString ()' headers' format);  	if (2 != 0) {  		goto Label_00D4;  	}  	goto Label_0098;  	Label_003B:  	if (num < dcsv.ColumnCount) {  		goto Label_004E;  	}  	Label_0044:  	this.xd586e0c16bdae7fc ();  	return;  	Label_004E:  	this._x36c9f86d45fbd962.Add ("field:" + (num + 1));  	num++;  	goto Label_003B;  	Label_0071:  	if (headers) {  		goto Label_0098;  	}  	goto Label_008B;  	if (0 != 0) {  		goto Label_0071;  	}  	if (((uint)headers) <= uint.MaxValue) {  	}  	Label_008B:  	num = 0;  	if (0 != 0) {  	}  	goto Label_003B;  	Label_0098:  	foreach (string str in dcsv.ColumnNames) {  		this._x36c9f86d45fbd962.Add (str);  	}  	goto Label_0044;  	Label_00D4:  	if ((-2147483648 != 0) && !dcsv.Next ()) {  		goto Label_0044;  	}  	goto Label_0071;  }  finally {  	if (dcsv != null) {  		dcsv.Close ();  	}  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,CSVHeaders,The following statement contains a magic number: if (2 != 0) {  	goto Label_00D4;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,CSVHeaders,The following statement contains a magic number: if ((-2147483648 != 0) && !dcsv.Next ()) {  	goto Label_0044;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,ParseTimeSlice,The following statement contains a magic number: if (-2147483648 != 0) {  	if (x1ecac4c96d3f3733 == null) {  		x1ecac4c96d3f3733 = new Func<string' string> (CSVHeaders.x3e30cb03ff05d597);  	}  	if (x3ea1037ccf291a94 == null) {  		x3ea1037ccf291a94 = new Func<string' bool> (CSVHeaders.x930bfcf4581beee5);  	}  	if (xec790bb6d0304faa == null) {  		xec790bb6d0304faa = new Func<string' int> (CSVHeaders.x512e50e9ebf06cf6);  	}  	return source.Select<string' string> (x1ecac4c96d3f3733).Where<string> (x3ea1037ccf291a94).Select<string' int> (xec790bb6d0304faa).FirstOrDefault<int> ();  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,ParseTimeSlice,The following statement contains a magic number: while (num2 == -1) {  	return 0;  	Label_0072:  	if (15 != 0) {  		goto Label_0045;  	}  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,ParseTimeSlice,The following statement contains a magic number: if (15 != 0) {  	goto Label_0045;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,TagColumn,The following statement contains a magic number: if (timeSlice > 0) {  	builder.Append ('+');  	if ((((uint)multiPart) & 0) == 0) {  		goto Label_0122;  	}  	if (8 == 0) {  		goto Label_00A5;  	}  	if ((((uint)multiPart) & 0) == 0) {  		goto Label_000B;  	}  	goto Label_00EC;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,TagColumn,The following statement contains a magic number: if (8 == 0) {  	goto Label_00A5;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,x9437465b343430ed,The following statement contains a magic number: if (-1 != 0) {  	if ((((uint)num) & 0) != 0) {  		goto Label_0139;  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0053;  	}  	if (3 == 0) {  		goto Label_001C;  	}  	goto Label_0038;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,x9437465b343430ed,The following statement contains a magic number: if (3 == 0) {  	goto Label_001C;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,x9437465b343430ed,The following statement contains a magic number: if (-2 != 0) {  	goto Label_001C;  }  
Magic Number,Encog.App.Analyst.Util,CSVHeaders,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\CSVHeaders.cs,x9437465b343430ed,The following statement contains a magic number: if (8 == 0) {  	goto Label_00FB;  }  
Magic Number,Encog.App.Analyst.Util,ConvertStringConst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\ConvertStringConst.cs,AnalystFileFormat2String,The following statement contains a magic number: if (8 != 0) {  	goto Label_003E;  }  
Magic Number,Encog.App.Analyst.Util,ConvertStringConst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\ConvertStringConst.cs,AnalystFileFormat2String,The following statement contains a magic number: if (4 != 0) {  	return "deccomma|semi";  }  
Magic Number,Encog.App.Analyst.Util,ConvertStringConst,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Util\ConvertStringConst.cs,AnalystFileFormat2String,The following statement contains a magic number: if (3 == 0) {  	goto Label_000E;  }  
Magic Number,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,ExecuteCommand,The following statement contains a magic number: if (((uint)flag) <= uint.MaxValue) {  	EncogLogging.Log (0' "source file:" + propertyString);  	EncogLogging.Log (0' "target file:" + sourceID);  	info = base.Script.ResolveFilename (propertyString);  	if (0 == 0) {  		do {  			info2 = base.Script.ResolveFilename (sourceID);  		}  		while (4 == 0);  	}  	else {  		goto Label_00F5;  	}  }  
Magic Number,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,ExecuteCommand,The following statement contains a magic number: if (0 == 0) {  	do {  		info2 = base.Script.ResolveFilename (sourceID);  	}  	while (4 == 0);  }  else {  	goto Label_00F5;  }  
Magic Number,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,ExecuteCommand,The following statement contains a magic number: do {  	info2 = base.Script.ResolveFilename (sourceID);  }  while (4 == 0);  
Magic Number,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,x176a88b9713cb7be,The following statement contains a magic number: if ((((uint)slice) & 0) == 0) {  	if (2 == 0) {  		goto Label_007D;  	}  	if (propertyString.Equals ("som")) {  		return new int[0];  	}  	list = new List<int> ();  	num = 0;  }  else {  	goto Label_0079;  }  
Magic Number,Encog.App.Analyst.Commands,CmdGenerate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdGenerate.cs,x176a88b9713cb7be,The following statement contains a magic number: if (2 == 0) {  	goto Label_007D;  }  
Magic Number,Encog.App.Analyst.Commands,CmdNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdNormalize.cs,ExecuteCommand,The following statement contains a magic number: if ((((uint)flag) | 2) != 0) {  	goto Label_017F;  }  
Magic Number,Encog.App.Analyst.Commands,CmdNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdNormalize.cs,ExecuteCommand,The following statement contains a magic number: do {  	AnalystNormalizeCSV ecsv2;  	info2 = base.Script.ResolveFilename (str2);  	EncogLogging.Log (0' "Beginning normalize");  	EncogLogging.Log (0' "source file:" + propertyString);  	EncogLogging.Log (0' "target file:" + str2);  	base.Script.MarkGenerated (str2);  	if (2 != 0) {  		format = base.Script.DetermineInputFormat (propertyString);  		format2 = base.Script.DetermineOutputFormat ();  		ecsv2 = new AnalystNormalizeCSV ();  	}  	ecsv2.Script = base.Script;  	ecsv = ecsv2;  	base.Analyst.CurrentQuantTask = ecsv;  	ecsv.Report = new AnalystReportBridge (base.Analyst);  	if (((uint)flag) <= uint.MaxValue) {  		goto Label_008B;  	}  }  while (3 == 0);  
Magic Number,Encog.App.Analyst.Commands,CmdNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdNormalize.cs,ExecuteCommand,The following statement contains a magic number: do {  	AnalystNormalizeCSV ecsv2;  	info2 = base.Script.ResolveFilename (str2);  	EncogLogging.Log (0' "Beginning normalize");  	EncogLogging.Log (0' "source file:" + propertyString);  	EncogLogging.Log (0' "target file:" + str2);  	base.Script.MarkGenerated (str2);  	if (2 != 0) {  		format = base.Script.DetermineInputFormat (propertyString);  		format2 = base.Script.DetermineOutputFormat ();  		ecsv2 = new AnalystNormalizeCSV ();  	}  	ecsv2.Script = base.Script;  	ecsv = ecsv2;  	base.Analyst.CurrentQuantTask = ecsv;  	ecsv.Report = new AnalystReportBridge (base.Analyst);  	if (((uint)flag) <= uint.MaxValue) {  		goto Label_008B;  	}  }  while (3 == 0);  
Magic Number,Encog.App.Analyst.Commands,CmdNormalize,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdNormalize.cs,ExecuteCommand,The following statement contains a magic number: if (2 != 0) {  	format = base.Script.DetermineInputFormat (propertyString);  	format2 = base.Script.DetermineOutputFormat ();  	ecsv2 = new AnalystNormalizeCSV ();  }  
Magic Number,Encog.App.Analyst.Commands,CmdSegregate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSegregate.cs,ExecuteCommand,The following statement contains a magic number: if (15 != 0) {  	goto Label_00E1;  }  
Magic Number,Encog.App.Analyst.Commands,CmdSegregate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSegregate.cs,ExecuteCommand,The following statement contains a magic number: if ((((uint)flag) - ((uint)num)) <= uint.MaxValue) {  	if (0 != 0) {  		goto Label_00E6;  	}  	ecsv.Report = new AnalystReportBridge (base.Analyst);  	if (2 != 0) {  		goto Label_0026;  	}  	goto Label_021F;  }  
Magic Number,Encog.App.Analyst.Commands,CmdSegregate,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSegregate.cs,ExecuteCommand,The following statement contains a magic number: if (2 != 0) {  	goto Label_0026;  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,x0d87de1eb44df41c,The following statement contains a magic number: if ((((uint)maxIteration) & 0) == 0) {  	if (2 == 0) {  		goto Label_0038;  	}  	maxIteration = base.Analyst.MaxIteration;  	if (0xff != 0) {  		goto Label_0038;  	}  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,x0d87de1eb44df41c,The following statement contains a magic number: if (2 == 0) {  	goto Label_0038;  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,x13d6d581f93d9ea3,The following statement contains a magic number: if (1 != 0) {  	set = EncogUtility.LoadEGB2Memory (filename);  	while (this._x33d31451731666c6 > 0) {  		do {  			set = new FoldedDataSet (set);  		}  		while (-1 == 0);  		if (-2147483648 != 0) {  			return set;  		}  	}  	return set;  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,x13d6d581f93d9ea3,The following statement contains a magic number: while (this._x33d31451731666c6 > 0) {  	do {  		set = new FoldedDataSet (set);  	}  	while (-1 == 0);  	if (-2147483648 != 0) {  		return set;  	}  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,x13d6d581f93d9ea3,The following statement contains a magic number: if (-2147483648 != 0) {  	return set;  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,xdd3322c83e23089c,The following statement contains a magic number: if (-2 != 0) {  	if ((((((uint)num) + ((uint)num)) >= 0) || (1 == 0)) && string.IsNullOrEmpty (propertyString)) {  		goto Label_0058;  	}  }  else if ((((uint)num) - ((uint)num)) >= 0) {  	goto Label_0058;  }  
Magic Number,Encog.App.Analyst.Commands,CmdTrain,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdTrain.cs,xdd3322c83e23089c,The following statement contains a magic number: if (propertyString.ToLower ().StartsWith ("kfold:")) {  	string s = propertyString.Substring (6);  	try {  		return int.Parse (s);  	}  	catch (FormatException) {  		throw new AnalystError ("Invalid kfold :" + s);  	}  }  
Magic Number,Encog.App.Analyst.Commands,CmdBalance,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdBalance.cs,ExecuteCommand,The following statement contains a magic number: if (2 == 0) {  	goto Label_0153;  }  
Magic Number,Encog.App.Analyst.Commands,CmdBalance,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdBalance.cs,ExecuteCommand,The following statement contains a magic number: if (3 != 0) {  	goto Label_0143;  }  
Magic Number,Encog.App.Analyst.Commands,CmdSet,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSet.cs,ExecuteCommand,The following statement contains a magic number: if ((((uint)index) - ((uint)index)) <= uint.MaxValue) {  	if (2 == 0) {  		goto Label_0041;  	}  	goto Label_0029;  }  
Magic Number,Encog.App.Analyst.Commands,CmdSet,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdSet.cs,ExecuteCommand,The following statement contains a magic number: if (2 == 0) {  	goto Label_0041;  }  
Magic Number,Encog.App.Analyst.Commands,CmdCluster,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Commands\CmdCluster.cs,ExecuteCommand,The following statement contains a magic number: rcsv.Process (info2' propertyInt' base.Analyst' 100);  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,SetProperty,The following statement contains a magic number: this._x4a3f0a05c02f235f [name] = CSVFormat.EgFormat.Format (d' 10);  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ToDots,The following statement contains a magic number: if ((((uint)num2) + ((uint)num2)) >= 0) {  	strArray [2] = str3;  	strArray [3] = ".";  	strArray [4] = str4;  	return string.Concat (strArray);  }  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ToDots,The following statement contains a magic number: if ((((uint)num2) + ((uint)num2)) >= 0) {  	strArray [2] = str3;  	strArray [3] = ".";  	strArray [4] = str4;  	return string.Concat (strArray);  }  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ToDots,The following statement contains a magic number: if ((((uint)num2) + ((uint)num2)) >= 0) {  	strArray [2] = str3;  	strArray [3] = ".";  	strArray [4] = str4;  	return string.Concat (strArray);  }  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ToDots,The following statement contains a magic number: strArray [2] = str3;  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ToDots,The following statement contains a magic number: strArray [3] = ".";  
Magic Number,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,ToDots,The following statement contains a magic number: strArray [4] = str4;  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyEntry,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyEntry.cs,ToString,The following statement contains a magic number: if (-2 != 0) {  	do {  		builder.Append (base.GetType ().Name);  	}  	while (0 != 0);  	builder.Append (" name=");  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: try {  	ReadCSV dcsv;  	string str;  	string str2;  	string str3;  	PropertyType typeFormat;  	PropertyEntry entry;  	List<PropertyEntry> list;  	Stream stream = ResourceLoader.CreateStream ("Encog.Resources.analyst.csv");  	goto Label_01A2;  	Label_0021:  	list.Add (entry);  	Label_002A:  	if (dcsv.Next ()) {  		goto Label_017D;  	}  	dcsv.Close ();  	stream.Close ();  	return;  	Label_0048:  	if (0 == 0) {  		goto Label_0059;  	}  	Label_004B:  	if (this._x4a3f0a05c02f235f.ContainsKey (str)) {  		goto Label_009E;  	}  	Label_0059:  	list = new List<PropertyEntry> ();  	this._x4a3f0a05c02f235f [str] = list;  	goto Label_00BC;  	Label_0070:  	if ("string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00B1;  	}  	throw new AnalystError ("Unknown type constraint: " + str3);  	Label_0091:  	entry = new PropertyEntry (typeFormat' str2' str);  	goto Label_004B;  	Label_009E:  	list = this._x4a3f0a05c02f235f [str];  	goto Label_00B6;  	Label_00AE:  	if (0 == 0) {  		goto Label_0070;  	}  	Label_00B1:  	typeFormat = PropertyType.TypeString;  	goto Label_0091;  	Label_00B6:  	if (0 == 0) {  		goto Label_0021;  	}  	Label_00BC:  	if (8 != 0) {  		goto Label_01B8;  	}  	Label_00CA:  	while ("list-string".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		typeFormat = PropertyType.TypeListString;  		goto Label_0091;  	}  	if (3 == 0) {  		goto Label_0185;  	}  	goto Label_00AE;  	Label_00EC:  	if ("int".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0114;  	}  	goto Label_013C;  	Label_00FD:  	if (!"format".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_00EC;  	}  	typeFormat = PropertyType.TypeFormat;  	goto Label_0091;  	Label_0114:  	typeFormat = PropertyType.TypeInteger;  	goto Label_0091;  	Label_0119:  	if ("real".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0153;  	}  	if (0 != 0) {  		goto Label_009E;  	}  	if (15 == 0) {  		goto Label_0021;  	}  	goto Label_00FD;  	Label_013C:  	if (2 != 0) {  		goto Label_00CA;  	}  	if (0 == 0) {  		goto Label_01A2;  	}  	goto Label_0091;  	Label_014B:  	if (0 != 0) {  		goto Label_0048;  	}  	goto Label_0119;  	Label_0153:  	typeFormat = PropertyType.TypeDouble;  	if (-2147483648 == 0) {  		goto Label_017D;  	}  	goto Label_0091;  	Label_0167:  	if ("boolean".Equals (str3' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_019D;  	}  	goto Label_014B;  	Label_017D:  	str = dcsv.Get (0);  	Label_0185:  	str2 = dcsv.Get (1);  	str3 = dcsv.Get (2);  	if (15 != 0) {  		goto Label_0167;  	}  	Label_019D:  	typeFormat = PropertyType.TypeBoolean;  	goto Label_0091;  	Label_01A2:  	dcsv = new ReadCSV (stream' false' CSVFormat.EgFormat);  	goto Label_002A;  	Label_01B8:  	if (0 == 0) {  		goto Label_0021;  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: if (8 != 0) {  	goto Label_01B8;  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: if (3 == 0) {  	goto Label_0185;  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: if (15 == 0) {  	goto Label_0021;  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: if (2 != 0) {  	goto Label_00CA;  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_017D;  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: str3 = dcsv.Get (2);  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,PropertyConstraints,The following statement contains a magic number: if (15 != 0) {  	goto Label_0167;  }  
Magic Number,Encog.App.Analyst.Script.Prop,PropertyConstraints,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyConstraints.cs,GetEntry,The following statement contains a magic number: do {  	str = section.ToUpper () + ":" + subSection.ToUpper ();  }  while (-2147483648 == 0);  
Magic Number,Encog.ML.Factory,MLTrainFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLTrainFactory.cs,Create,The following statement contains a magic number: using (IEnumerator<EncogPluginBase> enumerator = EncogFramework.Instance.Plugins.GetEnumerator ()) {  	EncogPluginBase base2;  	IMLTrain train;  	goto Label_0015;  	Label_0012:  	if (train != null) {  		return train;  	}  	Label_0015:  	if (enumerator.MoveNext ()) {  		goto Label_0033;  	}  	if (-1 != 0) {  		goto Label_0066;  	}  	Label_0024:  	if (-1 != 0) {  		goto Label_0012;  	}  	return train;  	Label_0033:  	base2 = enumerator.Current;  	if (!(base2 is IEncogPluginService1)) {  		goto Label_0015;  	}  	train = ((IEncogPluginService1)base2).CreateTraining (method' training' type' args);  	if (8 != 0) {  		goto Label_0024;  	}  }  
Magic Number,Encog.ML.Factory,MLTrainFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLTrainFactory.cs,Create,The following statement contains a magic number: if (8 != 0) {  	goto Label_0024;  }  
Magic Number,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,The following statement contains a magic number: using (IEnumerator<EncogPluginBase> enumerator = EncogFramework.Instance.Plugins.GetEnumerator ()) {  	EncogPluginBase base2;  	IActivationFunction function;  	IActivationFunction function2;  	goto Label_0017;  	Label_0014:  	if (function != null) {  		goto Label_0023;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_003A;  	}  	goto Label_0071;  	Label_0023:  	function2 = function;  	if (0x7fffffff == 0) {  		goto Label_0017;  	}  	return function2;  	Label_0030:  	if (base2 is IEncogPluginService1) {  		goto Label_004F;  	}  	goto Label_005E;  	Label_003A:  	base2 = enumerator.Current;  	if (3 == 0) {  		goto Label_0014;  	}  	if (3 != 0) {  		goto Label_0030;  	}  	Label_004F:  	function = ((IEncogPluginService1)base2).CreateActivationFunction (fn);  	goto Label_0014;  	Label_005E:  	if (2 != 0) {  		goto Label_0017;  	}  }  
Magic Number,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,The following statement contains a magic number: using (IEnumerator<EncogPluginBase> enumerator = EncogFramework.Instance.Plugins.GetEnumerator ()) {  	EncogPluginBase base2;  	IActivationFunction function;  	IActivationFunction function2;  	goto Label_0017;  	Label_0014:  	if (function != null) {  		goto Label_0023;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_003A;  	}  	goto Label_0071;  	Label_0023:  	function2 = function;  	if (0x7fffffff == 0) {  		goto Label_0017;  	}  	return function2;  	Label_0030:  	if (base2 is IEncogPluginService1) {  		goto Label_004F;  	}  	goto Label_005E;  	Label_003A:  	base2 = enumerator.Current;  	if (3 == 0) {  		goto Label_0014;  	}  	if (3 != 0) {  		goto Label_0030;  	}  	Label_004F:  	function = ((IEncogPluginService1)base2).CreateActivationFunction (fn);  	goto Label_0014;  	Label_005E:  	if (2 != 0) {  		goto Label_0017;  	}  }  
Magic Number,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,The following statement contains a magic number: using (IEnumerator<EncogPluginBase> enumerator = EncogFramework.Instance.Plugins.GetEnumerator ()) {  	EncogPluginBase base2;  	IActivationFunction function;  	IActivationFunction function2;  	goto Label_0017;  	Label_0014:  	if (function != null) {  		goto Label_0023;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_003A;  	}  	goto Label_0071;  	Label_0023:  	function2 = function;  	if (0x7fffffff == 0) {  		goto Label_0017;  	}  	return function2;  	Label_0030:  	if (base2 is IEncogPluginService1) {  		goto Label_004F;  	}  	goto Label_005E;  	Label_003A:  	base2 = enumerator.Current;  	if (3 == 0) {  		goto Label_0014;  	}  	if (3 != 0) {  		goto Label_0030;  	}  	Label_004F:  	function = ((IEncogPluginService1)base2).CreateActivationFunction (fn);  	goto Label_0014;  	Label_005E:  	if (2 != 0) {  		goto Label_0017;  	}  }  
Magic Number,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,The following statement contains a magic number: if (3 == 0) {  	goto Label_0014;  }  
Magic Number,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,The following statement contains a magic number: if (3 != 0) {  	goto Label_0030;  }  
Magic Number,Encog.ML.Factory,MLActivationFactory,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\MLActivationFactory.cs,Create,The following statement contains a magic number: if (2 != 0) {  	goto Label_0017;  }  
Magic Number,Encog.Util.File,FileUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\File\FileUtil.cs,CopyResource,The following statement contains a magic number: try {  	Stream stream = ResourceLoader.CreateStream (resource);  	targetFile.Delete ();  	if (3 != 0) {  		Stream os = targetFile.OpenWrite ();  		Copy (stream' os);  		stream.Close ();  		os.Close ();  	}  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.File,FileUtil,C:\repos\neismit_emds\Nsim4\Encog\Util\File\FileUtil.cs,CopyResource,The following statement contains a magic number: if (3 != 0) {  	Stream os = targetFile.OpenWrite ();  	Copy (stream' os);  	stream.Close ();  	os.Close ();  }  
Magic Number,Encog.Util.File,ResourceLoader,C:\repos\neismit_emds\Nsim4\Encog\Util\File\ResourceLoader.cs,CreateStream,The following statement contains a magic number: if (8 == 0) {  	goto Label_0039;  }  
Magic Number,Encog.Util.File,ResourceLoader,C:\repos\neismit_emds\Nsim4\Encog\Util\File\ResourceLoader.cs,LoadString,The following statement contains a magic number: if ((str = reader.ReadLine ()) != null) {  	builder.Append (str);  	if (3 != 0) {  		builder.Append ("\r\n");  		goto Label_0014;  	}  }  else {  	reader.Close ();  	stream.Close ();  	if (8 == 0) {  		goto Label_0014;  	}  }  
Magic Number,Encog.Util.File,ResourceLoader,C:\repos\neismit_emds\Nsim4\Encog\Util\File\ResourceLoader.cs,LoadString,The following statement contains a magic number: if ((str = reader.ReadLine ()) != null) {  	builder.Append (str);  	if (3 != 0) {  		builder.Append ("\r\n");  		goto Label_0014;  	}  }  else {  	reader.Close ();  	stream.Close ();  	if (8 == 0) {  		goto Label_0014;  	}  }  
Magic Number,Encog.Util.File,ResourceLoader,C:\repos\neismit_emds\Nsim4\Encog\Util\File\ResourceLoader.cs,LoadString,The following statement contains a magic number: if (3 != 0) {  	builder.Append ("\r\n");  	goto Label_0014;  }  
Magic Number,Encog.Util.File,ResourceLoader,C:\repos\neismit_emds\Nsim4\Encog\Util\File\ResourceLoader.cs,LoadString,The following statement contains a magic number: if (8 == 0) {  	goto Label_0014;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,Extract,The following statement contains a magic number: if ((((uint)index) | 8) != 0) {  	num = index;  	num2 = -1;  	goto Label_006B;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,ExtractFromIndex,The following statement contains a magic number: while (num3 != -1) {  	if ((((((uint)num3) | 1) != 0) && ((((uint)num2) | 2) != 0)) || ((((uint)occurence) - ((uint)index)) <= uint.MaxValue)) {  		return str.Substring (num2 + str3.Length' num3 - (num2 + token1.Length));  	}  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,ExtractFromIndex,The following statement contains a magic number: if ((((((uint)num3) | 1) != 0) && ((((uint)num2) | 2) != 0)) || ((((uint)occurence) - ((uint)index)) <= uint.MaxValue)) {  	return str.Substring (num2 + str3.Length' num3 - (num2 + token1.Length));  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,LoadPage,The following statement contains a magic number: try {  	byte[] buffer;  	int num;  	WebRequest request;  	HttpWebResponse response;  	Stream stream;  	string str;  	StringBuilder builder = new StringBuilder ();  	goto Label_00C6;  	Label_000B:  	if (((uint)num) < 0) {  		goto Label_0052;  	}  	Label_001D:  	if (num > 0) {  		goto Label_006F;  	}  	goto Label_002A;  	Label_0023:  	if (2 == 0) {  		goto Label_001D;  	}  	Label_002A:  	if (num > 0) {  		goto Label_005B;  	}  	str2 = builder.ToString ();  	if ((((uint)num) & 0) == 0) {  		return str2;  	}  	goto Label_00C6;  	Label_0052:  	stream = response.GetResponseStream ();  	Label_005B:  	num = stream.Read (buffer' 0' buffer.Length);  	if (3 != 0) {  		goto Label_001D;  	}  	Label_006F:  	str = Encoding.UTF8.GetString (buffer' 0' num);  	builder.Append (str);  	goto Label_0023;  	Label_0089:  	response = (HttpWebResponse)request.GetResponse ();  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_0052;  	}  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_000B;  	}  	Label_00C6:  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0023;  	}  	buffer = new byte[BufferSize];  	request = WebRequest.Create (url);  	goto Label_0089;  }  catch (IOException exception) {  	throw new BotError (exception);  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,LoadPage,The following statement contains a magic number: try {  	byte[] buffer;  	int num;  	WebRequest request;  	HttpWebResponse response;  	Stream stream;  	string str;  	StringBuilder builder = new StringBuilder ();  	goto Label_00C6;  	Label_000B:  	if (((uint)num) < 0) {  		goto Label_0052;  	}  	Label_001D:  	if (num > 0) {  		goto Label_006F;  	}  	goto Label_002A;  	Label_0023:  	if (2 == 0) {  		goto Label_001D;  	}  	Label_002A:  	if (num > 0) {  		goto Label_005B;  	}  	str2 = builder.ToString ();  	if ((((uint)num) & 0) == 0) {  		return str2;  	}  	goto Label_00C6;  	Label_0052:  	stream = response.GetResponseStream ();  	Label_005B:  	num = stream.Read (buffer' 0' buffer.Length);  	if (3 != 0) {  		goto Label_001D;  	}  	Label_006F:  	str = Encoding.UTF8.GetString (buffer' 0' num);  	builder.Append (str);  	goto Label_0023;  	Label_0089:  	response = (HttpWebResponse)request.GetResponse ();  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_0052;  	}  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_000B;  	}  	Label_00C6:  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0023;  	}  	buffer = new byte[BufferSize];  	request = WebRequest.Create (url);  	goto Label_0089;  }  catch (IOException exception) {  	throw new BotError (exception);  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,LoadPage,The following statement contains a magic number: if (2 == 0) {  	goto Label_001D;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,LoadPage,The following statement contains a magic number: if (3 != 0) {  	goto Label_001D;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: do {  	request.Method = "POST";  	builder = new StringBuilder ();  }  while (-2 == 0);  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: using (IEnumerator<string> enumerator = param.Keys.GetEnumerator ()) {  	string str;  	string str2;  	goto Label_00A4;  	Label_0081:  	builder.Append ('=');  	builder.Append (FormUtility.Encode (str2));  	Label_0097:  	if (4 == 0) {  		goto Label_0081;  	}  	if (0 == 0) {  		goto Label_00A4;  	}  	Label_00A1:  	if (str2 != null) {  		goto Label_00C2;  	}  	Label_00A4:  	if (enumerator.MoveNext ()) {  		goto Label_00E5;  	}  	if (0 == 0) {  		goto Label_0108;  	}  	if (4 != 0) {  		goto Label_00E5;  	}  	Label_00B7:  	str2 = param [str];  	if (0 == 0) {  		goto Label_00A1;  	}  	Label_00C2:  	if (builder.Length != 0) {  		if (3 == 0) {  			goto Label_0097;  		}  		builder.Append ('&');  	}  	builder.Append (str);  	if (0 == 0) {  		goto Label_0081;  	}  	Label_00E5:  	str = enumerator.Current;  	goto Label_00B7;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: using (IEnumerator<string> enumerator = param.Keys.GetEnumerator ()) {  	string str;  	string str2;  	goto Label_00A4;  	Label_0081:  	builder.Append ('=');  	builder.Append (FormUtility.Encode (str2));  	Label_0097:  	if (4 == 0) {  		goto Label_0081;  	}  	if (0 == 0) {  		goto Label_00A4;  	}  	Label_00A1:  	if (str2 != null) {  		goto Label_00C2;  	}  	Label_00A4:  	if (enumerator.MoveNext ()) {  		goto Label_00E5;  	}  	if (0 == 0) {  		goto Label_0108;  	}  	if (4 != 0) {  		goto Label_00E5;  	}  	Label_00B7:  	str2 = param [str];  	if (0 == 0) {  		goto Label_00A1;  	}  	Label_00C2:  	if (builder.Length != 0) {  		if (3 == 0) {  			goto Label_0097;  		}  		builder.Append ('&');  	}  	builder.Append (str);  	if (0 == 0) {  		goto Label_0081;  	}  	Label_00E5:  	str = enumerator.Current;  	goto Label_00B7;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: using (IEnumerator<string> enumerator = param.Keys.GetEnumerator ()) {  	string str;  	string str2;  	goto Label_00A4;  	Label_0081:  	builder.Append ('=');  	builder.Append (FormUtility.Encode (str2));  	Label_0097:  	if (4 == 0) {  		goto Label_0081;  	}  	if (0 == 0) {  		goto Label_00A4;  	}  	Label_00A1:  	if (str2 != null) {  		goto Label_00C2;  	}  	Label_00A4:  	if (enumerator.MoveNext ()) {  		goto Label_00E5;  	}  	if (0 == 0) {  		goto Label_0108;  	}  	if (4 != 0) {  		goto Label_00E5;  	}  	Label_00B7:  	str2 = param [str];  	if (0 == 0) {  		goto Label_00A1;  	}  	Label_00C2:  	if (builder.Length != 0) {  		if (3 == 0) {  			goto Label_0097;  		}  		builder.Append ('&');  	}  	builder.Append (str);  	if (0 == 0) {  		goto Label_0081;  	}  	Label_00E5:  	str = enumerator.Current;  	goto Label_00B7;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: if (4 == 0) {  	goto Label_0081;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: if (4 != 0) {  	goto Label_00E5;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: if (builder.Length != 0) {  	if (3 == 0) {  		goto Label_0097;  	}  	builder.Append ('&');  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: if (3 == 0) {  	goto Label_0097;  }  
Magic Number,Encog.Bot,BotUtil,C:\repos\neismit_emds\Nsim4\Encog\Bot\BotUtil.cs,POSTPage,The following statement contains a magic number: if (3 != 0) {  	request.Method = "POST";  	requestStream = request.GetRequestStream ();  	FileUtil.CopyStream (stream' requestStream);  }  
Magic Number,Encog.Util.HTTP,URLUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\URLUtility.cs,ConstructURL,The following statement contains a magic number: if (15 != 0) {  	goto Label_01BC;  }  
Magic Number,Encog.Util.HTTP,URLUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\URLUtility.cs,ConstructURL,The following statement contains a magic number: if ((port == 0x1bb) && (8 != 0)) {  	goto Label_01B5;  }  
Magic Number,Encog.Util.HTTP,URLUtility,C:\repos\neismit_emds\Nsim4\Encog\Util\HTTP\URLUtility.cs,ConstructURL,The following statement contains a magic number: if ((port == 80) && (string.Compare (scheme' "http") != 0)) {  	builder.Append (':');  	builder.Append ("80");  	if (-1 != 0) {  		goto Label_004B;  	}  	goto Label_00A6;  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (section.SectionName.Equals ("HOPFIELD")) {  		if (0 != 0) {  			goto Label_0031;  		}  		if (3 != 0) {  			if (0xff == 0) {  				goto Label_0022;  			}  			if (section.SubSectionName.Equals ("PARAMS")) {  				IDictionary<string' string> source = section.ParseParams ();  				if (0 == 0) {  					EngineArray.PutAll<string' string> (source' network.Properties);  				}  			}  		}  	}  	goto Label_000D;  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("HOPFIELD")) {  	if (0 != 0) {  		goto Label_0031;  	}  	if (3 != 0) {  		if (0xff == 0) {  			goto Label_0022;  		}  		if (section.SubSectionName.Equals ("PARAMS")) {  			IDictionary<string' string> source = section.ParseParams ();  			if (0 == 0) {  				EngineArray.PutAll<string' string> (source' network.Properties);  			}  		}  	}  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Read,The following statement contains a magic number: if (3 != 0) {  	if (0xff == 0) {  		goto Label_0022;  	}  	if (section.SubSectionName.Equals ("PARAMS")) {  		IDictionary<string' string> source = section.ParseParams ();  		if (0 == 0) {  			EngineArray.PutAll<string' string> (source' network.Properties);  		}  	}  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Read,The following statement contains a magic number: if (3 != 0) {  	goto Label_000D;  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Save,The following statement contains a magic number: if (4 != 0) {  	return;  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Save,The following statement contains a magic number: if (4 != 0) {  	goto Label_00A2;  }  
Magic Number,Encog.Neural.Thermal,PersistHopfield,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistHopfield.cs,Save,The following statement contains a magic number: if (2 == 0) {  	goto Label_004C;  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: if (pattern.Count != base.NeuronCount) {  	objArray = new object[4];  	if (0 == 0) {  		objArray [0] = "Network with ";  		do {  			if (0 != 0) {  				return;  			}  		}  		while (0 != 0);  		objArray [1] = base.NeuronCount;  		objArray [2] = " neurons' cannot learn a pattern of size ";  		objArray [3] = pattern.Count;  	}  }  else {  	Matrix b = Matrix.CreateRowMatrix (pattern.Data);  	Matrix a = MatrixMath.Multiply (MatrixMath.Transpose (b)' b);  	Matrix matrix4 = MatrixMath.Identity (a.Rows);  	Matrix delta = MatrixMath.Subtract (a' matrix4);  	this.ConvertHopfieldMatrix (delta);  	if (0 == 0) {  		return;  	}  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: if (pattern.Count != base.NeuronCount) {  	objArray = new object[4];  	if (0 == 0) {  		objArray [0] = "Network with ";  		do {  			if (0 != 0) {  				return;  			}  		}  		while (0 != 0);  		objArray [1] = base.NeuronCount;  		objArray [2] = " neurons' cannot learn a pattern of size ";  		objArray [3] = pattern.Count;  	}  }  else {  	Matrix b = Matrix.CreateRowMatrix (pattern.Data);  	Matrix a = MatrixMath.Multiply (MatrixMath.Transpose (b)' b);  	Matrix matrix4 = MatrixMath.Identity (a.Rows);  	Matrix delta = MatrixMath.Subtract (a' matrix4);  	this.ConvertHopfieldMatrix (delta);  	if (0 == 0) {  		return;  	}  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: if (pattern.Count != base.NeuronCount) {  	objArray = new object[4];  	if (0 == 0) {  		objArray [0] = "Network with ";  		do {  			if (0 != 0) {  				return;  			}  		}  		while (0 != 0);  		objArray [1] = base.NeuronCount;  		objArray [2] = " neurons' cannot learn a pattern of size ";  		objArray [3] = pattern.Count;  	}  }  else {  	Matrix b = Matrix.CreateRowMatrix (pattern.Data);  	Matrix a = MatrixMath.Multiply (MatrixMath.Transpose (b)' b);  	Matrix matrix4 = MatrixMath.Identity (a.Rows);  	Matrix delta = MatrixMath.Subtract (a' matrix4);  	this.ConvertHopfieldMatrix (delta);  	if (0 == 0) {  		return;  	}  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: if (0 == 0) {  	objArray [0] = "Network with ";  	do {  		if (0 != 0) {  			return;  		}  	}  	while (0 != 0);  	objArray [1] = base.NeuronCount;  	objArray [2] = " neurons' cannot learn a pattern of size ";  	objArray [3] = pattern.Count;  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: if (0 == 0) {  	objArray [0] = "Network with ";  	do {  		if (0 != 0) {  			return;  		}  	}  	while (0 != 0);  	objArray [1] = base.NeuronCount;  	objArray [2] = " neurons' cannot learn a pattern of size ";  	objArray [3] = pattern.Count;  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: objArray [2] = " neurons' cannot learn a pattern of size ";  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,AddPattern,The following statement contains a magic number: objArray [3] = pattern.Count;  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,Compute,The following statement contains a magic number: if (0 == 0) {  	if (((uint)num) <= uint.MaxValue) {  		if (3 == 0) {  			return data;  		}  		goto Label_0053;  	}  }  else {  	goto Label_0053;  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,Compute,The following statement contains a magic number: if (((uint)num) <= uint.MaxValue) {  	if (3 == 0) {  		return data;  	}  	goto Label_0053;  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,Compute,The following statement contains a magic number: if (3 == 0) {  	return data;  }  
Magic Number,Encog.Neural.Thermal,HopfieldNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\HopfieldNetwork.cs,RunUntilStable,The following statement contains a magic number: if ((-2 != 0) || (((uint)max) < 0)) {  	goto Label_0024;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: if (index >= this._weights.Length) {  	do {  		objArray = new object[4];  	}  	while ((((uint)v) & 0) != 0);  	objArray [0] = "Out of range: fromNeuron:";  	objArray [1] = fromNeuron;  	if ((((uint)v) & 0) == 0) {  		objArray [2] = "' toNeuron: ";  		objArray [3] = toNeuron;  		if ((((uint)v) + ((uint)v)) > uint.MaxValue) {  			goto Label_000D;  		}  	}  }  else {  	this._weights [index] += v;  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: if (index >= this._weights.Length) {  	do {  		objArray = new object[4];  	}  	while ((((uint)v) & 0) != 0);  	objArray [0] = "Out of range: fromNeuron:";  	objArray [1] = fromNeuron;  	if ((((uint)v) & 0) == 0) {  		objArray [2] = "' toNeuron: ";  		objArray [3] = toNeuron;  		if ((((uint)v) + ((uint)v)) > uint.MaxValue) {  			goto Label_000D;  		}  	}  }  else {  	this._weights [index] += v;  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: if (index >= this._weights.Length) {  	do {  		objArray = new object[4];  	}  	while ((((uint)v) & 0) != 0);  	objArray [0] = "Out of range: fromNeuron:";  	objArray [1] = fromNeuron;  	if ((((uint)v) & 0) == 0) {  		objArray [2] = "' toNeuron: ";  		objArray [3] = toNeuron;  		if ((((uint)v) + ((uint)v)) > uint.MaxValue) {  			goto Label_000D;  		}  	}  }  else {  	this._weights [index] += v;  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: do {  	objArray = new object[4];  }  while ((((uint)v) & 0) != 0);  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: if ((((uint)v) & 0) == 0) {  	objArray [2] = "' toNeuron: ";  	objArray [3] = toNeuron;  	if ((((uint)v) + ((uint)v)) > uint.MaxValue) {  		goto Label_000D;  	}  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: if ((((uint)v) & 0) == 0) {  	objArray [2] = "' toNeuron: ";  	objArray [3] = toNeuron;  	if ((((uint)v) + ((uint)v)) > uint.MaxValue) {  		goto Label_000D;  	}  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: objArray [2] = "' toNeuron: ";  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,AddWeight,The following statement contains a magic number: objArray [3] = toNeuron;  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,CalculateEnergy,The following statement contains a magic number: while (true) {  	if (fromNeuron < neuronCount) {  		num4 = 0;  	}  	else {  		return ((-1.0 * num) / 2.0);  	}  	if (0x7fffffff != 0) {  	}  	while (num4 < neuronCount) {  		if (fromNeuron == num4) {  			goto Label_004E;  		}  		Label_0029:  		num += (this.GetWeight (fromNeuron' num4) * this._currentState [fromNeuron]) * this._currentState [num4];  		Label_004E:  		num4++;  	}  	if ((((uint)num) | 15) != 0) {  		fromNeuron++;  	}  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,CalculateEnergy,The following statement contains a magic number: while (true) {  	if (fromNeuron < neuronCount) {  		num4 = 0;  	}  	else {  		return ((-1.0 * num) / 2.0);  	}  	if (0x7fffffff != 0) {  	}  	while (num4 < neuronCount) {  		if (fromNeuron == num4) {  			goto Label_004E;  		}  		Label_0029:  		num += (this.GetWeight (fromNeuron' num4) * this._currentState [fromNeuron]) * this._currentState [num4];  		Label_004E:  		num4++;  	}  	if ((((uint)num) | 15) != 0) {  		fromNeuron++;  	}  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,CalculateEnergy,The following statement contains a magic number: if (fromNeuron < neuronCount) {  	num4 = 0;  }  else {  	return ((-1.0 * num) / 2.0);  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,CalculateEnergy,The following statement contains a magic number: return ((-1.0 * num) / 2.0);  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,CalculateEnergy,The following statement contains a magic number: if ((((uint)num) | 15) != 0) {  	fromNeuron++;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if (neuronCount != output.Length) {  	if (((uint)neuronCount) <= uint.MaxValue) {  		objArray = new object[5];  		objArray [0] = "Neuron count(";  	}  	objArray [1] = neuronCount;  	goto Label_00FE;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if (((uint)neuronCount) <= uint.MaxValue) {  	objArray = new object[5];  	objArray [0] = "Neuron count(";  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray = new object[5];  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if ((neuronCount * neuronCount) != weights.Length) {  	objArray2 = new object[5];  }  else {  	this._neuronCount = neuronCount;  	this._weights = weights;  	BiPolarMLData data = new BiPolarMLData (neuronCount) {  		Data = output  	};  	this._currentState = data;  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray2 = new object[5];  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if (4 != 0) {  	objArray2 [0] = "Weight count(";  	objArray2 [1] = weights.Length;  	objArray2 [2] = ") must be the square of the neuron count(";  	if ((((uint)neuronCount) - ((uint)neuronCount)) <= uint.MaxValue) {  		objArray2 [3] = neuronCount;  		objArray2 [4] = ").";  		throw new NeuralNetworkError (string.Concat (objArray2));  	}  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if (4 != 0) {  	objArray2 [0] = "Weight count(";  	objArray2 [1] = weights.Length;  	objArray2 [2] = ") must be the square of the neuron count(";  	if ((((uint)neuronCount) - ((uint)neuronCount)) <= uint.MaxValue) {  		objArray2 [3] = neuronCount;  		objArray2 [4] = ").";  		throw new NeuralNetworkError (string.Concat (objArray2));  	}  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if (4 != 0) {  	objArray2 [0] = "Weight count(";  	objArray2 [1] = weights.Length;  	objArray2 [2] = ") must be the square of the neuron count(";  	if ((((uint)neuronCount) - ((uint)neuronCount)) <= uint.MaxValue) {  		objArray2 [3] = neuronCount;  		objArray2 [4] = ").";  		throw new NeuralNetworkError (string.Concat (objArray2));  	}  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if (4 != 0) {  	objArray2 [0] = "Weight count(";  	objArray2 [1] = weights.Length;  	objArray2 [2] = ") must be the square of the neuron count(";  	if ((((uint)neuronCount) - ((uint)neuronCount)) <= uint.MaxValue) {  		objArray2 [3] = neuronCount;  		objArray2 [4] = ").";  		throw new NeuralNetworkError (string.Concat (objArray2));  	}  	return;  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray2 [2] = ") must be the square of the neuron count(";  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if ((((uint)neuronCount) - ((uint)neuronCount)) <= uint.MaxValue) {  	objArray2 [3] = neuronCount;  	objArray2 [4] = ").";  	throw new NeuralNetworkError (string.Concat (objArray2));  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: if ((((uint)neuronCount) - ((uint)neuronCount)) <= uint.MaxValue) {  	objArray2 [3] = neuronCount;  	objArray2 [4] = ").";  	throw new NeuralNetworkError (string.Concat (objArray2));  }  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray2 [3] = neuronCount;  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray2 [4] = ").";  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray [2] = ") must match output count(";  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray [3] = output.Length;  
Magic Number,Encog.Neural.Thermal,ThermalNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\ThermalNetwork.cs,Init,The following statement contains a magic number: objArray [4] = ").";  
Magic Number,Encog.Neural.Thermal,PersistBoltzmann,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistBoltzmann.cs,Read,The following statement contains a magic number: if (2 == 0) {  	if (-1 == 0) {  		goto Label_00A3;  	}  	if (8 != 0) {  		goto Label_012B;  	}  	goto Label_0142;  }  
Magic Number,Encog.Neural.Thermal,PersistBoltzmann,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistBoltzmann.cs,Read,The following statement contains a magic number: if (2 == 0) {  	if (-1 == 0) {  		goto Label_00A3;  	}  	if (8 != 0) {  		goto Label_012B;  	}  	goto Label_0142;  }  
Magic Number,Encog.Neural.Thermal,PersistBoltzmann,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\PersistBoltzmann.cs,Read,The following statement contains a magic number: if (8 != 0) {  	goto Label_012B;  }  
Magic Number,Encog.Neural.Thermal,BoltzmannMachine,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\BoltzmannMachine.cs,BoltzmannMachine,The following statement contains a magic number: this._annealCycles = 100;  
Magic Number,Encog.Neural.Thermal,BoltzmannMachine,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\BoltzmannMachine.cs,BoltzmannMachine,The following statement contains a magic number: this._annealCycles = 100;  
Magic Number,Encog.Neural.Thermal,BoltzmannMachine,C:\repos\neismit_emds\Nsim4\Encog\Neural\Thermal\BoltzmannMachine.cs,EstablishEquilibrium,The following statement contains a magic number: if ((((uint)neuronCount) | 2) != 0) {  	num2++;  	goto Label_012B;  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,CreateColumnMatrix,The following statement contains a magic number: if (num < sourceMatrix.Length) {  	do {  		sourceMatrix [num] = new double[1];  	}  	while ((((uint)num) - ((uint)num)) < 0);  	sourceMatrix [num] [0] = input [num];  	if (4 != 0) {  		num++;  		goto Label_000F;  	}  }  else if (0 != 0) {  	goto Label_0018;  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,CreateColumnMatrix,The following statement contains a magic number: if (4 != 0) {  	num++;  	goto Label_000F;  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,equals,The following statement contains a magic number: if (precision >= 0) {  	num = Math.Pow (10.0' (double)precision);  	if (((uint)num2) >= 0) {  		if (double.IsInfinity (num)) {  			goto Label_0125;  		}  		if ((((uint)num3) + ((uint)num3)) < 0) {  			goto Label_002A;  		}  	}  	goto Label_0082;  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,equals,The following statement contains a magic number: num = Math.Pow (10.0' (double)precision);  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,equals,The following statement contains a magic number: if (num > 9.2233720368547758E+18) {  	goto Label_0125;  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,equals,The following statement contains a magic number: precision = (int)Math.Pow (10.0' (double)precision);  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Equals,The following statement contains a magic number: return ((other is Matrix) && this.equals ((Matrix)other' 10));  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,GetCol,The following statement contains a magic number: do {  	numArray = new double[this.Rows][];  }  while ((((uint)num) | 15) == 0);  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: if ((((uint)col) + ((uint)row)) >= 0) {  	objArray [0] = "The row:";  	objArray [1] = row;  	if ((((uint)col) & 0) == 0) {  		objArray [2] = " is out of range:";  		objArray [3] = this.Rows;  		if (0x7fffffff == 0) {  			goto Label_00A7;  		}  	}  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: if ((((uint)col) + ((uint)row)) >= 0) {  	objArray [0] = "The row:";  	objArray [1] = row;  	if ((((uint)col) & 0) == 0) {  		objArray [2] = " is out of range:";  		objArray [3] = this.Rows;  		if (0x7fffffff == 0) {  			goto Label_00A7;  		}  	}  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: if ((((uint)col) & 0) == 0) {  	objArray [2] = " is out of range:";  	objArray [3] = this.Rows;  	if (0x7fffffff == 0) {  		goto Label_00A7;  	}  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: if ((((uint)col) & 0) == 0) {  	objArray [2] = " is out of range:";  	objArray [3] = this.Rows;  	if (0x7fffffff == 0) {  		goto Label_00A7;  	}  }  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: objArray [2] = " is out of range:";  
Magic Number,Encog.MathUtil.Matrices,Matrix,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Matrix.cs,Validate,The following statement contains a magic number: objArray [3] = this.Rows;  
Magic Number,Encog.MathUtil.Matrices,BiPolarUtil,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\BiPolarUtil.cs,Bipolar2double,The following statement contains a magic number: if (-2147483648 != 0) {  	return numArray;  }  
Magic Number,Encog.MathUtil.Matrices,BiPolarUtil,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\BiPolarUtil.cs,ToBinary,The following statement contains a magic number: return ((d + 1.0) / 2.0);  
Magic Number,Encog.MathUtil.Matrices,BiPolarUtil,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\BiPolarUtil.cs,ToBiPolar,The following statement contains a magic number: return ((2.0 * NormalizeBinary (d)) - 1.0);  
Magic Number,Encog.ML.Data.Specific,BiPolarMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\BiPolarMLData.cs,BiPolarMLData,The following statement contains a magic number: if (15 != 0) {  	this._data = new bool[d.Length];  	num = 0;  }  
Magic Number,Encog.ML.Data.Specific,BiPolarMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\BiPolarMLData.cs,ToString,The following statement contains a magic number: if (8 != 0) {  	goto Label_00C5;  }  
Magic Number,Encog.ML.Data.Specific,BiPolarMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\BiPolarMLData.cs,ToString,The following statement contains a magic number: if (num < this.Count) {  	Label_003C:  	builder.Append ((this [num] > 0.0) ? "T" : "F");  	if (((uint)num) < 0) {  		if (-1 == 0) {  			goto Label_002A;  		}  		goto Label_003C;  	}  	if (((((uint)num) | 8) != 0) && (num == (this.Count - 1))) {  		goto Label_0026;  	}  }  else {  	goto Label_000B;  }  
Magic Number,Encog.ML.Data.Specific,BiPolarMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\BiPolarMLData.cs,ToString,The following statement contains a magic number: if (((((uint)num) | 8) != 0) && (num == (this.Count - 1))) {  	goto Label_0026;  }  
Magic Number,Encog.ML.Data.Specific,BiPolarMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\BiPolarMLData.cs,ToString,The following statement contains a magic number: if (4 != 0) {  	num = 0;  	goto Label_002A;  }  
Magic Number,Encog.ML.Data.Specific,CSVMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Specific\CSVMLDataSet.cs,CSVMLDataSet,The following statement contains a magic number: if (-2 != 0) {  	this._x08b9e0820ab2b457 = idealSize;  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,The following statement contains a magic number: if ((-2 != 0) && (15 != 0)) {  	if (0xff == 0) {  		goto Label_0014;  	}  	goto Label_0020;  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,The following statement contains a magic number: if ((-2 != 0) && (15 != 0)) {  	if (0xff == 0) {  		goto Label_0014;  	}  	goto Label_0020;  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("NETWORK")) {  	IDictionary<string' string> dictionary2;  	Label_0166:  	dictionary2 = section.ParseParams ();  	if (0 == 0) {  		art.A1 = EncogFileSection.ParseDouble (dictionary2' "A1");  		art.B1 = EncogFileSection.ParseDouble (dictionary2' "B1");  		art.C1 = EncogFileSection.ParseDouble (dictionary2' "C1");  		if (0 == 0) {  			art.D1 = EncogFileSection.ParseDouble (dictionary2' "D1");  			art.F1Count = EncogFileSection.ParseInt (dictionary2' "f1Count");  			if (4 != 0) {  				if (0 != 0) {  					goto Label_0041;  				}  				if (0 != 0) {  					goto Label_0166;  				}  				art.F2Count = EncogFileSection.ParseInt (dictionary2' "f2Count");  				art.NoWinner = EncogFileSection.ParseInt (dictionary2' "noWinner");  			}  			art.L = EncogFileSection.ParseDouble (dictionary2' "L");  			art.Vigilance = EncogFileSection.ParseDouble (dictionary2' "VIGILANCE");  		}  		art.WeightsF1ToF2 = EncogFileSection.ParseMatrix (dictionary2' "weightsF1F2");  		art.WeightsF2ToF1 = EncogFileSection.ParseMatrix (dictionary2' "weightsF2F1");  		goto Label_0041;  	}  }  else {  	goto Label_0020;  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,The following statement contains a magic number: if (0 == 0) {  	art.A1 = EncogFileSection.ParseDouble (dictionary2' "A1");  	art.B1 = EncogFileSection.ParseDouble (dictionary2' "B1");  	art.C1 = EncogFileSection.ParseDouble (dictionary2' "C1");  	if (0 == 0) {  		art.D1 = EncogFileSection.ParseDouble (dictionary2' "D1");  		art.F1Count = EncogFileSection.ParseInt (dictionary2' "f1Count");  		if (4 != 0) {  			if (0 != 0) {  				goto Label_0041;  			}  			if (0 != 0) {  				goto Label_0166;  			}  			art.F2Count = EncogFileSection.ParseInt (dictionary2' "f2Count");  			art.NoWinner = EncogFileSection.ParseInt (dictionary2' "noWinner");  		}  		art.L = EncogFileSection.ParseDouble (dictionary2' "L");  		art.Vigilance = EncogFileSection.ParseDouble (dictionary2' "VIGILANCE");  	}  	art.WeightsF1ToF2 = EncogFileSection.ParseMatrix (dictionary2' "weightsF1F2");  	art.WeightsF2ToF1 = EncogFileSection.ParseMatrix (dictionary2' "weightsF2F1");  	goto Label_0041;  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,The following statement contains a magic number: if (0 == 0) {  	art.D1 = EncogFileSection.ParseDouble (dictionary2' "D1");  	art.F1Count = EncogFileSection.ParseInt (dictionary2' "f1Count");  	if (4 != 0) {  		if (0 != 0) {  			goto Label_0041;  		}  		if (0 != 0) {  			goto Label_0166;  		}  		art.F2Count = EncogFileSection.ParseInt (dictionary2' "f2Count");  		art.NoWinner = EncogFileSection.ParseInt (dictionary2' "noWinner");  	}  	art.L = EncogFileSection.ParseDouble (dictionary2' "L");  	art.Vigilance = EncogFileSection.ParseDouble (dictionary2' "VIGILANCE");  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Read,The following statement contains a magic number: if (4 != 0) {  	if (0 != 0) {  		goto Label_0041;  	}  	if (0 != 0) {  		goto Label_0166;  	}  	art.F2Count = EncogFileSection.ParseInt (dictionary2' "f2Count");  	art.NoWinner = EncogFileSection.ParseInt (dictionary2' "noWinner");  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Save,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.Neural.ART,PersistART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\PersistART1.cs,Save,The following statement contains a magic number: if (3 != 0) {  	if (0 != 0) {  		return;  	}  	goto Label_0019;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (-2147483648 != 0) {  	this._a1 = 1.0;  	this._b1 = 1.5;  	this._c1 = 5.0;  	if (2 == 0) {  		goto Label_001C;  	}  	this._d1 = 0.9;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (-2147483648 != 0) {  	this._a1 = 1.0;  	this._b1 = 1.5;  	this._c1 = 5.0;  	if (2 == 0) {  		goto Label_001C;  	}  	this._d1 = 0.9;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (-2147483648 != 0) {  	this._a1 = 1.0;  	this._b1 = 1.5;  	this._c1 = 5.0;  	if (2 == 0) {  		goto Label_001C;  	}  	this._d1 = 0.9;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (-2147483648 != 0) {  	this._a1 = 1.0;  	this._b1 = 1.5;  	this._c1 = 5.0;  	if (2 == 0) {  		goto Label_001C;  	}  	this._d1 = 0.9;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (-2147483648 != 0) {  	this._a1 = 1.0;  	this._b1 = 1.5;  	this._c1 = 5.0;  	if (2 == 0) {  		goto Label_001C;  	}  	this._d1 = 0.9;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._b1 = 1.5;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._c1 = 5.0;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (2 == 0) {  	goto Label_001C;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._d1 = 0.9;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._l = 3.0;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._vigilance = 0.9;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: if (-2 != 0) {  	if (0 == 0) {  		return;  	}  	goto Label_00FE;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._b1 = 1.5;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._c1 = 5.0;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._d1 = 0.9;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._l = 3.0;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,ART1,The following statement contains a magic number: this._vigilance = 0.9;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: while (num < this._f1Count) {  	do {  		for (int i = 0; i < this._f2Count; i++) {  			this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  			this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  		}  		num++;  	}  	while (-2147483648 == 0);  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: while (num < this._f1Count) {  	do {  		for (int i = 0; i < this._f2Count; i++) {  			this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  			this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  		}  		num++;  	}  	while (-2147483648 == 0);  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: while (num < this._f1Count) {  	do {  		for (int i = 0; i < this._f2Count; i++) {  			this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  			this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  		}  		num++;  	}  	while (-2147483648 == 0);  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: do {  	for (int i = 0; i < this._f2Count; i++) {  		this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  		this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  	}  	num++;  }  while (-2147483648 == 0);  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: do {  	for (int i = 0; i < this._f2Count; i++) {  		this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  		this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  	}  	num++;  }  while (-2147483648 == 0);  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: do {  	for (int i = 0; i < this._f2Count; i++) {  		this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  		this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  	}  	num++;  }  while (-2147483648 == 0);  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: for (int i = 0; i < this._f2Count; i++) {  	this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  	this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: for (int i = 0; i < this._f2Count; i++) {  	this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  	this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  }  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: this._weightsF1ToF2 [num' i] = ((this._b1 - 1.0) / this._d1) + 0.2;  
Magic Number,Encog.Neural.ART,ART1,C:\repos\neismit_emds\Nsim4\Encog\Neural\ART\ART1.cs,Reset,The following statement contains a magic number: this._weightsF2ToF1 [i' num] = (this._l / ((this._l - 1.0) + this._f1Count)) - 0.1;  
Magic Number,Encog.Neural.BAM,PersistBAM,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\PersistBAM.cs,Read,The following statement contains a magic number: if (15 != 0) {  	goto Label_000B;  }  
Magic Number,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,AddPattern,The following statement contains a magic number: for (int i = 0; i < this._f1Count; i++) {  	for (int j = 0; j < this._f2Count; j++) {  		int num3 = (int)(inputPattern [i] * outputPattern [j]);  		this._weightsF1ToF2.Add (i' j' (double)num3);  		if (0 == 0) {  			this._weightsF2ToF1.Add (j' i' (double)num3);  		}  		if (8 == 0) {  			return;  		}  	}  }  
Magic Number,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,AddPattern,The following statement contains a magic number: for (int j = 0; j < this._f2Count; j++) {  	int num3 = (int)(inputPattern [i] * outputPattern [j]);  	this._weightsF1ToF2.Add (i' j' (double)num3);  	if (0 == 0) {  		this._weightsF2ToF1.Add (j' i' (double)num3);  	}  	if (8 == 0) {  		return;  	}  }  
Magic Number,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,AddPattern,The following statement contains a magic number: if (8 == 0) {  	return;  }  
Magic Number,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,PropagateLayer,The following statement contains a magic number: if ((((uint)num4) | 15) != 0) {  	goto Label_0009;  }  
Magic Number,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,PropagateLayer,The following statement contains a magic number: if ((((uint)num4) | 15) != 0) {  	goto Label_0042;  }  
Magic Number,Encog.Neural.BAM,BAMNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\BAM\BAMNetwork.cs,PropagateLayer,The following statement contains a magic number: if (8 != 0) {  	goto Label_00DC;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("RBF")) {  	num3 = 0;  	num4 = flat.LayerCounts [1];  	do {  		if (0 != 0) {  			if ((((uint)num6) - ((uint)num2)) < 0) {  				goto Label_0473;  			}  			goto Label_0416;  		}  	}  	while ((((uint)num3) - ((uint)num3)) > uint.MaxValue);  	num5 = flat.LayerCounts [2];  	if ((((uint)num4) | 0xfffffffe) == 0) {  		goto Label_0473;  	}  	goto Label_0273;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: num5 = flat.LayerCounts [2];  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if (4 != 0) {  	goto Label_02F4;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if (((uint)num2) >= 0) {  	if ((((uint)num5) | 0xfffffffe) == 0) {  		return network;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str3;  		IRadialBasisFunction function2;  		IList<string> list2;  		goto Label_00EC;  		Label_00D6:  		if (num6 < num5) {  			goto Label_00FF;  		}  		Label_00DC:  		flat.RBF [num3++] = function2;  		Label_00EC:  		if (enumerator2.MoveNext ()) {  			goto Label_01F2;  		}  		goto Label_003B;  		Label_00FA:  		num6 = 0;  		goto Label_00D6;  		Label_00FF:  		function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  		Label_011E:  		num6++;  		if (0 == 0) {  			goto Label_00D6;  		}  		goto Label_003B;  		Label_012C:  		function2.Centers = new double[num5];  		goto Label_00FA;  		Label_013F:  		if (0 != 0) {  			goto Label_011E;  		}  		list2 = EncogFileSection.SplitColumns (str3);  		string name = "Encog.MathUtil.RBF." + list2 [0];  		try {  			function2 = (IRadialBasisFunction)ReflectionUtil.LoadObject (name);  		}  		catch (TypeLoadException exception2) {  			throw new PersistError (exception2);  		}  		catch (TargetException exception3) {  			throw new PersistError (exception3);  		}  		catch (MemberAccessException exception4) {  			throw new PersistError (exception4);  		}  		function2.Width = CSVFormat.EgFormat.Parse (list2 [1]);  		function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  		if ((((uint)num6) + ((uint)num)) >= 0) {  			goto Label_0200;  		}  		if ((((uint)num4) - ((uint)num3)) < 0) {  			goto Label_00DC;  		}  		Label_01F2:  		str3 = enumerator2.Current;  		goto Label_013F;  		Label_0200:  		if ((((uint)num4) | 3) != 0) {  			goto Label_012C;  		}  		goto Label_00FA;  	}  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if (((uint)num2) >= 0) {  	if ((((uint)num5) | 0xfffffffe) == 0) {  		return network;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str3;  		IRadialBasisFunction function2;  		IList<string> list2;  		goto Label_00EC;  		Label_00D6:  		if (num6 < num5) {  			goto Label_00FF;  		}  		Label_00DC:  		flat.RBF [num3++] = function2;  		Label_00EC:  		if (enumerator2.MoveNext ()) {  			goto Label_01F2;  		}  		goto Label_003B;  		Label_00FA:  		num6 = 0;  		goto Label_00D6;  		Label_00FF:  		function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  		Label_011E:  		num6++;  		if (0 == 0) {  			goto Label_00D6;  		}  		goto Label_003B;  		Label_012C:  		function2.Centers = new double[num5];  		goto Label_00FA;  		Label_013F:  		if (0 != 0) {  			goto Label_011E;  		}  		list2 = EncogFileSection.SplitColumns (str3);  		string name = "Encog.MathUtil.RBF." + list2 [0];  		try {  			function2 = (IRadialBasisFunction)ReflectionUtil.LoadObject (name);  		}  		catch (TypeLoadException exception2) {  			throw new PersistError (exception2);  		}  		catch (TargetException exception3) {  			throw new PersistError (exception3);  		}  		catch (MemberAccessException exception4) {  			throw new PersistError (exception4);  		}  		function2.Width = CSVFormat.EgFormat.Parse (list2 [1]);  		function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  		if ((((uint)num6) + ((uint)num)) >= 0) {  			goto Label_0200;  		}  		if ((((uint)num4) - ((uint)num3)) < 0) {  			goto Label_00DC;  		}  		Label_01F2:  		str3 = enumerator2.Current;  		goto Label_013F;  		Label_0200:  		if ((((uint)num4) | 3) != 0) {  			goto Label_012C;  		}  		goto Label_00FA;  	}  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if (((uint)num2) >= 0) {  	if ((((uint)num5) | 0xfffffffe) == 0) {  		return network;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str3;  		IRadialBasisFunction function2;  		IList<string> list2;  		goto Label_00EC;  		Label_00D6:  		if (num6 < num5) {  			goto Label_00FF;  		}  		Label_00DC:  		flat.RBF [num3++] = function2;  		Label_00EC:  		if (enumerator2.MoveNext ()) {  			goto Label_01F2;  		}  		goto Label_003B;  		Label_00FA:  		num6 = 0;  		goto Label_00D6;  		Label_00FF:  		function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  		Label_011E:  		num6++;  		if (0 == 0) {  			goto Label_00D6;  		}  		goto Label_003B;  		Label_012C:  		function2.Centers = new double[num5];  		goto Label_00FA;  		Label_013F:  		if (0 != 0) {  			goto Label_011E;  		}  		list2 = EncogFileSection.SplitColumns (str3);  		string name = "Encog.MathUtil.RBF." + list2 [0];  		try {  			function2 = (IRadialBasisFunction)ReflectionUtil.LoadObject (name);  		}  		catch (TypeLoadException exception2) {  			throw new PersistError (exception2);  		}  		catch (TargetException exception3) {  			throw new PersistError (exception3);  		}  		catch (MemberAccessException exception4) {  			throw new PersistError (exception4);  		}  		function2.Width = CSVFormat.EgFormat.Parse (list2 [1]);  		function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  		if ((((uint)num6) + ((uint)num)) >= 0) {  			goto Label_0200;  		}  		if ((((uint)num4) - ((uint)num3)) < 0) {  			goto Label_00DC;  		}  		Label_01F2:  		str3 = enumerator2.Current;  		goto Label_013F;  		Label_0200:  		if ((((uint)num4) | 3) != 0) {  			goto Label_012C;  		}  		goto Label_00FA;  	}  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str3;  	IRadialBasisFunction function2;  	IList<string> list2;  	goto Label_00EC;  	Label_00D6:  	if (num6 < num5) {  		goto Label_00FF;  	}  	Label_00DC:  	flat.RBF [num3++] = function2;  	Label_00EC:  	if (enumerator2.MoveNext ()) {  		goto Label_01F2;  	}  	goto Label_003B;  	Label_00FA:  	num6 = 0;  	goto Label_00D6;  	Label_00FF:  	function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  	Label_011E:  	num6++;  	if (0 == 0) {  		goto Label_00D6;  	}  	goto Label_003B;  	Label_012C:  	function2.Centers = new double[num5];  	goto Label_00FA;  	Label_013F:  	if (0 != 0) {  		goto Label_011E;  	}  	list2 = EncogFileSection.SplitColumns (str3);  	string name = "Encog.MathUtil.RBF." + list2 [0];  	try {  		function2 = (IRadialBasisFunction)ReflectionUtil.LoadObject (name);  	}  	catch (TypeLoadException exception2) {  		throw new PersistError (exception2);  	}  	catch (TargetException exception3) {  		throw new PersistError (exception3);  	}  	catch (MemberAccessException exception4) {  		throw new PersistError (exception4);  	}  	function2.Width = CSVFormat.EgFormat.Parse (list2 [1]);  	function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  	if ((((uint)num6) + ((uint)num)) >= 0) {  		goto Label_0200;  	}  	if ((((uint)num4) - ((uint)num3)) < 0) {  		goto Label_00DC;  	}  	Label_01F2:  	str3 = enumerator2.Current;  	goto Label_013F;  	Label_0200:  	if ((((uint)num4) | 3) != 0) {  		goto Label_012C;  	}  	goto Label_00FA;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str3;  	IRadialBasisFunction function2;  	IList<string> list2;  	goto Label_00EC;  	Label_00D6:  	if (num6 < num5) {  		goto Label_00FF;  	}  	Label_00DC:  	flat.RBF [num3++] = function2;  	Label_00EC:  	if (enumerator2.MoveNext ()) {  		goto Label_01F2;  	}  	goto Label_003B;  	Label_00FA:  	num6 = 0;  	goto Label_00D6;  	Label_00FF:  	function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  	Label_011E:  	num6++;  	if (0 == 0) {  		goto Label_00D6;  	}  	goto Label_003B;  	Label_012C:  	function2.Centers = new double[num5];  	goto Label_00FA;  	Label_013F:  	if (0 != 0) {  		goto Label_011E;  	}  	list2 = EncogFileSection.SplitColumns (str3);  	string name = "Encog.MathUtil.RBF." + list2 [0];  	try {  		function2 = (IRadialBasisFunction)ReflectionUtil.LoadObject (name);  	}  	catch (TypeLoadException exception2) {  		throw new PersistError (exception2);  	}  	catch (TargetException exception3) {  		throw new PersistError (exception3);  	}  	catch (MemberAccessException exception4) {  		throw new PersistError (exception4);  	}  	function2.Width = CSVFormat.EgFormat.Parse (list2 [1]);  	function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  	if ((((uint)num6) + ((uint)num)) >= 0) {  		goto Label_0200;  	}  	if ((((uint)num4) - ((uint)num3)) < 0) {  		goto Label_00DC;  	}  	Label_01F2:  	str3 = enumerator2.Current;  	goto Label_013F;  	Label_0200:  	if ((((uint)num4) | 3) != 0) {  		goto Label_012C;  	}  	goto Label_00FA;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str3;  	IRadialBasisFunction function2;  	IList<string> list2;  	goto Label_00EC;  	Label_00D6:  	if (num6 < num5) {  		goto Label_00FF;  	}  	Label_00DC:  	flat.RBF [num3++] = function2;  	Label_00EC:  	if (enumerator2.MoveNext ()) {  		goto Label_01F2;  	}  	goto Label_003B;  	Label_00FA:  	num6 = 0;  	goto Label_00D6;  	Label_00FF:  	function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  	Label_011E:  	num6++;  	if (0 == 0) {  		goto Label_00D6;  	}  	goto Label_003B;  	Label_012C:  	function2.Centers = new double[num5];  	goto Label_00FA;  	Label_013F:  	if (0 != 0) {  		goto Label_011E;  	}  	list2 = EncogFileSection.SplitColumns (str3);  	string name = "Encog.MathUtil.RBF." + list2 [0];  	try {  		function2 = (IRadialBasisFunction)ReflectionUtil.LoadObject (name);  	}  	catch (TypeLoadException exception2) {  		throw new PersistError (exception2);  	}  	catch (TargetException exception3) {  		throw new PersistError (exception3);  	}  	catch (MemberAccessException exception4) {  		throw new PersistError (exception4);  	}  	function2.Width = CSVFormat.EgFormat.Parse (list2 [1]);  	function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  	if ((((uint)num6) + ((uint)num)) >= 0) {  		goto Label_0200;  	}  	if ((((uint)num4) - ((uint)num3)) < 0) {  		goto Label_00DC;  	}  	Label_01F2:  	str3 = enumerator2.Current;  	goto Label_013F;  	Label_0200:  	if ((((uint)num4) | 3) != 0) {  		goto Label_012C;  	}  	goto Label_00FA;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: function2.Centers [num6] = CSVFormat.EgFormat.Parse (list2 [num6 + 3]);  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: function2.Peak = CSVFormat.EgFormat.Parse (list2 [2]);  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if ((((uint)num4) | 3) != 0) {  	goto Label_012C;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if ((((uint)num2) | 4) == 0) {  	goto Label_069F;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Read,The following statement contains a magic number: if (-2147483648 != 0) {  	flat.LayerFeedCounts = EncogFileSection.ParseIntArray (dictionary2' "layerFeedCounts");  	if (((uint)num3) < 0) {  		goto Label_05EB;  	}  	flat.LayerContextCount = EncogFileSection.ParseIntArray (dictionary2' "layerContextCount");  	flat.LayerIndex = EncogFileSection.ParseIntArray (dictionary2' "layerIndex");  	if (0 == 0) {  		flat.LayerOutput = EncogFileSection.ParseDoubleArray (dictionary2' "output");  		flat.LayerSums = new double[flat.LayerOutput.Length];  		flat.OutputCount = EncogFileSection.ParseInt (dictionary2' "outputCount");  	}  	flat.WeightIndex = EncogFileSection.ParseIntArray (dictionary2' "weightIndex");  	if ((((uint)num3) > uint.MaxValue) || ((((uint)num2) - ((uint)num2)) < 0)) {  		goto Label_045E;  	}  	flat.Weights = EncogFileSection.ParseDoubleArray (dictionary2' "weights");  	flat.BiasActivation = EncogFileSection.ParseDoubleArray (dictionary2' "biasActivation");  	goto Label_003B;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Save,The following statement contains a magic number: if ((((uint)num5) | 15) != 0) {  	goto Label_01B0;  }  
Magic Number,Encog.Neural.Rbf,PersistRBFNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Rbf\PersistRBFNetwork.cs,Save,The following statement contains a magic number: if ((((uint)num5) | 3) == 0) {  	goto Label_006E;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (!section.SectionName.Equals ("NEAT-POPULATION")) {  		goto Label_085C;  	}  	if (section.SubSectionName.Equals ("INNOVATIONS")) {  		using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  			string str;  			IList<string> list2;  			NEATInnovation innovation;  			NEATInnovation innovation2;  			goto Label_0A6C;  			Label_0A43:  			innovation = innovation2;  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			}  			population.Innovations.Add (innovation);  			Label_0A6C:  			if (enumerator.MoveNext ()) {  				goto Label_0B54;  			}  			goto Label_0AD7;  			Label_0A7A:  			innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  			innovation2.NeuronID = int.Parse (list2 [5]);  			innovation2.FromNeuronID = int.Parse (list2 [6]);  			innovation2.ToNeuronID = int.Parse (list2 [7]);  			goto Label_0A43;  			Label_0AD7:  			if ((((uint)num2) - ((uint)num)) >= 0) {  				goto Label_0023;  			}  			Label_0AEF:  			innovation2 = new NEATInnovation ();  			innovation2.InnovationID = int.Parse (list2 [0]);  			innovation2.InnovationType = StringToInnovationType (list2 [1]);  			innovation2.NeuronType = StringToNeuronType (list2 [2]);  			innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  			if (0 == 0) {  				goto Label_0A7A;  			}  			goto Label_0023;  			Label_0B54:  			str = enumerator.Current;  			do {  				list2 = EncogFileSection.SplitColumns (str);  			}  			while (0 != 0);  			goto Label_0AEF;  		}  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_085C;  	}  	goto Label_030B;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (!section.SectionName.Equals ("NEAT-POPULATION")) {  		goto Label_085C;  	}  	if (section.SubSectionName.Equals ("INNOVATIONS")) {  		using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  			string str;  			IList<string> list2;  			NEATInnovation innovation;  			NEATInnovation innovation2;  			goto Label_0A6C;  			Label_0A43:  			innovation = innovation2;  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			}  			population.Innovations.Add (innovation);  			Label_0A6C:  			if (enumerator.MoveNext ()) {  				goto Label_0B54;  			}  			goto Label_0AD7;  			Label_0A7A:  			innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  			innovation2.NeuronID = int.Parse (list2 [5]);  			innovation2.FromNeuronID = int.Parse (list2 [6]);  			innovation2.ToNeuronID = int.Parse (list2 [7]);  			goto Label_0A43;  			Label_0AD7:  			if ((((uint)num2) - ((uint)num)) >= 0) {  				goto Label_0023;  			}  			Label_0AEF:  			innovation2 = new NEATInnovation ();  			innovation2.InnovationID = int.Parse (list2 [0]);  			innovation2.InnovationType = StringToInnovationType (list2 [1]);  			innovation2.NeuronType = StringToNeuronType (list2 [2]);  			innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  			if (0 == 0) {  				goto Label_0A7A;  			}  			goto Label_0023;  			Label_0B54:  			str = enumerator.Current;  			do {  				list2 = EncogFileSection.SplitColumns (str);  			}  			while (0 != 0);  			goto Label_0AEF;  		}  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_085C;  	}  	goto Label_030B;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (!section.SectionName.Equals ("NEAT-POPULATION")) {  		goto Label_085C;  	}  	if (section.SubSectionName.Equals ("INNOVATIONS")) {  		using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  			string str;  			IList<string> list2;  			NEATInnovation innovation;  			NEATInnovation innovation2;  			goto Label_0A6C;  			Label_0A43:  			innovation = innovation2;  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			}  			population.Innovations.Add (innovation);  			Label_0A6C:  			if (enumerator.MoveNext ()) {  				goto Label_0B54;  			}  			goto Label_0AD7;  			Label_0A7A:  			innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  			innovation2.NeuronID = int.Parse (list2 [5]);  			innovation2.FromNeuronID = int.Parse (list2 [6]);  			innovation2.ToNeuronID = int.Parse (list2 [7]);  			goto Label_0A43;  			Label_0AD7:  			if ((((uint)num2) - ((uint)num)) >= 0) {  				goto Label_0023;  			}  			Label_0AEF:  			innovation2 = new NEATInnovation ();  			innovation2.InnovationID = int.Parse (list2 [0]);  			innovation2.InnovationType = StringToInnovationType (list2 [1]);  			innovation2.NeuronType = StringToNeuronType (list2 [2]);  			innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  			if (0 == 0) {  				goto Label_0A7A;  			}  			goto Label_0023;  			Label_0B54:  			str = enumerator.Current;  			do {  				list2 = EncogFileSection.SplitColumns (str);  			}  			while (0 != 0);  			goto Label_0AEF;  		}  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_085C;  	}  	goto Label_030B;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (!section.SectionName.Equals ("NEAT-POPULATION")) {  		goto Label_085C;  	}  	if (section.SubSectionName.Equals ("INNOVATIONS")) {  		using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  			string str;  			IList<string> list2;  			NEATInnovation innovation;  			NEATInnovation innovation2;  			goto Label_0A6C;  			Label_0A43:  			innovation = innovation2;  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			}  			population.Innovations.Add (innovation);  			Label_0A6C:  			if (enumerator.MoveNext ()) {  				goto Label_0B54;  			}  			goto Label_0AD7;  			Label_0A7A:  			innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  			innovation2.NeuronID = int.Parse (list2 [5]);  			innovation2.FromNeuronID = int.Parse (list2 [6]);  			innovation2.ToNeuronID = int.Parse (list2 [7]);  			goto Label_0A43;  			Label_0AD7:  			if ((((uint)num2) - ((uint)num)) >= 0) {  				goto Label_0023;  			}  			Label_0AEF:  			innovation2 = new NEATInnovation ();  			innovation2.InnovationID = int.Parse (list2 [0]);  			innovation2.InnovationType = StringToInnovationType (list2 [1]);  			innovation2.NeuronType = StringToNeuronType (list2 [2]);  			innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  			if (0 == 0) {  				goto Label_0A7A;  			}  			goto Label_0023;  			Label_0B54:  			str = enumerator.Current;  			do {  				list2 = EncogFileSection.SplitColumns (str);  			}  			while (0 != 0);  			goto Label_0AEF;  		}  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_085C;  	}  	goto Label_030B;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (!section.SectionName.Equals ("NEAT-POPULATION")) {  		goto Label_085C;  	}  	if (section.SubSectionName.Equals ("INNOVATIONS")) {  		using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  			string str;  			IList<string> list2;  			NEATInnovation innovation;  			NEATInnovation innovation2;  			goto Label_0A6C;  			Label_0A43:  			innovation = innovation2;  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			}  			population.Innovations.Add (innovation);  			Label_0A6C:  			if (enumerator.MoveNext ()) {  				goto Label_0B54;  			}  			goto Label_0AD7;  			Label_0A7A:  			innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  			innovation2.NeuronID = int.Parse (list2 [5]);  			innovation2.FromNeuronID = int.Parse (list2 [6]);  			innovation2.ToNeuronID = int.Parse (list2 [7]);  			goto Label_0A43;  			Label_0AD7:  			if ((((uint)num2) - ((uint)num)) >= 0) {  				goto Label_0023;  			}  			Label_0AEF:  			innovation2 = new NEATInnovation ();  			innovation2.InnovationID = int.Parse (list2 [0]);  			innovation2.InnovationType = StringToInnovationType (list2 [1]);  			innovation2.NeuronType = StringToNeuronType (list2 [2]);  			innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  			if (0 == 0) {  				goto Label_0A7A;  			}  			goto Label_0023;  			Label_0B54:  			str = enumerator.Current;  			do {  				list2 = EncogFileSection.SplitColumns (str);  			}  			while (0 != 0);  			goto Label_0AEF;  		}  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_085C;  	}  	goto Label_030B;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((section = helper.ReadNextSection ()) != null) {  	if (!section.SectionName.Equals ("NEAT-POPULATION")) {  		goto Label_085C;  	}  	if (section.SubSectionName.Equals ("INNOVATIONS")) {  		using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  			string str;  			IList<string> list2;  			NEATInnovation innovation;  			NEATInnovation innovation2;  			goto Label_0A6C;  			Label_0A43:  			innovation = innovation2;  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			}  			population.Innovations.Add (innovation);  			Label_0A6C:  			if (enumerator.MoveNext ()) {  				goto Label_0B54;  			}  			goto Label_0AD7;  			Label_0A7A:  			innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  			innovation2.NeuronID = int.Parse (list2 [5]);  			innovation2.FromNeuronID = int.Parse (list2 [6]);  			innovation2.ToNeuronID = int.Parse (list2 [7]);  			goto Label_0A43;  			Label_0AD7:  			if ((((uint)num2) - ((uint)num)) >= 0) {  				goto Label_0023;  			}  			Label_0AEF:  			innovation2 = new NEATInnovation ();  			innovation2.InnovationID = int.Parse (list2 [0]);  			innovation2.InnovationType = StringToInnovationType (list2 [1]);  			innovation2.NeuronType = StringToNeuronType (list2 [2]);  			innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  			if (0 == 0) {  				goto Label_0A7A;  			}  			goto Label_0023;  			Label_0B54:  			str = enumerator.Current;  			do {  				list2 = EncogFileSection.SplitColumns (str);  			}  			while (0 != 0);  			goto Label_0AEF;  		}  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_085C;  	}  	goto Label_030B;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("INNOVATIONS")) {  	using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  		string str;  		IList<string> list2;  		NEATInnovation innovation;  		NEATInnovation innovation2;  		goto Label_0A6C;  		Label_0A43:  		innovation = innovation2;  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		}  		population.Innovations.Add (innovation);  		Label_0A6C:  		if (enumerator.MoveNext ()) {  			goto Label_0B54;  		}  		goto Label_0AD7;  		Label_0A7A:  		innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  		innovation2.NeuronID = int.Parse (list2 [5]);  		innovation2.FromNeuronID = int.Parse (list2 [6]);  		innovation2.ToNeuronID = int.Parse (list2 [7]);  		goto Label_0A43;  		Label_0AD7:  		if ((((uint)num2) - ((uint)num)) >= 0) {  			goto Label_0023;  		}  		Label_0AEF:  		innovation2 = new NEATInnovation ();  		innovation2.InnovationID = int.Parse (list2 [0]);  		innovation2.InnovationType = StringToInnovationType (list2 [1]);  		innovation2.NeuronType = StringToNeuronType (list2 [2]);  		innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  		if (0 == 0) {  			goto Label_0A7A;  		}  		goto Label_0023;  		Label_0B54:  		str = enumerator.Current;  		do {  			list2 = EncogFileSection.SplitColumns (str);  		}  		while (0 != 0);  		goto Label_0AEF;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("INNOVATIONS")) {  	using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  		string str;  		IList<string> list2;  		NEATInnovation innovation;  		NEATInnovation innovation2;  		goto Label_0A6C;  		Label_0A43:  		innovation = innovation2;  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		}  		population.Innovations.Add (innovation);  		Label_0A6C:  		if (enumerator.MoveNext ()) {  			goto Label_0B54;  		}  		goto Label_0AD7;  		Label_0A7A:  		innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  		innovation2.NeuronID = int.Parse (list2 [5]);  		innovation2.FromNeuronID = int.Parse (list2 [6]);  		innovation2.ToNeuronID = int.Parse (list2 [7]);  		goto Label_0A43;  		Label_0AD7:  		if ((((uint)num2) - ((uint)num)) >= 0) {  			goto Label_0023;  		}  		Label_0AEF:  		innovation2 = new NEATInnovation ();  		innovation2.InnovationID = int.Parse (list2 [0]);  		innovation2.InnovationType = StringToInnovationType (list2 [1]);  		innovation2.NeuronType = StringToNeuronType (list2 [2]);  		innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  		if (0 == 0) {  			goto Label_0A7A;  		}  		goto Label_0023;  		Label_0B54:  		str = enumerator.Current;  		do {  			list2 = EncogFileSection.SplitColumns (str);  		}  		while (0 != 0);  		goto Label_0AEF;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("INNOVATIONS")) {  	using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  		string str;  		IList<string> list2;  		NEATInnovation innovation;  		NEATInnovation innovation2;  		goto Label_0A6C;  		Label_0A43:  		innovation = innovation2;  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		}  		population.Innovations.Add (innovation);  		Label_0A6C:  		if (enumerator.MoveNext ()) {  			goto Label_0B54;  		}  		goto Label_0AD7;  		Label_0A7A:  		innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  		innovation2.NeuronID = int.Parse (list2 [5]);  		innovation2.FromNeuronID = int.Parse (list2 [6]);  		innovation2.ToNeuronID = int.Parse (list2 [7]);  		goto Label_0A43;  		Label_0AD7:  		if ((((uint)num2) - ((uint)num)) >= 0) {  			goto Label_0023;  		}  		Label_0AEF:  		innovation2 = new NEATInnovation ();  		innovation2.InnovationID = int.Parse (list2 [0]);  		innovation2.InnovationType = StringToInnovationType (list2 [1]);  		innovation2.NeuronType = StringToNeuronType (list2 [2]);  		innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  		if (0 == 0) {  			goto Label_0A7A;  		}  		goto Label_0023;  		Label_0B54:  		str = enumerator.Current;  		do {  			list2 = EncogFileSection.SplitColumns (str);  		}  		while (0 != 0);  		goto Label_0AEF;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("INNOVATIONS")) {  	using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  		string str;  		IList<string> list2;  		NEATInnovation innovation;  		NEATInnovation innovation2;  		goto Label_0A6C;  		Label_0A43:  		innovation = innovation2;  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		}  		population.Innovations.Add (innovation);  		Label_0A6C:  		if (enumerator.MoveNext ()) {  			goto Label_0B54;  		}  		goto Label_0AD7;  		Label_0A7A:  		innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  		innovation2.NeuronID = int.Parse (list2 [5]);  		innovation2.FromNeuronID = int.Parse (list2 [6]);  		innovation2.ToNeuronID = int.Parse (list2 [7]);  		goto Label_0A43;  		Label_0AD7:  		if ((((uint)num2) - ((uint)num)) >= 0) {  			goto Label_0023;  		}  		Label_0AEF:  		innovation2 = new NEATInnovation ();  		innovation2.InnovationID = int.Parse (list2 [0]);  		innovation2.InnovationType = StringToInnovationType (list2 [1]);  		innovation2.NeuronType = StringToNeuronType (list2 [2]);  		innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  		if (0 == 0) {  			goto Label_0A7A;  		}  		goto Label_0023;  		Label_0B54:  		str = enumerator.Current;  		do {  			list2 = EncogFileSection.SplitColumns (str);  		}  		while (0 != 0);  		goto Label_0AEF;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("INNOVATIONS")) {  	using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  		string str;  		IList<string> list2;  		NEATInnovation innovation;  		NEATInnovation innovation2;  		goto Label_0A6C;  		Label_0A43:  		innovation = innovation2;  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		}  		population.Innovations.Add (innovation);  		Label_0A6C:  		if (enumerator.MoveNext ()) {  			goto Label_0B54;  		}  		goto Label_0AD7;  		Label_0A7A:  		innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  		innovation2.NeuronID = int.Parse (list2 [5]);  		innovation2.FromNeuronID = int.Parse (list2 [6]);  		innovation2.ToNeuronID = int.Parse (list2 [7]);  		goto Label_0A43;  		Label_0AD7:  		if ((((uint)num2) - ((uint)num)) >= 0) {  			goto Label_0023;  		}  		Label_0AEF:  		innovation2 = new NEATInnovation ();  		innovation2.InnovationID = int.Parse (list2 [0]);  		innovation2.InnovationType = StringToInnovationType (list2 [1]);  		innovation2.NeuronType = StringToNeuronType (list2 [2]);  		innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  		if (0 == 0) {  			goto Label_0A7A;  		}  		goto Label_0023;  		Label_0B54:  		str = enumerator.Current;  		do {  			list2 = EncogFileSection.SplitColumns (str);  		}  		while (0 != 0);  		goto Label_0AEF;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("INNOVATIONS")) {  	using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  		string str;  		IList<string> list2;  		NEATInnovation innovation;  		NEATInnovation innovation2;  		goto Label_0A6C;  		Label_0A43:  		innovation = innovation2;  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		}  		population.Innovations.Add (innovation);  		Label_0A6C:  		if (enumerator.MoveNext ()) {  			goto Label_0B54;  		}  		goto Label_0AD7;  		Label_0A7A:  		innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  		innovation2.NeuronID = int.Parse (list2 [5]);  		innovation2.FromNeuronID = int.Parse (list2 [6]);  		innovation2.ToNeuronID = int.Parse (list2 [7]);  		goto Label_0A43;  		Label_0AD7:  		if ((((uint)num2) - ((uint)num)) >= 0) {  			goto Label_0023;  		}  		Label_0AEF:  		innovation2 = new NEATInnovation ();  		innovation2.InnovationID = int.Parse (list2 [0]);  		innovation2.InnovationType = StringToInnovationType (list2 [1]);  		innovation2.NeuronType = StringToNeuronType (list2 [2]);  		innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  		if (0 == 0) {  			goto Label_0A7A;  		}  		goto Label_0023;  		Label_0B54:  		str = enumerator.Current;  		do {  			list2 = EncogFileSection.SplitColumns (str);  		}  		while (0 != 0);  		goto Label_0AEF;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	NEATInnovation innovation;  	NEATInnovation innovation2;  	goto Label_0A6C;  	Label_0A43:  	innovation = innovation2;  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  	}  	population.Innovations.Add (innovation);  	Label_0A6C:  	if (enumerator.MoveNext ()) {  		goto Label_0B54;  	}  	goto Label_0AD7;  	Label_0A7A:  	innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  	innovation2.NeuronID = int.Parse (list2 [5]);  	innovation2.FromNeuronID = int.Parse (list2 [6]);  	innovation2.ToNeuronID = int.Parse (list2 [7]);  	goto Label_0A43;  	Label_0AD7:  	if ((((uint)num2) - ((uint)num)) >= 0) {  		goto Label_0023;  	}  	Label_0AEF:  	innovation2 = new NEATInnovation ();  	innovation2.InnovationID = int.Parse (list2 [0]);  	innovation2.InnovationType = StringToInnovationType (list2 [1]);  	innovation2.NeuronType = StringToNeuronType (list2 [2]);  	innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  	if (0 == 0) {  		goto Label_0A7A;  	}  	goto Label_0023;  	Label_0B54:  	str = enumerator.Current;  	do {  		list2 = EncogFileSection.SplitColumns (str);  	}  	while (0 != 0);  	goto Label_0AEF;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	NEATInnovation innovation;  	NEATInnovation innovation2;  	goto Label_0A6C;  	Label_0A43:  	innovation = innovation2;  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  	}  	population.Innovations.Add (innovation);  	Label_0A6C:  	if (enumerator.MoveNext ()) {  		goto Label_0B54;  	}  	goto Label_0AD7;  	Label_0A7A:  	innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  	innovation2.NeuronID = int.Parse (list2 [5]);  	innovation2.FromNeuronID = int.Parse (list2 [6]);  	innovation2.ToNeuronID = int.Parse (list2 [7]);  	goto Label_0A43;  	Label_0AD7:  	if ((((uint)num2) - ((uint)num)) >= 0) {  		goto Label_0023;  	}  	Label_0AEF:  	innovation2 = new NEATInnovation ();  	innovation2.InnovationID = int.Parse (list2 [0]);  	innovation2.InnovationType = StringToInnovationType (list2 [1]);  	innovation2.NeuronType = StringToNeuronType (list2 [2]);  	innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  	if (0 == 0) {  		goto Label_0A7A;  	}  	goto Label_0023;  	Label_0B54:  	str = enumerator.Current;  	do {  		list2 = EncogFileSection.SplitColumns (str);  	}  	while (0 != 0);  	goto Label_0AEF;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	NEATInnovation innovation;  	NEATInnovation innovation2;  	goto Label_0A6C;  	Label_0A43:  	innovation = innovation2;  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  	}  	population.Innovations.Add (innovation);  	Label_0A6C:  	if (enumerator.MoveNext ()) {  		goto Label_0B54;  	}  	goto Label_0AD7;  	Label_0A7A:  	innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  	innovation2.NeuronID = int.Parse (list2 [5]);  	innovation2.FromNeuronID = int.Parse (list2 [6]);  	innovation2.ToNeuronID = int.Parse (list2 [7]);  	goto Label_0A43;  	Label_0AD7:  	if ((((uint)num2) - ((uint)num)) >= 0) {  		goto Label_0023;  	}  	Label_0AEF:  	innovation2 = new NEATInnovation ();  	innovation2.InnovationID = int.Parse (list2 [0]);  	innovation2.InnovationType = StringToInnovationType (list2 [1]);  	innovation2.NeuronType = StringToNeuronType (list2 [2]);  	innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  	if (0 == 0) {  		goto Label_0A7A;  	}  	goto Label_0023;  	Label_0B54:  	str = enumerator.Current;  	do {  		list2 = EncogFileSection.SplitColumns (str);  	}  	while (0 != 0);  	goto Label_0AEF;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	NEATInnovation innovation;  	NEATInnovation innovation2;  	goto Label_0A6C;  	Label_0A43:  	innovation = innovation2;  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  	}  	population.Innovations.Add (innovation);  	Label_0A6C:  	if (enumerator.MoveNext ()) {  		goto Label_0B54;  	}  	goto Label_0AD7;  	Label_0A7A:  	innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  	innovation2.NeuronID = int.Parse (list2 [5]);  	innovation2.FromNeuronID = int.Parse (list2 [6]);  	innovation2.ToNeuronID = int.Parse (list2 [7]);  	goto Label_0A43;  	Label_0AD7:  	if ((((uint)num2) - ((uint)num)) >= 0) {  		goto Label_0023;  	}  	Label_0AEF:  	innovation2 = new NEATInnovation ();  	innovation2.InnovationID = int.Parse (list2 [0]);  	innovation2.InnovationType = StringToInnovationType (list2 [1]);  	innovation2.NeuronType = StringToNeuronType (list2 [2]);  	innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  	if (0 == 0) {  		goto Label_0A7A;  	}  	goto Label_0023;  	Label_0B54:  	str = enumerator.Current;  	do {  		list2 = EncogFileSection.SplitColumns (str);  	}  	while (0 != 0);  	goto Label_0AEF;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	NEATInnovation innovation;  	NEATInnovation innovation2;  	goto Label_0A6C;  	Label_0A43:  	innovation = innovation2;  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  	}  	population.Innovations.Add (innovation);  	Label_0A6C:  	if (enumerator.MoveNext ()) {  		goto Label_0B54;  	}  	goto Label_0AD7;  	Label_0A7A:  	innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  	innovation2.NeuronID = int.Parse (list2 [5]);  	innovation2.FromNeuronID = int.Parse (list2 [6]);  	innovation2.ToNeuronID = int.Parse (list2 [7]);  	goto Label_0A43;  	Label_0AD7:  	if ((((uint)num2) - ((uint)num)) >= 0) {  		goto Label_0023;  	}  	Label_0AEF:  	innovation2 = new NEATInnovation ();  	innovation2.InnovationID = int.Parse (list2 [0]);  	innovation2.InnovationType = StringToInnovationType (list2 [1]);  	innovation2.NeuronType = StringToNeuronType (list2 [2]);  	innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  	if (0 == 0) {  		goto Label_0A7A;  	}  	goto Label_0023;  	Label_0B54:  	str = enumerator.Current;  	do {  		list2 = EncogFileSection.SplitColumns (str);  	}  	while (0 != 0);  	goto Label_0AEF;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator = section.Lines.GetEnumerator ()) {  	string str;  	IList<string> list2;  	NEATInnovation innovation;  	NEATInnovation innovation2;  	goto Label_0A6C;  	Label_0A43:  	innovation = innovation2;  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  	}  	population.Innovations.Add (innovation);  	Label_0A6C:  	if (enumerator.MoveNext ()) {  		goto Label_0B54;  	}  	goto Label_0AD7;  	Label_0A7A:  	innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  	innovation2.NeuronID = int.Parse (list2 [5]);  	innovation2.FromNeuronID = int.Parse (list2 [6]);  	innovation2.ToNeuronID = int.Parse (list2 [7]);  	goto Label_0A43;  	Label_0AD7:  	if ((((uint)num2) - ((uint)num)) >= 0) {  		goto Label_0023;  	}  	Label_0AEF:  	innovation2 = new NEATInnovation ();  	innovation2.InnovationID = int.Parse (list2 [0]);  	innovation2.InnovationType = StringToInnovationType (list2 [1]);  	innovation2.NeuronType = StringToNeuronType (list2 [2]);  	innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  	if (0 == 0) {  		goto Label_0A7A;  	}  	goto Label_0023;  	Label_0B54:  	str = enumerator.Current;  	do {  		list2 = EncogFileSection.SplitColumns (str);  	}  	while (0 != 0);  	goto Label_0AEF;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: innovation2.SplitY = CSVFormat.EgFormat.Parse (list2 [4]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: innovation2.NeuronID = int.Parse (list2 [5]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: innovation2.FromNeuronID = int.Parse (list2 [6]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: innovation2.ToNeuronID = int.Parse (list2 [7]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: innovation2.NeuronType = StringToNeuronType (list2 [2]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: innovation2.SplitX = CSVFormat.EgFormat.Parse (list2 [3]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if (section.SubSectionName.Equals ("GENOMES")) {  		NEATGenome genome = null;  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list3;  			NEATGenome genome2;  			NEATNeuronGene gene;  			NEATNeuronGene gene2;  			NEATLinkGene gene3;  			goto Label_0402;  			Label_03DA:  			genome.Links.Add (gene3);  			goto Label_0402;  			Label_03EA:  			if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_04EA;  			}  			Label_0402:  			if (enumerator3.MoveNext ()) {  				goto Label_0770;  			}  			if ((((uint)num2) | 0x80000000) != 0) {  				goto Label_0023;  			}  			Label_0429:  			gene3.Enabled = int.Parse (list3 [2]) > 0;  			Label_0440:  			gene3.Recurrent = int.Parse (list3 [3]) > 0;  			gene3.FromNeuronID = int.Parse (list3 [4]);  			gene3.ToNeuronID = int.Parse (list3 [5]);  			gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  			gene3.InnovationId = int.Parse (list3 [7]);  			goto Label_03DA;  			Label_04B4:  			if ((((uint)num) & 0) != 0) {  				goto Label_03DA;  			}  			gene3.Id = int.Parse (list3 [1]);  			goto Label_0429;  			Label_04EA:  			gene3 = new NEATLinkGene ();  			goto Label_04B4;  			Label_04F6:  			gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  			Label_050F:  			gene = gene2;  			genome.Neurons.Add (gene);  			if ((((uint)num2) & 0) != 0) {  				goto Label_0782;  			}  			goto Label_0402;  			Label_053D:  			gene2.Enabled = int.Parse (list3 [3]) > 0;  			gene2.InnovationId = int.Parse (list3 [4]);  			if (0xff == 0) {  				goto Label_050F;  			}  			gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  			gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_04F6;  			Label_05A7:  			gene2.Id = int.Parse (list3 [1]);  			gene2.NeuronType = StringToNeuronType (list3 [2]);  			goto Label_053D;  			Label_05DA:  			if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_03EA;  			}  			if (3 == 0) {  				goto Label_0440;  			}  			gene2 = new NEATNeuronGene ();  			goto Label_07C8;  			Label_0608:  			population.Add (genome);  			dictionary3 [(int)genome.GenomeID] = genome;  			if (((uint)num) >= 0) {  				goto Label_0402;  			}  			goto Label_06B0;  			Label_0638:  			genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  			genome.NetworkDepth = int.Parse (list3 [5]);  			if ((((uint)num2) | 0x80000000) == 0) {  				goto Label_07AD;  			}  			if (((uint)num2) < 0) {  				goto Label_0023;  			}  			genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  			goto Label_06F8;  			Label_06B0:  			genome.GenomeID = int.Parse (list3 [1]);  			genome.SpeciesID = int.Parse (list3 [2]);  			genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  			goto Label_0638;  			Label_06F8:  			if (3 != 0) {  				goto Label_0608;  			}  			goto Label_0402;  			Label_0704:  			genome.Chromosomes.Add (genome.LinksChromosome);  			if ((((uint)num2) + ((uint)num2)) >= 0) {  				goto Label_06B0;  			}  			goto Label_0402;  			Label_0737:  			if (8 == 0) {  				goto Label_050F;  			}  			genome = genome2;  			genome.Chromosomes.Add (genome.NeuronsChromosome);  			if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  				goto Label_0704;  			}  			Label_0770:  			str3 = enumerator3.Current;  			list3 = EncogFileSection.SplitColumns (str3);  			Label_0782:  			if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  				goto Label_05DA;  			}  			genome2 = new NEATGenome {  				NeuronsChromosome = new Chromosome ()  			};  			Label_07AD:  			genome2.LinksChromosome = new Chromosome ();  			goto Label_0737;  			Label_07C8:  			if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  				goto Label_05A7;  			}  			if (0 == 0) {  				goto Label_04EA;  			}  			goto Label_04B4;  		}  	}  	if ((((uint)num2) < 0) || ((((uint)num2) - ((uint)num2)) > uint.MaxValue)) {  		goto Label_030B;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("GENOMES")) {  	NEATGenome genome = null;  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list3;  		NEATGenome genome2;  		NEATNeuronGene gene;  		NEATNeuronGene gene2;  		NEATLinkGene gene3;  		goto Label_0402;  		Label_03DA:  		genome.Links.Add (gene3);  		goto Label_0402;  		Label_03EA:  		if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_04EA;  		}  		Label_0402:  		if (enumerator3.MoveNext ()) {  			goto Label_0770;  		}  		if ((((uint)num2) | 0x80000000) != 0) {  			goto Label_0023;  		}  		Label_0429:  		gene3.Enabled = int.Parse (list3 [2]) > 0;  		Label_0440:  		gene3.Recurrent = int.Parse (list3 [3]) > 0;  		gene3.FromNeuronID = int.Parse (list3 [4]);  		gene3.ToNeuronID = int.Parse (list3 [5]);  		gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  		gene3.InnovationId = int.Parse (list3 [7]);  		goto Label_03DA;  		Label_04B4:  		if ((((uint)num) & 0) != 0) {  			goto Label_03DA;  		}  		gene3.Id = int.Parse (list3 [1]);  		goto Label_0429;  		Label_04EA:  		gene3 = new NEATLinkGene ();  		goto Label_04B4;  		Label_04F6:  		gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  		Label_050F:  		gene = gene2;  		genome.Neurons.Add (gene);  		if ((((uint)num2) & 0) != 0) {  			goto Label_0782;  		}  		goto Label_0402;  		Label_053D:  		gene2.Enabled = int.Parse (list3 [3]) > 0;  		gene2.InnovationId = int.Parse (list3 [4]);  		if (0xff == 0) {  			goto Label_050F;  		}  		gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  		gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_04F6;  		Label_05A7:  		gene2.Id = int.Parse (list3 [1]);  		gene2.NeuronType = StringToNeuronType (list3 [2]);  		goto Label_053D;  		Label_05DA:  		if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_03EA;  		}  		if (3 == 0) {  			goto Label_0440;  		}  		gene2 = new NEATNeuronGene ();  		goto Label_07C8;  		Label_0608:  		population.Add (genome);  		dictionary3 [(int)genome.GenomeID] = genome;  		if (((uint)num) >= 0) {  			goto Label_0402;  		}  		goto Label_06B0;  		Label_0638:  		genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  		genome.NetworkDepth = int.Parse (list3 [5]);  		if ((((uint)num2) | 0x80000000) == 0) {  			goto Label_07AD;  		}  		if (((uint)num2) < 0) {  			goto Label_0023;  		}  		genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  		goto Label_06F8;  		Label_06B0:  		genome.GenomeID = int.Parse (list3 [1]);  		genome.SpeciesID = int.Parse (list3 [2]);  		genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  		goto Label_0638;  		Label_06F8:  		if (3 != 0) {  			goto Label_0608;  		}  		goto Label_0402;  		Label_0704:  		genome.Chromosomes.Add (genome.LinksChromosome);  		if ((((uint)num2) + ((uint)num2)) >= 0) {  			goto Label_06B0;  		}  		goto Label_0402;  		Label_0737:  		if (8 == 0) {  			goto Label_050F;  		}  		genome = genome2;  		genome.Chromosomes.Add (genome.NeuronsChromosome);  		if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  			goto Label_0704;  		}  		Label_0770:  		str3 = enumerator3.Current;  		list3 = EncogFileSection.SplitColumns (str3);  		Label_0782:  		if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_05DA;  		}  		genome2 = new NEATGenome {  			NeuronsChromosome = new Chromosome ()  		};  		Label_07AD:  		genome2.LinksChromosome = new Chromosome ();  		goto Label_0737;  		Label_07C8:  		if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  			goto Label_05A7;  		}  		if (0 == 0) {  			goto Label_04EA;  		}  		goto Label_04B4;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list3;  	NEATGenome genome2;  	NEATNeuronGene gene;  	NEATNeuronGene gene2;  	NEATLinkGene gene3;  	goto Label_0402;  	Label_03DA:  	genome.Links.Add (gene3);  	goto Label_0402;  	Label_03EA:  	if (list3 [0].Equals ("l"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_04EA;  	}  	Label_0402:  	if (enumerator3.MoveNext ()) {  		goto Label_0770;  	}  	if ((((uint)num2) | 0x80000000) != 0) {  		goto Label_0023;  	}  	Label_0429:  	gene3.Enabled = int.Parse (list3 [2]) > 0;  	Label_0440:  	gene3.Recurrent = int.Parse (list3 [3]) > 0;  	gene3.FromNeuronID = int.Parse (list3 [4]);  	gene3.ToNeuronID = int.Parse (list3 [5]);  	gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  	gene3.InnovationId = int.Parse (list3 [7]);  	goto Label_03DA;  	Label_04B4:  	if ((((uint)num) & 0) != 0) {  		goto Label_03DA;  	}  	gene3.Id = int.Parse (list3 [1]);  	goto Label_0429;  	Label_04EA:  	gene3 = new NEATLinkGene ();  	goto Label_04B4;  	Label_04F6:  	gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  	Label_050F:  	gene = gene2;  	genome.Neurons.Add (gene);  	if ((((uint)num2) & 0) != 0) {  		goto Label_0782;  	}  	goto Label_0402;  	Label_053D:  	gene2.Enabled = int.Parse (list3 [3]) > 0;  	gene2.InnovationId = int.Parse (list3 [4]);  	if (0xff == 0) {  		goto Label_050F;  	}  	gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  	gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_04F6;  	Label_05A7:  	gene2.Id = int.Parse (list3 [1]);  	gene2.NeuronType = StringToNeuronType (list3 [2]);  	goto Label_053D;  	Label_05DA:  	if (!list3 [0].Equals ("n"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_03EA;  	}  	if (3 == 0) {  		goto Label_0440;  	}  	gene2 = new NEATNeuronGene ();  	goto Label_07C8;  	Label_0608:  	population.Add (genome);  	dictionary3 [(int)genome.GenomeID] = genome;  	if (((uint)num) >= 0) {  		goto Label_0402;  	}  	goto Label_06B0;  	Label_0638:  	genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  	genome.NetworkDepth = int.Parse (list3 [5]);  	if ((((uint)num2) | 0x80000000) == 0) {  		goto Label_07AD;  	}  	if (((uint)num2) < 0) {  		goto Label_0023;  	}  	genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  	goto Label_06F8;  	Label_06B0:  	genome.GenomeID = int.Parse (list3 [1]);  	genome.SpeciesID = int.Parse (list3 [2]);  	genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  	goto Label_0638;  	Label_06F8:  	if (3 != 0) {  		goto Label_0608;  	}  	goto Label_0402;  	Label_0704:  	genome.Chromosomes.Add (genome.LinksChromosome);  	if ((((uint)num2) + ((uint)num2)) >= 0) {  		goto Label_06B0;  	}  	goto Label_0402;  	Label_0737:  	if (8 == 0) {  		goto Label_050F;  	}  	genome = genome2;  	genome.Chromosomes.Add (genome.NeuronsChromosome);  	if ((((uint)num) - ((uint)num2)) <= uint.MaxValue) {  		goto Label_0704;  	}  	Label_0770:  	str3 = enumerator3.Current;  	list3 = EncogFileSection.SplitColumns (str3);  	Label_0782:  	if (!list3 [0].Equals ("g"' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_05DA;  	}  	genome2 = new NEATGenome {  		NeuronsChromosome = new Chromosome ()  	};  	Label_07AD:  	genome2.LinksChromosome = new Chromosome ();  	goto Label_0737;  	Label_07C8:  	if ((((uint)num2) - ((uint)num)) <= uint.MaxValue) {  		goto Label_05A7;  	}  	if (0 == 0) {  		goto Label_04EA;  	}  	goto Label_04B4;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene3.Enabled = int.Parse (list3 [2]) > 0;  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene3.Recurrent = int.Parse (list3 [3]) > 0;  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene3.FromNeuronID = int.Parse (list3 [4]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene3.ToNeuronID = int.Parse (list3 [5]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene3.Weight = CSVFormat.EgFormat.Parse (list3 [6]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene3.InnovationId = int.Parse (list3 [7]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene2.SplitY = CSVFormat.EgFormat.Parse (list3 [7]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene2.Enabled = int.Parse (list3 [3]) > 0;  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene2.InnovationId = int.Parse (list3 [4]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene2.ActivationResponse = CSVFormat.EgFormat.Parse (list3 [5]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene2.SplitX = CSVFormat.EgFormat.Parse (list3 [6]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: gene2.NeuronType = StringToNeuronType (list3 [2]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (3 == 0) {  	goto Label_0440;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: genome.AmountToSpawn = CSVFormat.EgFormat.Parse (list3 [4]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: genome.NetworkDepth = int.Parse (list3 [5]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: genome.Score = CSVFormat.EgFormat.Parse (list3 [6]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: genome.SpeciesID = int.Parse (list3 [2]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: genome.AdjustedScore = CSVFormat.EgFormat.Parse (list3 [3]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (3 != 0) {  	goto Label_0608;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (8 == 0) {  	goto Label_050F;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT-POPULATION")) {  	if ((((uint)num) | 1) == 0) {  		goto Label_0266;  	}  	if (section.SubSectionName.Equals ("SPECIES")) {  		if ((((uint)num) | 8) == 0) {  			goto Label_0201;  		}  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			string[] strArray;  			BasicSpecies species;  			BasicSpecies species2;  			goto Label_0913;  			Label_08CB:  			species = species2;  			species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  			dictionary2 [species] = int.Parse (strArray [6]);  			population.Species.Add (species);  			dictionary [(int)species.SpeciesID] = species;  			Label_0913:  			if (enumerator2.MoveNext ()) {  				goto Label_09D6;  			}  			goto Label_0023;  			Label_0924:  			if ((((uint)num2) & 0) != 0) {  				goto Label_0969;  			}  			if (2 == 0) {  				goto Label_0924;  			}  			goto Label_09BE;  			Label_0941:  			species2 = new BasicSpecies ();  			species2.SpeciesID = int.Parse (strArray [0]);  			species2.Age = int.Parse (strArray [1]);  			Label_0969:  			species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  			species2.GensNoImprovement = int.Parse (strArray [3]);  			species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  			if ((((uint)num) + ((uint)num2)) >= 0) {  				goto Label_0924;  			}  			Label_09BE:  			if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  				goto Label_09FD;  			}  			Label_09D6:  			str2 = enumerator2.Current;  			strArray = str2.Split (new char[] {  				'''  			});  			goto Label_0941;  			Label_09FD:  			if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  				goto Label_08CB;  			}  			goto Label_0023;  		}  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (section.SubSectionName.Equals ("SPECIES")) {  	if ((((uint)num) | 8) == 0) {  		goto Label_0201;  	}  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		string[] strArray;  		BasicSpecies species;  		BasicSpecies species2;  		goto Label_0913;  		Label_08CB:  		species = species2;  		species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  		dictionary2 [species] = int.Parse (strArray [6]);  		population.Species.Add (species);  		dictionary [(int)species.SpeciesID] = species;  		Label_0913:  		if (enumerator2.MoveNext ()) {  			goto Label_09D6;  		}  		goto Label_0023;  		Label_0924:  		if ((((uint)num2) & 0) != 0) {  			goto Label_0969;  		}  		if (2 == 0) {  			goto Label_0924;  		}  		goto Label_09BE;  		Label_0941:  		species2 = new BasicSpecies ();  		species2.SpeciesID = int.Parse (strArray [0]);  		species2.Age = int.Parse (strArray [1]);  		Label_0969:  		species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  		species2.GensNoImprovement = int.Parse (strArray [3]);  		species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  		if ((((uint)num) + ((uint)num2)) >= 0) {  			goto Label_0924;  		}  		Label_09BE:  		if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  			goto Label_09FD;  		}  		Label_09D6:  		str2 = enumerator2.Current;  		strArray = str2.Split (new char[] {  			'''  		});  		goto Label_0941;  		Label_09FD:  		if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  			goto Label_08CB;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if ((((uint)num) | 8) == 0) {  	goto Label_0201;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	string[] strArray;  	BasicSpecies species;  	BasicSpecies species2;  	goto Label_0913;  	Label_08CB:  	species = species2;  	species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  	dictionary2 [species] = int.Parse (strArray [6]);  	population.Species.Add (species);  	dictionary [(int)species.SpeciesID] = species;  	Label_0913:  	if (enumerator2.MoveNext ()) {  		goto Label_09D6;  	}  	goto Label_0023;  	Label_0924:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0969;  	}  	if (2 == 0) {  		goto Label_0924;  	}  	goto Label_09BE;  	Label_0941:  	species2 = new BasicSpecies ();  	species2.SpeciesID = int.Parse (strArray [0]);  	species2.Age = int.Parse (strArray [1]);  	Label_0969:  	species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  	species2.GensNoImprovement = int.Parse (strArray [3]);  	species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  	if ((((uint)num) + ((uint)num2)) >= 0) {  		goto Label_0924;  	}  	Label_09BE:  	if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_09FD;  	}  	Label_09D6:  	str2 = enumerator2.Current;  	strArray = str2.Split (new char[] {  		'''  	});  	goto Label_0941;  	Label_09FD:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_08CB;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	string[] strArray;  	BasicSpecies species;  	BasicSpecies species2;  	goto Label_0913;  	Label_08CB:  	species = species2;  	species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  	dictionary2 [species] = int.Parse (strArray [6]);  	population.Species.Add (species);  	dictionary [(int)species.SpeciesID] = species;  	Label_0913:  	if (enumerator2.MoveNext ()) {  		goto Label_09D6;  	}  	goto Label_0023;  	Label_0924:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0969;  	}  	if (2 == 0) {  		goto Label_0924;  	}  	goto Label_09BE;  	Label_0941:  	species2 = new BasicSpecies ();  	species2.SpeciesID = int.Parse (strArray [0]);  	species2.Age = int.Parse (strArray [1]);  	Label_0969:  	species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  	species2.GensNoImprovement = int.Parse (strArray [3]);  	species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  	if ((((uint)num) + ((uint)num2)) >= 0) {  		goto Label_0924;  	}  	Label_09BE:  	if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_09FD;  	}  	Label_09D6:  	str2 = enumerator2.Current;  	strArray = str2.Split (new char[] {  		'''  	});  	goto Label_0941;  	Label_09FD:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_08CB;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	string[] strArray;  	BasicSpecies species;  	BasicSpecies species2;  	goto Label_0913;  	Label_08CB:  	species = species2;  	species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  	dictionary2 [species] = int.Parse (strArray [6]);  	population.Species.Add (species);  	dictionary [(int)species.SpeciesID] = species;  	Label_0913:  	if (enumerator2.MoveNext ()) {  		goto Label_09D6;  	}  	goto Label_0023;  	Label_0924:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0969;  	}  	if (2 == 0) {  		goto Label_0924;  	}  	goto Label_09BE;  	Label_0941:  	species2 = new BasicSpecies ();  	species2.SpeciesID = int.Parse (strArray [0]);  	species2.Age = int.Parse (strArray [1]);  	Label_0969:  	species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  	species2.GensNoImprovement = int.Parse (strArray [3]);  	species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  	if ((((uint)num) + ((uint)num2)) >= 0) {  		goto Label_0924;  	}  	Label_09BE:  	if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_09FD;  	}  	Label_09D6:  	str2 = enumerator2.Current;  	strArray = str2.Split (new char[] {  		'''  	});  	goto Label_0941;  	Label_09FD:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_08CB;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	string[] strArray;  	BasicSpecies species;  	BasicSpecies species2;  	goto Label_0913;  	Label_08CB:  	species = species2;  	species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  	dictionary2 [species] = int.Parse (strArray [6]);  	population.Species.Add (species);  	dictionary [(int)species.SpeciesID] = species;  	Label_0913:  	if (enumerator2.MoveNext ()) {  		goto Label_09D6;  	}  	goto Label_0023;  	Label_0924:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0969;  	}  	if (2 == 0) {  		goto Label_0924;  	}  	goto Label_09BE;  	Label_0941:  	species2 = new BasicSpecies ();  	species2.SpeciesID = int.Parse (strArray [0]);  	species2.Age = int.Parse (strArray [1]);  	Label_0969:  	species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  	species2.GensNoImprovement = int.Parse (strArray [3]);  	species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  	if ((((uint)num) + ((uint)num2)) >= 0) {  		goto Label_0924;  	}  	Label_09BE:  	if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_09FD;  	}  	Label_09D6:  	str2 = enumerator2.Current;  	strArray = str2.Split (new char[] {  		'''  	});  	goto Label_0941;  	Label_09FD:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_08CB;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	string[] strArray;  	BasicSpecies species;  	BasicSpecies species2;  	goto Label_0913;  	Label_08CB:  	species = species2;  	species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  	dictionary2 [species] = int.Parse (strArray [6]);  	population.Species.Add (species);  	dictionary [(int)species.SpeciesID] = species;  	Label_0913:  	if (enumerator2.MoveNext ()) {  		goto Label_09D6;  	}  	goto Label_0023;  	Label_0924:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0969;  	}  	if (2 == 0) {  		goto Label_0924;  	}  	goto Label_09BE;  	Label_0941:  	species2 = new BasicSpecies ();  	species2.SpeciesID = int.Parse (strArray [0]);  	species2.Age = int.Parse (strArray [1]);  	Label_0969:  	species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  	species2.GensNoImprovement = int.Parse (strArray [3]);  	species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  	if ((((uint)num) + ((uint)num2)) >= 0) {  		goto Label_0924;  	}  	Label_09BE:  	if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_09FD;  	}  	Label_09D6:  	str2 = enumerator2.Current;  	strArray = str2.Split (new char[] {  		'''  	});  	goto Label_0941;  	Label_09FD:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_08CB;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	string[] strArray;  	BasicSpecies species;  	BasicSpecies species2;  	goto Label_0913;  	Label_08CB:  	species = species2;  	species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  	dictionary2 [species] = int.Parse (strArray [6]);  	population.Species.Add (species);  	dictionary [(int)species.SpeciesID] = species;  	Label_0913:  	if (enumerator2.MoveNext ()) {  		goto Label_09D6;  	}  	goto Label_0023;  	Label_0924:  	if ((((uint)num2) & 0) != 0) {  		goto Label_0969;  	}  	if (2 == 0) {  		goto Label_0924;  	}  	goto Label_09BE;  	Label_0941:  	species2 = new BasicSpecies ();  	species2.SpeciesID = int.Parse (strArray [0]);  	species2.Age = int.Parse (strArray [1]);  	Label_0969:  	species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  	species2.GensNoImprovement = int.Parse (strArray [3]);  	species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  	if ((((uint)num) + ((uint)num2)) >= 0) {  		goto Label_0924;  	}  	Label_09BE:  	if ((((uint)num2) + ((uint)num)) <= uint.MaxValue) {  		goto Label_09FD;  	}  	Label_09D6:  	str2 = enumerator2.Current;  	strArray = str2.Split (new char[] {  		'''  	});  	goto Label_0941;  	Label_09FD:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_08CB;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: species.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [5]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: dictionary2 [species] = int.Parse (strArray [6]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: if (2 == 0) {  	goto Label_0924;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: species2.BestScore = CSVFormat.EgFormat.Parse (strArray [2]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: species2.GensNoImprovement = int.Parse (strArray [3]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Read,The following statement contains a magic number: species2.SpawnsRequired = CSVFormat.EgFormat.Parse (strArray [4]);  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (0 == 0) {  	population = (NEATPopulation)obj;  	if (-2147483648 != 0) {  		goto Label_05B6;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_05B6;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (IEnumerator<ISpecies> enumerator5 = population.Species.GetEnumerator ()) {  	ISpecies species;  	goto Label_0049;  	Label_0027:  	helper.AddColumn (species.Leader.GenomeID);  	if (-2 == 0) {  		goto Label_000D;  	}  	helper.WriteLine ();  	Label_0049:  	if (enumerator5.MoveNext ()) {  		goto Label_00A2;  	}  	goto Label_000D;  	Label_0054:  	helper.AddColumn (species.BestScore);  	helper.AddColumn (species.GensNoImprovement);  	helper.AddColumn (species.NumToSpawn);  	helper.AddColumn (species.SpawnsRequired);  	goto Label_0027;  	Label_008C:  	helper.AddColumn (species.Age);  	if (0x7fffffff != 0) {  		goto Label_0054;  	}  	goto Label_000D;  	Label_00A2:  	species = enumerator5.Current;  	helper.AddColumn (species.SpeciesID);  	goto Label_008C;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (-2 == 0) {  	goto Label_000D;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator2 = population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_01E0;  	Label_00FA:  	using (List<IGene>.Enumerator enumerator4 = genome2.Links.Genes.GetEnumerator ()) {  		IGene gene3;  		NEATLinkGene gene4;  		goto Label_0129;  		Label_010F:  		if (2 == 0) {  			goto Label_016F;  		}  		helper.AddColumn (gene4.InnovationId);  		helper.WriteLine ();  		Label_0129:  		if (enumerator4.MoveNext ()) {  			goto Label_01C4;  		}  		goto Label_01E0;  		Label_013A:  		helper.AddColumn (gene4.Weight);  		goto Label_010F;  		Label_014C:  		helper.AddColumn (gene4.ToNeuronID);  		if (4 != 0) {  			goto Label_013A;  		}  		goto Label_018C;  		Label_0162:  		helper.AddColumn (gene4.Enabled);  		Label_016F:  		helper.AddColumn (gene4.Recurrent);  		helper.AddColumn (gene4.FromNeuronID);  		if (0 == 0) {  			goto Label_014C;  		}  		Label_018C:  		gene4 = (NEATLinkGene)gene3;  		if (1 != 0) {  		}  		helper.AddColumn ("l");  		helper.AddColumn (gene4.Id);  		goto Label_0162;  		Label_01C4:  		gene3 = enumerator4.Current;  		if (0 == 0) {  			goto Label_018C;  		}  	}  	Label_01E0:  	if (enumerator2.MoveNext ()) {  		goto Label_030A;  	}  	goto Label_0361;  	Label_01F1:  	helper.AddColumn (genome2.AmountToSpawn);  	helper.AddColumn (genome2.NetworkDepth);  	helper.AddColumn (genome2.Score);  	helper.WriteLine ();  	using (List<IGene>.Enumerator enumerator3 = genome2.Neurons.Genes.GetEnumerator ()) {  		IGene gene;  		NEATNeuronGene gene2;  		goto Label_0246;  		Label_0233:  		helper.AddColumn (gene2.SplitY);  		helper.WriteLine ();  		Label_0246:  		if (enumerator3.MoveNext ()) {  			goto Label_02D6;  		}  		if (0 == 0) {  			goto Label_02CF;  		}  		Label_0255:  		helper.AddColumn (gene2.Enabled);  		helper.AddColumn (gene2.InnovationId);  		helper.AddColumn (gene2.ActivationResponse);  		helper.AddColumn (gene2.SplitX);  		goto Label_0233;  		Label_028D:  		gene2 = (NEATNeuronGene)gene;  		helper.AddColumn ("n");  		if (8 != 0) {  		}  		do {  			helper.AddColumn (gene2.Id);  		}  		while (0 != 0);  		helper.AddColumn (NeuronTypeToString (gene2.NeuronType));  		goto Label_0255;  		Label_02CF:  		if (2 != 0) {  			goto Label_00FA;  		}  		Label_02D6:  		gene = enumerator3.Current;  		goto Label_028D;  	}  	goto Label_00FA;  	Label_02FB:  	helper.AddColumn (genome2.AdjustedScore);  	goto Label_0346;  	Label_030A:  	genome = enumerator2.Current;  	genome2 = (NEATGenome)genome;  	if (0 == 0) {  	}  	helper.AddColumn ("g");  	helper.AddColumn (genome2.GenomeID);  	helper.AddColumn (genome2.SpeciesID);  	goto Label_02FB;  	Label_0346:  	if (0 == 0) {  		goto Label_01F1;  	}  	if (0 != 0) {  		goto Label_02FB;  	}  	goto Label_030A;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator2 = population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_01E0;  	Label_00FA:  	using (List<IGene>.Enumerator enumerator4 = genome2.Links.Genes.GetEnumerator ()) {  		IGene gene3;  		NEATLinkGene gene4;  		goto Label_0129;  		Label_010F:  		if (2 == 0) {  			goto Label_016F;  		}  		helper.AddColumn (gene4.InnovationId);  		helper.WriteLine ();  		Label_0129:  		if (enumerator4.MoveNext ()) {  			goto Label_01C4;  		}  		goto Label_01E0;  		Label_013A:  		helper.AddColumn (gene4.Weight);  		goto Label_010F;  		Label_014C:  		helper.AddColumn (gene4.ToNeuronID);  		if (4 != 0) {  			goto Label_013A;  		}  		goto Label_018C;  		Label_0162:  		helper.AddColumn (gene4.Enabled);  		Label_016F:  		helper.AddColumn (gene4.Recurrent);  		helper.AddColumn (gene4.FromNeuronID);  		if (0 == 0) {  			goto Label_014C;  		}  		Label_018C:  		gene4 = (NEATLinkGene)gene3;  		if (1 != 0) {  		}  		helper.AddColumn ("l");  		helper.AddColumn (gene4.Id);  		goto Label_0162;  		Label_01C4:  		gene3 = enumerator4.Current;  		if (0 == 0) {  			goto Label_018C;  		}  	}  	Label_01E0:  	if (enumerator2.MoveNext ()) {  		goto Label_030A;  	}  	goto Label_0361;  	Label_01F1:  	helper.AddColumn (genome2.AmountToSpawn);  	helper.AddColumn (genome2.NetworkDepth);  	helper.AddColumn (genome2.Score);  	helper.WriteLine ();  	using (List<IGene>.Enumerator enumerator3 = genome2.Neurons.Genes.GetEnumerator ()) {  		IGene gene;  		NEATNeuronGene gene2;  		goto Label_0246;  		Label_0233:  		helper.AddColumn (gene2.SplitY);  		helper.WriteLine ();  		Label_0246:  		if (enumerator3.MoveNext ()) {  			goto Label_02D6;  		}  		if (0 == 0) {  			goto Label_02CF;  		}  		Label_0255:  		helper.AddColumn (gene2.Enabled);  		helper.AddColumn (gene2.InnovationId);  		helper.AddColumn (gene2.ActivationResponse);  		helper.AddColumn (gene2.SplitX);  		goto Label_0233;  		Label_028D:  		gene2 = (NEATNeuronGene)gene;  		helper.AddColumn ("n");  		if (8 != 0) {  		}  		do {  			helper.AddColumn (gene2.Id);  		}  		while (0 != 0);  		helper.AddColumn (NeuronTypeToString (gene2.NeuronType));  		goto Label_0255;  		Label_02CF:  		if (2 != 0) {  			goto Label_00FA;  		}  		Label_02D6:  		gene = enumerator3.Current;  		goto Label_028D;  	}  	goto Label_00FA;  	Label_02FB:  	helper.AddColumn (genome2.AdjustedScore);  	goto Label_0346;  	Label_030A:  	genome = enumerator2.Current;  	genome2 = (NEATGenome)genome;  	if (0 == 0) {  	}  	helper.AddColumn ("g");  	helper.AddColumn (genome2.GenomeID);  	helper.AddColumn (genome2.SpeciesID);  	goto Label_02FB;  	Label_0346:  	if (0 == 0) {  		goto Label_01F1;  	}  	if (0 != 0) {  		goto Label_02FB;  	}  	goto Label_030A;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator2 = population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_01E0;  	Label_00FA:  	using (List<IGene>.Enumerator enumerator4 = genome2.Links.Genes.GetEnumerator ()) {  		IGene gene3;  		NEATLinkGene gene4;  		goto Label_0129;  		Label_010F:  		if (2 == 0) {  			goto Label_016F;  		}  		helper.AddColumn (gene4.InnovationId);  		helper.WriteLine ();  		Label_0129:  		if (enumerator4.MoveNext ()) {  			goto Label_01C4;  		}  		goto Label_01E0;  		Label_013A:  		helper.AddColumn (gene4.Weight);  		goto Label_010F;  		Label_014C:  		helper.AddColumn (gene4.ToNeuronID);  		if (4 != 0) {  			goto Label_013A;  		}  		goto Label_018C;  		Label_0162:  		helper.AddColumn (gene4.Enabled);  		Label_016F:  		helper.AddColumn (gene4.Recurrent);  		helper.AddColumn (gene4.FromNeuronID);  		if (0 == 0) {  			goto Label_014C;  		}  		Label_018C:  		gene4 = (NEATLinkGene)gene3;  		if (1 != 0) {  		}  		helper.AddColumn ("l");  		helper.AddColumn (gene4.Id);  		goto Label_0162;  		Label_01C4:  		gene3 = enumerator4.Current;  		if (0 == 0) {  			goto Label_018C;  		}  	}  	Label_01E0:  	if (enumerator2.MoveNext ()) {  		goto Label_030A;  	}  	goto Label_0361;  	Label_01F1:  	helper.AddColumn (genome2.AmountToSpawn);  	helper.AddColumn (genome2.NetworkDepth);  	helper.AddColumn (genome2.Score);  	helper.WriteLine ();  	using (List<IGene>.Enumerator enumerator3 = genome2.Neurons.Genes.GetEnumerator ()) {  		IGene gene;  		NEATNeuronGene gene2;  		goto Label_0246;  		Label_0233:  		helper.AddColumn (gene2.SplitY);  		helper.WriteLine ();  		Label_0246:  		if (enumerator3.MoveNext ()) {  			goto Label_02D6;  		}  		if (0 == 0) {  			goto Label_02CF;  		}  		Label_0255:  		helper.AddColumn (gene2.Enabled);  		helper.AddColumn (gene2.InnovationId);  		helper.AddColumn (gene2.ActivationResponse);  		helper.AddColumn (gene2.SplitX);  		goto Label_0233;  		Label_028D:  		gene2 = (NEATNeuronGene)gene;  		helper.AddColumn ("n");  		if (8 != 0) {  		}  		do {  			helper.AddColumn (gene2.Id);  		}  		while (0 != 0);  		helper.AddColumn (NeuronTypeToString (gene2.NeuronType));  		goto Label_0255;  		Label_02CF:  		if (2 != 0) {  			goto Label_00FA;  		}  		Label_02D6:  		gene = enumerator3.Current;  		goto Label_028D;  	}  	goto Label_00FA;  	Label_02FB:  	helper.AddColumn (genome2.AdjustedScore);  	goto Label_0346;  	Label_030A:  	genome = enumerator2.Current;  	genome2 = (NEATGenome)genome;  	if (0 == 0) {  	}  	helper.AddColumn ("g");  	helper.AddColumn (genome2.GenomeID);  	helper.AddColumn (genome2.SpeciesID);  	goto Label_02FB;  	Label_0346:  	if (0 == 0) {  		goto Label_01F1;  	}  	if (0 != 0) {  		goto Label_02FB;  	}  	goto Label_030A;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator2 = population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_01E0;  	Label_00FA:  	using (List<IGene>.Enumerator enumerator4 = genome2.Links.Genes.GetEnumerator ()) {  		IGene gene3;  		NEATLinkGene gene4;  		goto Label_0129;  		Label_010F:  		if (2 == 0) {  			goto Label_016F;  		}  		helper.AddColumn (gene4.InnovationId);  		helper.WriteLine ();  		Label_0129:  		if (enumerator4.MoveNext ()) {  			goto Label_01C4;  		}  		goto Label_01E0;  		Label_013A:  		helper.AddColumn (gene4.Weight);  		goto Label_010F;  		Label_014C:  		helper.AddColumn (gene4.ToNeuronID);  		if (4 != 0) {  			goto Label_013A;  		}  		goto Label_018C;  		Label_0162:  		helper.AddColumn (gene4.Enabled);  		Label_016F:  		helper.AddColumn (gene4.Recurrent);  		helper.AddColumn (gene4.FromNeuronID);  		if (0 == 0) {  			goto Label_014C;  		}  		Label_018C:  		gene4 = (NEATLinkGene)gene3;  		if (1 != 0) {  		}  		helper.AddColumn ("l");  		helper.AddColumn (gene4.Id);  		goto Label_0162;  		Label_01C4:  		gene3 = enumerator4.Current;  		if (0 == 0) {  			goto Label_018C;  		}  	}  	Label_01E0:  	if (enumerator2.MoveNext ()) {  		goto Label_030A;  	}  	goto Label_0361;  	Label_01F1:  	helper.AddColumn (genome2.AmountToSpawn);  	helper.AddColumn (genome2.NetworkDepth);  	helper.AddColumn (genome2.Score);  	helper.WriteLine ();  	using (List<IGene>.Enumerator enumerator3 = genome2.Neurons.Genes.GetEnumerator ()) {  		IGene gene;  		NEATNeuronGene gene2;  		goto Label_0246;  		Label_0233:  		helper.AddColumn (gene2.SplitY);  		helper.WriteLine ();  		Label_0246:  		if (enumerator3.MoveNext ()) {  			goto Label_02D6;  		}  		if (0 == 0) {  			goto Label_02CF;  		}  		Label_0255:  		helper.AddColumn (gene2.Enabled);  		helper.AddColumn (gene2.InnovationId);  		helper.AddColumn (gene2.ActivationResponse);  		helper.AddColumn (gene2.SplitX);  		goto Label_0233;  		Label_028D:  		gene2 = (NEATNeuronGene)gene;  		helper.AddColumn ("n");  		if (8 != 0) {  		}  		do {  			helper.AddColumn (gene2.Id);  		}  		while (0 != 0);  		helper.AddColumn (NeuronTypeToString (gene2.NeuronType));  		goto Label_0255;  		Label_02CF:  		if (2 != 0) {  			goto Label_00FA;  		}  		Label_02D6:  		gene = enumerator3.Current;  		goto Label_028D;  	}  	goto Label_00FA;  	Label_02FB:  	helper.AddColumn (genome2.AdjustedScore);  	goto Label_0346;  	Label_030A:  	genome = enumerator2.Current;  	genome2 = (NEATGenome)genome;  	if (0 == 0) {  	}  	helper.AddColumn ("g");  	helper.AddColumn (genome2.GenomeID);  	helper.AddColumn (genome2.SpeciesID);  	goto Label_02FB;  	Label_0346:  	if (0 == 0) {  		goto Label_01F1;  	}  	if (0 != 0) {  		goto Label_02FB;  	}  	goto Label_030A;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator4 = genome2.Links.Genes.GetEnumerator ()) {  	IGene gene3;  	NEATLinkGene gene4;  	goto Label_0129;  	Label_010F:  	if (2 == 0) {  		goto Label_016F;  	}  	helper.AddColumn (gene4.InnovationId);  	helper.WriteLine ();  	Label_0129:  	if (enumerator4.MoveNext ()) {  		goto Label_01C4;  	}  	goto Label_01E0;  	Label_013A:  	helper.AddColumn (gene4.Weight);  	goto Label_010F;  	Label_014C:  	helper.AddColumn (gene4.ToNeuronID);  	if (4 != 0) {  		goto Label_013A;  	}  	goto Label_018C;  	Label_0162:  	helper.AddColumn (gene4.Enabled);  	Label_016F:  	helper.AddColumn (gene4.Recurrent);  	helper.AddColumn (gene4.FromNeuronID);  	if (0 == 0) {  		goto Label_014C;  	}  	Label_018C:  	gene4 = (NEATLinkGene)gene3;  	if (1 != 0) {  	}  	helper.AddColumn ("l");  	helper.AddColumn (gene4.Id);  	goto Label_0162;  	Label_01C4:  	gene3 = enumerator4.Current;  	if (0 == 0) {  		goto Label_018C;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator4 = genome2.Links.Genes.GetEnumerator ()) {  	IGene gene3;  	NEATLinkGene gene4;  	goto Label_0129;  	Label_010F:  	if (2 == 0) {  		goto Label_016F;  	}  	helper.AddColumn (gene4.InnovationId);  	helper.WriteLine ();  	Label_0129:  	if (enumerator4.MoveNext ()) {  		goto Label_01C4;  	}  	goto Label_01E0;  	Label_013A:  	helper.AddColumn (gene4.Weight);  	goto Label_010F;  	Label_014C:  	helper.AddColumn (gene4.ToNeuronID);  	if (4 != 0) {  		goto Label_013A;  	}  	goto Label_018C;  	Label_0162:  	helper.AddColumn (gene4.Enabled);  	Label_016F:  	helper.AddColumn (gene4.Recurrent);  	helper.AddColumn (gene4.FromNeuronID);  	if (0 == 0) {  		goto Label_014C;  	}  	Label_018C:  	gene4 = (NEATLinkGene)gene3;  	if (1 != 0) {  	}  	helper.AddColumn ("l");  	helper.AddColumn (gene4.Id);  	goto Label_0162;  	Label_01C4:  	gene3 = enumerator4.Current;  	if (0 == 0) {  		goto Label_018C;  	}  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (2 == 0) {  	goto Label_016F;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (4 != 0) {  	goto Label_013A;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator3 = genome2.Neurons.Genes.GetEnumerator ()) {  	IGene gene;  	NEATNeuronGene gene2;  	goto Label_0246;  	Label_0233:  	helper.AddColumn (gene2.SplitY);  	helper.WriteLine ();  	Label_0246:  	if (enumerator3.MoveNext ()) {  		goto Label_02D6;  	}  	if (0 == 0) {  		goto Label_02CF;  	}  	Label_0255:  	helper.AddColumn (gene2.Enabled);  	helper.AddColumn (gene2.InnovationId);  	helper.AddColumn (gene2.ActivationResponse);  	helper.AddColumn (gene2.SplitX);  	goto Label_0233;  	Label_028D:  	gene2 = (NEATNeuronGene)gene;  	helper.AddColumn ("n");  	if (8 != 0) {  	}  	do {  		helper.AddColumn (gene2.Id);  	}  	while (0 != 0);  	helper.AddColumn (NeuronTypeToString (gene2.NeuronType));  	goto Label_0255;  	Label_02CF:  	if (2 != 0) {  		goto Label_00FA;  	}  	Label_02D6:  	gene = enumerator3.Current;  	goto Label_028D;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator3 = genome2.Neurons.Genes.GetEnumerator ()) {  	IGene gene;  	NEATNeuronGene gene2;  	goto Label_0246;  	Label_0233:  	helper.AddColumn (gene2.SplitY);  	helper.WriteLine ();  	Label_0246:  	if (enumerator3.MoveNext ()) {  		goto Label_02D6;  	}  	if (0 == 0) {  		goto Label_02CF;  	}  	Label_0255:  	helper.AddColumn (gene2.Enabled);  	helper.AddColumn (gene2.InnovationId);  	helper.AddColumn (gene2.ActivationResponse);  	helper.AddColumn (gene2.SplitX);  	goto Label_0233;  	Label_028D:  	gene2 = (NEATNeuronGene)gene;  	helper.AddColumn ("n");  	if (8 != 0) {  	}  	do {  		helper.AddColumn (gene2.Id);  	}  	while (0 != 0);  	helper.AddColumn (NeuronTypeToString (gene2.NeuronType));  	goto Label_0255;  	Label_02CF:  	if (2 != 0) {  		goto Label_00FA;  	}  	Label_02D6:  	gene = enumerator3.Current;  	goto Label_028D;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (2 != 0) {  	goto Label_00FA;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: using (IEnumerator<IInnovation> enumerator = population.Innovations.Innovations.GetEnumerator ()) {  	IInnovation innovation;  	NEATInnovation innovation2;  	goto Label_03CC;  	Label_03C6:  	helper.WriteLine ();  	Label_03CC:  	if (enumerator.MoveNext ()) {  		goto Label_0452;  	}  	goto Label_00DD;  	Label_03DA:  	helper.AddColumn (innovation2.SplitY);  	helper.AddColumn (innovation2.NeuronID);  	helper.AddColumn (innovation2.FromNeuronID);  	helper.AddColumn (innovation2.ToNeuronID);  	goto Label_03C6;  	Label_040C:  	if (0 != 0) {  		goto Label_03CC;  	}  	helper.AddColumn (innovation2.InnovationID);  	helper.AddColumn (InnovationTypeToString (innovation2.InnovationType));  	helper.AddColumn (NeuronTypeToString (innovation2.NeuronType));  	helper.AddColumn (innovation2.SplitX);  	goto Label_03DA;  	Label_0452:  	innovation = enumerator.Current;  	innovation2 = (NEATInnovation)innovation;  	if (3 != 0) {  		goto Label_040C;  	}  	goto Label_00DD;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (3 != 0) {  	goto Label_040C;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_000D;  }  
Magic Number,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,Save,The following statement contains a magic number: if (2 != 0) {  	helper.WriteProperty ("inputCount"' population.InputCount);  	helper.WriteProperty ("outputCount"' population.OutputCount);  	helper.WriteProperty ("oldAgePenalty"' population.OldAgePenalty);  }  
Magic Number,Encog.Neural.NEAT,NEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATPopulation.cs,NEATPopulation,The following statement contains a magic number: if ((-2147483648 != 0) && (populationSize != 0)) {  	num = 0;  	if ((((uint)num) - ((uint)populationSize)) <= uint.MaxValue) {  		goto Label_0010;  	}  	goto Label_0086;  }  
Magic Number,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,String2NeuronType,The following statement contains a magic number: switch (num) {  case 0x68:  	return NEATNeuronType.Hidden;  case 0x69:  	return NEATNeuronType.Input;  default:  	switch (num) {  	case 110:  		return NEATNeuronType.None;  	case 0x6f:  		return NEATNeuronType.Output;  	}  	break;  }  
Magic Number,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,String2NeuronType,The following statement contains a magic number: switch (num) {  case 110:  	return NEATNeuronType.None;  case 0x6f:  	return NEATNeuronType.Output;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT")) {  	while (section.SubSectionName.Equals ("LINKS")) {  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list2;  			NEATNeuron neuron3;  			NEATLink link;  			goto Label_007D;  			Label_005B:  			if ((((uint)num6) & 0) != 0) {  				goto Label_00D5;  			}  			neuron3.InboundLinks.Add (link);  			Label_007D:  			if (enumerator3.MoveNext ()) {  				goto Label_00FA;  			}  			if ((((uint)num2) + ((uint)num3)) >= 0) {  				goto Label_0023;  			}  			Label_009E:  			num7 = CSVFormat.EgFormat.Parse (list2 [3]);  			NEATNeuron fromNeuron = dictionary [num5];  			neuron3 = dictionary [num6];  			link = new NEATLink (num7' fromNeuron' neuron3' flag);  			Label_00D5:  			fromNeuron.OutputboundLinks.Add (link);  			if (((uint)num3) >= 0) {  				goto Label_005B;  			}  			goto Label_0023;  			Label_00FA:  			str3 = enumerator3.Current;  			list2 = EncogFileSection.SplitColumns (str3);  			num5 = int.Parse (list2 [0]);  			if (-2 != 0) {  			}  			num6 = int.Parse (list2 [1]);  			flag = int.Parse (list2 [2]) > 0;  			goto Label_009E;  		}  	}  	if (((uint)num7) >= 0) {  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT")) {  	while (section.SubSectionName.Equals ("LINKS")) {  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list2;  			NEATNeuron neuron3;  			NEATLink link;  			goto Label_007D;  			Label_005B:  			if ((((uint)num6) & 0) != 0) {  				goto Label_00D5;  			}  			neuron3.InboundLinks.Add (link);  			Label_007D:  			if (enumerator3.MoveNext ()) {  				goto Label_00FA;  			}  			if ((((uint)num2) + ((uint)num3)) >= 0) {  				goto Label_0023;  			}  			Label_009E:  			num7 = CSVFormat.EgFormat.Parse (list2 [3]);  			NEATNeuron fromNeuron = dictionary [num5];  			neuron3 = dictionary [num6];  			link = new NEATLink (num7' fromNeuron' neuron3' flag);  			Label_00D5:  			fromNeuron.OutputboundLinks.Add (link);  			if (((uint)num3) >= 0) {  				goto Label_005B;  			}  			goto Label_0023;  			Label_00FA:  			str3 = enumerator3.Current;  			list2 = EncogFileSection.SplitColumns (str3);  			num5 = int.Parse (list2 [0]);  			if (-2 != 0) {  			}  			num6 = int.Parse (list2 [1]);  			flag = int.Parse (list2 [2]) > 0;  			goto Label_009E;  		}  	}  	if (((uint)num7) >= 0) {  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT")) {  	while (section.SubSectionName.Equals ("LINKS")) {  		using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  			string str3;  			IList<string> list2;  			NEATNeuron neuron3;  			NEATLink link;  			goto Label_007D;  			Label_005B:  			if ((((uint)num6) & 0) != 0) {  				goto Label_00D5;  			}  			neuron3.InboundLinks.Add (link);  			Label_007D:  			if (enumerator3.MoveNext ()) {  				goto Label_00FA;  			}  			if ((((uint)num2) + ((uint)num3)) >= 0) {  				goto Label_0023;  			}  			Label_009E:  			num7 = CSVFormat.EgFormat.Parse (list2 [3]);  			NEATNeuron fromNeuron = dictionary [num5];  			neuron3 = dictionary [num6];  			link = new NEATLink (num7' fromNeuron' neuron3' flag);  			Label_00D5:  			fromNeuron.OutputboundLinks.Add (link);  			if (((uint)num3) >= 0) {  				goto Label_005B;  			}  			goto Label_0023;  			Label_00FA:  			str3 = enumerator3.Current;  			list2 = EncogFileSection.SplitColumns (str3);  			num5 = int.Parse (list2 [0]);  			if (-2 != 0) {  			}  			num6 = int.Parse (list2 [1]);  			flag = int.Parse (list2 [2]) > 0;  			goto Label_009E;  		}  	}  	if (((uint)num7) >= 0) {  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: while (section.SubSectionName.Equals ("LINKS")) {  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list2;  		NEATNeuron neuron3;  		NEATLink link;  		goto Label_007D;  		Label_005B:  		if ((((uint)num6) & 0) != 0) {  			goto Label_00D5;  		}  		neuron3.InboundLinks.Add (link);  		Label_007D:  		if (enumerator3.MoveNext ()) {  			goto Label_00FA;  		}  		if ((((uint)num2) + ((uint)num3)) >= 0) {  			goto Label_0023;  		}  		Label_009E:  		num7 = CSVFormat.EgFormat.Parse (list2 [3]);  		NEATNeuron fromNeuron = dictionary [num5];  		neuron3 = dictionary [num6];  		link = new NEATLink (num7' fromNeuron' neuron3' flag);  		Label_00D5:  		fromNeuron.OutputboundLinks.Add (link);  		if (((uint)num3) >= 0) {  			goto Label_005B;  		}  		goto Label_0023;  		Label_00FA:  		str3 = enumerator3.Current;  		list2 = EncogFileSection.SplitColumns (str3);  		num5 = int.Parse (list2 [0]);  		if (-2 != 0) {  		}  		num6 = int.Parse (list2 [1]);  		flag = int.Parse (list2 [2]) > 0;  		goto Label_009E;  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: while (section.SubSectionName.Equals ("LINKS")) {  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list2;  		NEATNeuron neuron3;  		NEATLink link;  		goto Label_007D;  		Label_005B:  		if ((((uint)num6) & 0) != 0) {  			goto Label_00D5;  		}  		neuron3.InboundLinks.Add (link);  		Label_007D:  		if (enumerator3.MoveNext ()) {  			goto Label_00FA;  		}  		if ((((uint)num2) + ((uint)num3)) >= 0) {  			goto Label_0023;  		}  		Label_009E:  		num7 = CSVFormat.EgFormat.Parse (list2 [3]);  		NEATNeuron fromNeuron = dictionary [num5];  		neuron3 = dictionary [num6];  		link = new NEATLink (num7' fromNeuron' neuron3' flag);  		Label_00D5:  		fromNeuron.OutputboundLinks.Add (link);  		if (((uint)num3) >= 0) {  			goto Label_005B;  		}  		goto Label_0023;  		Label_00FA:  		str3 = enumerator3.Current;  		list2 = EncogFileSection.SplitColumns (str3);  		num5 = int.Parse (list2 [0]);  		if (-2 != 0) {  		}  		num6 = int.Parse (list2 [1]);  		flag = int.Parse (list2 [2]) > 0;  		goto Label_009E;  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: while (section.SubSectionName.Equals ("LINKS")) {  	using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  		string str3;  		IList<string> list2;  		NEATNeuron neuron3;  		NEATLink link;  		goto Label_007D;  		Label_005B:  		if ((((uint)num6) & 0) != 0) {  			goto Label_00D5;  		}  		neuron3.InboundLinks.Add (link);  		Label_007D:  		if (enumerator3.MoveNext ()) {  			goto Label_00FA;  		}  		if ((((uint)num2) + ((uint)num3)) >= 0) {  			goto Label_0023;  		}  		Label_009E:  		num7 = CSVFormat.EgFormat.Parse (list2 [3]);  		NEATNeuron fromNeuron = dictionary [num5];  		neuron3 = dictionary [num6];  		link = new NEATLink (num7' fromNeuron' neuron3' flag);  		Label_00D5:  		fromNeuron.OutputboundLinks.Add (link);  		if (((uint)num3) >= 0) {  			goto Label_005B;  		}  		goto Label_0023;  		Label_00FA:  		str3 = enumerator3.Current;  		list2 = EncogFileSection.SplitColumns (str3);  		num5 = int.Parse (list2 [0]);  		if (-2 != 0) {  		}  		num6 = int.Parse (list2 [1]);  		flag = int.Parse (list2 [2]) > 0;  		goto Label_009E;  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list2;  	NEATNeuron neuron3;  	NEATLink link;  	goto Label_007D;  	Label_005B:  	if ((((uint)num6) & 0) != 0) {  		goto Label_00D5;  	}  	neuron3.InboundLinks.Add (link);  	Label_007D:  	if (enumerator3.MoveNext ()) {  		goto Label_00FA;  	}  	if ((((uint)num2) + ((uint)num3)) >= 0) {  		goto Label_0023;  	}  	Label_009E:  	num7 = CSVFormat.EgFormat.Parse (list2 [3]);  	NEATNeuron fromNeuron = dictionary [num5];  	neuron3 = dictionary [num6];  	link = new NEATLink (num7' fromNeuron' neuron3' flag);  	Label_00D5:  	fromNeuron.OutputboundLinks.Add (link);  	if (((uint)num3) >= 0) {  		goto Label_005B;  	}  	goto Label_0023;  	Label_00FA:  	str3 = enumerator3.Current;  	list2 = EncogFileSection.SplitColumns (str3);  	num5 = int.Parse (list2 [0]);  	if (-2 != 0) {  	}  	num6 = int.Parse (list2 [1]);  	flag = int.Parse (list2 [2]) > 0;  	goto Label_009E;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list2;  	NEATNeuron neuron3;  	NEATLink link;  	goto Label_007D;  	Label_005B:  	if ((((uint)num6) & 0) != 0) {  		goto Label_00D5;  	}  	neuron3.InboundLinks.Add (link);  	Label_007D:  	if (enumerator3.MoveNext ()) {  		goto Label_00FA;  	}  	if ((((uint)num2) + ((uint)num3)) >= 0) {  		goto Label_0023;  	}  	Label_009E:  	num7 = CSVFormat.EgFormat.Parse (list2 [3]);  	NEATNeuron fromNeuron = dictionary [num5];  	neuron3 = dictionary [num6];  	link = new NEATLink (num7' fromNeuron' neuron3' flag);  	Label_00D5:  	fromNeuron.OutputboundLinks.Add (link);  	if (((uint)num3) >= 0) {  		goto Label_005B;  	}  	goto Label_0023;  	Label_00FA:  	str3 = enumerator3.Current;  	list2 = EncogFileSection.SplitColumns (str3);  	num5 = int.Parse (list2 [0]);  	if (-2 != 0) {  	}  	num6 = int.Parse (list2 [1]);  	flag = int.Parse (list2 [2]) > 0;  	goto Label_009E;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator3 = section.Lines.GetEnumerator ()) {  	string str3;  	IList<string> list2;  	NEATNeuron neuron3;  	NEATLink link;  	goto Label_007D;  	Label_005B:  	if ((((uint)num6) & 0) != 0) {  		goto Label_00D5;  	}  	neuron3.InboundLinks.Add (link);  	Label_007D:  	if (enumerator3.MoveNext ()) {  		goto Label_00FA;  	}  	if ((((uint)num2) + ((uint)num3)) >= 0) {  		goto Label_0023;  	}  	Label_009E:  	num7 = CSVFormat.EgFormat.Parse (list2 [3]);  	NEATNeuron fromNeuron = dictionary [num5];  	neuron3 = dictionary [num6];  	link = new NEATLink (num7' fromNeuron' neuron3' flag);  	Label_00D5:  	fromNeuron.OutputboundLinks.Add (link);  	if (((uint)num3) >= 0) {  		goto Label_005B;  	}  	goto Label_0023;  	Label_00FA:  	str3 = enumerator3.Current;  	list2 = EncogFileSection.SplitColumns (str3);  	num5 = int.Parse (list2 [0]);  	if (-2 != 0) {  	}  	num6 = int.Parse (list2 [1]);  	flag = int.Parse (list2 [2]) > 0;  	goto Label_009E;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: num7 = CSVFormat.EgFormat.Parse (list2 [3]);  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (-2 != 0) {  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: flag = int.Parse (list2 [2]) > 0;  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (!section.SectionName.Equals ("NEAT") || !section.SubSectionName.Equals ("NETWORK")) {  	if (section.SectionName.Equals ("NEAT") && section.SubSectionName.Equals ("NEURONS")) {  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			IList<string> list;  			long num;  			NEATNeuronType type;  			NEATNeuron neuron;  			Label_01BD:  			if (enumerator2.MoveNext ()) {  				goto Label_0257;  			}  			goto Label_0023;  			Label_01CE:  			if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  				goto Label_02A0;  			}  			network.Neurons.Add (neuron);  			dictionary [(int)num] = neuron;  			goto Label_02D0;  			Label_0206:  			num3 = CSVFormat.EgFormat.Parse (list [3]);  			double num4 = CSVFormat.EgFormat.Parse (list [4]);  			neuron = new NEATNeuron (type' num' num3' num4' num2);  			if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  				goto Label_02B9;  			}  			Label_0257:  			str2 = enumerator2.Current;  			do {  				list = EncogFileSection.SplitColumns (str2);  				num = int.Parse (list [0]);  				type = PersistNEATPopulation.StringToNeuronType (list [1]);  			}  			while ((((uint)num) + ((uint)num5)) < 0);  			Label_02A0:  			num2 = CSVFormat.EgFormat.Parse (list [2]);  			goto Label_0206;  			Label_02B9:  			if ((((uint)num3) & 0) == 0) {  				goto Label_01CE;  			}  			Label_02D0:  			if ((((uint)num6) - ((uint)num4)) >= 0) {  				goto Label_01BD;  			}  			goto Label_0023;  		}  	}  	goto Label_0035;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (!section.SectionName.Equals ("NEAT") || !section.SubSectionName.Equals ("NETWORK")) {  	if (section.SectionName.Equals ("NEAT") && section.SubSectionName.Equals ("NEURONS")) {  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			IList<string> list;  			long num;  			NEATNeuronType type;  			NEATNeuron neuron;  			Label_01BD:  			if (enumerator2.MoveNext ()) {  				goto Label_0257;  			}  			goto Label_0023;  			Label_01CE:  			if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  				goto Label_02A0;  			}  			network.Neurons.Add (neuron);  			dictionary [(int)num] = neuron;  			goto Label_02D0;  			Label_0206:  			num3 = CSVFormat.EgFormat.Parse (list [3]);  			double num4 = CSVFormat.EgFormat.Parse (list [4]);  			neuron = new NEATNeuron (type' num' num3' num4' num2);  			if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  				goto Label_02B9;  			}  			Label_0257:  			str2 = enumerator2.Current;  			do {  				list = EncogFileSection.SplitColumns (str2);  				num = int.Parse (list [0]);  				type = PersistNEATPopulation.StringToNeuronType (list [1]);  			}  			while ((((uint)num) + ((uint)num5)) < 0);  			Label_02A0:  			num2 = CSVFormat.EgFormat.Parse (list [2]);  			goto Label_0206;  			Label_02B9:  			if ((((uint)num3) & 0) == 0) {  				goto Label_01CE;  			}  			Label_02D0:  			if ((((uint)num6) - ((uint)num4)) >= 0) {  				goto Label_01BD;  			}  			goto Label_0023;  		}  	}  	goto Label_0035;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (!section.SectionName.Equals ("NEAT") || !section.SubSectionName.Equals ("NETWORK")) {  	if (section.SectionName.Equals ("NEAT") && section.SubSectionName.Equals ("NEURONS")) {  		using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  			string str2;  			IList<string> list;  			long num;  			NEATNeuronType type;  			NEATNeuron neuron;  			Label_01BD:  			if (enumerator2.MoveNext ()) {  				goto Label_0257;  			}  			goto Label_0023;  			Label_01CE:  			if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  				goto Label_02A0;  			}  			network.Neurons.Add (neuron);  			dictionary [(int)num] = neuron;  			goto Label_02D0;  			Label_0206:  			num3 = CSVFormat.EgFormat.Parse (list [3]);  			double num4 = CSVFormat.EgFormat.Parse (list [4]);  			neuron = new NEATNeuron (type' num' num3' num4' num2);  			if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  				goto Label_02B9;  			}  			Label_0257:  			str2 = enumerator2.Current;  			do {  				list = EncogFileSection.SplitColumns (str2);  				num = int.Parse (list [0]);  				type = PersistNEATPopulation.StringToNeuronType (list [1]);  			}  			while ((((uint)num) + ((uint)num5)) < 0);  			Label_02A0:  			num2 = CSVFormat.EgFormat.Parse (list [2]);  			goto Label_0206;  			Label_02B9:  			if ((((uint)num3) & 0) == 0) {  				goto Label_01CE;  			}  			Label_02D0:  			if ((((uint)num6) - ((uint)num4)) >= 0) {  				goto Label_01BD;  			}  			goto Label_0023;  		}  	}  	goto Label_0035;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT") && section.SubSectionName.Equals ("NEURONS")) {  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		IList<string> list;  		long num;  		NEATNeuronType type;  		NEATNeuron neuron;  		Label_01BD:  		if (enumerator2.MoveNext ()) {  			goto Label_0257;  		}  		goto Label_0023;  		Label_01CE:  		if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  			goto Label_02A0;  		}  		network.Neurons.Add (neuron);  		dictionary [(int)num] = neuron;  		goto Label_02D0;  		Label_0206:  		num3 = CSVFormat.EgFormat.Parse (list [3]);  		double num4 = CSVFormat.EgFormat.Parse (list [4]);  		neuron = new NEATNeuron (type' num' num3' num4' num2);  		if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  			goto Label_02B9;  		}  		Label_0257:  		str2 = enumerator2.Current;  		do {  			list = EncogFileSection.SplitColumns (str2);  			num = int.Parse (list [0]);  			type = PersistNEATPopulation.StringToNeuronType (list [1]);  		}  		while ((((uint)num) + ((uint)num5)) < 0);  		Label_02A0:  		num2 = CSVFormat.EgFormat.Parse (list [2]);  		goto Label_0206;  		Label_02B9:  		if ((((uint)num3) & 0) == 0) {  			goto Label_01CE;  		}  		Label_02D0:  		if ((((uint)num6) - ((uint)num4)) >= 0) {  			goto Label_01BD;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT") && section.SubSectionName.Equals ("NEURONS")) {  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		IList<string> list;  		long num;  		NEATNeuronType type;  		NEATNeuron neuron;  		Label_01BD:  		if (enumerator2.MoveNext ()) {  			goto Label_0257;  		}  		goto Label_0023;  		Label_01CE:  		if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  			goto Label_02A0;  		}  		network.Neurons.Add (neuron);  		dictionary [(int)num] = neuron;  		goto Label_02D0;  		Label_0206:  		num3 = CSVFormat.EgFormat.Parse (list [3]);  		double num4 = CSVFormat.EgFormat.Parse (list [4]);  		neuron = new NEATNeuron (type' num' num3' num4' num2);  		if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  			goto Label_02B9;  		}  		Label_0257:  		str2 = enumerator2.Current;  		do {  			list = EncogFileSection.SplitColumns (str2);  			num = int.Parse (list [0]);  			type = PersistNEATPopulation.StringToNeuronType (list [1]);  		}  		while ((((uint)num) + ((uint)num5)) < 0);  		Label_02A0:  		num2 = CSVFormat.EgFormat.Parse (list [2]);  		goto Label_0206;  		Label_02B9:  		if ((((uint)num3) & 0) == 0) {  			goto Label_01CE;  		}  		Label_02D0:  		if ((((uint)num6) - ((uint)num4)) >= 0) {  			goto Label_01BD;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: if (section.SectionName.Equals ("NEAT") && section.SubSectionName.Equals ("NEURONS")) {  	using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  		string str2;  		IList<string> list;  		long num;  		NEATNeuronType type;  		NEATNeuron neuron;  		Label_01BD:  		if (enumerator2.MoveNext ()) {  			goto Label_0257;  		}  		goto Label_0023;  		Label_01CE:  		if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  			goto Label_02A0;  		}  		network.Neurons.Add (neuron);  		dictionary [(int)num] = neuron;  		goto Label_02D0;  		Label_0206:  		num3 = CSVFormat.EgFormat.Parse (list [3]);  		double num4 = CSVFormat.EgFormat.Parse (list [4]);  		neuron = new NEATNeuron (type' num' num3' num4' num2);  		if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  			goto Label_02B9;  		}  		Label_0257:  		str2 = enumerator2.Current;  		do {  			list = EncogFileSection.SplitColumns (str2);  			num = int.Parse (list [0]);  			type = PersistNEATPopulation.StringToNeuronType (list [1]);  		}  		while ((((uint)num) + ((uint)num5)) < 0);  		Label_02A0:  		num2 = CSVFormat.EgFormat.Parse (list [2]);  		goto Label_0206;  		Label_02B9:  		if ((((uint)num3) & 0) == 0) {  			goto Label_01CE;  		}  		Label_02D0:  		if ((((uint)num6) - ((uint)num4)) >= 0) {  			goto Label_01BD;  		}  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	IList<string> list;  	long num;  	NEATNeuronType type;  	NEATNeuron neuron;  	Label_01BD:  	if (enumerator2.MoveNext ()) {  		goto Label_0257;  	}  	goto Label_0023;  	Label_01CE:  	if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  		goto Label_02A0;  	}  	network.Neurons.Add (neuron);  	dictionary [(int)num] = neuron;  	goto Label_02D0;  	Label_0206:  	num3 = CSVFormat.EgFormat.Parse (list [3]);  	double num4 = CSVFormat.EgFormat.Parse (list [4]);  	neuron = new NEATNeuron (type' num' num3' num4' num2);  	if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  		goto Label_02B9;  	}  	Label_0257:  	str2 = enumerator2.Current;  	do {  		list = EncogFileSection.SplitColumns (str2);  		num = int.Parse (list [0]);  		type = PersistNEATPopulation.StringToNeuronType (list [1]);  	}  	while ((((uint)num) + ((uint)num5)) < 0);  	Label_02A0:  	num2 = CSVFormat.EgFormat.Parse (list [2]);  	goto Label_0206;  	Label_02B9:  	if ((((uint)num3) & 0) == 0) {  		goto Label_01CE;  	}  	Label_02D0:  	if ((((uint)num6) - ((uint)num4)) >= 0) {  		goto Label_01BD;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	IList<string> list;  	long num;  	NEATNeuronType type;  	NEATNeuron neuron;  	Label_01BD:  	if (enumerator2.MoveNext ()) {  		goto Label_0257;  	}  	goto Label_0023;  	Label_01CE:  	if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  		goto Label_02A0;  	}  	network.Neurons.Add (neuron);  	dictionary [(int)num] = neuron;  	goto Label_02D0;  	Label_0206:  	num3 = CSVFormat.EgFormat.Parse (list [3]);  	double num4 = CSVFormat.EgFormat.Parse (list [4]);  	neuron = new NEATNeuron (type' num' num3' num4' num2);  	if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  		goto Label_02B9;  	}  	Label_0257:  	str2 = enumerator2.Current;  	do {  		list = EncogFileSection.SplitColumns (str2);  		num = int.Parse (list [0]);  		type = PersistNEATPopulation.StringToNeuronType (list [1]);  	}  	while ((((uint)num) + ((uint)num5)) < 0);  	Label_02A0:  	num2 = CSVFormat.EgFormat.Parse (list [2]);  	goto Label_0206;  	Label_02B9:  	if ((((uint)num3) & 0) == 0) {  		goto Label_01CE;  	}  	Label_02D0:  	if ((((uint)num6) - ((uint)num4)) >= 0) {  		goto Label_01BD;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: using (IEnumerator<string> enumerator2 = section.Lines.GetEnumerator ()) {  	string str2;  	IList<string> list;  	long num;  	NEATNeuronType type;  	NEATNeuron neuron;  	Label_01BD:  	if (enumerator2.MoveNext ()) {  		goto Label_0257;  	}  	goto Label_0023;  	Label_01CE:  	if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  		goto Label_02A0;  	}  	network.Neurons.Add (neuron);  	dictionary [(int)num] = neuron;  	goto Label_02D0;  	Label_0206:  	num3 = CSVFormat.EgFormat.Parse (list [3]);  	double num4 = CSVFormat.EgFormat.Parse (list [4]);  	neuron = new NEATNeuron (type' num' num3' num4' num2);  	if ((((uint)num7) - ((uint)num)) <= uint.MaxValue) {  		goto Label_02B9;  	}  	Label_0257:  	str2 = enumerator2.Current;  	do {  		list = EncogFileSection.SplitColumns (str2);  		num = int.Parse (list [0]);  		type = PersistNEATPopulation.StringToNeuronType (list [1]);  	}  	while ((((uint)num) + ((uint)num5)) < 0);  	Label_02A0:  	num2 = CSVFormat.EgFormat.Parse (list [2]);  	goto Label_0206;  	Label_02B9:  	if ((((uint)num3) & 0) == 0) {  		goto Label_01CE;  	}  	Label_02D0:  	if ((((uint)num6) - ((uint)num4)) >= 0) {  		goto Label_01BD;  	}  	goto Label_0023;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: num3 = CSVFormat.EgFormat.Parse (list [3]);  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Read,The following statement contains a magic number: num2 = CSVFormat.EgFormat.Parse (list [2]);  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Save,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Save,The following statement contains a magic number: using (IEnumerator<NEATNeuron> enumerator = network.Neurons.GetEnumerator ()) {  	NEATNeuron current;  	goto Label_00E3;  	Label_00B2:  	if (8 == 0) {  		goto Label_00F6;  	}  	xout.AddColumn (current.ActivationResponse);  	xout.AddColumn (current.SplitX);  	xout.AddColumn (current.SplitY);  	xout.WriteLine ();  	Label_00E3:  	if (!enumerator.MoveNext ()) {  		goto Label_0124;  	}  	current = enumerator.Current;  	Label_00F6:  	xout.AddColumn ((int)current.NeuronID);  	xout.AddColumn (PersistNEATPopulation.NeuronTypeToString (current.NeuronType));  	goto Label_00B2;  }  
Magic Number,Encog.Neural.NEAT,PersistNEATNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\PersistNEATNetwork.cs,Save,The following statement contains a magic number: if (8 == 0) {  	goto Label_00F6;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The following statement contains a magic number: if (2 != 0) {  	base.Chromosomes.Add (this.neuronsChromosome);  	base.Chromosomes.Add (this.linksChromosome);  	for (int i = 0; i < inputCount_0; i++) {  		this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Input' (long)i' 0.0' 0.1 + (i * num)));  	}  	this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Bias' (long)inputCount_0' 0.0' 0.9));  	num3 = 1.0 / ((double)(outputCount_1 + 1));  	num4 = 0;  	goto Label_00C8;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The following statement contains a magic number: if (2 != 0) {  	base.Chromosomes.Add (this.neuronsChromosome);  	base.Chromosomes.Add (this.linksChromosome);  	for (int i = 0; i < inputCount_0; i++) {  		this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Input' (long)i' 0.0' 0.1 + (i * num)));  	}  	this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Bias' (long)inputCount_0' 0.0' 0.9));  	num3 = 1.0 / ((double)(outputCount_1 + 1));  	num4 = 0;  	goto Label_00C8;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The following statement contains a magic number: if (2 != 0) {  	base.Chromosomes.Add (this.neuronsChromosome);  	base.Chromosomes.Add (this.linksChromosome);  	for (int i = 0; i < inputCount_0; i++) {  		this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Input' (long)i' 0.0' 0.1 + (i * num)));  	}  	this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Bias' (long)inputCount_0' 0.0' 0.9));  	num3 = 1.0 / ((double)(outputCount_1 + 1));  	num4 = 0;  	goto Label_00C8;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The following statement contains a magic number: for (int i = 0; i < inputCount_0; i++) {  	this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Input' (long)i' 0.0' 0.1 + (i * num)));  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The following statement contains a magic number: this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Input' (long)i' 0.0' 0.1 + (i * num)));  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,NEATGenome,The following statement contains a magic number: this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Bias' (long)inputCount_0' 0.0' 0.9));  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The following statement contains a magic number: if (innovation == null) {  	((NEATTraining)base.GA).Innovations.CreateNewInnovation (id' num4' NEATInnovationType.NewLink);  	num5 = base.GA.Population.AssignInnovationID ();  	if (15 != 0) {  		gene5 = new NEATLinkGene (id' num4' true' num5' RangeRandomizer.Randomize (-1.0' 1.0)' flag);  		if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  			goto Label_00B2;  		}  	}  }  else {  	NEATLinkGene gene6 = new NEATLinkGene (id' num4' true' innovation.InnovationID' RangeRandomizer.Randomize (-1.0' 1.0)' flag);  	this.linksChromosome.Add (gene6);  	if (3 != 0) {  		return;  	}  	goto Label_0123;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The following statement contains a magic number: if (innovation == null) {  	((NEATTraining)base.GA).Innovations.CreateNewInnovation (id' num4' NEATInnovationType.NewLink);  	num5 = base.GA.Population.AssignInnovationID ();  	if (15 != 0) {  		gene5 = new NEATLinkGene (id' num4' true' num5' RangeRandomizer.Randomize (-1.0' 1.0)' flag);  		if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  			goto Label_00B2;  		}  	}  }  else {  	NEATLinkGene gene6 = new NEATLinkGene (id' num4' true' innovation.InnovationID' RangeRandomizer.Randomize (-1.0' 1.0)' flag);  	this.linksChromosome.Add (gene6);  	if (3 != 0) {  		return;  	}  	goto Label_0123;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The following statement contains a magic number: if (15 != 0) {  	gene5 = new NEATLinkGene (id' num4' true' num5' RangeRandomizer.Randomize (-1.0' 1.0)' flag);  	if ((((uint)num) + ((uint)num5)) > uint.MaxValue) {  		goto Label_00B2;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The following statement contains a magic number: if (3 != 0) {  	return;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The following statement contains a magic number: if ((((uint)mutationRate) + ((uint)chanceOfLooped)) < 0) {  	if ((((uint)id) | 4) == 0) {  		goto Label_0057;  	}  	goto Label_01EE;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddLink,The following statement contains a magic number: if ((((uint)id) | 4) == 0) {  	goto Label_0057;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The following statement contains a magic number: do {  	num12 = ((NEATTraining)base.GA).Innovations.CreateNewInnovation (fromNeuronID' toNeuronID' NEATInnovationType.NewNeuron' NEATNeuronType.Hidden' num10' num9);  	this.neuronsChromosome.Add (new NEATNeuronGene (NEATNeuronType.Hidden' num12' num9' num10));  	num13 = base.GA.Population.AssignInnovationID ();  	if ((((uint)fromNeuronID) | 15) == 0) {  		goto Label_0534;  	}  	((NEATTraining)base.GA).Innovations.CreateNewInnovation (fromNeuronID' num12' NEATInnovationType.NewLink);  	NEATLinkGene gene5 = new NEATLinkGene (fromNeuronID' num12' true' num13' 1.0' false);  	this.linksChromosome.Add (gene5);  	if (((uint)num4) <= uint.MaxValue) {  		num14 = base.GA.Population.AssignInnovationID ();  		((NEATTraining)base.GA).Innovations.CreateNewInnovation (num12' toNeuronID' NEATInnovationType.NewLink);  		NEATLinkGene gene6 = new NEATLinkGene (num12' toNeuronID' true' num14' weight' false);  		this.linksChromosome.Add (gene6);  		return;  	}  }  while ((((uint)num14) + ((uint)num10)) > uint.MaxValue);  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The following statement contains a magic number: if ((((uint)fromNeuronID) | 15) == 0) {  	goto Label_0534;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The following statement contains a magic number: num10 = (gene3.SplitX + gene4.SplitX) / 2.0;  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The following statement contains a magic number: num9 = (gene3.SplitY + gene4.SplitY) / 2.0;  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The following statement contains a magic number: if ((((uint)num10) | 3) != 0) {  	goto Label_0475;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,AddNeuron,The following statement contains a magic number: num2 = (this.inputCount + this.outputCount) + 10;  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,Decode,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator2 = this.Links.Genes.GetEnumerator ()) {  	IGene gene3;  	NEATLinkGene gene4;  	NEATNeuron neuron2;  	NEATNeuron neuron3;  	NEATLink link;  	goto Label_00D5;  	Label_00A0:  	link = new NEATLink (gene4.Weight' neuron2' neuron3' gene4.Recurrent);  	neuron2.OutputboundLinks.Add (link);  	neuron3.InboundLinks.Add (link);  	Label_00D5:  	if (enumerator2.MoveNext ()) {  		goto Label_0159;  	}  	goto Label_01CA;  	Label_00E3:  	Console.Out.WriteLine ("test");  	goto Label_0111;  	Label_00F4:  	if (elementPos == -1) {  		goto Label_00E3;  	}  	if ((((uint)elementPos) | 15) == 0) {  		goto Label_0147;  	}  	Label_0111:  	neuron3 = neurons [elementPos];  	if ((((uint)elementPos) - ((uint)elementPos)) > uint.MaxValue) {  		goto Label_00F4;  	}  	goto Label_00A0;  	Label_013D:  	neuron2 = neurons [elementPos];  	Label_0147:  	elementPos = this.GetElementPos ((long)gene4.ToNeuronID);  	goto Label_00F4;  	Label_0159:  	gene3 = enumerator2.Current;  	gene4 = (NEATLinkGene)gene3;  	if (!gene4.Enabled) {  		goto Label_00D5;  	}  	elementPos = this.GetElementPos ((long)gene4.FromNeuronID);  	if ((((uint)elementPos) - ((uint)elementPos)) <= uint.MaxValue) {  		goto Label_013D;  	}  	if ((((uint)elementPos) - ((uint)elementPos)) >= 0) {  		goto Label_00E3;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,Decode,The following statement contains a magic number: if ((((uint)elementPos) | 15) == 0) {  	goto Label_0147;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The following statement contains a magic number: return ((((1.0 * num2) / ((double)numGenes)) + ((1.0 * num) / ((double)numGenes))) + ((0.4 * num4) / num3));  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The following statement contains a magic number: if ((((uint)num4) - ((uint)num2)) <= uint.MaxValue) {  	if ((((uint)num6) | 2) != 0) {  		num5++;  		if ((((uint)num10) + ((uint)innovationId)) > uint.MaxValue) {  			return num10;  		}  		if ((((uint)num2) | 15) != 0) {  			num6++;  			if (0 != 0) {  				goto Label_001B;  			}  			num3++;  			if ((((uint)num6) - ((uint)num)) <= uint.MaxValue) {  				num4 += Math.Abs ((double)(((NEATLinkGene)this.linksChromosome.Get (num5)).Weight - ((NEATLinkGene)genome.Links.Get (num6)).Weight));  				goto Label_00EB;  			}  			goto Label_00C5;  		}  	}  	else {  		goto Label_02B8;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The following statement contains a magic number: if ((((uint)num4) - ((uint)num2)) <= uint.MaxValue) {  	if ((((uint)num6) | 2) != 0) {  		num5++;  		if ((((uint)num10) + ((uint)innovationId)) > uint.MaxValue) {  			return num10;  		}  		if ((((uint)num2) | 15) != 0) {  			num6++;  			if (0 != 0) {  				goto Label_001B;  			}  			num3++;  			if ((((uint)num6) - ((uint)num)) <= uint.MaxValue) {  				num4 += Math.Abs ((double)(((NEATLinkGene)this.linksChromosome.Get (num5)).Weight - ((NEATLinkGene)genome.Links.Get (num6)).Weight));  				goto Label_00EB;  			}  			goto Label_00C5;  		}  	}  	else {  		goto Label_02B8;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The following statement contains a magic number: if ((((uint)num6) | 2) != 0) {  	num5++;  	if ((((uint)num10) + ((uint)innovationId)) > uint.MaxValue) {  		return num10;  	}  	if ((((uint)num2) | 15) != 0) {  		num6++;  		if (0 != 0) {  			goto Label_001B;  		}  		num3++;  		if ((((uint)num6) - ((uint)num)) <= uint.MaxValue) {  			num4 += Math.Abs ((double)(((NEATLinkGene)this.linksChromosome.Get (num5)).Weight - ((NEATLinkGene)genome.Links.Get (num6)).Weight));  			goto Label_00EB;  		}  		goto Label_00C5;  	}  }  else {  	goto Label_02B8;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The following statement contains a magic number: if ((((uint)num6) | 2) != 0) {  	num5++;  	if ((((uint)num10) + ((uint)innovationId)) > uint.MaxValue) {  		return num10;  	}  	if ((((uint)num2) | 15) != 0) {  		num6++;  		if (0 != 0) {  			goto Label_001B;  		}  		num3++;  		if ((((uint)num6) - ((uint)num)) <= uint.MaxValue) {  			num4 += Math.Abs ((double)(((NEATLinkGene)this.linksChromosome.Get (num5)).Weight - ((NEATLinkGene)genome.Links.Get (num6)).Weight));  			goto Label_00EB;  		}  		goto Label_00C5;  	}  }  else {  	goto Label_02B8;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetCompatibilityScore,The following statement contains a magic number: if ((((uint)num2) | 15) != 0) {  	num6++;  	if (0 != 0) {  		goto Label_001B;  	}  	num3++;  	if ((((uint)num6) - ((uint)num)) <= uint.MaxValue) {  		num4 += Math.Abs ((double)(((NEATLinkGene)this.linksChromosome.Get (num5)).Weight - ((NEATLinkGene)genome.Links.Get (num6)).Weight));  		goto Label_00EB;  	}  	goto Label_00C5;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetElementPos,The following statement contains a magic number: for (int i = 0; i < this.Neurons.Size (); i++) {  	NEATNeuronGene gene;  	do {  		gene = (NEATNeuronGene)this.neuronsChromosome.GetGene (i);  	}  	while (3 == 0);  	if (gene.Id == neuronID) {  		return i;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,GetElementPos,The following statement contains a magic number: do {  	gene = (NEATNeuronGene)this.neuronsChromosome.GetGene (i);  }  while (3 == 0);  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,IsDuplicateLink,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator = this.Links.Genes.GetEnumerator ()) {  	IGene gene;  	NEATLinkGene gene2;  	bool flag;  	Label_0013:  	if (enumerator.MoveNext ()) {  		goto Label_008F;  	}  	goto Label_00B8;  	Label_0024:  	if (gene2.FromNeuronID != fromNeuronID) {  		goto Label_0013;  	}  	do {  		if (gene2.ToNeuronID == toNeuronID) {  			return true;  		}  		if ((((uint)fromNeuronID) - ((uint)fromNeuronID)) <= uint.MaxValue) {  			goto Label_0013;  		}  	}  	while (4 == 0);  	do {  		if (((uint)fromNeuronID) < 0) {  			break;  		}  		goto Label_0013;  	}  	while (((uint)flag) >= 0);  	goto Label_0024;  	Label_008F:  	gene = enumerator.Current;  	gene2 = (NEATLinkGene)gene;  	goto Label_0024;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,IsDuplicateLink,The following statement contains a magic number: do {  	if (gene2.ToNeuronID == toNeuronID) {  		return true;  	}  	if ((((uint)fromNeuronID) - ((uint)fromNeuronID)) <= uint.MaxValue) {  		goto Label_0013;  	}  }  while (4 == 0);  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,MutateActivationResponse,The following statement contains a magic number: using (List<IGene>.Enumerator enumerator = this.neuronsChromosome.Genes.GetEnumerator ()) {  	IGene gene;  	NEATNeuronGene gene2;  	goto Label_0051;  	Label_0013:  	if (-2147483648 == 0) {  		goto Label_0072;  	}  	Label_001A:  	gene2 = (NEATNeuronGene)gene;  	gene2.ActivationResponse += RangeRandomizer.Randomize (-1.0' 1.0) * maxPertubation;  	goto Label_0051;  	Label_0049:  	if (ThreadSafeRandom.NextDouble () < mutateRate) {  		goto Label_001A;  	}  	Label_0051:  	if (!enumerator.MoveNext () && ((((uint)maxPertubation) | 0x7fffffff) != 0)) {  		return;  	}  	Label_0072:  	gene = enumerator.Current;  	if ((((uint)maxPertubation) - ((uint)mutateRate)) >= 0) {  		goto Label_0049;  	}  	if (((uint)maxPertubation) >= 0) {  		goto Label_0013;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATGenome,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATGenome.cs,MutateActivationResponse,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0072;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATLinkGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATLinkGene.cs,ToString,The following statement contains a magic number: if (-2147483648 != 0) {  	builder.Append ("'to=");  	if (-2147483648 == 0) {  		goto Label_003C;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATLinkGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATLinkGene.cs,ToString,The following statement contains a magic number: if (-2147483648 != 0) {  	builder.Append ("'to=");  	if (-2147483648 == 0) {  		goto Label_003C;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATLinkGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATLinkGene.cs,ToString,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_003C;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATLinkGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATLinkGene.cs,ToString,The following statement contains a magic number: if (15 != 0) {  	builder.Append (this.toNeuronID);  	if (0 != 0) {  		goto Label_007A;  	}  	builder.Append ("]");  	if (0 != 0) {  		goto Label_003C;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATInnovation,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovation.cs,NEATInnovation,The following statement contains a magic number: if (8 != 0) {  	this.neuronID = neuronID_0;  	base.InnovationID = innovationID;  	this.splitX = neuronGene.SplitX;  	if (0xff == 0) {  		return;  	}  	this.splitY = neuronGene.SplitY;  	this.neuronType = neuronGene.NeuronType;  	this.innovationType = NEATInnovationType.NewNeuron;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATInnovation,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovation.cs,NEATInnovation,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0057;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xd9d3bb742c7a307b = 0.1;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x67e8029e782709f0 = 0.07;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xe6c7b0462e12d2ff = 0.04;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xd3f94467320a5684 = 0.05;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x8a503d42183ff26d = 0.26;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xa4a074c49c97739c = 0.7;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xf52a69d338e65c0f = 0.1;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x214332e2bd2e8ae1 = 100.0;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x7a6edccccc229234 = 0.5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x68e0847485ce0c21 = 0.2;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xd7944ba63721a56b = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xfca9d4aed1b3cd4b = 15;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xe44426390f1f3741 = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x340c2bbd00cd3fa4 = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xe5ff50155887c0e7 = 0.1;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xd9d3bb742c7a307b = 0.1;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x67e8029e782709f0 = 0.07;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xe6c7b0462e12d2ff = 0.04;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xd3f94467320a5684 = 0.05;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x8a503d42183ff26d = 0.26;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xa4a074c49c97739c = 0.7;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xf52a69d338e65c0f = 0.1;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x214332e2bd2e8ae1 = 100.0;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x7a6edccccc229234 = 0.5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x68e0847485ce0c21 = 0.2;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xd7944ba63721a56b = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xfca9d4aed1b3cd4b = 15;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xe44426390f1f3741 = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.x340c2bbd00cd3fa4 = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,NEATTraining,The following statement contains a magic number: this.xe5ff50155887c0e7 = 0.1;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,AdjustCompatibilityThreshold,The following statement contains a magic number: if (this.x64ee8c19c861fa58 >= 1) {  	double num = 0.01;  	if (base.Population.Species.Count <= this.x64ee8c19c861fa58) {  		if (base.Population.Species.Count < 2) {  			this.x8a503d42183ff26d -= num;  		}  	}  	else {  		this.x8a503d42183ff26d += num;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,AdjustCompatibilityThreshold,The following statement contains a magic number: if (this.x64ee8c19c861fa58 >= 1) {  	double num = 0.01;  	if (base.Population.Species.Count <= this.x64ee8c19c861fa58) {  		if (base.Population.Species.Count < 2) {  			this.x8a503d42183ff26d -= num;  		}  	}  	else {  		this.x8a503d42183ff26d += num;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,AdjustCompatibilityThreshold,The following statement contains a magic number: if (base.Population.Species.Count <= this.x64ee8c19c861fa58) {  	if (base.Population.Species.Count < 2) {  		this.x8a503d42183ff26d -= num;  	}  }  else {  	this.x8a503d42183ff26d += num;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,AdjustCompatibilityThreshold,The following statement contains a magic number: if (base.Population.Species.Count < 2) {  	this.x8a503d42183ff26d -= num;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The following statement contains a magic number: if (15 != 0) {  	if (0 != 0) {  		goto Label_031C;  	}  	genome.Population = base.Population;  	if ((((uint)num3) & 0) == 0) {  		return genome;  	}  	goto Label_02C3;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The following statement contains a magic number: if (((uint)num) <= uint.MaxValue) {  	if (((uint)num3) > uint.MaxValue) {  		goto Label_002E;  	}  	if ((((uint)num2) | 4) == 0) {  		goto Label_025D;  	}  	num2++;  	goto Label_016D;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The following statement contains a magic number: if ((((uint)num2) | 4) == 0) {  	goto Label_025D;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The following statement contains a magic number: if ((((uint)num2) | 2) != 0) {  	if ((((uint)num3) + ((uint)num3)) <= uint.MaxValue) {  		goto Label_016D;  	}  	goto Label_0160;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0234;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Crossover,The following statement contains a magic number: while (ThreadSafeRandom.NextDouble () < 0.5) {  	gene3 = gene;  	goto Label_01C8;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Iteration,The following statement contains a magic number: using (IEnumerator<ISpecies> enumerator = base.Population.Species.GetEnumerator ()) {  	ISpecies species;  	NEATGenome genome;  	NEATGenome genome2;  	NEATGenome genome3;  	goto Label_00FD;  	Label_00EC:  	if (num < base.Population.Size ()) {  		goto Label_0485;  	}  	Label_00FD:  	if (enumerator.MoveNext ()) {  		goto Label_0468;  	}  	goto Label_040A;  	Label_010D:  	if (num == base.Population.Size ()) {  		goto Label_0144;  	}  	Label_011B:  	if (num2-- > 0) {  		goto Label_0441;  	}  	goto Label_00FD;  	Label_012C:  	if (genome != null) {  		goto Label_0182;  	}  	if (((uint)num) >= 0) {  		goto Label_011B;  	}  	goto Label_040A;  	Label_0144:  	num2 = 0;  	goto Label_011B;  	Label_014D:  	if (0 == 0) {  		goto Label_010D;  	}  	goto Label_01FA;  	Label_0152:  	if (0x7fffffff == 0) {  		goto Label_03D9;  	}  	if ((((uint)num2) & 0) != 0) {  		goto Label_0266;  	}  	num++;  	goto Label_014D;  	Label_0179:  	if (genome != null) {  		goto Label_0246;  	}  	goto Label_012C;  	Label_0182:  	genome.SortGenes ();  	list.Add (genome);  	goto Label_0152;  	Label_0197:  	genome.AddNeuron (this.xe6c7b0462e12d2ff' this.x340c2bbd00cd3fa4);  	Label_01AA:  	genome.AddLink (this.x67e8029e782709f0' this.xd3f94467320a5684' this.xe44426390f1f3741' this.xd7944ba63721a56b);  	genome.MutateWeights (this.x68e0847485ce0c21' this.xe5ff50155887c0e7' this.x7a6edccccc229234);  	genome.MutateActivationResponse (this.xd9d3bb742c7a307b' this.xf52a69d338e65c0f);  	goto Label_012C;  	Label_01FA:  	if ((((uint)num3) - ((uint)num2)) >= 0) {  		goto Label_0144;  	}  	Label_0212:  	if (genome.Neurons.Size () >= this.x214332e2bd2e8ae1) {  		goto Label_01AA;  	}  	goto Label_0197;  	Label_0231:  	if (genome2.GenomeID != genome3.GenomeID) {  		goto Label_0266;  	}  	goto Label_0179;  	Label_0246:  	genome.GenomeID = base.Population.AssignGenomeID ();  	goto Label_0212;  	Label_0266:  	genome = this.Crossover (genome2' genome3);  	goto Label_0179;  	Label_0277:  	genome = new NEATGenome (genome2);  	goto Label_0179;  	Label_0285:  	if ((((uint)flag) + ((uint)num)) < 0) {  		goto Label_0492;  	}  	Label_02A0:  	if (genome2.GenomeID == genome3.GenomeID) {  		goto Label_0334;  	}  	if (((uint)num) >= 0) {  		goto Label_0231;  	}  	if ((((uint)num) + ((uint)num)) > uint.MaxValue) {  		goto Label_0197;  	}  	if ((((uint)num3) | 0xfffffffe) == 0) {  		goto Label_02A0;  	}  	Label_02FE:  	if ((((uint)flag) & 0) != 0) {  		goto Label_02A0;  	}  	if ((((uint)flag) + ((uint)flag)) >= 0) {  		goto Label_0231;  	}  	goto Label_03F5;  	Label_0334:  	if (num3-- <= 0) {  		goto Label_02FE;  	}  	genome3 = (NEATGenome)species.ChooseParent ();  	if ((((uint)num) - ((uint)num2)) >= 0) {  		goto Label_03AA;  	}  	Label_036A:  	if (species.Members.Count == 1) {  		goto Label_03D9;  	}  	genome2 = (NEATGenome)species.ChooseParent ();  	if (ThreadSafeRandom.NextDouble () >= this.xa4a074c49c97739c) {  		goto Label_0277;  	}  	genome3 = (NEATGenome)species.ChooseParent ();  	num3 = 5;  	goto Label_02A0;  	Label_03AA:  	if ((((uint)num) - ((uint)flag)) >= 0) {  		goto Label_02A0;  	}  	Label_03C4:  	genome = (NEATGenome)species.Leader;  	flag = true;  	goto Label_012C;  	Label_03D9:  	genome = new NEATGenome ((NEATGenome)species.ChooseParent ());  	goto Label_0179;  	Label_03F5:  	if (((uint)num) >= 0) {  		goto Label_0231;  	}  	Label_040A:  	if (((uint)num) >= 0) {  		goto Label_0024;  	}  	goto Label_044D;  	Label_0421:  	if ((((uint)num) - ((uint)flag)) > uint.MaxValue) {  		goto Label_0144;  	}  	goto Label_011B;  	Label_0441:  	genome = null;  	if (flag) {  		goto Label_036A;  	}  	goto Label_03C4;  	Label_044D:  	if ((((uint)num3) - ((uint)flag)) > uint.MaxValue) {  		goto Label_0285;  	}  	Label_0468:  	species = enumerator.Current;  	if (((uint)num2) >= 0) {  		goto Label_00EC;  	}  	Label_0485:  	num2 = (int)Math.Round (species.NumToSpawn);  	Label_0492:  	flag = false;  	goto Label_0421;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Iteration,The following statement contains a magic number: num3 = 5;  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,Iteration,The following statement contains a magic number: list.Add (this.TournamentSelection (base.Population.Size () / 5));  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator = base.Population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_004B;  	Label_0048:  	if (0 != 0) {  		goto Label_006E;  	}  	Label_004B:  	if (enumerator.MoveNext ()) {  		goto Label_00CF;  	}  	if (0 == 0) {  		goto Label_00C8;  	}  	if (8 != 0) {  		goto Label_00B9;  	}  	goto Label_006E;  	Label_0065:  	genome2.GA = this;  	goto Label_0048;  	Label_006E:  	if (2 == 0) {  		goto Label_00B9;  	}  	Label_0075:  	genome2 = (NEATGenome)genome;  	if (genome2.InputCount != this.x43f451310e815b76) {  		goto Label_0098;  	}  	Label_008A:  	if (genome2.OutputCount == this.x98cf41c6b0eaf6ab) {  		goto Label_0065;  	}  	Label_0098:  	throw new TrainingError ("All NEATGenome's must have the same input and output sizes as the base network.");  	if (0 != 0) {  		goto Label_008A;  	}  	goto Label_0065;  	Label_00B9:  	if (!(genome is NEATGenome)) {  		throw new TrainingError ("Population can only contain objects of NEATGenome.");  	}  	goto Label_0075;  	Label_00C8:  	if (1 != 0) {  		goto Label_00E9;  	}  	Label_00CF:  	genome = enumerator.Current;  	if (-2147483648 != 0) {  		goto Label_00B9;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator = base.Population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_004B;  	Label_0048:  	if (0 != 0) {  		goto Label_006E;  	}  	Label_004B:  	if (enumerator.MoveNext ()) {  		goto Label_00CF;  	}  	if (0 == 0) {  		goto Label_00C8;  	}  	if (8 != 0) {  		goto Label_00B9;  	}  	goto Label_006E;  	Label_0065:  	genome2.GA = this;  	goto Label_0048;  	Label_006E:  	if (2 == 0) {  		goto Label_00B9;  	}  	Label_0075:  	genome2 = (NEATGenome)genome;  	if (genome2.InputCount != this.x43f451310e815b76) {  		goto Label_0098;  	}  	Label_008A:  	if (genome2.OutputCount == this.x98cf41c6b0eaf6ab) {  		goto Label_0065;  	}  	Label_0098:  	throw new TrainingError ("All NEATGenome's must have the same input and output sizes as the base network.");  	if (0 != 0) {  		goto Label_008A;  	}  	goto Label_0065;  	Label_00B9:  	if (!(genome is NEATGenome)) {  		throw new TrainingError ("Population can only contain objects of NEATGenome.");  	}  	goto Label_0075;  	Label_00C8:  	if (1 != 0) {  		goto Label_00E9;  	}  	Label_00CF:  	genome = enumerator.Current;  	if (-2147483648 != 0) {  		goto Label_00B9;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,The following statement contains a magic number: using (IEnumerator<IGenome> enumerator = base.Population.Genomes.GetEnumerator ()) {  	IGenome genome;  	NEATGenome genome2;  	goto Label_004B;  	Label_0048:  	if (0 != 0) {  		goto Label_006E;  	}  	Label_004B:  	if (enumerator.MoveNext ()) {  		goto Label_00CF;  	}  	if (0 == 0) {  		goto Label_00C8;  	}  	if (8 != 0) {  		goto Label_00B9;  	}  	goto Label_006E;  	Label_0065:  	genome2.GA = this;  	goto Label_0048;  	Label_006E:  	if (2 == 0) {  		goto Label_00B9;  	}  	Label_0075:  	genome2 = (NEATGenome)genome;  	if (genome2.InputCount != this.x43f451310e815b76) {  		goto Label_0098;  	}  	Label_008A:  	if (genome2.OutputCount == this.x98cf41c6b0eaf6ab) {  		goto Label_0065;  	}  	Label_0098:  	throw new TrainingError ("All NEATGenome's must have the same input and output sizes as the base network.");  	if (0 != 0) {  		goto Label_008A;  	}  	goto Label_0065;  	Label_00B9:  	if (!(genome is NEATGenome)) {  		throw new TrainingError ("Population can only contain objects of NEATGenome.");  	}  	goto Label_0075;  	Label_00C8:  	if (1 != 0) {  		goto Label_00E9;  	}  	Label_00CF:  	genome = enumerator.Current;  	if (-2147483648 != 0) {  		goto Label_00B9;  	}  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,The following statement contains a magic number: if (8 != 0) {  	goto Label_00B9;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,The following statement contains a magic number: if (2 == 0) {  	goto Label_00B9;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATTraining,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATTraining.cs,xd586e0c16bdae7fc,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_00B9;  }  
Magic Number,Encog.Neural.NEAT.Training,NEATInnovationList,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovationList.cs,NEATInnovationList,The following statement contains a magic number: foreach (IGene gene in neurons.Genes) {  	NEATNeuronGene neuronGene = (NEATNeuronGene)gene;  	NEATInnovation innovation = new NEATInnovation (neuronGene' population_0.AssignInnovationID ()' this.AssignNeuronID ());  	if (15 == 0) {  		break;  	}  	base.Add (innovation);  }  
Magic Number,Encog.Neural.NEAT.Training,NEATInnovationList,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovationList.cs,NEATInnovationList,The following statement contains a magic number: if (15 == 0) {  	break;  }  
Magic Number,Encog.Neural.Neat.Training,NEATNeuronGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\Training\NEATNeuronGene.cs,NEATNeuronGene,The following statement contains a magic number: while (true) {  	this.neuronType = type;  	if (3 != 0) {  		base.Id = id;  		this.splitX = splitX_1;  		this.splitY = splitY_0;  		this.recurrent = recurrent_2;  		this.activationResponse = act;  		if ((((uint)act) - ((uint)splitX_1)) >= 0) {  			return;  		}  	}  }  
Magic Number,Encog.Neural.Neat.Training,NEATNeuronGene,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\Training\NEATNeuronGene.cs,NEATNeuronGene,The following statement contains a magic number: if (3 != 0) {  	base.Id = id;  	this.splitX = splitX_1;  	this.splitY = splitY_0;  	this.recurrent = recurrent_2;  	this.activationResponse = act;  	if ((((uint)act) - ((uint)splitX_1)) >= 0) {  		return;  	}  }  
Magic Number,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,Read,The following statement contains a magic number: if (4 != 0) {  	goto Label_0075;  }  
Magic Number,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,Read,The following statement contains a magic number: if ((((uint)outputCount) | 15) != 0) {  	goto Label_000C;  }  
Magic Number,Encog.Neural.CPN,PersistCPN,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\PersistCPN.cs,Read,The following statement contains a magic number: if (3 == 0) {  	goto Label_00D0;  }  
Magic Number,Encog.Neural.CPN,PersistCPN,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\PersistCPN.cs,Read,The following statement contains a magic number: if (2 != 0) {  	goto Label_0075;  }  
Magic Number,Encog.Neural.CPN,PersistCPN,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\PersistCPN.cs,Save,The following statement contains a magic number: if (15 != 0) {  	goto Label_0052;  }  
Magic Number,Encog.Neural.CPN,CPNNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\CPNNetwork.cs,ComputeInstar,The following statement contains a magic number: if (((((uint)num2) + ((uint)num4)) <= uint.MaxValue) && (Math.Abs (num6) <= 1E-07)) {  	goto Label_001C;  }  
Magic Number,Encog.Neural.CPN,CPNNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\CPNNetwork.cs,ComputeInstar,The following statement contains a magic number: if (((uint)index) >= 0) {  	data [num2] = num4;  	flagArray [num2] = false;  	if ((((uint)num4) & 0) != 0) {  		if ((((uint)minValue) | 4) != 0) {  			goto Label_00BC;  		}  		goto Label_010B;  	}  	num2++;  	goto Label_018A;  }  
Magic Number,Encog.Neural.CPN,CPNNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\CPNNetwork.cs,ComputeInstar,The following statement contains a magic number: if ((((uint)num4) & 0) != 0) {  	if ((((uint)minValue) | 4) != 0) {  		goto Label_00BC;  	}  	goto Label_010B;  }  
Magic Number,Encog.Neural.CPN,CPNNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\CPNNetwork.cs,ComputeInstar,The following statement contains a magic number: if ((((uint)minValue) | 4) != 0) {  	goto Label_00BC;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	ClassItem item;  	goto Label_0087;  	Label_007B:  	if (field.Output) {  		goto Label_012C;  	}  	Label_0087:  	if (enumerator.MoveNext ()) {  		goto Label_0226;  	}  	goto Label_0267;  	Label_0098:  	if ((this._xc5416b6511261016.Find (field.Name) == -1) && (((uint)num3) >= 0)) {  		goto Label_0087;  	}  	goto Label_007B;  	Label_00C4:  	if (((uint)num2) >= 0) {  		if (-2147483648 != 0) {  		}  		num4 = field.DeNormalize (num4);  		row.Data [num2++] = base.InputFormat.Format (num4' base.Precision);  	}  	if ((((uint)num4) | 3) == 0) {  		goto Label_0234;  	}  	goto Label_0087;  	Label_012C:  	if (field.Classify) {  		goto Label_01F8;  	}  	Label_0138:  	num4 = data [num3++];  	goto Label_00C4;  	Label_0156:  	row.Data [num2++] = item.Name;  	goto Label_0087;  	Label_0171:  	row.Data [num2++] = "?Unknown?";  	goto Label_0087;  	Label_018A:  	if (item == null) {  		goto Label_0171;  	}  	if ((((uint)num3) + ((uint)num3)) >= 0) {  		goto Label_01DB;  	}  	Label_01A6:  	num3 += field.ColumnsNeeded;  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_018A;  	}  	if (0 != 0) {  		goto Label_0234;  	}  	if ((((uint)num2) & 0) == 0) {  		goto Label_0171;  	}  	Label_01DB:  	if ((((uint)num3) - ((uint)num3)) >= 0) {  		goto Label_0156;  	}  	goto Label_0138;  	Label_01F8:  	item = field.DetermineClass (num3' data.Data);  	if ((((uint)outputLength) | 0xfffffffe) != 0) {  		goto Label_01A6;  	}  	goto Label_0138;  	Label_0226:  	field = enumerator.Current;  	goto Label_0098;  	Label_0234:  	if ((((uint)num3) - ((uint)outputLength)) >= 0) {  		goto Label_007B;  	}  	goto Label_012C;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	ClassItem item;  	goto Label_0087;  	Label_007B:  	if (field.Output) {  		goto Label_012C;  	}  	Label_0087:  	if (enumerator.MoveNext ()) {  		goto Label_0226;  	}  	goto Label_0267;  	Label_0098:  	if ((this._xc5416b6511261016.Find (field.Name) == -1) && (((uint)num3) >= 0)) {  		goto Label_0087;  	}  	goto Label_007B;  	Label_00C4:  	if (((uint)num2) >= 0) {  		if (-2147483648 != 0) {  		}  		num4 = field.DeNormalize (num4);  		row.Data [num2++] = base.InputFormat.Format (num4' base.Precision);  	}  	if ((((uint)num4) | 3) == 0) {  		goto Label_0234;  	}  	goto Label_0087;  	Label_012C:  	if (field.Classify) {  		goto Label_01F8;  	}  	Label_0138:  	num4 = data [num3++];  	goto Label_00C4;  	Label_0156:  	row.Data [num2++] = item.Name;  	goto Label_0087;  	Label_0171:  	row.Data [num2++] = "?Unknown?";  	goto Label_0087;  	Label_018A:  	if (item == null) {  		goto Label_0171;  	}  	if ((((uint)num3) + ((uint)num3)) >= 0) {  		goto Label_01DB;  	}  	Label_01A6:  	num3 += field.ColumnsNeeded;  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_018A;  	}  	if (0 != 0) {  		goto Label_0234;  	}  	if ((((uint)num2) & 0) == 0) {  		goto Label_0171;  	}  	Label_01DB:  	if ((((uint)num3) - ((uint)num3)) >= 0) {  		goto Label_0156;  	}  	goto Label_0138;  	Label_01F8:  	item = field.DetermineClass (num3' data.Data);  	if ((((uint)outputLength) | 0xfffffffe) != 0) {  		goto Label_01A6;  	}  	goto Label_0138;  	Label_0226:  	field = enumerator.Current;  	goto Label_0098;  	Label_0234:  	if ((((uint)num3) - ((uint)outputLength)) >= 0) {  		goto Label_007B;  	}  	goto Label_012C;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The following statement contains a magic number: if (((uint)num2) >= 0) {  	if (-2147483648 != 0) {  	}  	num4 = field.DeNormalize (num4);  	row.Data [num2++] = base.InputFormat.Format (num4' base.Precision);  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The following statement contains a magic number: if (-2147483648 != 0) {  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The following statement contains a magic number: if ((((uint)num4) | 3) == 0) {  	goto Label_0234;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,Process,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,The following statement contains a magic number: try {  	StreamWriter writer;  	StringBuilder builder;  	string str;  	string[] strArray;  	int num;  	x2608fe0a208c787d.Delete ();  	if ((((uint)num) & 0) == 0) {  		goto Label_0196;  	}  	Label_001D:  	if (num < strArray.Length) {  		goto Label_012D;  	}  	if (-2 == 0) {  		return writer2;  	}  	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field;  		goto Label_005B;  		Label_0050:  		if (!field.Ignored) {  			goto Label_00F3;  		}  		Label_005B:  		if (!enumerator.MoveNext () && (0 == 0)) {  			goto Label_0119;  		}  		goto Label_00CF;  		Label_006F:  		if (1 != 0) {  			goto Label_005B;  		}  		Label_0078:  		if (field.Output) {  			goto Label_0050;  		}  		if (0xff != 0) {  			goto Label_005B;  		}  		if (((uint)num) >= 0) {  			goto Label_0050;  		}  		goto Label_00CF;  		Label_009B:  		builder.Append ("\"Output:");  		builder.Append (CSVHeaders.TagColumn (field.Name' 0' field.TimeSlice' false));  		builder.Append ("\"");  		goto Label_006F;  		Label_00CF:  		field = enumerator.Current;  		if ((((uint)num) & 0) == 0) {  			goto Label_0078;  		}  		goto Label_0050;  		Label_00F3:  		BasicFile.AppendSeparator (builder' base.OutputFormat);  		goto Label_009B;  	}  	Label_0119:  	writer.WriteLine (builder.ToString ());  	return writer;  	Label_012D:  	str = strArray [num];  	BasicFile.AppendSeparator (builder' base.OutputFormat);  	builder.Append ("\"");  	Label_014B:  	builder.Append (str);  	builder.Append ("\"");  	num++;  	goto Label_017E;  	Label_0167:  	strArray = base.InputHeadings;  	num = 0;  	if (-2 == 0) {  		goto Label_014B;  	}  	goto Label_001D;  	Label_017E:  	if ((((uint)num) - ((uint)num)) >= 0) {  		goto Label_001D;  	}  	Label_0196:  	writer = new StreamWriter (x2608fe0a208c787d.OpenWrite ());  	if (!base.ProduceOutputHeaders) {  		return writer;  	}  	builder = new StringBuilder ();  	if ((((uint)num) + ((uint)num)) >= 0) {  		goto Label_0167;  	}  	goto Label_001D;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,The following statement contains a magic number: try {  	StreamWriter writer;  	StringBuilder builder;  	string str;  	string[] strArray;  	int num;  	x2608fe0a208c787d.Delete ();  	if ((((uint)num) & 0) == 0) {  		goto Label_0196;  	}  	Label_001D:  	if (num < strArray.Length) {  		goto Label_012D;  	}  	if (-2 == 0) {  		return writer2;  	}  	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field;  		goto Label_005B;  		Label_0050:  		if (!field.Ignored) {  			goto Label_00F3;  		}  		Label_005B:  		if (!enumerator.MoveNext () && (0 == 0)) {  			goto Label_0119;  		}  		goto Label_00CF;  		Label_006F:  		if (1 != 0) {  			goto Label_005B;  		}  		Label_0078:  		if (field.Output) {  			goto Label_0050;  		}  		if (0xff != 0) {  			goto Label_005B;  		}  		if (((uint)num) >= 0) {  			goto Label_0050;  		}  		goto Label_00CF;  		Label_009B:  		builder.Append ("\"Output:");  		builder.Append (CSVHeaders.TagColumn (field.Name' 0' field.TimeSlice' false));  		builder.Append ("\"");  		goto Label_006F;  		Label_00CF:  		field = enumerator.Current;  		if ((((uint)num) & 0) == 0) {  			goto Label_0078;  		}  		goto Label_0050;  		Label_00F3:  		BasicFile.AppendSeparator (builder' base.OutputFormat);  		goto Label_009B;  	}  	Label_0119:  	writer.WriteLine (builder.ToString ());  	return writer;  	Label_012D:  	str = strArray [num];  	BasicFile.AppendSeparator (builder' base.OutputFormat);  	builder.Append ("\"");  	Label_014B:  	builder.Append (str);  	builder.Append ("\"");  	num++;  	goto Label_017E;  	Label_0167:  	strArray = base.InputHeadings;  	num = 0;  	if (-2 == 0) {  		goto Label_014B;  	}  	goto Label_001D;  	Label_017E:  	if ((((uint)num) - ((uint)num)) >= 0) {  		goto Label_001D;  	}  	Label_0196:  	writer = new StreamWriter (x2608fe0a208c787d.OpenWrite ());  	if (!base.ProduceOutputHeaders) {  		return writer;  	}  	builder = new StringBuilder ();  	if ((((uint)num) + ((uint)num)) >= 0) {  		goto Label_0167;  	}  	goto Label_001D;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,The following statement contains a magic number: if (-2 == 0) {  	return writer2;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateCSV.cs,xf911a8958011bd6d,The following statement contains a magic number: if (-2 == 0) {  	goto Label_014B;  }  
Magic Number,Encog.App.Analyst.CSV,TimeSeriesUtil,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\TimeSeriesUtil.cs,Process,The following statement contains a magic number: objArray [2] = "' should be ";  
Magic Number,Encog.App.Analyst.CSV,TimeSeriesUtil,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\TimeSeriesUtil.cs,Process,The following statement contains a magic number: objArray [3] = this._x7e648b416c264559;  
Magic Number,Encog.App.Analyst.CSV,TimeSeriesUtil,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\TimeSeriesUtil.cs,Process,The following statement contains a magic number: if ((((uint)num3) | 3) != 0) {  	goto Label_0187;  }  
Magic Number,Encog.App.Analyst.CSV,TimeSeriesUtil,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\TimeSeriesUtil.cs,Process,The following statement contains a magic number: objArray = new object[4];  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if ((((uint)headers) - ((uint)headers)) >= 0) {  	base.Analyzed = true;  	if (0 == 0) {  		base.PerformBasicCounts ();  		this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  		this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  		this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  		while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  			objArray = new object[7];  			if (0 != 0) {  				goto Label_0064;  			}  			objArray [0] = "Invalid number of columns(";  			if (0 == 0) {  				objArray [1] = base.InputHeadings.Length;  				objArray [2] = ")' must match input(";  				objArray [3] = this._x43f451310e815b76;  				objArray [4] = ") count or input+output(";  				objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  				goto Label_005C;  			}  			if (0x7fffffff == 0) {  				return;  			}  		}  		return;  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if ((((uint)headers) - ((uint)headers)) >= 0) {  	base.Analyzed = true;  	if (0 == 0) {  		base.PerformBasicCounts ();  		this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  		this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  		this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  		while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  			objArray = new object[7];  			if (0 != 0) {  				goto Label_0064;  			}  			objArray [0] = "Invalid number of columns(";  			if (0 == 0) {  				objArray [1] = base.InputHeadings.Length;  				objArray [2] = ")' must match input(";  				objArray [3] = this._x43f451310e815b76;  				objArray [4] = ") count or input+output(";  				objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  				goto Label_005C;  			}  			if (0x7fffffff == 0) {  				return;  			}  		}  		return;  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if ((((uint)headers) - ((uint)headers)) >= 0) {  	base.Analyzed = true;  	if (0 == 0) {  		base.PerformBasicCounts ();  		this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  		this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  		this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  		while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  			objArray = new object[7];  			if (0 != 0) {  				goto Label_0064;  			}  			objArray [0] = "Invalid number of columns(";  			if (0 == 0) {  				objArray [1] = base.InputHeadings.Length;  				objArray [2] = ")' must match input(";  				objArray [3] = this._x43f451310e815b76;  				objArray [4] = ") count or input+output(";  				objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  				goto Label_005C;  			}  			if (0x7fffffff == 0) {  				return;  			}  		}  		return;  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if ((((uint)headers) - ((uint)headers)) >= 0) {  	base.Analyzed = true;  	if (0 == 0) {  		base.PerformBasicCounts ();  		this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  		this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  		this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  		while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  			objArray = new object[7];  			if (0 != 0) {  				goto Label_0064;  			}  			objArray [0] = "Invalid number of columns(";  			if (0 == 0) {  				objArray [1] = base.InputHeadings.Length;  				objArray [2] = ")' must match input(";  				objArray [3] = this._x43f451310e815b76;  				objArray [4] = ") count or input+output(";  				objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  				goto Label_005C;  			}  			if (0x7fffffff == 0) {  				return;  			}  		}  		return;  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if ((((uint)headers) - ((uint)headers)) >= 0) {  	base.Analyzed = true;  	if (0 == 0) {  		base.PerformBasicCounts ();  		this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  		this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  		this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  		while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  			objArray = new object[7];  			if (0 != 0) {  				goto Label_0064;  			}  			objArray [0] = "Invalid number of columns(";  			if (0 == 0) {  				objArray [1] = base.InputHeadings.Length;  				objArray [2] = ")' must match input(";  				objArray [3] = this._x43f451310e815b76;  				objArray [4] = ") count or input+output(";  				objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  				goto Label_005C;  			}  			if (0x7fffffff == 0) {  				return;  			}  		}  		return;  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	base.PerformBasicCounts ();  	this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  	this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  	this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  	while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  		objArray = new object[7];  		if (0 != 0) {  			goto Label_0064;  		}  		objArray [0] = "Invalid number of columns(";  		if (0 == 0) {  			objArray [1] = base.InputHeadings.Length;  			objArray [2] = ")' must match input(";  			objArray [3] = this._x43f451310e815b76;  			objArray [4] = ") count or input+output(";  			objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  			goto Label_005C;  		}  		if (0x7fffffff == 0) {  			return;  		}  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	base.PerformBasicCounts ();  	this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  	this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  	this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  	while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  		objArray = new object[7];  		if (0 != 0) {  			goto Label_0064;  		}  		objArray [0] = "Invalid number of columns(";  		if (0 == 0) {  			objArray [1] = base.InputHeadings.Length;  			objArray [2] = ")' must match input(";  			objArray [3] = this._x43f451310e815b76;  			objArray [4] = ") count or input+output(";  			objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  			goto Label_005C;  		}  		if (0x7fffffff == 0) {  			return;  		}  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	base.PerformBasicCounts ();  	this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  	this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  	this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  	while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  		objArray = new object[7];  		if (0 != 0) {  			goto Label_0064;  		}  		objArray [0] = "Invalid number of columns(";  		if (0 == 0) {  			objArray [1] = base.InputHeadings.Length;  			objArray [2] = ")' must match input(";  			objArray [3] = this._x43f451310e815b76;  			objArray [4] = ") count or input+output(";  			objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  			goto Label_005C;  		}  		if (0x7fffffff == 0) {  			return;  		}  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	base.PerformBasicCounts ();  	this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  	this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  	this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  	while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  		objArray = new object[7];  		if (0 != 0) {  			goto Label_0064;  		}  		objArray [0] = "Invalid number of columns(";  		if (0 == 0) {  			objArray [1] = base.InputHeadings.Length;  			objArray [2] = ")' must match input(";  			objArray [3] = this._x43f451310e815b76;  			objArray [4] = ") count or input+output(";  			objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  			goto Label_005C;  		}  		if (0x7fffffff == 0) {  			return;  		}  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	base.PerformBasicCounts ();  	this._x43f451310e815b76 = this._x554f16462d8d4675.DetermineInputCount ();  	this._x98cf41c6b0eaf6ab = this._x554f16462d8d4675.DetermineOutputCount ();  	this._xb52d4a98fad404da = base.InputHeadings.Length - this._x43f451310e815b76;  	while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  		objArray = new object[7];  		if (0 != 0) {  			goto Label_0064;  		}  		objArray [0] = "Invalid number of columns(";  		if (0 == 0) {  			objArray [1] = base.InputHeadings.Length;  			objArray [2] = ")' must match input(";  			objArray [3] = this._x43f451310e815b76;  			objArray [4] = ") count or input+output(";  			objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  			goto Label_005C;  		}  		if (0x7fffffff == 0) {  			return;  		}  	}  	return;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  	objArray = new object[7];  	if (0 != 0) {  		goto Label_0064;  	}  	objArray [0] = "Invalid number of columns(";  	if (0 == 0) {  		objArray [1] = base.InputHeadings.Length;  		objArray [2] = ")' must match input(";  		objArray [3] = this._x43f451310e815b76;  		objArray [4] = ") count or input+output(";  		objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  		goto Label_005C;  	}  	if (0x7fffffff == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  	objArray = new object[7];  	if (0 != 0) {  		goto Label_0064;  	}  	objArray [0] = "Invalid number of columns(";  	if (0 == 0) {  		objArray [1] = base.InputHeadings.Length;  		objArray [2] = ")' must match input(";  		objArray [3] = this._x43f451310e815b76;  		objArray [4] = ") count or input+output(";  		objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  		goto Label_005C;  	}  	if (0x7fffffff == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  	objArray = new object[7];  	if (0 != 0) {  		goto Label_0064;  	}  	objArray [0] = "Invalid number of columns(";  	if (0 == 0) {  		objArray [1] = base.InputHeadings.Length;  		objArray [2] = ")' must match input(";  		objArray [3] = this._x43f451310e815b76;  		objArray [4] = ") count or input+output(";  		objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  		goto Label_005C;  	}  	if (0x7fffffff == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  	objArray = new object[7];  	if (0 != 0) {  		goto Label_0064;  	}  	objArray [0] = "Invalid number of columns(";  	if (0 == 0) {  		objArray [1] = base.InputHeadings.Length;  		objArray [2] = ")' must match input(";  		objArray [3] = this._x43f451310e815b76;  		objArray [4] = ") count or input+output(";  		objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  		goto Label_005C;  	}  	if (0x7fffffff == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: while ((base.InputHeadings.Length != this._x43f451310e815b76) && (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab))) {  	objArray = new object[7];  	if (0 != 0) {  		goto Label_0064;  	}  	objArray [0] = "Invalid number of columns(";  	if (0 == 0) {  		objArray [1] = base.InputHeadings.Length;  		objArray [2] = ")' must match input(";  		objArray [3] = this._x43f451310e815b76;  		objArray [4] = ") count or input+output(";  		objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  		goto Label_005C;  	}  	if (0x7fffffff == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray = new object[7];  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	objArray [1] = base.InputHeadings.Length;  	objArray [2] = ")' must match input(";  	objArray [3] = this._x43f451310e815b76;  	objArray [4] = ") count or input+output(";  	objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  	goto Label_005C;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	objArray [1] = base.InputHeadings.Length;  	objArray [2] = ")' must match input(";  	objArray [3] = this._x43f451310e815b76;  	objArray [4] = ") count or input+output(";  	objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  	goto Label_005C;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	objArray [1] = base.InputHeadings.Length;  	objArray [2] = ")' must match input(";  	objArray [3] = this._x43f451310e815b76;  	objArray [4] = ") count or input+output(";  	objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  	goto Label_005C;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (0 == 0) {  	objArray [1] = base.InputHeadings.Length;  	objArray [2] = ")' must match input(";  	objArray [3] = this._x43f451310e815b76;  	objArray [4] = ") count or input+output(";  	objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  	goto Label_005C;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [2] = ")' must match input(";  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [3] = this._x43f451310e815b76;  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [4] = ") count or input+output(";  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [6] = ") count.";  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: if (csv.Next ()) {  	base.UpdateStatus (false);  	row = new LoadedRow (csv' this._xb52d4a98fad404da);  	num = 0;  	if ((((uint)num2) | 4) == 0) {  		goto Label_011D;  	}  	goto Label_010D;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: if ((((uint)num2) | 4) == 0) {  	goto Label_011D;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: if ((((uint)num) | 2) == 0) {  	goto Label_0100;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray [2] = " inputs' however' the data has ";  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: if ((((uint)num4) + ((uint)num)) <= uint.MaxValue) {  	objArray [3] = this._x43f451310e815b76;  	objArray [4] = " inputs.";  	throw new AnalystError (string.Concat (objArray));  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: if ((((uint)num4) + ((uint)num)) <= uint.MaxValue) {  	objArray [3] = this._x43f451310e815b76;  	objArray [4] = " inputs.";  	throw new AnalystError (string.Concat (objArray));  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray [3] = this._x43f451310e815b76;  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray [4] = " inputs.";  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: if (((((uint)num2) | 15) != 0) && (method.InputCount == this._x43f451310e815b76)) {  	goto Label_01C8;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray = new object[5];  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: try {  	StringBuilder builder;  	StreamWriter writer = new StreamWriter (x2608fe0a208c787d.OpenWrite ());  	Label_0013:  	if (base.ProduceOutputHeaders) {  		goto Label_018B;  	}  	Label_001E:  	writer2 = writer;  	goto Label_0183;  	Label_0026:  	if (1 != 0) {  	}  	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field;  		goto Label_0052;  		Label_004B:  		if (-1 == 0) {  			goto Label_005F;  		}  		Label_0052:  		if (enumerator.MoveNext ()) {  			goto Label_0069;  		}  		goto Label_0098;  		Label_005F:  		if (field.Input) {  			goto Label_007A;  		}  		goto Label_0052;  		Label_0069:  		field = enumerator.Current;  		if (4 == 0) {  			goto Label_0098;  		}  		goto Label_005F;  		Label_007A:  		field.AddRawHeadings (builder' null' base.OutputFormat);  		goto Label_004B;  	}  	Label_0098:  	if (this._xb52d4a98fad404da > 0) {  		using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  			AnalystField current;  			goto Label_00D1;  			Label_00C2:  			if (current.Output) {  				goto Label_00E7;  			}  			if (15 == 0) {  				goto Label_00C2;  			}  			Label_00D1:  			if (!enumerator2.MoveNext ()) {  				goto Label_0109;  			}  			current = enumerator2.Current;  			if (0 == 0) {  				goto Label_00C2;  			}  			Label_00E7:  			current.AddRawHeadings (builder' "ideal:"' base.OutputFormat);  			goto Label_00D1;  		}  	}  	Label_0109:  	using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field3;  		goto Label_0147;  		Label_0129:  		field3.AddRawHeadings (builder' "output:"' base.OutputFormat);  		goto Label_0147;  		Label_013E:  		if (field3.Output) {  			goto Label_0129;  		}  		Label_0147:  		if (enumerator3.MoveNext () || (0x7fffffff == 0)) {  			field3 = enumerator3.Current;  			goto Label_013E;  		}  	}  	writer.WriteLine (builder.ToString ());  	goto Label_001E;  	Label_0183:  	if (0 == 0) {  		return writer2;  	}  	goto Label_0013;  	Label_018B:  	builder = new StringBuilder ();  	goto Label_0026;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: try {  	StringBuilder builder;  	StreamWriter writer = new StreamWriter (x2608fe0a208c787d.OpenWrite ());  	Label_0013:  	if (base.ProduceOutputHeaders) {  		goto Label_018B;  	}  	Label_001E:  	writer2 = writer;  	goto Label_0183;  	Label_0026:  	if (1 != 0) {  	}  	using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field;  		goto Label_0052;  		Label_004B:  		if (-1 == 0) {  			goto Label_005F;  		}  		Label_0052:  		if (enumerator.MoveNext ()) {  			goto Label_0069;  		}  		goto Label_0098;  		Label_005F:  		if (field.Input) {  			goto Label_007A;  		}  		goto Label_0052;  		Label_0069:  		field = enumerator.Current;  		if (4 == 0) {  			goto Label_0098;  		}  		goto Label_005F;  		Label_007A:  		field.AddRawHeadings (builder' null' base.OutputFormat);  		goto Label_004B;  	}  	Label_0098:  	if (this._xb52d4a98fad404da > 0) {  		using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  			AnalystField current;  			goto Label_00D1;  			Label_00C2:  			if (current.Output) {  				goto Label_00E7;  			}  			if (15 == 0) {  				goto Label_00C2;  			}  			Label_00D1:  			if (!enumerator2.MoveNext ()) {  				goto Label_0109;  			}  			current = enumerator2.Current;  			if (0 == 0) {  				goto Label_00C2;  			}  			Label_00E7:  			current.AddRawHeadings (builder' "ideal:"' base.OutputFormat);  			goto Label_00D1;  		}  	}  	Label_0109:  	using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field3;  		goto Label_0147;  		Label_0129:  		field3.AddRawHeadings (builder' "output:"' base.OutputFormat);  		goto Label_0147;  		Label_013E:  		if (field3.Output) {  			goto Label_0129;  		}  		Label_0147:  		if (enumerator3.MoveNext () || (0x7fffffff == 0)) {  			field3 = enumerator3.Current;  			goto Label_013E;  		}  	}  	writer.WriteLine (builder.ToString ());  	goto Label_001E;  	Label_0183:  	if (0 == 0) {  		return writer2;  	}  	goto Label_0013;  	Label_018B:  	builder = new StringBuilder ();  	goto Label_0026;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	goto Label_0052;  	Label_004B:  	if (-1 == 0) {  		goto Label_005F;  	}  	Label_0052:  	if (enumerator.MoveNext ()) {  		goto Label_0069;  	}  	goto Label_0098;  	Label_005F:  	if (field.Input) {  		goto Label_007A;  	}  	goto Label_0052;  	Label_0069:  	field = enumerator.Current;  	if (4 == 0) {  		goto Label_0098;  	}  	goto Label_005F;  	Label_007A:  	field.AddRawHeadings (builder' null' base.OutputFormat);  	goto Label_004B;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: if (4 == 0) {  	goto Label_0098;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: if (this._xb52d4a98fad404da > 0) {  	using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField current;  		goto Label_00D1;  		Label_00C2:  		if (current.Output) {  			goto Label_00E7;  		}  		if (15 == 0) {  			goto Label_00C2;  		}  		Label_00D1:  		if (!enumerator2.MoveNext ()) {  			goto Label_0109;  		}  		current = enumerator2.Current;  		if (0 == 0) {  			goto Label_00C2;  		}  		Label_00E7:  		current.AddRawHeadings (builder' "ideal:"' base.OutputFormat);  		goto Label_00D1;  	}  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField current;  	goto Label_00D1;  	Label_00C2:  	if (current.Output) {  		goto Label_00E7;  	}  	if (15 == 0) {  		goto Label_00C2;  	}  	Label_00D1:  	if (!enumerator2.MoveNext ()) {  		goto Label_0109;  	}  	current = enumerator2.Current;  	if (0 == 0) {  		goto Label_00C2;  	}  	Label_00E7:  	current.AddRawHeadings (builder' "ideal:"' base.OutputFormat);  	goto Label_00D1;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystEvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystEvaluateRawCSV.cs,x972236628de6c041,The following statement contains a magic number: if (15 == 0) {  	goto Label_00C2;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,Analyze,The following statement contains a magic number: if (2 == 0) {  	goto Label_0074;  }  
Magic Number,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,xf911a8958011bd6d,The following statement contains a magic number: try {  	StringBuilder builder;  	string str;  	string[] strArray;  	int num;  	StreamWriter writer = new StreamWriter (x2608fe0a208c787d.OpenRead ());  	goto Label_002B;  	Label_0011:  	builder.Append ("\"cluster\"");  	writer.WriteLine (builder.ToString ());  	goto Label_0036;  	Label_002B:  	if (base.ProduceOutputHeaders) {  		goto Label_00CD;  	}  	Label_0036:  	writer2 = writer;  	goto Label_00C5;  	Label_003B:  	num++;  	if (0 == 0) {  	}  	Label_0044:  	if (num < strArray.Length) {  		goto Label_007A;  	}  	goto Label_0011;  	Label_0050:  	if ((((uint)num) + ((uint)num)) > uint.MaxValue) {  		goto Label_0044;  	}  	builder.Append ("\"");  	goto Label_003B;  	Label_007A:  	str = strArray [num];  	BasicFile.AppendSeparator (builder' base.OutputFormat);  	builder.Append ("\"");  	Label_0098:  	builder.Append (str);  	goto Label_00BB;  	Label_00A2:  	strArray = base.InputHeadings;  	num = 0;  	if (3 != 0) {  		goto Label_0044;  	}  	goto Label_00BB;  	Label_00B6:  	if (0 != 0) {  		goto Label_0098;  	}  	goto Label_00A2;  	Label_00BB:  	if (0x7fffffff != 0) {  		goto Label_0050;  	}  	Label_00C5:  	if (0 == 0) {  		return writer2;  	}  	goto Label_002B;  	Label_00CD:  	builder = new StringBuilder ();  	goto Label_00B6;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Analyst.CSV,AnalystClusterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\AnalystClusterCSV.cs,xf911a8958011bd6d,The following statement contains a magic number: if (3 != 0) {  	goto Label_0044;  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if ((((uint)headers) - ((uint)headers)) >= 0) {  	if (base.InputHeadings.Length == this._x43f451310e815b76) {  		return;  	}  	if (3 == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (3 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: if (base.InputHeadings.Length != (this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab)) {  	objArray = new object[7];  	goto Label_00E0;  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray = new object[7];  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [3] = this._x43f451310e815b76;  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [4] = ") count or input+output(";  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [5] = this._x43f451310e815b76 + this._x98cf41c6b0eaf6ab;  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [6] = ") count.";  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Analyze,The following statement contains a magic number: objArray [2] = ")' must match input(";  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: if ((((uint)num3) + ((uint)num3)) >= 0) {  	Label_008D:  	if (num4 >= this._x98cf41c6b0eaf6ab) {  		base.WriteRow (writer' row);  	}  	else {  		num5 = data2 [num4];  		if ((((uint)num2) - ((uint)num)) < 0) {  			goto Label_0125;  		}  		if ((((uint)num2) | 15) != 0) {  			row.Data [num++] = base.InputFormat.Format (num5' base.Precision);  			num4++;  			goto Label_008D;  		}  	}  	if (((uint)num3) < 0) {  		if (((uint)num5) <= uint.MaxValue) {  			goto Label_0125;  		}  		goto Label_0148;  	}  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: if (num4 >= this._x98cf41c6b0eaf6ab) {  	base.WriteRow (writer' row);  }  else {  	num5 = data2 [num4];  	if ((((uint)num2) - ((uint)num)) < 0) {  		goto Label_0125;  	}  	if ((((uint)num2) | 15) != 0) {  		row.Data [num++] = base.InputFormat.Format (num5' base.Precision);  		num4++;  		goto Label_008D;  	}  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: if ((((uint)num2) | 15) != 0) {  	row.Data [num++] = base.InputFormat.Format (num5' base.Precision);  	num4++;  	goto Label_008D;  }  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray [4] = " inputs.";  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray = new object[5];  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray [2] = " inputs' however' the data has ";  
Magic Number,Encog.App.Analyst.CSV,EvaluateRawCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\EvaluateRawCSV.cs,Process,The following statement contains a magic number: objArray [3] = this._x43f451310e815b76;  
Magic Number,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,ExtractFields,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = analyst.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field;  	int num2;  	string str;  	IHandleMissingValues values;  	double[] numArray2;  	int num3;  	double num4;  	double num5;  	double[] numArray4;  	double[] numArray5;  	int num6;  	goto Label_0070;  	Label_0022:  	if (!skipOutput) {  		goto Label_02B7;  	}  	Label_0029:  	if ((((uint)skipOutput) + ((uint)num6)) > uint.MaxValue) {  		goto Label_00B1;  	}  	goto Label_0070;  	Label_0043:  	if ((((uint)num4) - ((uint)outputLength)) > uint.MaxValue) {  		goto Label_0022;  	}  	if (((uint)num3) > uint.MaxValue) {  		goto Label_022A;  	}  	Label_0070:  	if (enumerator.MoveNext ()) {  		goto Label_02CD;  	}  	goto Label_01C2;  	Label_007E:  	if (((uint)num2) > uint.MaxValue) {  		goto Label_021B;  	}  	goto Label_0043;  	Label_009A:  	if (!field.Output) {  		goto Label_02B7;  	}  	goto Label_0022;  	Label_00B1:  	num5 = numArray5 [num6];  	Label_00B9:  	numArray [num++] = num5;  	num6++;  	Label_00C8:  	if (num6 < numArray5.Length) {  		goto Label_00B1;  	}  	if ((((uint)num3) + ((uint)num5)) >= 0) {  		goto Label_0116;  	}  	Label_00E8:  	numArray5 = field.Encode (str.Trim ());  	num6 = 0;  	if ((((uint)num6) + ((uint)num5)) >= 0) {  		goto Label_00C8;  	}  	Label_0116:  	if ((((uint)num4) - ((uint)num5)) <= uint.MaxValue) {  		goto Label_007E;  	}  	goto Label_01C2;  	Label_0138:  	if (field.Action == NormalizationAction.Normalize) {  		num4 = csv.Format.Parse (str.Trim ());  		num4 = field.Normalize (num4);  		numArray [num++] = num4;  		if ((((uint)outputLength) - ((uint)num6)) > uint.MaxValue) {  			goto Label_022A;  		}  		goto Label_0070;  	}  	if ((((uint)num2) - ((uint)outputLength)) <= uint.MaxValue) {  		goto Label_00E8;  	}  	goto Label_01C2;  	Label_01A4:  	if (num3 < numArray2.Length) {  		goto Label_0207;  	}  	goto Label_0070;  	Label_01B1:  	if (str.Length == 0) {  		goto Label_025F;  	}  	goto Label_0138;  	Label_01C2:  	if ((((uint)num6) - ((uint)num3)) >= 0) {  		return numArray;  	}  	if ((((uint)num2) - ((uint)num5)) <= uint.MaxValue) {  		goto Label_02CD;  	}  	goto Label_0295;  	Label_0202:  	num3 = 0;  	goto Label_01A4;  	Label_0207:  	numArray [num++] = numArray2 [num3];  	num3++;  	goto Label_02E6;  	Label_021B:  	numArray2 = values.HandleMissing (analyst' field);  	if (numArray2 != null) {  		goto Label_0202;  	}  	Label_022A:  	numArray4 = null;  	if ((((uint)outputLength) | 8) != 0) {  		return numArray4;  	}  	goto Label_02E6;  	Label_024E:  	if (!str.Equals ("?")) {  		goto Label_01B1;  	}  	Label_025F:  	values = analyst.Script.Normalize.MissingValues;  	goto Label_021B;  	Label_0273:  	if (((uint)num5) > uint.MaxValue) {  		goto Label_00B9;  	}  	str = csv.Get (num2);  	goto Label_024E;  	Label_0295:  	if ((((uint)num5) | uint.MaxValue) == 0) {  		goto Label_0029;  	}  	goto Label_0022;  	Label_02B7:  	num2 = headers.Find (field.Name);  	goto Label_0273;  	Label_02CD:  	field = enumerator.Current;  	if (field.Action == NormalizationAction.Ignore) {  		goto Label_0070;  	}  	goto Label_009A;  	Label_02E6:  	if ((((uint)num4) - ((uint)skipOutput)) >= 0) {  		goto Label_01A4;  	}  }  
Magic Number,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,ExtractFields,The following statement contains a magic number: if ((((uint)outputLength) | 8) != 0) {  	return numArray4;  }  
Magic Number,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,Normalize,The following statement contains a magic number: try {  	double[] numArray;  	StringBuilder builder;  	csv = new ReadCSV (base.InputFilename.ToString ()' base.ExpectInputHeaders' base.InputFormat);  	if ((((uint)num) | uint.MaxValue) != 0) {  		goto Label_0110;  	}  	Label_004F:  	writer.WriteLine (builder);  	goto Label_0063;  	Label_0059:  	if (numArray != null) {  		goto Label_0090;  	}  	if (1 == 0) {  		goto Label_0081;  	}  	Label_0063:  	if (csv.Next () && !base.ShouldStop ()) {  		goto Label_0105;  	}  	return;  	Label_007E:  	if (0 != 0) {  		goto Label_0063;  	}  	Label_0081:  	numArray = this._x7acb8518c8ed6133.Process (numArray);  	goto Label_0059;  	Label_0090:  	builder = new StringBuilder ();  	NumberList.ToList (base.OutputFormat' builder' numArray);  	goto Label_004F;  	Label_00A7:  	numArray = ExtractFields (this._x554f16462d8d4675' this._xc5416b6511261016' csv' num' false);  	if (this._x7acb8518c8ed6133.TotalDepth <= 1) {  		goto Label_0059;  	}  	if (((uint)num) >= 0) {  		goto Label_007E;  	}  	goto Label_004F;  	Label_00E1:  	this.x6c260f7f6142106c (writer);  	Label_00E8:  	base.ResetStatus ();  	if (0 == 0) {  		num = this._x554f16462d8d4675.DetermineTotalColumns ();  	}  	goto Label_0063;  	Label_0105:  	base.UpdateStatus (false);  	goto Label_00A7;  	Label_0110:  	file.Delete ();  	writer = new StreamWriter (file.OpenWrite ());  	if (!base.ProduceOutputHeaders) {  		goto Label_00E8;  	}  	goto Label_00E1;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  finally {  	base.ReportDone (false);  	goto Label_01B0;  	Label_014E:  	if ((((uint)num) - ((uint)num)) > uint.MaxValue) {  		goto Label_0173;  	}  	if (0 == 0) {  		goto Label_01D5;  	}  	goto Label_01B0;  	Label_016E:  	if (writer != null) {  		goto Label_019B;  	}  	goto Label_014E;  	Label_0173:  	if (2 == 0) {  		goto Label_016E;  	}  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_0173;  	}  	goto Label_01D5;  	Label_0196:  	if (csv != null) {  		goto Label_01B7;  	}  	goto Label_016E;  	Label_019B:  	try {  		writer.Close ();  	}  	catch (Exception exception3) {  		EncogLogging.Log (exception3);  	}  	goto Label_01D5;  	Label_01B0:  	if (1 != 0) {  		goto Label_0196;  	}  	Label_01B7:  	try {  		csv.Close ();  	}  	catch (Exception exception2) {  		EncogLogging.Log (exception2);  	}  	goto Label_016E;  	if (0 == 0) {  		goto Label_016E;  	}  	goto Label_014E;  	Label_01D5:  	;  }  
Magic Number,Encog.App.Analyst.CSV.Normalize,AnalystNormalizeCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Normalize\AnalystNormalizeCSV.cs,Normalize,The following statement contains a magic number: if (2 == 0) {  	goto Label_016E;  }  
Magic Number,Encog.App.Analyst.CSV.Shuffle,ShuffleCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Shuffle\ShuffleCSV.cs,x75f8dae9674cb841,The following statement contains a magic number: if (0xff != 0) {  	if (15 != 0) {  		return null;  	}  	goto Label_0053;  }  
Magic Number,Encog.App.Analyst.CSV.Shuffle,ShuffleCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Shuffle\ShuffleCSV.cs,x75f8dae9674cb841,The following statement contains a magic number: if (15 != 0) {  	return null;  }  
Magic Number,Encog.App.Analyst.CSV.Shuffle,ShuffleCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Shuffle\ShuffleCSV.cs,xc4041c33ab048f27,The following statement contains a magic number: if (8 != 0) {  	if (0 == 0) {  		if ((((uint)index) + ((uint)index)) >= 0) {  			return;  		}  		goto Label_0092;  	}  	goto Label_006F;  }  
Magic Number,Encog.App.Analyst.CSV.Shuffle,ShuffleCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Shuffle\ShuffleCSV.cs,xc4041c33ab048f27,The following statement contains a magic number: if (15 != 0) {  	if ((num2 < this._xb85b7645153fc718) && !base.ShouldStop ()) {  		LoadedRow row = new LoadedRow (xe4aa442e12986e06);  		if (0 == 0) {  			this._x5cafa8d49ea71ea1 [num2++] = row;  			goto Label_003E;  		}  		goto Label_0028;  	}  	goto Label_0018;  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,Process,The following statement contains a magic number: using (IEnumerator<SegregateTargetPercent> enumerator = this._x2ea7a1eff81ae7c0.GetEnumerator ()) {  	SegregateTargetPercent percent;  	StreamWriter writer;  	goto Label_0044;  	Label_0038:  	if (0 != 0) {  		goto Label_00D1;  	}  	Label_003E:  	writer.Close ();  	Label_0044:  	if (enumerator.MoveNext ()) {  		goto Label_00D1;  	}  	if (0 == 0) {  		goto Label_00EE;  	}  	if (0 == 0) {  		goto Label_00D1;  	}  	if (0 == 0) {  		goto Label_00BC;  	}  	if (0 == 0) {  		goto Label_0098;  	}  	goto Label_003E;  	Label_0067:  	if (percent.NumberRemaining > 0) {  		goto Label_0086;  	}  	if (0 == 0) {  		goto Label_00B9;  	}  	goto Label_0098;  	Label_0075:  	percent.NumberRemaining--;  	Label_0083:  	if (0 == 0) {  		goto Label_0067;  	}  	Label_0086:  	if (!dcsv.Next () || base.ShouldStop ()) {  		goto Label_003E;  	}  	Label_0098:  	base.UpdateStatus (false);  	LoadedRow row = new LoadedRow (dcsv);  	base.WriteRow (writer' row);  	if (4 == 0) {  		goto Label_0083;  	}  	goto Label_0075;  	Label_00B9:  	if (0 == 0) {  		goto Label_00CE;  	}  	Label_00BC:  	writer = base.PrepareOutputFile (percent.Filename);  	goto Label_0067;  	Label_00CE:  	if (0 == 0) {  		goto Label_0038;  	}  	Label_00D1:  	percent = enumerator.Current;  	goto Label_00BC;  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,Process,The following statement contains a magic number: if (4 == 0) {  	goto Label_0083;  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,x461c3bf969128260,The following statement contains a magic number: do {  	while (this._x2ea7a1eff81ae7c0.Count < 2) {  		throw new QuantError ("There must be at least two segregation targets.");  	}  	num = 0;  }  while ((((uint)num) & 0) != 0);  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,x461c3bf969128260,The following statement contains a magic number: while (this._x2ea7a1eff81ae7c0.Count < 2) {  	throw new QuantError ("There must be at least two segregation targets.");  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,x461c3bf969128260,The following statement contains a magic number: if (num != 100) {  	throw new QuantError ("Target percents must equal 100.");  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,xae1ebc39c039dcb2,The following statement contains a magic number: if ((((uint)num3) & 0) == 0) {  	int num = 0;  	using (IEnumerator<SegregateTargetPercent> enumerator = this._x2ea7a1eff81ae7c0.GetEnumerator ()) {  		SegregateTargetPercent percent2;  		SegregateTargetPercent percent3;  		double num2;  		Label_0037:  		if (enumerator.MoveNext ()) {  			goto Label_011E;  		}  		int num4 = base.RecordCount - num;  		if ((num4 > 0) && (percent != null)) {  			percent.NumberRemaining += num4;  			if ((((uint)num) - ((uint)num3)) > uint.MaxValue) {  			}  		}  		return;  		Label_0048:  		if ((((uint)num2) - ((uint)num2)) > uint.MaxValue) {  			goto Label_006C;  		}  		Label_0060:  		num += num3;  		goto Label_0037;  		Label_006C:  		if (0 != 0) {  			goto Label_0083;  		}  		goto Label_0060;  		Label_0073:  		if (percent.Percent > percent3.Percent) {  			goto Label_00BA;  		}  		goto Label_006C;  		Label_0083:  		if ((((uint)num2) + ((uint)num4)) < 0) {  			goto Label_0073;  		}  		if ((((uint)num3) | uint.MaxValue) == 0) {  		}  		goto Label_0048;  		Label_00BA:  		percent = percent3;  		goto Label_013D;  		Label_00C1:  		if (percent == null) {  			goto Label_00BA;  		}  		goto Label_0128;  		Label_00C6:  		if (1 == 0) {  			goto Label_011E;  		}  		goto Label_0104;  		Label_00CF:  		percent3 = percent2;  		if (0 != 0) {  			goto Label_006C;  		}  		num2 = ((double)percent3.Percent) / 100.0;  		num3 = (int)(base.RecordCount * num2);  		if (0 != 0) {  			goto Label_006C;  		}  		percent3.NumberRemaining = num3;  		goto Label_00C6;  		Label_0104:  		if ((((uint)num3) | uint.MaxValue) != 0) {  			goto Label_00C1;  		}  		goto Label_0128;  		Label_011E:  		percent2 = enumerator.Current;  		goto Label_00CF;  		Label_0128:  		if (((uint)num2) >= 0) {  			goto Label_0073;  		}  		Label_013D:  		if ((((uint)num2) - ((uint)num4)) >= 0) {  			goto Label_0083;  		}  		goto Label_0048;  	}  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,xae1ebc39c039dcb2,The following statement contains a magic number: using (IEnumerator<SegregateTargetPercent> enumerator = this._x2ea7a1eff81ae7c0.GetEnumerator ()) {  	SegregateTargetPercent percent2;  	SegregateTargetPercent percent3;  	double num2;  	Label_0037:  	if (enumerator.MoveNext ()) {  		goto Label_011E;  	}  	int num4 = base.RecordCount - num;  	if ((num4 > 0) && (percent != null)) {  		percent.NumberRemaining += num4;  		if ((((uint)num) - ((uint)num3)) > uint.MaxValue) {  		}  	}  	return;  	Label_0048:  	if ((((uint)num2) - ((uint)num2)) > uint.MaxValue) {  		goto Label_006C;  	}  	Label_0060:  	num += num3;  	goto Label_0037;  	Label_006C:  	if (0 != 0) {  		goto Label_0083;  	}  	goto Label_0060;  	Label_0073:  	if (percent.Percent > percent3.Percent) {  		goto Label_00BA;  	}  	goto Label_006C;  	Label_0083:  	if ((((uint)num2) + ((uint)num4)) < 0) {  		goto Label_0073;  	}  	if ((((uint)num3) | uint.MaxValue) == 0) {  	}  	goto Label_0048;  	Label_00BA:  	percent = percent3;  	goto Label_013D;  	Label_00C1:  	if (percent == null) {  		goto Label_00BA;  	}  	goto Label_0128;  	Label_00C6:  	if (1 == 0) {  		goto Label_011E;  	}  	goto Label_0104;  	Label_00CF:  	percent3 = percent2;  	if (0 != 0) {  		goto Label_006C;  	}  	num2 = ((double)percent3.Percent) / 100.0;  	num3 = (int)(base.RecordCount * num2);  	if (0 != 0) {  		goto Label_006C;  	}  	percent3.NumberRemaining = num3;  	goto Label_00C6;  	Label_0104:  	if ((((uint)num3) | uint.MaxValue) != 0) {  		goto Label_00C1;  	}  	goto Label_0128;  	Label_011E:  	percent2 = enumerator.Current;  	goto Label_00CF;  	Label_0128:  	if (((uint)num2) >= 0) {  		goto Label_0073;  	}  	Label_013D:  	if ((((uint)num2) - ((uint)num4)) >= 0) {  		goto Label_0083;  	}  	goto Label_0048;  }  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateCSV.cs,xae1ebc39c039dcb2,The following statement contains a magic number: num2 = ((double)percent3.Percent) / 100.0;  
Magic Number,Encog.App.Analyst.CSV.Segregate,SegregateTargetPercent,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Segregate\SegregateTargetPercent.cs,ToString,The following statement contains a magic number: do {  	builder.Append ("]");  }  while (4 == 0);  
Magic Number,Encog.Neural.Networks.Training.Cross,CrossValidationKFold,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Cross\CrossValidationKFold.cs,CrossValidationKFold,The following statement contains a magic number: if (8 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV.Balance,BalanceCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Balance\BalanceCSV.cs,Process,The following statement contains a magic number: if (8 == 0) {  	goto Label_0129;  }  
Magic Number,Encog.ML.Kmeans,KMeansClustering,C:\repos\neismit_emds\Nsim4\Encog\ML\Kmeans\KMeansClustering.cs,CalculateEuclideanDistance,The following statement contains a magic number: return Math.Sqrt (c.Centers.Select<double' double> ((t' i) => Math.Pow (d [i] - t' 2.0)).Sum ());  
Magic Number,Encog.ML.Kmeans,KMeansClustering,C:\repos\neismit_emds\Nsim4\Encog\ML\Kmeans\KMeansClustering.cs,x318cf87d7d6afed3,The following statement contains a magic number: if (8 == 0) {  	if ((((uint)num) + ((uint)num)) > uint.MaxValue) {  		goto Label_0039;  	}  	goto Label_0060;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,FinalizeStructure,The following statement contains a magic number: if (this._layers.Count >= 2) {  	goto Label_00D4;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,FinalizeStructure,The following statement contains a magic number: if (2 != 0) {  	goto Label_0062;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,UpdateProperties,The following statement contains a magic number: if (!this._network.Properties.ContainsKey ("CONNECTION_LIMIT")) {  	this._connectionLimited = false;  	this._connectionLimit = 0.0;  	if (2 != 0) {  		goto Label_0035;  	}  	goto Label_0058;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,UpdateProperties,The following statement contains a magic number: if (2 != 0) {  	goto Label_0035;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,UpdateProperties,The following statement contains a magic number: if (this._flat == null) {  	if (0 == 0) {  		if (4 != 0) {  			return;  		}  		goto Label_0026;  	}  	goto Label_006B;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,UpdateProperties,The following statement contains a magic number: if (0 == 0) {  	if (4 != 0) {  		return;  	}  	goto Label_0026;  }  
Magic Number,Encog.Neural.Networks.Structure,NeuralStructure,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NeuralStructure.cs,UpdateProperties,The following statement contains a magic number: if (4 != 0) {  	return;  }  
Magic Number,Encog.Neural.Networks.Structure,NetworkCODEC,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NetworkCODEC.cs,Equals,The following statement contains a magic number: return Equals (network1' network2' 10);  
Magic Number,Encog.Neural.Networks.Structure,NetworkCODEC,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NetworkCODEC.cs,Equals,The following statement contains a magic number: if (numArray.Length == numArray2.Length) {  	num = Math.Pow (10.0' (double)precision);  	if (double.IsInfinity (num) || (num > 9.2233720368547758E+18)) {  		throw new NeuralNetworkError ("Precision of " + precision + " decimal places is not supported.");  	}  	Label_0052:  	num2 = 0;  	goto Label_001A;  	if ((((uint)num2) + ((uint)num)) < 0) {  		goto Label_0100;  	}  	if ((((uint)precision) - ((uint)num3)) >= 0) {  		if (((uint)num) >= 0) {  			goto Label_0052;  		}  		goto Label_0025;  	}  }  
Magic Number,Encog.Neural.Networks.Structure,NetworkCODEC,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NetworkCODEC.cs,Equals,The following statement contains a magic number: if (numArray.Length == numArray2.Length) {  	num = Math.Pow (10.0' (double)precision);  	if (double.IsInfinity (num) || (num > 9.2233720368547758E+18)) {  		throw new NeuralNetworkError ("Precision of " + precision + " decimal places is not supported.");  	}  	Label_0052:  	num2 = 0;  	goto Label_001A;  	if ((((uint)num2) + ((uint)num)) < 0) {  		goto Label_0100;  	}  	if ((((uint)precision) - ((uint)num3)) >= 0) {  		if (((uint)num) >= 0) {  			goto Label_0052;  		}  		goto Label_0025;  	}  }  
Magic Number,Encog.Neural.Networks.Structure,NetworkCODEC,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NetworkCODEC.cs,Equals,The following statement contains a magic number: num = Math.Pow (10.0' (double)precision);  
Magic Number,Encog.Neural.Networks.Structure,NetworkCODEC,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\NetworkCODEC.cs,Equals,The following statement contains a magic number: if (double.IsInfinity (num) || (num > 9.2233720368547758E+18)) {  	throw new NeuralNetworkError ("Precision of " + precision + " decimal places is not supported.");  }  
Magic Number,Encog.Neural.Networks.Structure,AnalyzeNetwork,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Structure\AnalyzeNetwork.cs,AnalyzeNetwork,The following statement contains a magic number: if (4 != 0) {  	goto Label_00C3;  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The following statement contains a magic number: if (num5 < fieldArray.Length) {  	fieldArray [num5] = this._xa942970cc8a85fd4 [num5].FinalizeField ();  	if ((((uint)num6) + ((uint)num)) <= uint.MaxValue) {  		goto Label_0011;  	}  	if ((((uint)num8) | 3) != 0) {  		goto Label_00E8;  	}  }  else {  	if (((uint)flag2) > uint.MaxValue) {  		goto Label_0336;  	}  	target.Script.Fields = fieldArray;  	return;  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The following statement contains a magic number: if ((((uint)num8) | 3) != 0) {  	goto Label_00E8;  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The following statement contains a magic number: if (field3.Integer && (field3.AnalyzedClassMembers.Count <= 2)) {  	if ((((uint)num6) - ((uint)num5)) >= 0) {  		if ((((uint)num7) | 4) == 0) {  			goto Label_059B;  		}  		field3.Class = false;  	}  	else {  		if ((((uint)flag2) + ((uint)num8)) >= 0) {  			goto Label_0350;  		}  		goto Label_02FF;  	}  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The following statement contains a magic number: if (field3.Integer && (field3.AnalyzedClassMembers.Count <= 2)) {  	if ((((uint)num6) - ((uint)num5)) >= 0) {  		if ((((uint)num7) | 4) == 0) {  			goto Label_059B;  		}  		field3.Class = false;  	}  	else {  		if ((((uint)flag2) + ((uint)num8)) >= 0) {  			goto Label_0350;  		}  		goto Label_02FF;  	}  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The following statement contains a magic number: if ((((uint)num6) - ((uint)num5)) >= 0) {  	if ((((uint)num7) | 4) == 0) {  		goto Label_059B;  	}  	field3.Class = false;  }  else {  	if ((((uint)flag2) + ((uint)num8)) >= 0) {  		goto Label_0350;  	}  	goto Label_02FF;  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,Process,The following statement contains a magic number: if ((((uint)num7) | 4) == 0) {  	goto Label_059B;  }  
Magic Number,Encog.App.Analyst.Analyze,PerformAnalysis,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\PerformAnalysis.cs,x7e640a0bc3eeb27e,The following statement contains a magic number: if (3 != 0) {  	this._xa942970cc8a85fd4 = new AnalyzedField[xe4aa442e12986e06.ColumnCount];  	num = 0;  	goto Label_0031;  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The following statement contains a magic number: try {  	num2 = int.Parse (str);  	goto Label_00F0;  	Label_00DA:  	this._xb1c30745a1525188 += num2;  	goto Label_0007;  	Label_00EB:  	if (!flag) {  		goto Label_00DA;  	}  	goto Label_0007;  	Label_00F0:  	base.Max = Math.Max ((double)num2' base.Max);  	base.Min = Math.Min ((double)num2' base.Min);  	goto Label_00EB;  }  catch (FormatException) {  	goto Label_014F;  	Label_0120:  	base.Min = 0.0;  	base.StandardDeviation = 0.0;  	goto Label_0007;  	Label_0140:  	if (!base.Real) {  		goto Label_015C;  	}  	if (2 != 0) {  		goto Label_0007;  	}  	Label_014F:  	base.Integer = false;  	if (0 == 0) {  		goto Label_0140;  	}  	if (0 != 0) {  		goto Label_0007;  	}  	Label_015C:  	base.Max = 0.0;  	if (((uint)flag) <= uint.MaxValue) {  		goto Label_0120;  	}  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The following statement contains a magic number: if (2 != 0) {  	goto Label_0007;  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The following statement contains a magic number: try {  	num = CSVFormat.EgFormat.Parse (str);  	base.Max = Math.Max (num' base.Max);  	base.Min = Math.Min (num' base.Min);  	this._xb1c30745a1525188 += num;  	flag = true;  }  catch (FormatException) {  	if ((((uint)flag) | 2) != 0) {  		goto Label_02AB;  	}  	Label_027A:  	base.StandardDeviation = 0.0;  	Label_0289:  	if ((((uint)num2) | 2) != 0) {  		goto Label_00BD;  	}  	Label_02A1:  	if (!base.Integer) {  		goto Label_02B4;  	}  	goto Label_00BD;  	Label_02AB:  	base.Real = false;  	goto Label_02A1;  	Label_02B4:  	base.Max = 0.0;  	base.Min = 0.0;  	if (((uint)num) > uint.MaxValue) {  		goto Label_0289;  	}  	if ((((uint)flag) - ((uint)propertyInt)) >= 0) {  		goto Label_027A;  	}  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The following statement contains a magic number: try {  	num = CSVFormat.EgFormat.Parse (str);  	base.Max = Math.Max (num' base.Max);  	base.Min = Math.Min (num' base.Min);  	this._xb1c30745a1525188 += num;  	flag = true;  }  catch (FormatException) {  	if ((((uint)flag) | 2) != 0) {  		goto Label_02AB;  	}  	Label_027A:  	base.StandardDeviation = 0.0;  	Label_0289:  	if ((((uint)num2) | 2) != 0) {  		goto Label_00BD;  	}  	Label_02A1:  	if (!base.Integer) {  		goto Label_02B4;  	}  	goto Label_00BD;  	Label_02AB:  	base.Real = false;  	goto Label_02A1;  	Label_02B4:  	base.Max = 0.0;  	base.Min = 0.0;  	if (((uint)num) > uint.MaxValue) {  		goto Label_0289;  	}  	if ((((uint)flag) - ((uint)propertyInt)) >= 0) {  		goto Label_027A;  	}  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The following statement contains a magic number: if ((((uint)flag) | 2) != 0) {  	goto Label_02AB;  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze1,The following statement contains a magic number: if ((((uint)num2) | 2) != 0) {  	goto Label_00BD;  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze2,The following statement contains a magic number: if (!str.Equals ("")) {  	if (!str.Equals ("?")) {  		num = CSVFormat.EgFormat.Parse (str);  		this._x1f828c67e123dec2 += Math.Pow (num - base.Mean' 2.0);  		if (0x7fffffff != 0) {  			if (0xff == 0) {  			}  			return;  		}  		return;  	}  	if (((uint)num) >= 0) {  		return;  	}  	goto Label_0054;  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze2,The following statement contains a magic number: if (!str.Equals ("?")) {  	num = CSVFormat.EgFormat.Parse (str);  	this._x1f828c67e123dec2 += Math.Pow (num - base.Mean' 2.0);  	if (0x7fffffff != 0) {  		if (0xff == 0) {  		}  		return;  	}  	return;  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze2,The following statement contains a magic number: this._x1f828c67e123dec2 += Math.Pow (num - base.Mean' 2.0);  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,Analyze2,The following statement contains a magic number: if ((-2147483648 != 0) && (0 != 0)) {  }  
Magic Number,Encog.App.Analyst.Analyze,AnalyzedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Analyze\AnalyzedField.cs,FinalizeField,The following statement contains a magic number: if (2 != 0) {  	if (!field.Class) {  		return field;  	}  	analyzedClassMembers = this.AnalyzedClassMembers;  }  
Magic Number,Encog.ML.Data.Buffer,MemoryDataLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\MemoryDataLoader.cs,External2Memory,The following statement contains a magic number: if (3 != 0) {  	num2++;  	if (num2 < 0x2710) {  		goto Label_0021;  	}  	num2 = 0;  	goto Label_0065;  }  
Magic Number,Encog.ML.Data.Buffer,BufferedMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedMLDataSet.cs,BufferedMLDataSet,The following statement contains a magic number: if ((15 == 0) || File.Exists (this.xb44380e048627945)) {  	this.xb77060c140f92cfd.Open ();  }  
Magic Number,Encog.ML.Data.Buffer,BufferedMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedMLDataSet.cs,Close,The following statement contains a magic number: if (this._x071bde1041617fce != null) {  	this._x071bde1041617fce.RemoveAdditional (this);  	if (-2147483648 == 0) {  		goto Label_002C;  	}  	if (0 == 0) {  		if (-2147483648 == 0) {  			return;  		}  	}  	else {  		goto Label_0040;  	}  }  
Magic Number,Encog.ML.Data.Buffer,BufferedMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedMLDataSet.cs,Close,The following statement contains a magic number: if (this._x071bde1041617fce != null) {  	this._x071bde1041617fce.RemoveAdditional (this);  	if (-2147483648 == 0) {  		goto Label_002C;  	}  	if (0 == 0) {  		if (-2147483648 == 0) {  			return;  		}  	}  	else {  		goto Label_0040;  	}  }  
Magic Number,Encog.ML.Data.Buffer,BufferedMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedMLDataSet.cs,Close,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_002C;  }  
Magic Number,Encog.ML.Data.Buffer,BufferedMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedMLDataSet.cs,Close,The following statement contains a magic number: if (0 == 0) {  	if (-2147483648 == 0) {  		return;  	}  }  else {  	goto Label_0040;  }  
Magic Number,Encog.ML.Data.Buffer,BufferedMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BufferedMLDataSet.cs,Close,The following statement contains a magic number: if (-2147483648 == 0) {  	return;  }  
Magic Number,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,Create,The following statement contains a magic number: try {  	double[] numArray;  	double[] numArray2;  	this._x43f451310e815b76 = inputCount;  	goto Label_016A;  	Label_000C:  	this._xb0c1b6e952349c8a.Write ((double)numArray.Length);  	this._xb0c1b6e952349c8a.Write ((double)numArray2.Length);  	this._x7d0efe641fcf5d57 = 0;  	this._x88770833a11cfa1a = (this._x43f451310e815b76 + this._xb52d4a98fad404da) + 1;  	this._xd272a54e91b953fc = this._x88770833a11cfa1a * 8;  	goto Label_00AA;  	Label_0056:  	this._xb0c1b6e952349c8a.Write ((byte)0x2d);  	this._xb0c1b6e952349c8a.Write ((byte)0x30);  	if ((((uint)inputCount) - ((uint)inputCount)) < 0) {  		goto Label_00CD;  	}  	this._xb0c1b6e952349c8a.Write ((byte)0x30);  	if (((uint)inputCount) <= uint.MaxValue) {  		goto Label_000C;  	}  	Label_00AA:  	if (0 == 0) {  		return;  	}  	goto Label_016A;  	Label_00B5:  	if ((((uint)idealCount) - ((uint)inputCount)) > uint.MaxValue) {  		goto Label_013C;  	}  	Label_00CD:  	this._xb0c1b6e952349c8a.Write ((byte)0x4f);  	this._xb0c1b6e952349c8a.Write ((byte)0x47);  	goto Label_01B6;  	Label_00EC:  	this._xb0c1b6e952349c8a.Write ((byte)0x43);  	goto Label_00B5;  	Label_00FE:  	this._xb0c1b6e952349c8a.Write ((byte)0x4e);  	if (1 != 0) {  		goto Label_00EC;  	}  	goto Label_016A;  	Label_0117:  	this._xb0c1b6e952349c8a.Write ((byte)0x45);  	goto Label_00FE;  	Label_0129:  	this._xcf18e5243f8d5fd3 = new FileStream (this._xb44380e048627945' FileMode.Create' FileAccess.ReadWrite);  	Label_013C:  	this._xb0c1b6e952349c8a = new BinaryWriter (this._xcf18e5243f8d5fd3);  	this._x4c7b3ec871749b3b = null;  	goto Label_0117;  	Label_0156:  	this._xcf18e5243f8d5fd3.Close ();  	this._xcf18e5243f8d5fd3 = null;  	goto Label_0129;  	Label_016A:  	this._xb52d4a98fad404da = idealCount;  	numArray = new double[inputCount];  	do {  		numArray2 = new double[idealCount];  		if (this._xcf18e5243f8d5fd3 == null) {  			goto Label_0129;  		}  	}  	while ((((uint)inputCount) & 0) != 0);  	goto Label_0156;  	Label_01B6:  	if ((((uint)inputCount) + ((uint)idealCount)) >= 0) {  		goto Label_0056;  	}  }  catch (IOException exception) {  	throw new BufferedDataError (exception);  }  
Magic Number,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,Create,The following statement contains a magic number: this._xd272a54e91b953fc = this._x88770833a11cfa1a * 8;  
Magic Number,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,Write,The following statement contains a magic number: try {  	double[] numArray;  	int num2;  	this._xcf18e5243f8d5fd3.Position = this.x7806fdb0315c23c4 (row' 0);  	if (-2147483648 != 0) {  		goto Label_003C;  	}  	Label_001B:  	num2 = 0;  	while (num2 < numArray.Length) {  		double num = numArray [num2];  		this._xb0c1b6e952349c8a.Write (num);  		num2++;  	}  	return;  	Label_003C:  	if (((uint)num2) <= uint.MaxValue) {  		numArray = v;  	}  	goto Label_001B;  }  catch (IOException exception) {  	throw new BufferedDataError (exception);  }  
Magic Number,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,Write,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_003C;  }  
Magic Number,Encog.ML.Data.Buffer,EncogEGBFile,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\EncogEGBFile.cs,x7806fdb0315c23c4,The following statement contains a magic number: return ((0x18 + (xa806b754814b9ae0 * this._xd272a54e91b953fc)) + (xf0476e906b9d9af4 * 8));  
Magic Number,Encog.ML.Data.Buffer,BinaryDataLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BinaryDataLoader.cs,Binary2External,The following statement contains a magic number: if ((((uint)num5) | 2) != 0) {  	goto Label_01FD;  }  
Magic Number,Encog.ML.Data.Buffer,BinaryDataLoader,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Buffer\BinaryDataLoader.cs,Binary2External,The following statement contains a magic number: if ((((uint)num5) | 15) != 0) {  	goto Label_0122;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (index < this._x4a3f0a05c02f235f.Length) {  	str = this._x4a3f0a05c02f235f [index].Trim ();  	if (-2147483648 != 0) {  		goto Label_0026;  	}  	goto Label_002E;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0026;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (!str.Equals ("?")) {  	if (2 == 0) {  		if (2 != 0) {  			goto Label_0014;  		}  		if (15 == 0) {  			goto Label_002E;  		}  	}  	index++;  	goto Label_0014;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (!str.Equals ("?")) {  	if (2 == 0) {  		if (2 != 0) {  			goto Label_0014;  		}  		if (15 == 0) {  			goto Label_002E;  		}  	}  	index++;  	goto Label_0014;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (!str.Equals ("?")) {  	if (2 == 0) {  		if (2 != 0) {  			goto Label_0014;  		}  		if (15 == 0) {  			goto Label_002E;  		}  	}  	index++;  	goto Label_0014;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (2 == 0) {  	if (2 != 0) {  		goto Label_0014;  	}  	if (15 == 0) {  		goto Label_002E;  	}  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (2 == 0) {  	if (2 != 0) {  		goto Label_0014;  	}  	if (15 == 0) {  		goto Label_002E;  	}  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (2 == 0) {  	if (2 != 0) {  		goto Label_0014;  	}  	if (15 == 0) {  		goto Label_002E;  	}  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (2 != 0) {  	goto Label_0014;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,HasMissing,The following statement contains a magic number: if (15 == 0) {  	goto Label_002E;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,Next,The following statement contains a magic number: try {  	string str;  	IList<string> list;  	Label_0000:  	str = this._xe134235b3526fa75.ReadLine ();  	goto Label_00DC;  	Label_0011:  	if (this._x4a3f0a05c02f235f == null) {  		goto Label_009E;  	}  	if (((uint)flag) < 0) {  		goto Label_0038;  	}  	Label_002E:  	list = this.x1f490eac106aee12 (str);  	int num = 0;  	Label_0038:  	foreach (string str2 in list) {  		if (num < this._x4a3f0a05c02f235f.Length) {  			this._x4a3f0a05c02f235f [num++] = str2;  		}  	}  	return true;  	Label_0086:  	if (str == null) {  		goto Label_00BD;  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0011;  	}  	Label_009E:  	this.x1b1a26735fdf0f31 (str);  	goto Label_002E;  	Label_00AC:  	if (str != null) {  		goto Label_0103;  	}  	if (-2147483648 == 0) {  		return flag;  	}  	if (-2147483648 != 0) {  		goto Label_0086;  	}  	Label_00BD:  	return false;  	if ((((uint)num) - ((uint)flag)) > uint.MaxValue) {  	}  	goto Label_0011;  	Label_00DC:  	if (((uint)flag) < 0) {  		goto Label_0011;  	}  	if (((uint)num) >= 0) {  		goto Label_00AC;  	}  	Label_0103:  	if (str.Trim ().Length == 0) {  		goto Label_0000;  	}  	goto Label_0086;  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,Next,The following statement contains a magic number: try {  	string str;  	IList<string> list;  	Label_0000:  	str = this._xe134235b3526fa75.ReadLine ();  	goto Label_00DC;  	Label_0011:  	if (this._x4a3f0a05c02f235f == null) {  		goto Label_009E;  	}  	if (((uint)flag) < 0) {  		goto Label_0038;  	}  	Label_002E:  	list = this.x1f490eac106aee12 (str);  	int num = 0;  	Label_0038:  	foreach (string str2 in list) {  		if (num < this._x4a3f0a05c02f235f.Length) {  			this._x4a3f0a05c02f235f [num++] = str2;  		}  	}  	return true;  	Label_0086:  	if (str == null) {  		goto Label_00BD;  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_0011;  	}  	Label_009E:  	this.x1b1a26735fdf0f31 (str);  	goto Label_002E;  	Label_00AC:  	if (str != null) {  		goto Label_0103;  	}  	if (-2147483648 == 0) {  		return flag;  	}  	if (-2147483648 != 0) {  		goto Label_0086;  	}  	Label_00BD:  	return false;  	if ((((uint)num) - ((uint)flag)) > uint.MaxValue) {  	}  	goto Label_0011;  	Label_00DC:  	if (((uint)flag) < 0) {  		goto Label_0011;  	}  	if (((uint)num) >= 0) {  		goto Label_00AC;  	}  	Label_0103:  	if (str.Trim ().Length == 0) {  		goto Label_0000;  	}  	goto Label_0086;  }  catch (IOException exception) {  	throw new EncogError (exception);  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,Next,The following statement contains a magic number: if (-2147483648 == 0) {  	return flag;  }  
Magic Number,Encog.Util.CSV,ReadCSV,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\ReadCSV.cs,Next,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0086;  }  
Magic Number,Encog.Util.CSV,NumberList,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\NumberList.cs,FromListInt,The following statement contains a magic number: if (str.Trim ().Length != 0) {  	string[] strArray = str.Split (new char[] {  		format.Separator  	});  	int length = strArray.Length;  	while (true) {  		int num3;  		int[] numArray = new int[length];  		if ((((uint)num3) + ((uint)num3)) > uint.MaxValue) {  			return numArray;  		}  		int index = 0;  		if (2 != 0) {  			while (index < strArray.Length) {  				try {  					string s = strArray [index];  					numArray [index] = int.Parse (s);  				}  				catch (Exception exception) {  					throw new PersistError (exception);  				}  				index++;  			}  			return numArray;  		}  	}  }  
Magic Number,Encog.Util.CSV,NumberList,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\NumberList.cs,FromListInt,The following statement contains a magic number: while (true) {  	int num3;  	int[] numArray = new int[length];  	if ((((uint)num3) + ((uint)num3)) > uint.MaxValue) {  		return numArray;  	}  	int index = 0;  	if (2 != 0) {  		while (index < strArray.Length) {  			try {  				string s = strArray [index];  				numArray [index] = int.Parse (s);  			}  			catch (Exception exception) {  				throw new PersistError (exception);  			}  			index++;  		}  		return numArray;  	}  }  
Magic Number,Encog.Util.CSV,NumberList,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\NumberList.cs,FromListInt,The following statement contains a magic number: if (2 != 0) {  	while (index < strArray.Length) {  		try {  			string s = strArray [index];  			numArray [index] = int.Parse (s);  		}  		catch (Exception exception) {  			throw new PersistError (exception);  		}  		index++;  	}  	return numArray;  }  
Magic Number,Encog.Util.CSV,NumberList,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\NumberList.cs,ToList,The following statement contains a magic number: ToList (format' 20' result' data);  
Magic Number,Encog.Util.CSV,CSVFormat,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\CSVFormat.cs,CSVFormat,The following statement contains a magic number: this._formats = new string[100];  
Magic Number,Encog.Util.CSV,CSVFormat,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\CSVFormat.cs,CSVFormat,The following statement contains a magic number: while (true) {  	StringBuilder builder;  	if (num < 100) {  		builder = new StringBuilder ();  		builder.Append ("#0");  		if (num > 0) {  			builder.Append (".");  		}  	}  	else {  		return;  	}  	for (num2 = 0; num2 < num; num2++) {  		builder.Append ("#");  	}  	this._formats [num] = builder.ToString ();  	num++;  }  
Magic Number,Encog.Util.CSV,CSVFormat,C:\repos\neismit_emds\Nsim4\Encog\Util\CSV\CSVFormat.cs,CSVFormat,The following statement contains a magic number: if (num < 100) {  	builder = new StringBuilder ();  	builder.Append ("#0");  	if (num > 0) {  		builder.Append (".");  	}  }  else {  	return;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: try {  	int num7;  	x665968ea622b9927 (V1' out num4' out num5);  	x665968ea622b9927 (V2' out num6' out num7);  	if (num4 != 2) {  		flag = false;  	}  	else {  		flag = num5 == 0;  	}  	goto Label_01BA;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: if (num4 != 2) {  	flag = false;  }  else {  	flag = num5 == 0;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: numArray [2' 0] = num3;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: num = (V1 [1' 0] * V2 [2' 0]) - (V1 [2' 0] * V2 [1' 0]);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: num = (V1 [1' 0] * V2 [2' 0]) - (V1 [2' 0] * V2 [1' 0]);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: if (-2 == 0) {  	goto Label_0129;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: if (num6 == 2) {  	goto Label_0127;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: try {  	x665968ea622b9927 (V1' out num4);  	x665968ea622b9927 (V2' out num5);  	flag = num4 == 2;  	if (((((uint)num2) - ((uint)num4)) > uint.MaxValue) || !flag) {  		throw new xb36c46347391c047 ();  	}  	goto Label_00BD;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: flag = num4 == 2;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: num2 = (V1 [2] * V2 [0]) - (V1 [0] * V2 [2]);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: num2 = (V1 [2] * V2 [0]) - (V1 [0] * V2 [2]);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: numArray [2] = num3;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,CrossProduct,The following statement contains a magic number: flag = num5 == 2;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Det,The following statement contains a magic number: if ((((uint)num8) + ((uint)num11)) <= uint.MaxValue) {  	Label_00F2:  	flag = num5 <= num;  	if ((((uint)num7) | 2) != 0) {  		if ((((uint)num11) + ((uint)num)) < 0) {  			goto Label_02DC;  		}  		if (flag) {  			numArray [num4' num5] -= numArray [num4' num2] * (numArray [num2' num5] / num7);  			num5++;  			goto Label_00F2;  		}  		goto Label_00B7;  	}  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Det,The following statement contains a magic number: if ((((uint)num7) | 2) != 0) {  	if ((((uint)num11) + ((uint)num)) < 0) {  		goto Label_02DC;  	}  	if (flag) {  		numArray [num4' num5] -= numArray [num4' num2] * (numArray [num2' num5] / num7);  		num5++;  		goto Label_00F2;  	}  	goto Label_00B7;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: try {  	int num;  	int num2;  	x665968ea622b9927 (V1' out num);  	x665968ea622b9927 (V2' out num2);  	bool flag = num == 2;  	if (((((uint)num2) + ((uint)num2)) > uint.MaxValue) || !flag) {  		throw new xb36c46347391c047 ();  	}  	flag = num2 == 2;  	if (0 == 0) {  		if (!flag) {  			throw new xb36c46347391c047 ();  		}  		num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  	}  	return num3;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: try {  	int num;  	int num2;  	x665968ea622b9927 (V1' out num);  	x665968ea622b9927 (V2' out num2);  	bool flag = num == 2;  	if (((((uint)num2) + ((uint)num2)) > uint.MaxValue) || !flag) {  		throw new xb36c46347391c047 ();  	}  	flag = num2 == 2;  	if (0 == 0) {  		if (!flag) {  			throw new xb36c46347391c047 ();  		}  		num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  	}  	return num3;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: try {  	int num;  	int num2;  	x665968ea622b9927 (V1' out num);  	x665968ea622b9927 (V2' out num2);  	bool flag = num == 2;  	if (((((uint)num2) + ((uint)num2)) > uint.MaxValue) || !flag) {  		throw new xb36c46347391c047 ();  	}  	flag = num2 == 2;  	if (0 == 0) {  		if (!flag) {  			throw new xb36c46347391c047 ();  		}  		num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  	}  	return num3;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: try {  	int num;  	int num2;  	x665968ea622b9927 (V1' out num);  	x665968ea622b9927 (V2' out num2);  	bool flag = num == 2;  	if (((((uint)num2) + ((uint)num2)) > uint.MaxValue) || !flag) {  		throw new xb36c46347391c047 ();  	}  	flag = num2 == 2;  	if (0 == 0) {  		if (!flag) {  			throw new xb36c46347391c047 ();  		}  		num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  	}  	return num3;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: flag = num2 == 2;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: if (0 == 0) {  	if (!flag) {  		throw new xb36c46347391c047 ();  	}  	num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: if (0 == 0) {  	if (!flag) {  		throw new xb36c46347391c047 ();  	}  	num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: num3 = ((V1 [0] * V2 [0]) + (V1 [1] * V2 [1])) + (V1 [2] * V2 [2]);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: return (((V1 [0' 0] * V2 [0' 0]) + (V1 [1' 0] * V2 [1' 0])) + (V1 [2' 0] * V2 [2' 0]));  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: return (((V1 [0' 0] * V2 [0' 0]) + (V1 [1' 0] * V2 [1' 0])) + (V1 [2' 0] * V2 [2' 0]));  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: flag = (num == 2) && (num2 == 0);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,DotProduct,The following statement contains a magic number: if ((num3 != 2) || (num4 != 0)) {  	throw new xb36c46347391c047 ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The following statement contains a magic number: if (flag) {  	flag = Math.Abs (numArray2 [num9' num9]) >= 1E-10;  	if ((((uint)flag) - ((uint)num)) >= 0) {  		if (flag) {  			goto Label_019C;  		}  		goto Label_02C5;  	}  	goto Label_028C;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The following statement contains a magic number: flag = Math.Abs (numArray2 [num9' num9]) >= 1E-10;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The following statement contains a magic number: flag = Math.Abs (numArray2 [num9' num10]) <= 1E-10;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The following statement contains a magic number: if (!flag) {  	numArray [num8' num8] = 1.0;  	if (2 != 0) {  		num8++;  		goto Label_02F3;  	}  	goto Label_028C;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The following statement contains a magic number: if (2 != 0) {  	num8++;  	goto Label_02F3;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Inverse,The following statement contains a magic number: if (2 == 0) {  	goto Label_0221;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The following statement contains a magic number: try {  	numArray = (double['])Mat.Clone ();  	x665968ea622b9927 (Mat' out num4' out num5);  	if (num4 != num5) {  		throw new x88b4d441126e16b3 ();  	}  	num6 = 0;  	num7 = num4;  	num11 = 1E-20;  	numArray2 = new int[num7 + 1];  	numArray3 = new double[num7 * 10];  	goto Label_08DA;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The following statement contains a magic number: try {  	numArray = (double['])Mat.Clone ();  	x665968ea622b9927 (Mat' out num4' out num5);  	if (num4 != num5) {  		throw new x88b4d441126e16b3 ();  	}  	num6 = 0;  	num7 = num4;  	num11 = 1E-20;  	numArray2 = new int[num7 + 1];  	numArray3 = new double[num7 * 10];  	goto Label_08DA;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The following statement contains a magic number: num11 = 1E-20;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The following statement contains a magic number: numArray3 = new double[num7 * 10];  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The following statement contains a magic number: if ((((uint)flag) | 2) != 0) {  	if ((((uint)num2) - ((uint)num3)) >= 0) {  		if ((((uint)num) | 0xff) != 0) {  			goto Label_0053;  		}  		goto Label_05D0;  	}  	goto Label_04DB;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,LU,The following statement contains a magic number: if ((((uint)num9) | 4) != 0) {  	if (!flag) {  		goto Label_021B;  	}  	goto Label_022D;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Multiply,The following statement contains a magic number: if (((Mat1.NoRows == 3) && (Mat2.NoRows == 3)) && (Mat1.NoCols != 1)) {  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Multiply,The following statement contains a magic number: if (((Mat1.NoRows == 3) && (Mat2.NoRows == 3)) && (Mat1.NoCols != 1)) {  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Multiply,The following statement contains a magic number: if (-2147483648 != 0) {  	if (!flag) {  		return new Matrix (CrossProduct (Mat1.x6b2bf248b3d627d6' Mat2.x6b2bf248b3d627d6));  	}  	return new Matrix (Multiply (Mat1.x6b2bf248b3d627d6' Mat2.x6b2bf248b3d627d6));  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PINV,The following statement contains a magic number: num6 = 2.2204E-16;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PINV,The following statement contains a magic number: if ((((uint)flag) | 3) != 0) {  	goto Label_033F;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PrintMat,The following statement contains a magic number: if (4 != 0) {  	if ((((uint)num4) + ((uint)num5)) >= 0) {  		goto Label_0277;  	}  	goto Label_021D;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PrintMat,The following statement contains a magic number: if ((((uint)num6) | 15) != 0) {  	if (flag) {  		goto Label_00FA;  	}  	goto Label_0208;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PrintMat,The following statement contains a magic number: if (((uint)num) <= uint.MaxValue) {  	num3 = 1;  	Label_0155:  	flag = num3 <= (numArray [num5] - length);  	if ((((uint)num) | 2) != 0) {  		if (flag) {  			str3 = str3 + "  ";  			num3++;  			goto Label_0155;  		}  		goto Label_00FA;  	}  	goto Label_00C9;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,PrintMat,The following statement contains a magic number: if ((((uint)num) | 2) != 0) {  	if (flag) {  		str3 = str3 + "  ";  		num3++;  		goto Label_0155;  	}  	goto Label_00FA;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,Rank,The following statement contains a magic number: num4 = 2.2204E-16;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: try {  	numArray = (double['])MatA.Clone ();  	numArray2 = (double['])MatB.Clone ();  	x665968ea622b9927 (numArray' out num7' out num8);  	flag = num7 == num8;  	if ((2 == 0) || !flag) {  		throw new x88b4d441126e16b3 ();  	}  	goto Label_08FF;  }  catch {  	throw new x5ed344f47a2ec6bc ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if ((2 == 0) || !flag) {  	throw new x88b4d441126e16b3 ();  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if (flag) {  	num6 = numArray3 [num2];  	if ((((uint)num) - ((uint)num8)) > uint.MaxValue) {  		goto Label_01D8;  	}  	if ((((uint)num13) | 2) != 0) {  		num = numArray2 [num6' 0];  		numArray2 [num6' 0] = numArray2 [num2' 0];  		flag = num3 == -1;  		goto Label_0181;  	}  	goto Label_019C;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if ((((uint)num13) | 2) != 0) {  	num = numArray2 [num6' 0];  	numArray2 [num6' 0] = numArray2 [num2' 0];  	flag = num3 == -1;  	goto Label_0181;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if ((((uint)num13) | 4) != 0) {  	goto Label_0331;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if ((((uint)num) | 8) != 0) {  	goto Label_0512;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if ((((uint)num2) + ((uint)num)) >= 0) {  	num10 = num7;  	num14 = 1E-20;  	if ((((uint)num11) & 0) != 0) {  		goto Label_0181;  	}  	numArray3 = new int[num10 + 1];  	numArray4 = new double[num10 * 10];  	goto Label_0861;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: if ((((uint)num2) + ((uint)num)) >= 0) {  	num10 = num7;  	num14 = 1E-20;  	if ((((uint)num11) & 0) != 0) {  		goto Label_0181;  	}  	numArray3 = new int[num10 + 1];  	numArray4 = new double[num10 * 10];  	goto Label_0861;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: num14 = 1E-20;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SolveLinear,The following statement contains a magic number: numArray4 = new double[num10 * 10];  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: flag = num14 <= 30;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: while (true) {  	flag = num16 <= num3;  	if (flag) {  		num25 = numArray2 [num16' num15];  		if ((((uint)num2) - ((uint)flag)) < 0) {  			goto Label_0DCA;  		}  		num26 = numArray2 [num16' num13];  		numArray2 [num16' num15] = (num25 * num18) + (num26 * num22);  		numArray2 [num16' num13] = (num26 * num18) - (num25 * num22);  	}  	else {  		if ((((uint)num10) | 15) == 0) {  			goto Label_042A;  		}  		num15++;  		goto Label_0271;  	}  	num16++;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if (flag) {  	num25 = numArray2 [num16' num15];  	if ((((uint)num2) - ((uint)flag)) < 0) {  		goto Label_0DCA;  	}  	num26 = numArray2 [num16' num13];  	numArray2 [num16' num15] = (num25 * num18) + (num26 * num22);  	numArray2 [num16' num13] = (num26 * num18) - (num25 * num22);  }  else {  	if ((((uint)num10) | 15) == 0) {  		goto Label_042A;  	}  	num15++;  	goto Label_0271;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num10) | 15) == 0) {  	goto Label_042A;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num22) | 15) == 0) {  	goto Label_148A;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num12) - ((uint)num11)) <= uint.MaxValue) {  	if ((((uint)num15) - ((uint)num4)) <= uint.MaxValue) {  		num21 = numArray7 [num9];  		num19 = (((num25 - num26) * (num25 + num26)) + ((num20 - num21) * (num20 + num21))) / ((2.0 * num21) * num25);  		num20 = xa7f911a89f00277e (num19' 1.0);  		num19 = (((num24 - num26) * (num24 + num26)) + (num21 * ((num25 / (num19 + x0428c55343267861 (num20' num19))) - num21))) / num24;  	}  	if ((((uint)num13) - ((uint)num15)) >= 0) {  		goto Label_0585;  	}  	if ((((uint)num27) | 3) != 0) {  		goto Label_07FD;  	}  	goto Label_0704;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num12) - ((uint)num11)) <= uint.MaxValue) {  	if ((((uint)num15) - ((uint)num4)) <= uint.MaxValue) {  		num21 = numArray7 [num9];  		num19 = (((num25 - num26) * (num25 + num26)) + ((num20 - num21) * (num20 + num21))) / ((2.0 * num21) * num25);  		num20 = xa7f911a89f00277e (num19' 1.0);  		num19 = (((num24 - num26) * (num24 + num26)) + (num21 * ((num25 / (num19 + x0428c55343267861 (num20' num19))) - num21))) / num24;  	}  	if ((((uint)num13) - ((uint)num15)) >= 0) {  		goto Label_0585;  	}  	if ((((uint)num27) | 3) != 0) {  		goto Label_07FD;  	}  	goto Label_0704;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num15) - ((uint)num4)) <= uint.MaxValue) {  	num21 = numArray7 [num9];  	num19 = (((num25 - num26) * (num25 + num26)) + ((num20 - num21) * (num20 + num21))) / ((2.0 * num21) * num25);  	num20 = xa7f911a89f00277e (num19' 1.0);  	num19 = (((num24 - num26) * (num24 + num26)) + (num21 * ((num25 / (num19 + x0428c55343267861 (num20' num19))) - num21))) / num24;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: num19 = (((num25 - num26) * (num25 + num26)) + ((num20 - num21) * (num20 + num21))) / ((2.0 * num21) * num25);  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num27) | 3) != 0) {  	goto Label_07FD;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num19) | 15) != 0) {  	goto Label_0771;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if (!flag) {  	flag = num26 >= 0.0;  }  else {  	flag = num14 != 30;  	if (((uint)num24) >= 0) {  		goto Label_065F;  	}  	if (((uint)num16) <= uint.MaxValue) {  		goto Label_07FD;  	}  	goto Label_0771;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: flag = num14 != 30;  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num5) & 0) == 0) {  	if (flag) {  		num22 = 0.0;  		num9 = num13;  		if ((((uint)num16) | 4) == 0) {  			goto Label_0D7E;  		}  		goto Label_194C;  	}  	goto Label_188F;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if (flag) {  	num22 = 0.0;  	num9 = num13;  	if ((((uint)num16) | 4) == 0) {  		goto Label_0D7E;  	}  	goto Label_194C;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if ((((uint)num16) | 4) == 0) {  	goto Label_0D7E;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: if (!flag) {  	numArray3 = new double[num6 + 1' num6 + 1];  	numArray = new double[num6 + 1];  	numArray7 = new double[100];  	num10 = 0;  	if (((uint)num9) < 0) {  		goto Label_0649;  	}  	num11 = 0;  	num20 = 0.0;  	if ((((uint)num15) + ((uint)num)) > uint.MaxValue) {  		goto Label_0B3E;  	}  	if ((((uint)num17) | 1) != 0) {  		goto Label_1BC2;  	}  	goto Label_1C6D;  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,SVD,The following statement contains a magic number: numArray7 = new double[100];  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: if (num != 2) {  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: while (true) {  	if (true) {  		throw new xb36c46347391c047 ();  	}  	return Math.Sqrt (((V [0' 0] * V [0' 0]) + (V [1' 0] * V [1' 0])) + (V [2' 0] * V [2' 0]));  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0079;  	}  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: while (true) {  	if (true) {  		throw new xb36c46347391c047 ();  	}  	return Math.Sqrt (((V [0' 0] * V [0' 0]) + (V [1' 0] * V [1' 0])) + (V [2' 0] * V [2' 0]));  	if (((uint)num3) <= uint.MaxValue) {  		goto Label_0079;  	}  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: return Math.Sqrt (((V [0' 0] * V [0' 0]) + (V [1' 0] * V [1' 0])) + (V [2' 0] * V [2' 0]));  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: return Math.Sqrt (((V [0' 0] * V [0' 0]) + (V [1' 0] * V [1' 0])) + (V [2' 0] * V [2' 0]));  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: while (num != 2) {  	double num2;  	if ((((uint)num2) & 0) == 0) {  		throw new xb36c46347391c047 ();  	}  }  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: return Math.Sqrt (((V [0] * V [0]) + (V [1] * V [1])) + (V [2] * V [2]));  
Magic Number,MatrixLibrary,Matrix,C:\repos\neismit_emds\Nsim4\MatrixLibrary\Matrix.cs,VectorMagnitude,The following statement contains a magic number: return Math.Sqrt (((V [0] * V [0]) + (V [1] * V [1])) + (V [2] * V [2]));  
Magic Number,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,LUDecomposition,The following statement contains a magic number: if (num7 < num5) {  	num6 += numArray [num7] * numArray2 [num7];  	num7++;  	if (-2147483648 != 0) {  		goto Label_01DA;  	}  	goto Label_0260;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,LUDecomposition,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_01DA;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Det,The following statement contains a magic number: if ((((uint)num) | 8) != 0) {  	for (int i = 0; i < this.x57e9faf3ffdc07cc; i++) {  		num *= this.x6f7a05b81c35b16c [i] [i];  	}  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Inverse,The following statement contains a magic number: if ((((uint)num4) | 3) != 0) {  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_013D;  	}  	goto Label_00D7;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Solve,The following statement contains a magic number: if (num3 >= this.x57e9faf3ffdc07cc) {  	num2++;  	if (2 != 0) {  		if ((((uint)num7) - ((uint)cols)) > uint.MaxValue) {  			goto Label_0251;  		}  		goto Label_013D;  	}  	goto Label_01D4;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,LUDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\LUDecomposition.cs,Solve,The following statement contains a magic number: if (2 != 0) {  	if ((((uint)num7) - ((uint)cols)) > uint.MaxValue) {  		goto Label_0251;  	}  	goto Label_013D;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,QRDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\QRDecomposition.cs,IsFullRank,The following statement contains a magic number: for (int i = 0; i < this.x57e9faf3ffdc07cc; i++) {  	do {  		if (this.x5f131619608f051b [i] == 0.0) {  			return false;  		}  	}  	while (-2147483648 == 0);  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,QRDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\QRDecomposition.cs,IsFullRank,The following statement contains a magic number: do {  	if (this.x5f131619608f051b [i] == 0.0) {  		return false;  	}  }  while (-2147483648 == 0);  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,CholeskyDecomposition,The following statement contains a magic number: if ((((uint)num4) - ((uint)num3)) >= 0) {  	if ((((uint)num6) + ((uint)num4)) <= uint.MaxValue) {  		if ((((uint)num6) - ((uint)num4)) > uint.MaxValue) {  			goto Label_027C;  		}  		if ((((uint)num) + ((uint)num4)) < 0) {  			goto Label_0218;  		}  		num6 = num + 1;  		while (num6 < this.x57e9faf3ffdc07cc) {  			this.x9fc3ee03a439f6f0 [num] [num6] = 0.0;  			if ((((uint)num4) | 3) == 0) {  				return;  			}  			num6++;  		}  		num++;  		if ((((uint)num4) & 0) != 0) {  			goto Label_0140;  		}  		goto Label_0051;  	}  	goto Label_0261;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,CholeskyDecomposition,The following statement contains a magic number: if ((((uint)num6) + ((uint)num4)) <= uint.MaxValue) {  	if ((((uint)num6) - ((uint)num4)) > uint.MaxValue) {  		goto Label_027C;  	}  	if ((((uint)num) + ((uint)num4)) < 0) {  		goto Label_0218;  	}  	num6 = num + 1;  	while (num6 < this.x57e9faf3ffdc07cc) {  		this.x9fc3ee03a439f6f0 [num] [num6] = 0.0;  		if ((((uint)num4) | 3) == 0) {  			return;  		}  		num6++;  	}  	num++;  	if ((((uint)num4) & 0) != 0) {  		goto Label_0140;  	}  	goto Label_0051;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,CholeskyDecomposition,The following statement contains a magic number: while (num6 < this.x57e9faf3ffdc07cc) {  	this.x9fc3ee03a439f6f0 [num] [num6] = 0.0;  	if ((((uint)num4) | 3) == 0) {  		return;  	}  	num6++;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,CholeskyDecomposition,The following statement contains a magic number: if ((((uint)num4) | 3) == 0) {  	return;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,Solve,The following statement contains a magic number: if (8 != 0) {  	num4++;  	goto Label_00CB;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,Solve,The following statement contains a magic number: if ((((uint)cols) & 0) == 0) {  	if ((((uint)num4) | 15) == 0) {  		goto Label_012F;  	}  	if ((((uint)num7) - ((uint)num7)) < 0) {  		goto Label_010E;  	}  	if ((((uint)num5) - ((uint)num6)) < 0) {  		goto Label_0068;  	}  	num2 = 0;  	goto Label_00A8;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,CholeskyDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\CholeskyDecomposition.cs,Solve,The following statement contains a magic number: if ((((uint)num4) | 15) == 0) {  	goto Label_012F;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,EigenvalueDecomposition,The following statement contains a magic number: if ((((uint)num6) | 8) == 0) {  	goto Label_01AE;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,The following statement contains a magic number: if (num23 <= num2) {  	num22 += this.x054594f0edd1dc88 [num23] * this.x9b4602d5e4f04fcb [num23] [num21];  	if ((((uint)num23) & 0) != 0) {  		goto Label_0231;  	}  	if (-2147483648 != 0) {  		num23++;  		goto Label_00BE;  	}  }  else {  	num22 = (num22 / this.x054594f0edd1dc88 [num19]) / this.xe24dd90acb923d68 [num19] [num19 - 1];  	num24 = num19;  	goto Label_0080;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,The following statement contains a magic number: if (-2147483648 != 0) {  	num23++;  	goto Label_00BE;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,The following statement contains a magic number: if ((((uint)num22) & 0) == 0) {  	this.xe24dd90acb923d68 [index] [index - 1] = num4 * num8;  	if (((uint)num6) < 0) {  		if ((((uint)num5) - ((uint)num13)) >= 0) {  			goto Label_03BA;  		}  		if ((((uint)num5) | 15) != 0) {  			goto Label_0393;  		}  		goto Label_02C6;  	}  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,The following statement contains a magic number: if (((uint)num6) < 0) {  	if ((((uint)num5) - ((uint)num13)) >= 0) {  		goto Label_03BA;  	}  	if ((((uint)num5) | 15) != 0) {  		goto Label_0393;  	}  	goto Label_02C6;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,x2b2099f4409958c3,The following statement contains a magic number: if ((((uint)num5) | 15) != 0) {  	goto Label_0393;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num18) | 8) != 0) {  	while (true) {  		if (index >= this.x57e9faf3ffdc07cc) {  			this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  			num2 = 0.0;  			num3 = 0.0;  			num4 = Math.Pow (2.0' -52.0);  			goto Label_06A0;  		}  		this.e [index - 1] = this.e [index];  		index++;  	}  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num18) | 8) != 0) {  	while (true) {  		if (index >= this.x57e9faf3ffdc07cc) {  			this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  			num2 = 0.0;  			num3 = 0.0;  			num4 = Math.Pow (2.0' -52.0);  			goto Label_06A0;  		}  		this.e [index - 1] = this.e [index];  		index++;  	}  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num18) | 8) != 0) {  	while (true) {  		if (index >= this.x57e9faf3ffdc07cc) {  			this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  			num2 = 0.0;  			num3 = 0.0;  			num4 = Math.Pow (2.0' -52.0);  			goto Label_06A0;  		}  		this.e [index - 1] = this.e [index];  		index++;  	}  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: while (true) {  	if (index >= this.x57e9faf3ffdc07cc) {  		this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  		num2 = 0.0;  		num3 = 0.0;  		num4 = Math.Pow (2.0' -52.0);  		goto Label_06A0;  	}  	this.e [index - 1] = this.e [index];  	index++;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: while (true) {  	if (index >= this.x57e9faf3ffdc07cc) {  		this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  		num2 = 0.0;  		num3 = 0.0;  		num4 = Math.Pow (2.0' -52.0);  		goto Label_06A0;  	}  	this.e [index - 1] = this.e [index];  	index++;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if (index >= this.x57e9faf3ffdc07cc) {  	this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  	num2 = 0.0;  	num3 = 0.0;  	num4 = Math.Pow (2.0' -52.0);  	goto Label_06A0;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if (index >= this.x57e9faf3ffdc07cc) {  	this.e [this.x57e9faf3ffdc07cc - 1] = 0.0;  	num2 = 0.0;  	num3 = 0.0;  	num4 = Math.Pow (2.0' -52.0);  	goto Label_06A0;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: num4 = Math.Pow (2.0' -52.0);  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: num4 = Math.Pow (2.0' -52.0);  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if (num26 < this.x57e9faf3ffdc07cc) {  	num24 = this.x9b4602d5e4f04fcb [num26] [num22];  	this.x9b4602d5e4f04fcb [num26] [num22] = this.x9b4602d5e4f04fcb [num26] [num23];  	if ((((uint)num16) + ((uint)num23)) <= uint.MaxValue) {  		this.x9b4602d5e4f04fcb [num26] [num23] = num24;  		if ((((uint)num17) | 8) == 0) {  			goto Label_0557;  		}  		num26++;  		goto Label_006C;  	}  	goto Label_01FD;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num16) + ((uint)num23)) <= uint.MaxValue) {  	this.x9b4602d5e4f04fcb [num26] [num23] = num24;  	if ((((uint)num17) | 8) == 0) {  		goto Label_0557;  	}  	num26++;  	goto Label_006C;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num17) | 8) == 0) {  	goto Label_0557;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: num13 = num5 + 2;  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num9) | 15) == 0) {  	goto Label_0602;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: num9 = (this.x73f821c71fe1e676 [num5 + 1] - num8) / (2.0 * this.e [num5]);  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xc46d13fa38efe36f,The following statement contains a magic number: if ((((uint)num24) | 2) != 0) {  	goto Label_05F8;  }  
Magic Number,Encog.MathUtil.Matrices.Decomposition,EigenvalueDecomposition,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\Matrices\Decomposition\EigenvalueDecomposition.cs,xce4ff3ba0c1ec350,The following statement contains a magic number: if ((((uint)num22) | 8) == 0) {  	goto Label_05E8;  }  
Magic Number,Nsim.Calculator,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\Calculator\ActivationConfig.cs,OnFunctionChanged,The following statement contains a magic number: if (4 != 0) {  	if (0x7fffffff != 0) {  		if (3 == 0) {  			return;  		}  	}  	else {  		goto Label_0019;  	}  }  
Magic Number,Nsim.Calculator,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\Calculator\ActivationConfig.cs,OnFunctionChanged,The following statement contains a magic number: if (4 != 0) {  	if (0x7fffffff != 0) {  		if (3 == 0) {  			return;  		}  	}  	else {  		goto Label_0019;  	}  }  
Magic Number,Nsim.Calculator,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\Calculator\ActivationConfig.cs,OnFunctionChanged,The following statement contains a magic number: if (0x7fffffff != 0) {  	if (3 == 0) {  		return;  	}  }  else {  	goto Label_0019;  }  
Magic Number,Nsim.Calculator,ActivationConfig,C:\repos\neismit_emds\Nsim4\Nsim\Calculator\ActivationConfig.cs,OnFunctionChanged,The following statement contains a magic number: if (3 == 0) {  	return;  }  
Magic Number,Nsim.Calculator,NetworkCalculator,C:\repos\neismit_emds\Nsim4\Nsim\Calculator\NetworkCalculator.cs,Calc,The following statement contains a magic number: if (2 != 0) {  }  
Magic Number,Encog.Util.Normalize.Output.Nominal,OutputOneOf,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\Nominal\OutputOneOf.cs,AddItem,The following statement contains a magic number: this.AddItem (inputField' value - 0.5' value + 0.5);  
Magic Number,Encog.Util.Normalize.Output.Nominal,OutputOneOf,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\Nominal\OutputOneOf.cs,AddItem,The following statement contains a magic number: this.AddItem (inputField' value - 0.5' value + 0.5);  
Magic Number,Encog.Util.Normalize.Output.Nominal,OutputEquilateral,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\Nominal\OutputEquilateral.cs,AddItem,The following statement contains a magic number: this.AddItem (inputField' value - 0.1' value + 0.1);  
Magic Number,Encog.Util.Normalize.Output.Nominal,OutputEquilateral,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\Nominal\OutputEquilateral.cs,AddItem,The following statement contains a magic number: this.AddItem (inputField' value - 0.1' value + 0.1);  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Init,The following statement contains a magic number: if (this._xab3ddaff42dd298a.Count != 1) {  	do {  		if (this._xab3ddaff42dd298a.Count == 2) {  			this._xe4e6a25eae13e4b3 = (this._xab3ddaff42dd298a [0].Max - this._xab3ddaff42dd298a [0].Min) + 1;  			this._x5426aa354995e9e0 = (this._xab3ddaff42dd298a [1].Max - this._xab3ddaff42dd298a [1].Min) + 1;  		}  		else {  			goto Label_0013;  		}  	}  	while (-1 == 0);  	this._xd559aa34776631a5 = EngineArray.AllocateDouble2D (this._xe4e6a25eae13e4b3' this._x5426aa354995e9e0);  	goto Label_0028;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Init,The following statement contains a magic number: do {  	if (this._xab3ddaff42dd298a.Count == 2) {  		this._xe4e6a25eae13e4b3 = (this._xab3ddaff42dd298a [0].Max - this._xab3ddaff42dd298a [0].Min) + 1;  		this._x5426aa354995e9e0 = (this._xab3ddaff42dd298a [1].Max - this._xab3ddaff42dd298a [1].Min) + 1;  	}  	else {  		goto Label_0013;  	}  }  while (-1 == 0);  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Init,The following statement contains a magic number: if (this._xab3ddaff42dd298a.Count == 2) {  	this._xe4e6a25eae13e4b3 = (this._xab3ddaff42dd298a [0].Max - this._xab3ddaff42dd298a [0].Min) + 1;  	this._x5426aa354995e9e0 = (this._xab3ddaff42dd298a [1].Max - this._xab3ddaff42dd298a [1].Min) + 1;  }  else {  	goto Label_0013;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Init,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if ((((uint)layerNeuronCount) | 3) == 0) {  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if (jobUnit.LayerCount <= 3) {  	layerNeuronCount = 0;  	goto Label_0125;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: layerNeuronCount = jobUnit.GetLayerNeuronCount (2);  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if (num2 < this._xe009ad1bd0a8245a) {  	StopTrainingStrategy strategy;  	jobUnit.Reset ();  	Encog.Neural.Networks.Training.Propagation.Propagation propagation = new ResilientPropagation (jobUnit' training);  	if ((((uint)num) - ((uint)num3)) >= 0) {  		strategy = new StopTrainingStrategy (0.001' 5);  	}  	propagation.AddStrategy (strategy);  	propagation.ThreadCount = 1;  	num3 = 0;  	while (true) {  		if ((num3 < this._xdbf51c857aeb8093) && (!base.ShouldStop && !strategy.ShouldStop ())) {  			propagation.Iteration ();  		}  		else {  			num = Math.Min (num' propagation.Error);  			if (4 != 0) {  				num2++;  				goto Label_0217;  			}  			goto Label_0195;  		}  		num3++;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if (num2 < this._xe009ad1bd0a8245a) {  	StopTrainingStrategy strategy;  	jobUnit.Reset ();  	Encog.Neural.Networks.Training.Propagation.Propagation propagation = new ResilientPropagation (jobUnit' training);  	if ((((uint)num) - ((uint)num3)) >= 0) {  		strategy = new StopTrainingStrategy (0.001' 5);  	}  	propagation.AddStrategy (strategy);  	propagation.ThreadCount = 1;  	num3 = 0;  	while (true) {  		if ((num3 < this._xdbf51c857aeb8093) && (!base.ShouldStop && !strategy.ShouldStop ())) {  			propagation.Iteration ();  		}  		else {  			num = Math.Min (num' propagation.Error);  			if (4 != 0) {  				num2++;  				goto Label_0217;  			}  			goto Label_0195;  		}  		num3++;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if (num2 < this._xe009ad1bd0a8245a) {  	StopTrainingStrategy strategy;  	jobUnit.Reset ();  	Encog.Neural.Networks.Training.Propagation.Propagation propagation = new ResilientPropagation (jobUnit' training);  	if ((((uint)num) - ((uint)num3)) >= 0) {  		strategy = new StopTrainingStrategy (0.001' 5);  	}  	propagation.AddStrategy (strategy);  	propagation.ThreadCount = 1;  	num3 = 0;  	while (true) {  		if ((num3 < this._xdbf51c857aeb8093) && (!base.ShouldStop && !strategy.ShouldStop ())) {  			propagation.Iteration ();  		}  		else {  			num = Math.Min (num' propagation.Error);  			if (4 != 0) {  				num2++;  				goto Label_0217;  			}  			goto Label_0195;  		}  		num3++;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if ((((uint)num) - ((uint)num3)) >= 0) {  	strategy = new StopTrainingStrategy (0.001' 5);  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if ((((uint)num) - ((uint)num3)) >= 0) {  	strategy = new StopTrainingStrategy (0.001' 5);  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: strategy = new StopTrainingStrategy (0.001' 5);  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: strategy = new StopTrainingStrategy (0.001' 5);  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: while (true) {  	if ((num3 < this._xdbf51c857aeb8093) && (!base.ShouldStop && !strategy.ShouldStop ())) {  		propagation.Iteration ();  	}  	else {  		num = Math.Min (num' propagation.Error);  		if (4 != 0) {  			num2++;  			goto Label_0217;  		}  		goto Label_0195;  	}  	num3++;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if ((num3 < this._xdbf51c857aeb8093) && (!base.ShouldStop && !strategy.ShouldStop ())) {  	propagation.Iteration ();  }  else {  	num = Math.Min (num' propagation.Error);  	if (4 != 0) {  		num2++;  		goto Label_0217;  	}  	goto Label_0195;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,PerformJobUnit,The following statement contains a magic number: if (4 != 0) {  	num2++;  	goto Label_0217;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Process,The following statement contains a magic number: if ((((uint)num) | 3) != 0) {  	return;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,Process,The following statement contains a magic number: if (-2 == 0) {  	goto Label_001D;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (!this._x0b03741e8f17a9f7) {  	BasicNetwork network;  	if (-2 != 0) {  		Label_0020:  		if (!base.ShouldStop) {  			if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  				goto Label_0020;  			}  			network = this.x2f456b293ba8d8fa ();  		}  		else {  			goto Label_0044;  		}  	}  	if (!this.x3d557552d5425977 ()) {  		this._x0b03741e8f17a9f7 = true;  	}  	return network;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (!this._x0b03741e8f17a9f7) {  	BasicNetwork network;  	if (-2 != 0) {  		Label_0020:  		if (!base.ShouldStop) {  			if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  				goto Label_0020;  			}  			network = this.x2f456b293ba8d8fa ();  		}  		else {  			goto Label_0044;  		}  	}  	if (!this.x3d557552d5425977 ()) {  		this._x0b03741e8f17a9f7 = true;  	}  	return network;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (!this._x0b03741e8f17a9f7) {  	BasicNetwork network;  	if (-2 != 0) {  		Label_0020:  		if (!base.ShouldStop) {  			if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  				goto Label_0020;  			}  			network = this.x2f456b293ba8d8fa ();  		}  		else {  			goto Label_0044;  		}  	}  	if (!this.x3d557552d5425977 ()) {  		this._x0b03741e8f17a9f7 = true;  	}  	return network;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (-2 != 0) {  	Label_0020:  	if (!base.ShouldStop) {  		if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  			goto Label_0020;  		}  		network = this.x2f456b293ba8d8fa ();  	}  	else {  		goto Label_0044;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (-2 != 0) {  	Label_0020:  	if (!base.ShouldStop) {  		if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  			goto Label_0020;  		}  		network = this.x2f456b293ba8d8fa ();  	}  	else {  		goto Label_0044;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (-2 != 0) {  	Label_0020:  	if (!base.ShouldStop) {  		if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  			goto Label_0020;  		}  		network = this.x2f456b293ba8d8fa ();  	}  	else {  		goto Label_0044;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (!base.ShouldStop) {  	if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  		goto Label_0020;  	}  	network = this.x2f456b293ba8d8fa ();  }  else {  	goto Label_0044;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (!base.ShouldStop) {  	if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  		goto Label_0020;  	}  	network = this.x2f456b293ba8d8fa ();  }  else {  	goto Label_0044;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  	goto Label_0020;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,RequestNextTask,The following statement contains a magic number: if (((3 == 0) && (0 == 0)) && (-2147483648 == 0)) {  	goto Label_0020;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x2f456b293ba8d8fa,The following statement contains a magic number: if ((((uint)index) | 3) == 0) {  	goto Label_000D;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x2f456b293ba8d8fa,The following statement contains a magic number: if (index < numArray.Length) {  	num = numArray [index];  	if (num <= 0) {  		goto Label_0019;  	}  	if (8 != 0) {  		goto Label_000D;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x2f456b293ba8d8fa,The following statement contains a magic number: if (8 != 0) {  	goto Label_000D;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x3d557552d5425977,The following statement contains a magic number: if ((((uint)index) & 0) == 0) {  	this._x6b2fa1a7ab6e70d2 [index]++;  	Label_0009:  	if (this._x6b2fa1a7ab6e70d2 [index] > @params.Max) {  		this._x6b2fa1a7ab6e70d2 [index] = @params.Min;  		index++;  		if (index < this._x6b2fa1a7ab6e70d2.Length) {  			goto Label_0072;  		}  		if ((((uint)index) & 0) == 0) {  			goto Label_0093;  		}  		if (8 == 0) {  			goto Label_0009;  		}  	}  	return true;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x3d557552d5425977,The following statement contains a magic number: if (this._x6b2fa1a7ab6e70d2 [index] > @params.Max) {  	this._x6b2fa1a7ab6e70d2 [index] = @params.Min;  	index++;  	if (index < this._x6b2fa1a7ab6e70d2.Length) {  		goto Label_0072;  	}  	if ((((uint)index) & 0) == 0) {  		goto Label_0093;  	}  	if (8 == 0) {  		goto Label_0009;  	}  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x3d557552d5425977,The following statement contains a magic number: if (8 == 0) {  	goto Label_0009;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x6aa420caefd31103,The following statement contains a magic number: if (((((uint)num) | 3) != 0) && ((((uint)num3) | 15) != 0)) {  	if ((((uint)xc685eed2987781a2) + ((uint)xc685eed2987781a2)) < 0) {  		if ((((uint)num3) & 0) == 0) {  			goto Label_02C5;  		}  		if ((((uint)num2) - ((uint)num)) < 0) {  			goto Label_00C0;  		}  		if ((((uint)num3) + ((uint)num)) >= 0) {  			goto Label_019E;  		}  	}  	goto Label_017E;  }  
Magic Number,Encog.Neural.Prune,PruneIncremental,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneIncremental.cs,x6aa420caefd31103,The following statement contains a magic number: if (((((uint)num) | 3) != 0) && ((((uint)num3) | 15) != 0)) {  	if ((((uint)xc685eed2987781a2) + ((uint)xc685eed2987781a2)) < 0) {  		if ((((uint)num3) & 0) == 0) {  			goto Label_02C5;  		}  		if ((((uint)num2) - ((uint)num)) < 0) {  			goto Label_00C0;  		}  		if ((((uint)num3) + ((uint)num)) >= 0) {  			goto Label_019E;  		}  	}  	goto Label_017E;  }  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The following statement contains a magic number: if ((((uint)num10) - ((uint)num9)) >= 0) {  	if ((((uint)num5) | 8) == 0) {  		goto Label_029E;  	}  	num9++;  	if (((uint)num5) < 0) {  		goto Label_02BA;  	}  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	goto Label_010B;  }  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The following statement contains a magic number: if ((((uint)num10) - ((uint)num9)) >= 0) {  	if ((((uint)num5) | 8) == 0) {  		goto Label_029E;  	}  	num9++;  	if (((uint)num5) < 0) {  		goto Label_02BA;  	}  	if (-2147483648 == 0) {  		goto Label_01CE;  	}  	goto Label_010B;  }  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The following statement contains a magic number: if ((((uint)num5) | 8) == 0) {  	goto Label_029E;  }  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_01CE;  }  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,Prune,The following statement contains a magic number: num5 = flat.LayerCounts.Length - 2;  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,x107a35a18a760853,The following statement contains a magic number: num2 = flat.LayerCounts.Length - 2;  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,xfb5fe5d1c31436ed,The following statement contains a magic number: if (((uint)num6) >= 0) {  	flat.LayerFeedCounts [num6] += num2;  	numArray2 = new double[length];  	num7 = 0;  	num8 = flat.LayerCounts.Length - 2;  	goto Label_0037;  }  
Magic Number,Encog.Neural.Prune,PruneSelective,C:\repos\neismit_emds\Nsim4\Encog\Neural\Prune\PruneSelective.cs,xfb5fe5d1c31436ed,The following statement contains a magic number: num8 = flat.LayerCounts.Length - 2;  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,TemporalMLDataSet,The following statement contains a magic number: if ((((uint)inputWindowSize) | 4) != 0) {  	this._xc278386c02fd6e51 = inputWindowSize;  	this._xcfe8f2ba20a6a8e4 = predictWindowSize;  }  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,TemporalMLDataSet,The following statement contains a magic number: this._xd5b5c9323338bee2 = -2147483648;  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,CalculateNeuronCounts,The following statement contains a magic number: using (IEnumerator<TemporalDataDescription> enumerator = this._x6849a3dfb0329317.GetEnumerator ()) {  	TemporalDataDescription current;  	goto Label_003B;  	Label_001E:  	this._x0c37ff3adde9bc44 += this._xcfe8f2ba20a6a8e4;  	goto Label_003B;  	Label_0033:  	if (current.IsPredict) {  		goto Label_001E;  	}  	Label_003B:  	if (enumerator.MoveNext ()) {  		current = enumerator.Current;  		if (current.IsInput) {  			this._x57202a8751db8895 += this._xc278386c02fd6e51;  			if (3 == 0) {  				goto Label_003B;  			}  		}  		goto Label_0033;  	}  }  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,CalculateNeuronCounts,The following statement contains a magic number: if (enumerator.MoveNext ()) {  	current = enumerator.Current;  	if (current.IsInput) {  		this._x57202a8751db8895 += this._xc278386c02fd6e51;  		if (3 == 0) {  			goto Label_003B;  		}  	}  	goto Label_0033;  }  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,CalculateNeuronCounts,The following statement contains a magic number: if (current.IsInput) {  	this._x57202a8751db8895 += this._xc278386c02fd6e51;  	if (3 == 0) {  		goto Label_003B;  	}  }  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,CalculateNeuronCounts,The following statement contains a magic number: if (3 == 0) {  	goto Label_003B;  }  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,Generate,The following statement contains a magic number: if ((((uint)num) | 3) != 0) {  	goto Label_0083;  }  
Magic Number,Encog.ML.Data.Temporal,TemporalMLDataSet,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalMLDataSet.cs,xea9b27496fd731f6,The following statement contains a magic number: do {  	num = point [x3253f43e16d3c2a3.Index];  	num2 = point2 [x3253f43e16d3c2a3.Index];  }  while ((((uint)num) | 3) == 0);  
Magic Number,Encog.ML.Data.Temporal,TemporalPoint,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Temporal\TemporalPoint.cs,ToString,The following statement contains a magic number: if (15 != 0) {  	builder.Append ("'Data:");  	num = 0;  }  
Magic Number,Encog.ML.Data.Market,TickerSymbol,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\TickerSymbol.cs,Equals,The following statement contains a magic number: do {  	if (this.Exchange == null) {  		goto Label_0017;  	}  	if (3 != 0) {  		return other.Exchange.Equals (this.Exchange);  	}  }  while (0 != 0);  
Magic Number,Encog.ML.Data.Market,TickerSymbol,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Market\TickerSymbol.cs,Equals,The following statement contains a magic number: if (3 != 0) {  	return other.Exchange.Equals (this.Exchange);  }  
Magic Number,Encog.ML.Data.Image,ImageMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Image\ImageMLData.cs,Downsample,The following statement contains a magic number: numArray [num] = (((numArray [num] - 0.0) / 255.0) * (hi - lo)) + lo;  
Magic Number,Encog.ML.Data.Image,ImageMLData,C:\repos\neismit_emds\Nsim4\Encog\ML\Data\Image\ImageMLData.cs,ToString,The following statement contains a magic number: if ((((uint)index) | 2) != 0) {  	goto Label_0020;  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,YahooDownload,The following statement contains a magic number: this.Precision = 10;  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The following statement contains a magic number: try {  	HttpWebResponse response;  	ReadCSV dcsv;  	TextWriter writer;  	DateTime time;  	double num;  	double num2;  	double num3;  	double num4;  	double num5;  	long num6;  	StringBuilder builder;  	Uri requestUri = x38c212309d8d5dd3 (ticker' from' to);  	goto Label_029A;  	Label_0010:  	builder.Append (outputFormat.Format (num' this.Precision));  	writer.WriteLine (builder.ToString ());  	Label_0034:  	if (dcsv.Next ()) {  		goto Label_01E2;  	}  	writer.Close ();  	return;  	Label_0049:  	builder.Append (outputFormat.Separator);  	builder.Append (outputFormat.Format (num3' this.Precision));  	builder.Append (outputFormat.Separator);  	builder.Append (num6);  	builder.Append (outputFormat.Separator);  	if ((((uint)num4) + ((uint)num2)) >= 0) {  		goto Label_0010;  	}  	return;  	Label_00B3:  	builder.Append (outputFormat.Format (num2' this.Precision));  	builder.Append (outputFormat.Separator);  	builder.Append (outputFormat.Format (num4' this.Precision));  	if ((((uint)num6) | 4) == 0) {  		goto Label_0034;  	}  	builder.Append (outputFormat.Separator);  	Label_0116:  	builder.Append (outputFormat.Format (num5' this.Precision));  	goto Label_0192;  	Label_012E:  	builder.Append (NumericDateUtil.DateTime2Long (time));  	builder.Append (outputFormat.Separator);  	builder.Append (NumericDateUtil.x93295384d7a86d9d (time));  	if ((((uint)num6) | 3) == 0) {  		goto Label_020C;  	}  	if (-2147483648 == 0) {  		goto Label_01FE;  	}  	builder.Append (outputFormat.Separator);  	goto Label_00B3;  	Label_0192:  	if (0 == 0) {  		goto Label_0049;  	}  	return;  	Label_019D:  	builder = new StringBuilder ();  	if (((uint)num4) >= 0) {  		goto Label_012E;  	}  	goto Label_027A;  	Label_01BE:  	num5 = dcsv.GetDouble ("low");  	num6 = (long)dcsv.GetDouble ("volume");  	goto Label_0243;  	Label_01E2:  	time = dcsv.GetDate ("date");  	num = dcsv.GetDouble ("adj close");  	Label_01FE:  	num2 = dcsv.GetDouble ("open");  	Label_020C:  	num3 = dcsv.GetDouble ("close");  	num4 = dcsv.GetDouble ("high");  	if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  		goto Label_01BE;  	}  	Label_0243:  	if ((((uint)num6) & 0) == 0) {  		goto Label_019D;  	}  	Label_0257:  	writer.WriteLine ("date'time'open price'high price'low price'close price'volume'adjusted price");  	if (((uint)num) >= 0) {  		goto Label_0034;  	}  	goto Label_019D;  	Label_027A:  	if ((((uint)num5) & 0) != 0) {  		goto Label_0116;  	}  	goto Label_0257;  	Label_029A:  	response = (HttpWebResponse)WebRequest.Create (requestUri).GetResponse ();  	Stream responseStream = response.GetResponseStream ();  	if (((uint)num5) < 0) {  		goto Label_00B3;  	}  	dcsv = new ReadCSV (responseStream' true' CSVFormat.English);  	writer = new StreamWriter (output);  	goto Label_027A;  }  catch (WebException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The following statement contains a magic number: try {  	HttpWebResponse response;  	ReadCSV dcsv;  	TextWriter writer;  	DateTime time;  	double num;  	double num2;  	double num3;  	double num4;  	double num5;  	long num6;  	StringBuilder builder;  	Uri requestUri = x38c212309d8d5dd3 (ticker' from' to);  	goto Label_029A;  	Label_0010:  	builder.Append (outputFormat.Format (num' this.Precision));  	writer.WriteLine (builder.ToString ());  	Label_0034:  	if (dcsv.Next ()) {  		goto Label_01E2;  	}  	writer.Close ();  	return;  	Label_0049:  	builder.Append (outputFormat.Separator);  	builder.Append (outputFormat.Format (num3' this.Precision));  	builder.Append (outputFormat.Separator);  	builder.Append (num6);  	builder.Append (outputFormat.Separator);  	if ((((uint)num4) + ((uint)num2)) >= 0) {  		goto Label_0010;  	}  	return;  	Label_00B3:  	builder.Append (outputFormat.Format (num2' this.Precision));  	builder.Append (outputFormat.Separator);  	builder.Append (outputFormat.Format (num4' this.Precision));  	if ((((uint)num6) | 4) == 0) {  		goto Label_0034;  	}  	builder.Append (outputFormat.Separator);  	Label_0116:  	builder.Append (outputFormat.Format (num5' this.Precision));  	goto Label_0192;  	Label_012E:  	builder.Append (NumericDateUtil.DateTime2Long (time));  	builder.Append (outputFormat.Separator);  	builder.Append (NumericDateUtil.x93295384d7a86d9d (time));  	if ((((uint)num6) | 3) == 0) {  		goto Label_020C;  	}  	if (-2147483648 == 0) {  		goto Label_01FE;  	}  	builder.Append (outputFormat.Separator);  	goto Label_00B3;  	Label_0192:  	if (0 == 0) {  		goto Label_0049;  	}  	return;  	Label_019D:  	builder = new StringBuilder ();  	if (((uint)num4) >= 0) {  		goto Label_012E;  	}  	goto Label_027A;  	Label_01BE:  	num5 = dcsv.GetDouble ("low");  	num6 = (long)dcsv.GetDouble ("volume");  	goto Label_0243;  	Label_01E2:  	time = dcsv.GetDate ("date");  	num = dcsv.GetDouble ("adj close");  	Label_01FE:  	num2 = dcsv.GetDouble ("open");  	Label_020C:  	num3 = dcsv.GetDouble ("close");  	num4 = dcsv.GetDouble ("high");  	if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  		goto Label_01BE;  	}  	Label_0243:  	if ((((uint)num6) & 0) == 0) {  		goto Label_019D;  	}  	Label_0257:  	writer.WriteLine ("date'time'open price'high price'low price'close price'volume'adjusted price");  	if (((uint)num) >= 0) {  		goto Label_0034;  	}  	goto Label_019D;  	Label_027A:  	if ((((uint)num5) & 0) != 0) {  		goto Label_0116;  	}  	goto Label_0257;  	Label_029A:  	response = (HttpWebResponse)WebRequest.Create (requestUri).GetResponse ();  	Stream responseStream = response.GetResponseStream ();  	if (((uint)num5) < 0) {  		goto Label_00B3;  	}  	dcsv = new ReadCSV (responseStream' true' CSVFormat.English);  	writer = new StreamWriter (output);  	goto Label_027A;  }  catch (WebException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The following statement contains a magic number: try {  	HttpWebResponse response;  	ReadCSV dcsv;  	TextWriter writer;  	DateTime time;  	double num;  	double num2;  	double num3;  	double num4;  	double num5;  	long num6;  	StringBuilder builder;  	Uri requestUri = x38c212309d8d5dd3 (ticker' from' to);  	goto Label_029A;  	Label_0010:  	builder.Append (outputFormat.Format (num' this.Precision));  	writer.WriteLine (builder.ToString ());  	Label_0034:  	if (dcsv.Next ()) {  		goto Label_01E2;  	}  	writer.Close ();  	return;  	Label_0049:  	builder.Append (outputFormat.Separator);  	builder.Append (outputFormat.Format (num3' this.Precision));  	builder.Append (outputFormat.Separator);  	builder.Append (num6);  	builder.Append (outputFormat.Separator);  	if ((((uint)num4) + ((uint)num2)) >= 0) {  		goto Label_0010;  	}  	return;  	Label_00B3:  	builder.Append (outputFormat.Format (num2' this.Precision));  	builder.Append (outputFormat.Separator);  	builder.Append (outputFormat.Format (num4' this.Precision));  	if ((((uint)num6) | 4) == 0) {  		goto Label_0034;  	}  	builder.Append (outputFormat.Separator);  	Label_0116:  	builder.Append (outputFormat.Format (num5' this.Precision));  	goto Label_0192;  	Label_012E:  	builder.Append (NumericDateUtil.DateTime2Long (time));  	builder.Append (outputFormat.Separator);  	builder.Append (NumericDateUtil.x93295384d7a86d9d (time));  	if ((((uint)num6) | 3) == 0) {  		goto Label_020C;  	}  	if (-2147483648 == 0) {  		goto Label_01FE;  	}  	builder.Append (outputFormat.Separator);  	goto Label_00B3;  	Label_0192:  	if (0 == 0) {  		goto Label_0049;  	}  	return;  	Label_019D:  	builder = new StringBuilder ();  	if (((uint)num4) >= 0) {  		goto Label_012E;  	}  	goto Label_027A;  	Label_01BE:  	num5 = dcsv.GetDouble ("low");  	num6 = (long)dcsv.GetDouble ("volume");  	goto Label_0243;  	Label_01E2:  	time = dcsv.GetDate ("date");  	num = dcsv.GetDouble ("adj close");  	Label_01FE:  	num2 = dcsv.GetDouble ("open");  	Label_020C:  	num3 = dcsv.GetDouble ("close");  	num4 = dcsv.GetDouble ("high");  	if ((((uint)num3) - ((uint)num4)) <= uint.MaxValue) {  		goto Label_01BE;  	}  	Label_0243:  	if ((((uint)num6) & 0) == 0) {  		goto Label_019D;  	}  	Label_0257:  	writer.WriteLine ("date'time'open price'high price'low price'close price'volume'adjusted price");  	if (((uint)num) >= 0) {  		goto Label_0034;  	}  	goto Label_019D;  	Label_027A:  	if ((((uint)num5) & 0) != 0) {  		goto Label_0116;  	}  	goto Label_0257;  	Label_029A:  	response = (HttpWebResponse)WebRequest.Create (requestUri).GetResponse ();  	Stream responseStream = response.GetResponseStream ();  	if (((uint)num5) < 0) {  		goto Label_00B3;  	}  	dcsv = new ReadCSV (responseStream' true' CSVFormat.English);  	writer = new StreamWriter (output);  	goto Label_027A;  }  catch (WebException exception) {  	throw new QuantError (exception);  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The following statement contains a magic number: if ((((uint)num6) | 4) == 0) {  	goto Label_0034;  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The following statement contains a magic number: if ((((uint)num6) | 3) == 0) {  	goto Label_020C;  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,LoadAllData,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_01FE;  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,x38c212309d8d5dd3,The following statement contains a magic number: if (3 != 0) {  	return new Uri (uriString);  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,x38c212309d8d5dd3,The following statement contains a magic number: if (2 == 0) {  	goto Label_000B;  }  
Magic Number,Encog.App.Quant.Loader.Yahoo,YahooDownload,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Loader\Yahoo\YahooDownload.cs,x38c212309d8d5dd3,The following statement contains a magic number: if (8 != 0) {  	if (0 != 0) {  		goto Label_010C;  	}  	goto Label_000B;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x1946c594c0dc53f6,The following statement contains a magic number: try {  	StringBuilder builder;  	int num;  	int num2;  	int num3;  	double num4;  	base.ResetStatus ();  	goto Label_0216;  	Label_000D:  	if (((((uint)num4) - ((uint)num)) >= 0) && ((((uint)num4) & 0) == 0)) {  		return;  	}  	Label_003C:  	base.UpdateStatus ("Writing data");  	StringBuilder builder2 = new StringBuilder ();  	Label_004E:  	using (IEnumerator<BaseCachedColumn> enumerator2 = base.Columns.GetEnumerator ()) {  		BaseCachedColumn current;  		goto Label_00A2;  		Label_005D:  		if (((uint)num2) > uint.MaxValue) {  			goto Label_00A2;  		}  		goto Label_007B;  		Label_0071:  		if (builder2.Length > 0) {  			goto Label_00C1;  		}  		Label_007B:  		num4 = current.Data [num3];  		builder2.Append (base.InputFormat.Format (num4' base.Precision));  		Label_00A2:  		if (!enumerator2.MoveNext ()) {  			goto Label_00E7;  		}  		current = enumerator2.Current;  		if (!current.Output) {  			goto Label_00A2;  		}  		goto Label_0071;  		Label_00C1:  		builder2.Append (base.InputFormat.Separator);  		goto Label_005D;  	}  	Label_00E7:  	writer.WriteLine (builder2.ToString ());  	num3++;  	Label_00FA:  	if (num3 <= num2) {  		goto Label_003C;  	}  	goto Label_000D;  	Label_010D:  	num2 = this.x4b767d45405143d9;  	num3 = num;  	goto Label_00FA;  	Label_011A:  	num = this.x12f8e011f246374c;  	goto Label_0239;  	Label_0126:  	builder = new StringBuilder ();  	using (IEnumerator<BaseCachedColumn> enumerator = base.Columns.GetEnumerator ()) {  		BaseCachedColumn column;  		goto Label_0154;  		Label_013B:  		builder.Append (column.Name);  		builder.Append ("\"");  		Label_0154:  		if (enumerator.MoveNext ()) {  			goto Label_01A3;  		}  		goto Label_01DD;  		Label_0164:  		if (builder.Length > 0) {  			goto Label_01B5;  		}  		if (((uint)num2) <= uint.MaxValue) {  		}  		Label_017F:  		builder.Append ("\"");  		if ((((uint)num3) + ((uint)num3)) >= 0) {  			goto Label_01C9;  		}  		Label_01A3:  		column = enumerator.Current;  		if (!column.Output) {  			goto Label_0154;  		}  		goto Label_0164;  		Label_01B5:  		builder.Append (base.InputFormat.Separator);  		goto Label_017F;  		Label_01C9:  		if (0 == 0) {  			goto Label_013B;  		}  	}  	Label_01DD:  	writer.WriteLine (builder.ToString ());  	goto Label_011A;  	Label_01EE:  	if (base.ExpectInputHeaders) {  		goto Label_0126;  	}  	if ((((uint)num3) | 8) == 0) {  		goto Label_004E;  	}  	goto Label_0224;  	Label_0216:  	writer = new StreamWriter (xb41a802ca5fde63b.Create ());  	goto Label_01EE;  	Label_0224:  	if (((uint)num) <= uint.MaxValue) {  		goto Label_011A;  	}  	Label_0239:  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_010D;  	}  	goto Label_003C;  }  catch (IOException exception) {  	throw new QuantError (exception);  }  finally {  	if (writer != null) {  		writer.Close ();  	}  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x1946c594c0dc53f6,The following statement contains a magic number: if ((((uint)num3) | 8) == 0) {  	goto Label_004E;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: using (IEnumerator<BaseCachedColumn> enumerator = base.Columns.GetEnumerator ()) {  	BaseCachedColumn column;  	Indicator indicator;  	goto Label_0017;  	Label_0010:  	if (-2147483648 == 0) {  		goto Label_004A;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_0080;  	}  	return;  	Label_0029:  	if (15 != 0) {  		goto Label_0017;  	}  	Label_0034:  	if (!column.Output) {  		if (-2147483648 == 0) {  			goto Label_0063;  		}  		if (4 != 0) {  			goto Label_0010;  		}  	}  	Label_004A:  	if (!(column is Indicator)) {  		if (0 == 0) {  			if (0 != 0) {  			}  			goto Label_0017;  		}  		if (15 != 0) {  			goto Label_004A;  		}  	}  	Label_0063:  	indicator = (Indicator)column;  	indicator.Calculate (base.ColumnMapping' base.RecordCount);  	goto Label_0029;  	Label_0080:  	column = enumerator.Current;  	goto Label_0034;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: using (IEnumerator<BaseCachedColumn> enumerator = base.Columns.GetEnumerator ()) {  	BaseCachedColumn column;  	Indicator indicator;  	goto Label_0017;  	Label_0010:  	if (-2147483648 == 0) {  		goto Label_004A;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_0080;  	}  	return;  	Label_0029:  	if (15 != 0) {  		goto Label_0017;  	}  	Label_0034:  	if (!column.Output) {  		if (-2147483648 == 0) {  			goto Label_0063;  		}  		if (4 != 0) {  			goto Label_0010;  		}  	}  	Label_004A:  	if (!(column is Indicator)) {  		if (0 == 0) {  			if (0 != 0) {  			}  			goto Label_0017;  		}  		if (15 != 0) {  			goto Label_004A;  		}  	}  	Label_0063:  	indicator = (Indicator)column;  	indicator.Calculate (base.ColumnMapping' base.RecordCount);  	goto Label_0029;  	Label_0080:  	column = enumerator.Current;  	goto Label_0034;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: using (IEnumerator<BaseCachedColumn> enumerator = base.Columns.GetEnumerator ()) {  	BaseCachedColumn column;  	Indicator indicator;  	goto Label_0017;  	Label_0010:  	if (-2147483648 == 0) {  		goto Label_004A;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_0080;  	}  	return;  	Label_0029:  	if (15 != 0) {  		goto Label_0017;  	}  	Label_0034:  	if (!column.Output) {  		if (-2147483648 == 0) {  			goto Label_0063;  		}  		if (4 != 0) {  			goto Label_0010;  		}  	}  	Label_004A:  	if (!(column is Indicator)) {  		if (0 == 0) {  			if (0 != 0) {  			}  			goto Label_0017;  		}  		if (15 != 0) {  			goto Label_004A;  		}  	}  	Label_0063:  	indicator = (Indicator)column;  	indicator.Calculate (base.ColumnMapping' base.RecordCount);  	goto Label_0029;  	Label_0080:  	column = enumerator.Current;  	goto Label_0034;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: using (IEnumerator<BaseCachedColumn> enumerator = base.Columns.GetEnumerator ()) {  	BaseCachedColumn column;  	Indicator indicator;  	goto Label_0017;  	Label_0010:  	if (-2147483648 == 0) {  		goto Label_004A;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_0080;  	}  	return;  	Label_0029:  	if (15 != 0) {  		goto Label_0017;  	}  	Label_0034:  	if (!column.Output) {  		if (-2147483648 == 0) {  			goto Label_0063;  		}  		if (4 != 0) {  			goto Label_0010;  		}  	}  	Label_004A:  	if (!(column is Indicator)) {  		if (0 == 0) {  			if (0 != 0) {  			}  			goto Label_0017;  		}  		if (15 != 0) {  			goto Label_004A;  		}  	}  	Label_0063:  	indicator = (Indicator)column;  	indicator.Calculate (base.ColumnMapping' base.RecordCount);  	goto Label_0029;  	Label_0080:  	column = enumerator.Current;  	goto Label_0034;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: using (IEnumerator<BaseCachedColumn> enumerator = base.Columns.GetEnumerator ()) {  	BaseCachedColumn column;  	Indicator indicator;  	goto Label_0017;  	Label_0010:  	if (-2147483648 == 0) {  		goto Label_004A;  	}  	Label_0017:  	if (enumerator.MoveNext ()) {  		goto Label_0080;  	}  	return;  	Label_0029:  	if (15 != 0) {  		goto Label_0017;  	}  	Label_0034:  	if (!column.Output) {  		if (-2147483648 == 0) {  			goto Label_0063;  		}  		if (4 != 0) {  			goto Label_0010;  		}  	}  	Label_004A:  	if (!(column is Indicator)) {  		if (0 == 0) {  			if (0 != 0) {  			}  			goto Label_0017;  		}  		if (15 != 0) {  			goto Label_004A;  		}  	}  	Label_0063:  	indicator = (Indicator)column;  	indicator.Calculate (base.ColumnMapping' base.RecordCount);  	goto Label_0029;  	Label_0080:  	column = enumerator.Current;  	goto Label_0034;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_004A;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (15 != 0) {  	goto Label_0017;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (!column.Output) {  	if (-2147483648 == 0) {  		goto Label_0063;  	}  	if (4 != 0) {  		goto Label_0010;  	}  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (!column.Output) {  	if (-2147483648 == 0) {  		goto Label_0063;  	}  	if (4 != 0) {  		goto Label_0010;  	}  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_0063;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (4 != 0) {  	goto Label_0010;  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (!(column is Indicator)) {  	if (0 == 0) {  		if (0 != 0) {  		}  		goto Label_0017;  	}  	if (15 != 0) {  		goto Label_004A;  	}  }  
Magic Number,Encog.App.Quant.Indicators,ProcessIndicators,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\ProcessIndicators.cs,x6cf5ef95c0436286,The following statement contains a magic number: if (15 != 0) {  	goto Label_004A;  }  
Magic Number,Encog.App.Quant.Indicators.Predictive,BestReturn,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Indicators\Predictive\BestReturn.cs,Calculate,The following statement contains a magic number: if ((((uint)length) | 3) == 0) {  	goto Label_00D9;  }  
Magic Number,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,The following statement contains a magic number: try {  	HttpWebResponse response = (HttpWebResponse)WebRequest.Create (url).GetResponse ();  	Stream responseStream = response.GetResponseStream ();  	this.Navigate (url' responseStream);  	do {  		responseStream.Close ();  	}  	while (-2 == 0);  	response.Close ();  }  catch (IOException exception) {  	throw new BrowseError (exception);  }  
Magic Number,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,The following statement contains a magic number: do {  	responseStream.Close ();  }  while (-2 == 0);  
Magic Number,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,The following statement contains a magic number: try {  	Stream requestStream;  	Uri url;  	FormUtility utility;  	string str3;  	HttpWebResponse response;  	WebRequest request = null;  	goto Label_01D3;  	Label_0007:  	requestStream.Close ();  	Stream responseStream = ((HttpWebResponse)request.GetResponse ()).GetResponseStream ();  	Label_0022:  	this.Navigate (url' responseStream);  	Label_002A:  	responseStream.Close ();  	if (0 == 0) {  		return;  	}  	if (0 == 0) {  		goto Label_0057;  	}  	Label_0036:  	responseStream = response.GetResponseStream ();  	goto Label_0022;  	Label_0040:  	if (form.Method == Form.FormMethod.Get) {  		goto Label_0081;  	}  	url = form.Action.Url;  	goto Label_0007;  	Label_0057:  	response = (HttpWebResponse)WebRequest.Create (url).GetResponse ();  	goto Label_0036;  	Label_0074:  	url = new Uri (str3);  	goto Label_0057;  	Label_0081:  	str3 = form.Action.Url.ToString ();  	requestStream.Close ();  	str3 = str3 + "?" + requestStream.ToString ();  	goto Label_0074;  	Label_00BB:  	if (0x7fffffff == 0) {  		goto Label_0074;  	}  	goto Label_0040;  	Label_00C7:  	request.Method = "POST";  	requestStream = request.GetRequestStream ();  	Label_00D9:  	utility = new FormUtility (requestStream' null);  	if (0 != 0) {  		goto Label_002A;  	}  	using (IEnumerator<DocumentRange> enumerator = form.Elements.GetEnumerator ()) {  		DocumentRange range;  		FormElement element;  		string str;  		string str2;  		goto Label_0109;  		Label_00F7:  		if (element.AutoSend) {  			goto Label_0163;  		}  		goto Label_0109;  		Label_0105:  		if (str != null) {  			goto Label_013B;  		}  		Label_0109:  		if (enumerator.MoveNext ()) {  			goto Label_016E;  		}  		goto Label_0141;  		Label_0117:  		str2 = "";  		if (0 != 0) {  			goto Label_0163;  		}  		Label_0121:  		utility.Add (str' str2);  		goto Label_0109;  		Label_012E:  		if (range is FormElement) {  			goto Label_017D;  		}  		goto Label_0109;  		Label_013B:  		if (str2 != null) {  			goto Label_0121;  		}  		goto Label_0117;  		Label_0141:  		if (0 == 0) {  			goto Label_0040;  		}  		goto Label_016E;  		Label_0146:  		str2 = element.Value;  		if (0 == 0) {  			goto Label_0105;  		}  		if (-2147483648 != 0) {  			goto Label_016E;  		}  		Label_0159:  		if (element != submit) {  			goto Label_00F7;  		}  		Label_0163:  		str = element.Name;  		goto Label_0146;  		Label_016E:  		range = enumerator.Current;  		if (0 != 0) {  			goto Label_0109;  		}  		if (0 == 0) {  			goto Label_012E;  		}  		Label_017D:  		element = (FormElement)range;  		goto Label_0159;  	}  	goto Label_00BB;  	Label_019F:  	requestStream = new MemoryStream ();  	goto Label_00D9;  	Label_01AA:  	request = WebRequest.Create (form.Action.Url);  	request.Timeout = 0x7530;  	request.ContentType = "application/x-www-form-urlencoded";  	goto Label_00C7;  	Label_01D3:  	if (form.Method != Form.FormMethod.Get) {  		goto Label_01AA;  	}  	goto Label_019F;  }  catch (IOException exception) {  	throw new BrowseError (exception);  }  
Magic Number,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,The following statement contains a magic number: using (IEnumerator<DocumentRange> enumerator = form.Elements.GetEnumerator ()) {  	DocumentRange range;  	FormElement element;  	string str;  	string str2;  	goto Label_0109;  	Label_00F7:  	if (element.AutoSend) {  		goto Label_0163;  	}  	goto Label_0109;  	Label_0105:  	if (str != null) {  		goto Label_013B;  	}  	Label_0109:  	if (enumerator.MoveNext ()) {  		goto Label_016E;  	}  	goto Label_0141;  	Label_0117:  	str2 = "";  	if (0 != 0) {  		goto Label_0163;  	}  	Label_0121:  	utility.Add (str' str2);  	goto Label_0109;  	Label_012E:  	if (range is FormElement) {  		goto Label_017D;  	}  	goto Label_0109;  	Label_013B:  	if (str2 != null) {  		goto Label_0121;  	}  	goto Label_0117;  	Label_0141:  	if (0 == 0) {  		goto Label_0040;  	}  	goto Label_016E;  	Label_0146:  	str2 = element.Value;  	if (0 == 0) {  		goto Label_0105;  	}  	if (-2147483648 != 0) {  		goto Label_016E;  	}  	Label_0159:  	if (element != submit) {  		goto Label_00F7;  	}  	Label_0163:  	str = element.Name;  	goto Label_0146;  	Label_016E:  	range = enumerator.Current;  	if (0 != 0) {  		goto Label_0109;  	}  	if (0 == 0) {  		goto Label_012E;  	}  	Label_017D:  	element = (FormElement)range;  	goto Label_0159;  }  
Magic Number,Encog.Bot.Browse,Browser,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Browser.cs,Navigate,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_016E;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,FindEndTag,The following statement contains a magic number: if (num2 < this._xbbe2f7d7c86e0379.getDataSize ()) {  	DataUnit dataUnit = this._xbbe2f7d7c86e0379.GetDataUnit (num2);  	Label_00B8:  	if (!(dataUnit is TagDataUnit)) {  		goto Label_001D;  	}  	Tag tag2 = ((TagDataUnit)dataUnit).Tag;  	if ((((uint)num2) + ((uint)index)) <= uint.MaxValue) {  		if (string.Compare (tag.Name' tag2.Name' true) == 0) {  			if (tag2.TagType != Tag.Type.End) {  				if (tag2.TagType != Tag.Type.Begin) {  					goto Label_001D;  				}  				if ((((uint)num) - ((uint)num2)) >= 0) {  					num++;  					if (((uint)num2) <= uint.MaxValue) {  						goto Label_001D;  					}  					goto Label_010C;  				}  				goto Label_00E9;  			}  			if (num != 0) {  				num--;  				goto Label_001D;  			}  			if ((4 != 0) && ((((uint)index) | 0x7fffffff) != 0)) {  				return num2;  			}  		}  		else {  			goto Label_001D;  		}  		goto Label_00B8;  	}  }  else {  	goto Label_010C;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,FindEndTag,The following statement contains a magic number: if ((((uint)num2) + ((uint)index)) <= uint.MaxValue) {  	if (string.Compare (tag.Name' tag2.Name' true) == 0) {  		if (tag2.TagType != Tag.Type.End) {  			if (tag2.TagType != Tag.Type.Begin) {  				goto Label_001D;  			}  			if ((((uint)num) - ((uint)num2)) >= 0) {  				num++;  				if (((uint)num2) <= uint.MaxValue) {  					goto Label_001D;  				}  				goto Label_010C;  			}  			goto Label_00E9;  		}  		if (num != 0) {  			num--;  			goto Label_001D;  		}  		if ((4 != 0) && ((((uint)index) | 0x7fffffff) != 0)) {  			return num2;  		}  	}  	else {  		goto Label_001D;  	}  	goto Label_00B8;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,FindEndTag,The following statement contains a magic number: if (string.Compare (tag.Name' tag2.Name' true) == 0) {  	if (tag2.TagType != Tag.Type.End) {  		if (tag2.TagType != Tag.Type.Begin) {  			goto Label_001D;  		}  		if ((((uint)num) - ((uint)num2)) >= 0) {  			num++;  			if (((uint)num2) <= uint.MaxValue) {  				goto Label_001D;  			}  			goto Label_010C;  		}  		goto Label_00E9;  	}  	if (num != 0) {  		num--;  		goto Label_001D;  	}  	if ((4 != 0) && ((((uint)index) | 0x7fffffff) != 0)) {  		return num2;  	}  }  else {  	goto Label_001D;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,FindEndTag,The following statement contains a magic number: if ((4 != 0) && ((((uint)index) | 0x7fffffff) != 0)) {  	return num2;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadContents,The following statement contains a magic number: if ((string.Compare (tag.Name' "span"' true) == 0) && (this._xe27443ca851b9ce6 != null)) {  	if (3 == 0) {  		goto Label_0278;  	}  	this._xe27443ca851b9ce6 = this._xe27443ca851b9ce6.Parent;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadContents,The following statement contains a magic number: if (3 == 0) {  	goto Label_0278;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadContents,The following statement contains a magic number: if (4 != 0) {  	goto Label_00BD;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadDataUnits,The following statement contains a magic number: if ((((uint)flag2) & 0) == 0) {  	if ((((uint)flag2) & 0) != 0) {  		goto Label_00F8;  	}  	if ((((uint)num) < 0) || (3 != 0)) {  		goto Label_002C;  	}  	goto Label_0010;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadDataUnits,The following statement contains a magic number: if ((((uint)num) < 0) || (3 != 0)) {  	goto Label_002C;  }  
Magic Number,Encog.Bot.Browse,LoadWebPage,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\LoadWebPage.cs,LoadInput,The following statement contains a magic number: if (8 == 0) {  	goto Label_0075;  }  
Magic Number,Encog.Bot.Browse.Range,Form,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Form.cs,FindType,The following statement contains a magic number: using (IEnumerator<DocumentRange> enumerator = base.Elements.GetEnumerator ()) {  	DocumentRange range;  	Input input;  	goto Label_0047;  	Label_0011:  	if ((((uint)num) & 0) == 0) {  		goto Label_0047;  	}  	Label_0025:  	if (string.Compare (input.Type' type' true) == 0) {  		goto Label_009D;  	}  	goto Label_0047;  	Label_0039:  	if (0xff == 0) {  		goto Label_007A;  	}  	if (4 == 0) {  		Input input2;  		return input2;  	}  	Label_0047:  	if (enumerator.MoveNext ()) {  		goto Label_00A7;  	}  	if ((((uint)num) - ((uint)index)) >= 0) {  		goto Label_00C1;  	}  	if (((uint)index) <= uint.MaxValue) {  	}  	Label_007A:  	if (range is Input) {  		goto Label_0091;  	}  	goto Label_0011;  	Label_0089:  	num--;  	goto Label_0039;  	Label_0091:  	input = (Input)range;  	goto Label_0025;  	Label_009D:  	if (num > 0) {  		goto Label_0089;  	}  	return input;  	Label_00A7:  	range = enumerator.Current;  	goto Label_007A;  }  
Magic Number,Encog.Bot.Browse.Range,Form,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Form.cs,FindType,The following statement contains a magic number: if (4 == 0) {  	Input input2;  	return input2;  }  
Magic Number,Encog.Bot.Browse.Range,Form,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Form.cs,ToString,The following statement contains a magic number: if (4 != 0) {  	builder.Append ("'action=");  	builder.Append (this.Action);  	if (8 != 0) {  		foreach (DocumentRange range in base.Elements) {  			builder.Append ("\n\t");  			builder.Append (range.ToString ());  		}  		builder.Append ("]");  	}  }  
Magic Number,Encog.Bot.Browse.Range,Form,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Form.cs,ToString,The following statement contains a magic number: if (4 != 0) {  	builder.Append ("'action=");  	builder.Append (this.Action);  	if (8 != 0) {  		foreach (DocumentRange range in base.Elements) {  			builder.Append ("\n\t");  			builder.Append (range.ToString ());  		}  		builder.Append ("]");  	}  }  
Magic Number,Encog.Bot.Browse.Range,Form,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Form.cs,ToString,The following statement contains a magic number: if (8 != 0) {  	foreach (DocumentRange range in base.Elements) {  		builder.Append ("\n\t");  		builder.Append (range.ToString ());  	}  	builder.Append ("]");  }  
Magic Number,Encog.Bot.Browse.Range,Input,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Input.cs,ToString,The following statement contains a magic number: if (4 != 0) {  	return builder.ToString ();  }  
Magic Number,Encog.Bot.Browse.Range,Div,C:\repos\neismit_emds\Nsim4\Encog\Bot\Browse\Range\Div.cs,ToString,The following statement contains a magic number: if (-2 != 0) {  }  
Magic Number,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,PeekableInputStream,The following statement contains a magic number: this._x9376edd3277f388d = new byte[10];  
Magic Number,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,Peek,The following statement contains a magic number: if (depth >= this._x31859a38ae0c6358) {  	num2 = this._x31859a38ae0c6358;  	int count = (depth - this._x31859a38ae0c6358) + 1;  	num4 = this._xcf18e5243f8d5fd3.Read (this._x9376edd3277f388d' num2' count);  	if (15 != 0) {  		if (num4 < 1) {  			return -1;  		}  		goto Label_0017;  	}  	if (0 == 0) {  		goto Label_0017;  	}  }  
Magic Number,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,Peek,The following statement contains a magic number: if (15 != 0) {  	if (num4 < 1) {  		return -1;  	}  	goto Label_0017;  }  
Magic Number,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,Peek,The following statement contains a magic number: if ((((uint)num2) - ((uint)num4)) <= uint.MaxValue) {  	buffer = new byte[depth + 10];  	num = 0;  	goto Label_008C;  }  
Magic Number,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,Peek,The following statement contains a magic number: buffer = new byte[depth + 10];  
Magic Number,Encog.Parse,PeekableInputStream,C:\repos\neismit_emds\Nsim4\Encog\Parse\PeekableInputStream.cs,Read,The following statement contains a magic number: if (2 != 0) {  	return this._xcf18e5243f8d5fd3.Read (buffer' offset' count);  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ReadTags,The following statement contains a magic number: if (-2147483648 != 0) {  	this._x337e217cb3ba0627 = new PeekableInputStream (istream);  	if ((0 == 0) && (_xd1768ddee4fdb90a != null)) {  		return;  	}  	_xd1768ddee4fdb90a = new Dictionary<string' char> ();  	if (1 != 0) {  		_xd1768ddee4fdb90a ["nbsp"] = ' ';  		_xd1768ddee4fdb90a ["lt"] = '<';  		goto Label_00DE;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (0xff != 0) {  	this.EatWhitespace ();  	if ("\"'".IndexOf ((char)this._x337e217cb3ba0627.Peek ()) == -1) {  		Label_0036:  		if (char.IsWhiteSpace ((char)this._x337e217cb3ba0627.Peek ())) {  			goto Label_01F5;  		}  		if (this._x337e217cb3ba0627.Peek () == -1) {  			if (((uint)num2) <= uint.MaxValue) {  				goto Label_01F5;  			}  		}  		else {  			if (this._x337e217cb3ba0627.Peek () != 0x3e) {  				builder.Append (this.xdd33c6adbeca0968 ());  			}  			else if (((uint)num2) >= 0) {  				if (3 == 0) {  					goto Label_013A;  				}  				goto Label_01F5;  			}  			goto Label_0036;  		}  		goto Label_0086;  	}  	num = this._x337e217cb3ba0627.Read ();  	goto Label_0125;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if ("\"'".IndexOf ((char)this._x337e217cb3ba0627.Peek ()) == -1) {  	Label_0036:  	if (char.IsWhiteSpace ((char)this._x337e217cb3ba0627.Peek ())) {  		goto Label_01F5;  	}  	if (this._x337e217cb3ba0627.Peek () == -1) {  		if (((uint)num2) <= uint.MaxValue) {  			goto Label_01F5;  		}  	}  	else {  		if (this._x337e217cb3ba0627.Peek () != 0x3e) {  			builder.Append (this.xdd33c6adbeca0968 ());  		}  		else if (((uint)num2) >= 0) {  			if (3 == 0) {  				goto Label_013A;  			}  			goto Label_01F5;  		}  		goto Label_0036;  	}  	goto Label_0086;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (this._x337e217cb3ba0627.Peek () == -1) {  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_01F5;  	}  }  else {  	if (this._x337e217cb3ba0627.Peek () != 0x3e) {  		builder.Append (this.xdd33c6adbeca0968 ());  	}  	else if (((uint)num2) >= 0) {  		if (3 == 0) {  			goto Label_013A;  		}  		goto Label_01F5;  	}  	goto Label_0036;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (this._x337e217cb3ba0627.Peek () != 0x3e) {  	builder.Append (this.xdd33c6adbeca0968 ());  }  else if (((uint)num2) >= 0) {  	if (3 == 0) {  		goto Label_013A;  	}  	goto Label_01F5;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (((uint)num2) >= 0) {  	if (3 == 0) {  		goto Label_013A;  	}  	goto Label_01F5;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (3 == 0) {  	goto Label_013A;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (this._x337e217cb3ba0627.Peek () != -1) {  	if (builder.Length <= this.MaxLength) {  		num2 = this.xdd33c6adbeca0968 ();  		if (num2 == 13) {  			goto Label_0160;  		}  		goto Label_0196;  	}  	if (((uint)num) > uint.MaxValue) {  		goto Label_0181;  	}  	if ((((uint)num2) + ((uint)num)) >= 0) {  		goto Label_0086;  	}  	goto Label_0125;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (builder.Length <= this.MaxLength) {  	num2 = this.xdd33c6adbeca0968 ();  	if (num2 == 13) {  		goto Label_0160;  	}  	goto Label_0196;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (num2 == 13) {  	goto Label_0160;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseString,The following statement contains a magic number: if (num2 == 10) {  	goto Label_0181;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if ((((uint)num2) & 0) == 0) {  	str2 = this.ParseString ();  	if (4 == 0) {  		goto Label_0320;  	}  	goto Label_0094;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (4 == 0) {  	goto Label_0320;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (builder [0] != '/') {  	this._xffe521cc76054baf.Name = builder.ToString ();  	this._xffe521cc76054baf.TagType = Tag.Type.Begin;  	if (4 == 0) {  		goto Label_0345;  	}  }  else {  	this._xffe521cc76054baf.Name = builder.ToString ().Substring (1);  	this._xffe521cc76054baf.TagType = Tag.Type.End;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (4 == 0) {  	goto Label_0345;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (this._x337e217cb3ba0627.Peek () != 0x3e) {  	if ((builder.Length > 0) && (this._x337e217cb3ba0627.Peek () == 0x2f)) {  		if ((((uint)num2) | 15) == 0) {  			goto Label_0279;  		}  		if (0 != 0) {  			goto Label_01B3;  		}  		goto Label_01AB;  	}  	builder.Append ((char)this._x337e217cb3ba0627.Read ());  	goto Label_028E;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if ((builder.Length > 0) && (this._x337e217cb3ba0627.Peek () == 0x2f)) {  	if ((((uint)num2) | 15) == 0) {  		goto Label_0279;  	}  	if (0 != 0) {  		goto Label_01B3;  	}  	goto Label_01AB;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if ((((uint)num2) | 15) == 0) {  	goto Label_0279;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (-2 == 0) {  	goto Label_00EA;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (2 != 0) {  	goto Label_03C1;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ParseTag,The following statement contains a magic number: if (4 != 0) {  	if ((((uint)num2) - ((uint)num)) > uint.MaxValue) {  		goto Label_003B;  	}  	this._x337e217cb3ba0627.Read ();  	if (this._x337e217cb3ba0627.Peek ("!--")) {  		this._x337e217cb3ba0627.Skip ((long)"!--".Length);  		goto Label_0433;  	}  	if ((((uint)num2) | uint.MaxValue) == 0) {  		goto Label_0010;  	}  	if (((uint)num) <= uint.MaxValue) {  		goto Label_032E;  	}  	goto Label_03C1;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (this._xfa01f9cedae2093c == null) {  	if (this._x86f29885f41183a5 == null) {  		if (-2 == 0) {  		}  	}  	else {  		if (!this.x2dcb1baab64fbe12 (this._x86f29885f41183a5)) {  			return this._x337e217cb3ba0627.Read ();  		}  		this._x86f29885f41183a5 = null;  		if (3 == 0) {  			goto Label_0022;  		}  		if (0xff == 0) {  			goto Label_006A;  		}  	}  	if (this._x337e217cb3ba0627.Peek () == 60) {  		goto Label_00B2;  	}  }  else {  	goto Label_0147;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (this._xfa01f9cedae2093c == null) {  	if (this._x86f29885f41183a5 == null) {  		if (-2 == 0) {  		}  	}  	else {  		if (!this.x2dcb1baab64fbe12 (this._x86f29885f41183a5)) {  			return this._x337e217cb3ba0627.Read ();  		}  		this._x86f29885f41183a5 = null;  		if (3 == 0) {  			goto Label_0022;  		}  		if (0xff == 0) {  			goto Label_006A;  		}  	}  	if (this._x337e217cb3ba0627.Peek () == 60) {  		goto Label_00B2;  	}  }  else {  	goto Label_0147;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (this._xfa01f9cedae2093c == null) {  	if (this._x86f29885f41183a5 == null) {  		if (-2 == 0) {  		}  	}  	else {  		if (!this.x2dcb1baab64fbe12 (this._x86f29885f41183a5)) {  			return this._x337e217cb3ba0627.Read ();  		}  		this._x86f29885f41183a5 = null;  		if (3 == 0) {  			goto Label_0022;  		}  		if (0xff == 0) {  			goto Label_006A;  		}  	}  	if (this._x337e217cb3ba0627.Peek () == 60) {  		goto Label_00B2;  	}  }  else {  	goto Label_0147;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (this._x86f29885f41183a5 == null) {  	if (-2 == 0) {  	}  }  else {  	if (!this.x2dcb1baab64fbe12 (this._x86f29885f41183a5)) {  		return this._x337e217cb3ba0627.Read ();  	}  	this._x86f29885f41183a5 = null;  	if (3 == 0) {  		goto Label_0022;  	}  	if (0xff == 0) {  		goto Label_006A;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (this._x86f29885f41183a5 == null) {  	if (-2 == 0) {  	}  }  else {  	if (!this.x2dcb1baab64fbe12 (this._x86f29885f41183a5)) {  		return this._x337e217cb3ba0627.Read ();  	}  	this._x86f29885f41183a5 = null;  	if (3 == 0) {  		goto Label_0022;  	}  	if (0xff == 0) {  		goto Label_006A;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (-2 == 0) {  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (3 == 0) {  	goto Label_0022;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (this._x337e217cb3ba0627.Peek () == 60) {  	goto Label_00B2;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (15 == 0) {  	goto Label_004F;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (0xff != 0) {  	if (3 != 0) {  		goto Label_003B;  	}  	goto Label_0147;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,Read,The following statement contains a magic number: if (3 != 0) {  	goto Label_003B;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if (1 != 0) {  	builder.Append ("[ReadTags: currentTag=");  	if (8 != 0) {  		if ((this._xffe521cc76054baf != null) || (-2147483648 == 0)) {  			goto Label_000D;  		}  		goto Label_0030;  	}  	if (4 == 0) {  		goto Label_0058;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if (1 != 0) {  	builder.Append ("[ReadTags: currentTag=");  	if (8 != 0) {  		if ((this._xffe521cc76054baf != null) || (-2147483648 == 0)) {  			goto Label_000D;  		}  		goto Label_0030;  	}  	if (4 == 0) {  		goto Label_0058;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if (1 != 0) {  	builder.Append ("[ReadTags: currentTag=");  	if (8 != 0) {  		if ((this._xffe521cc76054baf != null) || (-2147483648 == 0)) {  			goto Label_000D;  		}  		goto Label_0030;  	}  	if (4 == 0) {  		goto Label_0058;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if (8 != 0) {  	if ((this._xffe521cc76054baf != null) || (-2147483648 == 0)) {  		goto Label_000D;  	}  	goto Label_0030;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if (8 != 0) {  	if ((this._xffe521cc76054baf != null) || (-2147483648 == 0)) {  		goto Label_000D;  	}  	goto Label_0030;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if ((this._xffe521cc76054baf != null) || (-2147483648 == 0)) {  	goto Label_000D;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,ToString,The following statement contains a magic number: if (4 == 0) {  	goto Label_0058;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The following statement contains a magic number: if (15 != 0) {  	goto Label_01AB;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The following statement contains a magic number: using (IEnumerator<char> enumerator = xc15bd84e01929885.GetEnumerator ()) {  	goto Label_0037;  	Label_0033:  	depth++;  	Label_0037:  	if (!enumerator.MoveNext ()) {  		if (((uint)depth) > uint.MaxValue) {  			return flag;  		}  	}  	else {  		char current = enumerator.Current;  		while (char.ToLower ((char)this._x337e217cb3ba0627.Peek (depth)) != char.ToLower (current)) {  			return false;  		}  		if (-2147483648 != 0) {  			goto Label_0033;  		}  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The following statement contains a magic number: if (!enumerator.MoveNext ()) {  	if (((uint)depth) > uint.MaxValue) {  		return flag;  	}  }  else {  	char current = enumerator.Current;  	while (char.ToLower ((char)this._x337e217cb3ba0627.Peek (depth)) != char.ToLower (current)) {  		return false;  	}  	if (-2147483648 != 0) {  		goto Label_0033;  	}  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0033;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The following statement contains a magic number: if (this._x337e217cb3ba0627.Peek (depth) != 60) {  	return false;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,x2dcb1baab64fbe12,The following statement contains a magic number: if ((((uint)depth) | 2) != 0) {  	goto Label_0169;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,xdd33c6adbeca0968,The following statement contains a magic number: if (num > 0) {  	this.Read ();  	num--;  	if (0 == 0) {  		goto Label_0027;  	}  }  else {  	if (4 != 0) {  		return ch;  	}  	goto Label_0178;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,xdd33c6adbeca0968,The following statement contains a magic number: if (4 != 0) {  	return ch;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,xdd33c6adbeca0968,The following statement contains a magic number: switch (this._x337e217cb3ba0627.Peek (num++)) {  case 0x26:  case 0x3b:  	goto Label_00E3;  default:  	if (!char.IsWhiteSpace ((char)num2)) {  		goto Label_0110;  	}  	if (2 == 0) {  		goto Label_00D5;  	}  	goto Label_00E3;  }  
Magic Number,Encog.Parse.Tags.Read,ReadTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Read\ReadTags.cs,xdd33c6adbeca0968,The following statement contains a magic number: if (2 == 0) {  	goto Label_00D5;  }  
Magic Number,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,BuildForNetworkInput,The following statement contains a magic number: if (2 != 0) {  	return data2;  }  
Magic Number,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,FirstPass,The following statement contains a magic number: if (3 == 0) {  	goto Label_009B;  }  
Magic Number,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,Next,The following statement contains a magic number: if (!this._readCSV.Any<ReadCSV> (csv => !csv.Next ())) {  	bool flag;  	using (IEnumerator<IEnumerator<IMLDataPair>> enumerator2 = this._readDataSet.GetEnumerator ()) {  		IEnumerator<IMLDataPair> enumerator;  		MLDataFieldHolder holder;  		IMLDataPair current;  		goto Label_0075;  		Label_006E:  		holder.Pair = current;  		Label_0075:  		if (enumerator2.MoveNext ()) {  			goto Label_009B;  		}  		goto Label_002C;  		Label_0085:  		holder = this._dataSetIteratorMap [enumerator];  		current = enumerator.Current;  		goto Label_00C1;  		Label_009B:  		enumerator = enumerator2.Current;  		if (enumerator.MoveNext ()) {  			goto Label_0085;  		}  		if (((uint)flag) <= uint.MaxValue) {  		}  		return false;  		Label_00C1:  		if ((((uint)flag) + ((uint)flag)) <= uint.MaxValue) {  			goto Label_006E;  		}  		goto Label_002C;  	}  	if ((((uint)flag) | 0x7fffffff) != 0) {  		goto Label_002C;  	}  	if (2 == 0) {  		goto Label_004D;  	}  	goto Label_010F;  }  
Magic Number,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,Next,The following statement contains a magic number: if (2 == 0) {  	goto Label_004D;  }  
Magic Number,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,OpenCSV,The following statement contains a magic number: using (IEnumerator<IInputField> enumerator = this._inputFields.GetEnumerator ()) {  	IInputField field;  	InputFieldCSV dcsv;  	string str;  	ReadCSV dcsv2;  	goto Label_0034;  	Label_002D:  	if (0x7fffffff == 0) {  		goto Label_0062;  	}  	Label_0034:  	if (enumerator.MoveNext ()) {  		goto Label_00AC;  	}  	return;  	Label_0044:  	if (!dictionary.ContainsKey (str)) {  		goto Label_0098;  	}  	Label_004D:  	this._csvMap [dcsv] = dictionary [str];  	goto Label_002D;  	Label_0062:  	if (field is InputFieldCSV) {  		goto Label_00B6;  	}  	goto Label_008C;  	Label_006C:  	dictionary [str] = dcsv2;  	if (-1 == 0) {  		goto Label_00BD;  	}  	this._readCSV.Add (dcsv2);  	if (0 == 0) {  		goto Label_004D;  	}  	Label_008C:  	if (4 != 0) {  		goto Label_0034;  	}  	return;  	Label_0098:  	dcsv2 = new ReadCSV (str' false' this._csvFormat);  	if (0 == 0) {  		goto Label_006C;  	}  	return;  	Label_00AC:  	field = enumerator.Current;  	goto Label_0062;  	Label_00B6:  	dcsv = (InputFieldCSV)field;  	Label_00BD:  	str = dcsv.File;  	goto Label_0044;  }  
Magic Number,Encog.Util.Normalize,DataNormalization,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\DataNormalization.cs,OpenCSV,The following statement contains a magic number: if (4 != 0) {  	goto Label_0034;  }  
Magic Number,Encog.Util.Logging,EncogLogging,C:\repos\neismit_emds\Nsim4\Encog\Util\Logging\EncogLogging.cs,Log,The following statement contains a magic number: Log (2' t);  
Magic Number,Encog.Util.Logging,DumpMatrix,C:\repos\neismit_emds\Nsim4\Encog\Util\Logging\DumpMatrix.cs,DumpArray,The following statement contains a magic number: if ((((uint)num) | 2) != 0) {  	if (-2147483648 != 0) {  		builder.Append ("[");  		num = 0;  	}  	goto Label_0032;  }  
Magic Number,Encog.Util.Logging,DumpMatrix,C:\repos\neismit_emds\Nsim4\Encog\Util\Logging\DumpMatrix.cs,DumpArray,The following statement contains a magic number: if ((((uint)num) | 2) != 0) {  	if (-2147483648 != 0) {  		builder.Append ("[");  		num = 0;  	}  	goto Label_0032;  }  
Magic Number,Encog.Util.Logging,DumpMatrix,C:\repos\neismit_emds\Nsim4\Encog\Util\Logging\DumpMatrix.cs,DumpArray,The following statement contains a magic number: if (-2147483648 != 0) {  	builder.Append ("[");  	num = 0;  }  
Magic Number,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,x64b4cdf32944d344,The following statement contains a magic number: using (List<LoadedRow>.Enumerator enumerator = this._x4a3f0a05c02f235f.GetEnumerator ()) {  	LoadedRow row;  	StringBuilder builder;  	goto Label_0068;  	Label_004E:  	if (num2 < base.Count) {  		goto Label_00E4;  	}  	writer.WriteLine (builder.ToString ());  	Label_0068:  	if (enumerator.MoveNext ()) {  		goto Label_01F7;  	}  	goto Label_00C5;  	Label_0076:  	if ((((uint)num) - ((uint)flag)) >= 0) {  	}  	builder.Append (row.Data [num2]);  	Label_009F:  	num2++;  	goto Label_004E;  	Label_00A7:  	builder.Append ("\"");  	goto Label_009F;  	Label_00B8:  	if (flagArray [num2]) {  		goto Label_0101;  	}  	goto Label_0076;  	Label_00C5:  	if (-2147483648 != 0) {  		goto Label_021F;  	}  	if (((uint)flag) <= uint.MaxValue) {  		goto Label_01A5;  	}  	Label_00E4:  	if (num2 > 0) {  		goto Label_0158;  	}  	if ((((uint)flag) + ((uint)num2)) >= 0) {  		goto Label_00B8;  	}  	Label_0101:  	builder.Append ("\"");  	builder.Append (row.Data [num2]);  	if ((((uint)flag) & 0) != 0) {  		goto Label_01D8;  	}  	if ((((uint)num) + ((uint)num2)) <= uint.MaxValue) {  		goto Label_00A7;  	}  	goto Label_01A5;  	Label_0158:  	builder.Append ("'");  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  	}  	if (((uint)num2) <= uint.MaxValue) {  		goto Label_00B8;  	}  	goto Label_00E4;  	Label_0196:  	if (flag) {  		goto Label_01A5;  	}  	Label_0199:  	builder = new StringBuilder ();  	num2 = 0;  	goto Label_004E;  	Label_01A5:  	num = 0;  	Label_01D8:  	while (num < base.Count) {  		try {  			string str = row.Data [num];  			base.InputFormat.Parse (str);  			flagArray [num] = false;  		}  		catch (Exception) {  			flagArray [num] = true;  		}  		num++;  	}  	flag = false;  	goto Label_0199;  	Label_01F7:  	row = enumerator.Current;  	base.UpdateStatus ("Writing output");  	goto Label_0196;  }  
Magic Number,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,x64b4cdf32944d344,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_021F;  }  
Magic Number,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,xcc7d420ca2a80044,The following statement contains a magic number: if (3 != 0) {  	if (2 != 0) {  		goto Label_0018;  	}  	goto Label_005B;  }  
Magic Number,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,xcc7d420ca2a80044,The following statement contains a magic number: if (3 != 0) {  	if (2 != 0) {  		goto Label_0018;  	}  	goto Label_005B;  }  
Magic Number,Encog.App.Analyst.CSV.Sort,SortCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortCSV.cs,xcc7d420ca2a80044,The following statement contains a magic number: if (2 != 0) {  	goto Label_0018;  }  
Magic Number,Encog.App.Analyst.CSV.Sort,SortedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Sort\SortedField.cs,ToString,The following statement contains a magic number: if (8 != 0) {  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (8 != 0) {  	return;  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (this._x81bd0e59c1618ea6.Peek ().Equals (name)) {  	this.EndTag ();  }  else {  	string[] strArray = new string[5];  	if (0 == 0) {  		strArray [0] = "End tag mismatch' should be ending: ";  		strArray [1] = this._x81bd0e59c1618ea6.Peek ();  		strArray [2] = "' but trying to end: ";  		strArray [3] = name;  		strArray [4] = ".";  	}  	throw new Encog.Parse.ParseError (string.Concat (strArray));  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (this._x81bd0e59c1618ea6.Peek ().Equals (name)) {  	this.EndTag ();  }  else {  	string[] strArray = new string[5];  	if (0 == 0) {  		strArray [0] = "End tag mismatch' should be ending: ";  		strArray [1] = this._x81bd0e59c1618ea6.Peek ();  		strArray [2] = "' but trying to end: ";  		strArray [3] = name;  		strArray [4] = ".";  	}  	throw new Encog.Parse.ParseError (string.Concat (strArray));  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (this._x81bd0e59c1618ea6.Peek ().Equals (name)) {  	this.EndTag ();  }  else {  	string[] strArray = new string[5];  	if (0 == 0) {  		strArray [0] = "End tag mismatch' should be ending: ";  		strArray [1] = this._x81bd0e59c1618ea6.Peek ();  		strArray [2] = "' but trying to end: ";  		strArray [3] = name;  		strArray [4] = ".";  	}  	throw new Encog.Parse.ParseError (string.Concat (strArray));  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (this._x81bd0e59c1618ea6.Peek ().Equals (name)) {  	this.EndTag ();  }  else {  	string[] strArray = new string[5];  	if (0 == 0) {  		strArray [0] = "End tag mismatch' should be ending: ";  		strArray [1] = this._x81bd0e59c1618ea6.Peek ();  		strArray [2] = "' but trying to end: ";  		strArray [3] = name;  		strArray [4] = ".";  	}  	throw new Encog.Parse.ParseError (string.Concat (strArray));  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (0 == 0) {  	strArray [0] = "End tag mismatch' should be ending: ";  	strArray [1] = this._x81bd0e59c1618ea6.Peek ();  	strArray [2] = "' but trying to end: ";  	strArray [3] = name;  	strArray [4] = ".";  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (0 == 0) {  	strArray [0] = "End tag mismatch' should be ending: ";  	strArray [1] = this._x81bd0e59c1618ea6.Peek ();  	strArray [2] = "' but trying to end: ";  	strArray [3] = name;  	strArray [4] = ".";  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: if (0 == 0) {  	strArray [0] = "End tag mismatch' should be ending: ";  	strArray [1] = this._x81bd0e59c1618ea6.Peek ();  	strArray [2] = "' but trying to end: ";  	strArray [3] = name;  	strArray [4] = ".";  }  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: strArray [2] = "' but trying to end: ";  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: strArray [3] = name;  
Magic Number,Encog.Parse.Tags.Write,WriteTags,C:\repos\neismit_emds\Nsim4\Encog\Parse\Tags\Write\WriteTags.cs,EndTag,The following statement contains a magic number: strArray [4] = ".";  
Magic Number,Encog.Neural.CPN.Training,TrainOutstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainOutstar.cs,Iteration,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this._x823a2b9c8bf459c5.GetEnumerator ()) {  	IMLDataPair pair;  	IMLData data;  	int num;  	int num2;  	double num3;  	IMLData data2;  	goto Label_005E;  	Label_0023:  	if (num2 < this._x87a7fc6a72741c2e.OutstarCount) {  		goto Label_0091;  	}  	Label_0032:  	data2 = this._x87a7fc6a72741c2e.ComputeOutstar (data);  	calculation.UpdateError (data2.Data' pair.Ideal.Data' pair.Significance);  	Label_005E:  	if (!enumerator.MoveNext () && ((((uint)num2) - ((uint)num3)) <= uint.MaxValue)) {  		goto Label_014D;  	}  	goto Label_00D2;  	Label_0084:  	num2++;  	goto Label_0124;  	Label_0091:  	num3 = this._x9b481c22b6706459 * (pair.Ideal [num2] - this._x87a7fc6a72741c2e.WeightsInstarToOutstar [num' num2]);  	this._x87a7fc6a72741c2e.WeightsInstarToOutstar.Add (num' num2' num3);  	goto Label_0084;  	Label_00D2:  	pair = enumerator.Current;  	data = this._x87a7fc6a72741c2e.ComputeInstar (pair.Input);  	num = EngineArray.IndexOfLargest (data.Data);  	num2 = 0;  	if ((((uint)num2) <= uint.MaxValue) && (-2 == 0)) {  		goto Label_0032;  	}  	goto Label_0023;  	Label_0124:  	if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  		goto Label_0023;  	}  }  
Magic Number,Encog.Neural.CPN.Training,TrainOutstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainOutstar.cs,Iteration,The following statement contains a magic number: if ((((uint)num2) <= uint.MaxValue) && (-2 == 0)) {  	goto Label_0032;  }  
Magic Number,Encog.Neural.CPN.Training,TrainInstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainInstar.cs,Iteration,The following statement contains a magic number: using (IEnumerator<IMLDataPair> enumerator = this._x823a2b9c8bf459c5.GetEnumerator ()) {  	IMLDataPair pair;  	int num2;  	double num3;  	int num4;  	double num5;  	int num6;  	double num7;  	Label_0027:  	if (enumerator.MoveNext ()) {  		goto Label_015A;  	}  	if ((((uint)negativeInfinity) + ((uint)num3)) >= 0) {  		goto Label_01C7;  	}  	if (-2 != 0) {  		goto Label_0197;  	}  	if ((((uint)num5) & 0) == 0) {  		goto Label_015A;  	}  	goto Label_00B8;  	Label_0071:  	this._x87a7fc6a72741c2e.WeightsInputToInstar.Add (num6' num2' num7);  	num6++;  	Label_008C:  	if (num6 < this._x87a7fc6a72741c2e.InputCount) {  		goto Label_00C0;  	}  	if ((((uint)num4) + ((uint)num3)) < 0) {  		goto Label_014D;  	}  	goto Label_0027;  	Label_00B8:  	negativeInfinity = num3;  	Label_00BB:  	num6 = 0;  	goto Label_008C;  	Label_00C0:  	num7 = this._x9b481c22b6706459 * (pair.Input [num6] - this._x87a7fc6a72741c2e.WeightsInputToInstar [num6' num2]);  	if (((uint)num5) >= 0) {  		goto Label_0071;  	}  	goto Label_0027;  	Label_0104:  	if (num3 <= negativeInfinity) {  		goto Label_00BB;  	}  	goto Label_00B8;  	Label_010B:  	num5 = pair.Input [num4] - this._x87a7fc6a72741c2e.WeightsInputToInstar [num4' num2];  	num3 += num5 * num5;  	num4++;  	Label_013E:  	if (num4 < pair.Input.Count) {  		goto Label_010B;  	}  	Label_014D:  	num3 = BoundMath.Sqrt (num3);  	goto Label_0104;  	Label_015A:  	pair = enumerator.Current;  	num2 = EngineArray.IndexOfLargest (this._x87a7fc6a72741c2e.ComputeInstar (pair.Input).Data);  	num3 = 0.0;  	num4 = 0;  	goto Label_013E;  	Label_0197:  	if ((((uint)num5) | 0xfffffffe) == 0) {  		goto Label_0071;  	}  	goto Label_015A;  }  
Magic Number,Encog.Neural.CPN.Training,TrainInstar,C:\repos\neismit_emds\Nsim4\Encog\Neural\CPN\Training\TrainInstar.cs,Iteration,The following statement contains a magic number: if (-2 != 0) {  	goto Label_0197;  }  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,ParseLayer,The following statement contains a magic number: if (str.EndsWith (":B")) {  	str = str.Substring (0' str.Length - 2);  	layer.Bias = true;  }  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,ParseLayer,The following statement contains a magic number: str = str.Substring (0' str.Length - 2);  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,ParseLayers,The following statement contains a magic number: while (true) {  	string str;  	int index = line.IndexOf ("->"' startIndex);  	do {  		if ((-1 != 0) && (index == -1)) {  			do {  				str = line.Substring (startIndex).Trim ();  			}  			while ((((uint)startIndex) + ((uint)startIndex)) < 0);  			flag = true;  			break;  		}  		str = line.Substring (startIndex' index - startIndex).Trim ();  		startIndex = index + 2;  	}  	while ((((uint)flag) + ((uint)flag)) < 0);  	if (str.EndsWith ("b")) {  		str = str.Substring (0' str.Length - 1);  	}  	list.Add (str);  	if (flag) {  		return list;  	}  }  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,ParseLayers,The following statement contains a magic number: do {  	if ((-1 != 0) && (index == -1)) {  		do {  			str = line.Substring (startIndex).Trim ();  		}  		while ((((uint)startIndex) + ((uint)startIndex)) < 0);  		flag = true;  		break;  	}  	str = line.Substring (startIndex' index - startIndex).Trim ();  	startIndex = index + 2;  }  while ((((uint)flag) + ((uint)flag)) < 0);  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,ParseLayers,The following statement contains a magic number: startIndex = index + 2;  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,x0738845e2abbf3d2,The following statement contains a magic number: if (-2 != 0) {  	goto Label_000F;  }  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,x0738845e2abbf3d2,The following statement contains a magic number: if ((((uint)flag) + ((uint)flag)) <= uint.MaxValue) {  	if ((((uint)flag) | 15) == 0) {  		if (((uint)flag) >= 0) {  			goto Label_0061;  		}  		goto Label_008C;  	}  	xbce90b56ab411c23.Advance ();  	goto Label_002B;  }  
Magic Number,Encog.ML.Factory.Parse,ArchitectureParse,C:\repos\neismit_emds\Nsim4\Encog\ML\Factory\Parse\ArchitectureParse.cs,x0738845e2abbf3d2,The following statement contains a magic number: if ((((uint)flag) | 15) == 0) {  	if (((uint)flag) >= 0) {  		goto Label_0061;  	}  	goto Label_008C;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,AnalystWizard,The following statement contains a magic number: if (15 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,AnalystWizard,The following statement contains a magic number: if (8 != 0) {  	this._x29c8e5bee3cb25f8 = AnalystGoal.Classification;  	this._xb6540cd895237850 = 0;  	if (1 != 0) {  		this._x654428e3563552e3 = 0;  		this._x0236ea04f9fa4aaa = false;  		this._x771edacf1be2c386 = new DiscardMissing ();  	}  	else {  		goto Label_0071;  	}  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Wizard,The following statement contains a magic number: if (this._xb6540cd895237850 <= 0) {  	if (0 == 0) {  		return;  	}  }  else {  	this.xfd33c8a1cd5c5a19 ();  	if ((((uint)b) | 8) != 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Wizard,The following statement contains a magic number: if ((((uint)b) | 8) != 0) {  	return;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Wizard,The following statement contains a magic number: if ((((uint)b) + ((uint)b)) >= 0) {  	if ((15 != 0) && ((((uint)b) + ((uint)b)) < 0)) {  		goto Label_008D;  	}  	goto Label_0039;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,Wizard,The following statement contains a magic number: if ((15 != 0) && ((((uint)b) + ((uint)b)) < 0)) {  	goto Label_008D;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x0b3092feb6dc609a,The following statement contains a magic number: if (8 != 0) {  	goto Label_00D6;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x2855325f699de339,The following statement contains a magic number: this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_type"' (double)0.01);  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x40aa65188bc3f1f4,The following statement contains a magic number: while (true) {  	this._x594135906c55045c.Properties.SetProperty ("ML:CONFIG_type"' "feedforward");  	if (this._x9b10ace6509508c0 == NormalizeRange.NegOne2One) {  		this._x594135906c55045c.Properties.SetProperty ("ML:CONFIG_architecture"' "?:B->TANH->" + num + ":B->TANH->?");  	}  	else {  		this._x594135906c55045c.Properties.SetProperty ("ML:CONFIG_architecture"' "?:B->SIGMOID->" + num + ":B->SIGMOID->?");  	}  	this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_type"' "rprop");  	this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_targetError"' (double)0.01);  	if ((((uint)num) & 0) == 0) {  		return;  	}  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x40aa65188bc3f1f4,The following statement contains a magic number: this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_targetError"' (double)0.01);  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x457a4b5397851b17,The following statement contains a magic number: if (!this._x613f2248b9e460bd) {  	AnalystSegregateTarget[] targetArray2 = new AnalystSegregateTarget[0];  	if (-2 != 0) {  		this._x594135906c55045c.Segregate.SegregateTargets = targetArray2;  		return;  	}  }  else {  	targetArray = new AnalystSegregateTarget[] {  		new AnalystSegregateTarget ("FILE_TRAIN"' 0x4b)'  		new AnalystSegregateTarget ("FILE_EVAL"' 0x19)  	};  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x457a4b5397851b17,The following statement contains a magic number: if (-2 != 0) {  	this._x594135906c55045c.Segregate.SegregateTargets = targetArray2;  	return;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (2 == 0) {  	goto Label_001D;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (3 != 0) {  	goto Label_00BF;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_0072;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (this._x7047063a9bee4054) {  	task.Lines.Add ("normalize");  }  else if (2 == 0) {  	goto Label_0072;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (2 == 0) {  	goto Label_0072;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (2 == 0) {  	goto Label_0311;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (15 == 0) {  	goto Label_0059;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (8 != 0) {  	goto Label_0223;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (!this._xc24b506a94383a44) {  	if (8 == 0) {  		goto Label_0307;  	}  	if (0 != 0) {  		goto Label_0292;  	}  }  else {  	task.Lines.Add ("balance");  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x8623f9a426a3d24c,The following statement contains a magic number: if (8 == 0) {  	goto Label_0307;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x9079d3066b3873db,The following statement contains a magic number: this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_targetError"' (double)0.01);  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x982be993d7259fbb,The following statement contains a magic number: if (3 != 0) {  	this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_targetError"' (double)0.01);  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x982be993d7259fbb,The following statement contains a magic number: if (3 != 0) {  	this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_targetError"' (double)0.01);  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,x982be993d7259fbb,The following statement contains a magic number: this._x594135906c55045c.Properties.SetProperty ("ML:TRAIN_targetError"' (double)0.01);  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xa39295d07e81cd8c,The following statement contains a magic number: if ((((uint)num) - ((uint)flag)) >= 0) {  	normalizedFields.Clear ();  	fields = this._x594135906c55045c.Fields;  	if (-2 == 0) {  		goto Label_016B;  	}  	num = 0;  }  else {  	if ((((uint)flag) + ((uint)flag)) > uint.MaxValue) {  		goto Label_00A4;  	}  	if (0 != 0) {  		goto Label_016B;  	}  	goto Label_0138;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xa39295d07e81cd8c,The following statement contains a magic number: if (-2 == 0) {  	goto Label_016B;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xa39295d07e81cd8c,The following statement contains a magic number: if (3 != 0) {  	if (0 != 0) {  		return;  	}  	goto Label_0031;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xa39295d07e81cd8c,The following statement contains a magic number: if (field.ClassMembers.Count > 2) {  	singleField = NormalizationAction.Equilateral;  	goto Label_00BF;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if ((((uint)flag) | 4) != 0) {  	if ((((uint)num) + ((uint)num)) <= uint.MaxValue) {  		return;  	}  	goto Label_0105;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: this._x594135906c55045c.Properties.SetProperty ("CLUSTER:CONFIG_clusters"' 2);  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if (-2147483648 != 0) {  	using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field7;  		Label_0169:  		if (enumerator3.MoveNext ()) {  			goto Label_01EE;  		}  		goto Label_0105;  		Label_017A:  		if (field7.Action != NormalizationAction.Ignore) {  			goto Label_020C;  		}  		goto Label_0169;  		Label_0189:  		while (field6.TimeSlice >= field7.TimeSlice) {  			if ((((uint)flag) | 3) != 0) {  				goto Label_01D1;  			}  		}  		Label_01B3:  		field6 = field7;  		if ((((uint)num) - ((uint)num)) < 0) {  			goto Label_020C;  		}  		goto Label_0169;  		Label_01D1:  		if ((((uint)flag) - ((uint)num)) <= uint.MaxValue) {  			goto Label_0169;  		}  		goto Label_0105;  		Label_01EE:  		field7 = enumerator3.Current;  		if (((uint)flag) >= 0) {  			goto Label_017A;  		}  		Label_020C:  		if (!field7.Name.Equals (this._x0768e2edc97194de' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_0169;  		}  		if (field6 == null) {  			goto Label_01B3;  		}  		goto Label_0189;  	}  	if ((((uint)flag) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_038F;  	}  	goto Label_02ED;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if (-2147483648 != 0) {  	using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field7;  		Label_0169:  		if (enumerator3.MoveNext ()) {  			goto Label_01EE;  		}  		goto Label_0105;  		Label_017A:  		if (field7.Action != NormalizationAction.Ignore) {  			goto Label_020C;  		}  		goto Label_0169;  		Label_0189:  		while (field6.TimeSlice >= field7.TimeSlice) {  			if ((((uint)flag) | 3) != 0) {  				goto Label_01D1;  			}  		}  		Label_01B3:  		field6 = field7;  		if ((((uint)num) - ((uint)num)) < 0) {  			goto Label_020C;  		}  		goto Label_0169;  		Label_01D1:  		if ((((uint)flag) - ((uint)num)) <= uint.MaxValue) {  			goto Label_0169;  		}  		goto Label_0105;  		Label_01EE:  		field7 = enumerator3.Current;  		if (((uint)flag) >= 0) {  			goto Label_017A;  		}  		Label_020C:  		if (!field7.Name.Equals (this._x0768e2edc97194de' StringComparison.InvariantCultureIgnoreCase)) {  			goto Label_0169;  		}  		if (field6 == null) {  			goto Label_01B3;  		}  		goto Label_0189;  	}  	if ((((uint)flag) - ((uint)flag)) <= uint.MaxValue) {  		goto Label_038F;  	}  	goto Label_02ED;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator3 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field7;  	Label_0169:  	if (enumerator3.MoveNext ()) {  		goto Label_01EE;  	}  	goto Label_0105;  	Label_017A:  	if (field7.Action != NormalizationAction.Ignore) {  		goto Label_020C;  	}  	goto Label_0169;  	Label_0189:  	while (field6.TimeSlice >= field7.TimeSlice) {  		if ((((uint)flag) | 3) != 0) {  			goto Label_01D1;  		}  	}  	Label_01B3:  	field6 = field7;  	if ((((uint)num) - ((uint)num)) < 0) {  		goto Label_020C;  	}  	goto Label_0169;  	Label_01D1:  	if ((((uint)flag) - ((uint)num)) <= uint.MaxValue) {  		goto Label_0169;  	}  	goto Label_0105;  	Label_01EE:  	field7 = enumerator3.Current;  	if (((uint)flag) >= 0) {  		goto Label_017A;  	}  	Label_020C:  	if (!field7.Name.Equals (this._x0768e2edc97194de' StringComparison.InvariantCultureIgnoreCase)) {  		goto Label_0169;  	}  	if (field6 == null) {  		goto Label_01B3;  	}  	goto Label_0189;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: while (field6.TimeSlice >= field7.TimeSlice) {  	if ((((uint)flag) | 3) != 0) {  		goto Label_01D1;  	}  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if ((((uint)flag) | 3) != 0) {  	goto Label_01D1;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if (!this._x02283b983d652139) {  	if (this._xc24b506a94383a44) {  		this._x594135906c55045c.Properties.SetProperty ("BALANCE:CONFIG_balanceField"' this._x0768e2edc97194de);  		field5 = this._x554f16462d8d4675.Script.FindDataField (this._x0768e2edc97194de);  		goto Label_02ED;  	}  }  else if (-2147483648 != 0) {  	goto Label_013E;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if (-2147483648 != 0) {  	goto Label_013E;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if (this._x29c8e5bee3cb25f8 == AnalystGoal.Classification) {  	using (IEnumerator<AnalystField> enumerator = normalizedFields.GetEnumerator ()) {  		AnalystField field;  		DataField field2;  		goto Label_051F;  		Label_0503:  		if ((field.Action.IsClassify () || (8 == 0)) && field2.Class) {  			goto Label_052A;  		}  		Label_051F:  		if (enumerator.MoveNext ()) {  			goto Label_053A;  		}  		goto Label_03CA;  		Label_052A:  		this._x0768e2edc97194de = field.Name;  		flag = true;  		goto Label_051F;  		Label_053A:  		field = enumerator.Current;  		field2 = this._x594135906c55045c.FindDataField (field.Name);  		goto Label_0503;  	}  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator = normalizedFields.GetEnumerator ()) {  	AnalystField field;  	DataField field2;  	goto Label_051F;  	Label_0503:  	if ((field.Action.IsClassify () || (8 == 0)) && field2.Class) {  		goto Label_052A;  	}  	Label_051F:  	if (enumerator.MoveNext ()) {  		goto Label_053A;  	}  	goto Label_03CA;  	Label_052A:  	this._x0768e2edc97194de = field.Name;  	flag = true;  	goto Label_051F;  	Label_053A:  	field = enumerator.Current;  	field2 = this._x594135906c55045c.FindDataField (field.Name);  	goto Label_0503;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xd60d4f24f6e3ffb5,The following statement contains a magic number: if ((field.Action.IsClassify () || (8 == 0)) && field2.Class) {  	goto Label_052A;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xdd8dc65aef162a86,The following statement contains a magic number: if (15 != 0) {  	if (0 == 0) {  		this._x594135906c55045c.Properties.SetProperty ("ML:CONFIG_evalFile"' str2);  		this._x594135906c55045c.Properties.SetProperty ("SETUP:CONFIG_csvFormat"' AnalystFileFormat.DecpntComma);  		return;  	}  	goto Label_0240;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xdd8dc65aef162a86,The following statement contains a magic number: if (0 == 0) {  	if (3 != 0) {  		goto Label_01C3;  	}  	goto Label_028A;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xdd8dc65aef162a86,The following statement contains a magic number: if (3 != 0) {  	goto Label_01C3;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xdd8dc65aef162a86,The following statement contains a magic number: if (4 != 0) {  	goto Label_01E2;  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xf6e1c35864db42aa,The following statement contains a magic number: if (!this._x613f2248b9e460bd) {  	if (0 != 0) {  		goto Label_006A;  	}  }  else {  	properties.SetFilename ("FILE_TRAIN"' this._xb577f44182f20fa3);  	if (3 == 0) {  		goto Label_00F1;  	}  	properties.SetFilename ("FILE_EVAL"' this._x2329764ec876a018);  	properties.SetFilename ("FILE_EVAL_NORM"' this._x79f5154bafa879c9);  }  
Magic Number,Encog.App.Analyst.Wizard,AnalystWizard,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Wizard\AnalystWizard.cs,xf6e1c35864db42aa,The following statement contains a magic number: if (3 == 0) {  	goto Label_00F1;  }  
Magic Number,Encog.Util.Normalize.Output.ZAxis,OutputFieldZAxisSynthetic,C:\repos\neismit_emds\Nsim4\Encog\Util\Normalize\Output\ZAxis\OutputFieldZAxisSynthetic.cs,Calculate,The following statement contains a magic number: if (!double.IsInfinity (num4) || ((-2147483648 == 0) || (((uint)num2) < 0))) {  	if (!double.IsNaN (num4)) {  		return num4;  	}  	goto Label_00BA;  }  
Magic Number,Encog.Bot.RSS,RSS,C:\repos\neismit_emds\Nsim4\Encog\Bot\RSS\RSS.cs,x59fdc38f65d85ccf,The following statement contains a magic number: try {  	string name;  	goto Label_002F;  	Label_0010:  	this._x233f092c536593eb.Remove (name);  	this._x233f092c536593eb.Add (name' xd1571e08d75164b0.InnerText);  	Label_002F:  	if (enumerator.MoveNext ()) {  		XmlNode current = (XmlNode)enumerator.Current;  		name = current.Name;  		if (string.Compare (name' "item"' true) != 0) {  			goto Label_0010;  		}  		this.x850eee9de1cbe123 (current);  		if (0 == 0) {  			goto Label_002F;  		}  	}  }  finally {  	IDisposable disposable = enumerator as IDisposable;  	goto Label_0079;  	Label_006F:  	if (0 != 0) {  		goto Label_0087;  	}  	if (2 != 0) {  		goto Label_008C;  	}  	Label_0079:  	if (0 == 0) {  		goto Label_0087;  	}  	if (0 != 0) {  		goto Label_0079;  	}  	Label_007F:  	disposable.Dispose ();  	goto Label_006F;  	Label_0087:  	if (disposable != null) {  		goto Label_007F;  	}  	Label_008C:  	;  }  
Magic Number,Encog.Bot.RSS,RSS,C:\repos\neismit_emds\Nsim4\Encog\Bot\RSS\RSS.cs,x59fdc38f65d85ccf,The following statement contains a magic number: if (2 != 0) {  	goto Label_008C;  }  
Magic Number,Encog.App.Analyst.CSV.Filter,FilterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Filter\FilterCSV.cs,Process,The following statement contains a magic number: if (0 == 0) {  	if (-2147483648 == 0) {  		return;  	}  	goto Label_0023;  }  
Magic Number,Encog.App.Analyst.CSV.Filter,FilterCSV,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Filter\FilterCSV.cs,Process,The following statement contains a magic number: if (-2147483648 == 0) {  	return;  }  
Magic Number,Encog.App.Analyst.CSV.Filter,ExcludedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Filter\ExcludedField.cs,ToString,The following statement contains a magic number: while (true) {  	builder.Append (base.GetType ().Name);  	builder.Append (" fieldNumber=");  	do {  		builder.Append (this._xade3b695478596d6);  		builder.Append ("' value=");  		builder.Append (this._x5fc53c4ffd3eb8c9);  	}  	while (0 != 0);  	builder.Append ("]");  	if (8 != 0) {  		return builder.ToString ();  	}  }  
Magic Number,Encog.App.Analyst.CSV.Filter,ExcludedField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\CSV\Filter\ExcludedField.cs,ToString,The following statement contains a magic number: if (8 != 0) {  	return builder.ToString ();  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (0 == 0) {  	if ((((uint)num) + ((uint)num)) >= 0) {  		if (-2147483648 != 0) {  			if (0 == 0) {  				goto Label_07E3;  			}  			goto Label_07C1;  		}  		goto Label_0668;  	}  	goto Label_0468;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if ((((uint)num) + ((uint)num)) >= 0) {  	if (-2147483648 != 0) {  		if (0 == 0) {  			goto Label_07E3;  		}  		goto Label_07C1;  	}  	goto Label_0668;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (-2147483648 != 0) {  	if (0 == 0) {  		goto Label_07E3;  	}  	goto Label_07C1;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (3 == 0) {  	goto Label_04B0;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if ((((uint)num) & 0) == 0) {  	report.Header ("Name");  	report.Header ("Action");  	report.Header ("High");  	report.Header ("Low");  	report.EndRow ();  	using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field2;  		Label_0260:  		if (!enumerator2.MoveNext () && ((((uint)num) - ((uint)num)) >= 0)) {  			goto Label_030F;  		}  		goto Label_02B2;  		Label_0286:  		report.Cell (Format.FormatDouble (field2.NormalizedHigh' 5));  		report.Cell (Format.FormatDouble (field2.NormalizedLow' 5));  		report.EndRow ();  		goto Label_0260;  		Label_02B2:  		field2 = enumerator2.Current;  		report.BeginRow ();  		if ((((uint)num) - ((uint)num)) >= 0) {  			report.Cell (field2.Name);  			report.Cell (field2.Action.ToString ());  			goto Label_0286;  		}  	}  	goto Label_030F;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if ((((uint)num) & 0) == 0) {  	report.Header ("Name");  	report.Header ("Action");  	report.Header ("High");  	report.Header ("Low");  	report.EndRow ();  	using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  		AnalystField field2;  		Label_0260:  		if (!enumerator2.MoveNext () && ((((uint)num) - ((uint)num)) >= 0)) {  			goto Label_030F;  		}  		goto Label_02B2;  		Label_0286:  		report.Cell (Format.FormatDouble (field2.NormalizedHigh' 5));  		report.Cell (Format.FormatDouble (field2.NormalizedLow' 5));  		report.EndRow ();  		goto Label_0260;  		Label_02B2:  		field2 = enumerator2.Current;  		report.BeginRow ();  		if ((((uint)num) - ((uint)num)) >= 0) {  			report.Cell (field2.Name);  			report.Cell (field2.Action.ToString ());  			goto Label_0286;  		}  	}  	goto Label_030F;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field2;  	Label_0260:  	if (!enumerator2.MoveNext () && ((((uint)num) - ((uint)num)) >= 0)) {  		goto Label_030F;  	}  	goto Label_02B2;  	Label_0286:  	report.Cell (Format.FormatDouble (field2.NormalizedHigh' 5));  	report.Cell (Format.FormatDouble (field2.NormalizedLow' 5));  	report.EndRow ();  	goto Label_0260;  	Label_02B2:  	field2 = enumerator2.Current;  	report.BeginRow ();  	if ((((uint)num) - ((uint)num)) >= 0) {  		report.Cell (field2.Name);  		report.Cell (field2.Action.ToString ());  		goto Label_0286;  	}  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: using (IEnumerator<AnalystField> enumerator2 = this._x554f16462d8d4675.Script.Normalize.NormalizedFields.GetEnumerator ()) {  	AnalystField field2;  	Label_0260:  	if (!enumerator2.MoveNext () && ((((uint)num) - ((uint)num)) >= 0)) {  		goto Label_030F;  	}  	goto Label_02B2;  	Label_0286:  	report.Cell (Format.FormatDouble (field2.NormalizedHigh' 5));  	report.Cell (Format.FormatDouble (field2.NormalizedLow' 5));  	report.EndRow ();  	goto Label_0260;  	Label_02B2:  	field2 = enumerator2.Current;  	report.BeginRow ();  	if ((((uint)num) - ((uint)num)) >= 0) {  		report.Cell (field2.Name);  		report.Cell (field2.Action.ToString ());  		goto Label_0286;  	}  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.Cell (Format.FormatDouble (field2.NormalizedHigh' 5));  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.Cell (Format.FormatDouble (field2.NormalizedLow' 5));  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (8 != 0) {  	goto Label_0437;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (0 == 0) {  	report.BeginTableInCell (5);  	report.BeginRow ();  	report.Header ("Code");  	report.Header ("Name");  	report.Header ("Count");  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.BeginTableInCell (5);  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.Cell (Format.FormatDouble (field.Max' 5));  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.Cell (Format.FormatDouble (field.Min' 5));  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.Cell (Format.FormatDouble (field.Mean' 5));  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  	report.Cell (Format.FormatDouble (field.StandardDeviation' 5));  	if ((((uint)num) | 15) == 0) {  		goto Label_0437;  	}  	report.EndRow ();  	if ((((uint)num) | 1) == 0) {  		goto Label_051B;  	}  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if ((((uint)num) - ((uint)num)) <= uint.MaxValue) {  	report.Cell (Format.FormatDouble (field.StandardDeviation' 5));  	if ((((uint)num) | 15) == 0) {  		goto Label_0437;  	}  	report.EndRow ();  	if ((((uint)num) | 1) == 0) {  		goto Label_051B;  	}  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: report.Cell (Format.FormatDouble (field.StandardDeviation' 5));  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if ((((uint)num) | 15) == 0) {  	goto Label_0437;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (8 != 0) {  	goto Label_07D9;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (-2147483648 == 0) {  	goto Label_053D;  }  
Magic Number,Encog.App.Analyst.Report,AnalystReport,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Report\AnalystReport.cs,ProduceReport,The following statement contains a magic number: if (15 != 0) {  	goto Label_0668;  }  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,NinjaStreamWriter,The following statement contains a magic number: this.Percision = 10;  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,BeginBar,The following statement contains a magic number: if (this.x662b9cecc8fe240a == null) {  	if (0 == 0) {  		goto Label_0062;  	}  }  else if (this.x311e7a92306d7199 != null) {  	do {  		throw new EncogError ("Must call end bar");  	}  	while (15 == 0);  }  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,BeginBar,The following statement contains a magic number: if (this.x311e7a92306d7199 != null) {  	do {  		throw new EncogError ("Must call end bar");  	}  	while (15 == 0);  }  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,BeginBar,The following statement contains a magic number: do {  	throw new EncogError ("Must call end bar");  }  while (15 == 0);  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,BeginBar,The following statement contains a magic number: if (2 != 0) {  	return;  }  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,EndBar,The following statement contains a magic number: if (2 != 0) {  	goto Label_0019;  }  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,x6c260f7f6142106c,The following statement contains a magic number: if (0 == 0) {  	if (-2147483648 != 0) {  		return;  	}  	goto Label_00DB;  }  
Magic Number,Encog.App.Quant.Ninja,NinjaStreamWriter,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaStreamWriter.cs,x6c260f7f6142106c,The following statement contains a magic number: if (-2147483648 != 0) {  	return;  }  
Magic Number,Encog.App.Quant.Ninja,NinjaFileConvert,C:\repos\neismit_emds\Nsim4\Encog\App\Quant\Ninja\NinjaFileConvert.cs,Process,The following statement contains a magic number: if (4 != 0) {  	goto Label_0038;  }  
Magic Number,Encog.Mathutil.Randomize,FanInRandomizer,C:\repos\neismit_emds\Nsim4\Encog\Mathutil\Randomize\FanInRandomizer.cs,Randomize,The following statement contains a magic number: while (num2 < numArray2.Length) {  	double[] numArray = numArray2 [num2];  	for (int i = 0; i < d [0].Length; i++) {  		numArray [i] = this.x7417261f548b2c9b (d.Length);  	}  	num2++;  	if (8 == 0) {  		goto Label_002F;  	}  }  
Magic Number,Encog.Mathutil.Randomize,FanInRandomizer,C:\repos\neismit_emds\Nsim4\Encog\Mathutil\Randomize\FanInRandomizer.cs,Randomize,The following statement contains a magic number: if (8 == 0) {  	goto Label_002F;  }  
Magic Number,Encog.Neural.Networks.Training.Simple,TrainAdaline,C:\repos\neismit_emds\Nsim4\Encog\Neural\Networks\Training\Simple\TrainAdaline.cs,TrainAdaline,The following statement contains a magic number: if (network.LayerCount > 2) {  	goto Label_003B;  }  
Missing Default,Nsim,MaverickDetectorConfig,C:\repos\neismit_emds\Nsim4\Nsim\MaverickDetectorConfig.cs,x628e6c716ec340be,The following switch statement is missing a default case: switch (num) {  case 1:  	this.cbNsim2 = (RadioButton)x11d58b056c032b03;  	return;  case 2:  	this.cbNsim4 = (RadioButton)x11d58b056c032b03;  	return;  case 3:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.x06e0310f82c2e3d9);  	if (((uint)num) <= uint.MaxValue) {  		if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) <= uint.MaxValue) {  		}  		return;  	}  	break;  case 4:  	this.seFindCount = (IntegerUpDown)x11d58b056c032b03;  	return;  case 5:  	this.cbSelect = (RadioButton)x11d58b056c032b03;  	return;  case 6:  	this.cbDelete = (RadioButton)x11d58b056c032b03;  	return;  case 7:  	this.cbSendToExcel = (RadioButton)x11d58b056c032b03;  	return;  case 8:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd3b044bc7a476aeb);  	return;  case 9:  	((Button)x11d58b056c032b03).Click += new RoutedEventHandler (this.xd68518a4013c2043);  	return;  }  
Missing Default,Nsim,HiddenLayersConfig,C:\repos\neismit_emds\Nsim4\Nsim\HiddenLayersConfig.cs,x628e6c716ec340be,The following switch statement is missing a default case: switch (num) {  case 1:  	goto Label_0015;  case 2:  	goto Label_0023;  }  
Missing Default,Nsim,MainWindow,C:\repos\neismit_emds\Nsim4\Nsim\MainWindow.cs,x628e6c716ec340be,The following switch statement is missing a default case: switch (num) {  case 1:  	this.btnSaveProject = (Button)x11d58b056c032b03;  	this.btnSaveProject.Click += new RoutedEventHandler (this.xa50cb9ae13c06d8a);  	return;  case 2:  	this.btnLoadProject = (Button)x11d58b056c032b03;  	if ((((uint)xf3efd21c486a5cce) - ((uint)xf3efd21c486a5cce)) >= 0) {  		if ((((uint)num) - ((uint)num)) >= 0) {  			this.btnLoadProject.Click += new RoutedEventHandler (this.x825b45ff6339d640);  			return;  		}  		goto Label_011B;  	}  	goto Label_01FC;  case 3:  	this.btnResetProject = (Button)x11d58b056c032b03;  	this.btnResetProject.Click += new RoutedEventHandler (this.x3bfd9579f67e8a28);  	if ((((uint)xf3efd21c486a5cce) + ((uint)xf3efd21c486a5cce)) < 0) {  		break;  	}  	return;  case 4:  	this.btnTest = (Button)x11d58b056c032b03;  	if ((((uint)num) | 0x80000000) != 0) {  	}  	return;  case 5:  	this.tabItem1 = (TabItem)x11d58b056c032b03;  	return;  case 6:  	this.tabItem2 = (TabItem)x11d58b056c032b03;  	return;  case 7:  	goto Label_011B;  case 8:  	goto Label_00E8;  case 9:  	this.testDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  case 10:  	this.trainGraphTab = (TabItem)x11d58b056c032b03;  	return;  case 11:  	this.errCtl = (ErrorGraphControl)x11d58b056c032b03;  	return;  case 12:  	goto Label_0080;  case 13:  	this.checkDataEditor = (DataSetEditor)x11d58b056c032b03;  	if ((((uint)num) - ((uint)xf3efd21c486a5cce)) >= 0) {  		return;  	}  	break;  case 14:  	this.tabItem4 = (TabItem)x11d58b056c032b03;  	return;  case 15:  	this.prognozDataEditor = (DataSetEditor)x11d58b056c032b03;  	return;  }  
Missing Default,Nsim,NetStatisticViewer,C:\repos\neismit_emds\Nsim4\Nsim\NetStatisticViewer.cs,x628e6c716ec340be,The following switch statement is missing a default case: switch (xf3efd21c486a5cce) {  case 1:  	this.tbNeuronsCount = (TextBlock)x11d58b056c032b03;  	if (0x7fffffff != 0) {  		return;  	}  	break;  case 2:  	this.tbLinksCount = (TextBlock)x11d58b056c032b03;  	return;  }  
Missing Default,Encog.Neural.SOM.Training.Neighborhood,NeighborhoodRBF,C:\repos\neismit_emds\Nsim4\Encog\Neural\SOM\Training\Neighborhood\NeighborhoodRBF.cs,NeighborhoodRBF,The following switch statement is missing a default case: switch (enum2) {  case RBFEnum.Gaussian:  	this._x542ac40d5d0f20b7 = new GaussianFunction (2);  	break;  case RBFEnum.Multiquadric:  	this._x542ac40d5d0f20b7 = new MultiquadricFunction (2);  	break;  case RBFEnum.InverseMultiquadric:  	this._x542ac40d5d0f20b7 = new InverseMultiquadricFunction (2);  	break;  case RBFEnum.MexicanHat:  	this._x542ac40d5d0f20b7 = new MexicanHatFunction (2);  	break;  }  
Missing Default,Encog.Util.Time,xfa6e3ed04cba2b4d,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\xfa6e3ed04cba2b4d.cs,xeeb06d6ba66e71e9,The following switch statement is missing a default case: switch (x1c40252c1b8530fe) {  case TimeUnit.Seconds:  	return this.x7a6b33543832adcd ();  case TimeUnit.Minutes:  	return this.xab974cfe9f881e8f ();  case TimeUnit.Hours:  	return this.x940a8f756e4742a5 ();  case TimeUnit.Days:  	return this.x76ccac0e5618a6e2 ();  case TimeUnit.Weeks:  	return this.xed91ebbb4d1afad3 ();  case TimeUnit.Fortnights:  	return this.xc07d29bd1d813d76 ();  case TimeUnit.Months:  	return this.x898ebed938f437e5 ();  case TimeUnit.Years:  	return this.x869f1c53829f68a4 ();  case TimeUnit.Scores:  	return this.x0905452febc1cbdf ();  case TimeUnit.Centuries:  	return this.x4aff25a89461a238 ();  case TimeUnit.Millennia:  	return this.x28aeb15d96190c26 ();  case TimeUnit.Ticks:  	return this.x52032ef7ed3b457a ();  }  
Missing Default,Encog.Util.Time,x3dee5ff19639f5c6,C:\repos\neismit_emds\Nsim4\Encog\Util\Time\x3dee5ff19639f5c6.cs,xa7b27eb509663b32,The following switch statement is missing a default case: switch (x1c40252c1b8530fe) {  case TimeUnit.Seconds:  	return "second";  case TimeUnit.Minutes:  	return "minute";  case TimeUnit.Hours:  	return "hour";  case TimeUnit.Days:  	return "day";  case TimeUnit.Weeks:  	return "week";  case TimeUnit.Fortnights:  	return "fortnight";  case TimeUnit.Months:  	return "month";  case TimeUnit.Years:  	return "year";  case TimeUnit.Decades:  	return "decade";  case TimeUnit.Scores:  	return "score";  case TimeUnit.Centuries:  	return "century";  case TimeUnit.Millennia:  	return "millenium";  }  
Missing Default,Encog.ML.SVM,SupportVectorMachine,C:\repos\neismit_emds\Nsim4\Encog\ML\SVM\SupportVectorMachine.cs,CalculateError,The following switch statement is missing a default case: switch (this.SVMType) {  case Encog.ML.SVM.SVMType.SupportVectorClassification:  case Encog.ML.SVM.SVMType.NewSupportVectorClassification:  case Encog.ML.SVM.SVMType.SupportVectorOneClass:  	return EncogUtility.CalculateClassificationError (this' data);  case Encog.ML.SVM.SVMType.EpsilonSupportVectorRegression:  case Encog.ML.SVM.SVMType.NewSupportVectorRegression:  	return EncogUtility.CalculateRegressionError (this' data);  }  
Missing Default,Encog.MathUtil.LIBSVM,xf094e3229d63c9be,C:\repos\neismit_emds\Nsim4\Encog\MathUtil\LIBSVM\xf094e3229d63c9be.cs,x1e221c4999144ac5,The following switch statement is missing a default case: switch (this.xbcd9612004129925) {  case 0:  	return x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]);  case 1:  	return Math.Pow ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90' this.x83735b10b6a3d76d);  case 2:  	return Math.Exp (-this.xc7c4e9c099884228 * ((this.x4f9e236643454e9f [x7b28e8a789372508] + this.x4f9e236643454e9f [x1148d0e8cc982c04]) - (2.0 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04]))));  case 3:  	return xcb156489dc62ed23 ((this.xc7c4e9c099884228 * x99240096a9e3842c (this.x08db3aeabb253cb1 [x7b28e8a789372508]' this.x08db3aeabb253cb1 [x1148d0e8cc982c04])) + this.x987b3666f8a37f90);  }  
Missing Default,Encog.Plugin.SystemPlugin,SystemLoggingPlugin,C:\repos\neismit_emds\Nsim4\Encog\Plugin\SystemPlugin\SystemLoggingPlugin.cs,Log,The following switch statement is missing a default case: switch (num) {  case 0:  	builder.Append ("DEBUG");  	if ((((uint)level) + ((uint)num)) > uint.MaxValue) {  		goto Label_01D0;  	}  	if ((((uint)level) + ((uint)level)) > uint.MaxValue) {  		goto Label_0130;  	}  	goto Label_00B2;  case 1:  	goto Label_0130;  case 2:  	builder.Append ("ERROR");  	goto Label_00B2;  case 3:  	builder.Append ("CRITICAL");  	goto Label_00B2;  }  
Missing Default,Encog.Neural.Flat.Train.Prop,TrainFlatNetworkResilient,C:\repos\neismit_emds\Nsim4\Encog\Neural\Flat\Train\Prop\TrainFlatNetworkResilient.cs,UpdateWeight,The following switch statement is missing a default case: switch (this.RType) {  case RPROPType.RPROPp:  	num = this.UpdateWeightPlus (gradients' lastGradient' index);  	goto Label_0041;  case RPROPType.RPROPm:  	goto Label_0090;  case RPROPType.iRPROPp:  	num = this.UpdateiWeightPlus (gradients' lastGradient' index);  	goto Label_0041;  case RPROPType.iRPROPm:  	num = this.UpdateiWeightMinus (gradients' lastGradient' index);  	goto Label_0041;  }  
Missing Default,Encog.App.Analyst.Script.Normalize,AnalystField,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Normalize\AnalystField.cs,Encode,The following switch statement is missing a default case: switch (this._xab8fe3cd8c5556fb) {  case NormalizationAction.OneOf:  	return this.xd8118cff55f2b045 (classNumber);  case NormalizationAction.Equilateral:  	return this.EncodeEquilateral (classNumber);  case NormalizationAction.SingleField:  	return this.xc349230af2175aed (classNumber);  }  
Missing Default,Encog.Util.Arrayutil,NormalizedField,C:\repos\neismit_emds\Nsim4\Encog\Util\Arrayutil\NormalizedField.cs,EncodeHeaders,The following switch statement is missing a default case: switch (this._xab8fe3cd8c5556fb) {  case NormalizationAction.OneOf:  	goto Label_008A;  case NormalizationAction.Equilateral:  	num = 0;  	goto Label_00B3;  case NormalizationAction.SingleField:  	BasicFile.AppendSeparator (line' CSVFormat.EgFormat);  	line.Append ('"');  	line.Append (this._xc15bd84e01929885);  	line.Append ('"');  	goto Label_0167;  }  
Missing Default,Encog.App.Analyst.Script.Prop,ScriptProperties,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\ScriptProperties.cs,SetProperty,The following switch statement is missing a default case: switch (v) {  case AnalystGoal.Regression:  	this._x4a3f0a05c02f235f [name] = "regression";  	return;  case AnalystGoal.Classification:  	this._x4a3f0a05c02f235f [name] = "classification";  	return;  }  
Missing Default,Encog.App.Analyst.Script.Prop,PropertyEntry,C:\repos\neismit_emds\Nsim4\Encog\App\Analyst\Script\Prop\PropertyEntry.cs,Validate,The following switch statement is missing a default case: switch (entryType) {  case PropertyType.TypeBoolean:  	goto Label_0037;  case PropertyType.TypeString:  case PropertyType.TypeListString:  	return;  case PropertyType.TypeInteger:  	goto Label_0080;  case PropertyType.TypeDouble:  	goto Label_010B;  case PropertyType.TypeFormat:  	goto Label_001B;  }  
Missing Default,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,InnovationTypeToString,The following switch statement is missing a default case: switch (t) {  case NEATInnovationType.NewLink:  	return "l";  case NEATInnovationType.NewNeuron:  	return "n";  }  
Missing Default,Encog.Neural.Neat,PersistNEATPopulation,C:\repos\neismit_emds\Nsim4\Encog\Neural\Neat\PersistNEATPopulation.cs,NeuronTypeToString,The following switch statement is missing a default case: switch (type) {  case NEATNeuronType.Bias:  	return "b";  case NEATNeuronType.Hidden:  	return "h";  case NEATNeuronType.Input:  	goto Label_0005;  case NEATNeuronType.None:  	return "n";  case NEATNeuronType.Output:  	return "o";  }  
Missing Default,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,NeuronType2String,The following switch statement is missing a default case: switch (t) {  case NEATNeuronType.Bias:  	return "B";  case NEATNeuronType.Hidden:  	return "H";  case NEATNeuronType.Input:  	return "I";  case NEATNeuronType.None:  	return "N";  case NEATNeuronType.Output:  	return "O";  }  
Missing Default,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,String2NeuronType,The following switch statement is missing a default case: switch (num) {  case 110:  	return NEATNeuronType.None;  case 0x6f:  	return NEATNeuronType.Output;  }  
Missing Default,Encog.Neural.NEAT,NEATNeuron,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\NEATNeuron.cs,ToString,The following switch statement is missing a default case: switch (this._neuronType) {  case NEATNeuronType.Bias:  	builder.Append ("B");  	goto Label_0025;  case NEATNeuronType.Hidden:  	builder.Append ("H");  	goto Label_0025;  case NEATNeuronType.Input:  	builder.Append ("I");  	if (0 == 0) {  		goto Label_0025;  	}  	goto Label_006A;  case NEATNeuronType.None:  	goto Label_0019;  case NEATNeuronType.Output:  	builder.Append ("O");  	goto Label_0025;  }  
Missing Default,Encog.Neural.NEAT.Training,NEATInnovation,C:\repos\neismit_emds\Nsim4\Encog\Neural\NEAT\Training\NEATInnovation.cs,ToString,The following switch statement is missing a default case: switch (innovationType) {  case NEATInnovationType.NewLink:  	builder.Append ("link");  	break;  case NEATInnovationType.NewNeuron:  	builder.Append ("neuron");  	break;  }  
Missing Default,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,KernelToString,The following switch statement is missing a default case: switch (k) {  case PNNKernelType.Gaussian:  	return "gaussian";  case PNNKernelType.Reciprocal:  	return "reciprocal";  }  
Missing Default,Encog.Neural.Pnn,PersistBasicPNN,C:\repos\neismit_emds\Nsim4\Encog\Neural\Pnn\PersistBasicPNN.cs,OutputModeToString,The following switch statement is missing a default case: switch (mode) {  case PNNOutputMode.Unsupervised:  	return "unsupervised";  case PNNOutputMode.Regression:  	return "regression";  case PNNOutputMode.Classification:  	return "classification";  }  
