Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.AspNetCore.Builder.Extensions,UsePathBaseExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UsePathBaseExtensionsTests.cs,RequestPathBaseContainingPathBase_IsSplit,The method has 5 parameters. Parameters: registeredPathBase' pathBase' requestPath' expectedPathBase' expectedPath
Long Parameter List,Microsoft.AspNetCore.Builder.Extensions,UsePathBaseExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UsePathBaseExtensionsTests.cs,RequestPathBaseNotContainingPathBase_IsNotSplit,The method has 5 parameters. Parameters: registeredPathBase' pathBase' requestPath' expectedPathBase' expectedPath
Long Parameter List,Microsoft.AspNetCore.Builder.Extensions,UsePathBaseExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UsePathBaseExtensionsTests.cs,PathBaseNeverEndsWithSlash,The method has 5 parameters. Parameters: registeredPathBase' pathBase' requestPath' expectedPathBase' expectedPath
Long Parameter List,Microsoft.AspNetCore.Builder.Extensions,UsePathBaseExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UsePathBaseExtensionsTests.cs,PathBaseAndPathPreserveRequestCasing,The method has 5 parameters. Parameters: registeredPathBase' pathBase' requestPath' expectedPathBase' expectedPath
Long Parameter List,Microsoft.AspNetCore.Builder.Extensions,UsePathBaseExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UsePathBaseExtensionsTests.cs,PathBaseCanHaveUnicodeCharacters,The method has 5 parameters. Parameters: registeredPathBase' pathBase' requestPath' expectedPathBase' expectedPath
Long Parameter List,Microsoft.AspNetCore.Builder.Extensions,UsePathBaseExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UsePathBaseExtensionsTests.cs,TestPathBase,The method has 5 parameters. Parameters: registeredPathBase' pathBase' requestPath' expectedPathBase' expectedPath
Long Statement,Microsoft.AspNetCore.Http,HostStringTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\HostStringTest.cs,CtorThrows_IfPortIsNotGreaterThanZero,The length of the statement  "            ExceptionAssert.ThrowsArgumentOutOfRange(() => new HostString("localhost"' port)' "port"' "The value must be greater than zero."); " is 130.
Long Statement,Microsoft.AspNetCore.Http,UseMiddlewareTest,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UseMiddlewareTest.cs,UseMiddlewareWithIMiddlewareThrowsIfParametersSpecified,The length of the statement  "            Assert.Equal(Resources.FormatException_UseMiddlewareExplicitArgumentsNotSupported(typeof(IMiddleware))' exception.Message); " is 123.
Long Statement,Microsoft.AspNetCore.Http,UseMiddlewareTest,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\UseMiddlewareTest.cs,UseMiddlewareWithIMiddlewareThrowsIfNoIMiddlewareFactoryRegistered,The length of the statement  "            Assert.Equal(Resources.FormatException_UseMiddlewareNoMiddlewareFactory(typeof(IMiddlewareFactory))' exception.Message); " is 120.
Long Statement,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,MatchPathWithTrailingSlashThrowsException,The length of the statement  "            Assert.Throws<ArgumentException>(() => new ApplicationBuilder(serviceProvider: null).Map(matchPath' map => { }).Build()); " is 121.
Long Statement,Microsoft.AspNetCore.Http.Abstractions,QueryStringTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\QueryStringTests.cs,CtorThrows_IfQueryDoesNotHaveLeadingQuestionMark,The length of the statement  "            ExceptionAssert.ThrowsArgument(() => new QueryString("hello")' "value"' "The leading '?' must be included for a non-empty query."); " is 131.
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_Enumeration_ContainsValues,The following statement contains a magic number: var metadata = new EndpointMetadataCollection(new List<object>              {                  1'                  2'                  3'              });
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_Enumeration_ContainsValues,The following statement contains a magic number: var metadata = new EndpointMetadataCollection(new List<object>              {                  1'                  2'                  3'              });
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_Enumeration_ContainsValues,The following statement contains a magic number: Assert.Equal(3' metadata.Count);
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_Enumeration_ContainsValues,The following statement contains a magic number: Assert.Collection(metadata'                  value => Assert.Equal(1' value)'                  value => Assert.Equal(2' value)'                  value => Assert.Equal(3' value));
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_Enumeration_ContainsValues,The following statement contains a magic number: Assert.Collection(metadata'                  value => Assert.Equal(1' value)'                  value => Assert.Equal(2' value)'                  value => Assert.Equal(3' value));
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_ParamsArray_ContainsValues,The following statement contains a magic number: var metadata = new EndpointMetadataCollection(1' 2' 3);
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_ParamsArray_ContainsValues,The following statement contains a magic number: var metadata = new EndpointMetadataCollection(1' 2' 3);
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_ParamsArray_ContainsValues,The following statement contains a magic number: Assert.Equal(3' metadata.Count);
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_ParamsArray_ContainsValues,The following statement contains a magic number: Assert.Collection(metadata'                  value => Assert.Equal(1' value)'                  value => Assert.Equal(2' value)'                  value => Assert.Equal(3' value));
Magic Number,Microsoft.AspNetCore.Routing,EndpointMetadataCollectionTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\EndpointMetadataCollectionTests.cs,Constructor_ParamsArray_ContainsValues,The following statement contains a magic number: Assert.Collection(metadata'                  value => Assert.Equal(1' value)'                  value => Assert.Equal(2' value)'                  value => Assert.Equal(3' value));
Magic Number,Microsoft.AspNetCore.Http,HttpResponseWritingExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\HttpResponseWritingExtensionsTests.cs,WritingText_WriteText,The following statement contains a magic number: Assert.Equal(11' context.Response.Body.Length);
Magic Number,Microsoft.AspNetCore.Http,HttpResponseWritingExtensionsTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\HttpResponseWritingExtensionsTests.cs,WritingText_MultipleWrites,The following statement contains a magic number: Assert.Equal(22' context.Response.Body.Length);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,Success,The following statement contains a magic number: context.Response.StatusCode = 200;
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,PathMatchFunc_BranchTaken,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,PathMatchAction_BranchTaken,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,PathMismatchFunc_PassedThrough,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,PathMismatchAction_PassedThrough,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,ChainedRoutes_Success,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,ChainedRoutes_Success,The following statement contains a magic number: Assert.Equal(404' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,ChainedRoutes_Success,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPathMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPathMiddlewareTests.cs,ChainedRoutes_Success,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPredicateMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPredicateMiddlewareTests.cs,Success,The following statement contains a magic number: context.Response.StatusCode = 200;
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPredicateMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPredicateMiddlewareTests.cs,PredicateTrue_BranchTaken,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPredicateMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPredicateMiddlewareTests.cs,PredicateTrueAction_BranchTaken,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPredicateMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPredicateMiddlewareTests.cs,PredicateFalseAction_PassThrough,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Builder.Extensions,MapPredicateMiddlewareTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\MapPredicateMiddlewareTests.cs,ChainedPredicates_Success,The following statement contains a magic number: Assert.Equal(200' context.Response.StatusCode);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromIEnumerableKeyValuePair_CopiesValues,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp =>                  {                      Assert.Equal("Address"' kvp.Key);                      var address = Assert.IsType<Address>(kvp.Value);                      Assert.Equal("Redmond"' address.City);                      Assert.Equal("WA"' address.State);                  }'                  kvp => { Assert.Equal("Age"' kvp.Key); Assert.Equal(30' kvp.Value); }'                  kvp => { Assert.Equal("Name"' kvp.Key); Assert.Equal("James"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromAnonymousType,The following statement contains a magic number: var obj = new { cool = "beans"' awesome = 123 };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromAnonymousType,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("awesome"' kvp.Key); Assert.Equal(123' kvp.Value); }'                  kvp => { Assert.Equal("cool"' kvp.Key); Assert.Equal("beans"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromRegularType,The following statement contains a magic number: var obj = new RegularType() { CoolnessFactor = 73 };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromRegularType,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp =>                  {                      Assert.Equal("CoolnessFactor"' kvp.Key);                      Assert.Equal(73' kvp.Value);                  }'                  kvp =>                  {                      Assert.Equal("IsAwesome"' kvp.Key);                      var value = Assert.IsType<bool>(kvp.Value);                      Assert.False(value);                  });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromRegularType_PublicOnly,The following statement contains a magic number: var obj = new Visibility() { IsPublic = true' ItsInternalDealWithIt = 5 };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromRegularType_WithHiddenProperty,The following statement contains a magic number: var obj = new DerivedHiddenProperty() { DerivedProperty = 5 };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CreateFromObject_CopiesPropertiesFromRegularType_WithHiddenProperty,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("DerivedProperty"' kvp.Key); Assert.Equal(5' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,IndexGet_PropertyStorage_NoMatch_ReturnsNull,The following statement contains a magic number: var dict = new RouteValueDictionary(new { age = 30 });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,IndexGet_ArrayStorage_NoMatch_ReturnsNull,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "age"' 30 }'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,IndexSet_PropertyStorage_NoMatch_AddsValue,The following statement contains a magic number: var dict = new RouteValueDictionary(new { age = 30 });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,IndexSet_PropertyStorage_NoMatch_AddsValue,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("age"' kvp.Key); Assert.Equal(30' kvp.Value); }'                  kvp => { Assert.Equal("key"' kvp.Key); Assert.Equal("value"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,IndexSet_ListStorage_NoMatch_AddsValue,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "age"' 30 }'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,IndexSet_ListStorage_NoMatch_AddsValue,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("age"' kvp.Key); Assert.Equal(30' kvp.Value); }'                  kvp => { Assert.Equal("key"' kvp.Key); Assert.Equal("value"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_PropertyStorage,The following statement contains a magic number: var dict = new RouteValueDictionary(new { age = 30 });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_PropertyStorage,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("age"' kvp.Key); Assert.Equal(30' kvp.Value); }'                  kvp => { Assert.Equal("key"' kvp.Key); Assert.Equal("value"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_PropertyStorage,The following statement contains a magic number: Assert.Collection(                  dict._arrayStorage'                  kvp => Assert.Equal(new KeyValuePair<string' object>("age"' 30)' kvp)'                  kvp => Assert.Equal(new KeyValuePair<string' object>("key"' "value")' kvp)'                  kvp => Assert.Equal(default' kvp)'                  kvp => Assert.Equal(default' kvp));
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_ListStorage,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "age"' 30 }'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_ListStorage,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("age"' kvp.Key); Assert.Equal(30' kvp.Value); }'                  kvp => { Assert.Equal("key"' kvp.Key); Assert.Equal("value"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_KeyValuePair,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "age"' 30 }'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Add_KeyValuePair,The following statement contains a magic number: Assert.Collection(                  dict.OrderBy(kvp => kvp.Key)'                  kvp => { Assert.Equal("age"' kvp.Key); Assert.Equal(30' kvp.Value); }'                  kvp => { Assert.Equal("key"' kvp.Key); Assert.Equal("value"' kvp.Value); });
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,CopyTo,The following statement contains a magic number: var array = new KeyValuePair<string' object>[2];
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Remove_KeyAndOutValue_ListStorage_KeyExists_First,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "key"' value }'                  { "other"' 5 }'                  { "dotnet"' "rocks" }              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Remove_KeyAndOutValue_ListStorage_KeyExists_First,The following statement contains a magic number: Assert.Equal(2' dict.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Remove_KeyAndOutValue_ListStorage_KeyExists_Middle,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "other"' 5 }'                  { "key"' value }'                  { "dotnet"' "rocks" }              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Remove_KeyAndOutValue_ListStorage_KeyExists_Middle,The following statement contains a magic number: Assert.Equal(2' dict.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Remove_KeyAndOutValue_ListStorage_KeyExists_Last,The following statement contains a magic number: var dict = new RouteValueDictionary()              {                  { "other"' 5 }'                  { "dotnet"' "rocks" }'                  { "key"' value }              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,Remove_KeyAndOutValue_ListStorage_KeyExists_Last,The following statement contains a magic number: Assert.Equal(2' dict.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,ListStorage_DynamicallyAdjustsCapacity,The following statement contains a magic number: Assert.Equal(4' storage.Length);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,ListStorage_DynamicallyAdjustsCapacity,The following statement contains a magic number: Assert.Equal(8' storage.Length);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,ListStorage_RemoveAt_RearrangesInnerArray,The following statement contains a magic number: Assert.Equal(3' dict.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,ListStorage_RemoveAt_RearrangesInnerArray,The following statement contains a magic number: Assert.Equal(2' dict.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_TakesOwnershipOfArray,The following statement contains a magic number: var array = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>("a"' 0)'                  new KeyValuePair<string' object>("b"' 1)'                  new KeyValuePair<string' object>("c"' 2)'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_TakesOwnershipOfArray,The following statement contains a magic number: array[0] = new KeyValuePair<string' object>("aa"' 10);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_TakesOwnershipOfArray,The following statement contains a magic number: Assert.Equal(3' dictionary.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_TakesOwnershipOfArray,The following statement contains a magic number: Assert.Equal(10' dictionary["aa"]);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_RemovesGapsInArray,The following statement contains a magic number: var array = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>(null' null)'                  new KeyValuePair<string' object>("a"' 0)'                  new KeyValuePair<string' object>(null' null)'                  new KeyValuePair<string' object>(null' null)'                  new KeyValuePair<string' object>("b"' 1)'                  new KeyValuePair<string' object>("c"' 2)'                  new KeyValuePair<string' object>("d"' 3)'                  new KeyValuePair<string' object>(null' null)'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_RemovesGapsInArray,The following statement contains a magic number: var array = new KeyValuePair<string' object>[]              {                  new KeyValuePair<string' object>(null' null)'                  new KeyValuePair<string' object>("a"' 0)'                  new KeyValuePair<string' object>(null' null)'                  new KeyValuePair<string' object>(null' null)'                  new KeyValuePair<string' object>("b"' 1)'                  new KeyValuePair<string' object>("c"' 2)'                  new KeyValuePair<string' object>("d"' 3)'                  new KeyValuePair<string' object>(null' null)'              };
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_RemovesGapsInArray,The following statement contains a magic number: Assert.Equal(4' dictionary.Count);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_RemovesGapsInArray,The following statement contains a magic number: Assert.Equal(                  new KeyValuePair<string' object>[]                  {                      new KeyValuePair<string' object>("d"' 3)'                      new KeyValuePair<string' object>("a"' 0)'                      new KeyValuePair<string' object>("c"' 2)'                      new KeyValuePair<string' object>("b"' 1)'                      new KeyValuePair<string' object>(null' null)'                      new KeyValuePair<string' object>(null' null)'                      new KeyValuePair<string' object>(null' null)'                      new KeyValuePair<string' object>(null' null)'                  }'                  array);
Magic Number,Microsoft.AspNetCore.Routing.Tests,RouteValueDictionaryTests,D:\research\architectureSmells\repos\aspnet_HttpAbstractions\test\Microsoft.AspNetCore.Http.Abstractions.Tests\RouteValueDictionaryTests.cs,FromArray_RemovesGapsInArray,The following statement contains a magic number: Assert.Equal(                  new KeyValuePair<string' object>[]                  {                      new KeyValuePair<string' object>("d"' 3)'                      new KeyValuePair<string' object>("a"' 0)'                      new KeyValuePair<string' object>("c"' 2)'                      new KeyValuePair<string' object>("b"' 1)'                      new KeyValuePair<string' object>(null' null)'                      new KeyValuePair<string' object>(null' null)'                      new KeyValuePair<string' object>(null' null)'                      new KeyValuePair<string' object>(null' null)'                  }'                  array);
