Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PolyMYR.Common.Extensions,JsonExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\JsonExtensions.cs,PrettifyJson,Cyclomatic complexity of the method is 32
Complex Method,PolyMYR.Common.Logging,Logging,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Logging\Logging.cs,Init,Cyclomatic complexity of the method is 10
Long Parameter List,PolyMYR.Daemon,DaemonClient,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Daemon\DaemonClient.cs,Move,The method has 5 parameters.
Long Parameter List,PolyMYR.Daemon,DaemonClient,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Daemon\DaemonClient.cs,SendFrom,The method has 6 parameters.
Long Statement,PolyMYR.Common.Console,ConsoleWindow,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Console\ConsoleWindow.cs,PrintLicense,The length of the statement  "	System.Console.WriteLine ("This is free software' and you are welcome to redistribute it under certain conditions; see the LICENSE file for details."); " is 151.
Long Statement,PolyMYR.Common.Helpers.Validation,Enforce,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Helpers\Validation\Enforce.cs,ArgumentNotNull,The length of the statement  "		throw new ArgumentNullException (string.Format ("{0} cannot be passed as null. Check the DI configuration or consuming class."' name)); " is 135.
Long Statement,PolyMYR.Common.Helpers.Validation,Enforce,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Helpers\Validation\Enforce.cs,HasItems,The length of the statement  "		throw new ArgumentException (string.Format ("{0} does not contain elements and elements are required. Check the consuming class."' name)); " is 138.
Magic Number,PolyMYR.Common.Commands,CommandGroup,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Commands\CommandGroup.cs,Fallback,The following statement contains a magic number: return output.Substring (0' output.Length - 2) + ".";  
Magic Number,PolyMYR.Common.Extensions,EnumerableExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\EnumerableExtensions.cs,Dump,The following statement contains a magic number: foreach (byte value in collection) {  	if (i > 0 && ((i % 16) == 0)) {  		output.Append (hex);  		output.Append (' ');  		output.Append (text);  		output.Append (Environment.NewLine);  		hex.Clear ();  		text.Clear ();  	}  	hex.Append (value.ToString ("X2"));  	hex.Append (' ');  	text.Append (string.Format ("{0}"' (char.IsWhiteSpace ((char)value) && (char)value != ' ') ? '.' : (char)value));  	// prettify text  	++i;  }  
Magic Number,PolyMYR.Common.Extensions,EnumerableExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\EnumerableExtensions.cs,Dump,The following statement contains a magic number: if (i > 0 && ((i % 16) == 0)) {  	output.Append (hex);  	output.Append (' ');  	output.Append (text);  	output.Append (Environment.NewLine);  	hex.Clear ();  	text.Clear ();  }  
Magic Number,PolyMYR.Common.Extensions,EnumerableExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\EnumerableExtensions.cs,Dump,The following statement contains a magic number: if (text.Length < 16) {  	hexstring = hexstring.PadRight (48);  	// pad the hex representation in-case it's smaller than a regular 16 value line.  }  
Magic Number,PolyMYR.Common.Extensions,EnumerableExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\EnumerableExtensions.cs,Dump,The following statement contains a magic number: if (text.Length < 16) {  	hexstring = hexstring.PadRight (48);  	// pad the hex representation in-case it's smaller than a regular 16 value line.  }  
Magic Number,PolyMYR.Common.Extensions,EnumerableExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\EnumerableExtensions.cs,Dump,The following statement contains a magic number: hexstring = hexstring.PadRight (48);  
Magic Number,PolyMYR.Common.Extensions,StringExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\StringExtensions.cs,HexToByteArray,The following statement contains a magic number: for (int i = 0; i < res.Length; ++i) {  	string temp = String.Concat (str [i * 2]' str [i * 2 + 1]);  	res [i] = Convert.ToByte (temp' 16);  }  
Magic Number,PolyMYR.Common.Extensions,StringExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\StringExtensions.cs,HexToByteArray,The following statement contains a magic number: for (int i = 0; i < res.Length; ++i) {  	string temp = String.Concat (str [i * 2]' str [i * 2 + 1]);  	res [i] = Convert.ToByte (temp' 16);  }  
Magic Number,PolyMYR.Common.Extensions,StringExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\StringExtensions.cs,HexToByteArray,The following statement contains a magic number: for (int i = 0; i < res.Length; ++i) {  	string temp = String.Concat (str [i * 2]' str [i * 2 + 1]);  	res [i] = Convert.ToByte (temp' 16);  }  
Magic Number,PolyMYR.Common.Extensions,StringExtensions,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Extensions\StringExtensions.cs,HexToByteArray,The following statement contains a magic number: res [i] = Convert.ToByte (temp' 16);  
Magic Number,PolyMYR.Common.Helpers.Time,TimeHelpers,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Helpers\Time\TimeHelpers.cs,NowInUnixTime,The following statement contains a magic number: return (Int32)(DateTime.UtcNow.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  
Magic Number,PolyMYR.Common.Helpers.Validation,Enforce,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Helpers\Validation\Enforce.cs,GetName,The following statement contains a magic number: if (methodBody != null) {  	var il = methodBody.GetILAsByteArray ();  	// bytes 2-6 represent the field handle  	var fieldHandle = BitConverter.ToInt32 (il' 2);  	// resolve the handle  	var field = argument.Target.GetType ().Module.ResolveField (fieldHandle);  	return field.Name;  }  
Magic Number,PolyMYR.Daemon,DaemonBase,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Daemon\DaemonBase.cs,MakeHttpRequest,The following statement contains a magic number: webRequest.Timeout = 1000;  
Missing Default,PolyMYR.Common.Logging,Logging,C:\repos\CryptoRepairCrew_MYRClient\PolyMYR\PolyMYR\Common\Logging\Logging.cs,Init,The following switch statement is missing a default case: switch ((string)target.type) {  case "console":  	AddConsoleLog (loggerConfig' target);  	break;  case "file":  	AddLogFile (loggerConfig' target);  	break;  }  
