Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,ValidateEntity,Cyclomatic complexity of the method is 11
Long Parameter List,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,OnFlushDirty,The method has 6 parameters. Parameters: entity' id' currentState' previousState' propertyNames' types
Long Parameter List,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,OnSave,The method has 5 parameters. Parameters: entity' id' state' propertyNames' types
Long Parameter List,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,OnDelete,The method has 5 parameters. Parameters: entity' id' state' propertyNames' types
Long Parameter List,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,ValidateEntity,The method has 7 parameters. Parameters: o' id' persistenceOperation' properties' types' currentState' previousState
Long Parameter List,NHibernate.DataAnnotations.Core,EntityStateFrame,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\Core\EntityStateFrame.cs,EntityStateFrame,The method has 7 parameters. Parameters: entity' id' persistenceOperation' propertyNames' propertyTypes' currentState' previousState
Long Statement,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,GetValidationResults,The length of the statement  "                .ToDictionary(o => o' o => new ReadOnlyCollection<ValidationResult>(new List<ValidationResult>(_validationResults[o]))); " is 120.
Long Statement,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,OnFlushDirty,The length of the statement  "            _entityStateQueue.Enqueue(new EntityStateFrame(entity' id' PersistenceOperationEnum.Updating' propertyNames' types' currentState' previousState)); " is 146.
Long Statement,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,OnSave,The length of the statement  "            _entityStateQueue.Enqueue(new EntityStateFrame(entity' id' PersistenceOperationEnum.Adding' propertyNames' types' state' null)); " is 128.
Long Statement,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,OnDelete,The length of the statement  "            _entityStateQueue.Enqueue(new EntityStateFrame(entity' id' PersistenceOperationEnum.Removing' propertyNames' types' state' null)); " is 130.
Long Statement,NHibernate.DataAnnotations,ValidationInterceptor,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\ValidationInterceptor.cs,PostFlush,The length of the statement  "                    ValidateEntity(entityStateFrame.Entity' entityStateFrame.Id' entityStateFrame.PersistenceOperation' entityStateFrame.PropertyNames' entityStateFrame.PropertyTypes' entityStateFrame.CurrentState' entityStateFrame.PreviousState); " is 227.
Missing Default,NHibernate.DataAnnotations.Core,ExpressionHelper,C:\repos\ranzlee_NHibernate.Extensions\NHibernate.DataAnnotations\Core\ExpressionHelper.cs,GetMemberInfoFromExpression,The following switch statement is missing a default case: switch (lambda.Body.NodeType)              {                  case ExpressionType.Convert:                      memberExpr = ((UnaryExpression)lambda.Body).Operand as MemberExpression;                      break;                  case ExpressionType.MemberAccess:                      memberExpr = lambda.Body as MemberExpression;                      break;              }
