Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Robot,GrblStatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\GrblCommandGenerator.cs,ProcessResponse,Cyclomatic complexity of the method is 11
Complex Method,Robot,SerialPacket,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessByte,Cyclomatic complexity of the method is 16
Complex Method,Robot,Robot,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\Robot.cs,GetNextCommand,Cyclomatic complexity of the method is 12
Long Statement,Robot,GrblMoveCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\GrblCommandGenerator.cs,GenerateCommand,The length of the statement  "                String s = String.Format("F{0:F3}\r\nG1 X{1:F4} Y{2:F4} Z{3:F4}\r\n?"' target_mm_per_minute' target_mm.X' target_mm.Y' target_mm.Z); " is 132.
Long Statement,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The length of the statement  "                //Console.WriteLine("{0}' {1}' {2}' {3}' l = {4}' paused = {5}' pausing = {6}' resuming = {7}"' time' currentPosition.X' currentPosition.Y' currentPosition.Z' locations' paused' pausing' resuming); " is 197.
Long Statement,Robot,RobotDetectionCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\Robot.cs,DumpData,The length of the statement  "                var retString = "{ " + string.Join(" "' accumulator.Select(b => string.Format("{0:X2}"' b)).ToArray()) + " } " + s.TrimEnd(new char [] {'\r'' '\n'}); " is 149.
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,BytesFromShort,The following statement contains a magic number: byte[] bytes = new byte[2];
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,BytesFromShort,The following statement contains a magic number: bytes[i] = (byte)((s >> (i * 8)) & 0xFF);
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,BytesFromShort,The following statement contains a magic number: i < 2
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,BytesFromInt,The following statement contains a magic number: byte[] bytes = new byte[4];
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,BytesFromInt,The following statement contains a magic number: bytes[i] = (byte)((value >> (i * 8)) & 0xFF);
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,BytesFromInt,The following statement contains a magic number: i < 4
Magic Number,Robot,DataConverter,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\DataConverter.cs,IntFromBytes,The following statement contains a magic number: shifter += 8;
Magic Number,Robot,GrblCommandGenerator,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\GrblCommandGenerator.cs,ProcessGrblByte,The following statement contains a magic number: var unbuffered_command = response.Substring(start' response.Length - (start + 2));
Magic Number,Robot,GrblMoveCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\GrblCommandGenerator.cs,GrblMoveCommand,The following statement contains a magic number: target_mm_per_minute = inches_per_second * 25.4f * 60.0f;
Magic Number,Robot,GrblMoveCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\GrblCommandGenerator.cs,GrblMoveCommand,The following statement contains a magic number: target_mm_per_minute = inches_per_second * 25.4f * 60.0f;
Magic Number,Robot,GrblMoveCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\GrblCommandGenerator.cs,GenerateCommand,The following statement contains a magic number: var target_mm = toLocation * 25.4f;
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: time = ((float)DataConverter.IntFromBytes(data_list.GetRange(15' 4))) / 10.0f;
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: time = ((float)DataConverter.IntFromBytes(data_list.GetRange(15' 4))) / 10.0f;
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: time = ((float)DataConverter.IntFromBytes(data_list.GetRange(15' 4))) / 10.0f;
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: currentPosition = new Vector3(                      DataConverter.FloatFromBytes(data_list.GetRange(1' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(5' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(9' 4)));
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: currentPosition = new Vector3(                      DataConverter.FloatFromBytes(data_list.GetRange(1' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(5' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(9' 4)));
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: currentPosition = new Vector3(                      DataConverter.FloatFromBytes(data_list.GetRange(1' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(5' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(9' 4)));
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: currentPosition = new Vector3(                      DataConverter.FloatFromBytes(data_list.GetRange(1' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(5' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(9' 4)));
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: currentPosition = new Vector3(                      DataConverter.FloatFromBytes(data_list.GetRange(1' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(5' 4))'                      DataConverter.FloatFromBytes(data_list.GetRange(9' 4)));
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: byte status_bits = data[13];
Magic Number,Robot,StatusCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessResponse,The following statement contains a magic number: locations = (int)(data[14]);
Magic Number,Robot,MoveCommand,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,MoveCommand,The following statement contains a magic number: this.thousandths_per_second = (UInt16)(inches_per_second * 1000);
Magic Number,Robot,Robot,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\Robot.cs,Robot,The following statement contains a magic number: t.Interval = 50;
Magic Number,Robot,Robot,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\Robot.cs,CreateRobotCommand,The following statement contains a magic number: Math.Abs(delta.Z) > 0.0001f
Magic Number,Robot,Robot,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\Robot.cs,CreateRobotCommand,The following statement contains a magic number: return c.GenerateMoveCommand(p' inches_per_minute / 60.0f);
Missing Default,Robot,SerialPacket,D:\research\architectureSmells\repos\xenovacivus_PathCAM\Robot\PacketizedCommandGenerator.cs,ProcessByte,The following switch statement is missing a default case: switch (receive_state)                  {                      case ReceiveState.AwaitingStartByte:                          receive_next_char_is_escaped = false;                          receive_state = ReceiveState.AwaitingAddress;                          break;                                            case ReceiveState.AwaitingAddress:                          receive_address = data;                          receive_checksum = data;                          receive_state = ReceiveState.AwaitingLength;                          break;                                            case ReceiveState.AwaitingLength:                          receive_length = data;                          receive_checksum += data;                          receive_data.Clear();                          receive_state = ReceiveState.AwaitingData;                          break;                                            case ReceiveState.AwaitingData:                          receive_checksum += data;                          receive_data.Add(data);                          if (--receive_length == 0)                          {                              receive_state = ReceiveState.AwaitingChecksum;                          }                          break;                                            case ReceiveState.AwaitingChecksum:                          receive_state = ReceiveState.AwaitingStartByte;                          receive_checksum = (byte)~receive_checksum;                          if (data != receive_checksum)                          {                              Console.WriteLine("Serial Error: Checksum Mismatch");                              return null;                          }                          return receive_data.ToArray();                  }
