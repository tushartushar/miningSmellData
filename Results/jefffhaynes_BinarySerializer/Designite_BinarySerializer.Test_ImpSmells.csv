Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BinarySerialization.Test.Issues.Issue30,Header,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Header.cs,Header,The method has 6 parameters. Parameters: sender' receiver' msgType' telegrammId' size' type
Long Identifier,BinarySerialization.Test.Misc,ImmutableClass,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableClass.cs,ImmutableClass,The length of the parameter whyDoWeEvenHaveThisConstructor is 30.
Long Statement,BinarySerialization.Test,TestBase,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\TestBase.cs,AssertEqual,The length of the statement  "            Assert.True(expected.Length == actual.Length' $"Sequence lengths do not match.  Expected {expected.Length}' got {actual.Length}"); " is 130.
Long Statement,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,CustomSourceBindingTest2,The length of the statement  "                    "This is rather as if you imagine a puddle waking up one morning and thinking' 'This is an interesting world I find myself in — an interesting hole I find myself in — fits me rather neatly' doesn't it? In fact it fits me staggeringly well' must have been made to have me in it!' This is such a powerful idea that as the sun rises in the sky and the air heats up and as' gradually' the puddle gets smaller and smaller' frantically hanging on to the notion that everything's going to be alright' because this world was meant to have him in it' was built to have him in it; so the moment he disappears catches him rather by surprise. I think this may be something we need to be on the watch out for." " is 697.
Long Statement,BinarySerialization.Test.UntilItem,UntilItemTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\UntilItem\UntilItemTests.cs,UntilItemConstTest,The length of the statement  "            var expected = new UntilItemContainer {Items = items' ItemsLastItemExcluded = items' BoundItems = items' EnumTerminationItems = items}; " is 135.
Long Statement,BinarySerialization.Test.UntilItem,UntilItemTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\UntilItem\UntilItemTests.cs,UntilItemBoundTest,The length of the statement  "            var expected = new UntilItemContainer {Items = items' ItemsLastItemExcluded = items' BoundItems = items' EnumTerminationItems = items}; " is 135.
Long Statement,BinarySerialization.Test.UntilItem,UntilItemTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\UntilItem\UntilItemTests.cs,UntilItemEnumTest,The length of the statement  "            var expected = new UntilItemContainer { Items = items' ItemsLastItemExcluded = items' BoundItems = items' EnumTerminationItems = items }; " is 137.
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,AlignmentTest,The following statement contains a magic number: Assert.Equal(2' actual.Length);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,BoundAlignmentTest,The following statement contains a magic number: Assert.Equal(2' actual.Length);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,BoundAlignmentTest,The following statement contains a magic number: Assert.Equal(4' actual.Alignment);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,LeftAlignmentTest,The following statement contains a magic number: Assert.Equal((byte)2' actual.Value);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,LeftAlignmentTest,The following statement contains a magic number: Assert.Equal((byte)3' actual.Trailer);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,RightAlignmentTest,The following statement contains a magic number: Assert.Equal((byte)2' actual.Value);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,RightAlignmentTest,The following statement contains a magic number: Assert.Equal((byte)3' actual.Trailer);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,MixedAlignmentTest,The following statement contains a magic number: Assert.Equal((byte)2' actual.Value);
Magic Number,BinarySerialization.Test.Alignment,AlignmentTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Alignment\AlignmentTests.cs,MixedAlignmentTest,The following statement contains a magic number: Assert.Equal((byte)3' actual.Trailer);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,Cerealize,The following statement contains a magic number: return new Cereal              {                  IsLittleEndian = "false"'                  Name = "Cheerios"'                  Manufacturer = "General Mills"'                  NutritionalInformation = new NutritionalInformation                  {                      Calories = 100'                      Fat = 1.5f'                      Cholesterol = 64'                      VitaminA = 2'                      VitaminB = 3'                      OtherNestedStuff = new List<string> {"it's"' "got"' "electrolytes"}'                      OtherNestedStuff2 = new List<string> {"stuff"' "plants"' "crave"}'                      Toys = new List<Toy>                      {                          new Toy("Truck")'                          new Toy("Godzilla")'                          new Toy("EZ Bake Oven")'                          new Toy("Bike"' true)                      }'                      WeirdOutlierLengthedField = "hihihihihi"'                      Ingredients = new Ingredients                      {                          MainIngredient = new Iron()                      }                  }'                  DoubleField = 33.33333333'                  OtherStuff = new List<string> {"apple"' "pear"' "banana"}'                  Shape = CerealShape.Circular'                  DefinitelyNotTheShape = CerealShape.Square'                  DontSerializeMe = "bro"'                  SerializeMe = "!"'                  Outlier = 0'                  ExplicitlyTerminatedList = new List<string> {"red"' "white"' "blue"}'                  ImplicitlyTerminatedList =                      new List<CerealShape> {CerealShape.Circular' CerealShape.Circular' CerealShape.Square}'                  ArrayOfInts = new[] {1' 2' 3}'                  InvalidFieldLength = "oops"'                  DisclaimerLength = disclaimerStream.Length'                  Disclaimer = disclaimerStream              };
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,ParallelCerealTest,The following statement contains a magic number: var runs = Enumerable.Range(0' 1000);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,CerealTest,The following statement contains a magic number: Assert.Equal(3' cereal2.OtherStuff.Count);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,CerealTest,The following statement contains a magic number: Assert.Equal(3' cereal2.ArrayOfInts.Length);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,CerealTest,The following statement contains a magic number: Assert.Equal(2' cereal2.ArrayOfInts[1]);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,CerealTest,The following statement contains a magic number: Assert.Equal(3' cereal2.ArrayOfInts[2]);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,CerealTest,The following statement contains a magic number: Assert.Equal(3' cereal2.ArrayOfInts[2]);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,CerealTest,The following statement contains a magic number: Assert.Equal(cereal.NutritionalInformation.WeirdOutlierLengthedField.Length/2.0' cereal2.Outlier);
Magic Number,BinarySerialization.Test,BinarySerializerTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BinarySerializerTests.cs,ImplicitTermination,The following statement contains a magic number: Assert.Equal(4' byteList.Data.Count);
Magic Number,BinarySerialization.Test,DoubleOutlierConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\DoubleOutlierConverter.cs,Convert,The following statement contains a magic number: return a*2;
Magic Number,BinarySerialization.Test,DoubleOutlierConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\DoubleOutlierConverter.cs,ConvertBack,The following statement contains a magic number: return a/2;
Magic Number,BinarySerialization.Test,StreamletTest,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\StreamletTest.cs,ReadPartialTest,The following statement contains a magic number: AssertRead(0' 4);
Magic Number,BinarySerialization.Test,StreamletTest,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\StreamletTest.cs,ReadPartialOffsetTest,The following statement contains a magic number: AssertRead(2' 4);
Magic Number,BinarySerialization.Test,StreamletTest,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\StreamletTest.cs,ReadPartialOffsetTest,The following statement contains a magic number: AssertRead(2' 4);
Magic Number,BinarySerialization.Test,TestBase,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\TestBase.cs,PrintIndent,The following statement contains a magic number: var indent = new string(Enumerable.Repeat(' '' depth * 4).ToArray());
Magic Number,BinarySerialization.Test,Toy,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Toy.cs,GetHashCode,The following statement contains a magic number: return ((Name?.GetHashCode() ?? 0)*397) ^ Last.GetHashCode();
Magic Number,BinarySerialization.Test.BitLength,BitLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BitLength\BitLengthTests.cs,BoundBitLengthTest,The following statement contains a magic number: var expected = new BoundBitLengthClass              {                  Items = new List<InternalBitLengthClass>                  {                      new InternalBitLengthClass {Value = 1}'                      new InternalBitLengthClass {Value = 2}                  }              };
Magic Number,BinarySerialization.Test.BitLength,BitLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\BitLength\BitLengthTests.cs,BoundBitLengthTest,The following statement contains a magic number: Assert.Equal(8' actual.BitLength);
Magic Number,BinarySerialization.Test.Converters,ConverterTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Converters\ConverterTests.cs,ConverterTest,The following statement contains a magic number: Assert.Equal((double) expected.Field.Length/2' actual.HalfFieldLength);
Magic Number,BinarySerialization.Test.Converters,TwiceConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Converters\TwiceConverter.cs,Convert,The following statement contains a magic number: return a*2;
Magic Number,BinarySerialization.Test.Converters,TwiceConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Converters\TwiceConverter.cs,ConvertBack,The following statement contains a magic number: return a/2;
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,ConstCountTest,The following statement contains a magic number: Assert.Equal(3' actual.Field.Count);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,ConstCountTest,The following statement contains a magic number: Assert.Equal(3' actual.Field2.Length);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveConstCountTest,The following statement contains a magic number: Assert.Equal(3' actual.Field.Count);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveConstCountTest,The following statement contains a magic number: Assert.Equal(3' actual.Field2.Length);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,ConstCountMismatchTest,The following statement contains a magic number: var actual = Roundtrip(new ConstCountClass<string> {Field = new List<string>(TestSequence.Take(2))});
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,ConstCountMismatchTest,The following statement contains a magic number: Assert.Equal(3' actual.Field.Count);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimtiveConstCountMismatchTest,The following statement contains a magic number: var actual = Roundtrip(new ConstCountClass<int>              {                  Field = new List<int>(PrimitiveTestSequence.Take(2))'                  Field2 = PrimitiveTestSequence.Take(2).ToArray()              });
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimtiveConstCountMismatchTest,The following statement contains a magic number: var actual = Roundtrip(new ConstCountClass<int>              {                  Field = new List<int>(PrimitiveTestSequence.Take(2))'                  Field2 = PrimitiveTestSequence.Take(2).ToArray()              });
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimtiveConstCountMismatchTest,The following statement contains a magic number: Assert.Equal(3' actual.Field.Count);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveListBindingTest,The following statement contains a magic number: var expected = new PrimitiveListBindingClass {Ints = new List<int> {1' 2' 3}};
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveListBindingTest,The following statement contains a magic number: var expected = new PrimitiveListBindingClass {Ints = new List<int> {1' 2' 3}};
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveArrayBindingTest,The following statement contains a magic number: var expected = new PrimitiveArrayBindingClass {Ints = new[] {1' 2' 3}};
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveArrayBindingTest,The following statement contains a magic number: var expected = new PrimitiveArrayBindingClass {Ints = new[] {1' 2' 3}};
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,MultibindingTest,The following statement contains a magic number: Assert.Equal(2' actual.Count);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,MultibindingTest,The following statement contains a magic number: Assert.Equal(2' actual.Count2);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PaddedConstSizeListTest,The following statement contains a magic number: Assert.Equal(6' actual.Items.Count);
Magic Number,BinarySerialization.Test.Count,CountTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Count\CountTests.cs,PrimitiveNullArrayLengthTest,The following statement contains a magic number: Roundtrip(expected' expectedChildLength * 5);
Magic Number,BinarySerialization.Test.Custom,CustomSubtypeCustomClass,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomSubtypeCustomClass.cs,Serialize,The following statement contains a magic number: Assert.Equal(100' (int) boundedStream.MaxLength.ByteCount);
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,TestVaruint,The following statement contains a magic number: var actual = Roundtrip(expected' 3);
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,TestCustomDateTime,The following statement contains a magic number: var expected = new CustomDateTime {Value = new DateTime(1776' 7' 4)};
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,TestCustomDateTime,The following statement contains a magic number: var expected = new CustomDateTime {Value = new DateTime(1776' 7' 4)};
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,TestCustomDateTime,The following statement contains a magic number: var expected = new CustomDateTime {Value = new DateTime(1776' 7' 4)};
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,CustomSourceBindingTest2,The following statement contains a magic number: var actual = Roundtrip(expected' nameLength + 2);
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,CustomSubtypeTest,The following statement contains a magic number: var expected = new CustomSubtypeContainerClass              {                  Inner = new CustomSubtypeCustomClass                  {                      Value = 2097151                  }              };
Magic Number,BinarySerialization.Test.Custom,CustomTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\CustomTests.cs,CustomSubtypeTest,The following statement contains a magic number: var actual = Roundtrip(expected' 150);
Magic Number,BinarySerialization.Test.Custom,Varuint,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\Varuint.cs,Deserialize,The following statement contains a magic number: more = (lower7Bits & 128) != 0;
Magic Number,BinarySerialization.Test.Custom,Varuint,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\Varuint.cs,Deserialize,The following statement contains a magic number: Value |= (uint) ((lower7Bits & 127) << shift);
Magic Number,BinarySerialization.Test.Custom,Varuint,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\Varuint.cs,Deserialize,The following statement contains a magic number: shift += 7;
Magic Number,BinarySerialization.Test.Custom,Varuint,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\Varuint.cs,Serialize,The following statement contains a magic number: var lower7Bits = (byte) (value & 127);
Magic Number,BinarySerialization.Test.Custom,Varuint,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\Varuint.cs,Serialize,The following statement contains a magic number: value >>= 7;
Magic Number,BinarySerialization.Test.Custom,Varuint,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Custom\Varuint.cs,Serialize,The following statement contains a magic number: lower7Bits |= 128;
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[1].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[1].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("InnerClass"' events[2].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof(MemberSerializingEventArgs)' events[2].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[2].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[2].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[2].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[2].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("Length"' events[3].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof(MemberSerializingEventArgs)' events[3].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[3].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[3].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(0' (int) events[3].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("Length"' events[4].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof(MemberSerializedEventArgs)' events[4].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(8' (int) events[4].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(8' (int) events[4].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[4].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[4].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("InnerClass"' events[5].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof(MemberSerializingEventArgs)' events[5].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(8' (int) events[5].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(8' (int) events[5].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[5].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(4' (int) events[5].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("Value"' events[6].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof(MemberSerializingEventArgs)' events[6].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(8' (int) events[6].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(8' (int) events[6].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(0' (int) events[6].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("Value"' events[7].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof(MemberSerializedEventArgs)' events[7].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[7].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[7].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(2' (int) events[7].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(2' (int) events[7].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("InnerClass"' events[8].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof (MemberSerializedEventArgs)' events[8].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[8].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[8].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(6' (int) events[8].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(6' (int) events[8].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal("InnerClass"' events[9].MemberName);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(typeof (MemberSerializedEventArgs)' events[9].GetType());
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[9].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[9].Offset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[9].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Events,EventTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Events\EventTests.cs,TestSerializeEvents,The following statement contains a magic number: Assert.Equal(10' (int) events[9].LocalOffset.ByteCount);
Magic Number,BinarySerialization.Test.Ignore,IgnoreTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Ignore\IgnoreTests.cs,IgnoreObjectTest,The following statement contains a magic number: var expected = new IgnoreObjectClass {FirstField = 1' IgnoreMe = "hello"' LastField = 2};
Magic Number,BinarySerialization.Test.Ignore,IgnoreTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Ignore\IgnoreTests.cs,IgnoreObjectTest,The following statement contains a magic number: var actual = Roundtrip(expected' 8);
Magic Number,BinarySerialization.Test.Issues.Issue107,Issue107Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue107\Issue107Tests.cs,Test,The following statement contains a magic number: var expected = new ClassToSerialize {Field1 = 1' Field2 = 2' Field3 = 3' Field4 = 4' Field5 = 5};
Magic Number,BinarySerialization.Test.Issues.Issue107,Issue107Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue107\Issue107Tests.cs,Test,The following statement contains a magic number: var expected = new ClassToSerialize {Field1 = 1' Field2 = 2' Field3 = 3' Field4 = 4' Field5 = 5};
Magic Number,BinarySerialization.Test.Issues.Issue107,Issue107Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue107\Issue107Tests.cs,Test,The following statement contains a magic number: var expected = new ClassToSerialize {Field1 = 1' Field2 = 2' Field3 = 3' Field4 = 4' Field5 = 5};
Magic Number,BinarySerialization.Test.Issues.Issue107,Issue107Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue107\Issue107Tests.cs,Test,The following statement contains a magic number: var expected = new ClassToSerialize {Field1 = 1' Field2 = 2' Field3 = 3' Field4 = 4' Field5 = 5};
Magic Number,BinarySerialization.Test.Issues.Issue12,IsEvenConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue12\IsEvenConverter.cs,Convert,The following statement contains a magic number: return intValue%2 == 0;
Magic Number,BinarySerialization.Test.Issues.Issue12,Issue12Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue12\Issue12Tests.cs,Roundtrip12,The following statement contains a magic number: Roundtrip(expected' new[]              {                  (byte) 'F'' (byte) 'O'' (byte) 'R'' (byte) 'M''                  (byte) 0' (byte) 0' (byte) 0' (byte) 44'                  (byte) 'P'' (byte) 'T'' (byte) 'C'' (byte) 'H''                  (byte) 'C'' (byte) 'A'' (byte) 'T'' (byte) ' ''                  (byte) 0' (byte) 0' (byte) 0' (byte) 32'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'S''                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 5'                  (byte) 'h'' (byte) 'e'' (byte) 'l'' (byte) 'l'' (byte) 'o''                  (byte) 0'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 6'                  (byte) 'w'' (byte) 'o'' (byte) 'r'' (byte) 'l'' (byte) 'd'' (byte) 's'              });
Magic Number,BinarySerialization.Test.Issues.Issue12,Issue12Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue12\Issue12Tests.cs,Roundtrip12,The following statement contains a magic number: Roundtrip(expected' new[]              {                  (byte) 'F'' (byte) 'O'' (byte) 'R'' (byte) 'M''                  (byte) 0' (byte) 0' (byte) 0' (byte) 44'                  (byte) 'P'' (byte) 'T'' (byte) 'C'' (byte) 'H''                  (byte) 'C'' (byte) 'A'' (byte) 'T'' (byte) ' ''                  (byte) 0' (byte) 0' (byte) 0' (byte) 32'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'S''                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 5'                  (byte) 'h'' (byte) 'e'' (byte) 'l'' (byte) 'l'' (byte) 'o''                  (byte) 0'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 6'                  (byte) 'w'' (byte) 'o'' (byte) 'r'' (byte) 'l'' (byte) 'd'' (byte) 's'              });
Magic Number,BinarySerialization.Test.Issues.Issue12,Issue12Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue12\Issue12Tests.cs,Roundtrip12,The following statement contains a magic number: Roundtrip(expected' new[]              {                  (byte) 'F'' (byte) 'O'' (byte) 'R'' (byte) 'M''                  (byte) 0' (byte) 0' (byte) 0' (byte) 44'                  (byte) 'P'' (byte) 'T'' (byte) 'C'' (byte) 'H''                  (byte) 'C'' (byte) 'A'' (byte) 'T'' (byte) ' ''                  (byte) 0' (byte) 0' (byte) 0' (byte) 32'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'S''                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 5'                  (byte) 'h'' (byte) 'e'' (byte) 'l'' (byte) 'l'' (byte) 'o''                  (byte) 0'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 6'                  (byte) 'w'' (byte) 'o'' (byte) 'r'' (byte) 'l'' (byte) 'd'' (byte) 's'              });
Magic Number,BinarySerialization.Test.Issues.Issue12,Issue12Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue12\Issue12Tests.cs,Roundtrip12,The following statement contains a magic number: Roundtrip(expected' new[]              {                  (byte) 'F'' (byte) 'O'' (byte) 'R'' (byte) 'M''                  (byte) 0' (byte) 0' (byte) 0' (byte) 44'                  (byte) 'P'' (byte) 'T'' (byte) 'C'' (byte) 'H''                  (byte) 'C'' (byte) 'A'' (byte) 'T'' (byte) ' ''                  (byte) 0' (byte) 0' (byte) 0' (byte) 32'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'S''                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 5'                  (byte) 'h'' (byte) 'e'' (byte) 'l'' (byte) 'l'' (byte) 'o''                  (byte) 0'                  (byte) 'R'' (byte) 'E'' (byte) 'F'' (byte) 'E''                  (byte) 0' (byte) 0' (byte) 0' (byte) 6'                  (byte) 'w'' (byte) 'o'' (byte) 'r'' (byte) 'l'' (byte) 'd'' (byte) 's'              });
Magic Number,BinarySerialization.Test.Issues.Issue139,Domain,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue139\Domain.cs,Serialize,The following statement contains a magic number: stream.WriteByte(5);
Magic Number,BinarySerialization.Test.Issues.Issue29,Issue29Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue29\Issue29Tests.cs,TestDefaultSerialization,The following statement contains a magic number: Assert.Throws<AggregateException>(() => Roundtrip(carrierData' 2));
Magic Number,BinarySerialization.Test.Issues.Issue30,Header,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Header.cs,Header,The following statement contains a magic number: Stx = 2;
Magic Number,BinarySerialization.Test.Issues.Issue30,Header,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Header.cs,Header,The following statement contains a magic number: Behaviour = 3;
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,Issue30Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\Issue30Tests.cs,Test,The following statement contains a magic number: var msg = new CommMessage<PayloadA>                  (                  new Header                  {                      Stx = 2'                      HeaderDef = 1'                      Behaviour = 3'                      Security = 0'                      SenderId = 176'                      ReceiverId = 161'                      MsgType = MessageType.Ack'                      TelegrammId = 100'                      PayloadSize = 100'                      PayloadType = PayloadType.INIT                  }'                  new PayloadA(1' 5)                  );
Magic Number,BinarySerialization.Test.Issues.Issue30,PayloadA,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue30\PayloadA.cs,GetPayloadLength,The following statement contains a magic number: return 100;
Magic Number,BinarySerialization.Test.Issues.Issue33,Issue33Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue33\Issue33Tests.cs,DeserializeMessage,The following statement contains a magic number: var expected = new Bin3Data              {                  BinType = 254'                  Ident = "1"'                  Occupancy = BinOccupancy.Full'                  OccupancyString = BinOccupancy.Empty              };
Magic Number,BinarySerialization.Test.Issues.Issue34,Issue34Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue34\Issue34Tests.cs,RoundtripString,The following statement contains a magic number: var actual = Roundtrip(expected' 7);
Magic Number,BinarySerialization.Test.Issues.Issue55,Issue55Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue55\Issue55Tests.cs,Test,The following statement contains a magic number: var source = new ChunkContainer              {                  ChunkType = "TEST"'                  Chunk = new TestChunk                  {                      Customs = new[]                      {                          new CustomSerializable                          {                              Value = 1                          }'                          new CustomSerializable                          {                              Value = 2                          }                      }                  }              };
Magic Number,BinarySerializer.Test.Issues.Issue57,Issue57Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue57\Issue57Tests.cs,RoundtripFloat,The following statement contains a magic number: var expected = new BigEndianFloatClass              {                  Value = -48.651363f              };
Magic Number,BinarySerialization.Test.Issues.Issue65,Issue65Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue65\Issue65Tests.cs,CountTest,The following statement contains a magic number: Roundtrip(new TestClass()' 10);
Magic Number,BinarySerialization.Test.Issues.Issue65,Issue65Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue65\Issue65Tests.cs,ComplexLengthTest,The following statement contains a magic number: Roundtrip(new ComplexTestClass {ComplexClass = new ComplexClass()}' 5);
Magic Number,BinarySerialization.Test.Issues.Issue78,Issue78Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue78\Issue78Tests.cs,CrcThreadSafteyTest,The following statement contains a magic number: var frame = new Frame { Payload = new Payload { Number = 42' String = "Hello World" } };
Magic Number,BinarySerialization.Test.Issues.Issue78,Issue78Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue78\Issue78Tests.cs,CrcThreadSafteyTest,The following statement contains a magic number: i < 50
Magic Number,BinarySerialization.Test.Issues.Issue82,Issue82Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue82\Issue82Tests.cs,TestVersionConverter,The following statement contains a magic number: var expected = new SerializeWhenClass              {                  Version = 33'                  Value = true              };
Magic Number,BinarySerialization.Test.Issues.Issue82,Issue82Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue82\Issue82Tests.cs,TestVersionConverterMiss,The following statement contains a magic number: var expected = new SerializeWhenClass              {                  Version = 25'                  Value = true              };
Magic Number,BinarySerialization.Test.Issues.Issue88,Issue88Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue88\Issue88Tests.cs,FieldValueTest,The following statement contains a magic number: var expected = new ParentClass {Value = 5};
Magic Number,BinarySerialization.Test.Issues.Issue98,Issue89Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue98\Issue89Tests.cs,Test,The following statement contains a magic number: var expected = new Order {I = 5' RId = 10};
Magic Number,BinarySerialization.Test.Issues.Issue98,Issue89Tests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Issues\Issue98\Issue89Tests.cs,Test,The following statement contains a magic number: var expected = new Order {I = 5' RId = 10};
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,ItemConstLengthTest,The following statement contains a magic number: var actual = Roundtrip(expected' expected.List.Count*3);
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,ItemLengthListOfByteArraysTest,The following statement contains a magic number: var expected = new ItemLengthListOfByteArrayClass              {                  Arrays = new List<byte[]> {new byte[3]' new byte[3]' new byte[3]}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,ItemLengthListOfByteArraysTest,The following statement contains a magic number: var expected = new ItemLengthListOfByteArrayClass              {                  Arrays = new List<byte[]> {new byte[3]' new byte[3]' new byte[3]}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,ItemLengthListOfByteArraysTest,The following statement contains a magic number: var expected = new ItemLengthListOfByteArrayClass              {                  Arrays = new List<byte[]> {new byte[3]' new byte[3]' new byte[3]}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,LimitedItemLengthTest,The following statement contains a magic number: Assert.Equal(expected.InnerClasses[0].Value.Substring(0' 2)' actual.InnerClasses[0].Value);
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: var expected = new JaggedIntArrayClass              {                  Arrays = new[] {new[] {1}' new[] {2' 2}' new[] {3' 3' 3}}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: var expected = new JaggedIntArrayClass              {                  Arrays = new[] {new[] {1}' new[] {2' 2}' new[] {3' 3' 3}}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: var expected = new JaggedIntArrayClass              {                  Arrays = new[] {new[] {1}' new[] {2' 2}' new[] {3' 3' 3}}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: var expected = new JaggedIntArrayClass              {                  Arrays = new[] {new[] {1}' new[] {2' 2}' new[] {3' 3' 3}}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: var expected = new JaggedIntArrayClass              {                  Arrays = new[] {new[] {1}' new[] {2' 2}' new[] {3' 3' 3}}              };
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: Assert.True(expected.Arrays[2].SequenceEqual(actual.Arrays[2]));
Magic Number,BinarySerialization.Test.ItemLength,ItemLengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemLength\ItemLengthTests.cs,JaggedIntArrayTest,The following statement contains a magic number: Assert.True(expected.Arrays[2].SequenceEqual(actual.Arrays[2]));
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeFactory,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeFactory.cs,TryGetType,The following statement contains a magic number: switch ((byte)key)              {                  case 1:                      type = typeof(ItemTypeA);                      break;                  case 3:                      type = typeof(ItemTypeB);                      break;                  default:                      type = null;                      return false;              }
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: var expected = new ItemSubtypeClass              {                  Items = new List<IItemSubtype>                  {                      new ItemTypeB {Value = 1}'                      new ItemTypeB {Value = 2}'                      new ItemTypeB {Value = 3}                  }              };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: var expected = new ItemSubtypeClass              {                  Items = new List<IItemSubtype>                  {                      new ItemTypeB {Value = 1}'                      new ItemTypeB {Value = 2}'                      new ItemTypeB {Value = 3}                  }              };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: var actual = Roundtrip(expected' new byte[] {2' 1' 2' 3});
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: var actual = Roundtrip(expected' new byte[] {2' 1' 2' 3});
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: var actual = Roundtrip(expected' new byte[] {2' 1' 2' 3});
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: Assert.Equal(2' actual.Indicator);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: Assert.Equal(3' actual.Items.Count);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: Assert.Equal(expected.Items[2].GetType()' actual.Items[2].GetType());
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeTest,The following statement contains a magic number: Assert.Equal(expected.Items[2].GetType()' actual.Items[2].GetType());
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,CustomItemSubtypeTest,The following statement contains a magic number: var data = new byte[] {3}.Concat(CustomItem.Data).Concat(CustomItem.Data).ToArray();
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,CustomItemSubtypeTest,The following statement contains a magic number: Assert.Equal(3' actual.Indicator);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,CustomItemSubtypeTest,The following statement contains a magic number: Assert.Equal(2' actual.Items.Count);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,DefaultItemSubtypeTest,The following statement contains a magic number: var data = new byte[] {4' 0' 1' 2' 3 };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,DefaultItemSubtypeTest,The following statement contains a magic number: var data = new byte[] {4' 0' 1' 2' 3 };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,DefaultItemSubtypeTest,The following statement contains a magic number: var data = new byte[] {4' 0' 1' 2' 3 };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,DefaultItemSubtypeTest,The following statement contains a magic number: Assert.Equal(4' actual.Indicator);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeFactoryTest,The following statement contains a magic number: Assert.Equal(3' actual.Key);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeMixedTest,The following statement contains a magic number: Assert.Equal(2' actual.Key);
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeFactoryWithDefaultTest,The following statement contains a magic number: var data = new byte[] { 4' 0' 1' 2' 3 };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeFactoryWithDefaultTest,The following statement contains a magic number: var data = new byte[] { 4' 0' 1' 2' 3 };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeFactoryWithDefaultTest,The following statement contains a magic number: var data = new byte[] { 4' 0' 1' 2' 3 };
Magic Number,BinarySerialization.Test.ItemSubtype,ItemSubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\ItemSubtype\ItemSubtypeTests.cs,ItemSubtypeFactoryWithDefaultTest,The following statement contains a magic number: Assert.Equal(4' actual.Key);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,ConstLengthTest,The following statement contains a magic number: var actual = Roundtrip(new ConstLengthClass {Field = "FieldValue"}' 6);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,NullStringConstLengthTest,The following statement contains a magic number: var actual = Roundtrip(new ConstLengthClass()' 6);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,CollectionLengthTest,The following statement contains a magic number: Assert.Equal(expected.Field.Count*2' actual.FieldLengthField);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,EmptyCollectionLengthTest,The following statement contains a magic number: Assert.Equal(expected.Field.Count*2' actual.FieldLengthField);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,ComplexFieldLengthTest,The following statement contains a magic number: Assert.Equal(3' actual.Field.Field.Length);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,ComplexFieldLengthTest,The following statement contains a magic number: Assert.Equal(6' actual.FieldLengthField);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,ContainedCollectionTest,The following statement contains a magic number: Assert.Equal(2' actual.Field.Collection.Count);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,PaddedLengthTest,The following statement contains a magic number: var actual = Roundtrip(expected' 40);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,EmbeddedConstrainedCollectionTest,The following statement contains a magic number: Roundtrip(expected' 10);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,BoundItemTest,The following statement contains a magic number: Assert.Equal(expected.Items[2].Name' actual.Items[2].Name);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,BoundItemTest,The following statement contains a magic number: Assert.Equal(expected.Items[2].Name' actual.Items[2].Name);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,MultibindingTest,The following statement contains a magic number: Assert.Equal(2' actual.Length);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,MultibindingTest,The following statement contains a magic number: Assert.Equal(2' actual.Length2);
Magic Number,BinarySerialization.Test.Length,LengthTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Length\LengthTests.cs,PrimitiveNullArrayLengthTest,The following statement contains a magic number: Roundtrip(expected' 5);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableTest,The following statement contains a magic number: var expected = new ImmutableClass(3' 4);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableTest,The following statement contains a magic number: var expected = new ImmutableClass(3' 4);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableTest2,The following statement contains a magic number: var expected = new ImmutableClass2(3' 4);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableTest2,The following statement contains a magic number: var expected = new ImmutableClass2(3' 4);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableWithNullableParametersTest,The following statement contains a magic number: var expected = new ImmutableClass3(33);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableWithNullableParametersAndIgnoreTest,The following statement contains a magic number: var expected = new ImmutableClass4(4' 5);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableWithNullableParametersAndIgnoreTest,The following statement contains a magic number: var expected = new ImmutableClass4(4' 5);
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableItemsList,The following statement contains a magic number: var expected = new List<ImmutableClass>              {                  new ImmutableClass(1' 2)'                  new ImmutableClass(3' 4)              };
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableItemsList,The following statement contains a magic number: var expected = new List<ImmutableClass>              {                  new ImmutableClass(1' 2)'                  new ImmutableClass(3' 4)              };
Magic Number,BinarySerialization.Test.Misc,ImmutableTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\ImmutableTests.cs,ImmutableItemsList,The following statement contains a magic number: var expected = new List<ImmutableClass>              {                  new ImmutableClass(1' 2)'                  new ImmutableClass(3' 4)              };
Magic Number,BinarySerialization.Test.Misc,LargeArrayTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\LargeArrayTests.cs,LargeArrayTest,The following statement contains a magic number: var data = new byte[65536*sizeof (int)*2];
Magic Number,BinarySerialization.Test.Misc,LargeArrayTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\LargeArrayTests.cs,LargeArrayTest,The following statement contains a magic number: var data = new byte[65536*sizeof (int)*2];
Magic Number,BinarySerialization.Test.Misc,NullTrailingMemberTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\NullTrailingMemberTests.cs,NullTrailingMemberTest,The following statement contains a magic number: Roundtrip(container' 12);
Magic Number,BinarySerialization.Test.Misc,NullTrailingMemberTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\NullTrailingMemberTests.cs,NullTrailingMemberTest,The following statement contains a magic number: container.Inner.OptionalParameter = 5;
Magic Number,BinarySerialization.Test.Misc,NullTrailingMemberTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\NullTrailingMemberTests.cs,NullTrailingMemberTest,The following statement contains a magic number: Roundtrip(container' 13);
Magic Number,BinarySerialization.Test.Misc,PrivateSetterClass,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Misc\PrivateSetterClass.cs,PrivateSetterClass,The following statement contains a magic number: Value = 33;
Magic Number,BinarySerialization.Test.Offset,OffsetTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Offset\OffsetTests.cs,ConstOffsetTest,The following statement contains a magic number: var actual = Roundtrip(expected' 100 + expected.Field.Length + 1);
Magic Number,BinarySerialization.Test.Offset,OffsetTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Offset\OffsetTests.cs,BoundOffsetTest,The following statement contains a magic number: var expected = new BoundOffsetClass {FieldOffsetField = 1000' Field = "FieldValue"};
Magic Number,BinarySerialization.Test.Order,OrderTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Order\OrderTests.cs,OrderTest,The following statement contains a magic number: var order = new OrderClass {First = 1' Second = 2' Name = "Alice"};
Magic Number,BinarySerialization.Test.Order,OrderTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Order\OrderTests.cs,BaseClassComesBeforeDerivedClassTest,The following statement contains a magic number: var order = new OrderDerivedClass {First = 1' Second = 2};
Magic Number,BinarySerialization.Test.Primitives,PrimitiveTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Primitives\PrimitiveTests.cs,SingleTest2,The following statement contains a magic number: RoundtripPrimitive(-48.651363f' sizeof(float));
Magic Number,BinarySerialization.Test.Primitives,PrimitiveTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Primitives\PrimitiveTests.cs,ByteArrayTest,The following statement contains a magic number: Roundtrip(new byte[3]' new byte[3]);
Magic Number,BinarySerialization.Test.Primitives,PrimitiveTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Primitives\PrimitiveTests.cs,ByteArrayTest,The following statement contains a magic number: Roundtrip(new byte[3]' new byte[3]);
Magic Number,BinarySerialization.Test.Primitives,PrimitiveTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Primitives\PrimitiveTests.cs,NullTerminatedStringTest,The following statement contains a magic number: Roundtrip(container' container.Value.Length + 5);
Magic Number,BinarySerialization.Test.Scale,ScaledTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Scale\ScaledTests.cs,ScaleTest,The following statement contains a magic number: var expected = new ScaledValueClass {Value = 3};
Magic Number,BinarySerialization.Test.Scale,ScaledTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Scale\ScaledTests.cs,ScaleIntTest,The following statement contains a magic number: var expected = new ScaledIntValueClass { Value = 3 };
Magic Number,BinarySerialization.Test.Scale,ScaledTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Scale\ScaledTests.cs,NegativeScaleTest,The following statement contains a magic number: var expected = new ScaledValueClass { Value = -3 };
Magic Number,BinarySerialization.Test.Scale,ScaledTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Scale\ScaledTests.cs,BigEndianScaleTest,The following statement contains a magic number: var expected = new ScaledValueClass { Value = 3 };
Magic Number,BinarySerialization.Test.Scale,ScaledTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Scale\ScaledTests.cs,BigEndianScaleTest,The following statement contains a magic number: var actual = RoundtripBigEndian(expected' new byte[] { 0' 0' 0' 6 });
Magic Number,BinarySerialization.Test.SerializeAs,SerializeAsTest,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\SerializeAs\SerializeAsTest.cs,SerializeIntAsSizedStringTest,The following statement contains a magic number: var expected = new SizedStringClass<int> {Value = 33};
Magic Number,BinarySerialization.Test.SerializeAs,SerializeAsTest,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\SerializeAs\SerializeAsTest.cs,SerializeAsLengthPrefixedStringTest,The following statement contains a magic number: var actual = Roundtrip(expected' ushort.MaxValue + 3);
Magic Number,BinarySerialization.Test.Subtype,SubtypeFactory,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeFactory.cs,TryGetType,The following statement contains a magic number: switch (Convert.ToInt32(key))              {                  case 1:                      type = typeof(SubclassA);                      break;                  case 2:                      type = typeof(SubclassB);                      break;                  case 4:                      type = typeof(SubSubclassC);                      break;                  default:                      type = null;                      return false;              }
Magic Number,BinarySerialization.Test.Subtype,SubtypeFactory,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeFactory.cs,TryGetType,The following statement contains a magic number: switch (Convert.ToInt32(key))              {                  case 1:                      type = typeof(SubclassA);                      break;                  case 2:                      type = typeof(SubclassB);                      break;                  case 4:                      type = typeof(SubSubclassC);                      break;                  default:                      type = null;                      return false;              }
Magic Number,BinarySerialization.Test.Subtype,SubtypeFactoryTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeFactoryTests.cs,SubtypeFactoryTest,The following statement contains a magic number: Assert.Equal(2' actual.Key);
Magic Number,BinarySerialization.Test.Subtype,SubtypeFactoryTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeFactoryTests.cs,SubtypeMixedTest,The following statement contains a magic number: Assert.Equal(2' actual.Key);
Magic Number,BinarySerialization.Test.Subtype,SubtypeFactoryTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeFactoryTests.cs,SubtypeMixedTest2,The following statement contains a magic number: Assert.Equal(3' actual.Key);
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,SubtypeTest,The following statement contains a magic number: var expected = new SubtypeClass {Field = new SubclassB {SomethingForClassB = 33}' Field2 = new SubclassA()};
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,SubSubtypeTest,The following statement contains a magic number: var expected = new SubtypeClass              {                  Field = new SubSubclassC(3)                  {                      SomeSuperStuff = 1'                      SomethingForClassB = 2                  }'                  Field2 = new SubclassA()              };
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,SubSubtypeTest,The following statement contains a magic number: var expected = new SubtypeClass              {                  Field = new SubSubclassC(3)                  {                      SomeSuperStuff = 1'                      SomethingForClassB = 2                  }'                  Field2 = new SubclassA()              };
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,RecoverableMissingSubtypeTest,The following statement contains a magic number: var expected = new RecoverableMissingSubtypeClass<SuperclassContainer>              {                  Items = new List<SuperclassContainer>                  {                      new SuperclassContainer {Value = new SubclassA()}'                      new SuperclassContainer {Value = new SubclassB()}'                      new SuperclassContainer {Value = new SubSubclassC(33)}                  }              };
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,RecoverableMissingSubtypeTest,The following statement contains a magic number: Assert.Equal(typeof (SubSubclassC)' actualItems[2].Value.GetType());
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,DefaultSubtypeAllowOnSerialize,The following statement contains a magic number: var expected = new DefaultSubtypeContainerClass              {                  Indicator = 33'                  Value = new DefaultSubtypeClass()              };
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,DefaultSubtypeAllowOnSerialize,The following statement contains a magic number: Assert.Equal(33' actual.Indicator);
Magic Number,BinarySerialization.Test.Subtype,SubtypeTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Subtype\SubtypeTests.cs,DefaultSubtypeOnlyTest,The following statement contains a magic number: var actual = Deserialize<SubtypeDefaultOnlyClass>(new byte[] {0x4' 0x1' 0x2' 0x3' 0x4' 05});
Magic Number,BinarySerialization.Test.UntilItem,UntilItemTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\UntilItem\UntilItemTests.cs,UntilItemBoundTest,The following statement contains a magic number: Assert.Equal(expected.BoundItems[2].LastItem' actual.SerializeUntilField);
Magic Number,BinarySerialization.Test.UntilItem,UntilItemTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\UntilItem\UntilItemTests.cs,UntilItemDeferredTest,The following statement contains a magic number: var actual = Roundtrip(expected' new byte[]              {                  2'0'0'0'0'0'                  2'0'0'0'0'0              });
Magic Number,BinarySerialization.Test.UntilItem,UntilItemTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\UntilItem\UntilItemTests.cs,UntilItemDeferredTest,The following statement contains a magic number: var actual = Roundtrip(expected' new byte[]              {                  2'0'0'0'0'0'                  2'0'0'0'0'0              });
Magic Number,BinarySerialization.Test.Until,UntilTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Until\UntilTests.cs,PrimitiveTestUntilConst,The following statement contains a magic number: var expected = new UntilTestClass<int> {Items = new List<int> {3' 2' 1}' AfterItems = "a whole awful lot"};
Magic Number,BinarySerialization.Test.Until,UntilTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Until\UntilTests.cs,PrimitiveTestUntilConst,The following statement contains a magic number: var expected = new UntilTestClass<int> {Items = new List<int> {3' 2' 1}' AfterItems = "a whole awful lot"};
Magic Number,BinarySerialization.Test.Value,OffsetLengthConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\OffsetLengthConverter.cs,Convert,The following statement contains a magic number: var offset = System.Convert.ToInt32(value)*4;
Magic Number,BinarySerialization.Test.Value,OffsetLengthConverter,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\OffsetLengthConverter.cs,ConvertBack,The following statement contains a magic number: return (int)Math.Ceiling((length + BaseOffset)/4f);
Magic Number,BinarySerialization.Test.Value,ValueTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\ValueTests.cs,FieldValueTest,The following statement contains a magic number: var expected = new FieldValueClass {Value = 33};
Magic Number,BinarySerialization.Test.Value,ValueTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\ValueTests.cs,Crc16Test,The following statement contains a magic number: var expected = new FieldCrc16Class              {                  Internal = new FieldCrcInternalClass                  {                      UshortValue = 1'                      ByteValue = 2'                      ArrayValue = new byte[] {0x3' 0x4}'                      Value = "hello world"                  }              };
Magic Number,BinarySerialization.Test.Value,ValueTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\ValueTests.cs,CrcTestOneWay,The following statement contains a magic number: var expected = new FieldCrc16OneWayClass              {                  Internal = new FieldCrcInternalClass                  {                      UshortValue = 1'                      ByteValue = 2'                      ArrayValue = new byte[] { 0x3' 0x4 }'                      Value = "hello world"                  }              };
Magic Number,BinarySerialization.Test.Value,ValueTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\ValueTests.cs,CrcTestOneWayToSource,The following statement contains a magic number: var expected = new FieldCrc16OneWayToSourceClass              {                  Internal = new FieldCrcInternalClass                  {                      UshortValue = 1'                      ByteValue = 2'                      ArrayValue = new byte[] { 0x3' 0x4 }'                      Value = "hello world"                  }              };
Magic Number,BinarySerialization.Test.Value,ValueTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\ValueTests.cs,Crc32Test,The following statement contains a magic number: var expected = new FieldCrc32Class              {                  Internal = new FieldCrcInternalClass                  {                      UshortValue = 1'                      ByteValue = 2'                      ArrayValue = new byte[] { 0x3' 0x4 }'                      Value = "hello world"                  }              };
Magic Number,BinarySerialization.Test.Value,ValueTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\Value\ValueTests.cs,Crc16StreamTest,The following statement contains a magic number: var expected = new StreamValueClass              {                  Data = new MemoryStream(Enumerable.Repeat((byte) 'A'' 100000).ToArray())              };
Magic Number,BinarySerialization.Test.WhenNot,WhenNotTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\WhenNot\WhenNotTests.cs,SimpleTest,The following statement contains a magic number: var expected = new WhenNotClass              {                  ExcludeValue = true'                  Value = 100              };
Magic Number,BinarySerialization.Test.WhenNot,WhenNotTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\WhenNot\WhenNotTests.cs,SimpleTest,The following statement contains a magic number: Assert.Equal(5' data.Length);
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenStringTest,The following statement contains a magic number: var expected = new WhenStringTestClass              {                  WhatToDo = "PickOne"'                  SerializeThis = 1'                  DontSerializeThis = 2'                  SerializeThisNoMatterWhat = 3              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenStringTest,The following statement contains a magic number: var expected = new WhenStringTestClass              {                  WhatToDo = "PickOne"'                  SerializeThis = 1'                  DontSerializeThis = 2'                  SerializeThisNoMatterWhat = 3              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenIntTest,The following statement contains a magic number: var expected = new WhenIntTestClass              {                  WhatToDo = 1'                  SerializeThis = 100'                  DontSerializeThis = 200'                  SerializeThisNoMatterWhat = 300              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenIntTest,The following statement contains a magic number: var expected = new WhenIntTestClass              {                  WhatToDo = 1'                  SerializeThis = 100'                  DontSerializeThis = 200'                  SerializeThisNoMatterWhat = 300              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenIntTest,The following statement contains a magic number: var expected = new WhenIntTestClass              {                  WhatToDo = 1'                  SerializeThis = 100'                  DontSerializeThis = 200'                  SerializeThisNoMatterWhat = 300              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenEnumTest,The following statement contains a magic number: var expected = new WhenEnumTestClass              {                  WhatToDo = 1'                  SerializeThis = 1000'                  DontSerializeThis = 2000'                  SerializeThisNoMatterWhat = 3000              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenEnumTest,The following statement contains a magic number: var expected = new WhenEnumTestClass              {                  WhatToDo = 1'                  SerializeThis = 1000'                  DontSerializeThis = 2000'                  SerializeThisNoMatterWhat = 3000              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenEnumTest,The following statement contains a magic number: var expected = new WhenEnumTestClass              {                  WhatToDo = 1'                  SerializeThis = 1000'                  DontSerializeThis = 2000'                  SerializeThisNoMatterWhat = 3000              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenConverterTest,The following statement contains a magic number: var expected = new WhenConverterTestClass              {                  WhatToDo = 1'                  SerializeThis = 1000'                  DontSerializeThis = 2000'                  SerializeThisNoMatterWhat = 3000              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenConverterTest,The following statement contains a magic number: var expected = new WhenConverterTestClass              {                  WhatToDo = 1'                  SerializeThis = 1000'                  DontSerializeThis = 2000'                  SerializeThisNoMatterWhat = 3000              };
Magic Number,BinarySerialization.Test.When,WhenTests,D:\research\architectureSmells\repos\jefffhaynes_BinarySerializer\BinarySerializer.Test\When\WhenTests.cs,WhenConverterTest,The following statement contains a magic number: var expected = new WhenConverterTestClass              {                  WhatToDo = 1'                  SerializeThis = 1000'                  DontSerializeThis = 2000'                  SerializeThisNoMatterWhat = 3000              };
