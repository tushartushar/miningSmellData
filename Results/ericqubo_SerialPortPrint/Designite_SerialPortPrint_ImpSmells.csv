Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,resizeImage,The length of the statement  "	g.DrawImage (bitmapOrg' new Rectangle (0' 0' newWidth' newHeight)' new Rectangle (0' 0' width' height)' GraphicsUnit.Pixel); " is 124.
Long Statement,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The length of the statement  "		data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]); " is 174.
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintHelper,The following statement contains a magic number: server.BaudRate = 9600;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintHelper,The following statement contains a magic number: server.DataBits = 8;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,CheckPrintState,The following statement contains a magic number: data [2] = 0x01;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: try {  	byte[] OutBuffer;  	//数据  	int BufferSize;  	Encoding targetEncoding;  	//将[UNICODE编码]转换为[GB码]，仅使用于简体中文版mobile  	targetEncoding = Encoding.GetEncoding (0);  	//得到简体中文字码页的编码方式，因为是简体中文操作系统，参数用0就可以，用936也行。  	BufferSize = targetEncoding.GetByteCount (mes);  	//计算对指定字符数组中的所有字符进行编码所产生的字节数             	OutBuffer = new byte[BufferSize];  	OutBuffer = targetEncoding.GetBytes (mes);  	//将指定字符数组中的所有字符编码为一个字节序列'完成后outbufer里面即为简体中文编码  	byte[] cmdData = new byte[BufferSize + 5];  	//初始化打印机  	cmdData [0] = 0x1B;  	cmdData [1] = 0x40;  	//设置字符顺时旋转180度  	cmdData [2] = 0x1B;  	cmdData [3] = 0x56;  	cmdData [4] = 0;  	for (int i = 0; i < BufferSize; i++) {  		cmdData [5 + i] = OutBuffer [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: try {  	byte[] OutBuffer;  	//数据  	int BufferSize;  	Encoding targetEncoding;  	//将[UNICODE编码]转换为[GB码]，仅使用于简体中文版mobile  	targetEncoding = Encoding.GetEncoding (0);  	//得到简体中文字码页的编码方式，因为是简体中文操作系统，参数用0就可以，用936也行。  	BufferSize = targetEncoding.GetByteCount (mes);  	//计算对指定字符数组中的所有字符进行编码所产生的字节数             	OutBuffer = new byte[BufferSize];  	OutBuffer = targetEncoding.GetBytes (mes);  	//将指定字符数组中的所有字符编码为一个字节序列'完成后outbufer里面即为简体中文编码  	byte[] cmdData = new byte[BufferSize + 5];  	//初始化打印机  	cmdData [0] = 0x1B;  	cmdData [1] = 0x40;  	//设置字符顺时旋转180度  	cmdData [2] = 0x1B;  	cmdData [3] = 0x56;  	cmdData [4] = 0;  	for (int i = 0; i < BufferSize; i++) {  		cmdData [5 + i] = OutBuffer [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: try {  	byte[] OutBuffer;  	//数据  	int BufferSize;  	Encoding targetEncoding;  	//将[UNICODE编码]转换为[GB码]，仅使用于简体中文版mobile  	targetEncoding = Encoding.GetEncoding (0);  	//得到简体中文字码页的编码方式，因为是简体中文操作系统，参数用0就可以，用936也行。  	BufferSize = targetEncoding.GetByteCount (mes);  	//计算对指定字符数组中的所有字符进行编码所产生的字节数             	OutBuffer = new byte[BufferSize];  	OutBuffer = targetEncoding.GetBytes (mes);  	//将指定字符数组中的所有字符编码为一个字节序列'完成后outbufer里面即为简体中文编码  	byte[] cmdData = new byte[BufferSize + 5];  	//初始化打印机  	cmdData [0] = 0x1B;  	cmdData [1] = 0x40;  	//设置字符顺时旋转180度  	cmdData [2] = 0x1B;  	cmdData [3] = 0x56;  	cmdData [4] = 0;  	for (int i = 0; i < BufferSize; i++) {  		cmdData [5 + i] = OutBuffer [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: try {  	byte[] OutBuffer;  	//数据  	int BufferSize;  	Encoding targetEncoding;  	//将[UNICODE编码]转换为[GB码]，仅使用于简体中文版mobile  	targetEncoding = Encoding.GetEncoding (0);  	//得到简体中文字码页的编码方式，因为是简体中文操作系统，参数用0就可以，用936也行。  	BufferSize = targetEncoding.GetByteCount (mes);  	//计算对指定字符数组中的所有字符进行编码所产生的字节数             	OutBuffer = new byte[BufferSize];  	OutBuffer = targetEncoding.GetBytes (mes);  	//将指定字符数组中的所有字符编码为一个字节序列'完成后outbufer里面即为简体中文编码  	byte[] cmdData = new byte[BufferSize + 5];  	//初始化打印机  	cmdData [0] = 0x1B;  	cmdData [1] = 0x40;  	//设置字符顺时旋转180度  	cmdData [2] = 0x1B;  	cmdData [3] = 0x56;  	cmdData [4] = 0;  	for (int i = 0; i < BufferSize; i++) {  		cmdData [5 + i] = OutBuffer [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: try {  	byte[] OutBuffer;  	//数据  	int BufferSize;  	Encoding targetEncoding;  	//将[UNICODE编码]转换为[GB码]，仅使用于简体中文版mobile  	targetEncoding = Encoding.GetEncoding (0);  	//得到简体中文字码页的编码方式，因为是简体中文操作系统，参数用0就可以，用936也行。  	BufferSize = targetEncoding.GetByteCount (mes);  	//计算对指定字符数组中的所有字符进行编码所产生的字节数             	OutBuffer = new byte[BufferSize];  	OutBuffer = targetEncoding.GetBytes (mes);  	//将指定字符数组中的所有字符编码为一个字节序列'完成后outbufer里面即为简体中文编码  	byte[] cmdData = new byte[BufferSize + 5];  	//初始化打印机  	cmdData [0] = 0x1B;  	cmdData [1] = 0x40;  	//设置字符顺时旋转180度  	cmdData [2] = 0x1B;  	cmdData [3] = 0x56;  	cmdData [4] = 0;  	for (int i = 0; i < BufferSize; i++) {  		cmdData [5 + i] = OutBuffer [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: cmdData [2] = 0x1B;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: cmdData [3] = 0x56;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: cmdData [4] = 0;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: for (int i = 0; i < BufferSize; i++) {  	cmdData [5 + i] = OutBuffer [i];  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintString,The following statement contains a magic number: cmdData [5 + i] = OutBuffer [i];  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: try {  	byte[] data = Pos.POS_PrintPicture (bitmap' 384' 0);  	byte[] cmdData = new byte[data.Length + 6];  	cmdData [0] = 0x1B;  	cmdData [1] = 0x2A;  	cmdData [2] = 0x32;  	cmdData [3] = 0x20;  	cmdData [4] = 0x2;  	cmdData [5] = 0x50;  	for (int i = 0; i < data.Length; i++) {  		cmdData [6 + i] = data [i];  	}  	//PrintQueue.QueueList.Enqueue(cmdData);  	//CheckPrintState(out err);  	SendData (cmdData' out err);  	return true;  }  catch (Exception ex) {  	err = ex.Message;  	return false;  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: cmdData [2] = 0x32;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: cmdData [3] = 0x20;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: cmdData [4] = 0x2;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: cmdData [5] = 0x50;  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	cmdData [6 + i] = data [i];  }  
Magic Number,SerialPortPrint,PrintHelper,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\PrintHelper.cs,PrintImg,The following statement contains a magic number: cmdData [6 + i] = data [i];  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,GetCustomColor,The following statement contains a magic number: return Convert.ToUInt32 (blue << 16 | green << 8 | red);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,GetCustomColor,The following statement contains a magic number: return Convert.ToUInt32 (blue << 16 | green << 8 | red);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [0] = 29;  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [1] = 118;  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [2] = 48;  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [2] = 48;  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [3] = (byte)(nMode & 0x1);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [4] = (byte)(nWidth / 8 % 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [4] = (byte)(nWidth / 8 % 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [4] = (byte)(nWidth / 8 % 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [5] = (byte)(nWidth / 8 / 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [5] = (byte)(nWidth / 8 / 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [5] = (byte)(nWidth / 8 / 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [6] = (byte)(nHeight % 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [6] = (byte)(nHeight % 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [7] = (byte)(nHeight / 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [7] = (byte)(nHeight / 256);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: for (int i = 8; i < data.Length; i++) {  	data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  	k += 8;  }  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: data [i] = (byte)(p0 [src [k]] + p1 [src [(k + 1)]] + p2 [src [(k + 2)]] + p3 [src [(k + 3)]] + p4 [src [(k + 4)]] + p5 [src [(k + 5)]] + p6 [src [(k + 6)]] + src [(k + 7)]);  
Magic Number,PrintBase,Pos,C:\repos\ericqubo_SerialPortPrint\SerialPortPrint\Pos.cs,pixToCmd,The following statement contains a magic number: k += 8;  
