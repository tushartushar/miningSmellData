Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,WriteJson,Cyclomatic complexity of the method is 10
Long Identifier,Tests.Domain,Project,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Project.cs,,The length of the parameter InstanceAnonymousSourceSerializer is 33.
Long Statement,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GeneratePolygonCoordinates,The length of the statement  "				points.Add(new GeoCoordinate(centroid.Latitude + Math.Sin(angle) * distance' centroid.Longitude + Math.Cos(angle) * distance)); " is 127.
Long Statement,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GeneratePolygonCoordinates,The length of the statement  "				points.Add(new GeoCoordinate(centroid.Latitude + Math.Sin(angle) * distance' centroid.Longitude + Math.Cos(angle) * distance)); " is 127.
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GenerateMultiLineString,The following statement contains a magic number: coordinates.Add(GenerateGeoCoordinates(p' 3));
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GenerateMultiLineString,The following statement contains a magic number: i < p.Random.Int(1' 5)
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: const int maxPoints = 20;
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: double startingAngle = (int)(p.Random.Double() * (1d / 3) * Math.PI);
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: angle = angle + p.Random.Double() * (2d / 3) * Math.PI;
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: angle = angle + p.Random.Double() * (2d / 3) * Math.PI;
Magic Number,Tests.Domain,GeoShape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\GeoShape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: angle > 2 * Math.PI
Magic Number,Tests.Domain,Log,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Log.cs,GetMessageText,The following statement contains a magic number: var numWords = Random.Next(1' 20);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetDates,The following statement contains a magic number: var past = faker.Date.Past(faker.Random.Int(1' 19));
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetDates,The following statement contains a magic number: var future = faker.Date.Future(faker.Random.Int(1' 10)' past);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetDoubles,The following statement contains a magic number: var low = faker.Random.Double(-121' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetDoubles,The following statement contains a magic number: var low = faker.Random.Double(-121' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetDoubles,The following statement contains a magic number: var high = faker.Random.Double(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetDoubles,The following statement contains a magic number: var high = faker.Random.Double(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetFloats,The following statement contains a magic number: var low = faker.Random.Float(-2000' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetFloats,The following statement contains a magic number: var low = faker.Random.Float(-2000' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetFloats,The following statement contains a magic number: var high = faker.Random.Float(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetFloats,The following statement contains a magic number: var high = faker.Random.Float(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetIntegers,The following statement contains a magic number: var low = faker.Random.Int(-100' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetIntegers,The following statement contains a magic number: var low = faker.Random.Int(-100' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetIntegers,The following statement contains a magic number: var high = faker.Random.Int(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetIntegers,The following statement contains a magic number: var high = faker.Random.Int(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetLongs,The following statement contains a magic number: var low = faker.Random.Long(-100' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetLongs,The following statement contains a magic number: var low = faker.Random.Long(-100' 10000);
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetLongs,The following statement contains a magic number: var high = faker.Random.Long(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Ranges,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Ranges.cs,SetLongs,The following statement contains a magic number: var high = faker.Random.Long(low' Math.Abs(low * 10)) + 2;
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GenerateMultiLineString,The following statement contains a magic number: coordinates.Add(GenerateGeoCoordinates(p' 3));
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GenerateMultiLineString,The following statement contains a magic number: i < p.Random.Int(1' 5)
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: const int maxPoints = 20;
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: double startingAngle = (int)(p.Random.Double() * (1d / 3) * Math.PI);
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: angle = angle + p.Random.Double() * (2d / 3) * Math.PI;
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: angle = angle + p.Random.Double() * (2d / 3) * Math.PI;
Magic Number,Tests.Domain,Shape,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\Shape.cs,GeneratePolygonCoordinates,The following statement contains a magic number: angle > 2 * Math.PI
Magic Number,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,WriteJson,The following statement contains a magic number: var builder = new StringBuilder(33);
Magic Number,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,WriteJson,The following statement contains a magic number: var diff = 23 - builder.Length;
Magic Number,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,WriteJson,The following statement contains a magic number: builder.Length > 20 && builder.Length < 23
Magic Number,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,WriteJson,The following statement contains a magic number: builder.Length > 20 && builder.Length < 23
Magic Number,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,AppendTwoDigitNumber,The following statement contains a magic number: result.Append((char)('0' + (val / 10)));
Magic Number,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,AppendTwoDigitNumber,The following statement contains a magic number: result.Append((char)('0' + (val % 10)));
Missing Default,Tests.Domain.JsonConverters,DateTimeConverter,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Tests\Tests.Domain\JsonConverters\DateTimeConverter.cs,WriteJson,The following switch statement is missing a default case: switch (dateTime.Kind)  			{  				case DateTimeKind.Local:  					var offset = TimeZoneInfo.Local.GetUtcOffset(dateTime);  					if (offset >= TimeSpan.Zero)  						builder.Append('+');  					else  					{  						builder.Append('-');  						offset = offset.Negate();  					}    					AppendTwoDigitNumber(builder' offset.Hours);  					builder.Append(':');  					AppendTwoDigitNumber(builder' offset.Minutes);  					break;  				case DateTimeKind.Utc:  					builder.Append('Z');  					break;  			}
