Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Examples.Docs,UpdateByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdateByQueryPage.cs,Line514,The length of the parameter updateByQueryRethrottleResponse is 31.
Long Statement,Examples.Analysis.Analyzers,PatternAnalyzerPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Analysis\Analyzers\PatternAnalyzerPage.cs,Line264,The length of the statement  "			          ""pattern"": ""([^\\p{L}\\d]+)|(?<=\\D)(?=\\d)|(?<=\\d)(?=\\D)|(?<=[\\p{L}&&[^\\p{Lu}]])(?=\\p{Lu})|(?<=\\p{Lu})(?=\\p{Lu}[\\p{L}&&[^\\p{Lu}]])"" " is 145.
Long Statement,Examples.Docs,BulkPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\BulkPage.cs,Line405,The length of the statement  "			{ ""script"" : { ""source"": ""ctx._source.counter += params.param1""' ""lang"" : ""painless""' ""params"" : {""param1"" : 1}}' ""upsert"" : {""counter"" : 1}} " is 159.
Long Statement,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line447,The length of the statement  "				.FilterPath(new[] { "hits.total" }) // <1> Using filter path can result in a response that cannot be parsed by the client's serializer. In these cases' using the low level client and parsing the JSON response may be preferred. " is 226.
Long Statement,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line502,The length of the statement  "				.FilterPath(new[] { "hits.total" }) // <1> Using filter path can result in a response that cannot be parsed by the client's serializer. In these cases' using the low level client and parsing the JSON response may be preferred. " is 226.
Long Statement,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line570,The length of the statement  "			rethrottleResponse.MatchesExample(@"POST _delete_by_query/r1A2WoRbTwKZ516z6NEs5A:36619/_rethrottle?requests_per_second=-1"); " is 124.
Long Statement,Examples.Docs,TermvectorsPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\TermvectorsPage.cs,Line425,The length of the statement  "			      ""plot"": ""When wealthy industrialist Tony Stark is forced to build an armored suit after a life-threatening incident' he ultimately decides to use its technology to fight against evil."" " is 188.
Long Statement,Examples.Docs,UpdateByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdateByQueryPage.cs,Line514,The length of the statement  "			updateByQueryRethrottleResponse.MatchesExample(@"POST _update_by_query/r1A2WoRbTwKZ516z6NEs5A:36619/_rethrottle?requests_per_second=-1"); " is 137.
Long Statement,Examples.Docs,UpdateByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdateByQueryPage.cs,Line561,The length of the statement  "				.FilterPath(new [] { "hits.total" }) // <1> Using filter path can result in a response that cannot be parsed by the client's serializer. In these cases' using the low level client and parsing the JSON response may be preferred. " is 227.
Long Statement,Examples.Docs,UpdatePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdatePage.cs,Line135,The length of the statement  "			        ""source"": ""if (ctx._source.tags.contains(params.tag)) { ctx._source.tags.remove(ctx._source.tags.indexOf(params.tag)) }""' " is 125.
Long Statement,Examples.IndexModules,SimilarityPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\IndexModules\SimilarityPage.cs,Line192,The length of the statement  "			          ""source"": ""double tf = Math.sqrt(doc.freq); double idf = Math.log((field.docCount+1.0)/(term.docFreq+1.0)) + 1.0; double norm = 1/Math.sqrt(doc.length); return query.boost * tf * idf * norm;"" " is 195.
Long Statement,Examples.Indices,RolloverIndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Indices\RolloverIndexPage.cs,Line339,The length of the statement  "			response1.MatchesExample(@"GET /%3Clogs-%7Bnow%2Fd%7D-*%3E%2C%3Clogs-%7Bnow%2Fd-1d%7D-*%3E%2C%3Clogs-%7Bnow%2Fd-2d%7D-*%3E/_search"); " is 133.
Long Statement,Examples.Ingest,IngestNodePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ingest\IngestNodePage.cs,Line386,The length of the statement  "			        ""if"": ""Collection tags = ctx.tags;if(tags != null){for (String tag : tags) {if (tag.toLowerCase().contains('prod')) { return false;}}} return true;"" " is 152.
Long Statement,Examples.Ingest.Processors,UserAgentPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ingest\Processors\UserAgentPage.cs,Line27,The length of the statement  "			  ""agent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML' like Gecko) Chrome/51.0.2704.103 Safari/537.36"" " is 136.
Long Statement,Examples.Mapping.Types,GeoShapePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Types\GeoShapePage.cs,Line412,The length of the statement  "			    ""location"" : ""POLYGON ((100.0 0.0' 101.0 0.0' 101.0 1.0' 100.0 1.0' 100.0 0.0)' (100.2 0.2' 100.8 0.2' 100.8 0.8' 100.2 0.8' 100.2 0.2))"" " is 141.
Long Statement,Examples.Mapping.Types,GeoShapePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Types\GeoShapePage.cs,Line524,The length of the statement  "			    ""location"" : ""MULTILINESTRING ((102.0 2.0' 103.0 2.0' 103.0 3.0' 102.0 3.0)' (100.0 0.0' 101.0 0.0' 101.0 1.0' 100.0 1.0)' (100.2 0.2' 100.8 0.2' 100.8 0.8' 100.2 0.8))"" " is 173.
Long Statement,Examples.Mapping.Types,GeoShapePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Types\GeoShapePage.cs,Line555,The length of the statement  "			    ""location"" : ""MULTIPOLYGON (((102.0 2.0' 103.0 2.0' 103.0 3.0' 102.0 3.0' 102.0 2.0))' ((100.0 0.0' 101.0 0.0' 101.0 1.0' 100.0 1.0' 100.0 0.0)' (100.2 0.2' 100.8 0.2' 100.8 0.8' 100.2 0.8' 100.2 0.2)))"" " is 207.
Long Statement,Examples.Mapping.Types,ShapePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Types\ShapePage.cs,Line250,The length of the statement  "			    ""location"" : ""POLYGON ((1000.0 1000.0' 1001.0 1000.0' 1001.0 1001.0' 1000.0 1001.0' 1000.0 1000.0)' (1000.2 1000.2' 1000.8 1000.2' 1000.8 1000.8' 1000.2 1000.8' 1000.2 1000.2))"" " is 181.
Long Statement,Examples.Mapping.Types,ShapePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Types\ShapePage.cs,Line338,The length of the statement  "			    ""location"" : ""MULTILINESTRING ((1002.0 200.0' 1003.0 200.0' 1003.0 300.0' 1002.0 300.0)' (1000.0 100.0' 1001.0 100.0' 1001.0 100.0' 1000.0 100.0)' (1000.2 0.2' 1000.8 100.2' 1000.8 100.8' 1000.2 100.8))"" " is 207.
Long Statement,Examples.Mapping.Types,ShapePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Types\ShapePage.cs,Line369,The length of the statement  "			    ""location"" : ""MULTIPOLYGON (((1002.0 200.0' 1003.0 200.0' 1003.0 300.0' 1002.0 300.0' 102.0 200.0))' ((1000.0 100.0' 1001.0 100.0' 1001.0 100.0' 1000.0 100.0' 1000.0 100.0)' (1000.2 100.2' 1000.8 100.2' 1000.8 100.8' 1000.2 100.8' 1000.2 100.2)))"" " is 251.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""Leviathan Wakes""' ""author"": ""James S.A. Corey""' ""release_date"": ""2011-06-02""' ""page_count"": 561} " is 120.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""God Emperor of Dune""' ""author"": ""Frank Herbert""' ""release_date"": ""1981-05-28""' ""page_count"": 454} " is 121.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""Pandora's Star""' ""author"": ""Peter F. Hamilton""' ""release_date"": ""2004-03-02""' ""page_count"": 768} " is 120.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""Revelation Space""' ""author"": ""Alastair Reynolds""' ""release_date"": ""2000-03-15""' ""page_count"": 585} " is 122.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""A Fire Upon the Deep""' ""author"": ""Vernor Vinge""' ""release_date"": ""1992-06-01""' ""page_count"": 613} " is 121.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""Slaughterhouse-Five""' ""author"": ""Kurt Vonnegut""' ""release_date"": ""1969-06-01""' ""page_count"": 275} " is 121.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""The Hitchhiker's Guide to the Galaxy""' ""author"": ""Douglas Adams""' ""release_date"": ""1979-10-12""' ""page_count"": 180} " is 138.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""The Handmaid's Tale""' ""author"": ""Margaret Atwood""' ""release_date"": ""1985-06-01""' ""page_count"": 311} " is 123.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""Starship Troopers""' ""author"": ""Robert A. Heinlein""' ""release_date"": ""1959-12-01""' ""page_count"": 335} " is 124.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""The Left Hand of Darkness""' ""author"": ""Ursula K. Le Guin""' ""release_date"": ""1969-06-01""' ""page_count"": 304} " is 131.
Long Statement,Examples.Ml.AnomalyDetection.Apis,FindFileStructurePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\FindFileStructurePage.cs,Line226,The length of the statement  "			{""name"": ""The Moon is a Harsh Mistress""' ""author"": ""Robert A. Heinlein""' ""release_date"": ""1966-04-01""' ""page_count"": 288}"); " is 138.
Long Statement,Examples.Ml.AnomalyDetection.Apis,JobresourcePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Ml\AnomalyDetection\Apis\JobresourcePage.cs,Line374,The length of the statement  "			          ""January""' ""February""' ""March""' ""April""' ""May""' ""June""' ""July""' ""August""' ""September""' ""October""' ""November""' ""December""' " is 145.
Long Statement,Examples.Root,ApiConventionsPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\ApiConventionsPage.cs,Line128,The length of the statement  "			response1.MatchesExample(@"GET /%3Clogstash-%7Bnow%2Fd-2d%7D%3E%2C%3Clogstash-%7Bnow%2Fd-1d%7D%3E%2C%3Clogstash-%7Bnow%2Fd%7D%3E/_search " is 136.
Long Statement,Examples.Search,MultiSearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Search\MultiSearchPage.cs,Line160,The length of the statement  "			{ ""source"" : ""{ \""query\"": { \""match\"": { \""message\"" : \""{{keywords}}\"" } } } }""' ""params"": { ""query_type"": ""match""' ""keywords"": ""some message"" } } " is 170.
Long Statement,Examples.Search,ValidatePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Search\ValidatePage.cs,Line73,The length of the statement  "			{""user"" : ""kimchi""' ""post_date"" : ""2009-11-15T14:12:13""' ""message"" : ""My username is similar to @kimchy!""}"); " is 121.
Long Statement,Examples.Search.Request,ScrollPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Search\Request\ScrollPage.cs,Line167,The length of the statement  "			      ""DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAAABFmtSWWRRWUJrU2o2ZExpSGJCVmQxYUEAAAAAAAAAAxZrUllkUVlCa1NqNmRMaUhiQlZkMWFBAAAAAAAAAAIWa1JZZFFZQmtTajZkTGlIYkJWZDFhQQAAAAAAAAAFFmtSWWRRWUJrU2o2ZExpSGJCVmQxYUEAAAAAAAAABBZrUllkUVlCa1NqNmRMaUhiQlZkMWFB"" " is 232.
Long Statement,Examples.Search.Request,ScrollPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Search\Request\ScrollPage.cs,Line189,The length of the statement  "			response0.MatchesExample(@"DELETE /_search/scroll/DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAD4WYm9laVYtZndUQlNsdDcwakFMNjU1QQ=='DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAAABFmtSWWRRWUJrU2o2ZExpSGJCVmQxYUEAAAAAAAAAAxZrUllkUVlCa1NqNmRMaUhiQlZkMWFBAAAAAAAAAAIWa1JZZFFZQmtTajZkTGlIYkJWZDFhQQAAAAAAAAAFFmtSWWRRWUJrU2o2ZExpSGJCVmQxYUEAAAAAAAAABBZrUllkUVlCa1NqNmRMaUhiQlZkMWFB"); " is 346.
Long Statement,Examples.Sql.Endpoints,RestPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Sql\Endpoints\RestPage.cs,Line277,The length of the statement  "			    ""cursor"": ""sDXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAAEWYUpOYklQMHhRUEtld3RsNnFtYU1hQQ==:BAFmBGRhdGUBZgVsaWtlcwFzB21lc3NhZ2UBZgR1c2Vy9f///w8="" " is 134.
Long Statement,Examples.Sql.Endpoints,RestPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Sql\Endpoints\RestPage.cs,Line314,The length of the statement  "			    ""cursor"": ""sDXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAAEWYUpOYklQMHhRUEtld3RsNnFtYU1hQQ==:BAFmBGRhdGUBZgVsaWtlcwFzB21lc3NhZ2UBZgR1c2Vy9f///w8="" " is 134.
Long Statement,Examples.Sql.Endpoints,RestPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Sql\Endpoints\RestPage.cs,Line415,The length of the statement  "			    ""cursor"": ""sDXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAAEWWWdrRlVfSS1TbDYtcW9lc1FJNmlYdw==:BAFmBmF1dGhvcgFmBG5hbWUBZgpwYWdlX2NvdW50AWYMcmVsZWFzZV9kYXRl+v///w8=""' " is 151.
Long Statement,Examples.Sql,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Sql\GettingStartedPage.cs,Line10,The length of the statement  "			{""name"": ""Leviathan Wakes""' ""author"": ""James S.A. Corey""' ""release_date"": ""2011-06-02""' ""page_count"": 561} " is 120.
Long Statement,Examples.XPack.Docs.En.RestApi.Security,DelegatePkiAuthenticationPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\RestApi\Security\DelegatePkiAuthenticationPage.cs,Line77,The length of the statement  "			  ""x509_certificate_chain"": [""MIIDbTCCAlWgAwIBAgIJAIxTS7Qdho9jMA0GCSqGSIb3DQEBCwUAMFMxKzApBgNVBAMTIkVsYXN0aWNzZWFyY2ggVGVzdCBJbnRlcm1lZGlhdGUgQ0ExFjAUBgNVBAsTDUVsYXN0aWNzZWFyY2gxDDAKBgNVBAoTA29yZzAeFw0xOTA3MTkxMzMzNDFaFw0yMzA3MTgxMzMzNDFaMEoxIjAgBgNVBAMTGUVsYXN0aWNzZWFyY2ggVGVzdCBDbGllbnQxFjAUBgNVBAsTDUVsYXN0aWNzZWFyY2gxDDAKBgNVBAoTA29yZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANHgMX2aX8t0nj4sGLNuKISmmXIYCj9RwRqS7L03l9Nng7kOKnhHu/nXDt7zMRJyHj+q6FAt5khlavYSVCQyrDybRuA5z31gOdqXerrjs2OXS5HSHNvoDAnHFsaYX/5geMewVTtc/vqpd7Ph/QtaKfmG2FK0JNQo0k24tcgCIcyMtBh6BA70yGBM0OT8GdOgd/d/mA7mRhaxIUMNYQzRYRsp4hMnnWoOTkR5Q8KSO3MKw9dPSpPe8EnwtJE10S3s5aXmgytru/xQqrFycPBNj4KbKVmqMP0G60CzXik5pr2LNvOFz3Qb6sYJtqeZF+JKgGWdaTC89m63+TEnUHqk0lcCAwEAAaNNMEswCQYDVR0TBAIwADAdBgNVHQ4EFgQU/+aAD6Q4mFq1vpHorC25/OY5zjcwHwYDVR0jBBgwFoAU8siFCiMiYZZm/95qFC75AG/LRE0wDQYJKoZIhvcNAQELBQADggEBAIRpCgDLpvXcgDHUk10uhxev21mlIbU+VP46ANnCuj0UELhTrdTuWvO1PAI4z+WbDUxryQfOOXO9R6D0dE5yR56L/J7d+KayW34zU7yRDZM7+rXpocdQ1Ex8mjP9HJ/Bf56YZTBQJpXeDrKow4FvtkI3bcIMkqmbG16LHQXeG3RS4ds4S4wCnE2nA6vIn9y+4R999q6y1VSBORrYULcDWxS54plHLEdiMr1vVallg82AGobS9GMcTL2U4Nx5IYZG7sbTk3LrDxVpVg/S2wLofEdOEwqCeHug/iOihNLJBabEW6z4TDLJAVW5KCY1DfhkYlBfHn7vxKkfKoCUK/yLWWI=""] <1> " is 1214.
Long Statement,Examples.XPack.Docs.En.RestApi.Security,InvalidateTokensPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\RestApi\Security\InvalidateTokensPage.cs,Line95,The length of the statement  "			  ""token"" : ""dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ=="" " is 120.
Long Statement,Examples.XPack.Docs.En.RestApi.Security,OidcAuthenticateApiPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\RestApi\Security\OidcAuthenticateApiPage.cs,Line65,The length of the statement  "			  ""redirect_uri"" : ""https://oidc-kibana.elastic.co:5603/api/security/v1/oidc?code=jtI3Ntt8v3_XvcLzCFGq&state=4dbrihtIAt3wBTwo6DxK-vdk-sSyDBV8Yf0AjdkdT5I""' " is 156.
Long Statement,Examples.XPack.Docs.En.RestApi.Security,OidcLogoutApiPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\RestApi\Security\OidcLogoutApiPage.cs,Line44,The length of the statement  "			  ""token"" : ""dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==""' " is 121.
Long Statement,Examples.XPack.Docs.En.RestApi.Security,SamlAuthenticateApiPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\RestApi\Security\SamlAuthenticateApiPage.cs,Line73,The length of the statement  "			  ""content"" : ""PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMD.....""' " is 166.
Long Statement,Examples.XPack.Docs.En.RestApi.Security,SamlInvalidateApiPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\RestApi\Security\SamlInvalidateApiPage.cs,Line74,The length of the statement  "			  ""queryString"" : ""SAMLRequest=nZFda4MwFIb%2FiuS%2BmviRpqFaClKQdbvo2g12M2KMraCJ9cRR9utnW4Wyi13sMie873MeznJ1aWrnS3VQGR0j4mLkKC1NUeljjA77zYyhVbIE0dR%2By7fmaHq7U%2BdegXWGpAZ%2B%2F4pR32luBFTAtWgUcCv56%2Fp5y30X87Yz1khTIycdgpUW9kY7WdsC9zxoXTvMvWuVV98YyMnSGH2SYE5pwALBIr9QKiwDGpW0oGVUznGeMyJZKFkQ4jBf5HnhUymjIhzCAL3KNFihbYx8TBYzzGaY7EnIyZwHzCWMfiDnbRIftkSjJr%2BFu0e9v%2B0EgOquRiiZjKpiVFp6j50T4WXoyNJ%2FEWC9fdqc1t%2F1%2B2F3aUpjzhPiXpqMz1%2FHSn4A&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256&Signature=MsAYz2NFdovMG2mXf6TSpu5vlQQyEJAg%2B4KCwBqJTmrb3yGXKUtIgvjqf88eCAK32v3eN8vupjPC8LglYmke1ZnjK0%2FKxzkvSjTVA7mMQe2AQdKbkyC038zzRq%2FYHcjFDE%2Bz0qISwSHZY2NyLePmwU7SexEXnIz37jKC6NMEhus%3D""' " is 705.
Long Statement,Examples.XPack.Docs.En.Security.Authentication,OidcGuidePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\Security\Authentication\OidcGuidePage.cs,Line652,The length of the statement  "			  ""redirect_uri"" : ""https://oidc-kibana.elastic.co:5603/api/security/v1/oidc?code=jtI3Ntt8v3_XvcLzCFGq&state=4dbrihtIAt3wBTwo6DxK-vdk-sSyDBV8Yf0AjdkdT5I""' " is 156.
Long Statement,Examples.XPack.Docs.En.Security.Authentication,OidcGuidePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\Security\Authentication\OidcGuidePage.cs,Line670,The length of the statement  "			  ""token"" : ""dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==""' " is 121.
Long Statement,Examples.XPack.Docs.En.Security.Authentication,SamlGuidePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\Security\Authentication\SamlGuidePage.cs,Line948,The length of the statement  "			  ""content"" : ""PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMD.....""' " is 166.
Long Statement,Examples.XPack.Docs.En.Security.Authentication,SamlGuidePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\Security\Authentication\SamlGuidePage.cs,Line977,The length of the statement  "			  ""content"" : ""PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMD.....""' " is 166.
Long Statement,Examples.XPack.Docs.En.Security.Authentication,SamlGuidePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\Security\Authentication\SamlGuidePage.cs,Line1010,The length of the statement  "			  ""query"" : ""SAMLRequest=nZFda4MwFIb%2FiuS%2BmviRpqFaClKQdbvo2g12M2KMraCJ9cRR9utnW4Wyi13sMie873MeznJ1aWrnS3VQGR0j4mLkKC1NUeljjA77zYyhVbIE0dR%2By7fmaHq7U%2BdegXWGpAZ%2B%2F4pR32luBFTAtWgUcCv56%2Fp5y30X87Yz1khTIycdgpUW9kY7WdsC9zxoXTvMvWuVV98YyMnSGH2SYE5pwALBIr9QKiwDGpW0oGVUznGeMyJZKFkQ4jBf5HnhUymjIhzCAL3KNFihbYx8TBYzzGaY7EnIyZwHzCWMfiDnbRIftkSjJr%2BFu0e9v%2B0EgOquRiiZjKpiVFp6j50T4WXoyNJ%2FEWC9fdqc1t%2F1%2B2F3aUpjzhPiXpqMz1%2FHSn4A&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256&Signature=MsAYz2NFdovMG2mXf6TSpu5vlQQyEJAg%2B4KCwBqJTmrb3yGXKUtIgvjqf88eCAK32v3eN8vupjPC8LglYmke1ZnjK0%2FKxzkvSjTVA7mMQe2AQdKbkyC038zzRq%2FYHcjFDE%2Bz0qISwSHZY2NyLePmwU7SexEXnIz37jKC6NMEhus%3D""' " is 699.
Long Statement,Examples.XPack.Docs.En.Watcher.ExampleWatches,ExampleWatchMeetupdataPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\XPack\Docs\En\Watcher\ExampleWatches\ExampleWatchMeetupdataPage.cs,Line198,The length of the statement  "			          ""html"": ""Found events matching Open Source: <ul>{{#ctx.payload.aggregations.group_by_city.buckets}}<li>{{key}} ({{doc_count}})<ul>{{#group_by_event.buckets}}<li><a href=\""{{key}}\"">{{get_latest.buckets.0.group_by_event_name.buckets.0.key}}</a> ({{doc_count}})</li>{{/group_by_event.buckets}}</ul></li>{{/ctx.payload.aggregations.group_by_city.buckets}}</ul>"" " is 364.
Magic Number,Examples.Docs,BulkPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\BulkPage.cs,Line405,The following statement contains a magic number: var bulkResponse = client.Bulk(b => b  				.Update<object>(u => u  					.Index("index1")  					.Id("1")  					.RetriesOnConflict(3)  					.Doc(new { field = "value" })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("0")  					.RetriesOnConflict(3)  					.Script(s => s  						.Source("ctx._source.counter += params.param1")  						.Lang("painless")  						.Params(d => d  							.Add("param1"' 1)  						)  					)  					.Upsert(new { counter = 1 })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("2")  					.RetriesOnConflict(3)  					.Doc(new { field = "value" })  					.DocAsUpsert(true)  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("3")  					// TODO: missing  					//.Source(true)  					.Doc(new { field = "value" })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("4")  					// TODO: missing  					//.Source(true)  					.Doc(new { field = "value" })  				)  			);
Magic Number,Examples.Docs,BulkPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\BulkPage.cs,Line405,The following statement contains a magic number: var bulkResponse = client.Bulk(b => b  				.Update<object>(u => u  					.Index("index1")  					.Id("1")  					.RetriesOnConflict(3)  					.Doc(new { field = "value" })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("0")  					.RetriesOnConflict(3)  					.Script(s => s  						.Source("ctx._source.counter += params.param1")  						.Lang("painless")  						.Params(d => d  							.Add("param1"' 1)  						)  					)  					.Upsert(new { counter = 1 })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("2")  					.RetriesOnConflict(3)  					.Doc(new { field = "value" })  					.DocAsUpsert(true)  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("3")  					// TODO: missing  					//.Source(true)  					.Doc(new { field = "value" })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("4")  					// TODO: missing  					//.Source(true)  					.Doc(new { field = "value" })  				)  			);
Magic Number,Examples.Docs,BulkPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\BulkPage.cs,Line405,The following statement contains a magic number: var bulkResponse = client.Bulk(b => b  				.Update<object>(u => u  					.Index("index1")  					.Id("1")  					.RetriesOnConflict(3)  					.Doc(new { field = "value" })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("0")  					.RetriesOnConflict(3)  					.Script(s => s  						.Source("ctx._source.counter += params.param1")  						.Lang("painless")  						.Params(d => d  							.Add("param1"' 1)  						)  					)  					.Upsert(new { counter = 1 })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("2")  					.RetriesOnConflict(3)  					.Doc(new { field = "value" })  					.DocAsUpsert(true)  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("3")  					// TODO: missing  					//.Source(true)  					.Doc(new { field = "value" })  				)  				.Update<object>(u => u  					.Index("index1")  					.Id("4")  					// TODO: missing  					//.Source(true)  					.Doc(new { field = "value" })  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line374,The following statement contains a magic number: var deleteByQueryResponse = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Routing(1)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Age)  						.GreaterThanOrEquals(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line374,The following statement contains a magic number: deleteByQueryResponse.MatchesExample(@"POST twitter/_delete_by_query?routing=1  			{  			  ""query"": {  			    ""range"" : {  			        ""age"" : {  			           ""gte"" : 10  			        }  			    }  			  }  			}"' e =>  			{  				// numeric ranges always use doubles  				e.ApplyBodyChanges(body =>  				{  					body["query"]["range"]["age"]["gte"] = 10d;  				});  				return e;  			});
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line392,The following statement contains a magic number: var deleteByQueryResponse = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.ScrollSize(5000)  				.Query(q => q  					.Term(r => r  						.Field(f => f.User)  						.Value("kimchy")  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line412,The following statement contains a magic number: var deleteByQueryResponse = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Slice(s => s  					.Id(0)  					.Max(2)  				)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line412,The following statement contains a magic number: var deleteByQueryResponse = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Slice(s => s  					.Id(0)  					.Max(2)  				)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line412,The following statement contains a magic number: var deleteByQueryResponse2 = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Slice(s => s  					.Id(1)  					.Max(2)  				)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line412,The following statement contains a magic number: var deleteByQueryResponse2 = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Slice(s => s  					.Id(1)  					.Max(2)  				)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line412,The following statement contains a magic number: deleteByQueryResponse.MatchesExample(@"POST twitter/_delete_by_query  			{  			  ""slice"": {  			    ""id"": 0'  			    ""max"": 2  			  }'  			  ""query"": {  			    ""range"": {  			      ""likes"": {  			        ""lt"": 10  			      }  			    }  			  }  			}"' e =>  			{  				// numeric ranges always use doubles  				e.ApplyBodyChanges(body =>  				{  					body["query"]["range"]["likes"]["lt"] = 10d;  				});  				return e;  			});
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line412,The following statement contains a magic number: deleteByQueryResponse2.MatchesExample(@"POST twitter/_delete_by_query  			{  			  ""slice"": {  			    ""id"": 1'  			    ""max"": 2  			  }'  			  ""query"": {  			    ""range"": {  			      ""likes"": {  			        ""lt"": 10  			      }  			    }  			  }  			}"' e =>  			{  				e.ApplyBodyChanges(body =>  				{  					// numeric ranges always use doubles  					body["query"]["range"]["likes"]["lt"] = 10d;  				});  				return e;  			});
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line447,The following statement contains a magic number: var searchResponse = client.Search<Tweet>(s => s  				.Index("twitter")  				.Size(0)  				.FilterPath(new[] { "hits.total" }) // <1> Using filter path can result in a response that cannot be parsed by the client's serializer. In these cases' using the low level client and parsing the JSON response may be preferred.  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line447,The following statement contains a magic number: searchResponse.MatchesExample(@"POST twitter/_search?size=0&filter_path=hits.total  			{  			  ""query"": {  			    ""range"": {  			      ""likes"": {  			        ""lt"": 10  			      }  			    }  			  }  			}"' e =>  			{  				var uri = e.Uri.ToString().Replace("size=0&"' string.Empty);  				e.Uri = new Uri(uri);  				e.ApplyBodyChanges(body =>  				{  					// size always in the body  					body["size"] = 0;  					// numeric ranges always use doubles  					body["query"]["range"]["likes"]["lt"] = 10d;  				});  				return e;  			});
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line485,The following statement contains a magic number: var deleteByQueryResponse = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Refresh()  				.Slices(5)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line485,The following statement contains a magic number: var deleteByQueryResponse = client.DeleteByQuery<Tweet>(d => d  				.Index("twitter")  				.Refresh()  				.Slices(5)  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line485,The following statement contains a magic number: deleteByQueryResponse.MatchesExample(@"POST twitter/_delete_by_query?refresh&slices=5  			{  			  ""query"": {  			    ""range"": {  			      ""likes"": {  			        ""lt"": 10  			      }  			    }  			  }  			}"' e =>  			{  				// query string params always need a value  				var uri = e.Uri.ToString().Replace("refresh"' "refresh=true");  				e.Uri = new Uri(uri);  				e.ApplyBodyChanges(body =>  				{  					// slices is defined in body  					body["query"]["range"]["likes"]["lt"] = 10d;  				});  				return e;  			});
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line502,The following statement contains a magic number: var searchResponse = client.Search<Tweet>(s => s  				.Index("twitter")  				.Size(0)  				.FilterPath(new[] { "hits.total" }) // <1> Using filter path can result in a response that cannot be parsed by the client's serializer. In these cases' using the low level client and parsing the JSON response may be preferred.  				.Query(q => q  					.Range(r => r  						.Field(f => f.Likes)  						.LessThan(10)  					)  				)  			);
Magic Number,Examples.Docs,DeleteByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\DeleteByQueryPage.cs,Line502,The following statement contains a magic number: searchResponse.MatchesExample(@"POST twitter/_search?size=0&filter_path=hits.total  			{  			  ""query"": {  			    ""range"": {  			      ""likes"": {  			        ""lt"": 10  			      }  			    }  			  }  			}"' e =>  			{  				// size is specified in the body  				var uri = e.Uri.ToString().Replace("size=0&"' string.Empty);  				e.Uri = new Uri(uri);  				e.ApplyBodyChanges(body =>  				{  					body["size"] = 0;  					body["query"]["range"]["likes"]["lt"] = 10d;  				});  				return e;  			});
Magic Number,Examples.Docs,GetPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\GetPage.cs,Line86,The following statement contains a magic number: var getResponse = client.Get<Tweet>(2' g => g  				.Index("twitter")  				.Routing("user1")  			);
Magic Number,Examples.Docs,GetPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\GetPage.cs,Line363,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				Counter = 1'  				Tags = new[] { "white" }  			}' i => i  			.Index("twitter")  			.Id(2)  			.Routing("user1")  			);
Magic Number,Examples.Docs,GetPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\GetPage.cs,Line373,The following statement contains a magic number: var getResponse = client.Get<Tweet>(2' g => g  				.Index("twitter")  				.Routing("user1")  				.StoredFields(  					f => f.Tags'  					f => f.Counter)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line194,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line194,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line194,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line194,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line194,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line194,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line243,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Routing("kimchy")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line243,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Routing("kimchy")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line243,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Routing("kimchy")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line243,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Routing("kimchy")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line243,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Routing("kimchy")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line243,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Routing("kimchy")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line365,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Timeout("5m")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line365,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Timeout("5m")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line365,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Timeout("5m")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line365,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Timeout("5m")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line365,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Timeout("5m")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line365,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Timeout("5m")  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line394,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				Message = "elasticsearch now has versioning support' double cool!"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.Version(2)  					.VersionType(VersionType.External)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line452,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i.Index("twitter").Id(1));
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line452,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i.Index("twitter").Id(1));
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line452,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i.Index("twitter").Id(1));
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line452,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i.Index("twitter").Id(1));
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line452,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i.Index("twitter").Id(1));
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line452,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i.Index("twitter").Id(1));
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line485,The following statement contains a magic number: var createResponse = client.Create(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i  				.Index("twitter")  				.Id(1)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line485,The following statement contains a magic number: var createResponse = client.Create(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i  				.Index("twitter")  				.Id(1)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line485,The following statement contains a magic number: var createResponse = client.Create(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i  				.Index("twitter")  				.Id(1)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line485,The following statement contains a magic number: var createResponse = client.Create(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i  				.Index("twitter")  				.Id(1)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line485,The following statement contains a magic number: var createResponse = client.Create(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i  				.Index("twitter")  				.Id(1)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line485,The following statement contains a magic number: var createResponse = client.Create(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  			i => i  				.Index("twitter")  				.Id(1)  			);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line498,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.OpType(OpType.Create)  				);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line498,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.OpType(OpType.Create)  				);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line498,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.OpType(OpType.Create)  				);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line498,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.OpType(OpType.Create)  				);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line498,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.OpType(OpType.Create)  				);
Magic Number,Examples.Docs,IndexPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\IndexPage.cs,Line498,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}'  				i => i  					.Index("twitter")  					.Id(1)  					.OpType(OpType.Create)  				);
Magic Number,Examples.Docs,UpdateByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdateByQueryPage.cs,Line337,The following statement contains a magic number: var updateByQueryResponse = client.UpdateByQuery<object>(u => u  				.Index("twitter")  				.ScrollSize(100)  			);
Magic Number,Examples.Docs,UpdateByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdateByQueryPage.cs,Line534,The following statement contains a magic number: var updateByQueryResponse = client.UpdateByQuery<Tweet>(u => u  				.Index("twitter")  				.Slice(s => s  					.Id(0)  					.Max(2)  				)  				.Script(s => s  					.Source("ctx._source['extra'] = 'test'")  				)  			);
Magic Number,Examples.Docs,UpdateByQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdateByQueryPage.cs,Line534,The following statement contains a magic number: var updateByQueryResponse2 = client.UpdateByQuery<Tweet>(u => u  				.Index("twitter")  				.Slice(s => s  					.Id(1)  					.Max(2)  				)  				.Script(s => s  					.Source("ctx._source['extra'] = 'test'")  				)  			);
Magic Number,Examples.Docs,UpdatePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdatePage.cs,Line96,The following statement contains a magic number: var updateResponse = client.Update<object>(1' u => u  				.Index("test")  				.Script(s => s  					.Source("ctx._source.counter += params.count")  					.Lang("painless")  					.Params(p => p  						.Add("count"' 4)  					)  				)  			);
Magic Number,Examples.Docs,UpdatePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdatePage.cs,Line271,The following statement contains a magic number: var updateResponse = client.Update<object>(1' u => u  				.Index("test")  				.Script(s => s  					.Source("ctx._source.counter += params.count")  					.Lang("painless")  					.Params(p => p  						.Add("count"' 4)  					)  				)  				.Upsert(new  				{  					counter = 1  				})  			);
Magic Number,Examples.Docs,UpdatePage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Docs\UpdatePage.cs,Line296,The following statement contains a magic number: var updateResponse = client.Update<object>("dh3sgudg8gsrgl"' u => u  				.Index("sessions")  				.ScriptedUpsert(true)  				.Script(s => s  					.Id("my_web_session_summariser")  					.Params(p => p  						.Add("pageViewEvent"' new  						{  							url = "foo.com/bar"'  							response = 404'  							time = "2014-01-01 12:32"  						})  					)  				)  				.Upsert(new {})  			);
Magic Number,Examples,Example,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Example.cs,Create,The following statement contains a magic number: var exampleParts = example.Split(new[] { "\r\n"' "\r"' "\n" }' 2' StringSplitOptions.None);
Magic Number,Examples,Example,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Example.cs,Create,The following statement contains a magic number: var urlParts = exampleParts[0].Split(new[] { " " }' 2' StringSplitOptions.None);
Magic Number,Examples.Mapping.Dynamic,TemplatesPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Dynamic\TemplatesPage.cs,Line71,The following statement contains a magic number: var createIndexResponse = client.Indices.Create("my_index"' c => c  				.Map(m => m  					.DynamicTemplates(dt => dt  						.DynamicTemplate("integers"' d => d  							.MatchMappingType("long")  							.Mapping(mm => mm  								.Number(n => n  									.Type(NumberType.Integer)  								)  							)  						)  						.DynamicTemplate("strings"' d => d  							.MatchMappingType("string")  							.Mapping(mm => mm  								.Text(t => t  									.Fields(f => f  										.Keyword(k => k  											.Name("raw")  											.IgnoreAbove(256)  										)  									)  								)  							)  						)  					)  				)  			);
Magic Number,Examples.Mapping.Dynamic,TemplatesPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Dynamic\TemplatesPage.cs,Line71,The following statement contains a magic number: var indexResponse = client.Index<object>(  				new { my_integer = 5' my_string = "Some string" }'  				i => i.Index("my_index").Id(1)  				);
Magic Number,Examples.Mapping.Dynamic,TemplatesPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Mapping\Dynamic\TemplatesPage.cs,Line214,The following statement contains a magic number: var indexResponse = client.Index<object>(new  			{  				name = new  				{  					first = "Paul"'  					last = "McCartney"'  					title = new  					{  						value = "Sir"'  						category = "order of chivalry"  					}  				}  			}' i => i.Index("my_index").Id(2));
Magic Number,Examples.QueryDsl,QueryStringQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\QueryDsl\QueryStringQueryPage.cs,Line436,The following statement contains a magic number: var searchResponse = client.Search<object>(s => s  				.Index("")  				.Query(q => q  					.QueryString(qs => qs  						.Fields(f => f  							.Field("title")  						)  						.Query("this that thus")  						.MinimumShouldMatch(2)  					)  				)  			);
Magic Number,Examples.QueryDsl,QueryStringQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\QueryDsl\QueryStringQueryPage.cs,Line462,The following statement contains a magic number: var searchResponse = client.Search<object>(s => s  				.Index("")  				.Query(q => q  					.QueryString(qs => qs  						.Fields(f => f  							.Field("title")  							.Field("content")  						)  						.Query("this that thus")  						.MinimumShouldMatch(2)  					)  				)  			);
Magic Number,Examples.QueryDsl,QueryStringQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\QueryDsl\QueryStringQueryPage.cs,Line486,The following statement contains a magic number: var searchResponse = client.Search<object>(s => s  				.Index("")  				.Query(q => q  					.QueryString(qs => qs  						.Fields(f => f  							.Field("title")  							.Field("content")  						)  						.Query("this OR that OR thus")  						.MinimumShouldMatch(2)  					)  				)  			);
Magic Number,Examples.QueryDsl,QueryStringQueryPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\QueryDsl\QueryStringQueryPage.cs,Line518,The following statement contains a magic number: var searchResponse = client.Search<object>(s => s  				.Index("")  				.Query(q => q  					.QueryString(qs => qs  						.Fields(f => f  							.Field("title")  							.Field("content")  						)  						.Query("this OR that OR thus")  						.Type(TextQueryType.CrossFields)  						.MinimumShouldMatch(2)  					)  				)  			);
Magic Number,Examples.Root,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\GettingStartedPage.cs,Line424,The following statement contains a magic number: var response0 = client.Search<Account>(s => s  				.Index("bank")  				.Query(q => q.MatchAll())  				.Sort(so => so  					.Field(f => f.AccountNumber' SortOrder.Ascending)  				)  				.From(10)  				.Size(10)  			);
Magic Number,Examples.Root,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\GettingStartedPage.cs,Line424,The following statement contains a magic number: var response0 = client.Search<Account>(s => s  				.Index("bank")  				.Query(q => q.MatchAll())  				.Sort(so => so  					.Field(f => f.AccountNumber' SortOrder.Ascending)  				)  				.From(10)  				.Size(10)  			);
Magic Number,Examples.Root,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\GettingStartedPage.cs,Line507,The following statement contains a magic number: var searchResponse = client.Search<Account>(s => s  				.Index("bank")  				.Query(q => q  					.Bool(b => b  						.Must(mu => mu  							.MatchAll()  						)  						.Filter(f => f  							.Range(r => r  								.Field(ff => ff.Balance)  								.GreaterThanOrEquals(20000)  								.LessThanOrEquals(30000)  							)  						)  					)  				)  			);
Magic Number,Examples.Root,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\GettingStartedPage.cs,Line507,The following statement contains a magic number: var searchResponse = client.Search<Account>(s => s  				.Index("bank")  				.Query(q => q  					.Bool(b => b  						.Must(mu => mu  							.MatchAll()  						)  						.Filter(f => f  							.Range(r => r  								.Field(ff => ff.Balance)  								.GreaterThanOrEquals(20000)  								.LessThanOrEquals(30000)  							)  						)  					)  				)  			);
Magic Number,Examples.Root,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\GettingStartedPage.cs,Line507,The following statement contains a magic number: searchResponse.MatchesExample(@"GET /bank/_search  			{  			  ""query"": {  			    ""bool"": {  			      ""must"": { ""match_all"": {} }'  			      ""filter"": {  			        ""range"": {  			          ""balance"": {  			            ""gte"": 20000'  			            ""lte"": 30000  			          }  			        }  			      }  			    }  			  }  			}"' e =>  			{  				// bool must and filter are always an array and numeric range queries always use doubles  				e.ApplyBodyChanges(body =>  				{  					var must = body["query"]["bool"]["must"];  					body["query"]["bool"]["must"] = new JArray(must);  					var filter = body["query"]["bool"]["filter"];  					filter["range"]["balance"]["gte"] = 20000d;  					filter["range"]["balance"]["lte"] = 30000d;  					body["query"]["bool"]["filter"] = new JArray(filter);  				});  				return e;  			});
Magic Number,Examples.Root,GettingStartedPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\GettingStartedPage.cs,Line507,The following statement contains a magic number: searchResponse.MatchesExample(@"GET /bank/_search  			{  			  ""query"": {  			    ""bool"": {  			      ""must"": { ""match_all"": {} }'  			      ""filter"": {  			        ""range"": {  			          ""balance"": {  			            ""gte"": 20000'  			            ""lte"": 30000  			          }  			        }  			      }  			    }  			  }  			}"' e =>  			{  				// bool must and filter are always an array and numeric range queries always use doubles  				e.ApplyBodyChanges(body =>  				{  					var must = body["query"]["bool"]["must"];  					body["query"]["bool"]["must"] = new JArray(must);  					var filter = body["query"]["bool"]["filter"];  					filter["range"]["balance"]["gte"] = 20000d;  					filter["range"]["balance"]["lte"] = 30000d;  					body["query"]["bool"]["filter"] = new JArray(filter);  				});  				return e;  			});
Magic Number,Examples.Root,SearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\SearchPage.cs,Line18,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}' i => i  				.Index("twitter")  				.Routing("kimchy")  			);
Magic Number,Examples.Root,SearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\SearchPage.cs,Line18,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}' i => i  				.Index("twitter")  				.Routing("kimchy")  			);
Magic Number,Examples.Root,SearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\SearchPage.cs,Line18,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}' i => i  				.Index("twitter")  				.Routing("kimchy")  			);
Magic Number,Examples.Root,SearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\SearchPage.cs,Line18,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}' i => i  				.Index("twitter")  				.Routing("kimchy")  			);
Magic Number,Examples.Root,SearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\SearchPage.cs,Line18,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}' i => i  				.Index("twitter")  				.Routing("kimchy")  			);
Magic Number,Examples.Root,SearchPage,D:\research\architectureSmells\repos\elasticsearch_elasticsearch-net\src\Examples\Examples\Root\SearchPage.cs,Line18,The following statement contains a magic number: var indexResponse = client.Index(new Tweet  			{  				User = "kimchy"'  				PostDate = new DateTime(2009' 11' 15' 14' 12' 12)'  				Message = "trying out Elasticsearch"  			}' i => i  				.Index("twitter")  				.Routing("kimchy")  			);
