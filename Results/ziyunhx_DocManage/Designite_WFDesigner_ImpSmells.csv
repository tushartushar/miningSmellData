Implementation smell,Namespace,Class,File,Method,Description
Long Method,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,MenuItem_Click,The method has 144 lines of code.
Complex Method,WFDesigner.dialog,createWorkflowWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\dialog\createWorkflowWindow.xaml.cs,Button_Click,Cyclomatic complexity of the method is 9
Complex Method,WFDesigner.dialog,startWorkflowWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\dialog\startWorkflowWindow.xaml.cs,Button_Click,Cyclomatic complexity of the method is 10
Complex Method,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,MenuItem_Click,Cyclomatic complexity of the method is 67
Complex Method,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,runWorkflow,Cyclomatic complexity of the method is 14
Complex Method,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,find_Click,Cyclomatic complexity of the method is 9
Complex Method,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,edit_Click,Cyclomatic complexity of the method is 13
Long Parameter List,WFDesigner,modelItemConverter,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\modelItemConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,WFDesigner,modelItemConverter,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\modelItemConverter.cs,ConvertBack,The method has 4 parameters.
Long Identifier,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,loadToolbox,The length of the parameter stateMachineWithInitialStateFactory is 35.
Long Statement,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,loadSystemIcon,The length of the statement  "	System.Resources.ResourceReader resourceReader = new System.Resources.ResourceReader (sourceAssembly.GetManifestResourceStream ("Microsoft.VisualStudio.Activities.Resources.resources")); " is 186.
Long Statement,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,createImageToActivity,The length of the statement  "	System.Drawing.Bitmap bitmap = getImageFromResource (resourceReader' builtInActivityType.IsGenericType ? builtInActivityType.Name.Split ('`') [0] : builtInActivityType.Name); " is 174.
Long Statement,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,createImageToActivity,The length of the statement  "		ConstructorInfo constructor = tbaType.GetConstructor (BindingFlags.Instance | BindingFlags.NonPublic' null' new Type[] { " is 120.
Long Statement,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,loadToolbox,The length of the statement  "	ToolboxItemWrapper flowDecision = new ToolboxItemWrapper (typeof(System.Activities.Statements.FlowDecision)' "FlowDecision"); " is 125.
Long Statement,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,loadToolbox,The length of the statement  "	ToolboxItemWrapper flowSwitch = new ToolboxItemWrapper (typeof(System.Activities.Statements.FlowSwitch<string>)' "FlowSwitch"); " is 127.
Long Statement,WFDesigner,toolBox,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\toolBox.cs,loadToolbox,The length of the statement  "	ToolboxItemWrapper stateMachineWithInitialStateFactory = new ToolboxItemWrapper (typeof(Machine.Design.ToolboxItems.StateMachineWithInitialStateFactory)' "状态机流程"); " is 163.
Long Statement,WFDesigner,designerDebugTracking,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designerDebugTracking.cs,Track,The length of the statement  "				designerDebugTrackingData trackingData = new designerDebugTrackingData (record' timeout' activityMapList [activityStateRecord.Activity.Id]); " is 140.
Long Statement,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,loadWorkflowFromFile,The length of the statement  "		| ShellBarItemVisibility.Imports | ShellBarItemVisibility.MiniMap | ShellBarItemVisibility.Variables | ShellBarItemVisibility.Zoom; " is 131.
Magic Number,WFDesigner.dialog,startWorkflowWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\dialog\startWorkflowWindow.xaml.cs,loadUI,The following statement contains a magic number: foreach (string item in key) {  	TextBlock textBlock = new TextBlock () {  		Text = item  	};  	TextBox textBox = new TextBox () {  		Name = item'  		Width = 350'  		Height = 25  	};  	body.Children.Add (textBlock);  	body.Children.Add (textBox);  }  
Magic Number,WFDesigner.dialog,startWorkflowWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\dialog\startWorkflowWindow.xaml.cs,loadUI,The following statement contains a magic number: foreach (string item in key) {  	TextBlock textBlock = new TextBlock () {  		Text = item  	};  	TextBox textBox = new TextBox () {  		Name = item'  		Width = 350'  		Height = 25  	};  	body.Children.Add (textBlock);  	body.Children.Add (textBox);  }  
Magic Number,WFDesigner,designerDebugTracking,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designerDebugTracking.cs,clearTrackInfo,The following statement contains a magic number: designer.DebugManagerView.CurrentLocation = new SourceLocation (fileItem.LoadedFile' 1' 1' 1' 10);  
Magic Number,WFDesigner,designerDebugTracking,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designerDebugTracking.cs,Track,The following statement contains a magic number: if (activityStateRecord != null) {  	if (activityMapList.ContainsKey (activityStateRecord.Activity.Id)) {  		designerDebugTrackingData trackingData = new designerDebugTrackingData (record' timeout' activityMapList [activityStateRecord.Activity.Id]);  		step = step + 1;  		trackingData.stepID = step.ToString ();  		trackingData.displayName = trackingData.Activity.DisplayName;  		trackingData.state = ((ActivityStateRecord)trackingData.Record).State;  		trackingData.sourceLocation = sourceLocationList [trackingData.Activity];  		//  		designer.View.Dispatcher.Invoke (DispatcherPriority.Render' (Action)(() => {  			designer.DebugManagerView.CurrentLocation = this.sourceLocationList [trackingData.Activity];  			trackingDataList.Add (trackingData);  			System.Threading.Thread.Sleep (1000);  		}));  	}  }  
Magic Number,WFDesigner,designerDebugTracking,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designerDebugTracking.cs,Track,The following statement contains a magic number: if (activityMapList.ContainsKey (activityStateRecord.Activity.Id)) {  	designerDebugTrackingData trackingData = new designerDebugTrackingData (record' timeout' activityMapList [activityStateRecord.Activity.Id]);  	step = step + 1;  	trackingData.stepID = step.ToString ();  	trackingData.displayName = trackingData.Activity.DisplayName;  	trackingData.state = ((ActivityStateRecord)trackingData.Record).State;  	trackingData.sourceLocation = sourceLocationList [trackingData.Activity];  	//  	designer.View.Dispatcher.Invoke (DispatcherPriority.Render' (Action)(() => {  		designer.DebugManagerView.CurrentLocation = this.sourceLocationList [trackingData.Activity];  		trackingDataList.Add (trackingData);  		System.Threading.Thread.Sleep (1000);  	}));  }  
Magic Number,WFDesigner,designerDebugTracking,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designerDebugTracking.cs,Track,The following statement contains a magic number: designer.View.Dispatcher.Invoke (DispatcherPriority.Render' (Action)(() => {  	designer.DebugManagerView.CurrentLocation = this.sourceLocationList [trackingData.Activity];  	trackingDataList.Add (trackingData);  	System.Threading.Thread.Sleep (1000);  }));  
Magic Number,WFDesigner,designerDebugTracking,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designerDebugTracking.cs,Track,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Missing Default,WFDesigner.dialog,createWorkflowWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\dialog\createWorkflowWindow.xaml.cs,Button_Click,The following switch statement is missing a default case: switch (buttonValue) {  case "取消":  	templateName = "";  	this.Visibility = System.Windows.Visibility.Hidden;  	break;  case "确定":  	if (templateListBox.SelectedItem != null) {  		templateName = templateListBox.SelectedItem.ToString ();  		this.Visibility = System.Windows.Visibility.Hidden;  	} else {  		MessageBox.Show ("请选择模板");  	}  	break;  }  
Missing Default,WFDesigner.dialog,startWorkflowWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\dialog\startWorkflowWindow.xaml.cs,Button_Click,The following switch statement is missing a default case: switch (selectButtonValue) {  case "参数启动":  	foreach (var item in body.Children) {  		TextBox textBox = item as TextBox;  		if (textBox != null) {  			dictionary.Add (textBox.Name' textBox.Text);  		}  	}  	break;  case "无参数启动":  	break;  case "取消":  	break;  }  
Missing Default,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,MenuItem_Click,The following switch statement is missing a default case: switch (menuItemValue) {  //---------[工作流 ]---------------------  case "新建":  	{  		dialog.createWorkflowWindow createWorkflowWindow = new dialog.createWorkflowWindow ();  		createWorkflowWindow.ShowDialog ();  		if (!string.IsNullOrEmpty (createWorkflowWindow.templateName)) {  			loadWorkflowFromFile (createWorkflowWindow.templateName);  		}  		createWorkflowWindow.Close ();  		workflowFilePathName = "tempRun.xaml";  		this.Title = "流程设计器: " + workflowFilePathName;  	}  	break;  case "打开":  	OpenFileDialog openDialog = new OpenFileDialog ();  	if (openDialog.ShowDialog (this).Value) {  		loadWorkflowFromFile (openDialog.FileName);  		workflowFilePathName = openDialog.FileName;  		this.Title = "流程设计器  -   " + workflowFilePathName;  	}  	break;  case "保存":  	saveWorkflowToFile ();  	MessageBox.Show ("保存成功");  	break;  //---------[子流程 ]---------------------  case "嵌入式子流程":  	var list = designerTool.getSelectActivityList (designer);  	Type type = typeof(Sequence);  	foreach (var item in list) {  		if (item.ItemType == type) {  			openChildWorkflowWindow o = new openChildWorkflowWindow ();  			o.ShowDialog ();  			if (o.activity != null) {  				DynamicActivity d = o.activity as DynamicActivity;  				if (d != null) {  					foreach (var v in d.Properties) {  						if (v.Value is InArgument<string>) {  							Variable<string> t = new Variable<string> (v.Name);  							item.Properties ["Variables"].Collection.Add (t);  						}  					}  					item.Properties ["Activities"].Collection.Add (d.Implementation ());  				} else {  					item.Properties ["Activities"].Collection.Add (o.activity);  				}  			}  			o.Close ();  		}  		break;  	}  	break;  case "插入参数":  	(new addArgumentWindow (this.designer)).ShowDialog ();  	saveWorkflowToFile ();  	//不保存'参数已添加'但在流程设计器上不显示  	break;  //---------[操作 ]---------------------  case "撤销":  	undoEngine.Undo ();  	break;  case "重做":  	undoEngine.Redo ();  	break;  case "清空流程设计跟踪":  	desigeerActionList.Items.Clear ();  	break;  //--------- [调试] -----------------  case "运行":  	saveWorkflowToFile ();  	runWorkflow ();  	break;  case "清除跟踪信息":  	trackingList.ItemsSource = null;  	tracker.clearTrackInfo ();  	break;  //--------- [查看] -----------------  case "XAML":  	(new Window () {  		Content = new TextBox () {  			Text = designer.Text'  			AcceptsReturn = true'  			HorizontalScrollBarVisibility = ScrollBarVisibility.Visible'  			VerticalScrollBarVisibility = ScrollBarVisibility.Visible  		}  	}).Show ();  	break;  case "XAML(无ViewState)":  	(new Window () {  		Content = new TextBox () {  			Text = tool.removeViewState (tool.activityBuilderFromXaml (designer.Text))'  			AcceptsReturn = true'  			HorizontalScrollBarVisibility = ScrollBarVisibility.Visible'  			VerticalScrollBarVisibility = ScrollBarVisibility.Visible  		}  	}).Show ();  	break;  case "流程信息":  	{  		ListBox workflowInfo = new ListBox ();  		workflowInfo.Items.Add ("Xaml File Path : " + designerTool.getXamlFilePath (designer));  		workflowInfo.Items.Add ("Activity Type : " + tool.activityByXaml (designer.Text).GetType ().ToString ());  		(new Window () {  			Content = workflowInfo  		}).Show ();  	}  	break;  case "用户流程图":  	{  		displayFlowcharControl f = new displayFlowcharControl ();  		f.showFlowchar (tool.getFlowcharStruct (designer.Text));  		(new Window () {  			Content = f  		}).Show ();  	}  	break;  case "运行信息":  	(new Window () {  		Content = new Engine.runInfoControl ()  	}).Show ();  	break;  case "控制台输出":  	(new Window () {  		Content = new Engine.controlControl ()  	}).Show ();  	break;  //--------- [工具栏] -----------------  case "Auto ExpandCollapse":  	nodeToolboxControl.CategoryItemStyle = new System.Windows.Style (typeof(TreeViewItem)) {  		Setters =  {  			new Setter (TreeViewItem.IsExpandedProperty' false)  		}  	};  	break;  }  
Missing Default,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,find_Click,The following switch statement is missing a default case: switch (buttonValue) {  case "查找根容器中所有WriteLine并赋值":  	{  		IEnumerable<ModelItem> list = modelService.Find (rootModelItem' typeof(WriteLine));  		//读取属性  		foreach (ModelItem item in list) {  			MessageBox.Show (item.Properties ["DisplayName"].Value.ToString ());  		}  		//属性赋值  		foreach (ModelItem item in list) {  			InArgument<String> value = new InArgument<string> ("wxwinter");  			item.Properties ["Text"].SetValue (value);  		}  	}  	break;  case "按名称查找并赋值":  	{  		MessageBox.Show ("该功能没完成");  		//   ModelItem item=  modelService.FromName(rootModelItem' findNameTextbox.Text);  		//   MessageBox.Show(item.Properties["DisplayName"].Value.ToString());  		//   item.Properties["DisplayName"].SetValue("wxd");  	}  	break;  }  
Missing Default,WFDesigner,designWindow,D:\newReposJune17\ziyunhx_DocManage\Code\WorkFlow\WFDesigner\designWindow.xaml.cs,edit_Click,The following switch statement is missing a default case: switch (buttonValue) {  case "createStaticWorkflow":  	loadWorkflowFromFile (@"template\sequence.xaml");  	break;  case "add":  	{  		modelEditingScope = rootModelItem.BeginEdit ();  		//如果容器是FlowChar'要添加的对象要用 FlowStep 包装'添加到 modelItem.Properties["Nodes"]中  		// FlowStep flowCharNode = new FlowStep();  		// flowCharNode.Action = new WriteLine { Text = "这是新增加的部分?" };  		// rootModelItem.Properties["Nodes"].Collection.Add(flowCharNode);  		//如果容器是Sequence'直接向  modelItem.Properties["Activities"] 中添加  		rootModelItem.Properties ["Activities"].Collection.Add (new Flowchart ());  	}  	break;  case "complete":  	{  		modelEditingScope.Complete ();  	}  	break;  case "revert":  	{  		modelEditingScope.Revert ();  	}  	break;  }  
