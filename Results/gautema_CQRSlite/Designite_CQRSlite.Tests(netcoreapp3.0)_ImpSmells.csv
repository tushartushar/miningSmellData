Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CQRSlite.Tests.Substitutes,TestServiceLocator,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestServiceLocator.cs,GetService,Cyclomatic complexity of the method is 12
Long Statement,CQRSlite.Tests.Domain,When_getting_aggregate_without_contructor,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_aggregate_without_contructor.cs,Should_throw_missing_parameterless_constructor_exception,The length of the statement  "            await Assert.ThrowsAsync<MissingParameterLessConstructorException>(async () => await _repository.Get<TestAggregateNoParameterLessConstructor>(_id)); " is 148.
Long Statement,CQRSlite.Tests.Domain,When_saving,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_saving.cs,Should_set_date,The length of the statement  "            Assert.InRange(_eventStore.Events.First().TimeStamp' DateTimeOffset.UtcNow.AddSeconds(-1)' DateTimeOffset.UtcNow.AddSeconds(1)); " is 128.
Long Statement,CQRSlite.Tests.Routing,When_sending_command,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_sending_command.cs,Should_run_explicitly_implemented_interfaces,The length of the statement  "            _router.RegisterHandler<TestAggregateDoSomething>((x' t) => ((ICommandHandler<TestAggregateDoSomething>)handler).Handle(x)); " is 124.
Empty Catch Block,CQRSlite.Tests.Caching,When_getting_fails,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_getting_fails.cs,When_getting_fails,The method has an empty catch block.
Empty Catch Block,CQRSlite.Tests.Caching,When_saving_fails,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_fails.cs,When_saving_fails,The method has an empty catch block.
Magic Number,CQRSlite.Tests.Caching,When_getting_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_getting_aggregate.cs,Should_update_if_version_changed_in_event_store,The following statement contains a magic number: Assert.Equal(3' aggregate.Version);
Magic Number,CQRSlite.Tests.Caching,When_saving_same_aggregate_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_same_aggregate_in_parallel.cs,When_saving_same_aggregate_in_parallel,The following statement contains a magic number: var t1 = Task.Run(async () =>              {                  for (var i = 0; i < 100; i++)                  {                      var aggregate = await rep1.Get<TestAggregate>(aggregate1.Id);                      aggregate.DoSomething();                      await rep1.Save(aggregate);                  }              });
Magic Number,CQRSlite.Tests.Caching,When_saving_same_aggregate_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_same_aggregate_in_parallel.cs,When_saving_same_aggregate_in_parallel,The following statement contains a magic number: var t2 = Task.Run(async () =>              {                  for (var i = 0; i < 100; i++)                  {                      var aggregate = await rep2.Get<TestAggregate>(aggregate1.Id);                      aggregate.DoSomething();                      await rep2.Save(aggregate);                  }              });
Magic Number,CQRSlite.Tests.Caching,When_saving_same_aggregate_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_same_aggregate_in_parallel.cs,When_saving_same_aggregate_in_parallel,The following statement contains a magic number: var t3 = Task.Run(async () =>              {                  for (var i = 0; i < 100; i++)                  {                      var aggregate = await rep2.Get<TestAggregate>(aggregate1.Id);                      aggregate.DoSomething();                      await rep2.Save(aggregate);                  }              });
Magic Number,CQRSlite.Tests.Caching,When_saving_same_aggregate_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_same_aggregate_in_parallel.cs,Should_save_all_events,The following statement contains a magic number: Assert.Equal(301' _testStore.Events.Count);
Magic Number,CQRSlite.Tests.Caching,When_saving_two_aggregates_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_two_aggregates_in_parallel.cs,When_saving_two_aggregates_in_parallel,The following statement contains a magic number: var t1 = new Task(async () =>              {                  for (var i = 0; i < 100; i++)                  {                      var aggregate = await _rep1.Get<TestAggregate>(_aggregate1.Id);                      aggregate.DoSomething();                      await  _rep1.Save(aggregate);                  }              });
Magic Number,CQRSlite.Tests.Caching,When_saving_two_aggregates_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_two_aggregates_in_parallel.cs,When_saving_two_aggregates_in_parallel,The following statement contains a magic number: var t2 = new Task(async () =>              {                  for (var i = 0; i < 100; i++)                  {                      var aggregate = await _rep1.Get<TestAggregate>(_aggregate2.Id);                      aggregate.DoSomething();                      await _rep1.Save(aggregate);                  }              });
Magic Number,CQRSlite.Tests.Caching,When_saving_two_aggregates_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_two_aggregates_in_parallel.cs,Should_save_all_events,The following statement contains a magic number: Assert.Equal(202' _testStore.Events.Count);
Magic Number,CQRSlite.Tests.Caching,When_saving_two_aggregates_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_two_aggregates_in_parallel.cs,Should_distibute_events_correct,The following statement contains a magic number: Assert.Equal(100' aggregate1.DidSomethingCount);
Magic Number,CQRSlite.Tests.Caching,When_saving_two_aggregates_in_parallel,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Caching\When_saving_two_aggregates_in_parallel.cs,Should_distibute_events_correct,The following statement contains a magic number: Assert.Equal(100' aggregate2.DidSomethingCount);
Magic Number,CQRSlite.Tests.Domain,When_getting_an_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_an_aggregate.cs,Should_apply_events,The following statement contains a magic number: Assert.Equal(2' aggregate.DidSomethingCount);
Magic Number,CQRSlite.Tests.Domain,When_getting_an_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_an_aggregate.cs,Should_throw_concurrency_exception_if_tracked,The following statement contains a magic number: await Assert.ThrowsAsync<ConcurrencyException>(async () => await _session.Get<TestAggregate>(id' 100));
Magic Number,CQRSlite.Tests.Domain,When_getting_an_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_an_aggregate.cs,Should_get_correct_version,The following statement contains a magic number: Assert.Equal(3' aggregate.Version);
Magic Number,CQRSlite.Tests.Domain,When_getting_events_out_of_order,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_events_out_of_order.cs,Should_throw_concurrency_exception,The following statement contains a magic number: await Assert.ThrowsAsync<EventsOutOfOrderException>(async () => await _session.Get<TestAggregate>(id' 3));
Magic Number,CQRSlite.Tests.Domain,When_getting_events_with_wrong_id,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_events_with_wrong_id.cs,Should_throw,The following statement contains a magic number: await Assert.ThrowsAsync<EventIdIncorrectException>(async () => await _session.Get<TestAggregate>(id' 3));
Magic Number,CQRSlite.Tests.Domain,Store,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_events_with_wrong_id.cs,Get,The following statement contains a magic number: return Task.FromResult(new List<IEvent>                  {                      new TestAggregateDidSomething {Id = aggregateId' Version = 1}'                      new TestAggregateDidSomethingElse {Id = Guid.NewGuid()' Version = 2}'                      new TestAggregateDidSomething {Id = aggregateId' Version = 3}'                  }.Where(x => x.Version > fromVersion));
Magic Number,CQRSlite.Tests.Domain,Store,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_getting_events_with_wrong_id.cs,Get,The following statement contains a magic number: return Task.FromResult(new List<IEvent>                  {                      new TestAggregateDidSomething {Id = aggregateId' Version = 1}'                      new TestAggregateDidSomethingElse {Id = Guid.NewGuid()' Version = 2}'                      new TestAggregateDidSomething {Id = aggregateId' Version = 3}'                  }.Where(x => x.Version > fromVersion));
Magic Number,CQRSlite.Tests.Domain,When_saving,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_saving.cs,When_saving,The following statement contains a magic number: _aggregate = new TestAggregateNoParameterLessConstructor(2);
Magic Number,CQRSlite.Tests.Domain,When_saving,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_saving.cs,Should_set_version,The following statement contains a magic number: Assert.Equal(2' _eventStore.Events.Last().Version);
Magic Number,CQRSlite.Tests.Domain,When_saving_using_repository_with_event_publisher,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Domain\When_saving_using_repository_with_event_publisher.cs,When_saving_using_repository_with_event_publisher,The following statement contains a magic number: _aggregate = new TestAggregateNoParameterLessConstructor(2);
Magic Number,CQRSlite.Tests.Routing,When_processing_queries,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_processing_queries.cs,Should_throw_if_handler_throws,The following statement contains a magic number: await Assert.ThrowsAsync<ConcurrencyException>(                  async () => await _router.Query(new TestGetSomething {ExpectedVersion = 30}));
Magic Number,CQRSlite.Tests.Routing,When_publishing_events,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_publishing_events.cs,Should_publish_to_all_handlers,The following statement contains a magic number: Assert.Equal(2' handler.TimesRun);
Magic Number,CQRSlite.Tests.Routing,When_publishing_events,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_publishing_events.cs,Should_publish_to_all_cancellation_handlers,The following statement contains a magic number: Assert.Equal(2' handler.TimesRun);
Magic Number,CQRSlite.Tests.Routing,When_publishing_events,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_publishing_events.cs,Should_throw_if_handler_throws,The following statement contains a magic number: await Assert.ThrowsAsync<ConcurrencyException>(                  async () => await _router.Publish(new TestAggregateDidSomething {Version = -10}));
Magic Number,CQRSlite.Tests.Routing,When_registering_all_handlers_in_assembly,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_registering_all_handlers_in_assembly.cs,Should_register_all_handlers,The following statement contains a magic number: Assert.Equal(10' _testHandleRegistrar.HandlerList.Count);
Magic Number,CQRSlite.Tests.Routing,When_registering_all_handlers_in_assembly,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_registering_all_handlers_in_assembly.cs,Should_be_able_to_run_all_handlers,The following statement contains a magic number: Assert.Equal(13' _locator.Handlers.Count);
Magic Number,CQRSlite.Tests.Routing,When_registering_specific_handlers,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_registering_specific_handlers.cs,Should_register_all_handlers,The following statement contains a magic number: Assert.Equal(6' _testHandleRegistrar.HandlerList.Count);
Magic Number,CQRSlite.Tests.Routing,When_registering_specific_handlers,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_registering_specific_handlers.cs,Should_be_able_to_run_all_handlers,The following statement contains a magic number: Assert.Equal(9' _locator.Handlers.Count);
Magic Number,CQRSlite.Tests.Routing,When_sending_command,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Routing\When_sending_command.cs,Should_throw_if_handler_throws,The following statement contains a magic number: await Assert.ThrowsAsync<ConcurrencyException>(                  async () => await _router.Send(new TestAggregateDoSomething {ExpectedVersion = 30}));
Magic Number,CQRSlite.Tests.Snapshotting,When_getting_not_snapshotable_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_getting_not_snapshotable_aggregate.cs,Should_restore_from_events,The following statement contains a magic number: Assert.Equal(3' _aggregate.Version);
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_not_snapshotable_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_not_snapshotable_aggregate.cs,When_saving_a_not_snapshotable_aggregate,The following statement contains a magic number: i < 200
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_not_snapshotable_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_not_snapshotable_aggregate.cs,Should_save_events,The following statement contains a magic number: Assert.Equal(201' _eventStore.Events.Count);
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_snapshotable_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_snapshotable_aggregate.cs,When_saving_a_snapshotable_aggregate,The following statement contains a magic number: i < 200
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_snapshotable_aggregate,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_snapshotable_aggregate.cs,Should_save_last_version_number,The following statement contains a magic number: Assert.Equal(200' _snapshotStore.SavedVersion);
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_snapshotable_aggregate_for_each_change,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_snapshotable_aggregate_for_each_change.cs,When_saving_a_snapshotable_aggregate_for_each_change,The following statement contains a magic number: i < 150
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_snapshotable_aggregate_for_each_change,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_snapshotable_aggregate_for_each_change.cs,Should_snapshot_100th_change,The following statement contains a magic number: Assert.Equal(100' _snapshotStore.SavedVersion);
Magic Number,CQRSlite.Tests.Snapshotting,When_saving_a_snapshotable_aggregate_for_each_change,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Snapshotting\When_saving_a_snapshotable_aggregate_for_each_change.cs,Should_get_aggregate_back_correct,The following statement contains a magic number: Assert.Equal(150' (await _session.Get<TestSnapshotAggregate>(_aggregate.Id)).Number);
Magic Number,CQRSlite.Tests.Substitutes,TestAggregateDoSomethingHandler,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestCommands.cs,Handle,The following statement contains a magic number: await Task.Delay(50' token);
Magic Number,CQRSlite.Tests.Substitutes,TestAggregateDidSomethingHandler,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestEvents.cs,Handle,The following statement contains a magic number: await Task.Delay(50' token);
Magic Number,CQRSlite.Tests.Substitutes,TestAggregateDidSomethingHandler,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestEvents.cs,Handle,The following statement contains a magic number: message.Version == -10
Magic Number,CQRSlite.Tests.Substitutes,TestEventStore,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestEventStore.cs,Get,The following statement contains a magic number: return Task.FromResult(new List<IEvent>              {                  new TestAggregateDidSomething {Id = aggregateId' Version = 1}'                  new TestAggregateDidSomethingElse {Id = aggregateId' Version = 2}'                  new TestAggregateDidSomething {Id = aggregateId' Version = 3}'              }.Where(x => x.Version > version));
Magic Number,CQRSlite.Tests.Substitutes,TestEventStore,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestEventStore.cs,Get,The following statement contains a magic number: return Task.FromResult(new List<IEvent>              {                  new TestAggregateDidSomething {Id = aggregateId' Version = 1}'                  new TestAggregateDidSomethingElse {Id = aggregateId' Version = 2}'                  new TestAggregateDidSomething {Id = aggregateId' Version = 3}'              }.Where(x => x.Version > version));
Magic Number,CQRSlite.Tests.Substitutes,TestEventStoreWithBugs,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestEventStoreWithBugs.cs,Get,The following statement contains a magic number: return Task.FromResult((IEnumerable<IEvent>) new List<IEvent>              {                  new TestAggregateDidSomething {Id = aggregateId' Version = 3}'                  new TestAggregateDidSomething {Id = aggregateId' Version = 2}'                  new TestAggregateDidSomethingElse {Id = aggregateId' Version = 1}              });
Magic Number,CQRSlite.Tests.Substitutes,TestEventStoreWithBugs,D:\research\architectureSmells\repos\gautema_CQRSlite\Framework\CQRSlite.Tests\Substitutes\TestEventStoreWithBugs.cs,Get,The following statement contains a magic number: return Task.FromResult((IEnumerable<IEvent>) new List<IEvent>              {                  new TestAggregateDidSomething {Id = aggregateId' Version = 3}'                  new TestAggregateDidSomething {Id = aggregateId' Version = 2}'                  new TestAggregateDidSomethingElse {Id = aggregateId' Version = 1}              });
