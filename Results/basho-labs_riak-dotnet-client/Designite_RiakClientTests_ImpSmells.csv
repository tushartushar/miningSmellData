Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,RiakClientTests.Auth,AuthTestBase,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Auth\AuthTestBase.cs,,The length of the parameter riakUserClientCertFileRelativePath is 34.
Long Identifier,RiakClientTests.Models.MapReduce.Inputs,BucketKeyKeyDataInputSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\BucketKeyKeyDataInputSerializationTests.cs,,The length of the parameter SerializedRiakBucketKeyKeyDataInput is 35.
Long Identifier,RiakClientTests.Models.MapReduce.Inputs,BucketKeyInputSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\BucketKeyInputSerializationTests.cs,,The length of the parameter SerializedRiakBucketKeyInputWithTypes is 37.
Long Identifier,RiakClientTests.Models.MapReduce,RiakMapReduceTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\RiakMapReduceTests.cs,,The length of the parameter ComplexMrJobWithTypeAndFilterText is 33.
Long Statement,RiakClientTests.Client,WhenSettingBucketPropertiesWithoutExtendedProperties,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Client\SetBucketPropertiesTests.cs,SetUp,The length of the statement  "            Cluster.ConnectionMock.Setup(m => m.PbcWriteRead(It.IsAny<RpbSetBucketReq>()' MessageCode.RpbSetBucketResp)).Returns(result); " is 125.
Long Statement,RiakClientTests.Client,WhenSettingBucketPropertiesWithoutExtendedProperties,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Client\SetBucketPropertiesTests.cs,PbcInterfaceIsInvokedWithAppropriateValues,The length of the statement  "            Cluster.ConnectionMock.Verify(m => m.PbcWriteRead(It.Is<RpbSetBucketReq>(r => r.props.allow_mult)' MessageCode.RpbSetBucketResp)' Times.Once()); " is 144.
Long Statement,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,ObjectsAreConvertedProperly,The length of the statement  "            json.ShouldEqual("{\"Name\":{\"FirstName\":\"OJ\"'\"Surname\":\"Reeves\"}'\"PhoneNumbers\":[{\"Number\":\"12345678\"'\"NumberType\":1}]'\"DateOfBirth\":\"1978-12-05T00:00:00Z\"'\"Email\":\"oj@buffered.io\"}"); " is 209.
Long Statement,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,NonJsonObjectsCantBeDeserialisedFromJson,The length of the statement  "            var obj = new RiakObject("bucket"' "key"' "{\"Name\":{\"FirstName\":\"OJ\"'\"Surname\":\"Reeves\"}'\"PhoneNumbers\":[{\"Number\":\"12345678\"'\"NumberType\":1}]'\"DateOfBirth\":\"1978-12-05T00:00:00Z\"'\"Email\":\"oj@buffered.io\"}"' RiakConstants.ContentTypes.TextPlain); " is 272.
Long Statement,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,JsonConversionTimerTest,The length of the statement  "            Console.WriteLine("Serialisation took a total of {0} - {1} per iteration"' sw.Elapsed' new TimeSpan(sw.Elapsed.Ticks / iterations)); " is 132.
Long Statement,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,JsonConversionTimerTest,The length of the statement  "            Console.WriteLine("Deserialisation took a total of {0} - {1} per iteration"' sw.Elapsed' new TimeSpan(sw.Elapsed.Ticks / iterations)); " is 134.
Long Statement,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,CustomSerializerWillSerializeJson,The length of the statement  "            json.ShouldEqual("{\"Name\":{\"FirstName\":\"OJ\"'\"Surname\":\"Reeves\"}'\"PhoneNumbers\":[{\"Number\":\"12345678\"'\"NumberType\":1}]'\"DateOfBirth\":\"1978-12-05T00:00:00Z\"'\"Email\":\"oj@buffered.io\"}"); " is 209.
Long Statement,RiakClientTests.Json,Person,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\TestObjects.cs,Equals,The length of the statement  "            return Equals(other.Name' Name) && other.PhoneNumbers.SequenceEqual(PhoneNumbers) && other.DateOfBirth.Equals(DateOfBirth) && Equals(other.Email' Email); " is 153.
Long Statement,RiakClientTests.Models.MapReduce.Inputs,RiakIndexStaticTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\RiakIndexStaticTests.cs,TestAllKeysWorks,The length of the statement  "            Assert.AreEqual("\"inputs\":{\"bucket\":[\"my_bucket_type\"'\"my_bucket\"]'\"index\":\"$bucket\"'\"key\":\"my_bucket\"}"' json); " is 128.
Long Statement,RiakClientTests.Models.MapReduce.Inputs,RiakIndexStaticTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\RiakIndexStaticTests.cs,TestKeysWorks,The length of the statement  "            Assert.AreEqual("\"inputs\":{\"bucket\":[\"my_bucket_type\"'\"my_bucket\"]'\"index\":\"$key\"'\"start\":\"dave\"'\"end\":\"ed\"}"' json); " is 137.
Long Statement,RiakClientTests.Models.MapReduce.Inputs,RiakModuleFunctionArgInputSerializationTest,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\RiakModuleFunctionArgInputSerializationTest.cs,EnsureMFAInputSeralizesCorrectly,The length of the statement  "            Assert.AreEqual("\"inputs\":{\"module\":\"my_mod\"'\"function\":\"my_fun\"'\"arg\":[\"arg1\"'\"arg2\"'\"arg3\"]}"' json); " is 121.
Long Statement,RiakClientTests.Messages,MessageCodeTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Messages\MessageCodeTests.cs,AllMessageCodesInMessageCodeEnum,The length of the statement  "                Assert.Ignore("Please run 'git submodule update --init' before running this test. Required file is missing: '{0}'"' riak_pb_messages_file); " is 139.
Long Statement,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ValueTextEscapedCorrectly,The length of the statement  "                .Search(@"This is\ a ""Test"" to make 'sure' it (the text) is [characterised] correctly (master:slave) + includes - this url: http://foo.com/bar?baz=quux") " is 155.
Long Statement,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ValueTextEscapedCorrectly,The length of the statement  "            var expected = @"key:This\ is\\\ a\ \""Test\""\ to\ make\ \'sure\'\ it\ \(the\ text\)\ is\ \[characterised\]\ correctly\ \(master\:slave\)\ \+\ includes\ \-\ this\ url\:\ http\:\/\/foo.com\/bar\?baz=quux"; " is 205.
Long Statement,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,GroupedTermsSerializeCorrectly,The length of the statement  "            Assert.AreEqual("key:foo OR key:bar AND (key:baz OR key:quux) OR (key:baz AND key:schmoopy^6 AND (key:dooby OR key:fooby))"' q); " is 128.
Long Statement,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,GroupedNotTermsSerializeCorrectly,The length of the statement  "            Assert.AreEqual("key:foo OR NOT key:bar AND NOT (key:baz OR key:quux) OR (key:baz AND key:schmoopy^6 AND (key:dooby OR NOT key:fooby))"' q); " is 140.
Long Statement,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ComplicatedTermsSerializeCorrectly,The length of the statement  "            Assert.AreEqual(@"key:foo OR NOT key:bar AND key:[10 TO 20] AND NOT (key:baz OR key:quux OR key:{la TO da}) AND key:""testing these\ words""~3 OR (key:baz AND key:schmoopy\ for\ president\+^6 AND (key:dooby* OR NOT key:fooby))"' q); " is 232.
Long Statement,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ComplicatedTermsWithExtraFieldsSerializeCorrectly,The length of the statement  "            Assert.AreEqual(@"key:foo OR NOT key:bar AND key:[10 TO 20] OR (otherkey:baz AND hash:schmoopy\ for\ president\+*^6 AND (bash:dooby OR NOT dash:fooby) OR bash:smelly) AND NOT (otherkey:baz OR zoom:quux OR zoom:{la TO da}) OR NOT lala:""wouldn\'t haven\'t""~10"' q); " is 265.
Long Statement,RiakClientTests.RiakAsyncClientTests,WhenCallingGetWithObjectIdAsync,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakAsyncClientTests.cs,SetUp,The length of the statement  "            ClientMock.Setup(m => m.Get(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<RiakGetOptions>())).Returns(RiakResult<RiakObject>.Success(new RiakObject("foo"' "bar"' "baz"))); " is 174.
Long Statement,RiakClientTests.RiakAsyncClientTests,WhenCallingGetWithBucketKeyAsync,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakAsyncClientTests.cs,SetUp,The length of the statement  "            ClientMock.Setup(m => m.Get(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<RiakGetOptions>())).Returns(RiakResult<RiakObject>.Success(new RiakObject("foo"' "bar"' "baz"))); " is 174.
Magic Number,RiakClientTests.Client,ClientTestBase,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Client\ClientTestBase.cs,ClientTestBase,The following statement contains a magic number: ClientId = System.Text.Encoding.Default.GetBytes("fadjskl").Take(4).ToArray();
Magic Number,RiakClientTests.Client,ClientTestBase,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Client\ClientTestBase.cs,ClientTestBase,The following statement contains a magic number: var opts = new RiakClientOptions(3' false);
Magic Number,RiakClientTests.Client,MockCluster,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Client\MockCluster.cs,MockCluster,The following statement contains a magic number: RetryWaitTime = TimeSpan.FromMilliseconds(200);
Magic Number,RiakClientTests.Comms.RoundRobinStrategyTests,WhenAddingAndRemovingNodesConstantlyOnDifferentThreads,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Comms\RoundRobinStrategyTests.cs,NoExceptionsShouldBeThrown,The following statement contains a magic number: var results = new Exception[3];
Magic Number,RiakClientTests.Comms.RoundRobinStrategyTests,WhenAddingAndRemovingNodesConstantlyOnDifferentThreads,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Comms\RoundRobinStrategyTests.cs,NoExceptionsShouldBeThrown,The following statement contains a magic number: Parallel.For(0' 3' i =>              {                  results[i] = DoStuffWithNodes(roundRobin' CreateMockNodes());              });
Magic Number,RiakClientTests.Comms.RoundRobinStrategyTests,WhenAddingAndRemovingNodesConstantlyOnDifferentThreads,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Comms\RoundRobinStrategyTests.cs,DoStuffWithNodes,The following statement contains a magic number: switch (rnd.Next(0' 3))                      {                          case 1:                              strategy.SelectNode();                              break;                          case 2:                              if (unavailableNodes.Count > 0)                              {                                  var node = unavailableNodes.Dequeue();                                  strategy.AddNode(node);                                  availableNodes.Enqueue(node);                              }                              else                              {                                  --i;                              }                              break;                          default:                              if (availableNodes.Count > 0)                              {                                  var node = availableNodes.Dequeue();                                  strategy.RemoveNode(node);                                  unavailableNodes.Enqueue(node);                              }                              else                              {                                  --i;                              }                              break;                        }
Magic Number,RiakClientTests.Comms.RoundRobinStrategyTests,WhenAddingAndRemovingNodesConstantlyOnDifferentThreads,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Comms\RoundRobinStrategyTests.cs,DoStuffWithNodes,The following statement contains a magic number: switch (rnd.Next(0' 3))                      {                          case 1:                              strategy.SelectNode();                              break;                          case 2:                              if (unavailableNodes.Count > 0)                              {                                  var node = unavailableNodes.Dequeue();                                  strategy.AddNode(node);                                  availableNodes.Enqueue(node);                              }                              else                              {                                  --i;                              }                              break;                          default:                              if (availableNodes.Count > 0)                              {                                  var node = availableNodes.Dequeue();                                  strategy.RemoveNode(node);                                  unavailableNodes.Enqueue(node);                              }                              else                              {                                  --i;                              }                              break;                        }
Magic Number,RiakClientTests.Comms.RoundRobinStrategyTests,WhenAddingAndRemovingNodesConstantlyOnDifferentThreads,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Comms\RoundRobinStrategyTests.cs,DoStuffWithNodes,The following statement contains a magic number: i < 1000000
Magic Number,RiakClientTests.Comms.RoundRobinStrategyTests,WhenAddingAndRemovingNodesConstantlyOnDifferentThreads,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Comms\RoundRobinStrategyTests.cs,CreateMockNodes,The following statement contains a magic number: i < 10
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,ObjectsAreConvertedProperly,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,ObjectsAreConvertedProperly,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,ObjectsAreConvertedProperly,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,JsonConversionTimerTest,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,JsonConversionTimerTest,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,JsonConversionTimerTest,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,JsonConversionTimerTest,The following statement contains a magic number: const int iterations = 1000000;
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,CustomSerializerWillSerializeJson,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,CustomSerializerWillSerializeJson,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json.RiakObjectConversionTests,WhenStoringDataIntoRiakObjectsAsJson,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\RiakObjectConversionTests.cs,CustomSerializerWillSerializeJson,The following statement contains a magic number: var testPerson = new Person              {                  DateOfBirth = new DateTime(1978' 12' 5' 0' 0' 0' DateTimeKind.Utc)'                  Email = "oj@buffered.io"'                  Name = new Name                  {                      FirstName = "OJ"'                      Surname = "Reeves"                  }'                  PhoneNumbers = new List<PhoneNumber>                  {                      new PhoneNumber                      {                          Number = "12345678"'                          NumberType = PhoneNumberType.Home                      }                  }              };
Magic Number,RiakClientTests.Json,Person,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\TestObjects.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (PhoneNumbers != null ? PhoneNumbers.GetHashCode() : 0);
Magic Number,RiakClientTests.Json,Person,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\TestObjects.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ DateOfBirth.GetHashCode();
Magic Number,RiakClientTests.Json,Person,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\TestObjects.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Email != null ? Email.GetHashCode() : 0);
Magic Number,RiakClientTests.Json,Name,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\TestObjects.cs,GetHashCode,The following statement contains a magic number: return ((FirstName != null ? FirstName.GetHashCode() : 0) * 397) ^ (Surname != null ? Surname.GetHashCode() : 0);
Magic Number,RiakClientTests.Json,PhoneNumber,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Json\TestObjects.cs,GetHashCode,The following statement contains a magic number: return ((Number != null ? Number.GetHashCode() : 0) * 397) ^ NumberType.GetHashCode();
Magic Number,RiakClientTests.Models.MapReduce.Inputs,BucketKeyKeyDataInputSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\BucketKeyKeyDataInputSerializationTests.cs,RiakBucketKeyKeyDataInputSerializesCorrectlyOldInterface,The following statement contains a magic number: var inputs = new List<Tuple<string' string' object>>              {                  new Tuple<string' string' object>("foo"' "baz"' 130)'                  new Tuple<string' string' object>("dooby"' "scooby"' new {la = "ding"' ray = "me"' wit = 0})              };
Magic Number,RiakClientTests.Models.MapReduce.Inputs,BucketKeyKeyDataInputSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\BucketKeyKeyDataInputSerializationTests.cs,RiakBucketKeyKeyDataInputSerializesCorrectly,The following statement contains a magic number: var inputs = new List<Tuple<RiakObjectId' object>>              {                  new Tuple<RiakObjectId' object>(new RiakObjectId("foo"' "baz")' 130)'                  new Tuple<RiakObjectId' object>(new RiakObjectId("dooby"' "scooby")'                      new {la = "ding"' ray = "me"' wit = 0})              };
Magic Number,RiakClientTests.Models.MapReduce.Inputs,BucketKeyKeyDataInputSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\BucketKeyKeyDataInputSerializationTests.cs,RiakBucketKeyKeyDataInputWithTypeSerializesCorrectly,The following statement contains a magic number: var inputs = new List<Tuple<RiakObjectId' object>>              {                  new Tuple<RiakObjectId' object>(new RiakObjectId("qux_type"' "foo"' "baz")' 130)'                  new Tuple<RiakObjectId' object>(new RiakObjectId("dog_type"' "dooby"' "scooby")'                      new {la = "ding"' ray = "me"' wit = 0})              };
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexEqualitySerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIndexSuffixIsSetCorrectly,The following statement contains a magic number: var input = new RiakIntIndexEqualityInput(new RiakIndexId("bucket"' "index")' 42);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexEqualitySerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexEqualitySerializationOldInterface,The following statement contains a magic number: var input = new RiakIntIndexEqualityInput("bucket"' "index"' 42);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexEqualitySerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexEqualitySerialization,The following statement contains a magic number: var input = new RiakIntIndexEqualityInput(new RiakIndexId("bucket"' "index")' 42);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexEqualitySerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexEqualitySerializationWithType,The following statement contains a magic number: var input = new RiakIntIndexEqualityInput(new RiakIndexId("type"' "bucket"' "index")' 42);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIndexSuffixIsSetCorrectly,The following statement contains a magic number: var input = new RiakIntIndexRangeInput(new RiakIndexId("bucket"' "index")' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIndexSuffixIsSetCorrectly,The following statement contains a magic number: var input = new RiakIntIndexRangeInput(new RiakIndexId("bucket"' "index")' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexRangeSerializationOldInterface,The following statement contains a magic number: var input = new RiakIntIndexRangeInput("bucket"' "index"' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexRangeSerializationOldInterface,The following statement contains a magic number: var input = new RiakIntIndexRangeInput("bucket"' "index"' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexRangeSerialization,The following statement contains a magic number: var input = new RiakIntIndexRangeInput(new RiakIndexId("bucket"' "index")' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexRangeSerialization,The following statement contains a magic number: var input = new RiakIntIndexRangeInput(new RiakIndexId("bucket"' "index")' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexRangeSerializationWithType,The following statement contains a magic number: var input = new RiakIntIndexRangeInput(new RiakIndexId("type"' "bucket"' "index")' 42' 100);
Magic Number,RiakClientTests.Models.MapReduce.Inputs,IntIndexRangeSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\Inputs\IndexInputSerializationTests.cs,TestIntIndexRangeSerializationWithType,The following statement contains a magic number: var input = new RiakIntIndexRangeInput(new RiakIndexId("type"' "bucket"' "index")' 42' 100);
Magic Number,RiakClientTests.Models,TimeoutTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\TimeoutTests.cs,OtherNegValues_AreInvalidTimeouts,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() => new Timeout(-32));
Magic Number,RiakClientTests.Models,TimeoutTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\TimeoutTests.cs,OtherNegValues_AreInvalidTimeouts,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() => new Timeout(-1024));
Magic Number,RiakClientTests.Models,TimeoutTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\TimeoutTests.cs,ToString_ReturnsMilliseconds,The following statement contains a magic number: var t = new Timeout(123456);
Magic Number,RiakClientTests.Models,RiakBucketPropertyTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakBucketPropertyTests.cs,WhenAddingAndRemovingPreAndPostCommitHooksThingsWorkAsExpected,The following statement contains a magic number: props.PreCommitHooks.Count.ShouldEqual(2);
Magic Number,RiakClientTests.Models,RiakBucketPropertyTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakBucketPropertyTests.cs,WhenAddingAndRemovingPreAndPostCommitHooksThingsWorkAsExpected,The following statement contains a magic number: props.PreCommitHooks.Count.ShouldEqual(2);
Magic Number,RiakClientTests.Models,RiakBucketPropertyTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakBucketPropertyTests.cs,WhenAddingAndRemovingPreAndPostCommitHooksThingsWorkAsExpected,The following statement contains a magic number: props.PreCommitHooks.Count.ShouldEqual(2);
Magic Number,RiakClientTests.Models,RiakBucketPropertyTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakBucketPropertyTests.cs,WhenRoundtrippingHllPrecisionItShouldStayTheSame,The following statement contains a magic number: var props = new RiakBucketProperties().SetHllPrecision(14);
Magic Number,RiakClientTests.Models,RiakBucketPropertyTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakBucketPropertyTests.cs,WhenRoundtrippingHllPrecisionItShouldStayTheSame,The following statement contains a magic number: Assert.AreEqual(14' newProps.HllPrecision.Value);
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,NegTwoThroughNegFive_AreValidQuorums,The following statement contains a magic number: i >= -5
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WellKnownUnsignedIntValues_AreValidQuorums,The following statement contains a magic number: quorum_uint = uint.MaxValue - 2;
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WellKnownUnsignedIntValues_AreValidQuorums,The following statement contains a magic number: quorum_uint = uint.MaxValue - 3;
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WellKnownUnsignedIntValues_AreValidQuorums,The following statement contains a magic number: quorum_uint = uint.MaxValue - 4;
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WellKnownUnsignedIntValues_CastToValidQuorums,The following statement contains a magic number: quorum_uint = uint.MaxValue - 2;
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WellKnownUnsignedIntValues_CastToValidQuorums,The following statement contains a magic number: quorum_uint = uint.MaxValue - 3;
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WellKnownUnsignedIntValues_CastToValidQuorums,The following statement contains a magic number: quorum_uint = uint.MaxValue - 4;
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,OtherNegValues_AreInvalidQuorums,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() => new Quorum(-32));
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,OtherNegValues_AreInvalidQuorums,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() => new Quorum(-1024));
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,QuorumTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\QuorumTests.cs,WhenUsingValidQuorumString_ResultsInValidQuorumValue,The following statement contains a magic number: var validQuorumData = new Dictionary<string' int[]>              {                  { "one"' new[] { 1' Quorum.WellKnown.One } }'                  { "One"' new[] { 1' Quorum.WellKnown.One } }'                  { "ONE"' new[] { 1' Quorum.WellKnown.One } }'                  { "onE"' new[] { 1' Quorum.WellKnown.One } }'                  { "quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "Quorum"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "QUORUM"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "quOrUm"' new[] { 2' Quorum.WellKnown.Quorum } }'                  { "all"' new[] { 3' Quorum.WellKnown.All } }'                  { "All"' new[] { 3' Quorum.WellKnown.All } }'                  { "ALL"' new[] { 3' Quorum.WellKnown.All } }'                  { "alL"' new[] { 3' Quorum.WellKnown.All } }'                  { "default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "Default"' new[] { 4' Quorum.WellKnown.Default } }'                  { "DEFAULT"' new[] { 4' Quorum.WellKnown.Default } }'                  { "deFaulT"' new[] { 4' Quorum.WellKnown.Default } }              };
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexNameManglingIsHandledAutomatically,The following statement contains a magic number: riakObject.IntIndex("age").Add(32);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexNameManglingIsHandledAutomatically,The following statement contains a magic number: riakObject.IntIndex("cats_int").Add(2);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.BinIndex("jobs").Values.Count.ShouldEqual(4);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.BinIndex("jobs").Values.Count.ShouldEqual(2);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.BinIndex("jobs").Values.Count.ShouldEqual(3);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Set(10);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Add(20' 40' 999);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Add(20' 40' 999);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Add(20' 40' 999);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Values.Count.ShouldEqual(4);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Remove(40' 999);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Remove(40' 999);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Values.Count.ShouldEqual(2);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Set(51' 52' 53);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Set(51' 52' 53);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Set(51' 52' 53);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Values.Count.ShouldEqual(3);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,RiakIndexingSupportsMultipleValuesCorrectly,The following statement contains a magic number: riakObject.IntIndex("years").Values.Contains(52).ShouldBeTrue();
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,VectorClocksCanBeSetThroughInterface,The following statement contains a magic number: var vclock = new byte[] { 0' 1' 2' 3' 4' 5 };
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,VectorClocksCanBeSetThroughInterface,The following statement contains a magic number: var vclock = new byte[] { 0' 1' 2' 3' 4' 5 };
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,VectorClocksCanBeSetThroughInterface,The following statement contains a magic number: var vclock = new byte[] { 0' 1' 2' 3' 4' 5 };
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,VectorClocksCanBeSetThroughInterface,The following statement contains a magic number: var vclock = new byte[] { 0' 1' 2' 3' 4' 5 };
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,SecondaryIndexesAreForcedToLowerCase,The following statement contains a magic number: obj.IntIndex("MixedCase").Set(10);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,SecondaryIndexesAreForcedToLowerCase,The following statement contains a magic number: obj.IntIndex("MixedCase").Values.First().ShouldEqual(10);
Magic Number,RiakClientTests.Models,RiakObjectTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\RiakObjectTests.cs,SecondaryIndexesAreForcedToLowerCase,The following statement contains a magic number: obj.IntIndex("mixedcase").Values.First().ShouldEqual(10);
Magic Number,RiakClientTests.Models.Search,RiakSearchResultTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\Search\RiakSearchResultTests.cs,TestPublicConstructor,The following statement contains a magic number: var result = new RiakSearchResult(100.0f' 42' new List<RiakSearchResultDocument>());
Magic Number,RiakClientTests.Models.Search,RiakSearchResultTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\Search\RiakSearchResultTests.cs,TestPublicConstructor,The following statement contains a magic number: var result = new RiakSearchResult(100.0f' 42' new List<RiakSearchResultDocument>());
Magic Number,RiakClientTests.Models.Search,RiakSearchResultTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\Search\RiakSearchResultTests.cs,TestPublicConstructor,The following statement contains a magic number: result.MaxScore.ShouldEqual(100.0f);
Magic Number,RiakClientTests.Models.Search,RiakSearchResultTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\Search\RiakSearchResultTests.cs,TestPublicConstructor,The following statement contains a magic number: result.NumFound.ShouldEqual(42);
Magic Number,RiakClientTests.Models.Search,RiakSearchResultTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\Search\RiakSearchResultTests.cs,TestPublicConstructorThrowsExceptionWhenDocumentsIsNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new RiakSearchResult(100.0f' 42' null));
Magic Number,RiakClientTests.Models.Search,RiakSearchResultTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\Search\RiakSearchResultTests.cs,TestPublicConstructorThrowsExceptionWhenDocumentsIsNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new RiakSearchResult(100.0f' 42' null));
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,SimpleUnaryTermWithBoostSerializesCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Boost(5)                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,SimpleUnaryTermWithProximitySerializesCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Proximity(5' "foo"' "bar"' "baz")                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,SimpleOrAndTermWithBoostSerializesCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Boost(3)                  .And("baz").Boost(5)                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,SimpleOrAndTermWithBoostSerializesCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Boost(3)                  .And("baz").Boost(5)                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,GroupedTermsSerializeCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar")                  .And("baz"' t => t.Or("quux"))                  .Or("baz"' t => t.And("schmoopy")                      .Boost(6)                      .And("dooby"' x => x.Or("fooby")))                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,GroupedNotTermsSerializeCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Not()                  .And("baz"' t => t.Or("quux")).Not()                  .Or("baz"' t => t.And("schmoopy")                      .Boost(6)                      .And("dooby"' x => x.Or("fooby").Not()))                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ComplicatedTermsSerializeCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Not()                  .AndBetween("10"' "20")                  .And("baz"' t => t.Or("quux").OrBetween("la"' "da"' false)).Not()                  .AndProximity(3' "testing"' "these words")                  .Or("baz"' t => t.And("schmoopy for president+")                      .Boost(6)                      .And(Token.StartsWith("dooby")' x => x.Or("fooby").Not()))                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ComplicatedTermsSerializeCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Not()                  .AndBetween("10"' "20")                  .And("baz"' t => t.Or("quux").OrBetween("la"' "da"' false)).Not()                  .AndProximity(3' "testing"' "these words")                  .Or("baz"' t => t.And("schmoopy for president+")                      .Boost(6)                      .And(Token.StartsWith("dooby")' x => x.Or("fooby").Not()))                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ComplicatedTermsWithExtraFieldsSerializeCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Not()                  .AndBetween("10"' "20"' true)                  .Or("otherkey"' "baz"' t => t.And("hash"' Token.StartsWith("schmoopy for president+"))                      .Boost(6)                      .And("bash"' "dooby"' x => x.Or("dash"' "fooby").Not())                      .Or("smelly"))                  .And("baz"' t => t.Or("zoom"' "quux").OrBetween("la"' "da"' false)).Not()                  .OrProximity("lala"' 10' "wouldn't"' "haven't").Not()                  .Build();
Magic Number,RiakClientTests,SimpleRiakSearchSerializationTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\RiakSearchTests.cs,ComplicatedTermsWithExtraFieldsSerializeCorrectly,The following statement contains a magic number: var s = new RiakFluentSearch("bucket"' "key")                  .Search("foo")                  .Or("bar").Not()                  .AndBetween("10"' "20"' true)                  .Or("otherkey"' "baz"' t => t.And("hash"' Token.StartsWith("schmoopy for president+"))                      .Boost(6)                      .And("bash"' "dooby"' x => x.Or("dash"' "fooby").Not())                      .Or("smelly"))                  .And("baz"' t => t.Or("zoom"' "quux").OrBetween("la"' "da"' false)).Not()                  .OrProximity("lala"' 10' "wouldn't"' "haven't").Not()                  .Build();
Magic Number,RiakClientTests.Models.MapReduce,RiakMapReduceTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\RiakMapReduceTests.cs,BuildingSimpleMapReduceJobsWithTimeoutProducesTheCorrectCommand,The following statement contains a magic number: var query = new RiakMapReduceQuery(100200)                  .Inputs("animals")                  .MapJs(m => m.Source("function(v) { return [v]; }").Keep(true));
Magic Number,RiakClientTests.Models.MapReduce,RiakMapReduceTests,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\Models\MapReduce\RiakMapReduceTests.cs,BuildingMapReducePhaseWithArgumentsArrayProducesCorrectResult,The following statement contains a magic number: var query = new RiakMapReduceQuery()                  .Inputs("animals")                  .ReduceJs(c => c.Name("Riak.reduceSlice").Keep(true).Argument(new[] { 1' 10 }));
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimpleKeyFilters,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,TokenizeCorrectlyConvertsToJson,The following statement contains a magic number: var tokenize = new Tokenize("/"' 4);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,GreaterThanCorrectlyConvertsToJson,The following statement contains a magic number: var gt = new GreaterThan<int>(50);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,LessThanCorrectlyConvertsToJson,The following statement contains a magic number: var lt = new LessThan<int>(10);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,GreaterThanOrEqualCorrectlyConvertsToJson,The following statement contains a magic number: var gte = new GreaterThanOrEqualTo<int>(2000);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,LessThanOrEqualCorrectlyConvertsToJson,The following statement contains a magic number: var lte = new LessThanOrEqualTo<int>(-2);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,BetweenCorrectlyConvertsToJson,The following statement contains a magic number: var between = new Between<int>(10' 20' false);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,BetweenCorrectlyConvertsToJson,The following statement contains a magic number: var between = new Between<int>(10' 20' false);
Magic Number,RiakClientTests.KeyFilters,WhenConstructingSimplePredicates,D:\research\architectureSmells\repos\basho-labs_riak-dotnet-client\src\RiakClientTests\KeyFilters\KeyFilterTests.cs,SimilarToCorrectlyConvertsToJson,The following statement contains a magic number: var st = new SimilarTo<string>("newyork"' 3);
