Implementation smell,Namespace,Class,File,Method,Description
Long Method,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The method has 208 lines of code.
Long Method,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,The method has 146 lines of code.
Long Method,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The method has 118 lines of code.
Long Method,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The method has 107 lines of code.
Long Method,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WriteXmlElement,The method has 103 lines of code.
Complex Method,Catel,StringToObjectHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Helpers\StringToObjectHelper.cs,ToRightType,Cyclomatic complexity of the method is 20
Complex Method,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,Cyclomatic complexity of the method is 16
Complex Method,Catel.Data,ValidationContextHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\ValidationContextHelper.cs,GetChanges,Cyclomatic complexity of the method is 9
Complex Method,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RaisePropertyChanged,Cyclomatic complexity of the method is 14
Complex Method,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CanConstructorBeUsed,Cyclomatic complexity of the method is 13
Complex Method,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,TryCreateToConstruct,Cyclomatic complexity of the method is 10
Complex Method,Catel.Reflection,TypeHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\TypeHelper.cs,GetInnerTypes,Cyclomatic complexity of the method is 10
Complex Method,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetTypeBySplittingInternals,Cyclomatic complexity of the method is 8
Complex Method,Catel.Runtime.Serialization,ObjectAdapter,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\ObjectAdapter.cs,GetMemberValue,Cyclomatic complexity of the method is 8
Complex Method,Catel.Runtime.Serialization,SerializationModelInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationModelInfo.cs,SerializationModelInfo,Cyclomatic complexity of the method is 8
Complex Method,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,Cyclomatic complexity of the method is 10
Complex Method,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,Cyclomatic complexity of the method is 10
Complex Method,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,Cyclomatic complexity of the method is 19
Complex Method,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,Cyclomatic complexity of the method is 15
Long Parameter List,Catel.ApiCop.Rules,InitializationApiCopRule,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ApiCop\Rules\InitializationApiCopRule.cs,InitializationApiCopRule,The method has 5 parameters. Parameters: name' description' level' recommendedInitializationMode' url
Long Parameter List,Catel,Argument,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Argument.cs,IsNotOutOfRange,The method has 5 parameters. Parameters: paramName' paramValue' minimumValue' maximumValue' validation
Long Parameter List,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakGenericEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakPropertyChangedEvent,The method has 5 parameters. Parameters: target' source' handler' throwWhenSubscriptionFails' eventName
Long Parameter List,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakCollectionChangedEvent,The method has 5 parameters. Parameters: target' source' handler' throwWhenSubscriptionFails' eventName
Long Parameter List,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakGenericEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakPropertyChangedEvent,The method has 5 parameters. Parameters: target' source' handler' throwWhenSubscriptionFails' eventName
Long Parameter List,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakCollectionChangedEvent,The method has 5 parameters. Parameters: target' source' handler' throwWhenSubscriptionFails' eventName
Long Parameter List,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakGenericEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakPropertyChangedEvent,The method has 5 parameters. Parameters: target' source' handler' throwWhenSubscriptionFails' eventName
Long Parameter List,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakCollectionChangedEvent,The method has 5 parameters. Parameters: target' source' handler' throwWhenSubscriptionFails' eventName
Long Parameter List,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The method has 5 parameters. Parameters: target' source' eventName' handler' throwWhenSubscriptionFails
Long Parameter List,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The method has 6 parameters. Parameters: target' source' eventName' handler' eventSourceType' throwWhenSubscriptionFails
Long Parameter List,Catel.Data,AdvancedPropertyChangedEventArgs,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\EventArgs\AdvancedPropertyChangedEventArgs.cs,AdvancedPropertyChangedEventArgs,The method has 5 parameters. Parameters: originalSender' latestSender' propertyName' oldValue' newValue
Long Parameter List,Catel.Data,AdvancedPropertyChangedEventArgs,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\EventArgs\AdvancedPropertyChangedEventArgs.cs,AdvancedPropertyChangedEventArgs,The method has 7 parameters. Parameters: originalSender' latestSender' propertyName' oldValue' newValue' isOldValueMeaningful' isNewValueMeaningful
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The method has 5 parameters. Parameters: propertyExpression' defaultValue' propertyChangedEventHandler' includeInSerialization' includeInBackup
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The method has 5 parameters. Parameters: propertyExpression' createDefaultValue' propertyChangedEventHandler' includeInSerialization' includeInBackup
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The method has 6 parameters. Parameters: name' type' defaultValue' propertyChangedEventHandler' includeInSerialization' includeInBackup
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The method has 6 parameters. Parameters: name' type' createDefaultValue' propertyChangedEventHandler' includeInSerialization' includeInBackup
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The method has 7 parameters. Parameters: name' type' defaultValue' propertyChangedEventHandler' includeInSerialization' includeInBackup' isModelBaseProperty
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The method has 7 parameters. Parameters: name' type' createDefaultValue' propertyChangedEventHandler' includeInSerialization' includeInBackup' isModelBaseProperty
Long Parameter List,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,InitializeProperty,The method has 10 parameters. Parameters: name' type' defaultValue' propertyChangedEventHandler' isSerializable' includeInSerialization' includeInBackup' isModelBaseProperty' lateRegistration' isCalculatedProperty
Long Parameter List,Catel.Data,PropertyData,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\PropertyData.cs,PropertyData,The method has 9 parameters. Parameters: name' type' defaultValue' propertyChangedEventHandler' isSerializable' includeInSerialization' includeInBackup' isModelBaseProperty' isCalculatedProperty
Long Parameter List,Catel.Data,PropertyData,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\PropertyData.cs,PropertyData,The method has 9 parameters. Parameters: name' type' createDefaultValue' propertyChangedEventHandler' isSerializable' includeInSerialization' includeInBackup' isModelBaseProperty' isCalculatedProperty
Long Parameter List,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypeIfNotYetRegisteredWithTag,The method has 5 parameters. Parameters: serviceLocator' serviceType' serviceImplementationType' tag' registrationType
Long Parameter List,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypeWithTag,The method has 5 parameters. Parameters: serviceLocator' createServiceFunc' tag' registrationType' registerIfAlreadyRegistered
Long Parameter List,Catel.IoC,IServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Interfaces\IServiceLocator.cs,RegisterType,The method has 5 parameters. Parameters: serviceType' serviceImplementationType' tag' registrationType' registerIfAlreadyRegistered
Long Parameter List,Catel.IoC,IServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Interfaces\IServiceLocator.cs,RegisterType,The method has 5 parameters. Parameters: serviceType' createServiceFunc' tag' registrationType' registerIfAlreadyRegistered
Long Parameter List,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterType,The method has 5 parameters. Parameters: serviceType' serviceImplementationType' tag' registrationType' registerIfAlreadyRegistered
Long Parameter List,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterType,The method has 5 parameters. Parameters: serviceType' createServiceFunc' tag' registrationType' registerIfAlreadyRegistered
Long Parameter List,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterType,The method has 7 parameters. Parameters: serviceType' serviceImplementationType' tag' registrationType' registerIfAlreadyRegistered' originalContainer' createServiceFunc
Long Parameter List,Catel.IoC,ServiceLocatorRegistration,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocatorRegistration.cs,ServiceLocatorRegistration,The method has 5 parameters. Parameters: declaringType' implementingType' tag' registrationType' createServiceFunc
Long Parameter List,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,TryCreateToConstruct,The method has 7 parameters. Parameters: typeToConstruct' constructor' tag' parameters' checkConstructor' hasMoreConstructorsLeft' typeMetaData
Long Parameter List,Catel.Logging,BatchLogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\BatchLogListenerBase.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogMessageEventArgs,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\EventArgs\LogMessageEventArgs.cs,LogMessageEventArgs,The method has 5 parameters. Parameters: log' message' extraData' logData' logEvent
Long Parameter List,Catel.Logging,LogMessageEventArgs,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\EventArgs\LogMessageEventArgs.cs,LogMessageEventArgs,The method has 6 parameters. Parameters: log' message' extraData' logData' logEvent' time
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The method has 5 parameters. Parameters: log' logEvent' messageFormat' s1' s2
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The method has 6 parameters. Parameters: log' logEvent' messageFormat' s1' s2' s3
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The method has 7 parameters. Parameters: log' logEvent' messageFormat' s1' s2' s3' s4
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The method has 9 parameters. Parameters: log' logEvent' messageFormat' s1' s2' s3' s4' s5' others
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The method has 5 parameters. Parameters: log' logEvent' exception' messageFormat' args
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,WriteWithData,The method has 5 parameters. Parameters: log' exception' message' extraData' logEvent
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,ErrorAndCreateException,The method has 5 parameters. Parameters: log' innerException' createExceptionCallback' messageFormat' args
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Debug,The method has 5 parameters. Parameters: log' messageFormat' s1' s2' s3
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Debug,The method has 6 parameters. Parameters: log' messageFormat' s1' s2' s3' s4
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Debug,The method has 8 parameters. Parameters: log' messageFormat' s1' s2' s3' s4' s5' others
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Error,The method has 5 parameters. Parameters: log' messageFormat' s1' s2' s3
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Error,The method has 6 parameters. Parameters: log' messageFormat' s1' s2' s3' s4
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Error,The method has 8 parameters. Parameters: log' messageFormat' s1' s2' s3' s4' s5' others
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,LogHeading,The method has 5 parameters. Parameters: log' logEvent' headingContent' messageFormat' args
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Status,The method has 5 parameters. Parameters: log' messageFormat' s1' s2' s3
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Status,The method has 6 parameters. Parameters: log' messageFormat' s1' s2' s3' s4
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Status,The method has 8 parameters. Parameters: log' messageFormat' s1' s2' s3' s4' s5' others
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Warning,The method has 5 parameters. Parameters: log' messageFormat' s1' s2' s3
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Warning,The method has 6 parameters. Parameters: log' messageFormat' s1' s2' s3' s4
Long Parameter List,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Warning,The method has 8 parameters. Parameters: log' messageFormat' s1' s2' s3' s4' s5' others
Long Parameter List,Catel.Logging,ILogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Interfaces\ILogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,ILogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Interfaces\ILogListener.cs,Debug,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,ILogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Interfaces\ILogListener.cs,Info,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,ILogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Interfaces\ILogListener.cs,Warning,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,ILogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Interfaces\ILogListener.cs,Error,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,ILogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Interfaces\ILogListener.cs,Status,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,ConsoleLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\ConsoleLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,DebugLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\DebugLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,EtwLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\EtwLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,RollingInMemoryLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\RollingInMemoryLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogBatchEntry,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogBatchEntry.cs,LogBatchEntry,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogEntry,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogEntry.cs,LogEntry,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Debug,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Info,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Warning,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Error,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Status,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,ShouldIgnoreLogMessage,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,RaiseLogMessage,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,FormatLogEvent,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Debug,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Info,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Warning,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Error,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,Status,The method has 5 parameters. Parameters: log' message' extraData' logData' time
Long Parameter List,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetPropertyEx,The method has 5 parameters. Parameters: type' name' flattenHierarchy' allowStaticMembers' allowExplicitInterfaceProperties
Long Parameter List,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetMethodEx,The method has 5 parameters. Parameters: type' name' types' flattenHierarchy' allowStaticMembers
Long Parameter List,Catel.Reflection,PropertyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\PropertyHelper.cs,TryGetPropertyValue,The method has 5 parameters. Parameters: obj' property' ignoreCase' throwOnException' value
Long Parameter List,Catel.Reflection,PropertyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\PropertyHelper.cs,TrySetPropertyValue,The method has 5 parameters. Parameters: obj' property' value' ignoreCase' throwOnError
Long Parameter List,Catel.Runtime.Serialization,MemberValue,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\MemberValue.cs,MemberValue,The method has 6 parameters. Parameters: memberGroup' modelType' memberType' name' nameForSerialization' value
Long Parameter List,Catel.Runtime.Serialization,SerializationContext<TContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationContext.cs,SerializationContext,The method has 5 parameters. Parameters: model' modelType' context' contextMode' configuration
Long Parameter List,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetContext,The method has 5 parameters. Parameters: model' modelType' context' contextMode' configuration
Long Parameter List,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetContext,The method has 5 parameters. Parameters: model' modelType' stream' contextMode' configuration
Long Parameter List,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetDataContractSerializer,The method has 5 parameters. Parameters: serializingType' typeToSerialize' xmlName' rootNamespace' additionalKnownTypes
Long Parameter List,Catel.Runtime.Serialization.Xml,IDataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\Interfaces\IDataContractSerializerFactory.cs,GetDataContractSerializer,The method has 5 parameters. Parameters: serializingType' typeToSerialize' xmlName' rootNamespace' additionalKnownTypes
Long Parameter List,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,XmlSerializer,The method has 5 parameters. Parameters: serializationManager' dataContractSerializerFactory' xmlNamespaceManager' typeFactory' objectAdapter
Long Parameter List,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetContext,The method has 5 parameters. Parameters: model' modelType' stream' contextMode' configuration
Long Parameter List,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WriteXmlElement,The method has 5 parameters. Parameters: context' element' elementName' memberValue' modelType
Long Identifier,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,,The length of the parameter _automaticallySubscribedEventName is 33.
Long Identifier,Catel.Caching,CacheStorage<TKey;TValue>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Caching\CacheStorage.cs,CacheStorage,The length of the parameter defaultExpirationPolicyInitCode is 31.
Long Identifier,Catel.Caching,CacheStorage<TKey;TValue>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Caching\CacheStorage.cs,,The length of the parameter _defaultExpirationPolicyInitCode is 32.
Long Identifier,Catel.Caching.Policies,CompositeExpirationPolicy,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Caching\Policies\CompositeExpirationPolicy.cs,CompositeExpirationPolicy,The length of the parameter expiresOnlyIfAllPoliciesExpires is 31.
Long Identifier,Catel.Caching.Policies,CompositeExpirationPolicy,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Caching\Policies\CompositeExpirationPolicy.cs,,The length of the parameter _expiresOnlyIfAllPoliciesExpires is 32.
Long Identifier,Catel.Data,ChildAwareModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ChildAwareModelBase.cs,,The length of the parameter _propertyValueChangeNotificationWrappers is 40.
Long Identifier,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the parameter ignoredOrFailedPropertyValidations is 34.
Long Identifier,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the parameter hasNotifiedBusinessWarningsChanged is 34.
Long Identifier,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the parameter hasNotifiedBusinessErrorsChanged is 32.
Long Identifier,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the parameter changeAsBusinessRuleValidationResult is 36.
Long Identifier,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,,The length of the parameter PropertiesNotCausingValidation is 30.
Long Identifier,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,,The length of the parameter _propertiesCurrentlyBeingValidated is 34.
Long Identifier,Catel.Data,ChangeNotificationWrapper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ChangeNotificationWrapper.cs,,The length of the parameter _weakCollectionChangedListeners is 31.
Long Identifier,Catel.Data,ChangeNotificationWrapper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ChangeNotificationWrapper.cs,,The length of the parameter _weakCollectionChangedListenersTable is 36.
Long Identifier,Catel.Data,ChangeNotificationWrapper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ChangeNotificationWrapper.cs,,The length of the parameter _weakPropertyChangedListenersTable is 34.
Long Identifier,Catel.Data,CompositeValidator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\CompositeValidator.cs,BeforeValidation,The length of the parameter previousFieldValidationResults is 30.
Long Identifier,Catel.Data,CompositeValidator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\CompositeValidator.cs,BeforeValidation,The length of the parameter previousBusinessRuleValidationResults is 37.
Long Identifier,Catel.Data,ValidationExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Extensions\ValidationExtensions.cs,SynchronizeWithContext,The length of the parameter validationResultAsBusinessRule is 30.
Long Identifier,Catel.Data,ValidationContextHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\ValidationContextHelper.cs,GetChanges,The length of the parameter secondContextFieldValidationResults is 35.
Long Identifier,Catel.Data,ValidationContextHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\ValidationContextHelper.cs,GetChanges,The length of the parameter firstContextFieldValidationResults is 34.
Long Identifier,Catel.Data,ValidationContextHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\ValidationContextHelper.cs,GetChanges,The length of the parameter secondContextBusinessRuleValidationResults is 42.
Long Identifier,Catel.Data,ValidationContextHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\ValidationContextHelper.cs,GetChanges,The length of the parameter firstContextBusinessRuleValidationResults is 41.
Long Identifier,Catel.Data,XmlNameMapper<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\XmlNameMapper.cs,,The length of the parameter _xmlNameToPropertyNameMappings is 30.
Long Identifier,Catel.Data,XmlNameMapper<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Helpers\XmlNameMapper.cs,,The length of the parameter _xmlPropertyNameToXmlNameMappings is 33.
Long Identifier,Catel.Data,IValidator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Interfaces\IValidator.cs,BeforeValidation,The length of the parameter previousFieldValidationResults is 30.
Long Identifier,Catel.Data,IValidator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Interfaces\IValidator.cs,BeforeValidation,The length of the parameter previousBusinessRuleValidationResults is 37.
Long Identifier,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,SetValue,The length of the parameter changeNotificationsSuspensionContext is 36.
Long Identifier,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,,The length of the parameter _changeCallbacksSuspensionContext is 33.
Long Identifier,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,,The length of the parameter _changeNotificationsSuspensionContext is 37.
Long Identifier,Catel.Data,ValidatorBase<TTargetType>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\ValidatorBase.cs,BeforeValidation,The length of the parameter previousFieldValidationResults is 30.
Long Identifier,Catel.Data,ValidatorBase<TTargetType>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\ValidatorBase.cs,BeforeValidation,The length of the parameter previousBusinessRuleValidationResults is 37.
Long Identifier,Catel.Data,ValidatorBase<TTargetType>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\ValidatorBase.cs,BeforeValidation,The length of the parameter previousFieldValidationResults is 30.
Long Identifier,Catel.Data,ValidatorBase<TTargetType>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\ValidatorBase.cs,BeforeValidation,The length of the parameter previousBusinessRuleValidationResults is 37.
Long Identifier,Catel.IoC,DependencyResolverManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\DependencyResolverManager.cs,,The length of the parameter _dependencyResolversByInstance is 30.
Long Identifier,Catel.IoC,RegistrationInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\RegistrationInfo.cs,RegistrationInfo,The length of the parameter isTypeInstantiatedForSingleton is 30.
Long Identifier,Catel.IoC,ServiceLocatorAutoRegistrationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocatorAutoRegistrationManager.cs,,The length of the parameter SingleNullElementArrayOfObjects is 31.
Long Identifier,Catel.IoC,ServiceLocatorAutoRegistrationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocatorAutoRegistrationManager.cs,,The length of the parameter _autoRegisterTypesViaAttributes is 31.
Long Identifier,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,InitializeAfterConstruction,The length of the parameter objAsINeedCustomInitialization is 30.
Long Identifier,Catel.IoC,TypeMetaData,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,GetConstructors,The length of the parameter decoratedWithInjectionConstructorAttribute is 42.
Long Identifier,Catel.Linq,EnumerableExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Linq\Extensions\EnumerableExtensions.cs,,The length of the parameter AsReadOnlyGenericMethodInfoCache is 32.
Long Identifier,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,,The length of the parameter AlreadyProcessedByCatelLogSystemExceptionDataKey is 48.
Long Identifier,Catel.Logging,LogManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogManager.cs,,The length of the parameter _ignoreDuplicateExceptionLogging is 32.
Long Identifier,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetPropertyEx,The length of the parameter allowExplicitInterfaceProperties is 32.
Long Identifier,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetPropertyEx,The length of the parameter allowExplicitInterfaceProperties is 32.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetType,The length of the parameter typeNameWithoutAssemblyOverhead is 31.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,InitializeTypes,The length of the parameter allowMultithreadedInitialization is 32.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,InitializeTypes,The length of the parameter allowMultithreadedInitialization is 32.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,InitializeAssemblies,The length of the parameter allowMultithreadedInitialization is 32.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetAssemblyTypes,The length of the parameter allowMultithreadedInitialization is 32.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,,The length of the parameter DefaultCollectionSizeForAssemblies is 34.
Long Identifier,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,,The length of the parameter _typesWithoutAssemblyLowerCase is 30.
Long Identifier,Catel.Runtime,ReferenceManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\ReferenceManager.cs,,The length of the parameter DefaultReferenceEqualityComparer is 32.
Long Identifier,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,GetNameOverrideForSerialization,The length of the parameter includeInSerializationAttribute is 31.
Long Identifier,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,,The length of the parameter _catelPropertiesToSerializeCache is 32.
Long Identifier,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,,The length of the parameter _regularPropertiesToSerializeCache is 34.
Long Identifier,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,,The length of the parameter _serializationModifierDefinitionsPerTypeCache is 45.
Long Identifier,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,,The length of the parameter _serializationModifiersPerTypeCache is 35.
Long Identifier,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,,The length of the parameter DefaultSerializationConfiguration is 33.
Long Identifier,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,,The length of the parameter _shouldSerializeAsCollectionCache is 33.
Long Identifier,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,,The length of the parameter _shouldSerializeAsDictionaryCache is 33.
Long Identifier,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,,The length of the parameter _shouldSerializeByExternalSerializerCache is 41.
Long Identifier,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,,The length of the parameter _shouldSerializeUsingParseCache is 31.
Long Identifier,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,,The length of the parameter _shouldSerializeEnumAsStringCache is 33.
Long Identifier,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The length of the parameter resolveAbstractClassesAndInterfaces is 35.
Long Identifier,Catel.Runtime.Serialization.Xml,XmlSerializerTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,,The length of the parameter _collectionTypesAlreadyHandled is 30.
Long Identifier,Catel.Runtime.Serialization.Xml,XmlSerializerTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,,The length of the parameter _specialGenericCollectionTypes is 30.
Long Identifier,Catel.Runtime.Serialization.Xml,XmlNamespaceManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlNamespaceManager.cs,GetNamespace,The length of the parameter serializationManagerScopeManager is 32.
Long Identifier,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,,The length of the parameter _dataContractSerializerFactory is 30.
Long Statement,Catel.ApiCop.Rules,InitializationApiCopRule,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ApiCop\Rules\InitializationApiCopRule.cs,GetResultAsText,The length of the statement  "                    recommendation = string.Format("It is recommended to not to lazy initialize this feature' initialize at startup instead"); " is 122.
Long Statement,System,AppDomain,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\AppDomain.cs,GetAssemblies,The length of the statement  "                    var currentdomain = typeof(string).GetTypeInfo().Assembly.GetType("System.AppDomain").GetRuntimeProperty("CurrentDomain").GetMethod.Invoke(null' ArrayShim.Empty<object>()); " is 172.
Long Statement,Catel,Argument,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Argument.cs,IsNotOutOfRange,The length of the statement  "                var error = $"Argument '{ObjectToStringHelper.ToString(paramName)}' should be between {minimumValue} and {maximumValue}"; " is 121.
Long Statement,Catel,Argument,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Argument.cs,IsNotOutOfRange,The length of the statement  "                (innerParamValue' innerMinimumValue' innerMaximumValue) => innerParamValue.CompareTo(innerMinimumValue) >= 0 && innerParamValue.CompareTo(innerMaximumValue) <= 0); " is 163.
Long Statement,Catel,CoreModule,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\CoreModule.cs,Initialize,The length of the statement  "            serviceLocator.RegisterTypeWithTag<ISerializationContextInfoFactory' BinarySerializationContextInfoFactory>(typeof(BinarySerializer)); " is 134.
Long Statement,Catel,CoreModule,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\CoreModule.cs,Initialize,The length of the statement  "            serviceLocator.RegisterTypeWithTag<ISerializationContextInfoFactory' XmlSerializationContextInfoFactory>(typeof(XmlSerializer)); " is 128.
Long Statement,Catel,Flags,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Enum.cs,ClearFlag,The length of the statement  "                return ClearFlag(Convert.ToInt32(flags' CultureInfo.CurrentCulture)' Convert.ToInt32(flagToClear' CultureInfo.CurrentCulture)); " is 127.
Long Statement,Catel,Flags,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Enum.cs,IsFlagSet,The length of the statement  "                return IsFlagSet(Convert.ToInt32(flags' CultureInfo.CurrentCulture)' Convert.ToInt32(flagToFind' CultureInfo.CurrentCulture)); " is 126.
Long Statement,Catel,Flags,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Enum.cs,IsFlagSet,The length of the statement  "                return IsFlagSet(Convert.ToInt32(flags' CultureInfo.CurrentCulture)' Convert.ToInt32(flagToFind' CultureInfo.CurrentCulture)); " is 126.
Long Statement,Catel,Flags,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Enum.cs,IsFlagSet,The length of the statement  "                return IsFlagSet(Convert.ToInt64(flags' CultureInfo.CurrentCulture)' Convert.ToInt32(flagToFind' CultureInfo.CurrentCulture)); " is 126.
Long Statement,Catel,Flags,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Enum.cs,SetFlag,The length of the statement  "                return SetFlag(Convert.ToInt32(flags' CultureInfo.CurrentCulture)' Convert.ToInt32(flagToSet' CultureInfo.CurrentCulture)); " is 123.
Long Statement,Catel,Flags,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Enum.cs,SwapFlag,The length of the statement  "                return SwapFlag(Convert.ToInt32(flags' CultureInfo.CurrentCulture)' Convert.ToInt32(flagToSwap' CultureInfo.CurrentCulture)); " is 125.
Long Statement,Catel,ParallelHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Helpers\ParallelHelper.cs,ExecuteInParallel,The length of the statement  "            Log.Debug("[{0}] Executing '{1}' actions in parallel in batches of '{2}' items per batch"' taskName' items.Count' itemsPerBatch); " is 129.
Long Statement,Catel,ParallelHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Helpers\ParallelHelper.cs,ExecuteInParallel,The length of the statement  "            Log.Debug("[{0}] Executed '{1}' actions in parallel in '{2}' batches of '{3}' items per batch"' taskName' items.Count' batches.Count' itemsPerBatch); " is 149.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakGenericEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<TSource>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 123.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakPropertyChangedEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<INotifyPropertyChanged>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 138.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakCollectionChangedEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<INotifyCollectionChanged>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 140.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<TSource>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 123.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("Both the source and target are null' which means that a static event handler subscribes to a static event. In such cases' there are no memory leaks' so there is no reason to use this class"); " is 253.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "            if ((methodInfo.Name.Contains("_AnonymousDelegate>")) || (methodInfo.DeclaringType.FullName.Contains("__DisplayClass"))) " is 120.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "            var weakListener = new WeakEventListener<TTarget' TSource' TEventArgs>(finalTarget' source' typeof(TExplicitSourceType)); " is 121.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>(ex' "Failed to create the delegate. Probably the wrong type of EventArgs is used and does not match the EventHandler<TEventArgs>"); " is 192.
Long Statement,Catel,WeakEventListener<TTarget;TSource;TEventArgs>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToEvent,The length of the statement  "            var error = $"No add-method available for event '{eventName}'' cannot subscribe using weak events. Make sure the event is public"; " is 130.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakPropertyChangedEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<INotifyPropertyChanged>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 138.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakCollectionChangedEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<INotifyCollectionChanged>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 140.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The length of the statement  "            return SubscribeToWeakEventWithExplicitSourceType<TSource>(target' source' eventName' handler' throwWhenSubscriptionFails); " is 123.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "                throw Log.ErrorAndCreateException<NotSupportedException>("Only handlers of type 'Action'' 'PropertyChangedEventHandler'' 'NotifyCollectionChangedEventHandler' or 'EventHandler<TEventArgs>' are supported. '{0}' does not belong to these supported types"' handlerType.Name); " is 271.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "                    var listenerType = typeof(WeakEventListener<TTarget' TSource' EventArgsBase>).GetGenericTypeDefinition().MakeGenericType(new[] { targetType' sourceType' eventArgsType }); " is 170.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "                    ListenerTypeCache[cacheKey] = listenerType.GetMethodEx("SubscribeToWeakEventWithExplicitSourceType"' new[] { targetType' sourceType' typeof(string)' typeof(Delegate)' typeof(bool) }' bindingFlags); " is 197.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("Expected to find the SubscribeToWeakEventWithExplicitSourceType on WeakEventListener<TTarget' TSource' TEventArgs>' but did not find it"); " is 200.
Long Statement,Catel,WeakEventListener<TTarget;TSource>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEventWithExplicitSourceType,The length of the statement  "            return (IWeakEventListener)genericMethodInfo.Invoke(null' new object[] { target' source' eventName' handler' throwWhenSubscriptionFails }); " is 139.
Long Statement,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakPropertyChangedEvent,The length of the statement  "            return SubscribeToWeakEvent(target' source' eventName' handler' typeof(INotifyPropertyChanged)' throwWhenSubscriptionFails); " is 124.
Long Statement,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakCollectionChangedEvent,The length of the statement  "            return SubscribeToWeakEvent(target' source' eventName' handler' typeof(INotifyCollectionChanged)' throwWhenSubscriptionFails); " is 126.
Long Statement,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The length of the statement  "                    var listenerType = typeof(WeakEventListener<object' object>).GetGenericTypeDefinition().MakeGenericType(new[] { targetType' sourceType }); " is 138.
Long Statement,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The length of the statement  "                    ListenerTypeCache[cacheKey] = listenerType.GetMethodEx("SubscribeToWeakEventWithExplicitSourceType"' new[] { targetType' sourceType' typeof(string)' typeof(Delegate)' typeof(bool) }' bindingFlags); " is 197.
Long Statement,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("Expected to find the SubscribeToWeakEventWithExplicitSourceType on WeakEventListener<TTarget' TSource>' but did not find it"); " is 188.
Long Statement,Catel,WeakEventListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\WeakReferences\WeakEventListener.cs,SubscribeToWeakEvent,The length of the statement  "            return (IWeakEventListener)genericMethodInfo.Invoke(null' new[] { target' source' eventName' handler' throwWhenSubscriptionFails }); " is 132.
Long Statement,Catel.Caching.Policies,ExpirationPolicy,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Caching\Policies\ExpirationPolicy.cs,Absolute,The length of the statement  "            return force || FastDateTime.Now < absoluteExpirationDateTime ? new AbsoluteExpirationPolicy(absoluteExpirationDateTime) : null; " is 128.
Long Statement,Catel.Caching.Policies,ExpirationPolicy,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Caching\Policies\ExpirationPolicy.cs,Custom,The length of the statement  "            return force || (isExpiredFunc != null && !isExpiredFunc.Invoke()) ? new CustomExpirationPolicy(isExpiredFunc' resetAction) : null; " is 131.
Long Statement,System.ComponentModel,PropertyChangedEventArgsExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ComponentModel\Extensions\PropertyChangedEventArgsExtensions.cs,HasPropertyChanged,The length of the statement  "            return string.Equals(e.PropertyName' PropertyHelper.GetPropertyName(propertyExpression' allowNested)' StringComparison.Ordinal); " is 128.
Long Statement,System.ComponentModel,PropertyChangedEventArgsExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ComponentModel\Extensions\PropertyChangedEventArgsExtensions.cs,HasPropertyChanged,The length of the statement  "            return string.Equals(e.PropertyName' PropertyHelper.GetPropertyName(propertyExpression' allowNested)' StringComparison.Ordinal); " is 128.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,GetValidator,The length of the statement  "                            Log.Debug("Found validator '{0}' for view model '{1}' via the registered IValidatorProvider"' _validator.GetType().FullName' GetType().FullName); " is 145.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,ValidatePropertyUsingAnnotations,The length of the statement  "                            Log.Debug("Property '{0}' is not a public property' cannot validate non-public properties in the current platform"' propertyName); " is 130.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,ValidatePropertyUsingAnnotations,The length of the statement  "                        _dataAnnotationsValidationContext[propertyName] = new System.ComponentModel.DataAnnotations.ValidationContext(this' null' null) { MemberName = propertyName }; " is 158.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,ValidatePropertyUsingAnnotations,The length of the statement  "                    System.ComponentModel.DataAnnotations.Validator.ValidateProperty(value' _dataAnnotationsValidationContext[propertyName]); " is 121.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the statement  "                validator.BeforeValidation(this' existingValidationContext.GetFieldValidations()' existingValidationContext.GetBusinessRuleValidations()); " is 138.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the statement  "                                                    select (IFieldValidationResult)FieldValidationResult.CreateError(fieldAnnotationValidation.Key' fieldAnnotationValidation.Value)); " is 130.
Long Statement,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,Validate,The length of the statement  "                validator.AfterValidation(this' validationContext.GetFieldValidations()' validationContext.GetBusinessRuleValidations()); " is 121.
Long Statement,Catel.Data,CatelTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\CatelTypeInfo.cs,FindCatelProperties,The length of the statement  "            var nonStaticProperties = (from property in type.GetPropertiesEx(BindingFlagsHelper.GetFinalBindingFlags(true' false' true)) " is 124.
Long Statement,Catel.Data,CatelTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\CatelTypeInfo.cs,FindCatelProperties,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("The property '{0}' of type 'PropertyData' declared as instance' but they can only be used as static"' nonStaticProperty.Name); " is 188.
Long Statement,Catel.Data,CatelTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\CatelTypeInfo.cs,FindCatelProperties,The length of the statement  "            var nonPublicProperties = (from property in type.GetPropertiesEx(BindingFlagsHelper.GetFinalBindingFlags(true' true' true)) " is 123.
Long Statement,Catel.Data,CatelTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\CatelTypeInfo.cs,FindCatelProperties,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("The property '{0}' of type 'PropertyData' declared as non-public' but they can only be used as public"' nonPublicProperty.Name); " is 190.
Long Statement,Catel.Data,CatelTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\CatelTypeInfo.cs,PreventWrongDeclaredFields,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("The field '{0}' of type 'PropertyData' declared as instance' but they can only be used as static"' nonStaticField.Name); " is 182.
Long Statement,Catel.Data,CatelTypeInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\CatelTypeInfo.cs,PreventWrongDeclaredFields,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("The field '{0}' of type 'PropertyData' declared as non-public' but they can only be used as public"' nonPublicField.Name); " is 184.
Long Statement,Catel.Data,ChangeNotificationWrapper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ChangeNotificationWrapper.cs,OnObjectCollectionChanged,The length of the statement  "                        Log.Warning("Received NotifyCollectionChangedAction.Reset for '{0}'' but the type does not implement ICollection"' sender.GetType().GetSafeFullName(false)); " is 156.
Long Statement,Catel.Data,ChangeNotificationWrapper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ChangeNotificationWrapper.cs,SubscribeNotifyChangedEvent,The length of the statement  "                            Log.Debug("Failed to use weak events to subscribe to 'value.CollectionChanged'' going to subscribe without weak events"); " is 121.
Long Statement,Catel.Data,CompositeValidatorProvider,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\Validation\CompositeValidatorProvider.cs,GetValidator,The length of the statement  "                IList<IValidator> discoveredValidators = _validatorProviders.Select(validatorProvider => validatorProvider.GetValidator(targetType)).Where(discoveredValidator => discoveredValidator != null).ToList(); " is 200.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,SetValue,The length of the statement  "                    throw Log.ErrorAndCreateException(msg => new InvalidPropertyValueException(property.Name' property.Type' value.GetType())' " is 122.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,SetValue,The length of the statement  "                        "Cannot set value '{0}' to property '{1}' of type '{2}'' the value is invalid"' value' property.Name' GetType().FullName); " is 122.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The length of the statement  "                throw Log.ErrorAndCreateException<ArgumentException>("The member type of the body of the property expression should be a property"); " is 132.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,RegisterProperty,The length of the statement  "                throw Log.ErrorAndCreateException<ArgumentException>("The member type of the body of the property expression should be a property"); " is 132.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,InitializePropertyAfterConstruction,The length of the statement  "            var reflectedProperty = type.GetPropertyEx(property.Name' BindingFlags.FlattenHierarchy | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 160.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,InitializePropertyAfterConstruction,The length of the statement  "                Log.Warning("Property '{0}' is registered after construction of type '{1}'' but could not be found using reflection"' property.Name' type.FullName); " is 148.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,InitializeProperty,The length of the statement  "                property.IsSerializable' property.IncludeInSerialization' property.IncludeInBackup' property.IsModelBaseProperty' lateRegistration' isCalculatedProperty); " is 154.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,ReadXml,The length of the statement  "            using (var scopeManager = ScopeManager<SerializationScope>.GetScopeManager(scopeName' () => new SerializationScope(SerializationFactory.GetXmlSerializer()' null))) " is 163.
Long Statement,Catel.Data,ModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ModelBase.cs,WriteXml,The length of the statement  "            using (var scopeManager = ScopeManager<SerializationScope>.GetScopeManager(scopeName' () => new SerializationScope(SerializationFactory.GetXmlSerializer()' null))) " is 163.
Long Statement,Catel.Data,PropertyBag,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\PropertyBag.boxing.cs,SetPropertyValue,The length of the statement  "                if (!_properties.TryGetValue(propertyName' out propertyValue) || !ObjectHelper.AreEqualReferences(propertyValue' value)) " is 120.
Long Statement,Catel.Data,PropertyData,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\PropertyData.cs,GetPropertyInfo,The length of the statement  "                var propertyInfo = containingType.GetPropertyEx(Name' BindingFlags.FlattenHierarchy | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 156.
Long Statement,Catel.ExceptionHandling,ExceptionService,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ExceptionHandling\ExceptionService.cs,HandleException,The length of the statement  "                                Log.Debug("[{0}] '{1}' buffered for the '{2}' times"' now' exceptionType.Name' _exceptionCounter[exceptionHandler.Key].Count); " is 126.
Long Statement,Catel.ExceptionHandling,ExceptionService,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ExceptionHandling\ExceptionService.cs,HandleException,The length of the statement  "                            if (duration >= exceptionHandler.Value.BufferPolicy.Interval && exceptionHandler.Value.BufferPolicy.Interval != TimeSpan.Zero) " is 126.
Long Statement,Catel.ExceptionHandling,ExceptionService,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ExceptionHandling\ExceptionService.cs,HandleException,The length of the statement  "                                Log.Debug("[{0}] '{1}' buffered for the '{2}' times"' now' exceptionType.Name' _exceptionCounter[exceptionHandler.Key].Count); " is 126.
Long Statement,Catel.ExceptionHandling,ExceptionService,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ExceptionHandling\ExceptionService.cs,ProcessWithRetry,The length of the statement  "                        var exceptionHandler = ExceptionHandlers.FirstOrDefault(handler => handler.ExceptionType.IsAssignableFromEx(lastError.GetType())); " is 130.
Long Statement,Catel.ExceptionHandling,ExceptionService,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\ExceptionHandling\ExceptionService.cs,ProcessWithRetryAsync,The length of the statement  "                        var exceptionHandler = ExceptionHandlers.FirstOrDefault(handler => handler.ExceptionType.IsAssignableFromEx(lastError.GetType())); " is 130.
Long Statement,Catel.IoC,NamingRegistrationConvention,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Conventions\NamingRegistrationConvention.cs,Process,The length of the statement  "                    var implementationType = typesToHandle.FirstOrDefault(row => TagHelper.AreTagsEqual(row.Name' type.Name.Substring(1).Trim()) && row.IsClassEx() && type.IsAssignableFromEx(row)); " is 177.
Long Statement,Catel.IoC,RegistrationConventionHandlerExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\RegistrationConventionHandlerExtensions.cs,ExcludeAllTypesOfNamespace,The length of the statement  "            registrationConventionHandler.ExcludeTypesWhere(type => type.Namespace != null && type.Namespace.StartsWith(@namespace)); " is 121.
Long Statement,Catel.IoC,RegistrationConventionHandlerExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\RegistrationConventionHandlerExtensions.cs,ExcludeAssembly,The length of the statement  "            registrationConventionHandler.ExcludeAssembliesWhere(assembly => ObjectHelper.AreEqual(assembly.GetType()' typeof(TAssembly))); " is 127.
Long Statement,Catel.IoC,RegistrationConventionHandlerExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\RegistrationConventionHandlerExtensions.cs,IncludeAllTypesOfNamespace,The length of the statement  "            registrationConventionHandler.TypeFilter.Includes += type => type.Namespace != null && type.Namespace.StartsWith(@namespace); " is 125.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypesUsingAllConventions,The length of the statement  "            var registrationConventionHandler = RegisterTypesUsingConvention<FirstInterfaceRegistrationConvention>(serviceLocator' registrationType); " is 137.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypesUsingDefaultNamingConvention,The length of the statement  "            var registrationConventionHandler = RegisterTypesUsingConvention<NamingRegistrationConvention>(serviceLocator' registrationType); " is 129.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypesUsingDefaultFirstInterfaceConvention,The length of the statement  "            var registrationConventionHandler = RegisterTypesUsingConvention<FirstInterfaceRegistrationConvention>(serviceLocator' registrationType); " is 137.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,ResolveTypeUsingParameters,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("The service locator could not return the registration info for type '{0}' with tag '{1}'' cannot resolve type"' " is 173.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,ResolveTypeUsingParameters,The length of the statement  "                Log.Debug("Type '{0}' is registered as singleton but has not yet been instantiated. Instantiated it with the specified parameters now and registering it in the ServiceLocator"' serviceType.FullName); " is 199.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterType,The length of the statement  "            RegisterTypeWithTag<TService' TServiceImplementation>(serviceLocator' null' registrationType' registerIfAlreadyRegistered); " is 123.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypeWithTag,The length of the statement  "            serviceLocator.RegisterType(typeof(TService)' typeof(TServiceImplementation)' tag' registrationType' registerIfAlreadyRegistered); " is 130.
Long Statement,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,RegisterTypeWithTag,The length of the statement  "            serviceLocator.RegisterType(typeof(TService)' x => createServiceFunc(x)' tag' registrationType' registerIfAlreadyRegistered); " is 125.
Long Statement,Catel.IoC,IoCFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\IoCFactory.cs,CreateServiceLocator,The length of the statement  "                        throw Log.ErrorAndCreateException<Exception>("Failed to create the IDependencyResolver instance using the factory method"); " is 123.
Long Statement,Catel.IoC,IoCFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\IoCFactory.cs,CreateServiceLocator,The length of the statement  "                        _serviceLocatorInitializers = new List<Type>(TypeCache.GetTypes(x => !x.IsInterfaceEx() & x.ImplementsInterfaceEx<IServiceLocatorInitializer>()' false)); " is 153.
Long Statement,Catel.IoC,IoCFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\IoCFactory.cs,CreateServiceLocator,The length of the statement  "                            throw Log.ErrorAndCreateException<Exception>(ex' "Failed to initialize service locator using initializer '{0}'"' serviceLocatorInitializer.GetSafeFullName(false)); " is 163.
Long Statement,Catel.IoC,RegistrationConventionHandler,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\RegistrationConventionHandler.cs,RegisterConvention,The length of the statement  "            var registrationConvention = _typeFactory.CreateInstanceWithParameters<TRegistrationConvention>(_serviceLocator' registrationType); " is 131.
Long Statement,Catel.IoC,RegistrationConventionHandler,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\RegistrationConventionHandler.cs,ApplyConventions,The length of the statement  "                    types.AddRange(TypeCache.GetTypesOfAssembly(filteredAssembly' type => !string.IsNullOrWhiteSpace(type.Namespace) && !type.Name.StartsWith("<"))); " is 145.
Long Statement,Catel.IoC,RegistrationConventionHandler,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\RegistrationConventionHandler.cs,RemoveIfAlreadyRegistered,The length of the statement  "            if (_serviceLocator.IsTypeRegistered(type) && !type.IsAssignableFromEx(typeof(IServiceLocator)) && !type.IsAssignableFromEx(typeof(ITypeFactory)) && !type.IsAssignableFromEx(typeof(IDependencyResolver)) && !type.IsAssignableFromEx(typeof(IRegistrationConventionHandler))) " is 271.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,GetRegistrationInfo,The length of the statement  "                bool hasSingletonInstance = (registeredTypeInfo.RegistrationType == RegistrationType.Singleton) && _registeredInstances.ContainsKey(serviceInfo); " is 145.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,GetRegistrationInfo,The length of the statement  "                return new RegistrationInfo(registeredTypeInfo.DeclaringType' registeredTypeInfo.ImplementingType' registeredTypeInfo.RegistrationType' hasSingletonInstance); " is 158.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,IsTypeRegisteredAsOpenGeneric,The length of the statement  "                    Log.Debug("An open generic type '{0}' is registered' registering new closed generic type '{1}' based on the open registration"' genericType.GetSafeFullName(false)' serviceType.GetSafeFullName(false)); " is 200.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,IsTypeRegisteredByMissingTypeHandler,The length of the statement  "                    Log.Debug("Late registering type '{0}' to instance of type '{1}' via MissingTypeEventArgs.ImplementingInstance"' serviceType.FullName' eventArgs.ImplementingInstance.GetType().FullName); " is 186.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,IsTypeRegisteredByMissingTypeHandler,The length of the statement  "                    Log.Debug("Late registering type '{0}' to type '{1}' via MissingTypeEventArgs.ImplementingType"' serviceType.FullName' eventArgs.ImplementingType.FullName); " is 156.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterInstance,The length of the statement  "            var registeredTypeInfo = new ServiceLocatorRegistration(serviceType' instance.GetType()' tag' RegistrationType.Singleton' x => instance); " is 137.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterInstance,The length of the statement  "            TypeRegistered.SafeInvoke(this' () => new TypeRegisteredEventArgs(registeredTypeInfo.DeclaringType' registeredTypeInfo.ImplementingType' tag' RegistrationType.Singleton)); " is 171.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterType,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("Cannot register interface type '{0}' as implementation' make sure to specify an actual class"' serviceImplementationType.GetSafeFullName(false)); " is 207.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterType,The length of the statement  "                string message = string.Format("The type '{0}' is abstract or can't be registered as '{1}'"' serviceImplementationType' serviceType); " is 133.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,RegisterType,The length of the statement  "            TypeRegistered.SafeInvoke(this' () => new TypeRegisteredEventArgs(registeredTypeInfo.DeclaringType' registeredTypeInfo.ImplementingType' tag' registeredTypeInfo.RegistrationType)); " is 180.
Long Statement,Catel.IoC,ServiceLocator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocator.cs,CreateServiceInstance,The length of the statement  "                ThrowTypeNotRegisteredException(registration.DeclaringType' "Failed to instantiate the type using the TypeFactory. Check if the required dependencies are registered as well or that the type has a valid constructor that can be used."); " is 234.
Long Statement,Catel.IoC,ServiceLocatorAutoRegistrationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocatorAutoRegistrationManager.cs,InspectLoadedAssemblies,The length of the statement  "                                var message = string.Format("The type '{0}' is abstract or can't be registered as '{1}'"' type' attribute.InterfaceType); " is 121.
Long Statement,Catel.IoC,ServiceLocatorAutoRegistrationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\ServiceLocatorAutoRegistrationManager.cs,InspectLoadedAssemblies,The length of the statement  "                                        _serviceLocator.RegisterTypeIfNotYetRegisteredWithTag(attribute.InterfaceType' type' attribute.Tag' attribute.RegistrationType); " is 128.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,InitializeAfterConstruction,The length of the statement  "                    throw Log.ErrorAndCreateException<InvalidOperationException>(ex' "Failed to set property '{0}.{1}' during property dependency injection"' type.Name' propertyInfo.Name); " is 168.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "              var instanceCreatedWithInjection = TryCreateToConstruct(typeToConstruct' cachedConstructor' tag' parameters' false' false' typeConstructorsMetadata); " is 149.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "              Log.Warning("Found constructor for type '{0}' in constructor' but it failed to create an instance. Removing the constructor from the cache"' typeToConstruct.FullName); " is 167.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "            Log.Debug("Creating instance of type '{0}' using specific parameters. No constructor found in the cache' so searching for the right one"' typeToConstruct.FullName); " is 164.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "            var constructors = typeConstructorsMetadata.GetConstructors(parameters.Length' !autoCompleteDependencies).SortByParametersMatchDistance(parameters).ToList(); " is 157.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "              var instanceCreatedWithInjection = TryCreateToConstruct(typeToConstruct' constructor' tag' parameters' true' i < constructors.Count - 1' typeConstructorsMetadata); " is 163.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "                ApiCop.UpdateRule<TooManyDependenciesApiCopRule>("TypeFactory.LimitDependencyInjection"' x => x.SetNumberOfDependenciesInjected(typeToConstruct' constructor.GetParameters().Count())); " is 183.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CreateInstanceWithSpecifiedParameters,The length of the statement  "            Log.Debug("No constructor could be used' cannot construct type '{0}' with the specified parameters"' typeToConstruct.FullName); " is 127.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,CanConstructorBeUsed,The length of the statement  "                                Log.Debug("Constructor is not valid because parameter '{0}' cannot be resolved from the dependency resolver"' parameterToResolve.Name); " is 135.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,TryCreateToConstruct,The length of the statement  "                    if (!typeof(string).IsAssignableFromEx(parameterTypeToResolve) && typeof(IEnumerable).IsAssignableFromEx(parameterTypeToResolve)) " is 129.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,TryCreateToConstruct,The length of the statement  "                            else if (typeof(IReadOnlyList<>).MakeGenericType(collectionElementType).IsAssignableFromEx(parameterTypeToResolve) || typeof(IReadOnlyCollection<>).MakeGenericType(collectionElementType).IsAssignableFromEx(parameterTypeToResolve)) " is 230.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,TryCreateToConstruct,The length of the statement  "                            else if (typeof(IList<>).MakeGenericType(collectionElementType).IsAssignableFromEx(parameterTypeToResolve) || typeof(ICollection<>).MakeGenericType(collectionElementType).IsAssignableFromEx(parameterTypeToResolve)) " is 214.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,ClearCache,The length of the statement  "            // Clear cache isn't really that important' it's better to prevent deadlocks. How can a deadlock occur? If thread x is creating  " is 127.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,ClearCache,The length of the statement  "            // a type and loads an assembly' but thread y is also loading an assembly. Thread x will lock because it's creating the type'  " is 125.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,ClearCache,The length of the statement  "            // thread y will lock because it wants to clear the cache because new types were added. In that case ignore clearing the cache " is 126.
Long Statement,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,ClearCache,The length of the statement  "            // Edit: Probability of loading assembly inside of lock have been drastically reduced so comment above probably isn't relevant " is 126.
Long Statement,Catel.IoC,TypeRequestPath,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeRequestPath.cs,Branch,The length of the statement  "                    $"Found a circular dependency '{circlePath}' while resolving '{parent.FirstType}. For more information' view the enclosed TypeRequestPath'"); " is 141.
Long Statement,Catel.Linq,EnumerableExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Linq\Extensions\EnumerableExtensions.cs,ToSystemArray,The length of the statement  "            var methodInfo = ToArrayGenericMethodInfoCache.GetFromCacheOrFetch(type' () => ToArrayMethodInfo.MakeGenericMethod(type)); " is 122.
Long Statement,Catel.Linq,EnumerableExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Linq\Extensions\EnumerableExtensions.cs,ToList,The length of the statement  "            var methodInfo = ToListGenericMethodInfoCache.GetFromCacheOrFetch(type' () => ToListMethodInfo.MakeGenericMethod(type)); " is 120.
Long Statement,Catel.Linq,EnumerableExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Linq\Extensions\EnumerableExtensions.cs,AsReadOnly,The length of the statement  "            var methodInfo = AsReadOnlyGenericMethodInfoCache.GetFromCacheOrFetch(type' () => list.GetType().GetMethodEx("AsReadOnly")); " is 124.
Long Statement,Catel.Logging,Log,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Log.cs,WriteMessage,The length of the statement  "                var eventArgs = new LogMessageEventArgs(this' string.Format("{0}{1}"' new string(' '' IndentLevel * IndentSize)' message ?? string.Empty)' extraData' logData' logEvent' now); " is 174.
Long Statement,Catel.Logging,LogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogListenerBase.cs,FormatLogEvent,The length of the statement  "            var logMessage = string.Format("{0} => [{1}] [{2}] [{3}] {4}"' time.ToString(_timeFormat)' LogEventStrings[logEvent]' log.Name' ThreadHelper.GetCurrentThreadId()' message); " is 172.
Long Statement,Catel.Logging,LogManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogManager.cs,GetCatelLogger,The length of the statement  "                    throw new ArgumentException(string.Format("An element with the same key already exists in the {0} and does not implement {1}."' typeof(LogManager).Name' typeof(ICatelLog).Name)); " is 178.
Long Statement,Catel.Messaging,MessageMediatorHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\Helpers\MessageMediatorHelper.cs,SubscribeRecipient,The length of the statement  "                            throw Log.ErrorAndCreateException<InvalidCastException>("Cannot cast '{0}' to Action or Action<T> delegate type."' methodInfo.Name); " is 132.
Long Statement,Catel.Messaging,MessageMediator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\MessageMediator.cs,Register,The length of the statement  "                    Log.Warning("Same handler for message type '{0}' with tag '{1}' is already registered' skipping registration"' messageType.Name' ObjectToStringHelper.ToString(tag)); " is 165.
Long Statement,Catel.Messaging,MessageMediator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\MessageMediator.cs,Register,The length of the statement  "                Log.Debug("Registered handler for message type '{0}' with tag '{1}'"' messageType.Name' ObjectToStringHelper.ToString(tag)); " is 124.
Long Statement,Catel.Messaging,MessageMediator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\MessageMediator.cs,Unregister,The length of the statement  "                            Log.Debug("Unregistered handler for message type '{0}' with tag '{1}'"' messageType.Name' ObjectToStringHelper.ToString(tag)); " is 126.
Long Statement,Catel.Messaging,MessageMediator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\MessageMediator.cs,Unregister,The length of the statement  "                Log.Warning("Failed to unregister handler for message type '{0}' with tag '{1}' because handler was not registered"' messageType.Name' ObjectToStringHelper.ToString(tag)); " is 171.
Long Statement,Catel.Messaging,MessageMediator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\MessageMediator.cs,SendMessage,The length of the statement  "            Log.Debug("Sending message of type '{0}' with tag '{1}'"' message.GetType().FullName' ObjectToStringHelper.ToString(tag)); " is 122.
Long Statement,Catel.Messaging,MessageMediator,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Messaging\MessageMediator.cs,UnregisterRecipient,The length of the statement  "                Log.Debug("Unregistered '{0}' handlers for the recipient with tag '{1}'"' handlerCounter' ObjectToStringHelper.ToString(tag)); " is 126.
Long Statement,Catel.Reflection,MemberInfoExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\MemberInfoExtensions.cs,GetSignature,The length of the statement  "                var param = constructorInfo.GetParameters().Select(p => string.Format("{0} {1}"' p.ParameterType.Name' p.Name)).ToArray(); " is 122.
Long Statement,Catel.Reflection,MemberInfoExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\MemberInfoExtensions.cs,SortByParametersMatchDistance,The length of the statement  "                return constructorDistances.OrderBy(constructor => constructor.Distance).Select(constructor => constructor.Constructor); " is 120.
Long Statement,Catel.Reflection,MemberInfoExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\MemberInfoExtensions.cs,IsStatic,The length of the statement  "            return (propertyInfo.CanRead && propertyInfo.GetMethod.IsStatic) || (propertyInfo.CanWrite && propertyInfo.SetMethod.IsStatic); " is 127.
Long Statement,Catel.Reflection,MemberInfoExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\MemberInfoExtensions.cs,IsStatic,The length of the statement  "            return (propertyInfo.CanRead && propertyInfo.GetGetMethod().IsStatic) || (propertyInfo.CanWrite && propertyInfo.GetSetMethod().IsStatic); " is 137.
Long Statement,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetGenericTypeDefinitionEx,The length of the statement  "                throw new NotSupportedException(string.Format("The type '{0}' is not generic' cannot get generic type"' type.FullName)); " is 120.
Long Statement,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetConstructorEx,The length of the statement  "            return _constructorCache.GetFromCacheOrFetch(cacheKey' () => type.GetTypeInfo().GetConstructor(types' BindingFlagsHelper.GetFinalBindingFlags(false' false))); " is 158.
Long Statement,Catel.Reflection,ReflectionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.assembly.cs,GetMethodEx,The length of the statement  "            return _methodCache.GetFromCacheOrFetch(cacheKey' () => type.GetTypeInfo().GetMethod(name' bindingFlags' null' types' null)); " is 125.
Long Statement,Catel.Reflection,TypeExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\TypeExtensions.cs,IsBasicType,The length of the statement  "            if (type == typeof(string) || type.IsPrimitiveEx() || type.IsEnumEx() || type == typeof(DateTime) || type == typeof(decimal) || type == typeof(Guid)) " is 149.
Long Statement,Catel.Reflection,TypeExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\TypeExtensions.cs,GetCollectionElementType,The length of the statement  "                genericEnumerableInterface = type.GetInterfacesEx().FirstOrDefault(i => i.Name.StartsWith("IEnumerable") && i.IsGenericTypeEx()); " is 129.
Long Statement,Catel.Reflection,AssemblyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\AssemblyHelper.cs,GetAllTypesSafely,The length of the statement  "                Log.Warning("A ReflectionTypeLoadException occured' adding all {0} types that were loaded correctly"' foundAssemblyTypes.Length); " is 129.
Long Statement,Catel.Reflection,PropertyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\PropertyHelper.cs,TryGetPropertyValue,The length of the statement  "                        "Property '{0}' is not found on the object '{1}'' probably the wrong field is being mapped"' property' obj.GetType().Name); " is 123.
Long Statement,Catel.Reflection,PropertyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\PropertyHelper.cs,TrySetPropertyValue,The length of the statement  "                        "Property '{0}' is not found on the object '{1}'' probably the wrong field is being mapped"' property' obj.GetType().Name); " is 123.
Long Statement,Catel.Reflection,PropertyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\PropertyHelper.cs,GetPropertyInfo,The length of the statement  "                    if (string.Equals(propertyInfo.Name' property' ignoreCase ? StringComparison.OrdinalIgnoreCase : StringComparison.Ordinal)) " is 123.
Long Statement,Catel.Reflection,PropertyHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\PropertyHelper.cs,GetPropertyName,The length of the statement  "                if (allowNested && (memberExpression.Expression != null) && (memberExpression.Expression.NodeType == ExpressionType.MemberAccess)) " is 130.
Long Statement,Catel.Reflection,TypeHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\TypeHelper.cs,GetTypedInstance,The length of the statement  "                throw Log.ErrorAndCreateException<NotSupportedException>("Expected an instance of '{0}'' but retrieved an instance of '{1}'' cannot return the typed instance"' typeof (TTargetType).Name' instance.GetType().Name); " is 212.
Long Statement,Catel.Reflection,TypeHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\TypeHelper.cs,ConvertTypeToVersionIndependentType,The length of the statement  "                newType = newType.Replace(string.Format(CultureInfo.InvariantCulture' "[{0}]"' FormatInnerTypes(innerTypes' false))' string.Empty); " is 131.
Long Statement,Catel.Reflection,TypeHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\TypeHelper.cs,ConvertTypeToVersionIndependentType,The length of the statement  "                    newType = newType.Insert(innerTypesIndex' string.Format(CultureInfo.InvariantCulture' "[{0}]"' FormatInnerTypes(innerTypes' stripAssemblies))); " is 143.
Long Statement,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetTypeBySplittingInternals,The length of the statement  "                var typeWithImprovedInnerTypes = string.Format("{0}[{1}]"' typeWithInnerTypes.Substring(0' firstBracketIndex)' TypeHelper.FormatInnerTypes(innerTypesNames.ToArray())); " is 167.
Long Statement,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,InitializeTypes,The length of the statement  "                var assembliesToInitialize = checkSingleAssemblyOnly ? new List<Assembly>(new[] { assembly }) : AssemblyHelper.GetLoadedAssemblies(); " is 133.
Long Statement,Catel.Runtime.Serialization,ObjectAdapter,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\ObjectAdapter.cs,GetMemberValue,The length of the statement  "                Log.Warning(ex' "Failed to get value of member '{0}.{1}'' skipping item during serialization"' modelType.GetSafeFullName(false)' memberName); " is 141.
Long Statement,Catel.Runtime.Serialization,ObjectAdapter,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\ObjectAdapter.cs,SetMemberValue,The length of the statement  "                        Log.Warning("Failed to set property '{0}.{1}' because the member cannot be found on the model"' modelType.GetSafeFullName(false)' member.Name); " is 143.
Long Statement,Catel.Runtime.Serialization,ObjectAdapter,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\ObjectAdapter.cs,SetMemberValue,The length of the statement  "                        Log.Warning("Failed to set field '{0}.{1}' because the member cannot be found on the model"' modelType.GetSafeFullName(false)' member.Name); " is 140.
Long Statement,Catel.Runtime.Serialization,ObjectAdapter,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\ObjectAdapter.cs,SetMemberValue,The length of the statement  "                Log.Warning(ex' "Failed to populate '{0}.{1}'' setting the member value threw an exception"' modelType.GetSafeFullName(false)' member.Name); " is 140.
Long Statement,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,GetCatelPropertiesToSerialize,The length of the statement  "                        Log.Warning("Property '{0}' is not serializable' so will be excluded from the serialization. If this property needs to be included' use the 'IncludeInSerializationAttribute'"' propertyData.Name); " is 195.
Long Statement,Catel.Runtime.Serialization,SerializationManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializationManager.cs,GetRegularProperties,The length of the statement  "                    var memberMetadata = new MemberMetadata(type' propertyInfo.PropertyType' SerializationMemberGroup.RegularProperty' propertyInfo.Name) " is 133.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,Deserialize,The length of the statement  "                using (var context = GetContext(model' model.GetType()' stream' SerializationContextMode.Deserialization' configuration)) " is 121.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,Deserialize,The length of the statement  "                using (var finalContext = GetContext(model' model.GetType()' serializationContext' SerializationContextMode.Deserialization' configuration)) " is 140.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,Deserialize,The length of the statement  "            Log.Debug("Using '{0}' serializer modifiers to deserialize type '{1}'"' serializerModifiers.Length' context.ModelTypeName); " is 123.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,The length of the statement  "                using (var finalContext = GetContext(modelType' serializationContext' SerializationContextMode.Deserialization' configuration)) " is 127.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,The length of the statement  "                            throw Log.ErrorAndCreateException<NotSupportedException>("'{0}' seems to be a dictionary' but target model cannot be updated because it does not implement IDictionary"' " is 168.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,The length of the statement  "                                throw Log.ErrorAndCreateException<NotSupportedException>("'{0}' seems to be a collection' but target model cannot be updated because it does not implement IList"' " is 162.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,The length of the statement  "                        throw Log.ErrorAndCreateException<NotSupportedException>("'{0}' seems to be a dictionary' but target model cannot be updated because it does not implement IDictionary"' " is 168.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeMembers,The length of the statement  "                            throw Log.ErrorAndCreateException<NotSupportedException>("'{0}' seems to be a collection' but target model cannot be updated because it does not implement IList"' " is 162.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,DeserializeUsingObjectParse,The length of the statement  "                Log.Warning(ex' $"Failed to deserialize type '{memberValue.GetBestMemberType().GetSafeFullName(false)}' using Parse(string' IFormatProvider)"); " is 143.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,The length of the statement  "                listToSerialize.Add(new MemberValue(SerializationMemberGroup.SimpleRootObject' modelType' modelType' RootObjectName' RootObjectName' model)); " is 141.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,The length of the statement  "                    listToSerialize.Add(new MemberValue(SerializationMemberGroup.Dictionary' modelType' modelType' CollectionName' CollectionName' model)); " is 135.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,The length of the statement  "                listToSerialize.Add(new MemberValue(SerializationMemberGroup.Collection' modelType' modelType' CollectionName' CollectionName' model)); " is 135.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,The length of the statement  "                listToSerialize.Add(new MemberValue(SerializationMemberGroup.RegularProperty' modelType' keyType' "Key"' "Key"' keyValuePair.Key)); " is 131.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,The length of the statement  "                listToSerialize.Add(new MemberValue(SerializationMemberGroup.RegularProperty' modelType' valueType' "Value"' "Value"' keyValuePair.Value)); " is 139.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetCurrentSerializationScopeManager,The length of the statement  "            var scopeManager = ScopeManager<SerializationScope>.GetScopeManager(scopeName' () => new SerializationScope(this' configuration ?? DefaultSerializationConfiguration)); " is 167.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetObjectToStringMethod,The length of the statement  "                var method = memberType.GetMethodEx("ToString"' TypeArray.From<IFormatProvider>()' BindingFlags.Public | BindingFlags.Instance | BindingFlags.FlattenHierarchy); " is 160.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetObjectParseMethod,The length of the statement  "                var method = memberType.GetMethodEx("Parse"' TypeArray.From<string' IFormatProvider>()' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 163.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,Serialize,The length of the statement  "                using (var finalContext = GetContext(model' model.GetType()' context' SerializationContextMode.Serialization' configuration)) " is 125.
Long Statement,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,SerializeUsingObjectToString,The length of the statement  "                Log.Warning(ex' $"Failed to serialize type '{memberValue.GetBestMemberType().GetSafeFullName(false)}' using ToString(IFormatProvider)"); " is 136.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetDataContractSerializer,The length of the statement  "                var xmlSerializer = new DataContractSerializer(typeToSerialize' xmlName' rootNamespace ?? string.Empty' serializerTypeInfo.KnownTypes); " is 135.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The length of the statement  "                    // Interfaces / abstract classes are not a type' and in fact a LOT of types can be added (in fact every object implementing  " is 123.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The length of the statement  "                    // the interface). For serialization' this is not a problem (we know the exact type)' but for deserialization this IS an  " is 120.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The length of the statement  "                    // This is huge performance hit' but it's the cost for dynamic easy on-the-fly serialization in WPF and Silverlight. Luckily " is 124.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The length of the statement  "                    Log.Debug("Retrieving known types for generic argument '{0}' of '{1}'"' genericArgument.GetSafeFullName(false)' type.GetSafeFullName(false)); " is 141.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,GetKnownTypes,The length of the statement  "                Log.Debug("Found {0} additional known types for type '{1}'"' knowTypesByAttributes.Length' type.GetSafeFullName(false)); " is 120.
Long Statement,Catel.Runtime.Serialization.Xml,DataContractSerializerFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\DataContractSerializerFactory.cs,ShouldTypeBeIgnored,The length of the statement  "            // Error while getting known types for Type 'Catel.Test.Data.PropertyDataManagerFacts+SupportsGenericClasses+GenericClass`1[T]'. The type must not be an open or partial generic class. " is 183.
Long Statement,Catel.Runtime.Serialization.Xml,XmlHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\Helpers\XmlHelper.cs,ConvertToXml,The length of the statement  "            var dataContractSerializer = dataContractSerializerFactory.GetDataContractSerializer(typeof(object)' objectType' elementName' null' null); " is 138.
Long Statement,Catel.Runtime.Serialization.Xml,XmlHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\Helpers\XmlHelper.cs,ConvertToObject,The length of the statement  "            var dataContractSerializer = dataContractSerializerFactory.GetDataContractSerializer(typeof(object)' objectType' xmlName' null' null); " is 134.
Long Statement,Catel.Runtime.Serialization.Xml,XmlHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\Helpers\XmlHelper.cs,ConvertToObject,The length of the statement  "                    dataContractSerializer = dataContractSerializerFactory.GetDataContractSerializer(typeof(object)' actualTypeToDeserialize' xmlName' null' null); " is 143.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WarmupMember,The length of the statement  "                            Log.Warning("Failed to retrieve the property info of '{0}.{1}' during warmup"' type.GetSafeFullName(false)' memberName); " is 120.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WarmupMember,The length of the statement  "                Log.Warning(ex' "Failed to warmup member '{0}.{1}'. This member might cause problems during serialization"' type.GetSafeFullName(false)' memberName); " is 149.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,BeforeDeserialization,The length of the statement  "                    Log.Warning("Trying to register custom object in graph with graph id '{0}'' but it seems it is already registered"' graphId); " is 125.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,DeserializeMember,The length of the statement  "                    //Log.Debug("Deserializing property {0}.{1} as xml attribute '{2}'"' modelType.FullName' memberValue.Name' mappedPropertyName); " is 127.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetContext,The length of the statement  "            var context = new SerializationContext<XmlSerializationContextInfo>(model' modelType' contextInfo' contextMode' configuration); " is 127.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The length of the statement  "                    Log.Error("Expected to find graph object with id '{0}' in ReferenceManager' but it was not found. Defaulting value for member '{1}' to null"' graphId' element.Name); " is 165.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The length of the statement  "                    Log.Warning("Property type for property '{0}' is '{1}' but found type info that it should be deserialized as '{2}'. Unfortunately the type cannot be found so the deserialization will probably fail."' " is 199.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The length of the statement  "                    throw Log.ErrorAndCreateException<NotSupportedException>("Cannot deserialize type '{0}'' it should implement IList in order to be deserialized"' propertyTypeToDeserialize.GetSafeFullName(false)); " is 195.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The length of the statement  "                    throw Log.ErrorAndCreateException<NotSupportedException>("Cannot deserialize type '{0}'' could not determine the element type of the collection"' propertyTypeToDeserialize.GetSafeFullName(false)); " is 196.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The length of the statement  "                var serializer = _dataContractSerializerFactory.GetDataContractSerializer(propertyTypeToDeserialize' childElementType' xmlName' null' null); " is 140.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,GetObjectFromXmlElement,The length of the statement  "                var serializer = _dataContractSerializerFactory.GetDataContractSerializer(modelType' propertyTypeToDeserialize' xmlName' null' null); " is 133.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WriteXmlElement,The length of the statement  "                    var serializer = _dataContractSerializerFactory.GetDataContractSerializer(modelType' memberTypeToSerialize' elementName' null' null); " is 133.
Long Statement,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WriteXmlElement,The length of the statement  "                                    Log.Debug("Existing reference detected for element type '{0}' with id '{1}'' only storing id"' memberTypeToSerialize.GetSafeFullName(false)' referenceInfo.Id); " is 159.
Long Statement,Catel.Services,LanguageService,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Services\LanguageService.cs,GetResourceContainer,The length of the statement  "            // Note: important to remove the current assembly' when reading from the current assembly' we cannot prefix [AssemblyName]/ " is 123.
Long Statement,Catel.Test,ExceptionTester,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Test\ExceptionTester.cs,CallMethodAndExpectException,The length of the statement  "                    throw new Exception(string.Format("Expected exception of type '{0}'' but actual type is '{1}'.\n\nInner exception: {2}"' " is 120.
Long Statement,Catel.Test,ExceptionTester,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Test\ExceptionTester.cs,CallMethodAndExpectException,The length of the statement  "                        throw new Exception(string.Format("Right exception was thrown' but custom exception validation check failed.\n\nInner exception: {0}"' ex.Message)); " is 148.
Long Statement,Catel.Test,ExceptionTester,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Test\ExceptionTester.cs,CallMethodAndExpectException,The length of the statement  "            throw new Exception(string.Format("Expected exception of type '{0}'' but no exception was thrown"' typeof (TException).FullName)); " is 130.
Long Statement,Catel.Threading,AsyncWaitQueueExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Extensions\AsyncWaitQueueExtensions.cs,EnqueueAsync,The length of the statement  "            ret.ContinueWith(_ => registration.Dispose()' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 139.
Long Statement,Catel.Threading,SynchronizationContextExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Extensions\SynchronizationContextExtensions.cs,AcquireScope,The length of the statement  "            return new DisposableToken<SynchronizationContext>(synchronizationContext' x => x.Instance.Acquire()' x => x.Instance.Release()); " is 129.
Long Statement,Catel.Threading,Dequeue<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Internal\Dequeue.cs,CheckExistingIndexArgument,The length of the statement  "                throw new ArgumentOutOfRangeException("index"' "Invalid existing index " + index + " for source length " + sourceLength); " is 121.
Long Statement,Catel.Threading,Dequeue<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Internal\Dequeue.cs,CheckRangeArguments,The length of the statement  "                throw new ArgumentException("Invalid offset (" + offset + ") or count + (" + count + ") for source length " + sourceLength); " is 124.
Long Statement,Catel.Threading,Timer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Timer.cs,SetUpTimer,The length of the statement  "                _timer = new System.Threading.Timer(OnTimerTick' cancellationToken' Timeout.InfiniteTimeSpan' Timeout.InfiniteTimeSpan); " is 120.
Complex Conditional,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,IsValidationProperty,The conditional expression  "(string.CompareOrdinal(propertyName' WarningMessageProperty) == 0) ||                  (string.CompareOrdinal(propertyName' HasWarningsMessageProperty) == 0) ||                  (string.CompareOrdinal(propertyName' ErrorMessageProperty) == 0) ||                  (string.CompareOrdinal(propertyName' HasErrorsMessageProperty) == 0)"  is complex.
Complex Conditional,Catel.IoC,RegistrationConventionHandler,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\RegistrationConventionHandler.cs,RemoveIfAlreadyRegistered,The conditional expression  "_serviceLocator.IsTypeRegistered(type) && !type.IsAssignableFromEx(typeof(IServiceLocator)) && !type.IsAssignableFromEx(typeof(ITypeFactory)) && !type.IsAssignableFromEx(typeof(IDependencyResolver)) && !type.IsAssignableFromEx(typeof(IRegistrationConventionHandler))"  is complex.
Complex Conditional,Catel.Reflection,TypeExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\TypeExtensions.cs,IsBasicType,The conditional expression  "type == typeof(string) || type.IsPrimitiveEx() || type.IsEnumEx() || type == typeof(DateTime) || type == typeof(decimal) || type == typeof(Guid)"  is complex.
Complex Conditional,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,ShouldIgnoreType,The conditional expression  "typeName.Contains("<PrivateImplementationDetails>") ||                  typeName.Contains("+<") || // C# compiler generated classes                  typeName.Contains("+_Closure") || // VB.NET compiler generated classes                  typeName.Contains(".__") || // System.Runtime.CompilerServices.*                  typeName.Contains("Interop+") || // System.IO.FileSystem' System.Net.Sockets' etc                  typeName.Contains("c__DisplayClass") ||                  typeName.Contains("d__") ||                  typeName.Contains("f__AnonymousType") ||                  typeName.Contains("o__") ||                  typeName.Contains("__DynamicallyInvokableAttribute") ||                  typeName.Contains("ProcessedByFody") ||                  typeName.Contains("FXAssembly") ||                  typeName.Contains("ThisAssembly") ||                  typeName.Contains("AssemblyRef") ||                  typeName.Contains("MS.Internal") ||                  typeName.Contains("::") ||                  typeName.Contains("\\*") ||                  typeName.Contains("_extraBytes_") ||                  typeName.Contains("CppImplementationDetails")"  is complex.
Empty Catch Block,Catel,ExceptionFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Factories\ExceptionFactory.cs,CreateException,The method has an empty catch block.
Empty Catch Block,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,TryResolveType,The method has an empty catch block.
Empty Catch Block,Catel.IoC,ServiceLocatorExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\Extensions\ServiceLocatorExtensions.conventions.cs,TryResolveType,The method has an empty catch block.
Empty Catch Block,Catel.IoC,TypeFactory,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\IoC\TypeFactory.cs,TryCreateToConstruct,The method has an empty catch block.
Empty Catch Block,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetTypesPrefilteredByAssembly,The method has an empty catch block.
Magic Number,Catel,ExceptionExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Extensions\ExceptionExtensions.cs,ToXml,The following statement contains a magic number: if (!ObjectHelper.IsNull(exception.StackTrace))              {                  root.Add                  (                      new XElement("StackTrace"'                          from frame in exception.StackTrace.Split('\n')                          let prettierFrame = frame.Substring(6).Trim()                          select new XElement("Frame"' prettierFrame))                  );              }
Magic Number,Catel,HashHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Helpers\HashHelper.cs,CombineHash,The following statement contains a magic number: int hash = 5381;
Magic Number,Catel,HashHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Helpers\HashHelper.cs,CombineHash,The following statement contains a magic number: foreach (int inp in hashCodes)              {                  hash = ((hash << 5) + hash) ^ inp;              }
Magic Number,Catel,StringToObjectHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Helpers\StringToObjectHelper.cs,CleanString,The following statement contains a magic number: while (value.StartsWith("(") && value.EndsWith(")"))              {                  value = value.Substring(1' value.Length - 2);              }
Magic Number,Catel.Logging,BatchLogListenerBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\BatchLogListenerBase.cs,BatchLogListenerBase,The following statement contains a magic number: var interval = TimeSpan.FromSeconds(5);
Magic Number,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The following statement contains a magic number: if (others != null && others.Length > 0)              {                  object[] args = { s1' s2' s3' s4' s5 };                  Array.Resize(ref args' 5 + others.Length);                  Array.Copy(others' 0' args' 5' others.Length);                    log?.WriteWithData(string.Format(messageFormat' args)' null' logEvent);              }              else              {                  log?.WriteWithData(string.Format(messageFormat' s1' s2' s3' s4' s5)' null' logEvent);              }
Magic Number,Catel.Logging,LogExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Extensions\LogExtensions.cs,Write,The following statement contains a magic number: if (others != null && others.Length > 0)              {                  object[] args = { s1' s2' s3' s4' s5 };                  Array.Resize(ref args' 5 + others.Length);                  Array.Copy(others' 0' args' 5' others.Length);                    log?.WriteWithData(string.Format(messageFormat' args)' null' logEvent);              }              else              {                  log?.WriteWithData(string.Format(messageFormat' s1' s2' s3' s4' s5)' null' logEvent);              }
Magic Number,Catel.Logging,CatelEventSource,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\EtwLogListener.cs,Info,The following statement contains a magic number: WriteEvent(2' message' Name);
Magic Number,Catel.Logging,CatelEventSource,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\EtwLogListener.cs,Warning,The following statement contains a magic number: WriteEvent(3' message' Name);
Magic Number,Catel.Logging,CatelEventSource,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\EtwLogListener.cs,Error,The following statement contains a magic number: WriteEvent(4' message' Name);
Magic Number,Catel.Logging,RollingInMemoryLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\RollingInMemoryLogListener.cs,RollingInMemoryLogListener,The following statement contains a magic number: MaximumNumberOfLogEntries = 250;
Magic Number,Catel.Logging,RollingInMemoryLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\RollingInMemoryLogListener.cs,RollingInMemoryLogListener,The following statement contains a magic number: MaximumNumberOfWarningLogEntries = 50;
Magic Number,Catel.Logging,RollingInMemoryLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\RollingInMemoryLogListener.cs,RollingInMemoryLogListener,The following statement contains a magic number: MaximumNumberOfErrorLogEntries = 50;
Magic Number,Catel.Reflection,AssemblyExtensions,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\AssemblyExtensions.cs,Version,The following statement contains a magic number: if (splittedAssemblyFullName.Length < 2)              {                  return "unknown";              }
Magic Number,Catel.Reflection,ReflectionCacheKey,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.cache.cs,CalculateHashCode,The following statement contains a magic number: unchecked                  {                      int hashCode = (Type != null ? Type.GetHashCode() : 0);                      hashCode = (hashCode * 397) ^ (int)ReflectionType;                      hashCode = (hashCode * 397) ^ (int)BindingFlags;                      hashCode = (hashCode * 397) ^ (AdditionalInfo != null ? AdditionalInfo.GetHashCode() : 0);                      return hashCode;                  }
Magic Number,Catel.Reflection,ReflectionCacheKey,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.cache.cs,CalculateHashCode,The following statement contains a magic number: unchecked                  {                      int hashCode = (Type != null ? Type.GetHashCode() : 0);                      hashCode = (hashCode * 397) ^ (int)ReflectionType;                      hashCode = (hashCode * 397) ^ (int)BindingFlags;                      hashCode = (hashCode * 397) ^ (AdditionalInfo != null ? AdditionalInfo.GetHashCode() : 0);                      return hashCode;                  }
Magic Number,Catel.Reflection,ReflectionCacheKey,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Extensions\ReflectionExtensions.cache.cs,CalculateHashCode,The following statement contains a magic number: unchecked                  {                      int hashCode = (Type != null ? Type.GetHashCode() : 0);                      hashCode = (hashCode * 397) ^ (int)ReflectionType;                      hashCode = (hashCode * 397) ^ (int)BindingFlags;                      hashCode = (hashCode * 397) ^ (AdditionalInfo != null ? AdditionalInfo.GetHashCode() : 0);                      return hashCode;                  }
Magic Number,Catel.Reflection,TypeHelper,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\Helpers\TypeHelper.cs,GetAssemblyName,The following statement contains a magic number: if (lastGenericIndex != -1)              {                  fullTypeName = fullTypeName.Substring(lastGenericIndex + 2);              }
Magic Number,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetTypesPrefilteredByAssembly,The following statement contains a magic number: var retryCount = 3;
Magic Number,Catel.Reflection,TypeCache,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Reflection\TypeCache.cs,GetAssemblyTypes,The following statement contains a magic number: if (allowMultithreadedInitialization)              {                  // We try to use multiple threads since GetAllTypesSafely() is an expensive operation' try to multithread                  // without causing to much expansive context switching going on. Using .AsParallel wasn't doing a lot.                  //                   // After some manual performance benchmarking' the optimum for UWP apps (the most important for performance)                  // is between 15 and 25 threads                  const int PreferredNumberOfThreads = 20;                    var tasks = new List<Task<List<KeyValuePair<Assembly' HashSet<Type>>>>>();                  var taskLists = new List<List<Assembly>>();                    var assemblyCount = assemblies.Count;                  var assembliesPerBatch = (int)Math.Ceiling(assemblyCount / (double)PreferredNumberOfThreads);                  var batchCount = (int)Math.Ceiling(assemblyCount / (double)assembliesPerBatch);                    for (var i = 0; i < batchCount; i++)                  {                      var taskList = new List<Assembly>();                        var startIndex = (assembliesPerBatch * i);                      var endIndex = Math.Min(assembliesPerBatch * (i + 1)' assemblyCount);                        for (var j = startIndex; j < endIndex; j++)                      {                          taskList.Add(assemblies[j]);                      }                        taskLists.Add(taskList);                  }                    for (var i = 0; i < taskLists.Count; i++)                  {                      var taskList = taskLists[i];                        var task = TaskHelper.Run(() =>                      {                          var taskResults = new List<KeyValuePair<Assembly' HashSet<Type>>>();                            foreach (var assembly in taskList)                          {                              var assemblyTypes = assembly.GetAllTypesSafely();                              taskResults.Add(new KeyValuePair<Assembly' HashSet<Type>>(assembly' new HashSet<Type>(assemblyTypes)));                          }                            return taskResults;                      });                        tasks.Add(task);                  }                    var waitTask = TaskShim.WhenAll(tasks);                  waitTask.Wait();                    foreach (var task in tasks)                  {                      var results = task.Result;                        foreach (var result in results)                      {                          dictionary[result.Key] = result.Value;                      }                  }              }              else              {                  var types = (from assembly in assemblies                               select new KeyValuePair<Assembly' HashSet<Type>>(assembly' new HashSet<Type>(assembly.GetAllTypesSafely())));    #if PCL                  var results = types;  #else                  var results = types.AsParallel();  #endif                    return results.ToDictionary(p => p.Key' p => p.Value);              }
Magic Number,Catel.Runtime.Serialization,KeyValuePairSerializerModifier,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\Modifiers\KeyValuePairSerializerModifier.cs,DeserializeMember,The following statement contains a magic number: if (!string.IsNullOrEmpty(valueAsString))              {                  if (valueAsString.StartsWith(Prefix))                  {                      var splittedValues = valueAsString.Split(new[] { Splitter }' StringSplitOptions.None);                        var keyValuePairType = typeof(KeyValuePair<'>);                      var keyType = TypeCache.GetTypeWithoutAssembly(splittedValues[1]' allowInitialization: false);                      var valueType = TypeCache.GetTypeWithoutAssembly(splittedValues[2]' allowInitialization: false);                      var keyValue = splittedValues[3];                      var valueValue = splittedValues[4];                        // TODO: consider caching                      var keyValuePairGenericType = keyValuePairType.MakeGenericType(keyType' valueType);                        var key = StringToObjectHelper.ToRightType(keyType' keyValue);                      var value = StringToObjectHelper.ToRightType(valueType' valueValue);                        var keyValuePair = Activator.CreateInstance(keyValuePairGenericType' new [] { key' value });                        memberValue.Value = keyValuePair;                  }              }
Magic Number,Catel.Runtime.Serialization,KeyValuePairSerializerModifier,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\Modifiers\KeyValuePairSerializerModifier.cs,DeserializeMember,The following statement contains a magic number: if (!string.IsNullOrEmpty(valueAsString))              {                  if (valueAsString.StartsWith(Prefix))                  {                      var splittedValues = valueAsString.Split(new[] { Splitter }' StringSplitOptions.None);                        var keyValuePairType = typeof(KeyValuePair<'>);                      var keyType = TypeCache.GetTypeWithoutAssembly(splittedValues[1]' allowInitialization: false);                      var valueType = TypeCache.GetTypeWithoutAssembly(splittedValues[2]' allowInitialization: false);                      var keyValue = splittedValues[3];                      var valueValue = splittedValues[4];                        // TODO: consider caching                      var keyValuePairGenericType = keyValuePairType.MakeGenericType(keyType' valueType);                        var key = StringToObjectHelper.ToRightType(keyType' keyValue);                      var value = StringToObjectHelper.ToRightType(valueType' valueValue);                        var keyValuePair = Activator.CreateInstance(keyValuePairGenericType' new [] { key' value });                        memberValue.Value = keyValuePair;                  }              }
Magic Number,Catel.Runtime.Serialization,KeyValuePairSerializerModifier,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\Modifiers\KeyValuePairSerializerModifier.cs,DeserializeMember,The following statement contains a magic number: if (!string.IsNullOrEmpty(valueAsString))              {                  if (valueAsString.StartsWith(Prefix))                  {                      var splittedValues = valueAsString.Split(new[] { Splitter }' StringSplitOptions.None);                        var keyValuePairType = typeof(KeyValuePair<'>);                      var keyType = TypeCache.GetTypeWithoutAssembly(splittedValues[1]' allowInitialization: false);                      var valueType = TypeCache.GetTypeWithoutAssembly(splittedValues[2]' allowInitialization: false);                      var keyValue = splittedValues[3];                      var valueValue = splittedValues[4];                        // TODO: consider caching                      var keyValuePairGenericType = keyValuePairType.MakeGenericType(keyType' valueType);                        var key = StringToObjectHelper.ToRightType(keyType' keyValue);                      var value = StringToObjectHelper.ToRightType(valueType' valueValue);                        var keyValuePair = Activator.CreateInstance(keyValuePairGenericType' new [] { key' value });                        memberValue.Value = keyValuePair;                  }              }
Magic Number,Catel.Runtime.Serialization,SerializerBase<TSerializationContext>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\SerializerBase.deserialization.cs,GetSerializableMembers,The following statement contains a magic number: if (modelType == typeof(SerializableKeyValuePair))              {                  var keyValuePair = (SerializableKeyValuePair)model;                    var keyType = typeof(object);                  var valueType = typeof(object);                    // Search max 2 levels deep' if not found' then we failed                  var parentDictionary = context.FindParentType(x => x.IsDictionary()' 2);                  if (parentDictionary != null)                  {                      var genericTypeDefinition = parentDictionary.GetGenericArgumentsEx();                        keyType = genericTypeDefinition[0];                      valueType = genericTypeDefinition[1];                  }                    listToSerialize.Add(new MemberValue(SerializationMemberGroup.RegularProperty' modelType' keyType' "Key"' "Key"' keyValuePair.Key));                  listToSerialize.Add(new MemberValue(SerializationMemberGroup.RegularProperty' modelType' valueType' "Value"' "Value"' keyValuePair.Value));                    return listToSerialize;              }
Magic Number,Catel.Services,LanguageResourceKey,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Services\Models\LanguageResourceKey.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (ResourceName.GetHashCode() * 397) ^ CultureInfo.GetHashCode();              }
Magic Number,Catel.Threading,Dequeue<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Internal\Dequeue.cs,DoInsertRange,The following statement contains a magic number: if (index < Count/2)              {                  // Inserting into the first half of the list                    // Move lower items down: [0' index) -> [Capacity - collectionCount' Capacity - collectionCount + index)                  // This clears out the low "index" number of items' moving them "collectionCount" places down;                  //   after rotation' there will be a "collectionCount"-sized hole at "index".                  int copyCount = index;                  int writeIndex = Capacity - collectionCount;                  for (int j = 0; j != copyCount; ++j)                  {                      buffer[DequeueIndexToBufferIndex(writeIndex + j)] = buffer[DequeueIndexToBufferIndex(j)];                  }                    // Rotate to the new view                  this.PreDecrement(collectionCount);              }              else              {                  // Inserting into the second half of the list                    // Move higher items up: [index' count) -> [index + collectionCount' collectionCount + count)                  int copyCount = Count - index;                  int writeIndex = index + collectionCount;                  for (int j = copyCount - 1; j != -1; --j)                  {                      buffer[DequeueIndexToBufferIndex(writeIndex + j)] = buffer[DequeueIndexToBufferIndex(index + j)];                  }              }
Magic Number,Catel.Threading,Dequeue<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Internal\Dequeue.cs,DoRemoveRange,The following statement contains a magic number: if ((index + (collectionCount/2)) < Count/2)              {                  // Removing from first half of list                    // Move lower items up: [0' index) -> [collectionCount' collectionCount + index)                  int copyCount = index;                  int writeIndex = collectionCount;                  for (int j = copyCount - 1; j != -1; --j)                  {                      buffer[DequeueIndexToBufferIndex(writeIndex + j)] = buffer[DequeueIndexToBufferIndex(j)];                  }                    // Rotate to new view                  this.PostIncrement(collectionCount);              }              else              {                  // Removing from second half of list                    // Move higher items down: [index + collectionCount' count) -> [index' count - collectionCount)                  int copyCount = Count - collectionCount - index;                  int readIndex = index + collectionCount;                  for (int j = 0; j != copyCount; ++j)                  {                      buffer[DequeueIndexToBufferIndex(index + j)] = buffer[DequeueIndexToBufferIndex(readIndex + j)];                  }              }
Magic Number,Catel.Threading,Dequeue<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Internal\Dequeue.cs,DoRemoveRange,The following statement contains a magic number: if ((index + (collectionCount/2)) < Count/2)              {                  // Removing from first half of list                    // Move lower items up: [0' index) -> [collectionCount' collectionCount + index)                  int copyCount = index;                  int writeIndex = collectionCount;                  for (int j = copyCount - 1; j != -1; --j)                  {                      buffer[DequeueIndexToBufferIndex(writeIndex + j)] = buffer[DequeueIndexToBufferIndex(j)];                  }                    // Rotate to new view                  this.PostIncrement(collectionCount);              }              else              {                  // Removing from second half of list                    // Move higher items down: [index + collectionCount' count) -> [index' count - collectionCount)                  int copyCount = Count - collectionCount - index;                  int readIndex = index + collectionCount;                  for (int j = 0; j != copyCount; ++j)                  {                      buffer[DequeueIndexToBufferIndex(index + j)] = buffer[DequeueIndexToBufferIndex(readIndex + j)];                  }              }
Magic Number,Catel.Threading,Dequeue<T>,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Threading\Internal\Dequeue.cs,EnsureCapacityForOneElement,The following statement contains a magic number: if (this.IsFull)              {                  this.Capacity = this.Capacity*2;              }
Missing Default,Catel.Data,ValidatableModelBase,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Data\ValidatableModelBase.cs,NotifyValidationResult,The following switch statement is missing a default case: switch (validationResult.ValidationResultType)              {                  case ValidationResultType.Warning:                      NotifyWarningsChanged(propertyName' notifyGlobal);                      break;                    case ValidationResultType.Error:                      NotifyErrorsChanged(propertyName' notifyGlobal);                      break;              }
Missing Default,Catel.Logging,EtwLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\EtwLogListener.cs,Write,The following switch statement is missing a default case: switch (logEvent)              {                  case LogEvent.Debug:                      _eventSource.Debug(message);                      break;                    case LogEvent.Info:                      _eventSource.Info(message);                      break;                    case LogEvent.Warning:                      _eventSource.Warning(message);                      break;                    case LogEvent.Error:                      _eventSource.Error(message);                      break;              }
Missing Default,Catel.Logging,RollingInMemoryLogListener,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\Listeners\RollingInMemoryLogListener.cs,Write,The following switch statement is missing a default case: switch (logEvent)              {                  case LogEvent.Warning:                      AddLogEvent(_lastWarningLogEntries' logEntry' MaximumNumberOfWarningLogEntries);                      break;                    case LogEvent.Error:                      AddLogEvent(_lastErrorLogEntries' logEntry' MaximumNumberOfErrorLogEntries);                      break;              }
Missing Default,Catel.Logging,LogManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogManager.cs,OnLogMessage,The following switch statement is missing a default case: switch (e.LogEvent)                      {                          case LogEvent.Debug:                              listener.Debug(e.Log' e.Message' e.ExtraData' e.LogData' e.Time);                              break;                            case LogEvent.Info:                              listener.Info(e.Log' e.Message' e.ExtraData' e.LogData' e.Time);                              break;                            case LogEvent.Warning:                              listener.Warning(e.Log' e.Message' e.ExtraData' e.LogData' e.Time);                              break;                            case LogEvent.Error:                              listener.Error(e.Log' e.Message' e.ExtraData' e.LogData' e.Time);                              break;                            case LogEvent.Status:                              listener.Status(e.Log' e.Message' e.ExtraData' e.LogData' e.Time);                              break;                      }
Missing Default,Catel.Logging,LogManager,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogManager.cs,IsListenerInterested,The following switch statement is missing a default case: switch (logEvent)              {                  case LogEvent.Debug:                      return listener.IsDebugEnabled;                    case LogEvent.Info:                      return listener.IsInfoEnabled;                    case LogEvent.Warning:                      return listener.IsWarningEnabled;                    case LogEvent.Error:                      return listener.IsErrorEnabled;                    case LogEvent.Status:                      return listener.IsStatusEnabled;              }
Missing Default,Catel.Logging,LogInfo,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Logging\LogManager.cs,IsLogEventEnabled,The following switch statement is missing a default case: switch (logEvent)                  {                      case LogEvent.Debug:                          return IsDebugEnabled;                        case LogEvent.Info:                          return IsInfoEnabled;                        case LogEvent.Warning:                          return IsWarningEnabled;                        case LogEvent.Error:                          return IsErrorEnabled;                        case LogEvent.Status:                          return IsStatusEnabled;                  }
Missing Default,Catel.Runtime.Serialization.Xml,XmlSerializer,C:\repos\Catel_Catel\src\Catel.Core\Catel.Core.Shared\Runtime\Serialization\XmlSerialization\XmlSerializer.cs,WarmupMember,The following switch statement is missing a default case: switch (memberType)                  {                      case MemberType.Field:                          var fieldInfo = type.GetFieldEx(memberName);                          if (fieldInfo == null)                          {                              Log.Warning("Failed to retrieve the field info of '{0}.{1}' during warmup"' type.GetSafeFullName(false)' memberName);                              return;                          }                            memberRepresentedType = fieldInfo.FieldType;                          break;                        case MemberType.Property:                          var propertyInfo = type.GetPropertyEx(memberName);                          if (propertyInfo == null)                          {                              Log.Warning("Failed to retrieve the property info of '{0}.{1}' during warmup"' type.GetSafeFullName(false)' memberName);                              return;                          }                            memberRepresentedType = propertyInfo.PropertyType;                          break;                  }
