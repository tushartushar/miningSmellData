Implementation smell,Namespace,Class,File,Method,Description
Long Method,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The method has 157 lines of code.
Complex Method,Navertica.SharePoint,SPSecurableObjectAccesDeniedException,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\Exceptions.cs,GetMessage,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint,QLeaf,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\QueryTools.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Navertica.SharePoint,QLeaf,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\QueryTools.cs,OperationString,Cyclomatic complexity of the method is 11
Complex Method,Navertica.SharePoint,QLeaf,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\QueryTools.cs,ValueTypeString,Cyclomatic complexity of the method is 13
Complex Method,Navertica.SharePoint,WebListItemDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemDictionary.cs,ProcessItems,Cyclomatic complexity of the method is 13
Complex Method,Navertica.SharePoint,WebListItemDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemDictionary.cs,ProcessItemVersion,Cyclomatic complexity of the method is 15
Complex Method,Navertica.SharePoint,WebListDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListDictionary.cs,ProcessWebs,Cyclomatic complexity of the method is 10
Complex Method,Navertica.SharePoint,WebListDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListDictionary.cs,ProcessLists,Cyclomatic complexity of the method is 14
Complex Method,Navertica.SharePoint,WebListDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListDictionary.cs,ProcessItems,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,Cyclomatic complexity of the method is 15
Complex Method,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,ProcessItem,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint,WebListId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListId.cs,WebListId,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint,WebListId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListId.cs,ProcessList,Cyclomatic complexity of the method is 10
Complex Method,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,Cyclomatic complexity of the method is 13
Complex Method,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,Cyclomatic complexity of the method is 21
Complex Method,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,Cyclomatic complexity of the method is 36
Complex Method,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,Cyclomatic complexity of the method is 11
Complex Method,Navertica.SharePoint.Extensions,SPFieldExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPField.cs,SetHidden,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint.Extensions,SPFolderExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFolder.cs,CreateOrUpdateDocument,Cyclomatic complexity of the method is 13
Complex Method,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddOrUpdateItem,Cyclomatic complexity of the method is 13
Complex Method,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetSPQuery,Cyclomatic complexity of the method is 10
Complex Method,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,ListInternalName,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,ProcessItems,Cyclomatic complexity of the method is 8
Complex Method,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,GetUserProperties,Cyclomatic complexity of the method is 10
Complex Method,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,RunElevated,Cyclomatic complexity of the method is 11
Complex Method,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindList,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,OpenW,Cyclomatic complexity of the method is 16
Complex Method,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,RunAsUser,Cyclomatic complexity of the method is 9
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindList,Cyclomatic complexity of the method is 10
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,Cyclomatic complexity of the method is 22
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,Cyclomatic complexity of the method is 18
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPPrincipals,Cyclomatic complexity of the method is 11
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsersFromADGroup,Cyclomatic complexity of the method is 13
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsers,Cyclomatic complexity of the method is 10
Complex Method,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,OpenList,Cyclomatic complexity of the method is 8
Long Parameter List,Navertica.SharePoint,SPFieldNotFoundException,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\Exceptions.cs,GetMessage,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint,Q,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\QueryTools.cs,Q,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint,WebListDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListDictionary.cs,ProcessItemsElevated,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint,WebListDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListDictionary.cs,ProcessItemsElevated,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint,WebListId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListId.cs,ProcessItems,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint,WebListId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListId.cs,ProcessItemsElevated,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The method has 7 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPFolderExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFolder.cs,CopyToFolder,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPFolderExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFolder.cs,CreateOrUpdateDocument,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddOrUpdateItem,The method has 7 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AttachEventReceiver,The method has 7 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetItemsByLookupId,The method has 7 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetItemsByLookupValue,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetItemsByTextField,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetItemsByTextFieldBeginsWith,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetItemsByTextFieldContains,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,RemoveEventReceiver,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,CopyRights,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,RunElevated,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,SetRights,The method has 6 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindListsWithBaseTemplate,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindListsWithBaseTemplate,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPPrincipals,The method has 7 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsersFromADGroup,The method has 5 parameters.
Long Parameter List,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,OpenList,The method has 6 parameters.
Long Statement,Navertica.SharePoint,DictionaryNVR,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\DictionaryNVR.cs,Sort,The length of the statement  "	Dictionary<string' object> temp = this.OrderBy (entry => entry.Key).ToDictionary (pair => pair.Key' pair => pair.Value); " is 120.
Long Statement,Navertica.SharePoint,DictionaryNVR,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\DictionaryNVR.cs,ToString,The length of the statement  "	foreach (KeyValuePair<string' object> keyValuePair in this.OrderBy (entry => entry.Key).ToDictionary (pair => pair.Key' pair => pair.Value)) { " is 142.
Long Statement,Navertica.SharePoint,SPFieldNotFoundException,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\Exceptions.cs,GetMessage,The length of the statement  "	List<string> notPres = fieldIntNames.Where (fieldIntName => !list.ContainsFieldIntName (fieldIntName)).Select (fieldIntName => "'" + fieldIntName + "'").ToList (); " is 163.
Long Statement,Navertica.SharePoint,SPFieldNotFoundException,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\Exceptions.cs,GetMessage,The length of the statement  "	return list.AbsoluteUrl () + " does not contains fields with internal names: " + notPres.JoinStrings ("' ") + (!string.IsNullOrEmpty (additionalMessage) ? "AdditionalMessage:" + additionalMessage + "\n" : ""); " is 209.
Long Statement,Navertica.SharePoint,QLeaf,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\QueryTools.cs,ToString,The length of the statement  "	return string.Format ("<{0}>" + "<FieldRef Name='{1}'{2}/>{3}</{0}>"' opstr' FieldName' (ValueType == QVal.LookupId ? " LookupId='TRUE'" : string.Empty)' valueXml); " is 164.
Long Statement,Navertica.SharePoint,WebListDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListDictionary.cs,ProcessItemsElevated,The length of the statement  "	return (ICollection<object>)site.RunElevated (elevatedSite => ProcessItems (elevatedSite' func' (que != null ? que.ToString () : "")' rowLimit)); " is 145.
Long Statement,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,ToString,The length of the statement  "	return IsValid ? string.Format ("WebListItemId - WebGuid: {0}' ListGuid: {1}' Item: {2}"' WebGuid' ListGuid' Item) : InvalidMessage; " is 132.
Long Statement,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The length of the statement  "	// viz Remarks - http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.spitemeventproperties.afterproperties.aspx#Remarks " is 128.
Long Statement,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The length of the statement  "	if (fld.InternalName == "FSObjType" || fld.InternalName == "SortBehavior" || fld.InternalName == "SyncClientId" || fld.InternalName == "ProgId" || fld.InternalName == "ItemChildCount" || fld.InternalName == "MetaInfo" || fld.InternalName == "FolderChildCount") { " is 262.
Long Statement,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The length of the statement  "	return GetItemDictionary (itemVersion' itemVersion.Fields' fieldIntNames' expandLookups ? new WebListItemDictionary () : null); " is 127.
Long Statement,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The length of the statement  "	return GetItemDictionary (properties' properties.List.Fields' fieldIntNames' expandLookups ? new WebListItemDictionary () : null); " is 130.
Long Statement,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The length of the statement  "			if (field.Hidden && itemEventProperties != null && itemEventProperties.ListItem != null && !itemEventProperties.ListItem.ContentType.ContainsFieldIntName (field.InternalName)) " is 175.
Long Statement,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The length of the statement  "				List<SimpleSPPrincipal> simpleprincipals = principals.Select (principal => new SimpleSPPrincipal (principal)).ToList (); " is 120.
Long Statement,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The length of the statement  "									SPListItemVersion versionToLoad = lookupItem.Versions.Cast<SPListItemVersion> ().FirstOrDefault (v => v.Created < itemVersion.Created); " is 135.
Long Statement,Navertica.SharePoint.Extensions,ExtensionsTools,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\VariousExtensions.cs,GetProperties,The length of the statement  "	return obj.GetType ().GetProperties ().OrderBy (i => i.Name).Select (i => i.Name + " [" + i.PropertyType.Name + "]").JoinStrings (); " is 132.
Long Statement,Navertica.SharePoint.Extensions,ExtensionsTools,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\VariousExtensions.cs,GetValueForAllCultures,The length of the statement  "	foreach (CultureInfo info in web.RegionalSettings.InstalledLanguages.Cast<SPLanguage> ().Select (l => CultureInfo.GetCultureInfo (l.LCID))) { " is 141.
Long Statement,Navertica.SharePoint.Extensions,ExtensionsTools,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\VariousExtensions.cs,ReplaceInvalidFileNameChars,The length of the statement  "	return invalidChars.Aggregate (fname' (current' c) => current.Replace (c' replaceWith)).Replace (".."' replaceWith.ToString (CultureInfo.InvariantCulture)); " is 156.
Long Statement,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,IsEmail,The length of the statement  "	const string emailRegex = @"^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1'3}" + @"\.[0-9]{1'3}\.[0-9]{1'3}\.)|(([a-zA-Z0-9\-]+\" + @".)+))([a-zA-Z]{2'4}|[0-9]{1'3})(\]?)$"; " is 159.
Long Statement,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,RemoveControlCharacters,The length of the statement  "	return str.Where (character => !char.IsControl (character)).Aggregate (new StringBuilder ()' (builder' character) => builder.Append (character)).ToString (); " is 157.
Long Statement,Navertica.SharePoint.Extensions,SPContentTypeExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPContentType.cs,GetContentType,The length of the statement  "		//if the contentTypeCollection is from SPList we are looking for their parent' TODO mozna dat dalsi parametr bool at cekuje i rodice to samy k funckcim contains " is 160.
Long Statement,Navertica.SharePoint.Extensions,SPFieldExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPField.cs,InternalFieldNames,The length of the statement  "	return fieldCollection.Cast<SPField> ().Where (fld => !fld.Hidden && fld.InternalName [0] != '_').Select (fld => fld.InternalName); " is 131.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddOrUpdateItem,The length of the statement  "			throw new KeyNotFoundException (string.Format ("AddOrUpdateItem on list {0} - unique key fields specifies keys {1}' some were not found in item metadata {2}"' list.DefaultViewUrl' uniqueKeyFields.JoinStrings ("' ")' itemMetadata.Select (kvp => kvp.Key + ": " + kvp.Value).JoinStrings ("' "))); " is 293.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddOrUpdateItem,The length of the statement  "			throw new DuplicateNameException (string.Format ("Non unique items {4} found given following combination: unique fields [{0}] with values {{{1}}} in list {2} for query {3} "' uniqueKeyFields.JoinStrings ("' ")' itemMetadata.Select (kvp => kvp.Key + ": " + kvp.Value).JoinStrings ("' ")' list.DefaultViewUrl' query' existing.Select (delegate (object o) { " is 353.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AttachEventReceiver,The length of the statement  "	if (list.EventReceivers.Cast<SPEventReceiverDefinition> ().Any (evRec => (evRec.Assembly.ToLowerInvariant () == assemblyName.ToLowerInvariant ().Trim ()) && (evRec.Class.ToLowerInvariant () == classNameReceiver.ToLowerInvariant ().Trim ()) && (evRec.Type == type))) { " is 267.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddContentType,The length of the statement  "		throw new FileNotFoundException ("Can not find content type with contentTypeId '" + contentTypeId + "' trying to add it to list " + list.AbsoluteUrl ()); " is 153.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddContentType,The length of the statement  "		list.ParentWeb.RunWithAllowUnsafeUpdates (() => list.ContentTypes.Add (newContentType)/*Can throw UnauthorizedAccessException' SPException' ...*/); " is 147.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetFolder,The length of the statement  "	if (webRelativeUrl != "" && (folderRelativeUrl.StartsWith (webRelativeUrl) || folderRelativeUrl.StartsWith ("/" + webRelativeUrl))) { " is 133.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetFolder,The length of the statement  "		folderPath = folderRelativeUrl.StartsWith ("/") ? folderRelativeUrl.Replace ("/" + webRelativeUrl' "") : folderRelativeUrl.Replace (webRelativeUrl' ""); " is 152.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,RemoveEventReceiver,The length of the statement  "	SPEventReceiverDefinition def = list.EventReceivers.Cast<SPEventReceiverDefinition> ().SingleOrDefault (evRec => (evRec.Assembly.ToLowerInvariant () == assemblyName.ToLowerInvariant ().Trim ()) && (evRec.Class.ToLowerInvariant () == classNameReceiver.ToLowerInvariant ().Trim ()) && (evRec.Type == type)); " is 305.
Long Statement,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,RunElevated,The length of the statement  "	if (list.ParentWeb.InSandbox () || list.ParentWeb.CurrentUser.IsSiteAdmin)//Don't runeleveted if user is admin or already run with admin rights " is 143.
Long Statement,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,LoginNameNormalized,The length of the statement  "	return (principal.LoginName.Contains ('|') ? principal.LoginName.Split ('|') [1] : principal.LoginName).ToLowerInvariant (); " is 124.
Long Statement,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,GetUserProperties,The length of the statement  "	SearchResultCollection results = LDAP_Find (de' string.Format ("(&(&(objectCategory=user)(|(cn={0})(sAMAccountName={1}))))"' user.Name' loginName)' properties); " is 160.
Long Statement,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,GetUserProperties,The length of the statement  "	List<string> keys = userProperties.Properties.Cast<DictionaryEntry> ().Select (dictEntry => dictEntry.Key.ToString ()).ToList (); " is 129.
Long Statement,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,GetPermissionsJSON,The length of the statement  "				results.Add ("{ \"" + (group ? "group" : "user") + "\": \"" + role.Member.LoginName + "\"' \"rights\": \"" + roledef.JoinStrings ("' ") + "\" }"); " is 146.
Long Statement,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,GetRoleDefinition,The length of the statement  "	return securableObject.GetWeb ().RoleDefinitions.Cast<SPRoleDefinition> ().SingleOrDefault (def => def.Name == roleDefinitonName.Trim ()); " is 138.
Long Statement,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindList,The length of the statement  "				HttpRuntime.Cache.Insert (cacheName' result' null' DateTime.Now.AddDays (1)' Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 136.
Long Statement,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindListsWithBaseTemplate,The length of the statement  "					foundLists.AddRange (web.Lists.Cast<SPList> ().Where (l => l.BaseTemplate == listType).Select (l => new WebListId (l))); " is 120.
Long Statement,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindListsWithContentType,The length of the statement  "							if (list.ContentTypes.BestMatch (contentTypeId).IsChildOf (contentTypeId))//if contentTypeId is "0x0108" it will add the children too " is 133.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindList,The length of the statement  "		HttpRuntime.Cache.Insert (cacheName' result' null' DateTime.Now.AddDays (1)' Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 136.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindListsWithBaseTemplate,The length of the statement  "					foundLists.AddRange (childWeb.Lists.Cast<SPList> ().Where (l => l.BaseTemplate == listType).Select (l => new WebListId (l))); " is 125.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindListsWithContentType,The length of the statement  "							if (list.ContentTypes.BestMatch (contentTypeId).IsChildOf (contentTypeId))//if ct is "0x0108" it will add the childs too " is 120.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The length of the statement  "		SPPrincipalInfo principal = SPUtility.ResolvePrincipal (web' identAsString' SPPrincipalType.User' SPPrincipalSource.All' null' false); " is 134.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The length of the statement  "		SPPrincipalInfo principal = SPUtility.ResolvePrincipal (web' identAsString' SPPrincipalType.SecurityGroup' SPPrincipalSource.All' null' false); " is 143.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,The length of the statement  "	SPPrincipalInfo principal = SPUtility.ResolvePrincipal (web' groupStr' SPPrincipalType.SharePointGroup' SPPrincipalSource.All' null' false); " is 140.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPPrincipals,The length of the statement  "			throw new Exception ("GetSPPrincipals exception' users processed (last is the culprit): \n" + processLog.JoinStrings ("' ") + "\nOriginal exception:\n" + exc + "\n" + exc.StackTrace); " is 183.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsers,The length of the statement  "					// TODO resit' ze muze byt SP skupina se stejnym jmenem jako AD skupina' a v SP skupine muze byt AD skupina + k ni jeste dalsi uzivatel " is 135.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,OpenList,The length of the statement  "				HttpRuntime.Cache.Insert (cacheKey' result' null' DateTime.Now.AddDays (1)' Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 135.
Long Statement,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,RunElevated,The length of the statement  "	if (web.InSandbox () || web.CurrentUser.IsSiteAdmin)//Don't runeleveted if user is admin or already run with admin rights " is 121.
Complex Conditional,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The conditional expression  "fld.InternalName == "FSObjType" || fld.InternalName == "SortBehavior" || fld.InternalName == "SyncClientId" || fld.InternalName == "ProgId" || fld.InternalName == "ItemChildCount" || fld.InternalName == "MetaInfo" || fld.InternalName == "FolderChildCount""  is complex.
Complex Conditional,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The conditional expression  "field.Hidden && itemEventProperties != null && itemEventProperties.ListItem != null && !itemEventProperties.ListItem.ContentType.ContainsFieldIntName (field.InternalName)"  is complex.
Complex Conditional,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The conditional expression  "(((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))"  is complex.
Empty Catch Block,Navertica.SharePoint,DictionaryNVR,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\DictionaryNVR.cs,ToString,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint,WebListItemDictionary,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemDictionary.cs,WebListItemDictionary,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPListItemExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPListItemGetDict.cs,GetItemDictionary,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,ExtensionsTools,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\VariousExtensions.cs,GetExtensionMethods,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPContentTypeExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPContentType.cs,Contains,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPFieldExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPField.cs,SetHidden,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddSiteSPField,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,OpenField,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindList,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindListsWithContentType,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,FindListsWithField,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPSiteExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSite.cs,OpenW,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindListsWithContentType,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,FindListsWithField,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,The method has an empty catch block.
Empty Catch Block,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,OpenListFromGuid,The method has an empty catch block.
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains ("#")) {  	string[] info = webListItemId.Split ('#');  	if (info.Length == 2) {  		WebListId webListId = new WebListId (info [0]);  		if (webListId.IsValid) {  			int itemId;  			Int32.TryParse (info [1]' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = webListId.InvalidMessage;  		}  		else  			InvalidMessage = webListId.InvalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else if (webListItemId.Contains ("http://") && !webListItemId.Contains ("https://")) {  	WebListId webListId = new WebListId (webListItemId);  	if (webListId.IsValid) {  		try {  			//nacteme jak urlValue protoze muzeme predat string ve formatu "http://portal13devel/Lists/TEST/DisplayForm.aspx?ID=1' TEST"  			SPFieldUrlValue urlValue = new SPFieldUrlValue (webListItemId);  			webListItemId = urlValue.Url;  		}  		// ReSharper disable once EmptyGeneralCatchClause  		catch {  		}  		object id = webListItemId.GetParametersFromUrl ().TryGetValue ("id");  		if (id == null)  			InvalidMessage = "Can not get parameter id from '" + webListItemId + "'";  		else {  			int itemId;  			Int32.TryParse (id.ToString ()' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = webListId.InvalidMessage;  }  else if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains ("#")) {  	string[] info = webListItemId.Split ('#');  	if (info.Length == 2) {  		WebListId webListId = new WebListId (info [0]);  		if (webListId.IsValid) {  			int itemId;  			Int32.TryParse (info [1]' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = webListId.InvalidMessage;  		}  		else  			InvalidMessage = webListId.InvalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else if (webListItemId.Contains ("http://") && !webListItemId.Contains ("https://")) {  	WebListId webListId = new WebListId (webListItemId);  	if (webListId.IsValid) {  		try {  			//nacteme jak urlValue protoze muzeme predat string ve formatu "http://portal13devel/Lists/TEST/DisplayForm.aspx?ID=1' TEST"  			SPFieldUrlValue urlValue = new SPFieldUrlValue (webListItemId);  			webListItemId = urlValue.Url;  		}  		// ReSharper disable once EmptyGeneralCatchClause  		catch {  		}  		object id = webListItemId.GetParametersFromUrl ().TryGetValue ("id");  		if (id == null)  			InvalidMessage = "Can not get parameter id from '" + webListItemId + "'";  		else {  			int itemId;  			Int32.TryParse (id.ToString ()' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = webListId.InvalidMessage;  }  else if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains ("#")) {  	string[] info = webListItemId.Split ('#');  	if (info.Length == 2) {  		WebListId webListId = new WebListId (info [0]);  		if (webListId.IsValid) {  			int itemId;  			Int32.TryParse (info [1]' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = webListId.InvalidMessage;  		}  		else  			InvalidMessage = webListId.InvalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else if (webListItemId.Contains ("http://") && !webListItemId.Contains ("https://")) {  	WebListId webListId = new WebListId (webListItemId);  	if (webListId.IsValid) {  		try {  			//nacteme jak urlValue protoze muzeme predat string ve formatu "http://portal13devel/Lists/TEST/DisplayForm.aspx?ID=1' TEST"  			SPFieldUrlValue urlValue = new SPFieldUrlValue (webListItemId);  			webListItemId = urlValue.Url;  		}  		// ReSharper disable once EmptyGeneralCatchClause  		catch {  		}  		object id = webListItemId.GetParametersFromUrl ().TryGetValue ("id");  		if (id == null)  			InvalidMessage = "Can not get parameter id from '" + webListItemId + "'";  		else {  			int itemId;  			Int32.TryParse (id.ToString ()' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = webListId.InvalidMessage;  }  else if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (info.Length == 2) {  	WebListId webListId = new WebListId (info [0]);  	if (webListId.IsValid) {  		int itemId;  		Int32.TryParse (info [1]' out itemId);  		if (itemId > 0) {  			WebGuid = webListId.WebGuid;  			ListGuid = webListId.ListGuid;  			Item = itemId;  		}  		else  			InvalidMessage = webListId.InvalidMessage;  	}  	else  		InvalidMessage = webListId.InvalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains ("http://") && !webListItemId.Contains ("https://")) {  	WebListId webListId = new WebListId (webListItemId);  	if (webListId.IsValid) {  		try {  			//nacteme jak urlValue protoze muzeme predat string ve formatu "http://portal13devel/Lists/TEST/DisplayForm.aspx?ID=1' TEST"  			SPFieldUrlValue urlValue = new SPFieldUrlValue (webListItemId);  			webListItemId = urlValue.Url;  		}  		// ReSharper disable once EmptyGeneralCatchClause  		catch {  		}  		object id = webListItemId.GetParametersFromUrl ().TryGetValue ("id");  		if (id == null)  			InvalidMessage = "Can not get parameter id from '" + webListItemId + "'";  		else {  			int itemId;  			Int32.TryParse (id.ToString ()' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = webListId.InvalidMessage;  }  else if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains ("http://") && !webListItemId.Contains ("https://")) {  	WebListId webListId = new WebListId (webListItemId);  	if (webListId.IsValid) {  		try {  			//nacteme jak urlValue protoze muzeme predat string ve formatu "http://portal13devel/Lists/TEST/DisplayForm.aspx?ID=1' TEST"  			SPFieldUrlValue urlValue = new SPFieldUrlValue (webListItemId);  			webListItemId = urlValue.Url;  		}  		// ReSharper disable once EmptyGeneralCatchClause  		catch {  		}  		object id = webListItemId.GetParametersFromUrl ().TryGetValue ("id");  		if (id == null)  			InvalidMessage = "Can not get parameter id from '" + webListItemId + "'";  		else {  			int itemId;  			Int32.TryParse (id.ToString ()' out itemId);  			if (itemId > 0) {  				WebGuid = webListId.WebGuid;  				ListGuid = webListId.ListGuid;  				Item = itemId;  			}  			else  				InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = webListId.InvalidMessage;  }  else if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (webListItemId.Contains (":")) {  	string[] info = webListItemId.Split (':');  	if (info.Length == 3) {  		int itemId;  		Int32.TryParse (info [2]' out itemId);  		if (itemId > 0) {  			try {  				WebGuid = new Guid (info [0]);  				ListGuid = new Guid (info [1]);  				Item = itemId;  			}  			catch {  				WebGuid = Guid.Empty;  				ListGuid = Guid.Empty;  				InvalidMessage = invalidMessage;  			}  		}  		else  			InvalidMessage = invalidMessage;  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (info.Length == 3) {  	int itemId;  	Int32.TryParse (info [2]' out itemId);  	if (itemId > 0) {  		try {  			WebGuid = new Guid (info [0]);  			ListGuid = new Guid (info [1]);  			Item = itemId;  		}  		catch {  			WebGuid = Guid.Empty;  			ListGuid = Guid.Empty;  			InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: if (info.Length == 3) {  	int itemId;  	Int32.TryParse (info [2]' out itemId);  	if (itemId > 0) {  		try {  			WebGuid = new Guid (info [0]);  			ListGuid = new Guid (info [1]);  			Item = itemId;  		}  		catch {  			WebGuid = Guid.Empty;  			ListGuid = Guid.Empty;  			InvalidMessage = invalidMessage;  		}  	}  	else  		InvalidMessage = invalidMessage;  }  else  	InvalidMessage = invalidMessage;  
Magic Number,Navertica.SharePoint,WebListItemId,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\WebListItemId.cs,WebListItemId,The following statement contains a magic number: Int32.TryParse (info [2]' out itemId);  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "Approved")  		intValue = 0;  	if (stringValue == "Denied")  		intValue = 1;  	if (stringValue == "Pending")  		intValue = 2;  	if (stringValue == "Draft")  		intValue = 3;  	if (stringValue == "Scheduled")  		intValue = 4;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "Approved")  		intValue = 0;  	if (stringValue == "Denied")  		intValue = 1;  	if (stringValue == "Pending")  		intValue = 2;  	if (stringValue == "Draft")  		intValue = 3;  	if (stringValue == "Scheduled")  		intValue = 4;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "Approved")  		intValue = 0;  	if (stringValue == "Denied")  		intValue = 1;  	if (stringValue == "Pending")  		intValue = 2;  	if (stringValue == "Draft")  		intValue = 3;  	if (stringValue == "Scheduled")  		intValue = 4;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "Pending")  	intValue = 2;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 2;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "Draft")  	intValue = 3;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 3;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "Scheduled")  	intValue = 4;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 4;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  case 0:  	return SPModerationStatusType.Approved;  case 1:  	return SPModerationStatusType.Denied;  case 2:  	return SPModerationStatusType.Pending;  case 3:  	return SPModerationStatusType.Draft;  case 4:  	return SPModerationStatusType.Scheduled;  default:  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  case 0:  	return SPModerationStatusType.Approved;  case 1:  	return SPModerationStatusType.Denied;  case 2:  	return SPModerationStatusType.Pending;  case 3:  	return SPModerationStatusType.Draft;  case 4:  	return SPModerationStatusType.Scheduled;  default:  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  case 0:  	return SPModerationStatusType.Approved;  case 1:  	return SPModerationStatusType.Denied;  case 2:  	return SPModerationStatusType.Pending;  case 3:  	return SPModerationStatusType.Draft;  case 4:  	return SPModerationStatusType.Scheduled;  default:  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (value is string) {  	string stringValue = value.ToString ();  	if (stringValue == "NotStarted")  		intValue = 0;  	if (stringValue == "FailedOnStart")  		intValue = 1;  	if (stringValue == "InProgress")  		intValue = 2;  	if (stringValue == "ErrorOccurred")  		intValue = 3;  	if (stringValue == "StoppedByUser")  		intValue = 4;  	if (stringValue == "Completed")  		intValue = 5;  	if (stringValue == "FailedOnStartRetrying")  		intValue = 6;  	if (stringValue == "ErrorOccurredRetrying")  		intValue = 7;  	if (stringValue == "ViewQueryOverflow")  		intValue = 8;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "InProgress")  	intValue = 2;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 2;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "ErrorOccurred")  	intValue = 3;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 3;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "StoppedByUser")  	intValue = 4;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 4;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "Completed")  	intValue = 5;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 5;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "FailedOnStartRetrying")  	intValue = 6;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 6;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "ErrorOccurredRetrying")  	intValue = 7;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 7;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: if (stringValue == "ViewQueryOverflow")  	intValue = 8;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: intValue = 8;  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,SPFieldGetExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPFieldGetters.cs,Get,The following statement contains a magic number: switch (intValue) {  //http://geekswithblogs.net/simonh/archive/2013/04/12/sharepoint-2010-workflow-status-values.aspx  /*             // - nejak tyto statusy chybi             • Canceled = 15             • Approved = 16             • Rejected = 17             */case 0:  	return SPWorkflowStatus.NotStarted;  case 1:  	return SPWorkflowStatus.FailedOnStart;  case 2:  	return SPWorkflowStatus.InProgress;  case 3:  	return SPWorkflowStatus.ErrorOccurred;  case 4:  	return SPWorkflowStatus.StoppedByUser;  case 5:  	return SPWorkflowStatus.Completed;  case 6:  	return SPWorkflowStatus.FailedOnStartRetrying;  case 7:  	return SPWorkflowStatus.ErrorOccurredRetrying;  case 8:  	return SPWorkflowStatus.ViewQueryOverflow;  default:  	return SPWorkflowStatus.NotStarted;  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: while (++num3 < length) {  	char ch = str [num3];  	int num2 = ch;  	if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  		switch (ch) {  		case '@':  		case '*':  		case '_':  		case '+':  		case '-':  		case '.':  		case '/':  			goto Label_0125;  		}  		builder.Append ('%');  		if (num2 < 0x100) {  			builder.Append (str2 [num2 / 0x10]);  			ch = str2 [num2 % 0x10];  		}  		else {  			builder.Append ('u');  			builder.Append (str2 [(num2 >> 12) % 0x10]);  			builder.Append (str2 [(num2 >> 8) % 0x10]);  			builder.Append (str2 [(num2 >> 4) % 0x10]);  			ch = str2 [num2 % 0x10];  		}  	}  	Label_0125:  	builder.Append (ch);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: while (++num3 < length) {  	char ch = str [num3];  	int num2 = ch;  	if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  		switch (ch) {  		case '@':  		case '*':  		case '_':  		case '+':  		case '-':  		case '.':  		case '/':  			goto Label_0125;  		}  		builder.Append ('%');  		if (num2 < 0x100) {  			builder.Append (str2 [num2 / 0x10]);  			ch = str2 [num2 % 0x10];  		}  		else {  			builder.Append ('u');  			builder.Append (str2 [(num2 >> 12) % 0x10]);  			builder.Append (str2 [(num2 >> 8) % 0x10]);  			builder.Append (str2 [(num2 >> 4) % 0x10]);  			ch = str2 [num2 % 0x10];  		}  	}  	Label_0125:  	builder.Append (ch);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: while (++num3 < length) {  	char ch = str [num3];  	int num2 = ch;  	if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  		switch (ch) {  		case '@':  		case '*':  		case '_':  		case '+':  		case '-':  		case '.':  		case '/':  			goto Label_0125;  		}  		builder.Append ('%');  		if (num2 < 0x100) {  			builder.Append (str2 [num2 / 0x10]);  			ch = str2 [num2 % 0x10];  		}  		else {  			builder.Append ('u');  			builder.Append (str2 [(num2 >> 12) % 0x10]);  			builder.Append (str2 [(num2 >> 8) % 0x10]);  			builder.Append (str2 [(num2 >> 4) % 0x10]);  			ch = str2 [num2 % 0x10];  		}  	}  	Label_0125:  	builder.Append (ch);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: while (++num3 < length) {  	char ch = str [num3];  	int num2 = ch;  	if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  		switch (ch) {  		case '@':  		case '*':  		case '_':  		case '+':  		case '-':  		case '.':  		case '/':  			goto Label_0125;  		}  		builder.Append ('%');  		if (num2 < 0x100) {  			builder.Append (str2 [num2 / 0x10]);  			ch = str2 [num2 % 0x10];  		}  		else {  			builder.Append ('u');  			builder.Append (str2 [(num2 >> 12) % 0x10]);  			builder.Append (str2 [(num2 >> 8) % 0x10]);  			builder.Append (str2 [(num2 >> 4) % 0x10]);  			ch = str2 [num2 % 0x10];  		}  	}  	Label_0125:  	builder.Append (ch);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  	switch (ch) {  	case '@':  	case '*':  	case '_':  	case '+':  	case '-':  	case '.':  	case '/':  		goto Label_0125;  	}  	builder.Append ('%');  	if (num2 < 0x100) {  		builder.Append (str2 [num2 / 0x10]);  		ch = str2 [num2 % 0x10];  	}  	else {  		builder.Append ('u');  		builder.Append (str2 [(num2 >> 12) % 0x10]);  		builder.Append (str2 [(num2 >> 8) % 0x10]);  		builder.Append (str2 [(num2 >> 4) % 0x10]);  		ch = str2 [num2 % 0x10];  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  	switch (ch) {  	case '@':  	case '*':  	case '_':  	case '+':  	case '-':  	case '.':  	case '/':  		goto Label_0125;  	}  	builder.Append ('%');  	if (num2 < 0x100) {  		builder.Append (str2 [num2 / 0x10]);  		ch = str2 [num2 % 0x10];  	}  	else {  		builder.Append ('u');  		builder.Append (str2 [(num2 >> 12) % 0x10]);  		builder.Append (str2 [(num2 >> 8) % 0x10]);  		builder.Append (str2 [(num2 >> 4) % 0x10]);  		ch = str2 [num2 % 0x10];  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  	switch (ch) {  	case '@':  	case '*':  	case '_':  	case '+':  	case '-':  	case '.':  	case '/':  		goto Label_0125;  	}  	builder.Append ('%');  	if (num2 < 0x100) {  		builder.Append (str2 [num2 / 0x10]);  		ch = str2 [num2 % 0x10];  	}  	else {  		builder.Append ('u');  		builder.Append (str2 [(num2 >> 12) % 0x10]);  		builder.Append (str2 [(num2 >> 8) % 0x10]);  		builder.Append (str2 [(num2 >> 4) % 0x10]);  		ch = str2 [num2 % 0x10];  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if ((((0x41 > num2) || (num2 > 90)) && ((0x61 > num2) || (num2 > 0x7a))) && ((0x30 > num2) || (num2 > 0x39))) {  	switch (ch) {  	case '@':  	case '*':  	case '_':  	case '+':  	case '-':  	case '.':  	case '/':  		goto Label_0125;  	}  	builder.Append ('%');  	if (num2 < 0x100) {  		builder.Append (str2 [num2 / 0x10]);  		ch = str2 [num2 % 0x10];  	}  	else {  		builder.Append ('u');  		builder.Append (str2 [(num2 >> 12) % 0x10]);  		builder.Append (str2 [(num2 >> 8) % 0x10]);  		builder.Append (str2 [(num2 >> 4) % 0x10]);  		ch = str2 [num2 % 0x10];  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if (num2 < 0x100) {  	builder.Append (str2 [num2 / 0x10]);  	ch = str2 [num2 % 0x10];  }  else {  	builder.Append ('u');  	builder.Append (str2 [(num2 >> 12) % 0x10]);  	builder.Append (str2 [(num2 >> 8) % 0x10]);  	builder.Append (str2 [(num2 >> 4) % 0x10]);  	ch = str2 [num2 % 0x10];  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if (num2 < 0x100) {  	builder.Append (str2 [num2 / 0x10]);  	ch = str2 [num2 % 0x10];  }  else {  	builder.Append ('u');  	builder.Append (str2 [(num2 >> 12) % 0x10]);  	builder.Append (str2 [(num2 >> 8) % 0x10]);  	builder.Append (str2 [(num2 >> 4) % 0x10]);  	ch = str2 [num2 % 0x10];  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: if (num2 < 0x100) {  	builder.Append (str2 [num2 / 0x10]);  	ch = str2 [num2 % 0x10];  }  else {  	builder.Append ('u');  	builder.Append (str2 [(num2 >> 12) % 0x10]);  	builder.Append (str2 [(num2 >> 8) % 0x10]);  	builder.Append (str2 [(num2 >> 4) % 0x10]);  	ch = str2 [num2 % 0x10];  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: builder.Append (str2 [(num2 >> 12) % 0x10]);  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: builder.Append (str2 [(num2 >> 8) % 0x10]);  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following statement contains a magic number: builder.Append (str2 [(num2 >> 4) % 0x10]);  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupIndexes,The following statement contains a magic number: if (s.Trim () != string.Empty) {  	string[] vals = s.Split (";#");  	for (int i = 0; i < vals.Length; i = i + 2) {  		int index;  		Int32.TryParse (vals [i].Replace (";"' "")' out index);  		results.Add (index);  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupIndexes,The following statement contains a magic number: for (int i = 0; i < vals.Length; i = i + 2) {  	int index;  	Int32.TryParse (vals [i].Replace (";"' "")' out index);  	results.Add (index);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupIndexes,The following statement contains a magic number: i = i + 2
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupValue,The following statement contains a magic number: if (lookupStr.Contains (";#")) {  	try {  		return new SPFieldLookupValue (lookupStr).LookupValue;  	}  	catch//(ArgumentException err) // abychom mu mohli poslat i vypocitane pole' ktere na zacatku nema ID  	 {  		return lookupStr.Substring (lookupStr.IndexOf (";#"' StringComparison.InvariantCulture) + 2);  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupValue,The following statement contains a magic number: try {  	return new SPFieldLookupValue (lookupStr).LookupValue;  }  catch//(ArgumentException err) // abychom mu mohli poslat i vypocitane pole' ktere na zacatku nema ID   {  	return lookupStr.Substring (lookupStr.IndexOf (";#"' StringComparison.InvariantCulture) + 2);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupValue,The following statement contains a magic number: return lookupStr.Substring (lookupStr.IndexOf (";#"' StringComparison.InvariantCulture) + 2);  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupValues,The following statement contains a magic number: if (s.Trim () != string.Empty) {  	string[] vals = s.Split (";#");  	for (int i = 1; i < vals.Length; i = i + 2) {  		results.Add (vals [i]);  	}  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupValues,The following statement contains a magic number: for (int i = 1; i < vals.Length; i = i + 2) {  	results.Add (vals [i]);  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,GetLookupValues,The following statement contains a magic number: i = i + 2
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,RemoveEscapedCharacters,The following statement contains a magic number: for (int i = 7; i < 14; i++) {  	result = result.Replace (((char)i).ToString (CultureInfo.InvariantCulture)' "");  }  
Magic Number,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,RemoveEscapedCharacters,The following statement contains a magic number: for (int i = 7; i < 14; i++) {  	result = result.Replace (((char)i).ToString (CultureInfo.InvariantCulture)' "");  }  
Magic Number,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetSPQuery,The following statement contains a magic number: if (!string.IsNullOrEmpty (querystr)) {  	XmlDocument doc = new XmlDocument ();  	doc.LoadXml ("<START>" + querystr + "</START>");  	//musi byt obalenm' protoze muze nastat varianta' ze budou dva rootove elementy a ty pak jako XML nenacte a hodi exc  	XmlElement element = doc.DocumentElement;  	#region Check internal names  	List<string> internalFieldNames = new List<string> ();  	if (element == null)  		throw new XmlException ("Cannot load CAML query as xml\n\n" + querystr);  	XmlNodeList nodes = element.GetElementsByTagName ("FieldRef");  	for (int i = 0; i < nodes.Count; i++) {  		XmlNode node = nodes.Item (i);  		if (node != null && node.Attributes != null) {  			string internalName = node.Attributes [0].Value;  			internalFieldNames.Add (internalName);  		}  		else {  			throw new XmlException ("Cannot load node.Attributes for query \n\n" + querystr);  		}  	}  	// check if all fields in the query exist  	if (!list.ContainsFieldIntName (internalFieldNames))  		throw new SPFieldNotFoundException (list' internalFieldNames.Distinct ());  	#endregion  	querystr = element.ChildNodes [0].OuterXml.Replace ("<Where>"' "").Replace ("</Where>"' "");  	string orderBy = element.ChildNodes.Count > 1 ? element.ChildNodes [1].OuterXml : "";  	string viewFields = element.ChildNodes.Count > 2 ? element.ChildNodes [2].OuterXml : "";  	if (orderBy.StartsWith ("<ViewFields>")) {  		viewFields = orderBy;  		orderBy = "";  	}  	query = new SPQuery {  		Query = "<Where>" + querystr + "</Where>" + orderBy  	};  	if (!string.IsNullOrEmpty (viewFields)) {  		query.ViewFields = viewFields.Replace ("<ViewFields>"' "").Replace ("</ViewFields>"' "");  		query.ViewFieldsOnly = true;  	}  }  
Magic Number,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,GetSPQuery,The following statement contains a magic number: if (!string.IsNullOrEmpty (querystr)) {  	XmlDocument doc = new XmlDocument ();  	doc.LoadXml ("<START>" + querystr + "</START>");  	//musi byt obalenm' protoze muze nastat varianta' ze budou dva rootove elementy a ty pak jako XML nenacte a hodi exc  	XmlElement element = doc.DocumentElement;  	#region Check internal names  	List<string> internalFieldNames = new List<string> ();  	if (element == null)  		throw new XmlException ("Cannot load CAML query as xml\n\n" + querystr);  	XmlNodeList nodes = element.GetElementsByTagName ("FieldRef");  	for (int i = 0; i < nodes.Count; i++) {  		XmlNode node = nodes.Item (i);  		if (node != null && node.Attributes != null) {  			string internalName = node.Attributes [0].Value;  			internalFieldNames.Add (internalName);  		}  		else {  			throw new XmlException ("Cannot load node.Attributes for query \n\n" + querystr);  		}  	}  	// check if all fields in the query exist  	if (!list.ContainsFieldIntName (internalFieldNames))  		throw new SPFieldNotFoundException (list' internalFieldNames.Distinct ());  	#endregion  	querystr = element.ChildNodes [0].OuterXml.Replace ("<Where>"' "").Replace ("</Where>"' "");  	string orderBy = element.ChildNodes.Count > 1 ? element.ChildNodes [1].OuterXml : "";  	string viewFields = element.ChildNodes.Count > 2 ? element.ChildNodes [2].OuterXml : "";  	if (orderBy.StartsWith ("<ViewFields>")) {  		viewFields = orderBy;  		orderBy = "";  	}  	query = new SPQuery {  		Query = "<Where>" + querystr + "</Where>" + orderBy  	};  	if (!string.IsNullOrEmpty (viewFields)) {  		query.ViewFields = viewFields.Replace ("<ViewFields>"' "").Replace ("</ViewFields>"' "");  		query.ViewFieldsOnly = true;  	}  }  
Magic Number,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,ListInternalName,The following statement contains a magic number: if (!url.ContainsAny (new[] {  	"Lists"'  	"Forms"'  	"_catalogs"  })) {  	return rets.Last ().Contains (".aspx") ? rets [rets.Count - 2] : rets [rets.Count - 1];  }  
Magic Number,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,ListInternalName,The following statement contains a magic number: return rets.Last ().Contains (".aspx") ? rets [rets.Count - 2] : rets [rets.Count - 1];  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: try {  	int val = Convert.ToInt32 (prop);  	if (val == 512 || val == 66048)  		return true;  	if (val == 514 || val == 66050)  		return false;  }  catch {  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: try {  	int val = Convert.ToInt32 (prop);  	if (val == 512 || val == 66048)  		return true;  	if (val == 514 || val == 66050)  		return false;  }  catch {  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: try {  	int val = Convert.ToInt32 (prop);  	if (val == 512 || val == 66048)  		return true;  	if (val == 514 || val == 66050)  		return false;  }  catch {  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: try {  	int val = Convert.ToInt32 (prop);  	if (val == 512 || val == 66048)  		return true;  	if (val == 514 || val == 66050)  		return false;  }  catch {  	return null;  }  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: if (val == 512 || val == 66048)  	return true;  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: if (val == 512 || val == 66048)  	return true;  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: if (val == 514 || val == 66050)  	return false;  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,Enabled,The following statement contains a magic number: if (val == 514 || val == 66050)  	return false;  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,GetSPUsers,The following statement contains a magic number: HttpRuntime.Cache.Insert (cacheKey' spUsers' null' DateTime.Now.AddMinutes (30)' Cache.NoSlidingExpiration);  
Magic Number,Navertica.SharePoint.Extensions,SPPrincipalExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPPrincipal.cs,GetPreferredLanguage,The following statement contains a magic number: if (lang < 1000)  	lang = (int)user.ParentWeb.Language;  
Magic Number,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsersFromADGroup,The following statement contains a magic number: using (new SPMonitoredScope ("GetSPUsersFromADGroup: " + loginName)) {  	bool reachMax;  	List<SPUser> users = new List<SPUser> ();  	SPPrincipalInfo[] principals;  	try {  		principals = SPUtility.GetPrincipalsInGroup (web' loginName' 10000' out reachMax);  	}  	catch (InvalidOperationException)// claims doesn't work with GetPrincipalsInGroup  	 {  		return users;  	}  	if (principals == null)  		return users;  	if (reachMax)  		throw new Exception ("Dosahnut maximalni limit! Pravdepodobne rekurze v AD");  	//TODO rekurzi resime zvlast takze to bude jeste neco jineho  	List<string> logins = principals.Select (p => p.LoginName).ToList ();  	foreach (string login in logins) {  		SPUser user = web.GetSPUser (login);  		if (user == null)  			continue;  		//uzivatel muze byt disabled pak ho nenactem  		if (user.IsDomainGroup) {  			if (loadedLogins == null)  				loadedLogins = new List<string> ();  			if (loadedLogins.Contains (loginName)) {  				var loadedLoginsInfo = "Recursion usage of Group in Active Directory!!\n";  				foreach (string loadedLogin in loadedLogins) {  					SPUser lu = web.GetSPUser (loadedLogin);  					loadedLoginsInfo += "[" + lu.ID + "] - [ " + lu.Name + "] - [" + lu.LoginName + "]\n";  				}  				throw new System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException (loadedLoginsInfo);  			}  			loadedLogins.Add (loginName);  			users.AddRange (GetSPUsersFromADGroup (web' login' loadedLogins' depth++));  			loadedLogins.Remove (loginName);  		}  		else {  			users.Add (user);  		}  	}  	return users.Distinct (new SPUserComparer ()).ToList ();  }  
Magic Number,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsersFromADGroup,The following statement contains a magic number: try {  	principals = SPUtility.GetPrincipalsInGroup (web' loginName' 10000' out reachMax);  }  catch (InvalidOperationException)// claims doesn't work with GetPrincipalsInGroup   {  	return users;  }  
Magic Number,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUsersFromADGroup,The following statement contains a magic number: principals = SPUtility.GetPrincipalsInGroup (web' loginName' 10000' out reachMax);  
Missing Default,Navertica.SharePoint,SPSecurableObjectAccesDeniedException,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\Classes\Exceptions.cs,GetMessage,The following switch statement is missing a default case: switch (obj.GetType ().Name) {  case "SPListItem":  	result = "for SPListItem - " + ((SPListItem)obj).FormUrlDisplay ();  	break;  case "SPList":  	result = "for SPList - " + ((SPList)obj).DefaultViewUrl;  	break;  case "SPWeb":  	result = "for SPWeb - " + ((SPWeb)obj).Url;  	break;  }  
Missing Default,Navertica.SharePoint.Extensions,StringExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\StringExtensions.cs,EscapeJavaScript,The following switch statement is missing a default case: switch (ch) {  case '@':  case '*':  case '_':  case '+':  case '-':  case '.':  case '/':  	goto Label_0125;  }  
Missing Default,Navertica.SharePoint.Extensions,SPListExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPList.cs,AddOrUpdateItem,The following switch statement is missing a default case: switch (fldType) {  case "Text":  case "Note":  	qlist.Add (new Q (QOp.Equal' QVal.Text' key' itemMetadata [key]));  	break;  }  
Missing Default,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,GetInfo,The following switch statement is missing a default case: switch (securableObject.GetType ().Name) {  case "SPListItem":  	return ((SPListItem)securableObject).FormUrlDisplay () + "#SPListItem";  case "SPList":  	return ((SPList)securableObject).DefaultViewUrl + "#SPList";  case "SPWeb":  	return ((SPWeb)securableObject).Url + "#SPWeb";  }  
Missing Default,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,GetRoleDefinition,The following switch statement is missing a default case: switch (securableObject.GetType ().Name) {  case "SPListItem":  	return ((SPListItem)securableObject).Web.RoleDefinitions.GetByType (roleType);  case "SPList":  	return ((SPList)securableObject).ParentWeb.RoleDefinitions.GetByType (roleType);  case "SPWeb":  	return ((SPWeb)securableObject).RoleDefinitions.GetByType (roleType);  }  
Missing Default,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,GetSystemAccountEmail,The following switch statement is missing a default case: switch (securableObject.GetType ().Name) {  case "SPListItem":  	return ((SPListItem)securableObject).ParentList.ParentWeb.Site.SystemAccount.Email;  case "SPList":  	return ((SPList)securableObject).ParentWeb.Site.SystemAccount.Email;  case "SPWeb":  	return ((SPWeb)securableObject).Site.SystemAccount.Email;  }  
Missing Default,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,GetWeb,The following switch statement is missing a default case: switch (securableObject.GetType ().Name) {  case "SPListItem":  	return ((SPListItem)securableObject).Web;  case "SPList":  	return ((SPList)securableObject).ParentWeb;  case "SPWeb":  	return ((SPWeb)securableObject);  }  
Missing Default,Navertica.SharePoint.Extensions,SPSecurableObjectExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPSecurableObject.cs,RunElevated,The following switch statement is missing a default case: switch (securableObject.GetType ().Name) {  case "SPListItem":  	((SPListItem)securableObject).RunElevated (delegate (SPListItem elevatedItem) {  		result = func (elevatedItem);  		return null;  	});  	break;  case "SPList":  	((SPList)securableObject).RunElevated (delegate (SPList elevatedList) {  		result = func (elevatedList);  		return null;  	});  	break;  case "SPWeb":  	((SPWeb)securableObject).RunElevated (delegate (SPWeb elevatedWeb) {  		result = func (elevatedWeb);  		return null;  	});  	break;  }  
Missing Default,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPUser,The following switch statement is missing a default case: switch (identification.GetType ().Name) {  case "SPGroup":  	return null;  case "SPUser":  	return (SPUser)identification;  case "SPFieldUserValue":  	return ((SPFieldUserValue)identification).User;  case "SPFieldUserValueCollection":  	SPFieldUserValueCollection usrcol = (SPFieldUserValueCollection)identification;  	return usrcol.Count == 1 ? GetSPUser (web' usrcol [0]) : null;  case "SPRoleAssignmentCollection":  	SPRoleAssignmentCollection rolecol = (SPRoleAssignmentCollection)identification;  	return rolecol.Count == 1 ? GetSPUser (web' rolecol [0]) : null;  case "SPRoleAssignment":  	SPRoleAssignment roleAssignment = (SPRoleAssignment)identification;  	return roleAssignment.Member is SPUser ? web.SiteUsers.GetByID (roleAssignment.Member.ID) : null;  }  
Missing Default,Navertica.SharePoint.Extensions,SPWebExtensions,C:\repos\NAVERTICA_Navertica.SharePoint.Extensions\SPWeb.cs,GetSPGroup,The following switch statement is missing a default case: switch (identification.GetType ().Name) {  case "SPGroup":  	return (SPGroup)identification;  case "SPUser":  	return null;  case "SPFieldUserValue":  	try {  		return web.SiteGroups.GetByID (((SPFieldUserValue)identification).LookupId);  	}  	catch (Exception) {  		return null;  	}  case "SPFieldUserValueCollection":  case "SPRoleAssignmentCollection":  	return null;  case "SPRoleAssignment": {  	SPRoleAssignment roleAssignment = (SPRoleAssignment)identification;  	if (roleAssignment.Member is SPGroup) {  		try {  			return web.SiteGroups.GetByID (roleAssignment.Member.ID);  		}  		// ReSharper disable once EmptyGeneralCatchClause  		catch (Exception) {  		}  	}  	else {  		return null;  	}  	break;  }  }  
