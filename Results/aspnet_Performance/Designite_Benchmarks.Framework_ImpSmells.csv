Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Benchmarks.Framework,BenchmarkTestCase,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCase.cs,BenchmarkTestCase,The method has 7 parameters. Parameters: iterations' warmupIterations' framework' variation' diagnosticMessageSink' testMethod' testMethodArguments
Long Parameter List,Benchmarks.Framework,BenchmarkTestCase,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCase.cs,RunAsync,The method has 5 parameters. Parameters: diagnosticMessageSink' messageBus' constructorArguments' aggregator' cancellationTokenSource
Long Parameter List,Benchmarks.Framework,BenchmarkTestCaseRunner,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCaseRunner.cs,BenchmarkTestCaseRunner,The method has 9 parameters. Parameters: testCase' displayName' skipReason' constructorArguments' testMethodArguments' messageBus' aggregator' cancellationTokenSource' diagnosticMessageSink
Long Parameter List,Benchmarks.Framework,BenchmarkTestRunner,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCaseRunner.cs,BenchmarkTestRunner,The method has 11 parameters. Parameters: test' metricCollector' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Benchmarks.Framework,BenchmarkTestInvoker,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCaseRunner.cs,BenchmarkTestInvoker,The method has 10 parameters. Parameters: test' metricCollector' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Benchmarks.Framework,SkippedTestCase,C:\repos\aspnet_Performance\src\Benchmarks.Framework\SkippedTestCase.cs,SkippedTestCase,The method has 5 parameters. Parameters: skipReason' diagnosticMessageSink' defaultMethodDisplay' testMethod' testMethodArguments
Long Identifier,Benchmarks.Framework,MetricCollector,C:\repos\aspnet_Performance\src\Benchmarks.Framework\MetricCollector.cs,,The length of the parameter _memoryOnCurrentCollectionStarted is 33.
Long Statement,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The length of the statement  "                throw new InvalidOperationException($"Recorded iterations ({_iterations.Count}) does not match expected iterations ({Iterations})"); " is 132.
Long Statement,Benchmarks.Framework,BenchmarkTestCaseBase,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCaseBase.cs,GetUniqueID,The length of the statement  "            return $"{TestMethod.TestClass.TestCollection.TestAssembly.Assembly.Name}{TestMethod.TestClass.Class.Name}{TestMethod.Method.Name}{Variation}"; " is 143.
Long Statement,Benchmarks.Framework,BenchmarkTestCaseRunner,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCaseRunner.cs,RunTestAsync,The length of the statement  "                    new DiagnosticMessage($"No valid results for {TestCase.DisplayName}. {runSummary.Failed} of {TestCase.Iterations + TestCase.WarmupIterations} iterations failed.")); " is 164.
Magic Number,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The following statement contains a magic number: TimeElapsedPercentile99 = Percentile(elapsedTimes' 0.99);
Magic Number,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The following statement contains a magic number: TimeElapsedPercentile95 = Percentile(elapsedTimes' 0.95);
Magic Number,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The following statement contains a magic number: TimeElapsedPercentile90 = Percentile(elapsedTimes' 0.90);
Magic Number,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The following statement contains a magic number: MemoryDeltaPercentile99 = Percentile(memoryDeltas' 0.99);
Magic Number,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The following statement contains a magic number: MemoryDeltaPercentile95 = Percentile(memoryDeltas' 0.95);
Magic Number,Benchmarks.Framework,BenchmarkRunSummary,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkRunSummary.cs,PopulateMetrics,The following statement contains a magic number: MemoryDeltaPercentile90 = Percentile(memoryDeltas' 0.90);
Magic Number,Benchmarks.Framework,BenchmarkTestCaseRunner,C:\repos\aspnet_Performance\src\Benchmarks.Framework\BenchmarkTestCaseRunner.cs,RunTestAsync,The following statement contains a magic number: var runSummary = new BenchmarkRunSummary              {                  TestClassFullName = TestCase.TestMethod.TestClass.Class.Name'                  TestClass = TestCase.TestMethod.TestClass.Class.Name.Split('.').Last()'                  TestMethod = TestCase.TestMethodName'                  Variation = TestCase.Variation'                  ProductReportingVersion = BenchmarkConfig.Instance.ProductReportingVersion'                  RunStarted = DateTime.UtcNow'                  MachineName = _machineName'                  Framework = TestCase.Framework ?? _framework'                  Architecture = IntPtr.Size > 4 ? "x64" : "x86"'                  WarmupIterations = TestCase.WarmupIterations'                  Iterations = TestCase.Iterations'                  CustomData = BenchmarkConfig.Instance.CustomData              };
Magic Number,Benchmarks.Framework,MetricCollector,C:\repos\aspnet_Performance\src\Benchmarks.Framework\MetricCollector.cs,GetCurrentMemory,The following statement contains a magic number: for (var i = 0; i < 5; i++)              {                  GC.GetTotalMemory(forceFullCollection: true);              }
