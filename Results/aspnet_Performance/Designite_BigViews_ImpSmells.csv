Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BigViews,HomeController,C:\repos\aspnet_Performance\testapp\BigViews\Controllers\HomeController.cs,HomeController,The following statement contains a magic number: for (var i = 0; i < 10; i++)              {                  var user = new User                  {                      CurrentJob = BigViews.User.AvailableJobs[jobIndex]'                      FirstName = $"Joey { i }"'                      LastName = "Brown"'                      HomePhone = $"425-555-{ i }{ i }{ i }{ i }"'                      Mobile = $"206-555-{ i }{ i }{ i }{ i }"'                      MailId = $"Joey{ i }@contoso.com"'                  };                  jobIndex = (jobIndex + 1) % BigViews.User.AvailableJobs.Count;                    for (var j = 0; j < pastJobCount; j++)                  {                      user.PastJobs.Add(BigViews.User.AvailableJobs[jobIndex]);                      jobIndex = (jobIndex + 1) % BigViews.User.AvailableJobs.Count;                  }                    pastJobCount = (pastJobCount + 1) % 3;                  _users.Add(user.MailId' user);              }
Magic Number,BigViews,HomeController,C:\repos\aspnet_Performance\testapp\BigViews\Controllers\HomeController.cs,HomeController,The following statement contains a magic number: for (var i = 0; i < 10; i++)              {                  var user = new User                  {                      CurrentJob = BigViews.User.AvailableJobs[jobIndex]'                      FirstName = $"Joey { i }"'                      LastName = "Brown"'                      HomePhone = $"425-555-{ i }{ i }{ i }{ i }"'                      Mobile = $"206-555-{ i }{ i }{ i }{ i }"'                      MailId = $"Joey{ i }@contoso.com"'                  };                  jobIndex = (jobIndex + 1) % BigViews.User.AvailableJobs.Count;                    for (var j = 0; j < pastJobCount; j++)                  {                      user.PastJobs.Add(BigViews.User.AvailableJobs[jobIndex]);                      jobIndex = (jobIndex + 1) % BigViews.User.AvailableJobs.Count;                  }                    pastJobCount = (pastJobCount + 1) % 3;                  _users.Add(user.MailId' user);              }
