Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Stress.Framework,StressTestCase,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCase.cs,StressTestCase,The method has 7 parameters. Parameters: testApplicationName' iterations' clients' serverType' warmupMethod' diagnosticMessageSink' testMethod
Long Parameter List,Stress.Framework,StressTestCase,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCase.cs,RunAsync,The method has 5 parameters. Parameters: diagnosticMessageSink' messageBus' constructorArguments' aggregator' cancellationTokenSource
Long Parameter List,Stress.Framework,StressTestCaseBase,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseBase.cs,StressTestCaseBase,The method has 5 parameters. Parameters: testApplicationName' serverType' warmupMethod' diagnosticMessageSink' testMethod
Long Parameter List,Stress.Framework,StressTestCaseRunner,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseRunner.cs,StressTestCaseRunner,The method has 9 parameters. Parameters: testCase' displayName' skipReason' constructorArguments' testMethodArguments' messageBus' aggregator' cancellationTokenSource' diagnosticMessageSink
Long Parameter List,Stress.Framework,StressTestRunner,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseRunner.cs,StressTestRunner,The method has 11 parameters. Parameters: server' test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Stress.Framework,StressTestInvoker,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseRunner.cs,StressTestInvoker,The method has 10 parameters. Parameters: server' test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Stress.Framework,StressTestServer,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestServer.cs,StressTestServer,The method has 5 parameters. Parameters: serverType' testName' testMethodName' port' metricCollector
Long Identifier,Stress.Framework,StressMetricCollector,C:\repos\aspnet_Performance\src\Stress.Framework\StressMetricCollector.cs,,The length of the parameter _memoryOnCurrentCollectionStarted is 33.
Long Statement,Stress.Framework,StressTestCaseBase,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseBase.cs,GetUniqueID,The length of the statement  "            return $"{TestMethod.TestClass.TestCollection.TestAssembly.Assembly.Name}{TestMethod.TestClass.Class.Name}{TestMethod.Method.Name}"; " is 132.
Long Statement,Stress.Framework,StressTestCaseRunner,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseRunner.cs,RunTestAsync,The length of the statement  "                    new DiagnosticMessage($"No valid results for {TestCase.DisplayName}. {runSummary.Failed} of {TestCase.Iterations} iterations failed.")); " is 136.
Long Statement,Stress.Framework,StressTestTeamCityReporterMessageHandler,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestTeamCityReporterMessageHandler.cs,Visit,The length of the statement  "            _logger.LogImportantMessage($"##teamcity[buildStatisticValue key='{_escape(GetKey(message))}' value='{_escape(Convert.ToString(message.Value))}' flowId='{_toFlowId(message.TestCollection.DisplayName)}' ]"); " is 206.
Long Statement,Stress.Framework,TimedMetricReporter,C:\repos\aspnet_Performance\src\Stress.Framework\TimedMetricReporter.cs,Report,The length of the statement  "                new StressTestProgressMessage($"Test {_testCase.DisplayName} ran {requests} requests @ {momentalRps}/{rps} RPS in {(int)Math.Round(elapsed.TotalSeconds)}s.")); " is 159.
Magic Number,Stress.Framework,StressRunSummary,C:\repos\aspnet_Performance\src\Stress.Framework\StressRunSummary.cs,PublishOutput,The following statement contains a magic number: messageBus.QueueMessage(new StressTestSummaryStatisticsMessage(testCase' "MEM"' MemoryDelta / 1000));
Magic Number,Stress.Framework,StressRunSummary,C:\repos\aspnet_Performance\src\Stress.Framework\StressRunSummary.cs,PublishOutput,The following statement contains a magic number: Console.WriteLine("Memory Delta: " + string.Format("{0:n0}K"' MemoryDelta / 1000));
Magic Number,Stress.Framework,StressTestCaseRunner,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseRunner.cs,RunTestAsync,The following statement contains a magic number: var runSummary = new StressRunSummary              {                  TestClassFullName = TestCase.TestMethod.TestClass.Class.Name'                  TestClass = TestCase.TestMethod.TestClass.Class.Name.Split('.').Last()'                  TestMethod = TestCase.TestMethodName'                  RunStarted = DateTime.UtcNow'                  MachineName = _machineName'                  Framework = _framework'                  Architecture = IntPtr.Size > 4 ? "x64" : "x86"'                  Iterations = TestCase.Iterations'              };
Magic Number,Stress.Framework,StressTestCaseRunner,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestCaseRunner.cs,RunTestAsync,The following statement contains a magic number: var server = new StressTestServer(                  TestCase.ServerType'                  TestCase.TestApplicationName'                  TestCase.TestMethodName'                  port: 5000'                  metricCollector: TestCase.MetricCollector);
Magic Number,Stress.Framework,StressTestServer,C:\repos\aspnet_Performance\src\Stress.Framework\StressTestServer.cs,StartAsync,The following statement contains a magic number: for (var i = 0; i < 20; ++i)              {                  try                  {                      _logger.LogInformation($"Pinging {serverVerificationClient.BaseAddress} to ensure server booted properly");                      response = await serverVerificationClient.GetAsync(serverVerificationClient.BaseAddress);                      break;                  }                  catch (TimeoutException)                  {                      _logger.LogError("Http client timeout.");                      break;                  }                  catch (Exception)                  {                      _logger.LogInformation("Failed to ping server. Retrying...");                      Thread.Sleep(TimeSpan.FromSeconds(1));                      continue;                  }              }
Magic Number,Stress.Framework,TimedMetricReporter,C:\repos\aspnet_Performance\src\Stress.Framework\TimedMetricReporter.cs,Report,The following statement contains a magic number: _messageBus.QueueMessage(new StressTestStatisticsMessage(_testCase' "MEM"' collector.MemoryDelta / 1000));
