Implementation smell,Namespace,Class,File,Method,Description
Long Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetPropertyValue,The method has 80 lines of code.
Complex Method,NQueueStuffer.Core,MessageInstanceFactory,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\MessageInstanceFactory.cs,SetReasonableDefaults,Cyclomatic complexity of the method is 7
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,InitType,Cyclomatic complexity of the method is 15
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetAllPropertiesForType,Cyclomatic complexity of the method is 12
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,Deserialize,Cyclomatic complexity of the method is 9
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,Process,Cyclomatic complexity of the method is 9
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetObjectOfTypeFromNode,Cyclomatic complexity of the method is 12
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetPropertyValue,Cyclomatic complexity of the method is 18
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,Serialize,Cyclomatic complexity of the method is 11
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,WriteEntry,Cyclomatic complexity of the method is 13
Complex Method,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetBaseTypes,Cyclomatic complexity of the method is 9
Long Parameter List,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,WriteObject,The method has 4 parameters.
Long Parameter List,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,WriteEntry,The method has 4 parameters.
Long Statement,NQueueStuffer.Core,AssemblyFetcher,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\AssemblyFetcher.cs,GetMessageTypesFromAssembly,The length of the statement  "	var messageTypes = assembly.GetTypes ().Where (type => typeof(IMessage).IsAssignableFrom (type) && (!type.IsAbstract || type.IsInterface)); " is 139.
Long Statement,NQueueStuffer.Core,MessageStuffer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\MessageStuffer.cs,CreateBus,The length of the statement  "	}).CastleWindsorBuilder ().XmlSerializer ().MsmqTransport ().IsTransactional (true).PurgeOnStartup (false).UnicastBus ().ImpersonateSender (false).CreateBus ().Start (); " is 169.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetAllPropertiesForType,The length of the statement  "			throw new NotSupportedException ("IList is not a supported property type for serialization.Type: " + t.FullName + " Property: " + prop.Name); " is 141.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetAllPropertiesForType,The length of the statement  "				throw new NotSupportedException ("IList<T> is not a supported property type for serialization. Type: " + t.FullName + " Property: " + prop.Name); " is 145.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetAllPropertiesForType,The length of the statement  "				throw new NotSupportedException ("IDictionary<T' K> is not a supported property type for serialization. Type: " + t.FullName + " Property: " + prop.Name); " is 154.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,Serialize,The length of the statement  "	builder.Append ("<Messages xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\""); " is 132.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,Write,The length of the statement  "		throw new InvalidOperationException ("Type " + t.FullName + " was not registered in the serializer. Check that it appears in the list of configured assemblies/types to scan."); " is 176.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,WriteObject,The length of the statement  "			throw new InvalidOperationException (String.Format ("Cannot encrypt field {0} because no encryption service was configured."' name)); " is 133.
Long Statement,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,FormatAsString,The length of the statement  "		return string.Format ("{0}P0Y0M{1}DT{2}H{3}M{4}.{5:000}S"' (ts.TotalSeconds < 0 ? "-" : "")' Math.Abs (ts.Days)' Math.Abs (ts.Hours)' Math.Abs (ts.Minutes)' Math.Abs (ts.Seconds)' Math.Abs (ts.Milliseconds)); " is 208.
Empty Catch Block,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,Process,The method has an empty catch block.
Magic Number,NQueueStuffer.Core.MSMQ,QueueFinder,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\MSMQ\QueueFinder.cs,GetLocalQueueNames,The following statement contains a magic number: return MessageQueue.GetPrivateQueuesByMachine ("localhost").Select (m => m.QueueName).Select (q => {  	if (q.StartsWith ("private$\\"' StringComparison.OrdinalIgnoreCase)) {  		return q.Substring (9);  	}  	return q;  }).OrderBy (q => q).ToList ();  
Magic Number,NQueueStuffer.Core.MSMQ,QueueFinder,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\MSMQ\QueueFinder.cs,GetLocalQueueNames,The following statement contains a magic number: if (q.StartsWith ("private$\\"' StringComparison.OrdinalIgnoreCase)) {  	return q.Substring (9);  }  
Magic Number,NQueueStuffer.Core.MSMQ,QueueFinder,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\MSMQ\QueueFinder.cs,GetLocalQueueNames,The following statement contains a magic number: return q.Substring (9);  
Magic Number,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,InitType,The following statement contains a magic number: if (args.Length == 2) {  	isKeyValuePair = (typeof(KeyValuePair<' >).MakeGenericType (args) == t);  }  
Magic Number,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetAllPropertiesForType,The following statement contains a magic number: foreach (var prop in t.GetProperties ()) {  	if (typeof(IList) == prop.PropertyType)  		throw new NotSupportedException ("IList is not a supported property type for serialization.Type: " + t.FullName + " Property: " + prop.Name);  	var args = prop.PropertyType.GetGenericArguments ();  	if (args.Length == 1)  		if (typeof(IList<>).MakeGenericType (args) == prop.PropertyType)  			throw new NotSupportedException ("IList<T> is not a supported property type for serialization. Type: " + t.FullName + " Property: " + prop.Name);  	if (args.Length == 2)  		if (typeof(IDictionary<' >).MakeGenericType (args) == prop.PropertyType)  			throw new NotSupportedException ("IDictionary<T' K> is not a supported property type for serialization. Type: " + t.FullName + " Property: " + prop.Name);  	if (!prop.CanWrite && !isKeyValuePair)  		continue;  	if (prop.GetCustomAttributes (typeof(XmlIgnoreAttribute)' false).Length > 0)  		continue;  	result.Add (prop);  }  
Magic Number,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetAllPropertiesForType,The following statement contains a magic number: if (args.Length == 2)  	if (typeof(IDictionary<' >).MakeGenericType (args) == prop.PropertyType)  		throw new NotSupportedException ("IDictionary<T' K> is not a supported property type for serialization. Type: " + t.FullName + " Property: " + prop.Name);  
Magic Number,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetPropertyValue,The following statement contains a magic number: if (typeof(IDictionary).IsAssignableFrom (type)) {  	var result = Activator.CreateInstance (type) as IDictionary;  	var keyType = typeof(object);  	var valueType = typeof(object);  	foreach (var interfaceType in type.GetInterfaces ()) {  		var args = interfaceType.GetGenericArguments ();  		if (args.Length == 2)  			if (typeof(IDictionary<' >).MakeGenericType (args).IsAssignableFrom (type)) {  				keyType = args [0];  				valueType = args [1];  				break;  			}  	}  	foreach (XmlNode xn in n.ChildNodes)// go over KeyValuePairs  	 {  		object key = null;  		object value = null;  		foreach (XmlNode node in xn.ChildNodes) {  			if (node.Name == "Key")  				key = GetObjectOfTypeFromNode (keyType' node);  			if (node.Name == "Value")  				value = GetObjectOfTypeFromNode (valueType' node);  		}  		if (result != null && key != null)  			result [key] = value;  	}  	return result;  }  
Magic Number,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetPropertyValue,The following statement contains a magic number: foreach (var interfaceType in type.GetInterfaces ()) {  	var args = interfaceType.GetGenericArguments ();  	if (args.Length == 2)  		if (typeof(IDictionary<' >).MakeGenericType (args).IsAssignableFrom (type)) {  			keyType = args [0];  			valueType = args [1];  			break;  		}  }  
Magic Number,NQueueStuffer.Core.NServicebus,XMLMessageSerializer,D:\newReposJune17\janovesk_NQueueStuffer\NQueueStuffer.Core\NServicebus\XMLMessageSerializer.cs,GetPropertyValue,The following statement contains a magic number: if (args.Length == 2)  	if (typeof(IDictionary<' >).MakeGenericType (args).IsAssignableFrom (type)) {  		keyType = args [0];  		valueType = args [1];  		break;  	}  
