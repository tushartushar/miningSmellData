Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Rhino.Etl.Dsl.Macros,HashJoinMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\HashJoinMacro.cs,Expand,Cyclomatic complexity of the method is 10
Complex Method,Rhino.Etl.Dsl.Macros,HashJoinMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\HashJoinMacro.cs,SetupJoinMethodDefinition,Cyclomatic complexity of the method is 14
Complex Method,Rhino.Etl.Dsl.Macros,JoinSectionMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\JoinSectionMacro.cs,DoExpand,Cyclomatic complexity of the method is 8
Long Statement,Rhino.Etl.Dsl.Macros,AbstractChildMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractChildMacro.cs,ValidateParent,The length of the statement  "	string msg = string.Format ("A {0} statement can appear only under a {1}"' macro.Name' string.Join (" | "' allowedParents)); " is 124.
Long Statement,Rhino.Etl.Dsl.Macros,AbstractClassGeneratorMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractClassGeneratorMacro.cs,BuildParameters,The length of the statement  "		ParameterDeclaration declaration = new ParameterDeclaration (info.Name' CodeBuilder.CreateTypeReference (info.ParameterType)); " is 126.
Long Statement,Rhino.Etl.Dsl.Macros,AbstractClassGeneratorMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractClassGeneratorMacro.cs,GetMethodToOverride,The length of the statement  "			overridenMethod = typeof(T).GetMethod (blockMethodName' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 126.
Long Statement,Rhino.Etl.Dsl.Macros,AbstractClassGeneratorMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractClassGeneratorMacro.cs,GetMethodToOverride,The length of the statement  "			string msg = string.Format ("Error occured when trying to get method '{0}' on {1}. {2}"' blockMethodName' typeof(T).Name' exception); " is 133.
Long Statement,Rhino.Etl.Dsl.Macros,AbstractClassGeneratorMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractClassGeneratorMacro.cs,GetMethodToOverride,The length of the statement  "			Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "Could not find " + blockMethodName + " on " + typeof(T).FullName)); " is 133.
Long Statement,Rhino.Etl.Dsl.Macros,AbstractClassGeneratorMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractClassGeneratorMacro.cs,GetClassName,The length of the statement  "		Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' GetType ().Name + " first parameter must be a valid name.")); " is 126.
Long Statement,Rhino.Etl.Dsl.Macros,AbstractClassGeneratorMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\AbstractClassGeneratorMacro.cs,GetAnonymousClassName,The length of the statement  "		Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' GetType ().Name + " must have a single parameter' the name of the " + GetType ().Name)); " is 153.
Long Statement,Rhino.Etl.Dsl.Macros,ActionMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\ActionMacro.cs,DoExpand,The length of the statement  "	mergeRowsMethod.Body.Add (new BinaryExpression (BinaryOperatorType.Assign' new ReferenceExpression ("row")' new MethodInvocationExpression (AstUtil.CreateReferenceExpression (typeof(Row).FullName)))); " is 200.
Long Statement,Rhino.Etl.Dsl.Macros,GroupByMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\GroupByMacro.cs,DoExpand,The length of the statement  "			Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "GroupBy arguments must be refernce expressions. Example: groupBy name' surname")); " is 148.
Long Statement,Rhino.Etl.Dsl.Macros,HashJoinMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\HashJoinMacro.cs,Expand,The length of the statement  "		Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "Number of key columns must be the same for both sides of the join")); " is 135.
Long Statement,Rhino.Etl.Dsl.Macros,HashJoinMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\HashJoinMacro.cs,SetupJoinMethodDefinition,The length of the statement  "	method.Body.Add (new MethodInvocationExpression (new MemberReferenceExpression (new ReferenceExpression ("join")' "Left")' leftKeys.OfType<Expression> ().ToArray ())); " is 167.
Long Statement,Rhino.Etl.Dsl.Macros,HashJoinMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\HashJoinMacro.cs,SetupJoinMethodDefinition,The length of the statement  "	method.Body.Add (new MethodInvocationExpression (new MemberReferenceExpression (new ReferenceExpression ("join")' "Right")' rightKeys.OfType<Expression> ().ToArray ())); " is 169.
Long Statement,Rhino.Etl.Dsl.Macros,JoinSectionMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\JoinSectionMacro.cs,DoExpand,The length of the statement  "		Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "Join " + name + " section must contain at least a single expression statement")); " is 147.
Long Statement,Rhino.Etl.Dsl.Macros,JoinSectionMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\JoinSectionMacro.cs,DoExpand,The length of the statement  "		Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "Join " + name + " section must contain at least one key column")); " is 132.
Long Statement,Rhino.Etl.Dsl.Macros,JoinSectionMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\JoinSectionMacro.cs,DoExpand,The length of the statement  "				Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "Join " + name + " section arguments must be reference expressions. Example: " + name + " name' surname")); " is 172.
Long Statement,Rhino.Etl.Dsl.Macros,JoinSectionMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\JoinSectionMacro.cs,DoExpand,The length of the statement  "			Errors.Add (CompilerErrorFactory.CustomError (macro.LexicalInfo' "Join " + name + " section can only contain expressions")); " is 124.
Long Statement,Rhino.Etl.Dsl.Macros,OnMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\OnMacro.cs,DoExpand,The length of the statement  "	mergeRowsMethod.Body.Add (new BinaryExpression (BinaryOperatorType.Assign' new ReferenceExpression ("row")' new MethodInvocationExpression (AstUtil.CreateReferenceExpression (typeof(Row).FullName)))); " is 200.
Long Statement,Rhino.Etl.Dsl.Macros,OnMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\OnMacro.cs,DoExpand,The length of the statement  "	matchJoinConditionMethod.Parameters.Add (new ParameterDeclaration ("left"' new SimpleTypeReference (typeof(Row).FullName))); " is 124.
Long Statement,Rhino.Etl.Dsl.Macros,OnMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\OnMacro.cs,DoExpand,The length of the statement  "	matchJoinConditionMethod.Parameters.Add (new ParameterDeclaration ("right"' new SimpleTypeReference (typeof(Row).FullName))); " is 125.
Long Statement,Rhino.Etl.Dsl.Macros,ProcessMacro,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\Macros\ProcessMacro.cs,Expand,The length of the statement  "		expressionStatement.Expression = new MethodInvocationExpression (new ReferenceExpression ("Register")' expressionStatement.Expression); " is 135.
Magic Number,Rhino.Etl.Dsl,EtlDslEngine,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\EtlDslEngine.cs,CustomizeCompiler,The following statement contains a magic number: pipeline.Insert (2' new UseModuleNameAsNamespaceIfMissing ());  
Magic Number,Rhino.Etl.Dsl,EtlDslEngine,F:\newReposMay17\ayende_rhino-etl\Rhino.Etl.Dsl\EtlDslEngine.cs,CustomizeCompiler,The following statement contains a magic number: pipeline.Insert (3' new AutoImportCompilerStep (_namespaces));  
