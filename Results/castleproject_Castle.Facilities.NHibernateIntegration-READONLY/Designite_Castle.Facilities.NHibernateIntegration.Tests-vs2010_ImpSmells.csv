Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Castle.Facilities.NHibernateIntegration.Tests.Common,TestInterceptor,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Common\TestInterceptor.cs,FindDirty,The method has 6 parameters. Parameters: entity' id' currentState' previousState' propertyNames' types
Long Parameter List,Castle.Facilities.NHibernateIntegration.Tests.Common,TestInterceptor,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Common\TestInterceptor.cs,OnFlushDirty,The method has 6 parameters. Parameters: entity' id' currentState' previousState' propertyNames' types
Long Parameter List,Castle.Facilities.NHibernateIntegration.Tests.Common,TestInterceptor,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Common\TestInterceptor.cs,OnLoad,The method has 5 parameters. Parameters: entity' id' state' propertyNames' types
Long Parameter List,Castle.Facilities.NHibernateIntegration.Tests.Common,TestInterceptor,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Common\TestInterceptor.cs,OnSave,The method has 5 parameters. Parameters: entity' id' state' propertyNames' types
Long Parameter List,Castle.Facilities.NHibernateIntegration.Tests.Common,TestInterceptor,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Common\TestInterceptor.cs,OnDelete,The method has 5 parameters. Parameters: entity' id' state' propertyNames' types
Long Statement,Castle.Facilities.NHibernateIntegration.Tests.Internals,SessionManagerTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Internals\SessionManagerTestCase.cs,SecondDatabaseSessionEnlistedOnlyOnceInActualTransaction,The length of the statement  "			// request compatible session for db2 --> we must get existing NH session to db2 which should be already enlisted in active transaction " is 135.
Long Statement,Castle.Facilities.NHibernateIntegration.Tests.Internals,SessionManagerTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Internals\SessionManagerTestCase.cs,SecondDatabaseStatelessSessionEnlistedOnlyOnceInActualTransaction,The length of the statement  "			// request compatible session for db2 --> we must get existing NH session to db2 which should be already enlisted in active transaction " is 135.
Long Statement,Castle.Facilities.NHibernateIntegration.Tests.Registration,FacilityFluentConfigTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Registration\FacilityFluentConfigTestCase.cs,Should_be_able_to_revolve_ISessionManager_when_fluently_configured,The length of the statement  "            container.AddFacility<NHibernateFacility>("nhibernatefacility"' f => f.ConfigurationBuilder<TestConfigurationBuilder>()); " is 121.
Long Statement,Castle.Facilities.NHibernateIntegration.Tests.Registration,FacilityFluentConfigTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Registration\FacilityFluentConfigTestCase.cs,Should_override_DefaultConfigurationBuilder,The length of the statement  "            container.AddFacility<NHibernateFacility>("nhibernatefacility"' f => f.ConfigurationBuilder<DummyConfigurationBuilder>()); " is 122.
Long Statement,Castle.Facilities.NHibernateIntegration.Tests.Registration,FacilityFluentConfigTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Registration\FacilityFluentConfigTestCase.cs,Should_override_IsWeb,The length of the statement  "            container.AddFacility<NHibernateFacility>("nhibernatefacility"' f => f.IsWeb().ConfigurationBuilder<DummyConfigurationBuilder>()); " is 130.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Issues.Facilities103,DefaultSessionManagerTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Issues\Facilities103\Fixture.cs,WhenBeginTransactionFailsSessionIsRemovedFromSessionStore,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Issues.Facilities103,DefaultSessionManagerTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Issues\Facilities103\Fixture.cs,WhenBeginTransactionFailsStatelessSessionIsRemovedFromSessionStore,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,DistributedTransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\DistributedTransactionsTestCase.cs,ExceptionOnEndWithTwoDatabases,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,DistributedTransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\DistributedTransactionsTestCase.cs,ExceptionOnEndWithTwoDatabasesStateless,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,TestTransaction,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,NonTransactionalRoot,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,CallWithException,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,CallWithException2,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,TestTransactionStateless,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,NonTransactionalRootStateless,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,CallWithExceptionStateless,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,CallWithExceptionStateless2,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionWithTwoDatabasesTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionWithTwoDatabasesTestCase.cs,ExceptionOnEndWithTwoDatabases,The method has an empty catch block.
Empty Catch Block,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionWithTwoDatabasesTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionWithTwoDatabasesTestCase.cs,ExceptionOnEndWithTwoDatabasesStateless,The method has an empty catch block.
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAll,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(3));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithCriterionOrderBy,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithCriterionOrderByLimitsOutOfRangeReturnsEmptyArray,The following statement contains a magic number: var results = nhGenericDao.FindAll(typeof (BlogItem)'  				                                   new[] {Restrictions.Eq("Text"' "Hello")}'  				                                   new[] {Order.Desc("Title")}' 2' 3);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithCriterionOrderByLimitsOutOfRangeReturnsEmptyArray,The following statement contains a magic number: var results = nhGenericDao.FindAll(typeof (BlogItem)'  				                                   new[] {Restrictions.Eq("Text"' "Hello")}'  				                                   new[] {Order.Desc("Title")}' 2' 3);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimits,The following statement contains a magic number: var results = nhGenericDao.FindAll(typeof (BlogItem)' 1' 2);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimits,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimitsOutOfRangeReturnsEmptyArray,The following statement contains a magic number: var results = nhGenericDao.FindAll(typeof (BlogItem)' 3' 4);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimitsOutOfRangeReturnsEmptyArray,The following statement contains a magic number: var results = nhGenericDao.FindAll(typeof (BlogItem)' 3' 4);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,FindAllWithCustomQuery,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,Delete,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(3));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,Delete,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,GetByNamedQuery,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(3));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,GetByNamedQueryWithLimits,The following statement contains a magic number: var results = nhGenericDao.FindAllWithNamedQuery("getAllBlogs"' 1' 2);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,GetByNamedQueryWithLimits,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllStateless,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(3));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithCriterionOrderByStateless,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithCriterionOrderByLimitsOutOfRangeReturnsEmptyArrayStateless,The following statement contains a magic number: var results = nhGenericDao.FindAllStateless(  					typeof(BlogItem)'  					new[] { Restrictions.Eq("Text"' "Hello") }'  					new[] { Order.Desc("Title") }' 2' 3);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithCriterionOrderByLimitsOutOfRangeReturnsEmptyArrayStateless,The following statement contains a magic number: var results = nhGenericDao.FindAllStateless(  					typeof(BlogItem)'  					new[] { Restrictions.Eq("Text"' "Hello") }'  					new[] { Order.Desc("Title") }' 2' 3);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimitsStateless,The following statement contains a magic number: var results = nhGenericDao.FindAllStateless(typeof(BlogItem)' 1' 2);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimitsStateless,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimitsOutOfRangeReturnsEmptyArrayStateless,The following statement contains a magic number: var results = nhGenericDao.FindAllStateless(typeof(BlogItem)' 3' 4);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,CanFindAllWithLimitsOutOfRangeReturnsEmptyArrayStateless,The following statement contains a magic number: var results = nhGenericDao.FindAllStateless(typeof(BlogItem)' 3' 4);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,FindAllWithCustomQueryStateless,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,GetByNamedQueryStateless,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(3));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,GetByNamedQueryWithLimitsStateless,The following statement contains a magic number: var results = nhGenericDao.FindAllWithNamedQueryStateless("getAllBlogs"' 1' 2);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Components,NHibernateGenericDaoTests,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Components\NHibernateGenericDaoTestCase.cs,GetByNamedQueryWithLimitsStateless,The following statement contains a magic number: Assert.That(results' Has.Length.EqualTo(2));
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Internals,SessionManagerTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Internals\SessionManagerTestCase.cs,NonInterceptedSession,The following statement contains a magic number: o.Value = 9.3f;
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Internals,SessionManagerTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Internals\SessionManagerTestCase.cs,InterceptedSessionByConfiguration,The following statement contains a magic number: o.Value = 9.3f;
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Issues.Facilities102,Fixture,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Issues\Facilities102\Fixture.cs,HasAliassedSessionHasFlushModeSet,The following statement contains a magic number: manager.DefaultFlushMode = (FlushMode) 100;
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Issues.Facilities102,Fixture,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Issues\Facilities102\Fixture.cs,SessionHasFlushModeSet,The following statement contains a magic number: manager.DefaultFlushMode = (FlushMode) 100;
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Issues.Facilities116,Fixture,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Issues\Facilities116\Fixture.cs,Can_deserialize_file_from_the_disk_if_new_enough,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Issues.Facilities116,Fixture,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Issues\Facilities116\Fixture.cs,Can_deserialize_file_from_the_disk_if_one_of_the_dependencies_is_newer,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Transactions,RootService,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\Model\RootService.cs,DoTwoDBOperation_Create,The following statement contains a magic number: orderDao.Create(1.122f);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Transactions,RootService,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\Model\RootService.cs,DoTwoDBOperation_Create_Stateless,The following statement contains a magic number: orderDao.CreateStateless(1.122f);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Transactions,RootService2,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\Model\RootService2.cs,DoTwoDBOperation_Create,The following statement contains a magic number: orderDao.Create(1.122f);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Transactions,RootService2,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\Model\RootService2.cs,DoTwoDBOperation_Create_Stateless,The following statement contains a magic number: orderDao.CreateStateless(1.122f);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,SessionBeingSharedByMultipleTransactionsInSequence,The following statement contains a magic number: Assert.AreEqual(3' blogs.Length);
Magic Number,Castle.Facilities.NHibernateIntegration.Tests.Transactions,TransactionsTestCase,D:\research\architectureSmells\repos\castleproject_Castle.Facilities.NHibernateIntegration-READONLY\src\Castle.Facilities.NHibernateIntegration.Tests\Transactions\TransactionsTestCase.cs,SessionBeingSharedByMultipleTransactionsInSequenceStateless,The following statement contains a magic number: Assert.AreEqual(3' blogs.Length);
