Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ShovelTests,Utils,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\Utils.cs,TestValue,Cyclomatic complexity of the method is 10
Long Statement,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,StringInterpolationError2,The length of the statement  "file 'test.sho' line 4: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^".TrimCarriageReturn()' ex.Message.TrimCarriageReturn()); " is 149.
Magic Number,ShovelTests,TokenizerTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\TokenizerTests.cs,SimpleTest,The following statement contains a magic number: Assert.AreEqual (5' tokenizer.Tokens.Count);
Magic Number,ShovelTests,TokenizerTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\TokenizerTests.cs,TestUnknownCharacter,The following statement contains a magic number: Utils.ExpectException<ShovelException> (() => {                 Assert.IsNotNull (new Shovel.Compiler.Tokenizer (source).Tokens);             }'             (ex) => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Unexpected character '`'. file 'test.sho' line 1: var a = ` file 'test.sho' line 1:         ^"' ex.Message);                 Assert.AreEqual ("test.sho"' ex.FileName);                 Assert.AreEqual (false' ex.AtEof);                 Assert.AreEqual (1' ex.Line);                 Assert.AreEqual (9' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorMessageUnexpectedToken,The following statement contains a magic number: ParserErrorMessageHelper (@" b(]"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Unexpected token ']'. file 'test.sho' line 2: b(] file 'test.sho' line 2:   ^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (3' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorMessageUnexpectedToken,The following statement contains a magic number: ParserErrorMessageHelper (@" b(]"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Unexpected token ']'. file 'test.sho' line 2: b(] file 'test.sho' line 2:   ^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (3' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorMessageExpectedIdentifier,The following statement contains a magic number: ParserErrorMessageHelper (@" var a = fn [x] 1"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Expected a identifier' but got '['. file 'test.sho' line 2: var a = fn [x] 1 file 'test.sho' line 2:            ^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (12' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorMessageExpectedIdentifier,The following statement contains a magic number: ParserErrorMessageHelper (@" var a = fn [x] 1"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Expected a identifier' but got '['. file 'test.sho' line 2: var a = fn [x] 1 file 'test.sho' line 2:            ^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (12' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorMessageExpectedIdentifier,The following statement contains a magic number: ParserErrorMessageHelper (@" var fn = 1"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Expected a identifier' but got 'fn'. file 'test.sho' line 2: var fn = 1 file 'test.sho' line 2:     ^^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (5' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorMessageExpectedIdentifier,The following statement contains a magic number: ParserErrorMessageHelper (@" var fn = 1"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Expected a identifier' but got 'fn'. file 'test.sho' line 2: var fn = 1 file 'test.sho' line 2:     ^^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (5' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorRequiredPrimitive,The following statement contains a magic number: ParserErrorMessageHelper (@" var slice = 1"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Name 'slice' is reserved for a primitive. file 'test.sho' line 2: var slice = 1 file 'test.sho' line 2:     ^^^^^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (5' ex.Column);             }             );
Magic Number,ShovelTests,ParserTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\ParserTests.cs,ParserErrorRequiredPrimitive,The following statement contains a magic number: ParserErrorMessageHelper (@" var slice = 1"'             ex => {                 Assert.IsNotNull (ex);                 Assert.AreEqual (@"Name 'slice' is reserved for a primitive. file 'test.sho' line 2: var slice = 1 file 'test.sho' line 2:     ^^^^^"' ex.Message);                 Assert.AreEqual (2' ex.Line);                 Assert.AreEqual (5' ex.Column);             }             );
Magic Number,ShovelTests,CodeGeneratorTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\CodeGeneratorTests.cs,CompileEnvironments,The following statement contains a magic number: Utils.TestValue(source' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,NumericAddition,The following statement contains a magic number: Utils.TestValue ("10 + 2.5"' Shovel.Value.Kinds.Double' 12.5);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,NumericAddition,The following statement contains a magic number: Utils.TestValue ("10 + 2"' Shovel.Value.Kinds.Integer' (long)12);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,NumericAddition,The following statement contains a magic number: Utils.TestValue ("10.5 + 2"' Shovel.Value.Kinds.Double' 12.5);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,NumericAddition,The following statement contains a magic number: Utils.TestValue ("10.5 + 2.5"' Shovel.Value.Kinds.Double' (double)13);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Subtractions,The following statement contains a magic number: Utils.TestValue ("12.5 - 8"' Shovel.Value.Kinds.Double' 4.5);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Subtractions,The following statement contains a magic number: Utils.TestValue ("12 - 8"' Shovel.Value.Kinds.Integer' (long)4);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Negations,The following statement contains a magic number: Utils.TestValue ("- 8"' Shovel.Value.Kinds.Integer' (long)-8);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Negations,The following statement contains a magic number: Utils.TestValue ("- 8.6"' Shovel.Value.Kinds.Double' -8.6);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Multiplications,The following statement contains a magic number: Utils.TestValue ("11 * 11.1"' Shovel.Value.Kinds.Double' 122.1);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Multiplications,The following statement contains a magic number: Utils.TestValue ("11 * 11"' Shovel.Value.Kinds.Integer' (long)121);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Divisions,The following statement contains a magic number: Utils.TestValue ("22 / 7.0"' Shovel.Value.Kinds.Double' 3.1428571428571428);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,ShiftLeft,The following statement contains a magic number: Utils.TestValue ("10 << 2"' Shovel.Value.Kinds.Integer' (long)40);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,ShiftRight,The following statement contains a magic number: Utils.TestValue ("10 >> 2"' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Power,The following statement contains a magic number: Utils.TestValue ("pow(10' 3.0)"' Shovel.Value.Kinds.Double' 1000.0);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Power,The following statement contains a magic number: Utils.TestValue ("pow(10' 4)"' Shovel.Value.Kinds.Integer' (long)10000);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Power,The following statement contains a magic number: Utils.TestValue ("pow(10' 3)"' Shovel.Value.Kinds.Integer' (long)1000);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Power,The following statement contains a magic number: Utils.TestValue ("pow(10' 2)"' Shovel.Value.Kinds.Integer' (long)100);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Power,The following statement contains a magic number: Utils.TestValue ("pow(10' 1)"' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Floor,The following statement contains a magic number: Utils.TestValue ("floor(10.34)"' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Floor,The following statement contains a magic number: Utils.TestValue ("floor(10)"' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseAnd,The following statement contains a magic number: Utils.TestValue ("15 & 3"' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseAnd,The following statement contains a magic number: Utils.TestValue ("255 & 37"' Shovel.Value.Kinds.Integer' (long)37);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseOr,The following statement contains a magic number: Utils.TestValue ("15 | 3"' Shovel.Value.Kinds.Integer' (long)15);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseOr,The following statement contains a magic number: Utils.TestValue ("15 | 3"' Shovel.Value.Kinds.Integer' (long)15);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseOr,The following statement contains a magic number: Utils.TestValue ("255 | 37"' Shovel.Value.Kinds.Integer' (long)255);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseOr,The following statement contains a magic number: Utils.TestValue ("12 | 10"' Shovel.Value.Kinds.Integer' (long)14);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseXor,The following statement contains a magic number: Utils.TestValue ("10 ^ 2"' Shovel.Value.Kinds.Integer' (long)8);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,BitwiseXor,The following statement contains a magic number: Utils.TestValue ("8 ^ 2"' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,HashConstructor,The following statement contains a magic number: Assert.AreEqual(2' result.Hash.Value.Keys.Count);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,HashConstructor,The following statement contains a magic number: Assert.AreEqual(2' result.Hash.Value[Shovel.Value.Make("b")].Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Keys,The following statement contains a magic number: Assert.AreEqual (2' result.Array.Value.Count);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Is123,The following statement contains a magic number: Assert.AreEqual(3' result.Array.Value.Count);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Is123,The following statement contains a magic number: Assert.AreEqual(2' result.Array.Value[1].Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Is123,The following statement contains a magic number: Assert.AreEqual(3' result.Array.Value[2].Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Is123,The following statement contains a magic number: Assert.AreEqual(3' result.Array.Value[2].Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,SizedArrayConstructor,The following statement contains a magic number: Assert.AreEqual(3' result.Array.Value.Count);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,SizedArrayConstructor,The following statement contains a magic number: Assert.IsTrue(result.Array.Value[2].Kind == Shovel.Value.Kinds.Null);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,VectorPop,The following statement contains a magic number: Utils.TestValue ("var a = array(1' 2' 3' 4) pop(a)"' Shovel.Value.Kinds.Integer' (long)4);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,ArrayGet,The following statement contains a magic number: Utils.TestValue ("var a = array(1' 2' 3' 4) a[2]"' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,HashGet,The following statement contains a magic number: Utils.TestValue ("var h = hash('a'' 1' 'b'' 2) h['b']"' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,HashDotGet,The following statement contains a magic number: Utils.TestValue ("var h = hash('a'' 1' 'b'' 2) h.b"' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,HashSet,The following statement contains a magic number: Utils.TestValue (                 "var h = hash('a'' 1' 'b'' 2) h['b'] = 3 h['b']"'                  Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,GetLength,The following statement contains a magic number: Utils.TestValue ("var a = array('a'' 1' 'b'' 2) length(a)"' Shovel.Value.Kinds.Integer' (long)4);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,GetLength,The following statement contains a magic number: Utils.TestValue ("length('test')"' Shovel.Value.Kinds.Integer' (long)4);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,GetSlice,The following statement contains a magic number: Assert.AreEqual(2' result.Array.Value[0].Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,GetSlice,The following statement contains a magic number: Assert.AreEqual(2' result.Array.Value.Count);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,GetSlice,The following statement contains a magic number: Assert.AreEqual(2' result.Array.Value[1].Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: var decodedDate = new DateTime (1970' 1' 1) + TimeSpan.FromSeconds (result.Integer.Value);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: Assert.AreEqual (decodedDate' new DateTime (2012' 11' 15' 12' 18' 37));
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: Assert.AreEqual (decodedDate' new DateTime (2012' 11' 15' 12' 18' 37));
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: Assert.AreEqual (decodedDate' new DateTime (2012' 11' 15' 12' 18' 37));
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: Assert.AreEqual (decodedDate' new DateTime (2012' 11' 15' 12' 18' 37));
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: Assert.AreEqual (decodedDate' new DateTime (2012' 11' 15' 12' 18' 37));
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,EncodeTime,The following statement contains a magic number: Assert.AreEqual (decodedDate' new DateTime (2012' 11' 15' 12' 18' 37));
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,Panic,The following statement contains a magic number: Utils.ExpectException<Shovel.Exceptions.ShovelException> (() => {                 Shovel.Api.RunVm (bytecode' sources);             }'             shex => {                 Assert.IsNotNull (shex);                 Assert.AreEqual ("test"' shex.Message.Substring (0' 4));             }             );
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,ParseInt,The following statement contains a magic number: Utils.TestValue ("parseInt('10')"' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,RequiredPrimitivesTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\RequiredPrimitivesTests.cs,ParseFloat,The following statement contains a magic number: Utils.TestValue ("parseFloat('10.5')"' Shovel.Value.Kinds.Double' 10.5);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,Context1,The following statement contains a magic number: Assert.AreEqual (2' result.Hash.Value.Keys.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,Context2,The following statement contains a magic number: Assert.AreEqual(2' result.Hash.Value.Keys.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,Factorial,The following statement contains a magic number: Utils.TestValue (Utils.FactorialOfTenProgram ()' Shovel.Value.Kinds.Integer' (long)3628800);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,Fibonacci,The following statement contains a magic number: Utils.TestValue (Utils.FibonacciOfTenProgram ()' Shovel.Value.Kinds.Integer' (long)89);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(5' result.Array.Value.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(2' result.Array.Value[1].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(3' result.Array.Value[2].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(3' result.Array.Value[2].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(4' result.Array.Value[3].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(4' result.Array.Value[3].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(5' result.Array.Value[4].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,QuickSort,The following statement contains a magic number: Assert.AreEqual(5' result.Array.Value[4].Integer.Value);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,NonLocalReturn,The following statement contains a magic number: Utils.TestValue (@" var h = fn x x + 2 var g = fn x h(x) + 2 var f = fn x block 'f' g(x) + 2 f(1) "' Shovel.Value.Kinds.Integer' (long)7);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,NonLocalReturn,The following statement contains a magic number: Utils.TestValue (@" var h = fn x return 'f' 10 var g = fn x h(x) + 2 var f = fn x block 'f' g(x) + 2 f(1) "' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,NonLocalReturn,The following statement contains a magic number: Utils.TestValue (@" var b = fn () return 'a' null var a = fn () {     block 'a' b()     10 } a() "' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ManyArgs3,The following statement contains a magic number: Utils.TestValue (@" var g = fn (a' b' c) (a - b) * c var f = fn (a' b' c) g(a' b' c) + 1 f(1' 2' 3) "' Shovel.Value.Kinds.Integer' (long)-2);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ManyArgs4,The following statement contains a magic number: Utils.TestValue (@" var g = fn (a' b' c' d) (a - b) * (c - d) var f = fn (a' b' c' d) g(a' b' c' d) + 1 f(1' 2' 3' 5) "' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,UserDefinedPrimitives,The following statement contains a magic number: Assert.AreEqual (3' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,UserDefinedPrimitives,The following statement contains a magic number: Assert.AreEqual ("3"' log [2]);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeSimpleObjects,The following statement contains a magic number: Assert.AreEqual (2' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeWithReturnAddressOnStack,The following statement contains a magic number: Assert.AreEqual (2' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeWithArray,The following statement contains a magic number: Assert.AreEqual (4' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeWithArray,The following statement contains a magic number: Assert.AreEqual ("3"' log [2]);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeWithArray,The following statement contains a magic number: Assert.AreEqual ("4"' log [3]);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeWithStruct,The following statement contains a magic number: Assert.AreEqual (2' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,SerializeWithHash,The following statement contains a magic number: Assert.AreEqual (2' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,NonLocalReturnAndCachedFrames,The following statement contains a magic number: Utils.TestValue (@" var g = fn (x) if x == 3 return 'b' 10 else x var f = fn (x) g(x) + 3 block 'b' f(2) + f(3) "' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,CellsQuota,The following statement contains a magic number: Utils.ExpectException<Shovel.Exceptions.ShovelCellQuotaExceededException> (() => {                 Shovel.Api.RunVm (bytecode' sources' usedCellsQuota: 30);             }'             (ex) => {                 Assert.IsNotNull (ex);             }             );
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ExecutedTicksQuota,The following statement contains a magic number: Utils.ExpectException<Shovel.Exceptions.ShovelTicksQuotaExceededException> (() => {                 Shovel.Api.RunVm (bytecode' sources' totalTicksQuota: 20);             }'             (ex) => {                 Assert.IsNotNull (ex);             }             );
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,TicksUntilNextNapQuota,The following statement contains a magic number: var vm = Shovel.Api.RunVm (bytecode' sources' ticksUntilNextNapQuota: 20);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,TicksUntilNextNapQuota,The following statement contains a magic number: Shovel.Api.RunVm (vm' sources' ticksUntilNextNapQuota: 10);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,TicksUntilNextNapQuota,The following statement contains a magic number: Shovel.Api.RunVm (vm' sources' ticksUntilNextNapQuota: 20);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,MultipleGrefs,The following statement contains a magic number: Utils.TestValue ("var a = array(array(array(3))) a[0][0][0]"' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,MultilineComments,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)6);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,WeaveChain,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)15);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,WeaveChainNest,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)15);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ReplacementWithoutWeave,The following statement contains a magic number: Utils.ExpectException<ShovelException>(() =>              {                  Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)6);              }' (ex) =>              {                  Assert.IsNotNull(ex);                  Assert.AreEqual(@"'$' without '->'.  file 'test.sho' line 2: $  file 'test.sho' line 2: ^".TrimCarriageReturn()' ex.Message.TrimCarriageReturn());                  Assert.AreEqual("test.sho"' ex.FileName);              });
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,Apply,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ApplyPrimitive,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)6);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ApplyArity,The following statement contains a magic number: Utils.ExpectException<ShovelException>(() => {                   Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)6);              }' (ex) => {                  Assert.IsNotNull(ex);                  Assert.AreEqual(@"The first argument of 'apply'' a function of 3 arguments' was called with 2 arguments.    Current stack trace:  file 'test.sho' line 4: apply(f' args)  file 'test.sho' line 4: ^^^^^    Current environment:    Frame starts at:  file 'test.sho' line 2: var f = fn (x' y' z) x + y + z  file 'test.sho' line 2: ^  Frame variables are:  f = [...callable...]  args = array(1' 2)    ".TrimCarriageReturn()' ex.Message.TrimCarriageReturn());                  Assert.AreEqual("test.sho"' ex.FileName);              });
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ApplyCurry,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)8);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,ApplyTailCall,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,CollectArguments,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)8);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,CollectArgumentsTailCall,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,IndirectGetArray,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)-101);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,IndirectSetArray,The following statement contains a magic number: Utils.TestValue(program' Shovel.Value.Kinds.Integer' (long)1001);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,IndirectHashGetSetAndSerialization,The following statement contains a magic number: Assert.AreEqual(2' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,IndirectArrayGetSetAndSerialization,The following statement contains a magic number: Assert.AreEqual(3' log.Count);
Magic Number,ShovelTests,VmTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\VmTests.cs,IndirectArrayGetSetAndSerialization,The following statement contains a magic number: Assert.AreEqual("64"' log[2]);
Magic Number,ShovelTests,BytecodeSerializerTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\BytecodeSerializerTests.cs,ConstDouble,The following statement contains a magic number: TestBytecodeSerialization (  				"1.4"' obj => obj.Kind == Shovel.Value.Kinds.Double && 1.4 == obj.Double.Value);
Magic Number,ShovelTests,BytecodeSerializerTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\BytecodeSerializerTests.cs,Factorial,The following statement contains a magic number: TestBytecodeSerialization (  				Utils.FactorialOfTenProgram ()'   				obj => obj.Kind == Shovel.Value.Kinds.Integer && (long)3628800 == obj.Integer.Value);
Magic Number,ShovelTests,BytecodeSerializerTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\BytecodeSerializerTests.cs,Fibonacci,The following statement contains a magic number: TestBytecodeSerialization (  				Utils.FibonacciOfTenProgram ()'   				obj => obj.Kind == Shovel.Value.Kinds.Integer && (long)89 == obj.Integer.Value);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,StructGetters,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var p1 = make(point' 1' 2)  p1.y  "' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,StructSetters,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var p1 = make(point' 1' 2)  p1.x = p1.x + 3  p1.x  "' Shovel.Value.Kinds.Integer' (long)4);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,StructSetters,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var p1 = make(point' 1' 2)  p1.x = p1.x + 3  p1.y  "' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,StructsToHashes,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var h = structToHash(make(point' 1' 2))  h.y  "' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,HashesToStructs,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var p1 = hashToStruct(point' hash('x'' 10' 'y'' 20' 'z'' 30))  p1.x  "' Shovel.Value.Kinds.Integer' (long)10);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,HashesToStructs,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var p1 = hashToStruct(point' hash('x'' 10' 'y'' 20' 'z'' 30))  p1.y  "' Shovel.Value.Kinds.Integer' (long)20);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,StructOptimizations,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var mkpt = fn (x' y) {      var result = make(point)      result.x = x      result.y = y      result.x + result.y  }  mkpt(1' 2)  // The code in mkpt should use optimizations on the second call.  mkpt(1' 2)  "' Shovel.Value.Kinds.Integer' (long)3);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,StructOptimizations,The following statement contains a magic number: Utils.TestValue (@"  var point = defstruct(array('x'' 'y'))  var point2 = defstruct(array('y'' 'x'))  var getX = fn pt pt.x  getX(make(point' 1' 2))  // The code in mkpt should use optimizations on the second call'  // but notice that we use a different structure and invalidate  // the cache.  getX(make(point2' 1' 2))  "' Shovel.Value.Kinds.Integer' (long)2);
Magic Number,ShovelTests,StructTests,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\StructTests.cs,CountingStructs,The following statement contains a magic number: Assert.AreEqual(29' Shovel.Api.VmUsedCells(vm));
Missing Default,ShovelTests,Utils,D:\research\architectureSmells\repos\mbrezu_Shovel\csharp\NShovel\ShovelTests\Utils.cs,TestValue,The following switch statement is missing a default case: switch (expectedResultType) {             case Shovel.Value.Kinds.Null:                 Assert.AreEqual (Shovel.Value.Kinds.Null' result.Kind);                 break;             case Shovel.Value.Kinds.Integer:                 Assert.AreEqual ((long)expectedResult' result.Integer.Value);                 break;             case Shovel.Value.Kinds.String:                 Assert.AreEqual ((string)expectedResult' result.String.Value);                 break;             case Shovel.Value.Kinds.Double:                 Assert.AreEqual ((double)expectedResult' result.Double.Value);                 break;             case Shovel.Value.Kinds.Bool:                 Assert.AreEqual ((bool)expectedResult' result.Bool.Value);                 break;             case Shovel.Value.Kinds.Array:                 Assert.Fail();                 break;             case Shovel.Value.Kinds.Hash:                 Assert.Fail();                 break;             case Shovel.Value.Kinds.Callable:                 Assert.Fail();                 break;             case Shovel.Value.Kinds.ReturnAddress:                 Assert.Fail();                 break;             case Shovel.Value.Kinds.NamedBlock:                 Assert.Fail();                 break;             }
