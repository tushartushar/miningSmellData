Implementation smell,Namespace,Class,File,Method,Description
Long Method,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The method has 106 lines of code.
Complex Method,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,Cyclomatic complexity of the method is 43
Complex Method,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,Cyclomatic complexity of the method is 25
Complex Method,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,Cyclomatic complexity of the method is 14
Long Statement,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The length of the statement  "			// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one) " is 123.
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: while (text.Contains ("[")) {  	string left = text.LeftOf ('[');  	string token = text.Between ('['' ']');  	string tokenValue = "";  	DateTime now = DateTime.Now;  	// token is stripped of optional parameters that follow after the ':'  	switch (token.ToLower ().LeftOf (':')) {  	case "dayperiod":  		if (now.Hour < 12) {  			tokenValue = "Morning";  		} else if (now.Hour < 18) {  			tokenValue = "Afternoon";  		} else {  			tokenValue = "Evening";  		}  		break;  	case "dayofweek":  		tokenValue = now.DayOfWeek.ToString ();  		break;  	case "month":  		tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  		break;  	case "dateofmonth":  		tokenValue = now.Day.ToString ();  		break;  	case "hour12":  		int h = now.Hour;  		if (h == 0) {  			// midnight to 0:59 is' for example "oh thirty" for 0:30  			tokenValue = "oh";  		} else if (h == 12) {  			// specific case for noon to 12:59.  			tokenValue = "twelve";  		} else {  			// Otherwise' back to 1-11.  			tokenValue = NumWordsWrapper (h % 12);  		}  		break;  	case "minute":  		if (now.Minute > 0) {  			tokenValue = NumWordsWrapper (now.Minute);  			// No minutes reported at all if exactly 0' example: nine AM for 9:00  			if (now.Minute < 10) {  				// oh-five' so we output' for example: "nine oh five" for 9:05.  				tokenValue = "oh " + tokenValue;  			}  		}  		break;  	case "ampm":  		tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  		break;  	case "feed": {  		// left of '''  		string url = token.RightOf (':').LeftOf (''');  		int numItems = Int32.MaxValue;  		if (token.Contains ("'")) {  			numItems = Convert.ToInt32 (token.RightOf ('''));  			CreateCarrier ("RSSFeedUrl"' signal => {  				signal.FeedUrl.Value = url;  				signal.MaxItems = numItems;  				signal.Tag = groupGuid.ToString ();  			});  		}  		break;  	}  	case "group":  		// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  		// is completed.  		inGroup = true;  		groupGuid = Guid.NewGuid ();  		sbGroup = new StringBuilder ();  		break;  	case "/group":  		left = left.Trim ();  		// Remove any CRLF's.  TODO: Kludgy!    		inGroup = false;  		groups [groupGuid.ToString ()] = sbGroup;  		break;  	}  	if (inGroup) {  		sbGroup.Append (left);  		sbGroup.Append (tokenValue);  	} else {  		sb.Append (left);  		sb.Append (tokenValue);  	}  	text = text.RightOf ("]");  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: while (text.Contains ("[")) {  	string left = text.LeftOf ('[');  	string token = text.Between ('['' ']');  	string tokenValue = "";  	DateTime now = DateTime.Now;  	// token is stripped of optional parameters that follow after the ':'  	switch (token.ToLower ().LeftOf (':')) {  	case "dayperiod":  		if (now.Hour < 12) {  			tokenValue = "Morning";  		} else if (now.Hour < 18) {  			tokenValue = "Afternoon";  		} else {  			tokenValue = "Evening";  		}  		break;  	case "dayofweek":  		tokenValue = now.DayOfWeek.ToString ();  		break;  	case "month":  		tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  		break;  	case "dateofmonth":  		tokenValue = now.Day.ToString ();  		break;  	case "hour12":  		int h = now.Hour;  		if (h == 0) {  			// midnight to 0:59 is' for example "oh thirty" for 0:30  			tokenValue = "oh";  		} else if (h == 12) {  			// specific case for noon to 12:59.  			tokenValue = "twelve";  		} else {  			// Otherwise' back to 1-11.  			tokenValue = NumWordsWrapper (h % 12);  		}  		break;  	case "minute":  		if (now.Minute > 0) {  			tokenValue = NumWordsWrapper (now.Minute);  			// No minutes reported at all if exactly 0' example: nine AM for 9:00  			if (now.Minute < 10) {  				// oh-five' so we output' for example: "nine oh five" for 9:05.  				tokenValue = "oh " + tokenValue;  			}  		}  		break;  	case "ampm":  		tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  		break;  	case "feed": {  		// left of '''  		string url = token.RightOf (':').LeftOf (''');  		int numItems = Int32.MaxValue;  		if (token.Contains ("'")) {  			numItems = Convert.ToInt32 (token.RightOf ('''));  			CreateCarrier ("RSSFeedUrl"' signal => {  				signal.FeedUrl.Value = url;  				signal.MaxItems = numItems;  				signal.Tag = groupGuid.ToString ();  			});  		}  		break;  	}  	case "group":  		// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  		// is completed.  		inGroup = true;  		groupGuid = Guid.NewGuid ();  		sbGroup = new StringBuilder ();  		break;  	case "/group":  		left = left.Trim ();  		// Remove any CRLF's.  TODO: Kludgy!    		inGroup = false;  		groups [groupGuid.ToString ()] = sbGroup;  		break;  	}  	if (inGroup) {  		sbGroup.Append (left);  		sbGroup.Append (tokenValue);  	} else {  		sb.Append (left);  		sb.Append (tokenValue);  	}  	text = text.RightOf ("]");  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: while (text.Contains ("[")) {  	string left = text.LeftOf ('[');  	string token = text.Between ('['' ']');  	string tokenValue = "";  	DateTime now = DateTime.Now;  	// token is stripped of optional parameters that follow after the ':'  	switch (token.ToLower ().LeftOf (':')) {  	case "dayperiod":  		if (now.Hour < 12) {  			tokenValue = "Morning";  		} else if (now.Hour < 18) {  			tokenValue = "Afternoon";  		} else {  			tokenValue = "Evening";  		}  		break;  	case "dayofweek":  		tokenValue = now.DayOfWeek.ToString ();  		break;  	case "month":  		tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  		break;  	case "dateofmonth":  		tokenValue = now.Day.ToString ();  		break;  	case "hour12":  		int h = now.Hour;  		if (h == 0) {  			// midnight to 0:59 is' for example "oh thirty" for 0:30  			tokenValue = "oh";  		} else if (h == 12) {  			// specific case for noon to 12:59.  			tokenValue = "twelve";  		} else {  			// Otherwise' back to 1-11.  			tokenValue = NumWordsWrapper (h % 12);  		}  		break;  	case "minute":  		if (now.Minute > 0) {  			tokenValue = NumWordsWrapper (now.Minute);  			// No minutes reported at all if exactly 0' example: nine AM for 9:00  			if (now.Minute < 10) {  				// oh-five' so we output' for example: "nine oh five" for 9:05.  				tokenValue = "oh " + tokenValue;  			}  		}  		break;  	case "ampm":  		tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  		break;  	case "feed": {  		// left of '''  		string url = token.RightOf (':').LeftOf (''');  		int numItems = Int32.MaxValue;  		if (token.Contains ("'")) {  			numItems = Convert.ToInt32 (token.RightOf ('''));  			CreateCarrier ("RSSFeedUrl"' signal => {  				signal.FeedUrl.Value = url;  				signal.MaxItems = numItems;  				signal.Tag = groupGuid.ToString ();  			});  		}  		break;  	}  	case "group":  		// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  		// is completed.  		inGroup = true;  		groupGuid = Guid.NewGuid ();  		sbGroup = new StringBuilder ();  		break;  	case "/group":  		left = left.Trim ();  		// Remove any CRLF's.  TODO: Kludgy!    		inGroup = false;  		groups [groupGuid.ToString ()] = sbGroup;  		break;  	}  	if (inGroup) {  		sbGroup.Append (left);  		sbGroup.Append (tokenValue);  	} else {  		sb.Append (left);  		sb.Append (tokenValue);  	}  	text = text.RightOf ("]");  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: while (text.Contains ("[")) {  	string left = text.LeftOf ('[');  	string token = text.Between ('['' ']');  	string tokenValue = "";  	DateTime now = DateTime.Now;  	// token is stripped of optional parameters that follow after the ':'  	switch (token.ToLower ().LeftOf (':')) {  	case "dayperiod":  		if (now.Hour < 12) {  			tokenValue = "Morning";  		} else if (now.Hour < 18) {  			tokenValue = "Afternoon";  		} else {  			tokenValue = "Evening";  		}  		break;  	case "dayofweek":  		tokenValue = now.DayOfWeek.ToString ();  		break;  	case "month":  		tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  		break;  	case "dateofmonth":  		tokenValue = now.Day.ToString ();  		break;  	case "hour12":  		int h = now.Hour;  		if (h == 0) {  			// midnight to 0:59 is' for example "oh thirty" for 0:30  			tokenValue = "oh";  		} else if (h == 12) {  			// specific case for noon to 12:59.  			tokenValue = "twelve";  		} else {  			// Otherwise' back to 1-11.  			tokenValue = NumWordsWrapper (h % 12);  		}  		break;  	case "minute":  		if (now.Minute > 0) {  			tokenValue = NumWordsWrapper (now.Minute);  			// No minutes reported at all if exactly 0' example: nine AM for 9:00  			if (now.Minute < 10) {  				// oh-five' so we output' for example: "nine oh five" for 9:05.  				tokenValue = "oh " + tokenValue;  			}  		}  		break;  	case "ampm":  		tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  		break;  	case "feed": {  		// left of '''  		string url = token.RightOf (':').LeftOf (''');  		int numItems = Int32.MaxValue;  		if (token.Contains ("'")) {  			numItems = Convert.ToInt32 (token.RightOf ('''));  			CreateCarrier ("RSSFeedUrl"' signal => {  				signal.FeedUrl.Value = url;  				signal.MaxItems = numItems;  				signal.Tag = groupGuid.ToString ();  			});  		}  		break;  	}  	case "group":  		// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  		// is completed.  		inGroup = true;  		groupGuid = Guid.NewGuid ();  		sbGroup = new StringBuilder ();  		break;  	case "/group":  		left = left.Trim ();  		// Remove any CRLF's.  TODO: Kludgy!    		inGroup = false;  		groups [groupGuid.ToString ()] = sbGroup;  		break;  	}  	if (inGroup) {  		sbGroup.Append (left);  		sbGroup.Append (tokenValue);  	} else {  		sb.Append (left);  		sb.Append (tokenValue);  	}  	text = text.RightOf ("]");  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: while (text.Contains ("[")) {  	string left = text.LeftOf ('[');  	string token = text.Between ('['' ']');  	string tokenValue = "";  	DateTime now = DateTime.Now;  	// token is stripped of optional parameters that follow after the ':'  	switch (token.ToLower ().LeftOf (':')) {  	case "dayperiod":  		if (now.Hour < 12) {  			tokenValue = "Morning";  		} else if (now.Hour < 18) {  			tokenValue = "Afternoon";  		} else {  			tokenValue = "Evening";  		}  		break;  	case "dayofweek":  		tokenValue = now.DayOfWeek.ToString ();  		break;  	case "month":  		tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  		break;  	case "dateofmonth":  		tokenValue = now.Day.ToString ();  		break;  	case "hour12":  		int h = now.Hour;  		if (h == 0) {  			// midnight to 0:59 is' for example "oh thirty" for 0:30  			tokenValue = "oh";  		} else if (h == 12) {  			// specific case for noon to 12:59.  			tokenValue = "twelve";  		} else {  			// Otherwise' back to 1-11.  			tokenValue = NumWordsWrapper (h % 12);  		}  		break;  	case "minute":  		if (now.Minute > 0) {  			tokenValue = NumWordsWrapper (now.Minute);  			// No minutes reported at all if exactly 0' example: nine AM for 9:00  			if (now.Minute < 10) {  				// oh-five' so we output' for example: "nine oh five" for 9:05.  				tokenValue = "oh " + tokenValue;  			}  		}  		break;  	case "ampm":  		tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  		break;  	case "feed": {  		// left of '''  		string url = token.RightOf (':').LeftOf (''');  		int numItems = Int32.MaxValue;  		if (token.Contains ("'")) {  			numItems = Convert.ToInt32 (token.RightOf ('''));  			CreateCarrier ("RSSFeedUrl"' signal => {  				signal.FeedUrl.Value = url;  				signal.MaxItems = numItems;  				signal.Tag = groupGuid.ToString ();  			});  		}  		break;  	}  	case "group":  		// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  		// is completed.  		inGroup = true;  		groupGuid = Guid.NewGuid ();  		sbGroup = new StringBuilder ();  		break;  	case "/group":  		left = left.Trim ();  		// Remove any CRLF's.  TODO: Kludgy!    		inGroup = false;  		groups [groupGuid.ToString ()] = sbGroup;  		break;  	}  	if (inGroup) {  		sbGroup.Append (left);  		sbGroup.Append (tokenValue);  	} else {  		sb.Append (left);  		sb.Append (tokenValue);  	}  	text = text.RightOf ("]");  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: while (text.Contains ("[")) {  	string left = text.LeftOf ('[');  	string token = text.Between ('['' ']');  	string tokenValue = "";  	DateTime now = DateTime.Now;  	// token is stripped of optional parameters that follow after the ':'  	switch (token.ToLower ().LeftOf (':')) {  	case "dayperiod":  		if (now.Hour < 12) {  			tokenValue = "Morning";  		} else if (now.Hour < 18) {  			tokenValue = "Afternoon";  		} else {  			tokenValue = "Evening";  		}  		break;  	case "dayofweek":  		tokenValue = now.DayOfWeek.ToString ();  		break;  	case "month":  		tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  		break;  	case "dateofmonth":  		tokenValue = now.Day.ToString ();  		break;  	case "hour12":  		int h = now.Hour;  		if (h == 0) {  			// midnight to 0:59 is' for example "oh thirty" for 0:30  			tokenValue = "oh";  		} else if (h == 12) {  			// specific case for noon to 12:59.  			tokenValue = "twelve";  		} else {  			// Otherwise' back to 1-11.  			tokenValue = NumWordsWrapper (h % 12);  		}  		break;  	case "minute":  		if (now.Minute > 0) {  			tokenValue = NumWordsWrapper (now.Minute);  			// No minutes reported at all if exactly 0' example: nine AM for 9:00  			if (now.Minute < 10) {  				// oh-five' so we output' for example: "nine oh five" for 9:05.  				tokenValue = "oh " + tokenValue;  			}  		}  		break;  	case "ampm":  		tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  		break;  	case "feed": {  		// left of '''  		string url = token.RightOf (':').LeftOf (''');  		int numItems = Int32.MaxValue;  		if (token.Contains ("'")) {  			numItems = Convert.ToInt32 (token.RightOf ('''));  			CreateCarrier ("RSSFeedUrl"' signal => {  				signal.FeedUrl.Value = url;  				signal.MaxItems = numItems;  				signal.Tag = groupGuid.ToString ();  			});  		}  		break;  	}  	case "group":  		// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  		// is completed.  		inGroup = true;  		groupGuid = Guid.NewGuid ();  		sbGroup = new StringBuilder ();  		break;  	case "/group":  		left = left.Trim ();  		// Remove any CRLF's.  TODO: Kludgy!    		inGroup = false;  		groups [groupGuid.ToString ()] = sbGroup;  		break;  	}  	if (inGroup) {  		sbGroup.Append (left);  		sbGroup.Append (tokenValue);  	} else {  		sb.Append (left);  		sb.Append (tokenValue);  	}  	text = text.RightOf ("]");  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (now.Hour < 12) {  	tokenValue = "Morning";  } else if (now.Hour < 18) {  	tokenValue = "Afternoon";  } else {  	tokenValue = "Evening";  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (now.Hour < 12) {  	tokenValue = "Morning";  } else if (now.Hour < 18) {  	tokenValue = "Afternoon";  } else {  	tokenValue = "Evening";  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (now.Hour < 18) {  	tokenValue = "Afternoon";  } else {  	tokenValue = "Evening";  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (h == 0) {  	// midnight to 0:59 is' for example "oh thirty" for 0:30  	tokenValue = "oh";  } else if (h == 12) {  	// specific case for noon to 12:59.  	tokenValue = "twelve";  } else {  	// Otherwise' back to 1-11.  	tokenValue = NumWordsWrapper (h % 12);  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (h == 0) {  	// midnight to 0:59 is' for example "oh thirty" for 0:30  	tokenValue = "oh";  } else if (h == 12) {  	// specific case for noon to 12:59.  	tokenValue = "twelve";  } else {  	// Otherwise' back to 1-11.  	tokenValue = NumWordsWrapper (h % 12);  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (h == 12) {  	// specific case for noon to 12:59.  	tokenValue = "twelve";  } else {  	// Otherwise' back to 1-11.  	tokenValue = NumWordsWrapper (h % 12);  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (h == 12) {  	// specific case for noon to 12:59.  	tokenValue = "twelve";  } else {  	// Otherwise' back to 1-11.  	tokenValue = NumWordsWrapper (h % 12);  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: tokenValue = NumWordsWrapper (h % 12);  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (now.Minute > 0) {  	tokenValue = NumWordsWrapper (now.Minute);  	// No minutes reported at all if exactly 0' example: nine AM for 9:00  	if (now.Minute < 10) {  		// oh-five' so we output' for example: "nine oh five" for 9:05.  		tokenValue = "oh " + tokenValue;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: if (now.Minute < 10) {  	// oh-five' so we output' for example: "nine oh five" for 9:05.  	tokenValue = "oh " + tokenValue;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following statement contains a magic number: tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (splitter.Length == 2) {  	// We have a fractional component.  	decPart = double.Parse (splitter [1]);  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (decPart > 0) {  	if (words != "")  		words += " and ";  	int counter = decPart.ToString ().Length;  	switch (counter) {  	case 1:  		words += NumWords (decPart) + " tenths";  		break;  	case 2:  		words += NumWords (decPart) + " hundredths";  		break;  	case 3:  		words += NumWords (decPart) + " thousandths";  		break;  	case 4:  		words += NumWords (decPart) + " ten-thousandths";  		break;  	case 5:  		words += NumWords (decPart) + " hundred-thousandths";  		break;  	case 6:  		words += NumWords (decPart) + " millionths";  		break;  	case 7:  		words += NumWords (decPart) + " ten-millionths";  		break;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (decPart > 0) {  	if (words != "")  		words += " and ";  	int counter = decPart.ToString ().Length;  	switch (counter) {  	case 1:  		words += NumWords (decPart) + " tenths";  		break;  	case 2:  		words += NumWords (decPart) + " hundredths";  		break;  	case 3:  		words += NumWords (decPart) + " thousandths";  		break;  	case 4:  		words += NumWords (decPart) + " ten-thousandths";  		break;  	case 5:  		words += NumWords (decPart) + " hundred-thousandths";  		break;  	case 6:  		words += NumWords (decPart) + " millionths";  		break;  	case 7:  		words += NumWords (decPart) + " ten-millionths";  		break;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (decPart > 0) {  	if (words != "")  		words += " and ";  	int counter = decPart.ToString ().Length;  	switch (counter) {  	case 1:  		words += NumWords (decPart) + " tenths";  		break;  	case 2:  		words += NumWords (decPart) + " hundredths";  		break;  	case 3:  		words += NumWords (decPart) + " thousandths";  		break;  	case 4:  		words += NumWords (decPart) + " ten-thousandths";  		break;  	case 5:  		words += NumWords (decPart) + " hundred-thousandths";  		break;  	case 6:  		words += NumWords (decPart) + " millionths";  		break;  	case 7:  		words += NumWords (decPart) + " ten-millionths";  		break;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (decPart > 0) {  	if (words != "")  		words += " and ";  	int counter = decPart.ToString ().Length;  	switch (counter) {  	case 1:  		words += NumWords (decPart) + " tenths";  		break;  	case 2:  		words += NumWords (decPart) + " hundredths";  		break;  	case 3:  		words += NumWords (decPart) + " thousandths";  		break;  	case 4:  		words += NumWords (decPart) + " ten-thousandths";  		break;  	case 5:  		words += NumWords (decPart) + " hundred-thousandths";  		break;  	case 6:  		words += NumWords (decPart) + " millionths";  		break;  	case 7:  		words += NumWords (decPart) + " ten-millionths";  		break;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (decPart > 0) {  	if (words != "")  		words += " and ";  	int counter = decPart.ToString ().Length;  	switch (counter) {  	case 1:  		words += NumWords (decPart) + " tenths";  		break;  	case 2:  		words += NumWords (decPart) + " hundredths";  		break;  	case 3:  		words += NumWords (decPart) + " thousandths";  		break;  	case 4:  		words += NumWords (decPart) + " ten-thousandths";  		break;  	case 5:  		words += NumWords (decPart) + " hundred-thousandths";  		break;  	case 6:  		words += NumWords (decPart) + " millionths";  		break;  	case 7:  		words += NumWords (decPart) + " ten-millionths";  		break;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: if (decPart > 0) {  	if (words != "")  		words += " and ";  	int counter = decPart.ToString ().Length;  	switch (counter) {  	case 1:  		words += NumWords (decPart) + " tenths";  		break;  	case 2:  		words += NumWords (decPart) + " hundredths";  		break;  	case 3:  		words += NumWords (decPart) + " thousandths";  		break;  	case 4:  		words += NumWords (decPart) + " ten-thousandths";  		break;  	case 5:  		words += NumWords (decPart) + " hundred-thousandths";  		break;  	case 6:  		words += NumWords (decPart) + " millionths";  		break;  	case 7:  		words += NumWords (decPart) + " ten-millionths";  		break;  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following statement contains a magic number: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: while (power > 3) {  	double pow = Math.Pow (10' power);  	if (n > pow) {  		if (n % Math.Pow (10' power) > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  		} else if (n % pow > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  		}  		n %= pow;  	}  	power -= 3;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: while (power > 3) {  	double pow = Math.Pow (10' power);  	if (n > pow) {  		if (n % Math.Pow (10' power) > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  		} else if (n % pow > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  		}  		n %= pow;  	}  	power -= 3;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: while (power > 3) {  	double pow = Math.Pow (10' power);  	if (n > pow) {  		if (n % Math.Pow (10' power) > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  		} else if (n % pow > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  		}  		n %= pow;  	}  	power -= 3;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: while (power > 3) {  	double pow = Math.Pow (10' power);  	if (n > pow) {  		if (n % Math.Pow (10' power) > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  		} else if (n % pow > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  		}  		n %= pow;  	}  	power -= 3;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: while (power > 3) {  	double pow = Math.Pow (10' power);  	if (n > pow) {  		if (n % Math.Pow (10' power) > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  		} else if (n % pow > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  		}  		n %= pow;  	}  	power -= 3;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: while (power > 3) {  	double pow = Math.Pow (10' power);  	if (n > pow) {  		if (n % Math.Pow (10' power) > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  		} else if (n % pow > 0) {  			words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  		}  		n %= pow;  	}  	power -= 3;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n > pow) {  	if (n % Math.Pow (10' power) > 0) {  		words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  	} else if (n % pow > 0) {  		words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  	}  	n %= pow;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n > pow) {  	if (n % Math.Pow (10' power) > 0) {  		words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  	} else if (n % pow > 0) {  		words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  	}  	n %= pow;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n > pow) {  	if (n % Math.Pow (10' power) > 0) {  		words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  	} else if (n % pow > 0) {  		words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  	}  	n %= pow;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % Math.Pow (10' power) > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  } else if (n % pow > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % Math.Pow (10' power) > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  } else if (n % pow > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % Math.Pow (10' power) > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  } else if (n % pow > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1] + "' ";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % pow > 0) {  	words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += NumWords (Math.Floor (n / pow)) + " " + suffixesArr [(power / 3) - 1];  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: power -= 3;  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n >= 1000) {  	// TODO: Gross.  this should be cleaner.  	if (n % 1000 > 0)  		words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  	else  		words += NumWords (Math.Floor (n / 1000)) + " thousand";  	n %= 1000;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n >= 1000) {  	// TODO: Gross.  this should be cleaner.  	if (n % 1000 > 0)  		words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  	else  		words += NumWords (Math.Floor (n / 1000)) + " thousand";  	n %= 1000;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n >= 1000) {  	// TODO: Gross.  this should be cleaner.  	if (n % 1000 > 0)  		words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  	else  		words += NumWords (Math.Floor (n / 1000)) + " thousand";  	n %= 1000;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n >= 1000) {  	// TODO: Gross.  this should be cleaner.  	if (n % 1000 > 0)  		words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  	else  		words += NumWords (Math.Floor (n / 1000)) + " thousand";  	n %= 1000;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n >= 1000) {  	// TODO: Gross.  this should be cleaner.  	if (n % 1000 > 0)  		words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  	else  		words += NumWords (Math.Floor (n / 1000)) + " thousand";  	n %= 1000;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % 1000 > 0)  	words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  else  	words += NumWords (Math.Floor (n / 1000)) + " thousand";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % 1000 > 0)  	words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  else  	words += NumWords (Math.Floor (n / 1000)) + " thousand";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (n % 1000 > 0)  	words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  else  	words += NumWords (Math.Floor (n / 1000)) + " thousand";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += NumWords (Math.Floor (n / 1000)) + " thousand' ";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += NumWords (Math.Floor (n / 1000)) + " thousand";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: n %= 1000;  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if (0 <= n && n <= 999) {  	if ((int)n / 100 > 0) {  		words += NumWords (Math.Floor (n / 100)) + " hundred";  		n %= 100;  	}  	// TODO: Why no "and" here if we say "five hundred [and] ..."  	if ((int)n / 10 > 1) {  		if (words != "")  			words += " ";  		words += tensArr [(int)n / 10 - 2];  		tens = true;  		n %= 10;  	}  	if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.  	 {  		if (words != "" && tens == false)  			words += " ";  		words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  		n -= Math.Floor (n);  	}  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 100 > 0) {  	words += NumWords (Math.Floor (n / 100)) + " hundred";  	n %= 100;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 100 > 0) {  	words += NumWords (Math.Floor (n / 100)) + " hundred";  	n %= 100;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 100 > 0) {  	words += NumWords (Math.Floor (n / 100)) + " hundred";  	n %= 100;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += NumWords (Math.Floor (n / 100)) + " hundred";  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: n %= 100;  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 10 > 1) {  	if (words != "")  		words += " ";  	words += tensArr [(int)n / 10 - 2];  	tens = true;  	n %= 10;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 10 > 1) {  	if (words != "")  		words += " ";  	words += tensArr [(int)n / 10 - 2];  	tens = true;  	n %= 10;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 10 > 1) {  	if (words != "")  		words += " ";  	words += tensArr [(int)n / 10 - 2];  	tens = true;  	n %= 10;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((int)n / 10 > 1) {  	if (words != "")  		words += " ";  	words += tensArr [(int)n / 10 - 2];  	tens = true;  	n %= 10;  }  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += tensArr [(int)n / 10 - 2];  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: words += tensArr [(int)n / 10 - 2];  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: n %= 10;  
Magic Number,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWords,The following statement contains a magic number: if ((n < 20) && (n > 0))// 20' 30' 40' 50' etc... do not have further components.   {  	if (words != "" && tens == false)  		words += " ";  	words += (tens ? "-" + numbersArr [(int)n - 1] : numbersArr [(int)n - 1]);  	n -= Math.Floor (n);  }  
Missing Default,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,Parse,The following switch statement is missing a default case: switch (token.ToLower ().LeftOf (':')) {  case "dayperiod":  	if (now.Hour < 12) {  		tokenValue = "Morning";  	} else if (now.Hour < 18) {  		tokenValue = "Afternoon";  	} else {  		tokenValue = "Evening";  	}  	break;  case "dayofweek":  	tokenValue = now.DayOfWeek.ToString ();  	break;  case "month":  	tokenValue = now.ToString ("MMMM"' CultureInfo.InvariantCulture);  	break;  case "dateofmonth":  	tokenValue = now.Day.ToString ();  	break;  case "hour12":  	int h = now.Hour;  	if (h == 0) {  		// midnight to 0:59 is' for example "oh thirty" for 0:30  		tokenValue = "oh";  	} else if (h == 12) {  		// specific case for noon to 12:59.  		tokenValue = "twelve";  	} else {  		// Otherwise' back to 1-11.  		tokenValue = NumWordsWrapper (h % 12);  	}  	break;  case "minute":  	if (now.Minute > 0) {  		tokenValue = NumWordsWrapper (now.Minute);  		// No minutes reported at all if exactly 0' example: nine AM for 9:00  		if (now.Minute < 10) {  			// oh-five' so we output' for example: "nine oh five" for 9:05.  			tokenValue = "oh " + tokenValue;  		}  	}  	break;  case "ampm":  	tokenValue = ((now.Hour >= 12) ? "PM" : "AM");  	break;  case "feed": {  	// left of '''  	string url = token.RightOf (':').LeftOf (''');  	int numItems = Int32.MaxValue;  	if (token.Contains ("'")) {  		numItems = Convert.ToInt32 (token.RightOf ('''));  		CreateCarrier ("RSSFeedUrl"' signal => {  			signal.FeedUrl.Value = url;  			signal.MaxItems = numItems;  			signal.Tag = groupGuid.ToString ();  		});  	}  	break;  }  case "group":  	// Everything in this section will be rendered once the request (which we don't know what it is' but there needs to be one)  	// is completed.  	inGroup = true;  	groupGuid = Guid.NewGuid ();  	sbGroup = new StringBuilder ();  	break;  case "/group":  	left = left.Trim ();  	// Remove any CRLF's.  TODO: Kludgy!    	inGroup = false;  	groups [groupGuid.ToString ()] = sbGroup;  	break;  }  
Missing Default,DayGreeterReceptor,DayGreeter,F:\newReposMay17\cliftonm_HOPE\Receptors\Fun Stuff\DayGreeterReceptor\DayGreeter.cs,NumWordsWrapper,The following switch statement is missing a default case: switch (counter) {  case 1:  	words += NumWords (decPart) + " tenths";  	break;  case 2:  	words += NumWords (decPart) + " hundredths";  	break;  case 3:  	words += NumWords (decPart) + " thousandths";  	break;  case 4:  	words += NumWords (decPart) + " ten-thousandths";  	break;  case 5:  	words += NumWords (decPart) + " hundred-thousandths";  	break;  case 6:  	words += NumWords (decPart) + " millionths";  	break;  case 7:  	words += NumWords (decPart) + " ten-millionths";  	break;  }  
