Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Clifton.Receptor.Interfaces,IReceptorSystem,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\Interfaces.cs,CreateCarrier,The method has 5 parameters.
Long Parameter List,Clifton.Receptor.Interfaces,IReceptorSystem,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\Interfaces.cs,CreateCarrierIfReceiver,The method has 5 parameters.
Long Identifier,Clifton.Receptor.Interfaces,BaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\BaseReceptor.cs,AddEmitProtocol,The length of the parameter processInternalSemanticElements is 31.
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: if (form != null) {  	Point loc = new Point (WindowX' WindowY);  	// Only update if user has changed the size from its declarative value.  	if (WindowX != 0 && WindowY != 0) {  		// If the starting coordinate is offscreen on this computer' then put it at (0'0)  		if (!SystemInformation.VirtualScreen.Contains (loc)) {  			loc = new Point (0' 0);  		}  		form.Location = loc;  	}  	// Only update if user has changed the size from its declarative value.  	if (WindowWidth != 0 && WindowHeight != 0) {  		Size sz = new Size (WindowWidth' WindowHeight);  		Size diff = SystemInformation.VirtualScreen.Size - sz;  		// If the the width doesn't fit in the specified dimensions' then use 1/4 of the screen.  		if ((diff.Width < 0) || (diff.Height < 0)) {  			sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  		}  		form.Size = sz;  	}  }  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: if (form != null) {  	Point loc = new Point (WindowX' WindowY);  	// Only update if user has changed the size from its declarative value.  	if (WindowX != 0 && WindowY != 0) {  		// If the starting coordinate is offscreen on this computer' then put it at (0'0)  		if (!SystemInformation.VirtualScreen.Contains (loc)) {  			loc = new Point (0' 0);  		}  		form.Location = loc;  	}  	// Only update if user has changed the size from its declarative value.  	if (WindowWidth != 0 && WindowHeight != 0) {  		Size sz = new Size (WindowWidth' WindowHeight);  		Size diff = SystemInformation.VirtualScreen.Size - sz;  		// If the the width doesn't fit in the specified dimensions' then use 1/4 of the screen.  		if ((diff.Width < 0) || (diff.Height < 0)) {  			sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  		}  		form.Size = sz;  	}  }  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: if (WindowWidth != 0 && WindowHeight != 0) {  	Size sz = new Size (WindowWidth' WindowHeight);  	Size diff = SystemInformation.VirtualScreen.Size - sz;  	// If the the width doesn't fit in the specified dimensions' then use 1/4 of the screen.  	if ((diff.Width < 0) || (diff.Height < 0)) {  		sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  	}  	form.Size = sz;  }  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: if (WindowWidth != 0 && WindowHeight != 0) {  	Size sz = new Size (WindowWidth' WindowHeight);  	Size diff = SystemInformation.VirtualScreen.Size - sz;  	// If the the width doesn't fit in the specified dimensions' then use 1/4 of the screen.  	if ((diff.Width < 0) || (diff.Height < 0)) {  		sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  	}  	form.Size = sz;  }  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: if ((diff.Width < 0) || (diff.Height < 0)) {  	sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  }  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: if ((diff.Width < 0) || (diff.Height < 0)) {  	sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  }  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  
Magic Number,Clifton.Receptor.Interfaces,WindowedBaseReceptor,F:\newReposMay17\cliftonm_HOPE\Clifton.Receptor.Interfaces\WindowedBaseReceptor.cs,UpdateFormLocationAndSize,The following statement contains a magic number: sz = new Size (SystemInformation.VirtualScreen.Width / 4' SystemInformation.VirtualScreen.Height / 4);  
