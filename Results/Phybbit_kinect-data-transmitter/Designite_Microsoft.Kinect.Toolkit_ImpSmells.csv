Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The method has 108 lines of code.
Long Identifier,Microsoft.Kinect.Toolkit,SynchronizationContextIdentifier,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\ContextEventWrapper.cs,,The length of the parameter DispatcherSynchronizationContextName is 36.
Long Identifier,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,,The length of the parameter expandedAllSetNotListeningContent is 33.
Long Identifier,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,,The length of the parameter expandedAllSetListeningContent is 30.
Long Identifier,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,,The length of the parameter expandedNoAvailableSensorsContent is 33.
Long Identifier,Microsoft.Kinect.Toolkit,KinectSensorChooserUIViewModel,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUiViewModel.cs,,The length of the parameter MoreInformationVisibilityPropertyKey is 36.
Long Identifier,Microsoft.Kinect.Toolkit,KinectSensorChooserUIViewModel,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUiViewModel.cs,,The length of the parameter MoreInformationVisibilityProperty is 33.
Long Statement,Microsoft.Kinect.Toolkit,ContextEventWrapper<T>,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\ContextEventWrapper.cs,AddHandler,The length of the statement  "                actualHandlers.Add(new ContextHandlerPair(originalHandler' new SynchronizationContextIdentifier(SynchronizationContext.Current))); " is 130.
Long Statement,Microsoft.Kinect.Toolkit,ContextEventWrapper<T>,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\ContextEventWrapper.cs,RemoveHandler,The length of the statement  "            SynchronizationContextIdentifier currentContextId = new SynchronizationContextIdentifier(SynchronizationContext.Current); " is 121.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooser,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooser.cs,SetSensorAndStatus,The length of the statement  "                callbackLock.LockExit += () => this.kinectChangedContextWrapper.Invoke(this' new KinectChangedEventArgs(oldKinect' newKinect)); " is 127.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,TellMeMoreLinkRequestNavigate,The length of the statement  "                    // Careful - ensure that this NavigateUri comes from a trusted source' as in this sample' before launching a process using it. " is 126.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,TellMeMoreLinkRequestNavigate,The length of the statement  "                    MessageBox.Show(string.Format(CultureInfo.CurrentCulture' Properties.Resources.NoDefaultBrowserAvailable' hyperlink.NavigateUri)); " is 130.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Microsoft.Kinect.Toolkit;component/kinectsensorchooserui.xaml"' System.UriKind.Relative); " is 135.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The length of the statement  "            this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus); " is 127.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The length of the statement  "            this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus); " is 127.
Long Statement,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The length of the statement  "            this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate); " is 133.
Long Statement,Microsoft.Kinect.Toolkit,RelayCommand<T>,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\RelayCommand.cs,CanExecute,The length of the statement  "                throw new InvalidCastException(string.Format(CultureInfo.InvariantCulture' Resources.DelegateCommandCastException' parameter.GetType().FullName' typeof(T).FullName)); " is 166.
Long Statement,Microsoft.Kinect.Toolkit,RelayCommand<T>,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\RelayCommand.cs,Execute,The length of the statement  "                throw new InvalidCastException(string.Format(CultureInfo.InvariantCulture' Resources.DelegateCommandCastException' parameter.GetType().FullName' typeof(T).FullName)); " is 166.
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,KinectSensorChooserUI,The following statement contains a magic number: this.popupCloseCheck = new DispatcherTimer(                  TimeSpan.FromMilliseconds(1000)' DispatcherPriority.Normal' this.OnPopupCloseCheckFired' this.Dispatcher);
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,ExpandedPopupOnLayoutUpdated,The following statement contains a magic number: this.expandedPopup.VerticalOffset = (this.popupGrid.ActualHeight - this.layoutRoot.ActualHeight - 1.0) / 2.0;
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Magic Number,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
Missing Default,Microsoft.Kinect.Toolkit,KinectSensorChooserUI,C:\repos\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit\KinectSensorChooserUI.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.layoutRoot = ((System.Windows.Controls.Grid)(target));                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.MouseEnter += new System.Windows.Input.MouseEventHandler(this.OnRootGridMouseEnter);                            #line default              #line hidden                            #line 69 "..\..\KinectSensorChooserUI.xaml"              this.layoutRoot.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnRootGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 2:              this.SensorStatusStates = ((System.Windows.VisualStateGroup)(target));              return;              case 3:              this.Stopped = ((System.Windows.VisualState)(target));              return;              case 4:              this.Initializing = ((System.Windows.VisualState)(target));              return;              case 5:              this.AllSetListening = ((System.Windows.VisualState)(target));              return;              case 6:              this.NoAvailableSensors = ((System.Windows.VisualState)(target));              return;              case 7:              this.Error = ((System.Windows.VisualState)(target));              return;              case 8:              this.AllSetNotListening = ((System.Windows.VisualState)(target));              return;              case 9:              this.initializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 10:              this.allSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 11:              this.allSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 12:              this.noAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 13:              this.errorContent = ((System.Windows.Controls.Grid)(target));              return;              case 14:              this.expandedPopup = ((System.Windows.Controls.Primitives.Popup)(target));                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.Opened += new System.EventHandler(this.ExpandedPopupOnOpened);                            #line default              #line hidden                            #line 349 "..\..\KinectSensorChooserUI.xaml"              this.expandedPopup.MouseLeave += new System.Windows.Input.MouseEventHandler(this.OnExpandedPopupMouseLeave);                            #line default              #line hidden              return;              case 15:              this.popupGrid = ((System.Windows.Controls.Grid)(target));                            #line 350 "..\..\KinectSensorChooserUI.xaml"              this.popupGrid.GotKeyboardFocus += new System.Windows.Input.KeyboardFocusChangedEventHandler(this.OnPopupGridGotKeyboardFocus);                            #line default              #line hidden              return;              case 16:              this.expandedInitializingContent = ((System.Windows.Controls.Grid)(target));              return;              case 17:              this.expandedAllSetNotListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 18:              this.expandedAllSetListeningContent = ((System.Windows.Controls.Grid)(target));              return;              case 19:              this.expandedNoAvailableSensorsContent = ((System.Windows.Controls.Grid)(target));              return;              case 20:              this.expandedErrorContent = ((System.Windows.Controls.Grid)(target));              return;              case 21:              this.MessageTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.TellMeMoreLink = ((System.Windows.Documents.Hyperlink)(target));                            #line 422 "..\..\KinectSensorChooserUI.xaml"              this.TellMeMoreLink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.TellMeMoreLinkRequestNavigate);                            #line default              #line hidden              return;              }
