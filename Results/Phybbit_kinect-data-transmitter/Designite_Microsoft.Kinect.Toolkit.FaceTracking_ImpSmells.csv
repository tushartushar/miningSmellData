Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Dispose,Cyclomatic complexity of the method is 7
Complex Method,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Kinect.Toolkit.FaceTracking,CameraConfig,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,CameraConfig,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,Cyclomatic complexity of the method is 11
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The method has 7 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The method has 10 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The method has 5 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The method has 5 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,DepthToColorCallback,The method has 11 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The method has 5 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The method has 6 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTImage,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,Attach,The method has 5 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTImage,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,CopyTo,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTImage,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,DrawLine,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,Get3DShape,The method has 9 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,GetProjectedShape,The method has 12 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTFaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,Initialize,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTFaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,GetShapeUnits,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTFaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,StartTracking,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,IFTFaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,DetectFaces,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,CameraConfig,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,CameraConfig,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,SensorData,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FtInterop.cs,SensorData,The method has 4 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,Attach,The method has 5 parameters.
Long Parameter List,Microsoft.Kinect.Toolkit.FaceTracking,Rect,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Utils.cs,Rect,The method has 4 parameters.
Long Identifier,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the parameter newRegisterDepthToColorDelegate is 31.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The length of the statement  "	this.faceTracker.FaceTrackerPtr.GetShapeUnits (out scale' out shapeUnitCoeffPtr' ref shapeUnitCount' out hasSuConverged); " is 121.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The length of the statement  "	return this.Get3DShape (shapeUnitCoeffPtr' shapeUnitCount' animUnitCoeffPtr' animUnitPointsCount' faceTrackFrame.Scale' faceTrackFrame.Rotation' faceTrackFrame.Translation); " is 173.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The length of the statement  "	this.faceTracker.FaceTrackerPtr.GetShapeUnits (out scale' out shapeUnitCoeffPtr' ref shapeUnitCount' out hasSuConverged); " is 121.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The length of the statement  "	return this.GetProjected3DShape (this.faceTracker.ColorCameraConfig' zoomFactor' viewOffset' shapeUnitCoeffPtr' shapeUnitCount' animUnitCoeffPtr' animUnitPointsCount' faceTrackFrame.Scale' faceTrackFrame.Rotation' faceTrackFrame.Translation); " is 242.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The length of the statement  "			this.faceTrackingModelPtr.Get3DShape (shapeUnitCoeffPtr' shapeUnitCoeffCount' animUnitCoeffPtr' animUnitCoeffCount' scale' ref rotation' ref translation' faceModel3DVerticesPtr' vertexCount); " is 191.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The length of the statement  "			this.faceTrackingModelPtr.GetProjectedShape (videoCameraConfig' zoomFactor' viewOffset' shapeUnitCoeffPtr' shapeUnitCoeffCount' animUnitCoeffPtr' animUnitCoeffCount' scale' ref rotation' ref translation' faceModel3DVerticesPtr' vertexCount); " is 241.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Dispose,The length of the statement  "		string traceStr = string.Format (CultureInfo.InvariantCulture' "FaceTracker::Dispose() - TotalTracks={0}' TotalSuccessTracks={1}' TimePerTrack={2:F3}ms' TimePerSuccessTrack={3:F3}ms' TimePerDataCopy={4:F3}ms' TimePerStartOrContinueTracking={5:F3}ms"' this.totalTracks' this.totalSuccessTracks' this.totalTracks > 0 ? (double)this.trackStopwatch.ElapsedMilliseconds / this.totalTracks : 0' this.totalSuccessTracks > 0 ? (double)this.totalSuccessTrackMs / this.totalSuccessTracks : 0' this.totalTracks > 0 ? (double)this.copyStopwatch.ElapsedMilliseconds / this.totalTracks : 0' this.totalTracks > 0 ? (double)this.startOrContinueTrackingStopwatch.ElapsedMilliseconds / this.totalTracks : 0); " is 690.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,DepthToColorCallback,The length of the statement  "			colorPoint = this.sensor.CoordinateMapper.MapDepthPointToColorPoint (this.sensor.DepthStream.Format' depthImagePoint' this.sensor.ColorStream.Format); " is 150.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,DepthToColorCallback,The length of the statement  "			string traceStr = string.Format (CultureInfo.CurrentCulture' "Exception on MapDepthToColorImagePoint while translating depth point({0}'{1}'{2}). Exception={3}"' depthX' depthY' depthZ' e.Message); " is 196.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Failed to initialize face tracker - Error code from native=0x{0:X}"' hr)); " is 155.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Failed to create face tracking result. Error code from native=0x{0:X}"' hr)); " is 158.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the statement  "		this.colorFaceTrackingImage.Allocate (this.videoCameraConfig.Width' this.videoCameraConfig.Height' this.videoCameraConfig.ImageFormat); " is 135.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the statement  "		this.colorFaceTrackingImage.Attach (this.videoCameraConfig.Width' this.videoCameraConfig.Height' colorImagePtr' this.videoCameraConfig.ImageFormat' this.videoCameraConfig.Stride); " is 179.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the statement  "		this.depthFaceTrackingImage.Allocate (this.depthCameraConfig.Width' this.depthCameraConfig.Height' this.depthCameraConfig.ImageFormat); " is 135.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Initialize,The length of the statement  "		this.depthFaceTrackingImage.Attach (this.depthCameraConfig.Width' this.depthCameraConfig.Height' depthImagePtr' this.depthCameraConfig.ImageFormat' this.depthCameraConfig.Stride); " is 179.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The length of the statement  "		throw new InvalidOperationException ("Cannot use Track with Kinect input types when face tracker is initialized for tracking videos/images"); " is 141.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The length of the statement  "		throw new ArgumentOutOfRangeException ("colorImage"' "Color image data size is needs to match initialization configuration."); " is 126.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The length of the statement  "		throw new ArgumentOutOfRangeException ("depthImage"' "Depth image data size is needs to match initialization configuration."); " is 126.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The length of the statement  "	var sensorData = new SensorData (this.colorFaceTrackingImage' this.depthFaceTrackingImage' DefaultZoomFactor' Point.Empty); " is 123.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The length of the statement  "		hr = this.faceTrackerInteropPtr.StartTracking (ref faceTrackSensorData' ref regionOfInterest' headPointsObj' this.frame.ResultPtr); " is 131.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTrackFrame,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTrackFrame.cs,Clone,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Failed to create face tracking frame. Error code from native=0x{0:X}"' hr)); " is 157.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTrackFrame,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTrackFrame.cs,Clone,The length of the statement  "		throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' "Failed to clone the source face tracking frame. Error code from native=0x{0:X}"' hr)); " is 167.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,FaceTrackFrame,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTrackFrame.cs,GetProjected3DShape,The length of the statement  "	return new EnumIndexableCollection<FeaturePoint' PointF> (faceTracker.FaceModel.GetProjected3DShape (FaceTracker.DefaultZoomFactor' Point.Empty' this)); " is 152.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,CopyFrom,The length of the statement  "			throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "Array size for src buffer ({0}) should be less than native image buffer ({1})"' srcData.Length' bufferSize)); " is 182.
Long Statement,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,CopyFrom,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.CurrentCulture' "Unsupported buffer management {0} encountered"' this.bufferManagement)); " is 149.
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetTriangles,The following statement contains a magic number: if (trianglesCount > 0) {  	triangles = new FaceTriangle[trianglesCount];  	for (int i = 0; i < trianglesCount; i++) {  		triangles [i] = new FaceTriangle ();  		IntPtr trianglesIthPtr;  		if (IntPtr.Size == 8) {  			// 64bit  			trianglesIthPtr = new IntPtr (trianglesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(FaceTriangle))));  		} else {  			// 32bit  			trianglesIthPtr = new IntPtr (trianglesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(FaceTriangle))));  		}  		triangles [i] = (FaceTriangle)Marshal.PtrToStructure (trianglesIthPtr' typeof(FaceTriangle));  	}  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetTriangles,The following statement contains a magic number: for (int i = 0; i < trianglesCount; i++) {  	triangles [i] = new FaceTriangle ();  	IntPtr trianglesIthPtr;  	if (IntPtr.Size == 8) {  		// 64bit  		trianglesIthPtr = new IntPtr (trianglesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(FaceTriangle))));  	} else {  		// 32bit  		trianglesIthPtr = new IntPtr (trianglesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(FaceTriangle))));  	}  	triangles [i] = (FaceTriangle)Marshal.PtrToStructure (trianglesIthPtr' typeof(FaceTriangle));  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetTriangles,The following statement contains a magic number: if (IntPtr.Size == 8) {  	// 64bit  	trianglesIthPtr = new IntPtr (trianglesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(FaceTriangle))));  } else {  	// 32bit  	trianglesIthPtr = new IntPtr (trianglesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(FaceTriangle))));  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The following statement contains a magic number: if (vertexCount > 0) {  	try {  		faceModel3DVerticesPtr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(Vector3DF)) * (int)vertexCount);  		this.faceTrackingModelPtr.Get3DShape (shapeUnitCoeffPtr' shapeUnitCoeffCount' animUnitCoeffPtr' animUnitCoeffCount' scale' ref rotation' ref translation' faceModel3DVerticesPtr' vertexCount);  		faceModel3DShape = new Vector3DF[vertexCount];  		for (int i = 0; i < (int)vertexCount; i++) {  			IntPtr faceModel3DVerticesIthPtr;  			if (IntPtr.Size == 8) {  				// 64bit  				faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  			} else {  				// 32bit  				faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  			}  			faceModel3DShape [i] = (Vector3DF)Marshal.PtrToStructure (faceModel3DVerticesIthPtr' typeof(Vector3DF));  		}  	} finally {  		if (faceModel3DVerticesPtr != IntPtr.Zero) {  			Marshal.FreeHGlobal (faceModel3DVerticesPtr);  		}  	}  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The following statement contains a magic number: try {  	faceModel3DVerticesPtr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(Vector3DF)) * (int)vertexCount);  	this.faceTrackingModelPtr.Get3DShape (shapeUnitCoeffPtr' shapeUnitCoeffCount' animUnitCoeffPtr' animUnitCoeffCount' scale' ref rotation' ref translation' faceModel3DVerticesPtr' vertexCount);  	faceModel3DShape = new Vector3DF[vertexCount];  	for (int i = 0; i < (int)vertexCount; i++) {  		IntPtr faceModel3DVerticesIthPtr;  		if (IntPtr.Size == 8) {  			// 64bit  			faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  		} else {  			// 32bit  			faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  		}  		faceModel3DShape [i] = (Vector3DF)Marshal.PtrToStructure (faceModel3DVerticesIthPtr' typeof(Vector3DF));  	}  } finally {  	if (faceModel3DVerticesPtr != IntPtr.Zero) {  		Marshal.FreeHGlobal (faceModel3DVerticesPtr);  	}  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The following statement contains a magic number: for (int i = 0; i < (int)vertexCount; i++) {  	IntPtr faceModel3DVerticesIthPtr;  	if (IntPtr.Size == 8) {  		// 64bit  		faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  	} else {  		// 32bit  		faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  	}  	faceModel3DShape [i] = (Vector3DF)Marshal.PtrToStructure (faceModel3DVerticesIthPtr' typeof(Vector3DF));  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,Get3DShape,The following statement contains a magic number: if (IntPtr.Size == 8) {  	// 64bit  	faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  } else {  	// 32bit  	faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(Vector3DF))));  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The following statement contains a magic number: if (vertexCount > 0) {  	try {  		faceModel3DVerticesPtr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(Vector3DF)) * (int)vertexCount);  		this.faceTrackingModelPtr.GetProjectedShape (videoCameraConfig' zoomFactor' viewOffset' shapeUnitCoeffPtr' shapeUnitCoeffCount' animUnitCoeffPtr' animUnitCoeffCount' scale' ref rotation' ref translation' faceModel3DVerticesPtr' vertexCount);  		faceModelProjected3DShape = new PointF[vertexCount];  		for (int i = 0; i < (int)vertexCount; i++) {  			IntPtr faceModel3DVerticesIthPtr;  			if (IntPtr.Size == 8) {  				// 64bit  				faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(PointF))));  			} else {  				// 32bit  				faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(PointF))));  			}  			faceModelProjected3DShape [i] = (PointF)Marshal.PtrToStructure (faceModel3DVerticesIthPtr' typeof(PointF));  		}  	} finally {  		if (faceModel3DVerticesPtr != IntPtr.Zero) {  			Marshal.FreeHGlobal (faceModel3DVerticesPtr);  		}  	}  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The following statement contains a magic number: try {  	faceModel3DVerticesPtr = Marshal.AllocHGlobal (Marshal.SizeOf (typeof(Vector3DF)) * (int)vertexCount);  	this.faceTrackingModelPtr.GetProjectedShape (videoCameraConfig' zoomFactor' viewOffset' shapeUnitCoeffPtr' shapeUnitCoeffCount' animUnitCoeffPtr' animUnitCoeffCount' scale' ref rotation' ref translation' faceModel3DVerticesPtr' vertexCount);  	faceModelProjected3DShape = new PointF[vertexCount];  	for (int i = 0; i < (int)vertexCount; i++) {  		IntPtr faceModel3DVerticesIthPtr;  		if (IntPtr.Size == 8) {  			// 64bit  			faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(PointF))));  		} else {  			// 32bit  			faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(PointF))));  		}  		faceModelProjected3DShape [i] = (PointF)Marshal.PtrToStructure (faceModel3DVerticesIthPtr' typeof(PointF));  	}  } finally {  	if (faceModel3DVerticesPtr != IntPtr.Zero) {  		Marshal.FreeHGlobal (faceModel3DVerticesPtr);  	}  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The following statement contains a magic number: for (int i = 0; i < (int)vertexCount; i++) {  	IntPtr faceModel3DVerticesIthPtr;  	if (IntPtr.Size == 8) {  		// 64bit  		faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(PointF))));  	} else {  		// 32bit  		faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(PointF))));  	}  	faceModelProjected3DShape [i] = (PointF)Marshal.PtrToStructure (faceModel3DVerticesIthPtr' typeof(PointF));  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceModel,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceModel.cs,GetProjected3DShape,The following statement contains a magic number: if (IntPtr.Size == 8) {  	// 64bit  	faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt64 () + (i * Marshal.SizeOf (typeof(PointF))));  } else {  	// 32bit  	faceModel3DVerticesIthPtr = new IntPtr (faceModel3DVerticesPtr.ToInt32 () + (i * Marshal.SizeOf (typeof(PointF))));  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,GetHeadPointsFromSkeleton,The following statement contains a magic number: if (skeletonOfInterest != null && skeletonOfInterest.TrackingState == SkeletonTrackingState.Tracked) {  	headPoints = new Vector3DF[2];  	SkeletonPoint sp0 = skeletonOfInterest.Joints [JointType.ShoulderCenter].Position;  	headPoints [0] = new Vector3DF (sp0.X' sp0.Y' sp0.Z);  	SkeletonPoint sp1 = skeletonOfInterest.Joints [JointType.Head].Position;  	headPoints [1] = new Vector3DF (sp1.X' sp1.Y' sp1.Z);  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,GetHeadPointsFromSkeleton,The following statement contains a magic number: headPoints = new Vector3DF[2];  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,FaceTracker,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\FaceTracker.cs,Track,The following statement contains a magic number: if (headPoints != null && headPoints.Length == 2) {  	headPointsObj = new HeadPoints {  		Points = headPoints  	};  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: switch (format) {  case FaceTrackingImageFormat.FTIMAGEFORMAT_INVALID:  	return 0;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_GR8:  	return 1;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_R8G8B8:  	return 3;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_X8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_A8R8G8B8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8X8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT8_B8G8R8A8:  	return 4;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D16:  	return 2;  case FaceTrackingImageFormat.FTIMAGEFORMAT_UINT16_D13P3:  	return 2;  default:  	throw new ArgumentException ("Invalid image format specified");  }  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 3;  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 4;  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 4;  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 4;  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 4;  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 2;  
Magic Number,Microsoft.Kinect.Toolkit.FaceTracking,Image,D:\newReposJune17\Phybbit_kinect-data-transmitter\Microsoft.Kinect.Toolkit.FaceTracking\Image.cs,FormatToSize,The following statement contains a magic number: return 2;  
