Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,MapViewOfFile,The method has 5 parameters. Parameters: fileMappingObject' desiredAccess' fileOffsetHigh' fileOffsetLow' numBytesToMap
Long Parameter List,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,EncodeInteraction,The method has 10 parameters. Parameters: skeletonTrackingId' handEventType' handType' x' y' pressExtent' isActive' isInteractive' isPressed' isTracked
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,EncodeInteraction,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "{0}|{1} {2} {3} {4} {5} {6} {7} {8} {9} {10}"' InteractionFrameType' skeletonTrackingId' handEventType' handType' x' y' pressExtent' isActive' isInteractive' isPressed' isTracked); " is 232.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture); " is 140.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture); " is 126.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture); " is 126.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture); " is 126.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture); " is 128.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture); " is 128.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture); " is 128.
Long Statement,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The length of the statement  "                jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture); " is 128.
Empty Catch Block,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,ReadFromMappedFile,The method has an empty catch block.
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,GetDataContent,The following statement contains a magic number: return data.Substring(2);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.Au2 = float.Parse(tokens[2]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.Au3 = float.Parse(tokens[3]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.Au4 = float.Parse(tokens[4]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.Au5 = float.Parse(tokens[5]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.PosX = float.Parse(tokens[6]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.PosY = float.Parse(tokens[7]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.PosZ = float.Parse(tokens[8]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.RotX = float.Parse(tokens[9]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.RotY = float.Parse(tokens[10]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeFaceTrackingData,The following statement contains a magic number: faceData.RotZ = float.Parse(tokens[11]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: bodyData.PlayerIndex = int.Parse(tokens[2]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: const int jointDataOffset = 3;
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: const int elementsNumber = 9;
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeSkeletonData,The following statement contains a magic number: for (int i = 0; i + jointDataOffset < (tokens.Length / elementsNumber) + jointDataOffset; i++)              {                  int jointId = int.Parse(tokens[(i * elementsNumber) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].State = (JointTrackingState)int.Parse(tokens[(i * elementsNumber + 1) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionX = float.Parse(tokens[(i * elementsNumber + 2) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionY = float.Parse(tokens[(i * elementsNumber + 3) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].PositionZ = float.Parse(tokens[(i * elementsNumber + 4) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionX = float.Parse(tokens[(i * elementsNumber + 5) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionY = float.Parse(tokens[(i * elementsNumber + 6) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionZ = float.Parse(tokens[(i * elementsNumber + 7) + jointDataOffset]' CultureInfo.InvariantCulture);                  jointsData[jointId].QuaternionW = float.Parse(tokens[(i * elementsNumber + 8) + jointDataOffset]' CultureInfo.InvariantCulture);               }
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.HandType = (HandType)Enum.Parse(typeof(HandType)' tokens[2]);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.X = float.Parse(tokens[3]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.Y = float.Parse(tokens[4]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.PressExtent = float.Parse(tokens[5]' CultureInfo.InvariantCulture);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.IsActive = bool.Parse(tokens[6]);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.IsInteractive = bool.Parse(tokens[7]);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.IsPressed = bool.Parse(tokens[8]);
Magic Number,DataConverter,Converter,C:\repos\Phybbit_kinect-data-transmitter\DataConverter\Converter.cs,DecodeInteractionData,The following statement contains a magic number: handPointer.IsTracked = bool.Parse(tokens[9]);
