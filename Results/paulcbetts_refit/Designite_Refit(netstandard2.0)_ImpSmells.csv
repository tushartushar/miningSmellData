Implementation smell,Namespace,Class,File,Method,Description
Long Method,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The method has 256 lines of code.
Complex Method,Refit,FormValueMultimap,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\FormValueMultimap.cs,FormValueMultimap,Cyclomatic complexity of the method is 12
Complex Method,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,FindMatchingRestMethodInfo,Cyclomatic complexity of the method is 8
Complex Method,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildQueryMap,Cyclomatic complexity of the method is 14
Complex Method,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,RestMethodInfo,Cyclomatic complexity of the method is 8
Complex Method,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,BuildParameterMap,Cyclomatic complexity of the method is 9
Complex Method,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,FindBodyParameter,Cyclomatic complexity of the method is 8
Long Parameter List,Refit,ApiException,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\ApiException.cs,ApiException,The method has 6 parameters. Parameters: message' httpMethod' statusCode' reasonPhrase' headers' refitSettings
Long Identifier,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the parameter paramsContainsCancellationToken is 31.
Long Statement,Refit,ApiException,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\ApiException.cs,Create,The length of the statement  "            var exception = new ApiException(message' httpMethod' response.StatusCode' response.ReasonPhrase' response.Headers' refitSettings); " is 131.
Long Statement,Refit,ApiResponse<T>,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\ApiResponse.cs,EnsureSuccessStatusCodeAsync,The length of the statement  "                var exception = await ApiException.Create(response.RequestMessage' response.RequestMessage.Method' response).ConfigureAwait(false); " is 131.
Long Statement,Refit,CachedRequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\CachedRequestBuilderImplementation.cs,BuildRestResultFuncForMethod,The length of the statement  "            var func = methodDictionary.GetOrAdd(cacheKey' _ => innerBuilder.BuildRestResultFuncForMethod(methodName' parameterTypes' genericArgumentTypes)); " is 145.
Long Statement,Refit,JsonContentSerializer,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\JsonContentSerializer.cs,SerializeAsync,The length of the statement  "            var content = new StringContent(JsonConvert.SerializeObject(item' jsonSerializerSettings.Value)' Encoding.UTF8' "application/json"); " is 132.
Long Statement,Refit,DefaultUrlParameterFormatter,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RefitSettings.cs,Format,The length of the statement  "                enummember = cached.GetOrAdd(parameterValue.ToString()' val => type.GetMember(val).First().GetCustomAttribute<EnumMemberAttribute>()); " is 134.
Long Statement,Refit,DefaultFormUrlEncodedParameterFormatter,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RefitSettings.cs,Format,The length of the statement  "                enummember = cached.GetOrAdd(parameterValue.ToString()' val => parameterType.GetMember(val).First().GetCustomAttribute<EnumMemberAttribute>()); " is 143.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,FindMatchingRestMethodInfo,The length of the statement  "                var possibleMethodsList = httpMethods.Where(method => method.MethodInfo.GetParameters().Length == parameterTypes.Count()); " is 122.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,FindMatchingRestMethodInfo,The length of the statement  "                    possibleMethodsList = possibleMethodsList.Where(method => method.MethodInfo.IsGenericMethod && method.MethodInfo.GetGenericArguments().Length == genericArgumentTypes.Length); " is 174.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,CloseGenericMethodIfNeeded,The length of the statement  "                    _ => new RestMethodInfo(restMethodInfo.Type' restMethodInfo.MethodInfo.MakeGenericMethod(genericArgumentTypes)' restMethodInfo.RefitSettings)); " is 143.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRestResultFuncForMethod,The length of the statement  "                var taskFuncMi = typeof(RequestBuilderImplementation).GetMethod(nameof(BuildTaskFuncForMethod)' BindingFlags.NonPublic | BindingFlags.Instance); " is 144.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRestResultFuncForMethod,The length of the statement  "                    taskFuncMi.MakeGenericMethod(restMethod.SerializedReturnType' restMethod.SerializedReturnType)).Invoke(this' new[] { restMethod }); " is 131.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRestResultFuncForMethod,The length of the statement  "            var rxFuncMi = typeof(RequestBuilderImplementation).GetMethod(nameof(BuildRxFuncForMethod)' BindingFlags.NonPublic | BindingFlags.Instance); " is 140.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRestResultFuncForMethod,The length of the statement  "                    rxFuncMi.MakeGenericMethod(restMethod.SerializedReturnType' restMethod.SerializedReturnType)).Invoke(this' new[] { restMethod }); " is 129.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,AddMultipartItemAsync,The length of the statement  "                multiPartContent.Add(httpContent' parameterName' string.IsNullOrEmpty(multipartItem.FileName) ? fileName : multipartItem.FileName); " is 131.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,AddMultipartItemAsync,The length of the statement  "            throw new ArgumentException($"Unexpected parameter type in a Multipart request. Parameter {fileName} is of type {itemValue.GetType().Name}' whereas allowed types are String' Stream' FileInfo' Byte array and anything that's JSON serializable"' nameof(itemValue)' e); " is 265.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildCancellableTaskFuncForMethod,The length of the statement  "                var factory = BuildRequestFactoryForMethod(restMethod' client.BaseAddress.AbsolutePath' restMethod.CancellationToken != null); " is 126.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildCancellableTaskFuncForMethod,The length of the statement  "                        var exception = await ApiException.Create(rq' restMethod.HttpMethod' resp' restMethod.RefitSettings).ConfigureAwait(false); " is 123.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildCancellableTaskFuncForMethod,The length of the statement  "                    var serializedReturnType = restMethod.IsApiResponse ? restMethod.SerializedGenericArgument : restMethod.SerializedReturnType; " is 125.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                            //don't continue here as we want it to fall through so any parameters on this object not bound here get passed as query parameters " is 130.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                                                settings.UrlParameterFormatter.Format(s' restMethod.ParameterInfoMap[i]' restMethod.ParameterInfoMap[i].ParameterType) ?? string.Empty " is 134.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                                    ret.Content = param is string str ? (HttpContent)new StringContent(Uri.EscapeDataString(str)' Encoding.UTF8' "application/x-www-form-urlencoded") : new FormUrlEncodedContent(new FormValueMultimap(param' settings)); " is 214.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                                                settings.UrlParameterFormatter.Format(paramValue' restMethod.ParameterInfoMap[i]' restMethod.ParameterInfoMap[i].ParameterType))); " is 130.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                                        // Missing a "default" clause was preventing the collection from serializing at all' as it was hitting "continue" thus causing an off-by-one error " is 146.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                                            .Select(v => settings.UrlParameterFormatter.Format(v' restMethod.ParameterInfoMap[i]' restMethod.ParameterInfoMap[i].ParameterType)); " is 133.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                            queryParamsToAdd.Add(new KeyValuePair<string' string>(restMethod.QueryParameterMap[i]' settings.UrlParameterFormatter.Format(param' restMethod.ParameterInfoMap[i]' restMethod.ParameterInfoMap[i].ParameterType))); " is 212.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The length of the statement  "                                queryParamsToAdd.Add(new KeyValuePair<string' string>(path' settings.UrlParameterFormatter.Format(kvp.Value' restMethod.ParameterInfoMap[i]' restMethod.ParameterInfoMap[i].ParameterType))); " is 189.
Long Statement,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildVoidTaskFuncForMethod,The length of the statement  "                var factory = BuildRequestFactoryForMethod(restMethod' client.BaseAddress.AbsolutePath' restMethod.CancellationToken != null); " is 126.
Long Statement,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,BuildParameterMap,The length of the statement  "            // This section handles pattern matching in the URL. We also need it to add parameter key/values for any attribute with a [Query] " is 129.
Long Statement,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,BuildParameterMap,The length of the statement  "                            throw new ArgumentException($"URL {relativePath} has round-tripping parameter {rawName}' but the type of matched method parameter is {paramType.FullName}. It must be a string."); " is 178.
Long Statement,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,BuildParameterMap,The length of the statement  "                                throw new ArgumentException($"Parameter {property.Item1.Name} matches both a parameter and nested parameter on a parameter object"); " is 132.
Long Statement,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,FindBodyParameter,The length of the statement  "                .Select(x => new { Parameter = x' BodyAttribute = x.GetCustomAttributes(true).OfType<BodyAttribute>().FirstOrDefault() }) " is 121.
Long Statement,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,FindBodyParameter,The length of the statement  "            var refParams = parameterList.Where(pi => !pi.ParameterType.GetTypeInfo().IsValueType && pi.ParameterType != typeof(string) && pi.GetCustomAttribute<QueryAttribute>() == null).ToList(); " is 185.
Long Statement,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,DetermineReturnTypeInfo,The length of the statement  "            throw new ArgumentException($"Method \"{methodInfo.Name}\" is invalid. All REST Methods must return either Task<T> or IObservable<T>"); " is 135.
Long Statement,Refit,RestService,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestService.cs,CreateHttpClient,The length of the statement  "                    innerHandler = new AuthenticatedParameterizedHttpClientHandler(settings.AuthorizationHeaderValueWithParamGetter' innerHandler); " is 127.
Long Statement,Refit,RestService,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestService.cs,GetGeneratedType,The length of the statement  "                var message = refitInterfaceType.Name + " doesn't look like a Refit interface. Make sure it has at least one " + "method with a Refit HTTP method attribute and Refit is installed in the project."; " is 196.
Long Statement,Refit,UniqueName,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\UniqueName.cs,ForType,The length of the statement  "                typeName = refitInterfaceType.AssemblyQualifiedName.Replace(refitInterfaceType.DeclaringType.FullName + "+" + refitInterfaceType.Name' refitInterfaceType.Namespace + "." + className); " is 183.
Long Statement,Refit,XmlContentSerializer,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\XmlContentSerializer.cs,SerializeAsync,The length of the statement  "            var xmlSerializer = serializerCache.GetOrAdd(item.GetType()' t => new XmlSerializer(t' settings.XmlAttributeOverrides)); " is 120.
Long Statement,System.Net.Http,PushStreamContent,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\PushStreamContent.cs,Taskify,The length of the statement  "                // https://github.com/ASP-NET-MVC/aspnetwebstack/blob/5118a14040b13f95bf778d1fc4522eb4ea2eef18/src/Common/TaskHelpers.cs#L10 " is 124.
Complex Conditional,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The conditional expression  "!restMethod.IsMultipart ||                          restMethod.ParameterMap.ContainsKey(i) && restMethod.ParameterMap[i].IsObjectPropertyParameter ||                          queryAttribute != null"  is complex.
Complex Conditional,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,RestMethodInfo,The conditional expression  "ParameterMap.ContainsKey(i) ||                      HeaderParameterMap.ContainsKey(i) ||                      (BodyParameterInfo != null && BodyParameterInfo.Item3 == i)"  is complex.
Empty Catch Block,Refit,ApiException,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\ApiException.cs,Create,The method has an empty catch block.
Magic Number,Refit,CloseGenericMethodKey,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\CloseGenericMethodKey.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Refit,CloseGenericMethodKey,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\CloseGenericMethodKey.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + OpenMethodInfo.GetHashCode();
Magic Number,Refit,CloseGenericMethodKey,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\CloseGenericMethodKey.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + type.GetHashCode();
Magic Number,Refit,RestMethodInfo,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RestMethodInfo.cs,BuildParameterMap,The following statement contains a magic number: name = rawName.Substring(2);
Missing Default,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The following switch statement is missing a default case: switch (restMethod.BodyParameterInfo.Item1)                              {                                  case BodySerializationMethod.UrlEncoded:                                      ret.Content = param is string str ? (HttpContent)new StringContent(Uri.EscapeDataString(str)' Encoding.UTF8' "application/x-www-form-urlencoded") : new FormUrlEncodedContent(new FormValueMultimap(param' settings));                                      break;                                  case BodySerializationMethod.Default:  #pragma warning disable CS0618 // Type or member is obsolete                                  case BodySerializationMethod.Json:  #pragma warning restore CS0618 // Type or member is obsolete                                  case BodySerializationMethod.Serialized:                                      var content = await serializer.SerializeAsync(param).ConfigureAwait(false);                                      switch (restMethod.BodyParameterInfo.Item2)                                      {                                          case false:                                              ret.Content = new PushStreamContent(  #pragma warning disable IDE1006 // Naming Styles                                                  async (stream' _' __) =>  #pragma warning restore IDE1006 // Naming Styles                                                  {                                                      using (stream)                                                      {                                                          await content.CopyToAsync(stream).ConfigureAwait(false);                                                      }                                                  }' content.Headers.ContentType);                                              break;                                          case true:                                              ret.Content = content;                                              break;                                      }                                        break;                              }
Missing Default,Refit,RequestBuilderImplementation,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.cs,BuildRequestFactoryForMethod,The following switch statement is missing a default case: switch (restMethod.BodyParameterInfo.Item2)                                      {                                          case false:                                              ret.Content = new PushStreamContent(  #pragma warning disable IDE1006 // Naming Styles                                                  async (stream' _' __) =>  #pragma warning restore IDE1006 // Naming Styles                                                  {                                                      using (stream)                                                      {                                                          await content.CopyToAsync(stream).ConfigureAwait(false);                                                      }                                                  }' content.Headers.ContentType);                                              break;                                          case true:                                              ret.Content = content;                                              break;                                      }
Missing Default,Refit,TaskToObservable<T>,C:\research\architectureSmells\repos\paulcbetts_refit\Refit\RequestBuilderImplementation.TaskToObservable.cs,ToObservableDone,The following switch statement is missing a default case: switch (task.Status)                  {                      case TaskStatus.RanToCompletion:  #pragma warning disable VSTHRD002 // Avoid problematic synchronous waits  #pragma warning disable VSTHRD102 // Implement internal logic asynchronously                          subject.OnNext(task.Result);  #pragma warning restore VSTHRD102 // Implement internal logic asynchronously  #pragma warning restore VSTHRD002 // Avoid problematic synchronous waits                          subject.OnCompleted();                          break;                      case TaskStatus.Faulted:                          subject.OnError(task.Exception.InnerException);                          break;                      case TaskStatus.Canceled:                          subject.OnError(new TaskCanceledException(task));                          break;                  }
