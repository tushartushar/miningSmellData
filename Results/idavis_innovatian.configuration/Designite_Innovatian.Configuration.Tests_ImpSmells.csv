Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The length of the statement  "            Assert.Equal(sections[1].Get<string>("server")' "192.0.2.42     ; use IP address in case network name resolution is not working"); " is 130.
Magic Number,Innovatian.Configuration.Tests,DotNetConfigSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\DotNetConfigSourceTests.cs,CanParseSingleSection,The following statement contains a magic number: Assert.Equal( 10' count );
Magic Number,Innovatian.Configuration.Tests,DotNetConfigSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\DotNetConfigSourceTests.cs,CanParseMultipleSections,The following statement contains a magic number: Assert.Equal( 3' source.Sections.Count );
Magic Number,Innovatian.Configuration.Tests,DotNetConfigSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\DotNetConfigSourceTests.cs,CanParseMultipleSections,The following statement contains a magic number: Assert.Equal( 10' count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( 5' sections.Count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( 2' sections[0].Count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( 3' sections[1].Count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( "Empty"' sections[2].Name );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( 1' sections[2].Count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( sections[2].Get<string>( "MyEmptyValue" )' "" );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( "Completely Empty Section"' sections[3].Name );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( 0' sections[3].Count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( "NonEmptyAfterCompletelyEmpty"' sections[4].Name );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( 1' sections[4].Count );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFile,The following statement contains a magic number: Assert.Equal( sections[4].Get<string>( "mykey" )' "myval  akdk" );
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(5' sections.Count);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(2' sections[0].Count);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(3' sections[1].Count);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal("Empty"' sections[2].Name);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(1' sections[2].Count);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(sections[2].Get<string>("MyEmptyValue")' "");
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal("Completely Empty Section"' sections[3].Name);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(0' sections[3].Count);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal("NonEmptyAfterCompletelyEmpty"' sections[4].Name);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(1' sections[4].Count);
Magic Number,Innovatian.Configuration.Tests,IniConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\IniConfigurationSourceTests.cs,CanProcessValidIniFileWithSingleLineComments,The following statement contains a magic number: Assert.Equal(sections[4].Get<string>("mykey")' "myval  akdk     ;");
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanAddNewKeys,The following statement contains a magic number: source.Sections["NewSettings"].Set( "count"' 5 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadKeys,The following statement contains a magic number: source.Sections["NewSettings"].Set( "count"' 5 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadKeys,The following statement contains a magic number: Assert.Equal( 2' source.Sections.Count );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadKeys,The following statement contains a magic number: Assert.Equal( 5' source.Sections["NewSettings"].Get<int>( "count" ) );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadMultiLevelKeys,The following statement contains a magic number: source.Sections["NewSettings"].Set( "count"' 5 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadMultiLevelKeys,The following statement contains a magic number: source.Sections["NewSettings\\Legacy"].Set( "count"' 15 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadMultiLevelKeys,The following statement contains a magic number: Assert.Equal( 3' source.Sections.Count );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadMultiLevelKeys,The following statement contains a magic number: Assert.Equal( 15' source.Sections["NewSettings\\Legacy"].Get<int>( "count" ) );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadMultiLevelKeys,The following statement contains a magic number: Assert.Equal( 5' source.Sections["NewSettings"].Get<int>( "count" ) );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanLoadMultiLevelKeys,The following statement contains a magic number: Assert.Equal( SectionName' source.Sections.ToList()[2].Value.Name );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanAddMultiLevelKeys,The following statement contains a magic number: source.Sections["NewSettings"].Set( "count"' 5 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanAddMultiLevelKeys,The following statement contains a magic number: source.Sections["NewSettings\\Legacy"].Set( "count"' 5 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "QuadWordValue"' 13 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "DWordValue"' 13 );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "StringValue"' 13.ToString() );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "MultipleStringValue"' new[] {13.ToString()' 13.ToString()} );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "MultipleStringValue"' new[] {13.ToString()' 13.ToString()} );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "BinaryValue"' new byte[] {13' 13} );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: section.Set( "BinaryValue"' new byte[] {13' 13} );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( 13' quadWord );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( 13' dWord );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( new[] {13.ToString()' 13.ToString()}' strings );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( new[] {13.ToString()' 13.ToString()}' strings );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( 13.ToString()' newStringValue );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( new byte[] {13' 13}' data );
Magic Number,Innovatian.Configuration.Tests,RegistryConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\RegistryConfigurationSourceTests.cs,CanWriteRegistryValueKinds,The following statement contains a magic number: Assert.Equal( new byte[] {13' 13}' data );
Magic Number,Innovatian.Configuration.Tests,SettingsConverterTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\SettingsConverterTests.cs,CanGetInt,The following statement contains a magic number: string now = 5.ToString();
Magic Number,Innovatian.Configuration.Tests,SettingsConverterTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\SettingsConverterTests.cs,CanGetStringInt,The following statement contains a magic number: string now = 5.ToString();
Magic Number,Innovatian.Configuration.Tests,SettingsConverterTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\SettingsConverterTests.cs,CanGetStringInt,The following statement contains a magic number: var value = SettingConverter.GetStringFromT( 5 );
Magic Number,Innovatian.Configuration.Tests,XmlConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\XmlConfigurationSourceTests.cs,CanParseSingleSection,The following statement contains a magic number: Assert.Equal( 10' count );
Magic Number,Innovatian.Configuration.Tests,XmlConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\XmlConfigurationSourceTests.cs,CanParseMultipleSections,The following statement contains a magic number: Assert.Equal( 3' source.Sections.Count );
Magic Number,Innovatian.Configuration.Tests,XmlConfigurationSourceTests,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\XmlConfigurationSourceTests.cs,CanParseMultipleSections,The following statement contains a magic number: Assert.Equal( 10' count );
Missing Default,Innovatian.Configuration.Tests,RegistryTestContext,D:\research\architectureSmells\repos\idavis_innovatian.configuration\source\Innovatian.Configuration.Tests\MediumTrustContext.cs,OpenRoot,The following switch statement is missing a default case: switch ( pathParts[0].ToUpper() )              {                  case "HKEY_CLASSES_ROOT":                      currentKey = Registry.ClassesRoot;                      break;                  case "HKEY_CURRENT_CONFIG":                      currentKey = Registry.CurrentConfig;                      break;                  case "HKEY_CURRENT_USER":                      currentKey = Registry.CurrentUser;                      break;                  case "HKEY_DYN_DATA":                      currentKey = Registry.DynData;                      break;                  case "HKEY_LOCAL_MACHINE":                      currentKey = Registry.LocalMachine;                      break;                  case "HKEY_PERFORMANCE_DATA":                      currentKey = Registry.PerformanceData;                      break;                  case "HKEY_USERS":                      currentKey = Registry.Users;                      break;              }
