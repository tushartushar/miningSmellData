Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,Cyclomatic complexity of the method is 44
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(0' 0' 14' 19)' Origin = new Vector2(7.5f' 17.0f) }'            // neutral (down)" is 120.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(30' 0' 14' 19)' Origin = new Vector2(7.5f' 17.0f) }'           // neutral (left)" is 120.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(45' 0' 14' 19)' Origin = new Vector2(7.5f' 17.0f) }'           // neutral (right)" is 121.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(0' 20' 15' 19)' Origin = new Vector2(7.5f' 17.0f) }'           // walk right (down)" is 123.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(16' 20' 14' 19)' Origin = new Vector2(7.5f' 17.0f) }'          // walk right (up)" is 121.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(31' 20' 14' 18)' Origin = new Vector2(7.5f' 17.0f) }'          // walk right (left)" is 123.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(46' 20' 14' 18)' Origin = new Vector2(7.5f' 17.0f) }'          // walk right (right)" is 124.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(0' 40' 15' 19)' Origin = new Vector2(7.5f' 17.0f) }'           // walk left (down)" is 122.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(16' 40' 14' 19)' Origin = new Vector2(7.5f' 17.0f) }'          // walk left (up)" is 120.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(31' 40' 14' 18)' Origin = new Vector2(7.5f' 17.0f) }'          // walk left (left)" is 122.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(46' 40' 14' 18)' Origin = new Vector2(7.5f' 17.0f) }'          // walk left (right)" is 123.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(0' 60' 15' 18)' Origin = new Vector2(7.5f' 17.0f) }'           // run right (down)" is 122.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(16' 60' 14' 19)' Origin = new Vector2(7.5f' 17.0f) }'          // run right (up)" is 120.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(31' 60' 15' 18)' Origin = new Vector2(7.5f' 17.0f) }'          // run right (left)" is 122.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(47' 60' 15' 17)' Origin = new Vector2(7.5f' 17.0f) }'          // run right (right)" is 123.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(0' 80' 15' 18)' Origin = new Vector2(7.5f' 17.0f) }'           // run left (down)" is 121.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(31' 80' 15' 17)' Origin = new Vector2(7.5f' 17.0f) }'          // run left (left)" is 121.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new KeyFrame() { Region = new Rectangle(47' 80' 15' 18)' Origin = new Vector2(7.5f' 17.0f) }'          // run left (right)                " is 122.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Idle Down"' Frames = new Frame[] { new Frame() { Index = 0' Time = 0.0f } } }'                                                 // idle (down)" is 167.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Idle Up"' Frames = new Frame[] { new Frame() { Index = 1' Time = 0.0f } } }'                                                   // idle (up)" is 165.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Idle Left"' Frames = new Frame[] { new Frame() { Index = 2' Time = 0.0f } } }'                                                 // idle (left)" is 167.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Idle Right"' Frames = new Frame[] { new Frame() { Index = 3' Time = 0.0f } } }'                                                // idle (right)" is 168.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Walk Down"' Frames = new Frame[] { new Frame() { Index = 4' Time = 0.25f }' new Frame() { Index = 0' Time = 0.15f }' new Frame() { Index = 8' Time = 0.25f }' new Frame() { Index = 0' Time = 0.15f } } }'       // walk (down) ADD ALTERNATE STYLE" is 269.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Walk Up"' Frames = new Frame[] { new Frame() { Index = 5' Time = 0.25f }' new Frame() { Index = 1' Time = 0.15f }' new Frame() { Index = 9' Time = 0.25f }' new Frame() { Index = 1' Time = 0.15f } } }'         // walk (up)" is 247.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Walk Left"' Frames = new Frame[] { new Frame() { Index = 6' Time = 0.25f }' new Frame() { Index = 2' Time = 0.15f }' new Frame() { Index = 10' Time = 0.25f }' new Frame() { Index = 2' Time = 0.15f } } }'      // walk (left)" is 249.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Walk Right"' Frames = new Frame[] { new Frame() { Index = 7' Time = 0.25f }' new Frame() { Index = 3' Time = 0.15f }' new Frame() { Index = 11' Time = 0.25f }' new Frame() { Index = 3' Time = 0.15f } } }'     // walk (right)" is 250.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Run Down"' Frames = new Frame[] { new Frame() { Index = 12' Time = 0.1f }' new Frame() { Index = 16' Time = 0.1f } } }'                            // run (down)" is 186.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Run Up"' Frames = new Frame[] { new Frame() { Index = 13' Time = 0.1f }' new Frame() { Index = 17' Time = 0.1f } } }'                              // run (up)" is 184.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Run Left"' Frames = new Frame[] { new Frame() { Index = 14' Time = 0.1f }' new Frame() { Index = 18' Time = 0.1f } } }'                            // run (left)" is 186.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Run Right"' Frames = new Frame[] { new Frame() { Index = 15' Time = 0.1f }' new Frame() { Index = 19' Time = 0.1f } } }'                           // run (right)" is 187.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Diagonal SE"' Frames = new Frame[] { new Frame() { Index = 20' Time = 0.0f } } }'                                              // temp" is 160.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Diagonal SW"' Frames = new Frame[] { new Frame() { Index = 21' Time = 0.0f } } }'                                              // temp" is 160.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Diagonal NE"' Frames = new Frame[] { new Frame() { Index = 22' Time = 0.0f } } }'                                              // temp" is 160.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Initialize,The length of the statement  "                new Animation() { Name = "Diagonal NW"' Frames = new Frame[] { new Frame() { Index = 23' Time = 0.0f } } }'                                              // temp" is 160.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The length of the statement  "	mSpriteBatch.Begin (SpriteSortMode.Immediate' BlendState.AlphaBlend' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone' null' Matrix.CreateTranslation (new Vector3 (new Vector2 (SCREEN_WIDTH / 2.0f' SCREEN_HEIGHT / 2.0f) - mPosition' 0.0f))); " is 269.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The length of the statement  "		mSpriteBatch.Draw (mTilesSpriteSheet' new Vector2 (x * TILE_PIXEL * ZOOM_SCALE' y * TILE_PIXEL * ZOOM_SCALE)' new Rectangle (tx * TILE_PIXEL' ty * TILE_PIXEL' TILE_PIXEL' TILE_PIXEL)' Color.White' 0.0f' Vector2.Zero' ZOOM_SCALE' SpriteEffects.None' 1.0f); " is 255.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The length of the statement  "	mSpriteBatch.Draw (mPlayerSprite' mPosition' key.Region' Color.White' 0.0f' key.Origin' ZOOM_SCALE' SpriteEffects.None' 1.0f); " is 126.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The length of the statement  "	mSpriteBatch.Draw (mRadarSprite' mCenter' null' Color.White' 0.0f' new Vector2 (mRange' mRange)' 1.0f' SpriteEffects.None' 1.0f); " is 129.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The length of the statement  "	mSpriteBatch.Draw (mDotSprite' mCenter + mJoyStick * mRange' null' Color.White' 0.0f' new Vector2 (mDotSprite.Width / 2.0f' mDotSprite.Height / 2.0f)' 1.0f' SpriteEffects.None' 1.0f); " is 183.
Long Statement,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The length of the statement  "	mSpriteBatch.DrawString (mFont' String.Format ("Animation: {0}\nState: {1}\nDirection: {2}\nPosition: {3}' {4}"' mAnimations [mIndex].Name' mState' mDirection' mPosition.X' mPosition.Y)' new Vector2 (10' 10)' Color.Black' 0.0f' Vector2.Zero' 0.75f' SpriteEffects.None' 1.0f); " is 275.
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,LoadContent,The following statement contains a magic number: mCenter = new Vector2 (SCREEN_WIDTH - mRange - 10' SCREEN_HEIGHT - mRange - 10);  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,LoadContent,The following statement contains a magic number: mCenter = new Vector2 (SCREEN_WIDTH - mRange - 10' SCREEN_HEIGHT - mRange - 10);  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (dist > DEAD_ZONE) {  	if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  		mDirection = Direction.West;  	else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  		mDirection = Direction.NorthWest;  	else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  		mDirection = Direction.North;  	else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  		mDirection = Direction.NorthEast;  	else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  		mDirection = Direction.East;  	else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  		mDirection = Direction.SouthEast;  	else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  		mDirection = Direction.South;  	else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  		mDirection = Direction.SouthWest;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / -8.0 >= angle && angle < Math.PI * 5.0 / -8.0)  	mDirection = Direction.West;  else if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / -8.0 >= angle && angle < Math.PI * 3.0 / -8.0)  	mDirection = Direction.NorthWest;  else if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / -8.0 >= angle && angle < Math.PI * 1.0 / -8.0)  	mDirection = Direction.North;  else if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / -8.0 >= angle && angle < Math.PI * 1.0 / 8.0)  	mDirection = Direction.NorthEast;  else if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 1.0 / 8.0 >= angle && angle < Math.PI * 3.0 / 8.0)  	mDirection = Direction.East;  else if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 3.0 / 8.0 >= angle && angle < Math.PI * 5.0 / 8.0)  	mDirection = Direction.SouthEast;  else if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 5.0 / 8.0 >= angle && angle < Math.PI * 7.0 / 8.0)  	mDirection = Direction.South;  else if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (Math.PI * 7.0 / 8.0 >= angle && angle < Math.PI * 9.0 / 8.0)  	mDirection = Direction.SouthWest;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState != lastState || mDirection != lastDirection) {  	int mod = 0;  	if (mState == State.Walk)  		mod = 1;  	else if (mState == State.Run)  		mod = 2;  	switch (mDirection) {  	case Direction.North:  		mIndex = 1 + mod * 4;  		break;  	case Direction.South:  		mIndex = 0 + mod * 4;  		break;  	case Direction.East:  		mIndex = 3 + mod * 4;  		break;  	case Direction.West:  		mIndex = 2 + mod * 4;  		break;  	case Direction.SouthEast:  		mIndex = 12;  		break;  	case Direction.SouthWest:  		mIndex = 13;  		break;  	case Direction.NorthWest:  		mIndex = 14;  		break;  	case Direction.NorthEast:  		mIndex = 15;  		break;  	}  	mFrame = 0;  	mCounter = 0.0f;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState == State.Walk)  	mod = 1;  else if (mState == State.Run)  	mod = 2;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: if (mState == State.Run)  	mod = 2;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mod = 2;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 1 + mod * 4;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 0 + mod * 4;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 3 + mod * 4;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 3 + mod * 4;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 2 + mod * 4;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 2 + mod * 4;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 12;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 13;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 14;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following statement contains a magic number: mIndex = 15;  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The following statement contains a magic number: mSpriteBatch.DrawString (mFont' String.Format ("Animation: {0}\nState: {1}\nDirection: {2}\nPosition: {3}' {4}"' mAnimations [mIndex].Name' mState' mDirection' mPosition.X' mPosition.Y)' new Vector2 (10' 10)' Color.Black' 0.0f' Vector2.Zero' 0.75f' SpriteEffects.None' 1.0f);  
Magic Number,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Draw,The following statement contains a magic number: mSpriteBatch.DrawString (mFont' String.Format ("Animation: {0}\nState: {1}\nDirection: {2}\nPosition: {3}' {4}"' mAnimations [mIndex].Name' mState' mDirection' mPosition.X' mPosition.Y)' new Vector2 (10' 10)' Color.Black' 0.0f' Vector2.Zero' 0.75f' SpriteEffects.None' 1.0f);  
Missing Default,Pokeymanz,PokeymanzGame,C:\repos\jasonwnorris_Pokeymanz\Pokeymanz\PokeymanzGame.cs,Update,The following switch statement is missing a default case: switch (mDirection) {  case Direction.North:  	mIndex = 1 + mod * 4;  	break;  case Direction.South:  	mIndex = 0 + mod * 4;  	break;  case Direction.East:  	mIndex = 3 + mod * 4;  	break;  case Direction.West:  	mIndex = 2 + mod * 4;  	break;  case Direction.SouthEast:  	mIndex = 12;  	break;  case Direction.SouthWest:  	mIndex = 13;  	break;  case Direction.NorthWest:  	mIndex = 14;  	break;  case Direction.NorthEast:  	mIndex = 15;  	break;  }  
