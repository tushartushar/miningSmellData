Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Limit_Orderby_And_Skip,The length of the statement  "            var result = _collection.Find(new { Name = Q.NotEqual(new int?()) }' new { Name = OrderBy.Descending }' 3' 1).ToArray(); " is 120.
Long Statement,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingProperty,The length of the statement  "            _collection.Insert(new Person { Name = "Lisa Cool"' Address = { Street = "300 Main St"' City = "Anytown"' State = "CO"' Zip = "45123" } }); " is 139.
Long Statement,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingProperty,The length of the statement  "            _collection.Insert(new Person { Name = "Joe Cool"' Address = { Street = "123 Main St"' City = "Anytown"' State = "CO"' Zip = "45123" } }); " is 138.
Long Statement,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingProperty,The length of the statement  "            _collection.Insert(new Person { Name = "Sam Cool"' Address = { Street = "300 Main St"' City = "Anytown"' State = "CO"' Zip = "45123" } }); " is 138.
Long Statement,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingChildProperty,The length of the statement  "            _collection.Insert(new Person { Name = "Joe Cool"' Address = { Street = "123 Main St"' City = "Anytown"' State = "CO"' Zip = "45123" } }); " is 138.
Long Statement,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingChildProperty,The length of the statement  "            _collection.Insert(new Person { Name = "Sam Cool"' Address = { Street = "300 Main St"' City = "Anytown"' State = "CO"' Zip = "45123" } }); " is 138.
Long Statement,Norm.Tests,UpdateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateTests.cs,UpdateMustSpecifyEverything,The length of the statement  "            //Note' when doing an update' MongoDB replaces everything in your document except the id. So' if you don't re-specify a property' it'll disappear. " is 146.
Long Statement,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationOfInheritenceIsNotLossy_EvenWhenDiscriminatorIsOnAnInterfaceAndWeTryToDeserializeUsingTheInterface,The length of the statement  "            var hydratedObj1 = (InterfaceDiscriminatedClass)BsonDeserializer.Deserialize<IDiscriminated>(BsonSerializer.Serialize(obj1)); " is 125.
Long Statement,Norm.Tests,ConnectionProviderFactoryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionProviderFactoryTests.cs,ReturnsAPooledConnectionProvider,The length of the statement  "            Assert.IsType(typeof(PooledConnectionProvider)' ConnectionProviderFactory.Create("mongodb://localhost/test?pooling=true")); " is 123.
Long Statement,Norm.Tests,ConnectionProviderFactoryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionProviderFactoryTests.cs,ReturnsNormalConnectionProvider,The length of the statement  "            Assert.IsType(typeof(NormalConnectionProvider)' ConnectionProviderFactory.Create("mongodb://localhost/test?pooling=false")); " is 124.
Long Statement,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ThrowsExceptionWhenProtocolIsInvalid,The length of the statement  "            Assert.Equal("Connection String must start with 'mongodb://' or be the name of a connection string in the app.config."' ex.Message); " is 132.
Long Statement,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesComplexConnectionString,The length of the statement  "            var builder = ConnectionStringBuilder.Create("mongodb://its:over@host'goku:9001/dbz?strict=false&pooling=true&poolsize=100"); " is 125.
Long Statement,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,OverridesStrictMode,The length of the statement  "            using (var connection = new DisposableConnection(ConnectionStringBuilder.Create(TestHelper.ConnectionString("?strict=true")))) " is 126.
Long Statement,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,OverridesQueryTimeout,The length of the statement  "            using (var connection = new DisposableConnection(ConnectionStringBuilder.Create(TestHelper.ConnectionString("querytimeout=30")))) " is 129.
Long Statement,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,ResetsDefaults,The length of the statement  "            using (var connection = new DisposableConnection(ConnectionStringBuilder.Create(TestHelper.ConnectionString("querytimeout=30&strict=false")))) " is 142.
Long Statement,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,CreatesDigestFromNonce,The length of the statement  "            using (var connection = new DisposableConnection(ConnectionStringBuilder.Create(TestHelper.ConnectionString("querytimeout=30&strict=false"' "ussrr"' "ppaassss")))) " is 163.
Long Statement,Norm.Tests,PooledConnectionProviderAuthenticationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderAuthenticationTests.cs,ThrowsExceptionIfConnectingWithInvalidCredentials,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(AuthenticatedConnectionString("bad"' "boy"))); " is 121.
Long Statement,Norm.Tests,PooledConnectionProviderAuthenticationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderAuthenticationTests.cs,AuthenticatesWithProperCredentials,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(AuthenticatedConnectionString("usr"' "pss"))); " is 121.
Long Statement,Norm.Tests,NormalConnectionProviderAuthenticationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\NormalConnectionProviderAuthenticationTests.cs,ThrowsExceptionIfConnectingWithInvalidCredentials,The length of the statement  "            var provider = new NormalConnectionProvider(ConnectionStringBuilder.Create(AuthenticatedConnectionString("bad"' "boy"))); " is 121.
Long Statement,Norm.Tests,NormalConnectionProviderAuthenticationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\NormalConnectionProviderAuthenticationTests.cs,AuthenticatesWithProperCredentials,The length of the statement  "            var provider = new NormalConnectionProvider(ConnectionStringBuilder.Create(AuthenticatedConnectionString("usr"' "pss"))); " is 121.
Long Statement,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,ClosingAConnectionReturnsItToThePool,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(TestHelper.ConnectionString("pooling=true&poolsize=1"))); " is 132.
Long Statement,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,ThrowsExceptionIfNoConnectionsAvailable,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(TestHelper.ConnectionString("pooling=true&poolsize=1&timeout=1"))); " is 142.
Long Statement,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,WaitsUntilTimeoutForConnectionToFreeUpAndThrowsExceptionIfNot,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(TestHelper.ConnectionString("pooling=true&poolsize=1&timeout=3"))); " is 142.
Long Statement,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,WaitsUntilTimeoutForConnectionToFreeUp,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(TestHelper.ConnectionString("pooling=true&poolsize=1&timeout=3"))); " is 142.
Long Statement,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,ReturnsDifferentConnections,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(TestHelper.ConnectionString("pooling=true&poolsize=2"))); " is 132.
Long Statement,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,PoolsUpToPoolSizeConections,The length of the statement  "            var provider = new PooledConnectionProvider(ConnectionStringBuilder.Create(TestHelper.ConnectionString("pooling=true&poolsize=4&timeout=1"))); " is 142.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ClosingAConnectionReturnsItToThePool,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=1")); " is 123.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,NewConnectionsAreCreatedWhenQueueIsEmpty,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=1&timeout=1")); " is 133.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ReturnsDifferentConnections,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=2")); " is 123.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,PoolsUpToPoolSizeConections,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=4")); " is 123.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,PoolReusesConnectionsUponConnectionClose,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=2")); " is 123.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,PoolReusesQueuedConnections,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=2")); " is 123.
Long Statement,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ThreadsSharePooledConnections,The length of the statement  "            var provider = new QueuedConnectionProvider(ConnectionStringBuilder.Create("mongodb://localhost?pooling=true&poolsize=3")); " is 123.
Long Statement,Norm.Tests,IdPropertyFinderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\IdPropertyFinderTests.cs,FindIdProperty_Throws_MongoConfigurationException_When_Entity_Has__id_And_MongoIdentifierAttribute,The length of the statement  "            Assert.Throws<MongoConfigurationMapException>(() => new IdPropertyFinder(typeof(EntityWithUnderscoreidAndAttribute)).IdProperty); " is 129.
Long Statement,Norm.Tests,IdPropertyFinderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\IdPropertyFinderTests.cs,FindIdProperty_Throws_MongoConfigurationException_When_Entity_Has__id_And_MappedId,The length of the statement  "            Assert.Throws<MongoConfigurationMapException>(() => new IdPropertyFinder(typeof(EntityWithUnderscoreidAndAttribute)).IdProperty); " is 129.
Long Statement,Norm.Tests,IdPropertyFinderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\IdPropertyFinderTests.cs,FindIdProperty_Returns_Attribute_Defined_Id_Property_When_Entity_Has_Attribute_Defined_Id_And_Conventional_Id,The length of the statement  "            Assert.Equal("AttributeDefinedId"' new IdPropertyFinder(typeof(EntityWithAttributeDefindIdAndConventionalId)).IdProperty.Name); " is 127.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The length of the statement  "                session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } }); " is 157.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The length of the statement  "                session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The length of the statement  "                session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The length of the statement  "                session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } }); " is 157.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The length of the statement  "                session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The length of the statement  "                session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The length of the statement  "                session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } }); " is 157.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The length of the statement  "                session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The length of the statement  "                session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The length of the statement  "                session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } }); " is 157.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The length of the statement  "                session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The length of the statement  "                session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } }); " is 142.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithMultipleWhereClause,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(p => Regex.IsMatch(p.Name' "^te") && p.Price == 10).ToList(); " is 126.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptions,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(p => Regex.IsMatch(p.Name' "TEST1"' RegexOptions.Multiline | RegexOptions.IgnoreCase)).ToList(); " is 161.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptionsInComplexQuery,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(p => Regex.IsMatch(p.Name' "TEST1"' RegexOptions.Multiline | RegexOptions.IgnoreCase) && p.Name.StartsWith("tes")).ToList(); " is 189.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansInComplexQuery,The length of the statement  "                var queryable = session.Products; var list = queryable.Where(x => !x.IsAvailable && (!x.IsAvailable || x.IsStillAvailable)).ToList(); " is 133.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseOr,The length of the statement  "                session.Add(new TestProduct { Name = "1"' Price = 10' Inventory = new List<InventoryChange>() { new InventoryChange() } }); " is 123.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The length of the statement  "                session.Add(new TestProduct { Name = "1"' Price = 10' Inventory = new List<InventoryChange>() { new InventoryChange() } }); " is 123.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The length of the statement  "                session.Add(new TestProduct { Name = "2"' Price = 20' Inventory = new List<InventoryChange>() { new InventoryChange() } }); " is 123.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The length of the statement  "                var queryable = session.Products; var list = queryable.Where(x => x.Supplier.CreatedOn == date || x.Price == 13).ToList(); " is 122.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexInComplexQuery,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(p => Regex.IsMatch(p.Name' "^te") && p.Name == "test1").ToList(); " is 130.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The length of the statement  "                var queryable = session.Products; var products = queryable.OrderBy(x => x.Price).ThenByDescending(x => x.Name).ToList(); " is 120.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The length of the statement  "                var queryable = session.Products; var products = queryable.OrderBy(x => x.Price).ThenByDescending(x => x.Name).Where(x => x.Price == 50).Skip(1).Take(1).ToList(); " is 162.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Name.StartsWith("X") || x.Name.EndsWith("X")).ToList(); " is 127.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Price > 10 && x.Price < 40 && x.Price != 33).ToList(); " is 126.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Available == new DateTime(2000' 2' 5)).ToList(); " is 120.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Available.DayOfWeek == DayOfWeek.Monday).ToList(); " is 122.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenStartsAndEndsWithX,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Name.StartsWith("X") && x.Name.EndsWith("X")).ToList(); " is 127.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Name.StartsWith("X\"Test") && x.Name.EndsWith("X")).ToList(); " is 133.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Name.EndsWith("\"5X") && x.Name.StartsWith("X")).ToList(); " is 130.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(x => x.Name.Length == 4).ToList().OrderBy(x => x.Price).ToArray(); " is 131.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(p => p._id == targetId && p.Available.Day == 6).ToList(); " is 122.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The length of the statement  "                var queryable = session.Products; var products = queryable.Where(p => p._id != targetId && p.Available.Day == 5).ToList(); " is 122.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingAny,The length of the statement  "                var post1 = new Post { Title = "First"' Comments = new List<Comment> { new Comment { Text = "comment1" }' new Comment { Text = "comment2" } } }; " is 144.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingAny,The length of the statement  "                var post2 = new Post { Title = "Second"' Comments = new List<Comment> { new Comment { Text = "commentA"' Name = "name1" }' new Comment { Text = "commentB"' Name = "name2" } } }; " is 177.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingAnyWithBoolNegated,The length of the statement  "                var post1 = new Post { Title = "First"' Comments = new List<Comment> { new Comment { Text = "comment1"' IsOld = false }' new Comment { Text = "comment2"' IsOld = false } } }; " is 174.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingAnyWithBoolNegated,The length of the statement  "                var post2 = new Post { Title = "Second"' Comments = new List<Comment> { new Comment { Text = "commentA"' Name = "name1"' IsOld = true }' new Comment { Text = "commentB"' Name = "name2"' IsOld = true } } }; " is 205.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingTwoAnys,The length of the statement  "                var post1 = new Post { Title = "First"' Comments = new List<Comment> { new Comment { Text = "comment1" }' new Comment { Text = "comment2" } } }; " is 144.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingTwoAnys,The length of the statement  "                var post2 = new Post { Title = "Second"' Comments = new List<Comment> { new Comment { Text = "commentA" }' new Comment { Text = "commentB"' CommentTags = new List<Tag> { new Tag { TagName = "Cool" }' new Tag { TagName = "Yes" } } } } }; " is 236.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingAnyWithNoParameters,The length of the statement  "                var post2 = new Post { Title = "Second"' Comments = new List<Comment> { new Comment { Text = "commentA"' Name = "name1" }' new Comment { Text = "commentB"' Name = "name2" } } }; " is 177.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingArrayIdentifiers,The length of the statement  "                var post1 = new Post { Title = "First"' Comments = new List<Comment> { new Comment { Text = "comment1" }' new Comment { Text = "comment2" } } }; " is 144.
Long Statement,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,CanQueryWithinEmbeddedArrayUsingArrayIdentifiers,The length of the statement  "                var post2 = new Post { Title = "Second"' Comments = new List<Comment> { new Comment { Text = "commentA"' Name = "name1" }' new Comment { Text = "commentB"' Name = "name2" } } }; " is 177.
Long Statement,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,CreatesACollectionWithTheSpecifiedOutputName,The length of the statement  "                    var result = mr.Execute(new MapReduceOptions<ReduceProduct> { Map = _map' Reduce = _reduce' OutputCollectionName = "TempMr" }); " is 127.
Long Statement,Norm.Tests,IMongoAdminTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoAdminTests.cs,ReturnsBuildInfo,The length of the statement  "                process.StartInfo = new ProcessStartInfo("mongod"' "--version") { RedirectStandardOutput = true' UseShellExecute = false }; " is 123.
Long Statement,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,SaveOrInsertThrowsExceptionIfTypeDoesntHaveAnId,The length of the statement  "                Assert.Equal("This collection does not accept insertions/updates' this is due to the fact that the collection's type Norm.Tests.Address does not specify an identifier property"' ex.Message); " is 190.
Long Statement,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertThrowsExcpetionOnDuplicateKeyAndStrictMode,The length of the statement  "                var ex = Assert.Throws<MongoException>(() => mongo.GetCollection<IntId>("Fake").Insert(new IntId { Id = 4' Name = "Test 2" })); " is 127.
Long Statement,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,DeletesObjectsBasedOnTemplate,The length of the statement  "                collection.Insert(new[] { new TestProduct { Price = 10 }' new TestProduct { Price = 5 }' new TestProduct { Price = 1 } }); " is 122.
Long Statement,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MapReduceIsSuccessful,The length of the statement  "            var _reduce = "function(key' values){var sumPrice = 0;for(var i = 0; i < values.length; ++i){sumPrice += values[i];} return sumPrice;}"; " is 136.
Long Statement,Norm.Tests,MongoConfigurationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoConfigurationTests.cs,Can_Register_TypeConverter,The length of the statement  "            MongoConfiguration.Initialize(c => c.TypeConverterFor<NonSerializableValueObject' NonSerializableValueObjectTypeConverter>()); " is 126.
Long Statement,Norm.Tests,MongoConfigurationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoConfigurationTests.cs,Can_Register_TypeConverter,The length of the statement  "            IBsonTypeConverter converter = MongoConfiguration.ConfigurationContainer.GetTypeConverterFor(typeof(NonSerializableValueObject)); " is 129.
Long Statement,Norm.Tests,MongoDatabaseTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoDatabaseTest.cs,CreateCollectionCreatesACappedCollection,The length of the statement  "                Assert.Equal(true' mongo.Database.CreateCollection(new CreateCollectionOptions("capped") { Capped = true' Size = 10000' Max = 3 })); " is 132.
Empty Catch Block,Norm.Tests,Shoppers,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\TestClasses.cs,Drop,The method has an empty catch block.
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierAll,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 2d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierAll,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 3d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierAll,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 4d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierAll,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierAll,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierExists,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierExists,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierExists,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierExists,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierExists,The following statement contains a magic number: Assert.Equal(5' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierEquals,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 3 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierEquals,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 4 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierEquals,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 5 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierEquals,The following statement contains a magic number: Assert.Equal(results.Count()' 2);
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotEqual,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.NotEqual(2d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotEqual,The following statement contains a magic number: Assert.Equal(4' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 2 }'                           new TestClass { ADouble = 3 }'                           new TestClass { ADouble = 4 }'                           new TestClass { ADouble = 5 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 2 }'                           new TestClass { ADouble = 3 }'                           new TestClass { ADouble = 4 }'                           new TestClass { ADouble = 5 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 2 }'                           new TestClass { ADouble = 3 }'                           new TestClass { ADouble = 4 }'                           new TestClass { ADouble = 5 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 1 }'                           new TestClass { ADouble = 2 }'                           new TestClass { ADouble = 3 }'                           new TestClass { ADouble = 4 }'                           new TestClass { ADouble = 5 });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierIn,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.NotIn(1d' 3d' 5d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.NotIn(1d' 3d' 5d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierNotIn,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterThan,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.GreaterThan(2d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterThan,The following statement contains a magic number: Assert.Equal(3' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterOrEqual,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.GreaterOrEqual(2d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierGreaterOrEqual,The following statement contains a magic number: Assert.Equal(4' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessThan,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessThan,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.LessThan(2d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessOrEqual,The following statement contains a magic number: _coll.Insert(new TestClass { ADouble = 1d }'                           new TestClass { ADouble = 2d }'                           new TestClass { ADouble = 3d }'                           new TestClass { ADouble = 4d }'                           new TestClass { ADouble = 5d });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessOrEqual,The following statement contains a magic number: var results = _coll.Find(new { ADouble = Q.LessOrEqual(2d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierLessOrEqual,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierSize,The following statement contains a magic number: var results = _coll.Find(new { AStringArray = Q.Size(3d) });
Magic Number,Norm.Tests,MongoSearchQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\MongoSearchQualifierTests.cs,FindOneQualifierSize,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindUsesLimit,The following statement contains a magic number: var result = _collection.Find(new { }' 3).ToArray();
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindUsesLimit,The following statement contains a magic number: Assert.Equal(3' result.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Count_Works,The following statement contains a magic number: Assert.Equal(4' result);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,DateTime_GreaterThan_Qualifier_Works,The following statement contains a magic number: _collection.Insert(new Person { Birthday = new DateTime(1910' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,DateTime_GreaterThan_Qualifier_Works,The following statement contains a magic number: _collection.Insert(new Person { Birthday = new DateTime(1920' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,DateTime_GreaterThan_Qualifier_Works,The following statement contains a magic number: _collection.Insert(new Person { Birthday = new DateTime(1930' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,DateTime_GreaterThan_Qualifier_Works,The following statement contains a magic number: var find = _collection.Find(new { Birthday = Q.GreaterThan(new DateTime(1920' 1' 1)) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Element_Match_Matches,The following statement contains a magic number: Assert.Equal(2' coll.Find(new { Comments = Q.ElementMatch(new { Text = Q.Matches("^x") }) }).Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Limit_Orderby_And_Skip,The following statement contains a magic number: var result = _collection.Find(new { Name = Q.NotEqual(new int?()) }' new { Name = OrderBy.Descending }' 3' 1).ToArray();
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Limit_Orderby_And_Skip,The following statement contains a magic number: Assert.Equal(3' result.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Limit_Orderby_And_Skip,The following statement contains a magic number: Assert.Equal("AAA"' result[2].Name);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Query_And_Orderby,The following statement contains a magic number: Assert.Equal(3' result.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Query_And_Orderby,The following statement contains a magic number: Assert.Equal("BBB"' result[2].Name);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Query_And_Orderby_And_Limit,The following statement contains a magic number: var result = _collection.Find(new { Name = Q.NotEqual("DDD") }' new { Name = OrderBy.Descending }' 2' 0).ToArray();
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Query_And_Orderby_And_Limit,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Null_Qualifier,The following statement contains a magic number: var result = _collection.Find(new { Name = Q.IsNull() }' new { Name = OrderBy.Descending }' 2' 0).ToArray();
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Find_Uses_Null_Qualifier,The following statement contains a magic number: Assert.Equal(4' result.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingProperty,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithSort,The following statement contains a magic number: _collection.Insert(new Person { Name = "Third"' LastContact = new DateTime(2010' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithSort,The following statement contains a magic number: _collection.Insert(new Person { Name = "First"' LastContact = new DateTime(2000' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithSort,The following statement contains a magic number: _collection.Insert(new Person { Name = "Second"' LastContact = new DateTime(2005' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithSort,The following statement contains a magic number: Assert.Equal(3' people.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithSort,The following statement contains a magic number: Assert.Equal("Third"' people[2].Name);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithMultiSortOrdering,The following statement contains a magic number: _collection.Insert(new Person { Name = "Third"' LastContact = new DateTime(2010' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithMultiSortOrdering,The following statement contains a magic number: _collection.Insert(new Person { Name = "First"' LastContact = new DateTime(2005' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithMultiSortOrdering,The following statement contains a magic number: _collection.Insert(new Person { Name = "Second"' LastContact = new DateTime(2005' 1' 1) });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithMultiSortOrdering,The following statement contains a magic number: Assert.Equal(3' people.Length);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryWithMultiSortOrdering,The following statement contains a magic number: Assert.Equal("Second"' people[2].Name);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,BasicQueryUsingChildProperty,The following statement contains a magic number: Assert.Equal(2' results.Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Distinct_On_Collection_Should_Return_Arrays_As_Value_If_Earlier_Than_1_5_0,The following statement contains a magic number: Assert.Equal(3' results.Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,Distinct_On_Collection_Should_Return_Array_Values_In_1_5_0_Or_Later,The following statement contains a magic number: Assert.Equal(4' results.Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,DistinctOnSimpleProperty,The following statement contains a magic number: Assert.Equal(4' results.Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,DistinctOnComplexProperty,The following statement contains a magic number: Assert.Equal(3' results.Count());
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModify,The following statement contains a magic number: _collection.Insert(new Person { Name = "Joe Cool"' Age = 10 });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModify,The following statement contains a magic number: Assert.Equal(10' result.Age);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModify,The following statement contains a magic number: Assert.Equal(11' result2.Age);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyWithSort,The following statement contains a magic number: _collection.Insert(new Person { Name = "Joe Cool"' Age = 10 });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyWithSort,The following statement contains a magic number: _collection.Insert(new Person { Name = "Joe Cool"' Age = 15 });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyWithSort,The following statement contains a magic number: Assert.Equal(15' result.Age);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyWithSort,The following statement contains a magic number: Assert.Equal(16' result2[0].Age);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyWithSort,The following statement contains a magic number: Assert.Equal(10' result2[1].Age);
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyReturnsNullWhenQueryNotFound,The following statement contains a magic number: _collection.Insert(new Person { Name = "Joe Cool"' Age = 10 });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyReturnsNullWhenQueryNotFound,The following statement contains a magic number: _collection.Insert(new Person { Name = "Joe Cool"' Age = 15 });
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,FindAndModifyReturnsNullWhenQueryNotFound,The following statement contains a magic number: var result2 = _collection.Find(new { Age = 15 }).ToList();
Magic Number,Norm.Tests,QueryTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\QueryTests.cs,SliceOperatorBringsBackCorrectItems,The following statement contains a magic number: result = _collection.Find(new { }' new { _id = 1 }' new { Relatives = Q.Slice(1' 2) }' 1' 0).FirstOrDefault();
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: _collection.Insert(new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: _collection.Insert(new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: _collection.Insert(new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: _collection.Insert(new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: var result = _collection.Find(new { AInteger = Q.LessThan(81).And(Q.GreaterThan(78)) }).ToArray();
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: var result = _collection.Find(new { AInteger = Q.LessThan(81).And(Q.GreaterThan(78)) }).ToArray();
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: Assert.Equal(79' result[0].AInteger);
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifierAnd,The following statement contains a magic number: Assert.Equal(80' result[1].AInteger);
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: _collection.Insert(                  new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: _collection.Insert(                  new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: _collection.Insert(                  new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: _collection.Insert(                  new TestClass { AInteger = 78 }'                  new TestClass { AInteger = 79 }'                  new TestClass { AInteger = 80 }'                  new TestClass { AInteger = 81 });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: var result = _collection.Find(                  Q.Or(new { AInteger = Q.LessOrEqual(78) }'                  new { AInteger = Q.GreaterOrEqual(81) })                  ).ToArray();
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: var result = _collection.Find(                  Q.Or(new { AInteger = Q.LessOrEqual(78) }'                  new { AInteger = Q.GreaterOrEqual(81) })                  ).ToArray();
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: Assert.Equal(78' result[0].AInteger);
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,MultiQualifieOr,The following statement contains a magic number: Assert.Equal(81' result[1].AInteger);
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,WhereExpressionShouldWorkWithFlyweight,The following statement contains a magic number: _collection.Insert(new TestClass { ADouble = 2d });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,WhereExpressionShouldWorkWithFlyweight,The following statement contains a magic number: _collection.Insert(new TestClass { ADouble = 3d });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,WhereExpressionShouldWorkWithFlyweight,The following statement contains a magic number: _collection.Insert(new TestClass { ADouble = 4d });
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,WhereExpressionShouldWorkWithFlyweight,The following statement contains a magic number: Assert.Equal(4' count.Count());
Magic Number,Norm.Tests,WhereQualifierTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionFindTests\WhereQualifierTests.cs,WhereExpressionShouldWorkWithFlyweight,The following statement contains a magic number: Assert.Equal(3' results.Count());
Magic Number,Norm.Tests,UpdateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateTests.cs,Update_Multiple_With_Lambda_Works,The following statement contains a magic number: Assert.Equal(2' _collection.Find(new { Name = "Cheese" }).Count());
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,DoesntSerializeIgnoredProperties,The following statement contains a magic number: var o = new GeneralDTO {IgnoredProperty = 4};
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAFloat,The following statement contains a magic number: var o = new GeneralDTO {AFloat = 1.4f};
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAFloat,The following statement contains a magic number: Assert.Equal(1.4f' BsonDeserializer.Deserialize<GeneralDTO>(BsonSerializer.Serialize(o)).AFloat);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationOfNestedObjectsIsNotLossy,The following statement contains a magic number: var obj1 = new GeneralDTO { Title = "Hello World"' Nester = new GeneralDTO { Title = "Bob"' AnInt = 42 } };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,RecursiveNestedTypesDontCauseInfiniteLoop,The following statement contains a magic number: var obj1 = new GeneralDTO { Title = "Hello World"' Nester = new GeneralDTO { Title = "Bob"' AnInt = 42 } };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationOfDoublesAreNotLossy,The following statement contains a magic number: var obj1 = new GeneralDTO { Pi = 3.1415927d };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationOfIEnumerableTIsNotLossy,The following statement contains a magic number: Assert.Equal(2' gto2.AnIEnumerable.Count());
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationOfIntsAreNotLossy,The following statement contains a magic number: var obj1 = new GeneralDTO { AnInt = 100 };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationOfBytesIsNotLossy,The following statement contains a magic number: i < 1000
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var obj1 = new GeneralDTO              {                  Flags64 = Flags64.FlagOff'                  Flags32 = Flags32.FlagOn'                  Pi = 2d'                  AnInt = 3'                  Title = "telti"'                  ABoolean = false'                  Strings = new[] { "a"' "bb"' "abc" }'                  Bytes = new byte[] { 1' 2' 3 }'                  AGuid = Guid.NewGuid()'                  ADateTime = new DateTime(2001' 4' 8' 10' 43' 23' 104)'                  ARex = new Regex("it's over (9000)"' RegexOptions.IgnoreCase)              };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesAndDeserializesAComplexObject,The following statement contains a magic number: var nested = new GeneralDTO { Pi = 43d' Title = "little"' ARex = new Regex("^over (9000)$") };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationSpeedTest,The following statement contains a magic number: var obj1 = new GeneralDTO                                     {                                         Title = null'                                         ABoolean = true'                                         AGuid = Guid.NewGuid()'                                         AnInt = 1'                                         Pi = 3.14'                                         Nester = new GeneralDTO { Title = "Bob"' AnInt = 42 }                                     };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationSpeedTest,The following statement contains a magic number: var obj1 = new GeneralDTO                                     {                                         Title = null'                                         ABoolean = true'                                         AGuid = Guid.NewGuid()'                                         AnInt = 1'                                         Pi = 3.14'                                         Nester = new GeneralDTO { Title = "Bob"' AnInt = 42 }                                     };
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationSpeedTest,The following statement contains a magic number: j < 10000
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializationSpeedTest,The following statement contains a magic number: i < 5
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesWithPrivateSetter,The following statement contains a magic number: var start = new PrivateSetter(4);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesReadonlyICollection,The following statement contains a magic number: Assert.Equal(2' end.Names.Count);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesDictionary,The following statement contains a magic number: start.Names.Add("Duncan Idaho"' 2);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesDictionary,The following statement contains a magic number: Assert.Equal(2' end.Names.ElementAt(0).Value);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesIDictionary,The following statement contains a magic number: start.Names.Add("Duncan Idaho"' 2);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesIDictionary,The following statement contains a magic number: Assert.Equal(2' end.Names.ElementAt(0).Value);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesReadonlyDictionary,The following statement contains a magic number: start.Names.Add("Duncan Idaho"' 2);
Magic Number,Norm.Tests,BSONSerializerTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\BSONSerializerTest.cs,SerializesReadonlyDictionary,The following statement contains a magic number: Assert.Equal(2' end.Names.ElementAt(0).Value);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesSingleHost,The following statement contains a magic number: Assert.Equal(27017' builder.Servers[0].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesSingleHostWithPort,The following statement contains a magic number: Assert.Equal(123' builder.Servers[0].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesMultipleHosts,The following statement contains a magic number: Assert.Equal(2' builder.Servers.Count);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesMultipleHosts,The following statement contains a magic number: Assert.Equal(27017' builder.Servers[0].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesMultipleHosts,The following statement contains a magic number: Assert.Equal(27017' builder.Servers[1].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesMultipleHostsWithPorts,The following statement contains a magic number: Assert.Equal(2' builder.Servers.Count);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesMultipleHostsWithPorts,The following statement contains a magic number: Assert.Equal(8999' builder.Servers[0].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesMultipleHostsWithPorts,The following statement contains a magic number: Assert.Equal(9001' builder.Servers[1].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,QueryTimeoutIs30ByDefault,The following statement contains a magic number: Assert.Equal(30' ConnectionStringBuilder.Create("mongodb://localhost").QueryTimeout);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesQueryTimeoutOption,The following statement contains a magic number: Assert.Equal(15' ConnectionStringBuilder.Create("mongodb://localhost?querytimeout=15").QueryTimeout);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,PoolSizeIs25ByDefault,The following statement contains a magic number: Assert.Equal(25' ConnectionStringBuilder.Create("mongodb://localhost").PoolSize);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesPoolSizeOption,The following statement contains a magic number: Assert.Equal(24' ConnectionStringBuilder.Create("mongodb://localhost?poolsize=24").PoolSize);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,TimeoutIs30ByDefault,The following statement contains a magic number: Assert.Equal(30' ConnectionStringBuilder.Create("mongodb://localhost").Timeout);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesTimeoutOption,The following statement contains a magic number: Assert.Equal(14' ConnectionStringBuilder.Create("mongodb://localhost?timeout=14").Timeout);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,LifetimeIs15ByDefault,The following statement contains a magic number: Assert.Equal(15' ConnectionStringBuilder.Create("mongodb://localhost").Lifetime);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesLifetimeOption,The following statement contains a magic number: Assert.Equal(13' ConnectionStringBuilder.Create("mongodb://localhost?lifetime=13").Lifetime);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesComplexConnectionString,The following statement contains a magic number: Assert.Equal(2' builder.Servers.Count);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesComplexConnectionString,The following statement contains a magic number: Assert.Equal(27017' builder.Servers[0].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesComplexConnectionString,The following statement contains a magic number: Assert.Equal(9001' builder.Servers[1].Port);
Magic Number,Norm.Tests,CreateTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionStringBuilderTests.cs,ParsesComplexConnectionString,The following statement contains a magic number: Assert.Equal(100' builder.PoolSize);
Magic Number,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,OverridesQueryTimeout,The following statement contains a magic number: Assert.Equal(30' connection.QueryTimeout);
Magic Number,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,OverridesQueryTimeout,The following statement contains a magic number: Assert.Equal(32' connection.QueryTimeout);
Magic Number,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,ResetsDefaults,The following statement contains a magic number: Assert.Equal(23' connection.QueryTimeout);
Magic Number,Norm.Tests,ConnectionTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\ConnectionTest.cs,ResetsDefaults,The following statement contains a magic number: Assert.Equal(30' connection.QueryTimeout);
Magic Number,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,WaitsUntilTimeoutForConnectionToFreeUpAndThrowsExceptionIfNot,The following statement contains a magic number: Assert.True(elasped > 3);
Magic Number,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,WaitsUntilTimeoutForConnectionToFreeUpAndThrowsExceptionIfNot,The following statement contains a magic number: Assert.True(elasped < 4);
Magic Number,Norm.Tests,PooledConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\PooledConnectionProviderTests.cs,WaitsUntilTimeoutForConnectionToFreeUp,The following statement contains a magic number: new Timer(c => provider.Close(connection)' null' 2000' 0);
Magic Number,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ThreadsSharePooledConnections,The following statement contains a magic number: i < 10
Magic Number,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ThreadsSharePooledConnections,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ThreadsSharePooledConnections,The following statement contains a magic number: Assert.Equal(10' idList.Count);
Magic Number,Norm.Tests,QueuedConnectionProviderTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\ConnectionsTests\QueuedConnectionProviderTests.cs,ThreadsSharePooledConnections,The following statement contains a magic number: Assert.True(connectionCount < 10);
Magic Number,Norm.Tests,ObjectIdTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\ObjectIdTests.cs,TryParseReturnsFalseIfObjectIdIsnt24Characters,The following statement contains a magic number: Assert.Equal(false' ObjectId.TryParse(new string('b'' 23)' out objectId));
Magic Number,Norm.Tests,ObjectIdTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\ObjectIdTests.cs,TryParseReturnsFalseIfObjectIdIsnt24Characters,The following statement contains a magic number: Assert.Equal(false' ObjectId.TryParse(new string('b'' 25)' out objectId));
Magic Number,Norm.Tests,ObjectIdTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\ObjectIdTests.cs,TryParseReturnsFalseIfObjectIdIsinvalid,The following statement contains a magic number: Assert.Equal(false' ObjectId.TryParse(new string('*'' 24)' out objectId));
Magic Number,Norm.Tests,ObjectIdTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\ObjectIdTests.cs,TryParseReturnsFalseIfObjectIdIsinvalid,The following statement contains a magic number: Assert.Equal(false' ObjectId.TryParse(new string('1'' 23) + '-'' out objectId));
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn3WhenThreeProductsInDB,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn3WhenThreeProductsInDB,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn3WhenThreeProductsInDB,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn3WhenThreeProductsInDB,The following statement contains a magic number: Assert.Equal(3' productQueryable.Count());
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn2WhenThreeProductsInDBAndWherePriceGreaterThan20,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn2WhenThreeProductsInDBAndWherePriceGreaterThan20,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn2WhenThreeProductsInDBAndWherePriceGreaterThan20,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn2WhenThreeProductsInDBAndWherePriceGreaterThan20,The following statement contains a magic number: var result = queryable.Where(x => x.Price > 20).Count();
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,CountShouldReturn2WhenThreeProductsInDBAndWherePriceGreaterThan20,The following statement contains a magic number: Assert.Equal(2' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,Count_Should_Return_One_When_Id_Matches,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 40' _id = target });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,Count_Should_Return_One_When_Id_Matches,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22' _id = ObjectId.NewObjectId() });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,Count_Should_Return_One_When_Id_Matches,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33' _id = ObjectId.NewObjectId() });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn60WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: session.Add(new TestProduct { Name = "dd"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn60WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: session.Add(new TestProduct { Name = "ss"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn60WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: session.Add(new TestProduct { Name = "asdasddds"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn60WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: Assert.Equal(60' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndPriceLessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndPriceLessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndPriceLessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndPriceLessThan30,The following statement contains a magic number: var result =queryable.Where(x => x.Price < 30).Sum(x => x.Price);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndPriceLessThan30,The following statement contains a magic number: Assert.Equal(30' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndNameContains1or2,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndNameContains1or2,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndNameContains1or2,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,SumShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndNameContains1or2,The following statement contains a magic number: Assert.Equal(30' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn20WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn20WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn20WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn20WhenThreeProductsInDBWIthSumPrice60,The following statement contains a magic number: Assert.Equal(20' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn15WhenThreeProductsInDBWIthSumPrice60AndLessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn15WhenThreeProductsInDBWIthSumPrice60AndLessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn15WhenThreeProductsInDBWIthSumPrice60AndLessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn15WhenThreeProductsInDBWIthSumPrice60AndLessThan30,The following statement contains a magic number: var result = queryable.Where(x => x.Price < 30).Average(x => x.Price);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn15WhenThreeProductsInDBWIthSumPrice60AndLessThan30,The following statement contains a magic number: Assert.Equal(15' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn500Point5WhenSumOfAllNumbersUpTo1000,The following statement contains a magic number: i < 1000
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AvgShouldReturn500Point5WhenSumOfAllNumbersUpTo1000,The following statement contains a magic number: Assert.Equal(500.5' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MinShouldReturn10WhenThreeProductsInDBWIthSumPrice60AndLowestIs10,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MinShouldReturn10WhenThreeProductsInDBWIthSumPrice60AndLowestIs10,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MinShouldReturn10WhenThreeProductsInDBWIthSumPrice60AndLowestIs10,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MinShouldReturn10WhenThreeProductsInDBWIthSumPrice60AndLowestIs10,The following statement contains a magic number: Assert.Equal(10' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MaxShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndHighestIs30,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MaxShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndHighestIs30,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MaxShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndHighestIs30,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,MaxShouldReturn30WhenThreeProductsInDBWIthSumPrice60AndHighestIs30,The following statement contains a magic number: Assert.Equal(30' result);
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10,The following statement contains a magic number: Assert.True(queryable.Any(x => x.Price == 10));
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10AndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10AndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10AndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10AndWhere,The following statement contains a magic number: Assert.True(queryable.Where(x => x.Price < 30).Any(x => x.Price == 10));
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductPrice10AndWhere,The following statement contains a magic number: Assert.True(queryable.Where(x => x.Price < 30).Any(x => x.Price == 10));
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductList,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductList,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnTrueWhenProductList,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnFalseWhenProductPrice100,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnFalseWhenProductPrice100,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnFalseWhenProductPrice100,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqAggregates,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqAggregates.cs,AnyShouldReturnFalseWhenProductPrice100,The following statement contains a magic number: Assert.False(queryable.Any(x => x.Price == 100));
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,OneProductShouldBeReturnedWhenNestedSupplierQueried,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve" } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,OneProductShouldBeReturnedWhenNestedSupplierQueried,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,OneProductShouldBeReturnedWhenNestedSupplierQueried,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByDateMath,The following statement contains a magic number: var products = queryable.Where(x => x.Supplier.CreatedOn.Year < 2001).ToList();
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddress,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithAndExpression,The following statement contains a magic number: var products = queryable.Where(x => x.Supplier.Address.State == "HI" && x.Price == 10).ToList();
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2000' 2' 1)' Address = add } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2001' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33' Supplier = new Supplier { Name = "Steve"' CreatedOn = new DateTime(2002' 2' 1) } });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: var products = queryable.Where(x => x.Supplier.Address.State == "HI" || x.Price == 33).ToList();
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,SupplierShouldBeQuerybleByAddressAndWorkWithOrExpression,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,InventorySubqueryShouldReturnOneForTwoProducts,The following statement contains a magic number: var p = new TestProduct() { Name = "Test1"' Price = 10 };
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,InventorySubqueryShouldReturnOneForTwoProducts,The following statement contains a magic number: p = new TestProduct() { Name = "Test3"' Price = 10 };
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,InventorySubqueryShouldReturnOneForTwoProducts,The following statement contains a magic number: p.Inventory.Add(new InventoryChange() { AmountChanged = 2 });
Magic Number,Norm.Tests,LinqDeepGraph,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqDeepGraph.cs,InventorySubqueryShouldReturnOneForTwoProducts,The following statement contains a magic number: var products = queryable.Where(x => x.Inventory.Count() > 2).ToArray();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjection,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsSophisticatedProjection,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsSophisticatedProjectionWithConcreteType,The following statement contains a magic number: coll.Insert(new TestProduct { Name = "AAA"' Price = 10 }' new TestProduct { Name = "BBB"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsSophisticatedProjectionWithConcreteType,The following statement contains a magic number: coll.Insert(new TestProduct { Name = "AAA"' Price = 10 }' new TestProduct { Name = "BBB"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsSophisticatedProjectionWithConcreteType,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhere,The following statement contains a magic number: session.Add(new TestProduct { Price = 22' Name = "AA" });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhere,The following statement contains a magic number: session.Add(new TestProduct { Price = 11' Name = "BB" });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhere,The following statement contains a magic number: var results = queryable                      .Select(y => new { y.Price })                      .Where(x => x.Price == 22)                      .ToArray();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhere,The following statement contains a magic number: Assert.Equal(22' results[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhereFirst,The following statement contains a magic number: session.Add(new TestProduct { Price = 22' Name = "AA" });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhereFirst,The following statement contains a magic number: session.Add(new TestProduct { Price = 11' Name = "BB" });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ProviderSupportsProjectionInAnyOrderWithWhereFirst,The following statement contains a magic number: Assert.Equal(22' results[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalParameters,The following statement contains a magic number: var external = 10;
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalParameters,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalParameters,The following statement contains a magic number: session.Add(new TestProduct { Name = "test"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalParameters,The following statement contains a magic number: Assert.Equal(10' product.Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNulls,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNulls,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNulls,The following statement contains a magic number: Assert.Equal(20' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportIsNotNulls,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportIsNotNulls,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportIsNotNulls,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegex,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegex,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegex,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithMultipleWhereClause,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithMultipleWhereClause,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithMultipleWhereClause,The following statement contains a magic number: var products = queryable.Where(p => Regex.IsMatch(p.Name' "^te") && p.Price == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithMultipleWhereClause,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptions,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptions,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptions,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptionsInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptionsInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexWithOptionsInComplexQuery,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultiplication,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultiplication,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultiplication,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultiplication,The following statement contains a magic number: var list = queryable.Where(x => x.Price * 2 == 20).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultiplication,The following statement contains a magic number: var list = queryable.Where(x => x.Price * 2 == 20).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' IsAvailable = false });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleans,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleans,The following statement contains a magic number: Assert.Equal(50' list.Sum(x => x.Price));
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' IsAvailable = false });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansWithNegation,The following statement contains a magic number: Assert.Equal(10' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansExplicitly,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansExplicitly,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' IsAvailable = false });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansExplicitly,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansExplicitly,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansExplicitly,The following statement contains a magic number: Assert.Equal(50' list.Sum(x => x.Price));
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' IsAvailable = false' IsStillAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBooleansInComplexQuery,The following statement contains a magic number: Assert.Equal(10' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' IsAvailable = false });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' IsAvailable = true' IsStillAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleans,The following statement contains a magic number: session.Add(new TestProduct { Name = "4"' Price = 40 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleans,The following statement contains a magic number: Assert.Equal(30' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' IsAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' IsAvailable = false });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' IsAvailable = true' IsStillAvailable = true });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleansWithNegation,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportMultipleBooleansWithNegation,The following statement contains a magic number: Assert.Equal(20' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseOr,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseOr,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' Inventory = new List<InventoryChange>() { new InventoryChange() } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseOr,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseOr,The following statement contains a magic number: var list = queryable.Where(x => (x.Inventory.Count() | 2) == 3).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseOr,The following statement contains a magic number: var list = queryable.Where(x => (x.Inventory.Count() | 2) == 3).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' Inventory = new List<InventoryChange>() { new InventoryChange() } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' Inventory = new List<InventoryChange>() { new InventoryChange() } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "3"'                      Price = 30'                      Inventory = new List<InventoryChange>() {                      new InventoryChange()' new InventoryChange() }                  });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The following statement contains a magic number: var list = queryable.Where(x => (x.Inventory.Count() & 2) == 2).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The following statement contains a magic number: var list = queryable.Where(x => (x.Inventory.Count() & 2) == 2).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportBitwiseAnd,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Quantity = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Quantity = 20' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Quantity = 20' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Quantity = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: var list = queryable.Where(x => x.Quantity >= 20 && x.Price == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: var list = queryable.Where(x => x.Quantity >= 20 && x.Price == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: Assert.Equal(20' list[0].Quantity);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: list = session.Products.Where(x => x.Quantity <= 20 && x.Price == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: list = session.Products.Where(x => x.Quantity <= 20 && x.Price == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: Assert.Equal(20' list[0].Quantity);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: list = session.Products.Where(x => x.Quantity < 20).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: Assert.Equal(10' list[0].Quantity);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: list = session.Products.Where(x => x.Quantity > 20).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeComparisonWithInt,The following statement contains a magic number: Assert.Equal(30' list[0].Quantity);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportContainsWithComplexQueryWithNoList,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportContainsWithComplexQueryWithNoList,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportContainsWithComplexQueryWithNoList,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarInWithNoList,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarInWithNoList,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarInWithNoList,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarIn,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarIn,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarIn,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryUsingDollarIn,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportNativeContainsQueryComplexQuery,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var datelater = new DateTime(2010' 3' 1' 15' 33' 34);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var datelater = new DateTime(2010' 3' 1' 15' 33' 34);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var datelater = new DateTime(2010' 3' 1' 15' 33' 34);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var datelater = new DateTime(2010' 3' 1' 15' 33' 34);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: var datelater = new DateTime(2010' 3' 1' 15' 33' 34);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' Available = datelater });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' Available = date });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30' Available = date });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTime,The following statement contains a magic number: Assert.Equal(10' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' Available = date });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: var list = queryable.Where(x => x.Available == date || x.Price == 13).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeInComplexQuery,The following statement contains a magic number: Assert.Equal(10' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: var date = new DateTime(2010' 3' 1' 15' 33' 33);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10' Available = date });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20' Supplier = new Supplier { CreatedOn = date } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: var list = queryable.Where(x => x.Supplier.CreatedOn == date || x.Price == 13).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDateTimeNested,The following statement contains a magic number: Assert.Equal(20' list[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDivision,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDivision,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDivision,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDivision,The following statement contains a magic number: var list = queryable.Where(x => x.Price / 2 == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportDivision,The following statement contains a magic number: var list = queryable.Where(x => x.Price / 2 == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportAddition,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportAddition,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportAddition,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportAddition,The following statement contains a magic number: var list = queryable.Where(x => x.Price + 2 == 32).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportAddition,The following statement contains a magic number: var list = queryable.Where(x => x.Price + 2 == 32).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportSubtraction,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportSubtraction,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportSubtraction,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportSubtraction,The following statement contains a magic number: var list = queryable.Where(x => x.Price - 6 == 24).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportSubtraction,The following statement contains a magic number: var list = queryable.Where(x => x.Price - 6 == 24).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ContainsShouldReturnBothItems,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ContainsShouldReturnBothItems,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ContainsShouldReturnBothItems,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ContainsShouldReturnBothItems,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ContainsShouldReturnBothItems,The following statement contains a magic number: Assert.Equal(30' list.Sum(x => x.Price));
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = null' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportRegexInComplexQuery,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,SingleQualifierQueryIsExecutedAsANDQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,SingleQualifierQueryIsExecutedAsANDQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "test"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,SingleQualifierQueryIsExecutedAsANDQuery,The following statement contains a magic number: var product = queryable.Where(p => p.Price == 10).Single();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,SingleQualifierQueryIsExecutedAsANDQuery,The following statement contains a magic number: Assert.Equal(10' product.Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstQualifierQueryIsExecutedWithSort,The following statement contains a magic number: session.Add(new TestProduct { Name = "test1"' Price = 20 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstQualifierQueryIsExecutedWithSort,The following statement contains a magic number: session.Add(new TestProduct { Name = "test"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstQualifierQueryIsExecutedWithSort,The following statement contains a magic number: Assert.Equal(10' product.Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalObjectProperties,The following statement contains a magic number: var external = new TestProduct { Price = 10 };
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalObjectProperties,The following statement contains a magic number: session.Add(new TestProduct { Name = "test"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalObjectProperties,The following statement contains a magic number: Assert.Equal(10' product[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalObjectProperties2,The following statement contains a magic number: var external = new TestProduct { Price = 10' Supplier = another };
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalObjectProperties2,The following statement contains a magic number: session.Add(new TestProduct { Name = "test"' Price = 30 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,LinqQueriesShouldSupportExternalObjectProperties2,The following statement contains a magic number: Assert.Equal(10' product.Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhereComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhereComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhereComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhereComplexQuery,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhereComplexQuery,The following statement contains a magic number: var result = products.Where(x => x.Price < 30);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhereComplexQuery,The following statement contains a magic number: Assert.Equal(22' result.SingleOrDefault().Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhere,The following statement contains a magic number: var result = queryable.Where(x => x.Price < 30);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenThreeInDBWithChainedWhere,The following statement contains a magic number: Assert.Equal(22' result.SingleOrDefault().Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPrice,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 40 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPrice,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPrice,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPrice,The following statement contains a magic number: Assert.Equal(22' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPrice,The following statement contains a magic number: Assert.Equal(40' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPrice,The following statement contains a magic number: Assert.Equal(40' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByDeepAlias,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 40' Supplier = new Supplier { Name = "1" } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByDeepAlias,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22' Supplier = new Supplier { Name = "2" } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByDeepAlias,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33' Supplier = new Supplier { Name = "3" } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByDeepAlias,The following statement contains a magic number: Assert.Equal(40' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByDeepAlias,The following statement contains a magic number: Assert.Equal(33' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByDeepAlias,The following statement contains a magic number: Assert.Equal(33' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(22' products[1].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(33' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(33' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(50' products[3].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(50' products[3].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(50' products[4].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal(50' products[4].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal("1"' products[3].Name);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByName,The following statement contains a magic number: Assert.Equal("2"' products[4].Name);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(22' products[1].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(33' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(33' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(50' products[3].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(50' products[3].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(50' products[4].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal(50' products[4].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal("2"' products[3].Name);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedByPriceThenByNameDescending,The following statement contains a magic number: Assert.Equal("1"' products[4].Name);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: var products = queryable.OrderByDescending(x => x.Price).Skip(3).Take(1).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceThenSkipThreeAndTakeOne,The following statement contains a magic number: Assert.Equal(22' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "6"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "5"' Price = 50 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: var products = queryable.OrderBy(x => x.Price).ThenByDescending(x => x.Name).Where(x => x.Price == 50).Skip(1).Take(1).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhenFiveInDBOrderedByPriceAndWhereThenSkipTwoAndTakeOne,The following statement contains a magic number: Assert.Equal(50' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedDewscendingByPrice,The following statement contains a magic number: session.Add(new TestProduct { Name = "1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedDewscendingByPrice,The following statement contains a magic number: session.Add(new TestProduct { Name = "2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedDewscendingByPrice,The following statement contains a magic number: session.Add(new TestProduct { Name = "3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedDewscendingByPrice,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedDewscendingByPrice,The following statement contains a magic number: Assert.Equal(10' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenThreeInDBOrderedDewscendingByPrice,The following statement contains a magic number: Assert.Equal(10' products[2].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLower,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLower,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLower,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLower,The following statement contains a magic number: Assert.Equal(22' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLowerInvariant,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLowerInvariant,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLowerInvariant,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToLowerInvariant,The following statement contains a magic number: Assert.Equal(22' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpper,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpper,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpper,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpper,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperInvariant,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperInvariant,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperInvariant,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperInvariant,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperAndContains,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperAndContains,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperAndContains,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenToUpperAndContains,The following statement contains a magic number: Assert.Equal(3' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenSubstringUsedWithLength,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestName1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenSubstringUsedWithLength,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestName2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenSubstringUsedWithLength,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestName3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenSubstringUsedWithLength,The following statement contains a magic number: var products = queryable.Where(x => x.Name.Substring(2' 4) == "stNa").ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenSubstringUsedWithLength,The following statement contains a magic number: var products = queryable.Where(x => x.Name.Substring(2' 4) == "stNa").ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenSubstringUsedWithLength,The following statement contains a magic number: Assert.Equal(3' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenSubstringUsedWithOutLength,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestName1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenSubstringUsedWithOutLength,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestName2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenSubstringUsedWithOutLength,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestName3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenSubstringUsedWithOutLength,The following statement contains a magic number: var products = queryable.Where(x => x.Name.Substring(2) == "stName2").ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenSubstringUsedWithOutLength,The following statement contains a magic number: Assert.Equal(22' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FourProductsShouldBeReturnedWhenStartsOrEndsWithX,The following statement contains a magic number: Assert.Equal(4' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10,The following statement contains a magic number: var products = queryable.Where(x => x.Price == 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10AndNameTest3,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10AndNameTest3,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10AndNameTest3,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceEqual10AndNameTest3,The following statement contains a magic number: var products = queryable.Where(x => x.Price == 10 && x.Name == "Test3").ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan30,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 && x.Price < 30).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan30,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 && x.Price < 30).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 && x.Price < 40 && x.Price != 33).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 && x.Price < 40 && x.Price != 33).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 && x.Price < 40 && x.Price != 33).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhen3InDbWithPriceGreaterThan10LessThan40AndNot33,The following statement contains a magic number: Assert.Equal(22' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsFifth,The following statement contains a magic number: var products = queryable.Where(x => x.Available.Day == 5).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2000' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: var products = queryable.Where(x => x.Available == new DateTime(2000' 2' 5)).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: var products = queryable.Where(x => x.Available == new DateTime(2000' 2' 5)).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDateIsSameAsRequired,The following statement contains a magic number: var products = queryable.Where(x => x.Available == new DateTime(2000' 2' 5)).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = DateTime.Now });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = DateTime.Now.AddDays(1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10' Available = DateTime.Now.AddDays(2) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10' Available = DateTime.Now.AddDays(2) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(3) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(3) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(4) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(4) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableDayIsMonday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableGreaterThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableGreaterThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableGreaterThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableGreaterThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableLessThanTodayPlus1,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableLessThanTodayPlus1,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableLessThanTodayPlus1,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableLessThanTodayPlus1,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(2) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableLessThanTodayPlus1,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(2) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 3' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 3' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 3' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 3' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableMonthIs2,The following statement contains a magic number: var products = queryable.Where(x => x.Available.Month == 2).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = new DateTime(2001' 2' 6) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenAvailableYearIs2000,The following statement contains a magic number: var products = queryable.Where(x => x.Available.Year == 2000).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIndexOfXEqual2,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIndexOfXEqual2,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIndexOfXEqual2,The following statement contains a magic number: session.Add(new TestProduct { Name = "TesXt5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIndexOfXEqual2,The following statement contains a magic number: session.Add(new TestProduct { Name = "TeXst3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIndexOfXEqual2,The following statement contains a magic number: session.Add(new TestProduct { Name = "TXest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIndexOfXEqual2,The following statement contains a magic number: var products = queryable.Where(x => x.Name.IndexOf("X") == 2).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: session.Add(new TestProduct { Name = "TXest5X"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: session.Add(new TestProduct { Name = "TeXst3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: session.Add(new TestProduct { Name = "TXest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: var products = queryable.Where(x => x.Name.LastIndexOf("X") == 6).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenLastIndexOfXEqual6,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceOfXWithY,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceOfXWithY,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceOfXWithY,The following statement contains a magic number: session.Add(new TestProduct { Name = "TXesXt5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceOfXWithY,The following statement contains a magic number: session.Add(new TestProduct { Name = "TeXst3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceOfXWithY,The following statement contains a magic number: session.Add(new TestProduct { Name = "TXest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceOfXWithY,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithEmptyString,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithEmptyString,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithEmptyString,The following statement contains a magic number: session.Add(new TestProduct { Name = ""' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithEmptyString,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithEmptyString,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithNull,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithNull,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithNull,The following statement contains a magic number: session.Add(new TestProduct { Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithNull,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenIsNullOrEmptyWithNull,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenStartsAndEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenStartsAndEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenStartsAndEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest5X"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenStartsAndEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenStartsAndEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhen3InDbWithNoExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhen3InDbWithNoExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhen3InDbWithNoExpression,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhen3InDbWithNoExpression,The following statement contains a magic number: Assert.Equal(3' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenAvailableLessThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenAvailableLessThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenAvailableLessThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10' Available = DateTime.Now.AddDays(-1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenAvailableLessThanToday,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22' Available = DateTime.Now.AddDays(1) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,ThreeProductsShouldBeReturnedWhenAvailableLessThanToday,The following statement contains a magic number: Assert.Equal(3' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenNotEqualsOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenNotEqualsOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenNotEqualsOne,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenNotEqualsOne,The following statement contains a magic number: var result = queryable.Where(x => x.Price != 22);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenNotEqualsOne,The following statement contains a magic number: Assert.Equal(2' result.Count());
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithFirst,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithFirst,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithFirst,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithFirst,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingle,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingle,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingle,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingle,The following statement contains a magic number: var result = queryable.SingleOrDefault(x => x.Price == 22);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingle,The following statement contains a magic number: Assert.Equal(22' result.Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedUsingSimpleANDQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedUsingSimpleANDQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedUsingSimpleANDQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedUsingSimpleANDQuery,The following statement contains a magic number: var results = queryable.Where(x => x.Price == 22 && x.Name == "Test3").ToArray();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedUsingSimpleANDQuery,The following statement contains a magic number: Assert.Equal(22' results[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingleUsingVariable,The following statement contains a magic number: var target = 22;
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingleUsingVariable,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingleUsingVariable,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductShouldBeReturnedWhen3InDbWithSingleUsingVariable,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceLessThan10OrGreaterThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceLessThan10OrGreaterThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceLessThan10OrGreaterThan30,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceLessThan10OrGreaterThan30,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 || x.Price > 30).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceLessThan10OrGreaterThan30,The following statement contains a magic number: var products = queryable.Where(x => x.Price > 10 || x.Price > 30).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhen3InDbWithPriceLessThan10OrGreaterThan30,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenContainsX,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenContainsX,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenContainsX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenContainsX,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenContainsUsesRegexEscapeChar,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenContainsUsesRegexEscapeChar,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test+X4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenContainsUsesRegexEscapeChar,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceContainsRegexEscapeChar,The following statement contains a magic number: session.Add(new TestProduct { Name = "TestX3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceContainsRegexEscapeChar,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test+X4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenReplaceContainsRegexEscapeChar,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenContainsMatchesFirstCharacter,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenContainsMatchesFirstCharacter,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,OneProductsShouldBeReturnedWhenContainsMatchesFirstCharacter,The following statement contains a magic number: session.Add(new TestProduct { Name = "CTest"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithX,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithX,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test5"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithX,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "X\"Test5X"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenStartsWithXWithQuoteComplex,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuote,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuote,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuote,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest\"5X"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuote,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuote,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuote,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3X"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4X"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest\"5X"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest3"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The following statement contains a magic number: session.Add(new TestProduct { Name = "XTest4"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsShouldBeReturnedWhenEndsWithXWithQuoteComplex,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test4"' Price = 44 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: var products = queryable.Skip(1).Take(2).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: Assert.Equal(22.0' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: Assert.Equal(33.0' products[1].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTake,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 44 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: var products = queryable.Where(x => x.Name == "Test").Skip(1).Take(2).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: Assert.Equal(33' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: Assert.Equal(44' products[1].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWithSkipTakeAndWhere,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test"' Price = 44 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: var products = queryable.Where(x => x.Name.Length == 4).ToList().OrderBy(x => x.Price).ToArray();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: Assert.Equal(10' products[0].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: Assert.Equal(44' products[1].Price);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,TwoProductsofFourShouldBeReturnedWhereLengthOfNameEquals4,The following statement contains a magic number: Assert.Equal(2' products.Length);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectId,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectId,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectId,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 6)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 6)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 6)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 6)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 7) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 7) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 7) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 7) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdInComplexQuery,The following statement contains a magic number: var products = queryable.Where(p => p._id == targetId && p.Available.Day == 6).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 5)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 5)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 5)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22' Available = new DateTime(2000' 2' 5)' _id = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33' Available = new DateTime(2000' 2' 5) });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: var products = queryable.Where(p => p._id != targetId && p.Available.Day == 5).ToList();
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FiltersBasedOnObjectIdExclusionInComplexQuery,The following statement contains a magic number: Assert.Equal(2' products.Count);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,Filters_Based_On_Guid,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test1"' Price = 10' UniqueID = targetId });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,Filters_Based_On_Guid,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test2"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,Filters_Based_On_Guid,The following statement contains a magic number: session.Add(new TestProduct { Name = "Test3"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMax,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMax,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMax,The following statement contains a magic number: session.Add(new TestProduct { Name = "CTest"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMax,The following statement contains a magic number: Assert.Equal(33' productMax);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMaxDeepQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10' Supplier = new Supplier { RefNum = 3 } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMaxDeepQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10' Supplier = new Supplier { RefNum = 3 } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMaxDeepQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22' Supplier = new Supplier { RefNum = 2 } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMaxDeepQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22' Supplier = new Supplier { RefNum = 2 } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMaxDeepQuery,The following statement contains a magic number: session.Add(new TestProduct { Name = "CTest"' Price = 33' Supplier = new Supplier { RefNum = 1 } });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceMaxDeepQuery,The following statement contains a magic number: Assert.Equal(3' productMax);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMax,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMax,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMax,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMax,The following statement contains a magic number: Assert.Equal(33' productMax);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMin,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMin,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMin,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,MapReduceWhereWithMin,The following statement contains a magic number: Assert.Equal(22' productMax);
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstWhereNoResultsReturnedInWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstWhereNoResultsReturnedInWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstWhereNoResultsReturnedInWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 33 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstOrDefaultWhereNoResultsReturnedInWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "ATest"' Price = 10 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstOrDefaultWhereNoResultsReturnedInWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 22 });
Magic Number,Norm.Tests,LinqTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\LinqTests\LinqTests.cs,FirstOrDefaultWhereNoResultsReturnedInWhere,The following statement contains a magic number: session.Add(new TestProduct { Name = "BTest"' Price = 33 });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceCreatesACollection,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceCreatesACollection,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,TemporaryCollectionIsCleanedUpWhenConnectionIsClosed,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,TemporaryCollectionIsCleanedUpWhenConnectionIsClosed,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,CreatesACollectionWithTheSpecifiedOutputName,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,CreatesACollectionWithTheSpecifiedOutputName,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,ActuallydoesAMapAndReduce,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,ActuallydoesAMapAndReduce,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,ActuallydoesAMapAndReduce,The following statement contains a magic number: Assert.Equal(4' r.Value);
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithQuerySpecified,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithQuerySpecified,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithQuerySpecified,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithQuerySpecified,The following statement contains a magic number: var _query = new {Price = Q.GreaterThan(2)};
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithQuerySpecified,The following statement contains a magic number: Assert.Equal(5' r.Value);
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithGenericMapReduceResponse,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }'                                                              new ReduceProduct { Price = 2.5f }'                                                              new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithGenericMapReduceResponse,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }'                                                              new ReduceProduct { Price = 2.5f }'                                                              new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithGenericMapReduceResponse,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct { Price = 1.5f }'                                                              new ReduceProduct { Price = 2.5f }'                                                              new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithGenericMapReduceResponse,The following statement contains a magic number: var _query = new { Price = Q.GreaterThan(2) };
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,MapReduceWithGenericMapReduceResponse,The following statement contains a magic number: Assert.Equal(5' r.Value);
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,SettingLimitLimitsTheNumberOfResults,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,SettingLimitLimitsTheNumberOfResults,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,NotSettingLimitDoesntLimitTheNumberOfResults,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,NotSettingLimitDoesntLimitTheNumberOfResults,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,NotSettingLimitDoesntLimitTheNumberOfResults,The following statement contains a magic number: Assert.Equal(2' collection.Find().Count());
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,FinalizesTheResults,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,MapReduceTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MapReduceTests.cs,FinalizesTheResults,The following statement contains a magic number: mongo.GetCollection<ReduceProduct>().Insert(new ReduceProduct {Price = 1.5f}'                                                              new ReduceProduct {Price = 2.5f});
Magic Number,Norm.Tests,IMongoAdminTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoAdminTests.cs,Set_Profile_Level_Changes_Profile_Level_And_Reports_Change,The following statement contains a magic number: mAdmin.SetProfileLevel(2' out prev)
Magic Number,Norm.Tests,IMongoAdminTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoAdminTests.cs,Get_Current_Profile_Level,The following statement contains a magic number: mAdmin.SetProfileLevel(2);
Magic Number,Norm.Tests,IMongoAdminTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoAdminTests.cs,Get_Current_Profile_Level,The following statement contains a magic number: level != 2d
Magic Number,Norm.Tests,IMongoAdminTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoAdminTests.cs,Get_Current_Profile_Level,The following statement contains a magic number: Assert.Equal(2' mAdmin.GetProfileLevel());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Unspecified_Type_Returns_Expando_When_No_Discriminator_Available,The following statement contains a magic number: coll.Insert(new IntId { Id = 5' Name = "hi there" }'                      new { Id = Guid.NewGuid()' Value = "22" }'                      new { _id = ObjectId.NewObjectId()' Key = 578 });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Unspecified_Type_Returns_Expando_When_No_Discriminator_Available,The following statement contains a magic number: coll.Insert(new IntId { Id = 5' Name = "hi there" }'                      new { Id = Guid.NewGuid()' Value = "22" }'                      new { _id = ObjectId.NewObjectId()' Key = 578 });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Unspecified_Type_Returns_Expando_When_No_Discriminator_Available,The following statement contains a magic number: Assert.Equal(3' allObjs.Length);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Get_Collection_Statistics_Works,The following statement contains a magic number: coll.Insert(new IntId { Id = 4' Name = "Test 1" });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Get_Collection_Statistics_Works,The following statement contains a magic number: coll.Insert(new IntId { Id = 5' Name = "Test 2" });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Get_Collection_Statistics_Works,The following statement contains a magic number: Assert.Equal(stats.Count' 2);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Collection_Returning_More_Than_4MB_Of_Docs_Works,The following statement contains a magic number: junkInTheTrunk.Add(new TestProduct()                                  {                                      Available = DateTime.Now'                                      Inventory = new List<InventoryChange> {                               new InventoryChange{                                  AmountChanged=5' CreatedOn=DateTime.Now                              }                      }'                                      Name = "Pogo Stick"'                                      Price = 42.0'                                      Supplier = new Supplier()                                      {                                          Address = new Address                                          {                                              Zip = "27701"'                                              City = "Durham"'                                              State = "NC"'                                              Street = "Morgan St."                                          }'                                          CreatedOn = DateTime.Now'                                          Name = "ACME"                                      }                                  });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Collection_Returning_More_Than_4MB_Of_Docs_Works,The following statement contains a magic number: junkInTheTrunk.Add(new TestProduct()                                  {                                      Available = DateTime.Now'                                      Inventory = new List<InventoryChange> {                               new InventoryChange{                                  AmountChanged=5' CreatedOn=DateTime.Now                              }                      }'                                      Name = "Pogo Stick"'                                      Price = 42.0'                                      Supplier = new Supplier()                                      {                                          Address = new Address                                          {                                              Zip = "27701"'                                              City = "Durham"'                                              State = "NC"'                                              Street = "Morgan St."                                          }'                                          CreatedOn = DateTime.Now'                                          Name = "ACME"                                      }                                  });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Collection_Returning_More_Than_4MB_Of_Docs_Works,The following statement contains a magic number: i < 16000
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Collection_Returning_More_Than_4MB_Of_Docs_Works,The following statement contains a magic number: Assert.InRange(bytes' 4194304' Int32.MaxValue);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_On_Collection_Returning_More_Than_4MB_Of_Docs_Works,The following statement contains a magic number: Assert.Equal(16000' mongo.GetCollection<TestProduct>("Fake").Find().Count());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_Subset_Returns_Appropriate_Subset,The following statement contains a magic number: admin.SetProfileLevel(2);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_Subset_Returns_Appropriate_Subset,The following statement contains a magic number: coll.Insert(new TestProduct                  {                      _id = oid'                      Price = 42.42f'                      Supplier = new Supplier                      {                          Name = "Bob's house of pancakes"'                          RefNum = 12'                          CreatedOn = DateTime.MinValue                      }                  });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_Subset_Returns_Appropriate_Subset,The following statement contains a magic number: coll.Insert(new TestProduct                  {                      _id = oid'                      Price = 42.42f'                      Supplier = new Supplier                      {                          Name = "Bob's house of pancakes"'                          RefNum = 12'                          CreatedOn = DateTime.MinValue                      }                  });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,Find_Subset_Returns_Appropriate_Subset,The following statement contains a magic number: Assert.Equal(42.42f' subset[0].Cost);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithNonObjectIdKey,The following statement contains a magic number: mongo.GetCollection<IntId>("Fake").Insert(new IntId { Id = 4' Name = "Test 1" });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithNonObjectIdKey,The following statement contains a magic number: mongo.GetCollection<IntId>("Fake").Insert(new IntId { Id = 5' Name = "Test 2" });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithNonObjectIdKey,The following statement contains a magic number: Assert.Equal(2' found.Count());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithNonObjectIdKey,The following statement contains a magic number: Assert.Equal(4' found.ElementAt(0).Id);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithNonObjectIdKey,The following statement contains a magic number: Assert.Equal(5' found.ElementAt(1).Id);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertThrowsExcpetionOnDuplicateKeyAndStrictMode,The following statement contains a magic number: mongo.GetCollection<IntId>("Fake").Insert(new IntId { Id = 4' Name = "Test 1" });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertThrowsExcpetionOnDuplicateKeyAndStrictMode,The following statement contains a magic number: var ex = Assert.Throws<MongoException>(() => mongo.GetCollection<IntId>("Fake").Insert(new IntId { Id = 4' Name = "Test 2" }));
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MongoCollectionEnsuresDeleteIndices,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "ExplainProduct"'                      Price = 10'                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                  });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MongoCollectionEnsuresDeleteIndices,The following statement contains a magic number: Assert.Equal(2' i);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MongoCollectionEnsuresDeletIndexByName,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "ExplainProduct"'                      Price = 10'                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                  });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MongoCollectionEnsuresDeletIndexByName,The following statement contains a magic number: Assert.Equal(4' i);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MongoCollectionEnsuresDeletIndexByName,The following statement contains a magic number: Assert.Equal(3' j);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,UpdatesEntityWithNonObjectIdKey,The following statement contains a magic number: mongo.GetCollection<IntId>("Fake").Insert(new IntId { Id = 4' Name = "Test" });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,UpdatesEntityWithNonObjectIdKey,The following statement contains a magic number: mongo.GetCollection<IntId>("Fake").Update(new { Id = 4 }' new { Name = "Updated" }' false' false);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,UpdatesEntityWithNonObjectIdKey,The following statement contains a magic number: Assert.Equal(4' found.ElementAt(0).Id);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithObjectIdKey,The following statement contains a magic number: mongo.GetCollection<TestProduct>("Fake").Insert(new TestProduct { _id = id1' Name = "Prod1"' Price=3 });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithObjectIdKey,The following statement contains a magic number: mongo.GetCollection<TestProduct>("Fake").Insert(new TestProduct { _id = id2' Name = "Prod2" ' Price=4});
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertsNewEntityWithObjectIdKey,The following statement contains a magic number: Assert.Equal(2' found.Count());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertingANewEntityWithNullableIntGeneratesAKeyComplex,The following statement contains a magic number: i < 15
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertingANewEntityWithNullableIntGeneratesAKeyComplexWith2Collections,The following statement contains a magic number: i < 15
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,InsertingANewEntityWithNullableIntGeneratesAKeyComplexWith2Collections,The following statement contains a magic number: i < 15
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,DeletesObjectsBasedOnTemplate,The following statement contains a magic number: collection.Insert(new[] { new TestProduct { Price = 10 }' new TestProduct { Price = 5 }' new TestProduct { Price = 1 } });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,DeletesObjectsBasedOnTemplate,The following statement contains a magic number: collection.Insert(new[] { new TestProduct { Price = 10 }' new TestProduct { Price = 5 }' new TestProduct { Price = 1 } });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,DeletesObjectsBasedOnTemplate,The following statement contains a magic number: Assert.Equal(3' collection.Count());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,DeletesObjectsBasedOnTemplate,The following statement contains a magic number: Assert.Equal(2' collection.Count());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,DeletesEntityBasedOnItsId,The following statement contains a magic number: Assert.Equal(2' collection.Count());
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MapReduceIsSuccessful,The following statement contains a magic number: collection.Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MapReduceIsSuccessful,The following statement contains a magic number: collection.Insert(new ReduceProduct { Price = 1.5f }' new ReduceProduct { Price = 2.5f });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,MapReduceIsSuccessful,The following statement contains a magic number: Assert.Equal(4' r.Value);
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,StringAsIdentifierDoesTranslation,The following statement contains a magic number: collection.Insert(new StringIdentifier { CollectionName = "test"' ServerHi = 2 });
Magic Number,Norm.Tests,MongoCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoCollectionTests.cs,StringAsIdentifierDoesTranslation,The following statement contains a magic number: Assert.Equal(2' result.ServerHi);
Magic Number,Norm.Tests,MongoConfigurationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoConfigurationTests.cs,Subclass_Adheres_To_Superclass_Fluent_Alias,The following statement contains a magic number: Assert.Equal(2' found.Count());
Magic Number,Norm.Tests,MongoDatabaseTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoDatabaseTest.cs,CreateCollectionCreatesACappedCollection,The following statement contains a magic number: Assert.Equal(true' mongo.Database.CreateCollection(new CreateCollectionOptions("capped") { Capped = true' Size = 10000' Max = 3 }));
Magic Number,Norm.Tests,MongoDatabaseTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoDatabaseTest.cs,CreateCollectionCreatesACappedCollection,The following statement contains a magic number: Assert.Equal(true' mongo.Database.CreateCollection(new CreateCollectionOptions("capped") { Capped = true' Size = 10000' Max = 3 }));
Magic Number,Norm.Tests,MongoDatabaseTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoDatabaseTest.cs,CreateCollectionCreatesACappedCollection,The following statement contains a magic number: Assert.Equal(3' collection.Find().Count());
Magic Number,Norm.Tests,MongoDatabaseTest,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoDatabaseTest.cs,SetProfilingLevel,The following statement contains a magic number: Assert.True((response.PreviousLevel == 2.0));
Magic Number,Norm.Tests,MongoOptimizationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoOptimizationTests.cs,MongoCollectionEnsuresIndicies,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "ExplainProduct"'                      Price = 10'                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                  });
Magic Number,Norm.Tests,MongoOptimizationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoOptimizationTests.cs,MongoQueryExplainsExecutionPlansForFlyweightQueries,The following statement contains a magic number: session.Add(new TestProduct                                  {                                      Name = "ExplainProduct"'                                      Price = 10'                                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                                  });
Magic Number,Norm.Tests,MongoOptimizationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoOptimizationTests.cs,MongoQueryExplainsExecutionPlans,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "ExplainProduct"'                      Price = 10'                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                  });
Magic Number,Norm.Tests,MongoOptimizationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoOptimizationTests.cs,MongoQueryExplainsLinqExecutionPlans,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "ExplainProduct"'                      Price = 10'                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                  });
Magic Number,Norm.Tests,MongoOptimizationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoOptimizationTests.cs,MongoQuerySupportsHintsForLinqQueries,The following statement contains a magic number: session.Add(new TestProduct                                  {                                      Name = "ExplainProduct"'                                      Price = 10'                                      Supplier = new Supplier {Name = "Supplier"' CreatedOn = DateTime.Now}                                  });
Magic Number,Norm.Tests,MongoOptimizationTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\MongoOptimizationTests.cs,MongoQuerySupportschainingHintsForLinqQueries,The following statement contains a magic number: session.Add(new TestProduct                  {                      Name = "ExplainProduct"'                      Price = 10'                      Supplier = new Supplier { Name = "Supplier"' CreatedOn = DateTime.Now }                  });
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostScoreShouldBeEqualThreeWhenApplyingIncrementBy2CommandToScoreEqOne,The following statement contains a magic number: _collection.UpdateOne(new { _id = post.Id }' new { Score = M.Increment(2)' Title = M.Set("ss") });
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostScoreShouldBeEqualThreeWhenApplyingIncrementBy2CommandToScoreEqOne,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostScoreShouldBeEqualOneWhenApplyingIncrementByMinus2CommandToScoreEqThree,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostScoreShouldBeEqualOneWhenApplyingIncrementByMinus2CommandToScoreEqThree,The following statement contains a magic number: _collection.UpdateOne(new { _id = post.Id }' new { Score = M.Increment(-2) });
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostTitleShouldBeEqual_NoRm_WhenApplyingSetModifierCommandToTitle,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostTitleShouldBeEqual_NoRm_WhenApplyingSetModifierCommandToTitle,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualOneWhenApplyingPushModifierCommandToPostWithNoComments,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualOneWhenApplyingPushModifierCommandToPostWithNoComments,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualTwoWhenApplyingPushModifierCommandToPostWithOneComment,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualTwoWhenApplyingPushModifierCommandToPostWithOneComment,The following statement contains a magic number: Assert.Equal(2' result.Comments.Count);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualTwoWhenApplyingPushModifierCommandToPostWithOneComment,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualTwoWhenApplyingPushAllModifieWith2CommentsToPostWithNoComments,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualTwoWhenApplyingPushAllModifieWith2CommentsToPostWithNoComments,The following statement contains a magic number: Assert.Equal(2' result.Comments.Count);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualTwoWhenApplyingPushAllModifieWith2CommentsToPostWithNoComments,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualThreeWhenApplyingPushAllModifieWith2CommentsToPostWithOneComment,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualThreeWhenApplyingPushAllModifieWith2CommentsToPostWithOneComment,The following statement contains a magic number: Assert.Equal(3' result.Comments.Count);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PostCommentsCountShouldBeEqualThreeWhenApplyingPushAllModifieWith2CommentsToPostWithOneComment,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,AddToSet_Should_Add_When_Element_Doesnt_Exist_In_1_3_3_Or_Later,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,AddToSet_Should_Add_When_Element_Doesnt_Exist_In_1_3_3_Or_Later,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,AddToSet_Should_Not_Add_When_Element_Already_Exists_In_1_3_3_Or_Later,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,AddToSet_Should_Not_Add_When_Element_Already_Exists_In_1_3_3_Or_Later,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullingTag_NoSql_FromPostWith_NoSql_TagWithPullModifierShouldRemoveThatTag,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullingTag_NoSql_FromPostWith_NoSql_TagWithPullModifierShouldRemoveThatTag,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PushAll_Modifier_Expression_Works,The following statement contains a magic number: Assert.Equal(4' result.Tags.Count);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,Increment_Modifier_Expression_Works,The following statement contains a magic number: var post = new Post { Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,Increment_Modifier_Expression_Works,The following statement contains a magic number: _collection.Update(post.Id' op => op.Increment(prop => prop.Score' 5));
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,Increment_Modifier_Expression_Works,The following statement contains a magic number: Assert.Equal(8' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullingTag_NoSql_FromPostWithout_NoSql_TagWithPullModifierShouldDoNothing,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullingTag_NoSql_FromPostWithout_NoSql_TagWithPullModifierShouldDoNothing,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullingTag_NoSql_FromPostWith_NoSql_Tag_And_ABC_TagWithPullModifierShouldRemoveOnly_NoSql_Tag,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullingTag_NoSql_FromPostWith_NoSql_Tag_And_ABC_TagWithPullModifierShouldRemoveOnly_NoSql_Tag,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PopModifierLastItemUsage,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PopModifierLastItemUsage,The following statement contains a magic number: Assert.Equal(2' result.Tags.Count);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PopModifierLastItemUsage,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PopModifierFirstItemUsage,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PopModifierFirstItemUsage,The following statement contains a magic number: Assert.Equal(2' result.Tags.Count);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PopModifierFirstItemUsage,The following statement contains a magic number: Assert.Equal(3' result.Score);
Magic Number,Norm.Tests.CollectionUpdateTests,UpdateModifiersTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\CollectionUpdateTests\UpdateModifiersTests.cs,PullAllModifierUsage,The following statement contains a magic number: var post = new Post { Title = "About the name 2"' Score = 3 };
Magic Number,NoRM.Tests.DBTypeTests,GridFSTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\GridFSTests.cs,GridFSTests,The following statement contains a magic number: this._randomBytes.Write(BitConverter.GetBytes(r.NextDouble())' 0' 8);
Magic Number,NoRM.Tests.DBTypeTests,GridFSTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\GridFSTests.cs,GridFSTests,The following statement contains a magic number: i < 1024 * 1024 * 1.5
Magic Number,NoRM.Tests.DBTypeTests,GridFSTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\GridFSTests.cs,GridFSTests,The following statement contains a magic number: i < 1024 * 1024 * 1.5
Magic Number,NoRM.Tests.DBTypeTests,GridFSTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\DBTypeTests\GridFSTests.cs,GridFSTests,The following statement contains a magic number: i < 1024 * 1024 * 1.5
Magic Number,NoRM.Tests,JSONParserTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\JSONParser.cs,ParserCanParseMemberAndNumber,The following statement contains a magic number: Assert.Equal(-3.1415d' result["Pi"]);
Magic Number,NoRM.Tests,JSONParserTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\JSONParser.cs,ParserCanParseMemberAndNumber,The following statement contains a magic number: Assert.Equal(3.14d' result["Pie"]);
Magic Number,NoRM.Tests,JSONParserTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\JSONParser.cs,ParserCanParseArray,The following statement contains a magic number: Assert.True(values.SequenceEqual(new object[] { 1d' 2d' 3d }));
Magic Number,NoRM.Tests,JSONParserTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\JSONParser.cs,ParserCanParseArray,The following statement contains a magic number: Assert.True(values.SequenceEqual(new object[] { 1d' 2d' 3d }));
Magic Number,NoRM.Tests.GridFS,GridFileCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\GridFS\GridFileCollectionTests.cs,File_Save_Is_Not_Lossy,The following statement contains a magic number: var ms = new MemoryStream(8000000);
Magic Number,NoRM.Tests.GridFS,GridFileCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\GridFS\GridFileCollectionTests.cs,File_Save_Is_Not_Lossy,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(i)' 0' 4);
Magic Number,NoRM.Tests.GridFS,GridFileCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\GridFS\GridFileCollectionTests.cs,File_Save_Is_Not_Lossy,The following statement contains a magic number: i < 2000000
Magic Number,NoRM.Tests.GridFS,GridFileCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\GridFS\GridFileCollectionTests.cs,File_Delete_Works,The following statement contains a magic number: var ms = new MemoryStream(50000);
Magic Number,NoRM.Tests.GridFS,GridFileCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\GridFS\GridFileCollectionTests.cs,File_Delete_Works,The following statement contains a magic number: ms.Write(BitConverter.GetBytes(i)' 0' 4);
Magic Number,NoRM.Tests.GridFS,GridFileCollectionTests,D:\research\architectureSmells\repos\atheken_NoRM\NoRM.Tests\GridFS\GridFileCollectionTests.cs,File_Delete_Works,The following statement contains a magic number: i < 2000
