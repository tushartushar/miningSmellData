Implementation smell,Namespace,Class,File,Method,Description
Long Method,Projac.Tests,HandlerResolutionCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\HandlerResolutionCases.cs,WhenAssignableToHandlerMessageTypeCases,The method has 140 lines of code.
Long Method,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The method has 112 lines of code.
Long Method,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The method has 102 lines of code.
Long Identifier,ProjectionTests,WithHandlers,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,,The length of the parameter _signalWhenWithoutCancellation is 30.
Long Statement,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithTokenCases,The length of the statement  "            var resolver2 = new ProjectionHandlerResolver<CallRecordingConnection>(message => new ProjectionHandler<CallRecordingConnection>[0]); " is 133.
Long Statement,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithoutTokenCases,The length of the statement  "            var resolver2 = new ProjectionHandlerResolver<CallRecordingConnection>(message => new ProjectionHandler<CallRecordingConnection>[0]); " is 133.
Magic Number,Projac.Tests,AnonymousProjectionBuilderTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\AnonymousProjectionBuilderTests.cs,WhenHandlerWithTokenPreservesPreviouslyRegisteredHandlersUponBuild,The following statement contains a magic number: Func<CallRecordingConnection' object' CancellationToken' Task> handler2 =                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return TaskFactory();                  };
Magic Number,Projac.Tests,AnonymousProjectionBuilderTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\AnonymousProjectionBuilderTests.cs,WhenSyncHandlerPreservesPreviouslyRegisteredHandlersUponBuild,The following statement contains a magic number: Action<CallRecordingConnection' object> handler2 =                  (connection' message) =>                  {                      connection.RecordCall(2' message' CancellationToken.None);                  };
Magic Number,Projac.Tests,AnonymousProjectionBuilderTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\AnonymousProjectionBuilderTests.cs,WhenHandlerWithoutTokenPreservesPreviouslyRegisteredHandlersUponBuild,The following statement contains a magic number: Func<CallRecordingConnection' object' Task> handler2 =                  (connection' message) =>                  {                      connection.RecordCall(2' message' CancellationToken.None);                      return TaskFactory();                  };
Magic Number,Projac.Tests,HandlerResolutionCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\HandlerResolutionCases.cs,WhenAssignableToHandlerMessageTypeCases,The following statement contains a magic number: yield return new TestCaseData(                  new[] { handler12 }'                  42'                  new[] { handler12 }).SetDescription("Value type resolution");
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithTokenCases,The following statement contains a magic number: var handler3 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(3' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithTokenCases,The following statement contains a magic number: var handler4 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(4' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  message3'                  token3'                  new[]                  {                      new Tuple<int' object' CancellationToken>(3' message3' token3)'                       new Tuple<int' object' CancellationToken>(4' message3' token3)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  message3'                  token3'                  new[]                  {                      new Tuple<int' object' CancellationToken>(3' message3' token3)'                       new Tuple<int' object' CancellationToken>(4' message3' token3)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithoutTokenCases,The following statement contains a magic number: var handler3 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(3' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithoutTokenCases,The following statement contains a magic number: var handler4 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(4' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  message3'                  new[]                  {                      new Tuple<int' object' CancellationToken>(3' message3' CancellationToken.None)'                       new Tuple<int' object' CancellationToken>(4' message3' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessageWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  message3'                  new[]                  {                      new Tuple<int' object' CancellationToken>(3' message3' CancellationToken.None)'                       new Tuple<int' object' CancellationToken>(4' message3' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver1'                  new object[] { "123"' 123 }'                  token1'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' token1)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver2'                  new object[] { new object()' 123 }'                  token2'                  new Tuple<int' object' CancellationToken>[0]);
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: var handler4 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  new object[] {message3' message4}'                  token3'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' message3' token3)'                      new Tuple<int' object' CancellationToken>(2' message3' token3)'                      new Tuple<int' object' CancellationToken>(1' message4' token3)'                      new Tuple<int' object' CancellationToken>(2' message4' token3)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  new object[] {message3' message4}'                  token3'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' message3' token3)'                      new Tuple<int' object' CancellationToken>(2' message3' token3)'                      new Tuple<int' object' CancellationToken>(1' message4' token3)'                      new Tuple<int' object' CancellationToken>(2' message4' token3)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: var handler6 = new ProjectionHandler<CallRecordingConnection>(                  typeof(int)'                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver4'                  new object[] { "123"' 123 }'                  token4'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' token4)'                      new Tuple<int' object' CancellationToken>(2' 123' token4)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver4'                  new object[] { "123"' 123 }'                  token4'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' token4)'                      new Tuple<int' object' CancellationToken>(2' 123' token4)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver4'                  new object[] { "123"' 123 }'                  token4'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' token4)'                      new Tuple<int' object' CancellationToken>(2' 123' token4)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: var handler8 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver5'                  new object[] { message5 }'                  token5'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' message5' token5)'                      new Tuple<int' object' CancellationToken>(2' message5' token5)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver1'                  new object[] { "123"' 123 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver2'                  new object[] { new object()' 123 }'                  new Tuple<int' object' CancellationToken>[0]);
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: var handler4 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  new object[] { message3' message4 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' message3' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' message3' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(1' message4' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' message4' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver3'                  new object[] { message3' message4 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' message3' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' message3' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(1' message4' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' message4' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: var handler6 = new ProjectionHandler<CallRecordingConnection>(                  typeof(int)'                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver4'                  new object[] { "123"' 123 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' 123' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver4'                  new object[] { "123"' 123 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' 123' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver4'                  new object[] { "123"' 123 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' "123"' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' 123' CancellationToken.None)                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: var handler8 = new ProjectionHandler<CallRecordingConnection>(                  typeof(object)'                  (connection' message' token) =>                  {                      connection.RecordCall(2' message' token);                      return task;                  });
Magic Number,Projac.Tests,ProjectorProjectCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectorProjectCases.cs,ProjectMessagesWithoutTokenCases,The following statement contains a magic number: yield return new TestCaseData(                  resolver5'                  new object[] { message5 }'                  new[]                  {                      new Tuple<int' object' CancellationToken>(1' message5' CancellationToken.None)'                      new Tuple<int' object' CancellationToken>(2' message5' CancellationToken.None)                  });
Magic Number,ProjectionTests,WhenWithCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenHasExpectedResult,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenHasExpectedResult,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenRetainsOrder,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenRetainsOrder,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithoutCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenHasExpectedResult,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithoutCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenHasExpectedResult,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithoutCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenRetainsOrder,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenWithoutCancellationHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenRetainsOrder,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenSyncHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenHasExpectedResult,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenSyncHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenHasExpectedResult,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenSyncHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenRetainsOrder,The following statement contains a magic number: index < Random.Next(2' 100)
Magic Number,ProjectionTests,WhenSyncHandlerTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.Tests\ProjectionTests.cs,SuccessiveWhenRetainsOrder,The following statement contains a magic number: index < Random.Next(2' 100)
