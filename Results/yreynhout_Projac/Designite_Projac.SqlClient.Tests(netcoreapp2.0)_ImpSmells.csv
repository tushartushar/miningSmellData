Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Projac.Sql.Tests.SqlClient,SqlParameterAssertions,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlParameterAssertions.cs,ExpectSqlParameter,The method has 8 parameters. Parameters: parameter' name' sqlDbType' value' nullable' size' precision' scale
Long Parameter List,Projac.Sql.Tests.SqlClient,SqlParameterAssertions,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlParameterAssertions.cs,ExpectSqlParameter,The method has 8 parameters. Parameters: parameter' name' sqlDbType' value' nullable' size' precision' scale
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The length of the statement  "            Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123)))); " is 136.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The length of the statement  "            Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123)))); " is 145.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The length of the statement  "            Assert.That(TSql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max))); " is 138.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureCases,The length of the statement  "                TSql.NonQueryProcedure("text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 123.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureIfCases,The length of the statement  "                TSql.NonQueryProcedureIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 132.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureUnlessCases,The length of the statement  "                TSql.NonQueryProcedureUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 135.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementCases,The length of the statement  "                TSql.NonQueryStatement("text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 123.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementIfCases,The length of the statement  "                TSql.NonQueryStatementIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 132.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementUnlessCases,The length of the statement  "                TSql.NonQueryStatementUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 135.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.QueryStatementIf(true' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 122.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.QueryStatementUnless(false' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 127.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryFormatIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.QueryStatementFormatIf(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 132.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryFormatIfParameterCountNotLimitedTo2098WhenConditionIsNotMet,The length of the statement  "            Assert.DoesNotThrow(() => TSql.QueryStatementFormatIf(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 120.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryFormatUnlessParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.DoesNotThrow(() => TSql.QueryStatementFormatUnless(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 123.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryFormatUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.QueryStatementFormatUnless(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 137.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryStatementIf(true' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 125.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryStatementUnless(false' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementFormatIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryStatementFormatIf(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 135.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementFormatIfParameterCountNotLimitedTo2098WhenConditionIsNotMet,The length of the statement  "            Assert.DoesNotThrow(() => TSql.NonQueryStatementFormatIf(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 123.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementFormatUnlessParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.DoesNotThrow(() => TSql.NonQueryStatementFormatUnless(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 126.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryStatementFormatUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryStatementFormatUnless(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 140.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryProcedureIf(true' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 125.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryProcedureUnless(false' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureFormatIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryProcedureFormatIf(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 135.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureFormatIfParameterCountNotLimitedTo2098WhenConditionIsNotMet,The length of the statement  "            Assert.DoesNotThrow(() => TSql.NonQueryProcedureFormatIf(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 123.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureFormatUnlessParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.DoesNotThrow(() => TSql.NonQueryProcedureFormatUnless(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 126.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NonQueryProcedureFormatUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => TSql.NonQueryProcedureFormatUnless(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 140.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureCases,The length of the statement  "                TSql.QueryProcedure("text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 120.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureIfCases,The length of the statement  "                TSql.QueryProcedureIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 129.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureUnlessCases,The length of the statement  "                TSql.QueryProcedureUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 132.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryProcedureFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementCases,The length of the statement  "                TSql.QueryStatement("text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 120.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementIfCases,The length of the statement  "                TSql.QueryStatementIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 129.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementUnlessCases,The length of the statement  "                TSql.QueryStatementUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 132.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,QueryStatementFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,QueryProcedureIfCases,The length of the statement  "                Sql.QueryProcedureIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 128.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,QueryProcedureUnlessCases,The length of the statement  "                Sql.QueryProcedureUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 131.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,NonQueryProcedureCases,The length of the statement  "                Sql.NonQueryProcedure("text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 122.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,NonQueryProcedureIfCases,The length of the statement  "                Sql.NonQueryProcedureIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 131.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,NonQueryProcedureUnlessCases,The length of the statement  "                Sql.NonQueryProcedureUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 134.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,NonQueryStatementCases,The length of the statement  "                Sql.NonQueryStatement("text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 122.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,NonQueryStatementIfCases,The length of the statement  "                Sql.NonQueryStatementIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 131.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,NonQueryStatementUnlessCases,The length of the statement  "                Sql.NonQueryStatementUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 134.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,QueryStatementIfCases,The length of the statement  "                Sql.QueryStatementIf(false' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 128.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTestCases,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTestCases.cs,QueryStatementUnlessCases,The length of the statement  "                Sql.QueryStatementUnless(true' "text"' new { Parameter1 = new SqlParameterValueStub()' Parameter2 = new SqlParameterValueStub() })' " is 131.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The length of the statement  "            Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123)))); " is 135.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The length of the statement  "            Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123)))); " is 144.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The length of the statement  "            Assert.That(Sql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max))); " is 137.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalWithoutScaleReturnsExpectedInstance,The length of the statement  "            Assert.That(Sql.Decimal(value' TSqlDecimalPrecision.Max)' Is.EqualTo(new TSqlDecimalValue(value' TSqlDecimalPrecision.Max' TSqlDecimalScale.Default))); " is 151.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalNullWithoutScaleReturnsExpectedInstance,The length of the statement  "            Assert.That(Sql.Decimal(null' TSqlDecimalPrecision.Max)' Is.EqualTo(new TSqlDecimalNullValue(TSqlDecimalPrecision.Max' TSqlDecimalScale.Default))); " is 147.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalNullWithoutPrecisionNorScaleReturnsExpectedInstance,The length of the statement  "            Assert.That(Sql.Decimal(null)' Is.EqualTo(new TSqlDecimalNullValue(TSqlDecimalPrecision.Default' TSqlDecimalScale.Default))); " is 125.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.QueryStatementIf(true' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 121.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.QueryStatementUnless(false' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 126.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryFormatIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.QueryStatementFormatIf(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 131.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryFormatUnlessParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.DoesNotThrow(() => Sql.QueryStatementFormatUnless(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 122.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryFormatUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.QueryStatementFormatUnless(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 136.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryStatementIf(true' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 124.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryStatementUnless(false' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 129.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementFormatIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryStatementFormatIf(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 134.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementFormatIfParameterCountNotLimitedTo2098WhenConditionIsNotMet,The length of the statement  "            Assert.DoesNotThrow(() => Sql.NonQueryStatementFormatIf(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 122.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementFormatUnlessParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.DoesNotThrow(() => Sql.NonQueryStatementFormatUnless(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 125.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryStatementFormatUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryStatementFormatUnless(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 139.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryProcedureIf(true' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 124.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryProcedureUnless(false' ""' ParameterCountLimitedExceeded.Instance).ToArray()); " is 129.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureFormatIfParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryProcedureFormatIf(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 134.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureFormatIfParameterCountNotLimitedTo2098WhenConditionIsNotMet,The length of the statement  "            Assert.DoesNotThrow(() => Sql.NonQueryProcedureFormatIf(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 122.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureFormatUnlessParameterCountLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.DoesNotThrow(() => Sql.NonQueryProcedureFormatUnless(true' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 125.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NonQueryProcedureFormatUnlessParameterCountNotLimitedTo2098WhenConditionIsMet,The length of the statement  "            Assert.Throws<ArgumentException>(() => Sql.NonQueryProcedureFormatUnless(false' ""' ParameterCountLimitedExceeded.Instance.All).ToArray()); " is 139.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryProcedureIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryProcedureUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryProcedureFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryProcedureFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryStatementIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryStatementUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryStatementFormatIfReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Long Statement,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,QueryStatementFormatUnlessReturnsExpectedInstance,The length of the statement  "                Assert.That(actualArray[index].Parameters' Is.EquivalentTo(expected[index].Parameters).Using(new SqlParameterEqualityComparer())); " is 130.
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarChar("value"' 123)' Is.EqualTo(new TSqlVarCharValue("value"' new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarChar("value"' 123)' Is.EqualTo(new TSqlVarCharValue("value"' new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarChar(null' 123)' Is.EqualTo(new TSqlVarCharNullValue(new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarChar(null' 123)' Is.EqualTo(new TSqlVarCharNullValue(new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,CharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Char("value"' 123)' Is.EqualTo(new TSqlCharValue("value"' new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,CharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Char("value"' 123)' Is.EqualTo(new TSqlCharValue("value"' new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,CharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Char(null' 123)' Is.EqualTo(new TSqlCharNullValue(new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,CharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Char(null' 123)' Is.EqualTo(new TSqlCharNullValue(new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NVarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NVarChar("value"' 123)' Is.EqualTo(new TSqlNVarCharValue("value"' new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NVarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NVarChar("value"' 123)' Is.EqualTo(new TSqlNVarCharValue("value"' new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NVarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NVarChar(null' 123)' Is.EqualTo(new TSqlNVarCharNullValue(new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NVarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NVarChar(null' 123)' Is.EqualTo(new TSqlNVarCharNullValue(new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NChar("value"' 123)' Is.EqualTo(new TSqlNCharValue("value"' new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NChar("value"' 123)' Is.EqualTo(new TSqlNCharValue("value"' new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NChar(null' 123)' Is.EqualTo(new TSqlNCharNullValue(new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,NCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.NChar(null' 123)' Is.EqualTo(new TSqlNCharNullValue(new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(null' 123)' Is.EqualTo(new TSqlBinaryNullValue(new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Binary(null' 123)' Is.EqualTo(new TSqlBinaryNullValue(new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(null' 123)' Is.EqualTo(new TSqlVarBinaryNullValue(new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinary(null' 123)' Is.EqualTo(new TSqlVarBinaryNullValue(new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BigIntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.BigInt(123)' Is.EqualTo(new TSqlBigIntValue(123)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,BigIntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.BigInt(123)' Is.EqualTo(new TSqlBigIntValue(123)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,IntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Int(123)' Is.EqualTo(new TSqlIntValue(123)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,IntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Int(123)' Is.EqualTo(new TSqlIntValue(123)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,DateTime2ReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.DateTime2(value' 3)' Is.EqualTo(new TSqlDateTime2Value(value' 3)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,DateTime2ReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.DateTime2(value' 3)' Is.EqualTo(new TSqlDateTime2Value(value' 3)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,DateTime2NullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.DateTime2(null' 3)' Is.EqualTo(new TSqlDateTime2NullValue(new TSqlDateTime2Precision(3))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,DateTime2NullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.DateTime2(null' 3)' Is.EqualTo(new TSqlDateTime2NullValue(new TSqlDateTime2Precision(3))));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,MoneyReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Money(123.45M)' Is.EqualTo(new TSqlMoneyValue(123.45M)));
Magic Number,Projac.Sql.Tests.Legacy,TSqlTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\Legacy\TSqlTests.Compose.cs,MoneyReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSql.Money(123.45M)' Is.EqualTo(new TSqlMoneyValue(123.45M)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarChar("value"' 123)' Is.EqualTo(new TSqlVarCharValue("value"' new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarChar("value"' 123)' Is.EqualTo(new TSqlVarCharValue("value"' new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarChar(null' 123)' Is.EqualTo(new TSqlVarCharNullValue(new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarChar(null' 123)' Is.EqualTo(new TSqlVarCharNullValue(new TSqlVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,CharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Char("value"' 123)' Is.EqualTo(new TSqlCharValue("value"' new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,CharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Char("value"' 123)' Is.EqualTo(new TSqlCharValue("value"' new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,CharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Char(null' 123)' Is.EqualTo(new TSqlCharNullValue(new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,CharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Char(null' 123)' Is.EqualTo(new TSqlCharNullValue(new TSqlCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NVarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NVarChar("value"' 123)' Is.EqualTo(new TSqlNVarCharValue("value"' new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NVarCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NVarChar("value"' 123)' Is.EqualTo(new TSqlNVarCharValue("value"' new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NVarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NVarChar(null' 123)' Is.EqualTo(new TSqlNVarCharNullValue(new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NVarCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NVarChar(null' 123)' Is.EqualTo(new TSqlNVarCharNullValue(new TSqlNVarCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NChar("value"' 123)' Is.EqualTo(new TSqlNCharValue("value"' new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NCharReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NChar("value"' 123)' Is.EqualTo(new TSqlNCharValue("value"' new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NChar(null' 123)' Is.EqualTo(new TSqlNCharNullValue(new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,NCharNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.NChar(null' 123)' Is.EqualTo(new TSqlNCharNullValue(new TSqlNCharSize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlBinaryValue(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(null' 123)' Is.EqualTo(new TSqlBinaryNullValue(new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Binary(null' 123)' Is.EqualTo(new TSqlBinaryNullValue(new TSqlBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(new byte[] { 1' 2' 3 }' 123)' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(null' 123)' Is.EqualTo(new TSqlVarBinaryNullValue(new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinary(null' 123)' Is.EqualTo(new TSqlVarBinaryNullValue(new TSqlVarBinarySize(123))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,VarBinaryMaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.VarBinaryMax(new byte[] { 1' 2' 3 })' Is.EqualTo(new TSqlVarBinaryValue(new byte[] { 1' 2' 3 }' TSqlVarBinarySize.Max)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BigIntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.BigInt(123)' Is.EqualTo(new TSqlBigIntValue(123)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,BigIntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.BigInt(123)' Is.EqualTo(new TSqlBigIntValue(123)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,IntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Int(123)' Is.EqualTo(new TSqlIntValue(123)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,IntReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Int(123)' Is.EqualTo(new TSqlIntValue(123)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DateTime2WithoutPrecisionReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.DateTime2(value)' Is.EqualTo(new TSqlDateTime2Value(value' 7)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DateTime2ReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.DateTime2(value' 3)' Is.EqualTo(new TSqlDateTime2Value(value' 3)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DateTime2ReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.DateTime2(value' 3)' Is.EqualTo(new TSqlDateTime2Value(value' 3)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DateTime2NullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.DateTime2(null' 3)' Is.EqualTo(new TSqlDateTime2NullValue(new TSqlDateTime2Precision(3))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DateTime2NullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.DateTime2(null' 3)' Is.EqualTo(new TSqlDateTime2NullValue(new TSqlDateTime2Precision(3))));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,MoneyReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Money(123.45M)' Is.EqualTo(new TSqlMoneyValue(123.45M)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,MoneyReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Money(123.45M)' Is.EqualTo(new TSqlMoneyValue(123.45M)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalWithoutPrecisionNorScaleReturnsExpectedInstance,The following statement contains a magic number: var value = 5;
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalWithoutPrecisionNorScaleReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Decimal(value)' Is.EqualTo(new TSqlDecimalValue(value' 18' 0)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalWithoutScaleReturnsExpectedInstance,The following statement contains a magic number: var value = 5;
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalReturnsExpectedInstance,The following statement contains a magic number: var value = 5;
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Decimal(value' 3' 1)' Is.EqualTo(new TSqlDecimalValue(value' 3' 1)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Decimal(value' 3' 1)' Is.EqualTo(new TSqlDecimalValue(value' 3' 1)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Decimal(null' 3' 1)' Is.EqualTo(new TSqlDecimalNullValue(3' 1)));
Magic Number,Projac.Sql.Tests.SqlClient,SqlClientSyntaxTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\SqlClientSyntaxTests.Compose.cs,DecimalNullReturnsExpectedInstance,The following statement contains a magic number: Assert.That(Sql.Decimal(null' 3' 1)' Is.EqualTo(new TSqlDecimalNullValue(3' 1)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.BigInt' DBNull.Value' true' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.BigInt' DBNull.Value' true' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.BigInt' 123' false' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.BigInt' 123' false' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.BigInt' 123' false' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.BigInt' 123' false' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBigIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBigIntValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryNullValueTests.cs,SetUp,The following statement contains a magic number: _size = new TSqlBinarySize(100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Binary' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Binary' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryNullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(100));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: Assert.That(result' Is.EqualTo(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: TSqlBinarySize sut = 123;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinarySizeTest.cs,SutFactory,The following statement contains a magic number: return SutFactory(new Random().Next(-1' 8000));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,NullIsNotAnAcceptableValue,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => SutFactory(null' new TSqlBinarySize(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlBinarySize(50));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Binary' value' false' 50);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlBinarySize(50));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Binary' value' false' 50);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharNullValueTests.cs,SetUp,The following statement contains a magic number: _size = new TSqlCharSize(100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Char' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Char' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharNullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(100));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: Assert.That(result' Is.EqualTo(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: TSqlCharSize sut = 123;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharSizeTest.cs,SutFactory,The following statement contains a magic number: return SutFactory(new Random().Next(-1' 8000));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,NullIsNotAnAcceptableValue,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => SutFactory(null' new TSqlCharSize(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Char' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Char' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlCharValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory("value"' new TSqlCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2NullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2NullValueTests.cs,SetUp,The following statement contains a magic number: _precision = new TSqlDateTime2Precision(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2NullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2NullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' DBNull.Value' true' 8' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2NullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2NullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' DBNull.Value' true' 8' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2NullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2NullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' DBNull.Value' true' 8' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2NullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2NullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' DBNull.Value' true' 8' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2NullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2NullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(4));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,MinReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSqlDateTime2Precision.Max' Is.EqualTo(new TSqlDateTime2Precision(7)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,DefaultReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSqlDateTime2Precision.Default' Is.EqualTo(new TSqlDateTime2Precision(7)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,CanBeImplicitlyConvertedToByte,The following statement contains a magic number: var sut = SutFactory(3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,CanBeImplicitlyConvertedToByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,CanBeImplicitlyConvertedFromByte,The following statement contains a magic number: TSqlDateTime2Precision sut = 3;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,CanBeImplicitlyConvertedFromByte,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(3)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2PrecisionTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2PrecisionTest.cs,SutFactory,The following statement contains a magic number: return SutFactory((byte)new Random().Next(0' 7));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' value' false' 8' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' value' false' 8' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' value' false' 8' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime2' value' false' 8' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecision,The following statement contains a magic number: var sut = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecision,The following statement contains a magic number: var other = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(value1' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(value2' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(value' new TSqlDateTime2Precision(4));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(value1' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(value2' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(value' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(value' new TSqlDateTime2Precision(4));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTime2ValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTime2ValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(DateTime.UtcNow' new TSqlDateTime2Precision(3));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime' DBNull.Value' true' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime' DBNull.Value' true' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeOffsetNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeOffsetNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTimeOffset' DBNull.Value' true' 7);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeOffsetNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeOffsetNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTimeOffset' DBNull.Value' true' 7);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeOffsetValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeOffsetValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTimeOffset' value' false' 7);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeOffsetValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeOffsetValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTimeOffset' value' false' 7);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime' value' false' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDateTimeValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDateTimeValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.DateTime' value' false' 8);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(19' 1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' DBNull.Value' true' 0' 19' 1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(19' 1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' DBNull.Value' true' 0' 19' 1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(5'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(5'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var other = SutFactory(5'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var other = SutFactory(5'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(5'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(5'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(6'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(6'4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var other = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSamePrecisionAndScale,The following statement contains a magic number: var other = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalNullValueTests.cs,ScaleMustBeWithinRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => SutFactory(8' scale));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,MaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSqlDecimalPrecision.Max' Is.EqualTo(new TSqlDecimalPrecision(38)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,DefaultReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSqlDecimalPrecision.Default' Is.EqualTo(new TSqlDecimalPrecision(18)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeImplicitlyConvertedToByte,The following statement contains a magic number: var sut = SutFactory(12);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeImplicitlyConvertedToByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeExplicitlyConvertedToByte,The following statement contains a magic number: var sut = SutFactory(12);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeExplicitlyConvertedToByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeImplicitlyConvertedFromByte,The following statement contains a magic number: TSqlDecimalPrecision sut = 12;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeImplicitlyConvertedFromByte,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(12)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeExplicitlyConvertedFromByte,The following statement contains a magic number: var sut = (TSqlDecimalPrecision)12;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,CanBeExplicitlyConvertedFromByte,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(12)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalPrecisionTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalPrecisionTest.cs,SutFactory,The following statement contains a magic number: return SutFactory((byte)new Random().Next(1' 38));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,MaxReturnsExpectedInstance,The following statement contains a magic number: Assert.That(TSqlDecimalScale.Max' Is.EqualTo(new TSqlDecimalScale(38)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var sut = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(5);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var sut = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(5);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreOperatorEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreOperatorEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var sut = SutFactory(4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(5);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeImplicitlyConvertedToByte,The following statement contains a magic number: var sut = SutFactory(12);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeImplicitlyConvertedToByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeExplicitlyConvertedToByte,The following statement contains a magic number: var sut = SutFactory(12);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeExplicitlyConvertedToByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeImplicitlyConvertedFromByte,The following statement contains a magic number: TSqlDecimalScale result = 12;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeImplicitlyConvertedFromByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new TSqlDecimalScale(12)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeExplicitlyConvertedFromByte,The following statement contains a magic number: var result = (TSqlDecimalScale)12;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CanBeExplicitlyConvertedFromByte,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new TSqlDecimalScale(12)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CompareToScaleCases,The following statement contains a magic number: yield return new TestCaseData(                  new TSqlDecimalScale(1)' new TSqlDecimalScale(2)' -1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CompareToScaleCases,The following statement contains a magic number: yield return new TestCaseData(                  new TSqlDecimalScale(2)' new TSqlDecimalScale(1)' 1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CompareToPrecisionCases,The following statement contains a magic number: yield return new TestCaseData(                  new TSqlDecimalScale(1)' new TSqlDecimalPrecision(2)' -1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,CompareToPrecisionCases,The following statement contains a magic number: yield return new TestCaseData(                  new TSqlDecimalScale(2)' new TSqlDecimalPrecision(1)' 1);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalScaleTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalScaleTest.cs,SutFactory,The following statement contains a magic number: return SutFactory((byte)random.Next(0' 38));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.0m' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.0m' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.0m' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' 123.0m' false' 0' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' 123.0m' false' 0' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' 123.0m' false' 0' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.0m' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.0m' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.0m' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' 123' false' 0' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' 123' false' 0' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Decimal' 123' false' 0' 19' 2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndPrecisionAndScale,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirPrecisionDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 6' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirScaleDiffers,The following statement contains a magic number: var other = SutFactory(123.0m' 5' 3);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.0m' 5' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,PrecisionMustBeWithinRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => SutFactory(123.0m' precision));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ScaleMustBeWithinRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => SutFactory(123.0m' 8' scale));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,ScaleMustBeWithinRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => SutFactory(123.0m' 8' scale));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlDecimalValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlDecimalValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(123.0m);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Int' DBNull.Value' true' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Int' DBNull.Value' true' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Int' 123' false' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Int' 123' false' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Int' 123' false' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Int' 123' false' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlIntValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlIntValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' DBNull.Value' true' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' DBNull.Value' true' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' DBNull.Value' true' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' DBNull.Value' true' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' 123.45M' false' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' 123.45M' false' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' 123.45M' false' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' 123.45M' false' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' 123.45M' false' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.Money' 123.45M' false' 8' 0' 4);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.78M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var sut = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValue,The following statement contains a magic number: var other = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory(456.78M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlMoneyValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlMoneyValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(123.45M);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharNullValueTests.cs,SetUp,The following statement contains a magic number: _size = new TSqlNCharSize(100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NChar' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NChar' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharNullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(100));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: Assert.That(result' Is.EqualTo(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: TSqlNCharSize sut = 123;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharSizeTest.cs,SutFactory,The following statement contains a magic number: return SutFactory(new Random().Next(-1' 4000));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,NullIsNotAnAcceptableValue,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => SutFactory(null' new TSqlNCharSize(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NChar' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NChar' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNCharValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory("value"' new TSqlNCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharNullValueTests.cs,SetUp,The following statement contains a magic number: _size = new TSqlNVarCharSize(100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NVarChar' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NVarChar' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharNullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(100));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: Assert.That(result' Is.EqualTo(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: TSqlNVarCharSize sut = 123;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharSizeTest.cs,SutFactory,The following statement contains a magic number: return SutFactory(new Random().Next(-1' 4000));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,NullIsNotAnAcceptableValue,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => SutFactory(null' new TSqlNVarCharSize(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NVarChar' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.NVarChar' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNVarCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlNVarCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlNVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlNVarCharValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory("value"' new TSqlNVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlUniqueIdentifierNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlUniqueIdentifierNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.UniqueIdentifier' DBNull.Value' true' 16);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlUniqueIdentifierNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlUniqueIdentifierNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.UniqueIdentifier' DBNull.Value' true' 16);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlUniqueIdentifierValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlUniqueIdentifierValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.UniqueIdentifier' Guid.Empty' false' 16);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlUniqueIdentifierValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlUniqueIdentifierValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.UniqueIdentifier' Guid.Empty' false' 16);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryNullValueTests.cs,SetUp,The following statement contains a magic number: _size = new TSqlVarBinarySize(100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarBinary' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarBinary' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryNullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(100));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: Assert.That(result' Is.EqualTo(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: TSqlVarBinarySize sut = 123;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinarySizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinarySizeTest.cs,SutFactory,The following statement contains a magic number: return SutFactory(new Random().Next(-1' 8000));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,NullIsNotAnAcceptableValue,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => SutFactory(null' new TSqlVarBinarySize(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlVarBinarySize(50));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarBinary' value' false' 50);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var value = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlVarBinarySize(50));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarBinary' value' false' 50);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueContentDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 4' 5' 6 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueLengthDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory(new byte[] { 1' 2' 3 }' new TSqlVarBinarySize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarBinaryValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarBinaryValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory(new byte[] { 1' 2' 3' 4' 5 }' new TSqlVarBinarySize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharNullValueTests.cs,SetUp,The following statement contains a magic number: _size = new TSqlVarCharSize(100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharNullValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarChar' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharNullValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarChar' DBNull.Value' true' 100);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharNullValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharNullValueTests.cs,HasExpectedHashCode,The following statement contains a magic number: Assert.That(result' Is.EqualTo(100));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,TwoInstancesAreNotEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,TwoInstancesDoNotHaveTheSameHashCodeIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,TwoInstancesAreNotOperatorEqualIfTheirValuesDiffer,The following statement contains a magic number: var other = SutFactory(2);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: var sut = SutFactory(123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,CanBeImplicitlyConvertedToInt32,The following statement contains a magic number: Assert.That(result' Is.EqualTo(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: TSqlVarCharSize sut = 123;
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,CanBeImplicitlyConvertedFromInt32,The following statement contains a magic number: Assert.That(sut' Is.EqualTo(SutFactory(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharSizeTest,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharSizeTest.cs,SutFactory,The following statement contains a magic number: return SutFactory(new Random().Next(-1' 8000));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,NullIsNotAnAcceptableValue,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => SutFactory(null' new TSqlVarCharSize(123)));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,ToDbParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarChar' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: var sut = SutFactory(value' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,ToSqlParameterReturnsExpectedInstance,The following statement contains a magic number: result.ExpectSqlParameter(parameterName' SqlDbType.VarChar' value' false' 123);
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceAreEqualIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceAreNotEqualIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlVarCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceHaveTheSameHashCodeIfTheyHaveTheSameValueAndSize,The following statement contains a magic number: var other = SutFactory("value"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var sut = SutFactory("value1"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirValueDiffers,The following statement contains a magic number: var other = SutFactory("value2"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var sut = SutFactory("value"' new TSqlVarCharSize(123));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,TwoInstanceDoNotHaveTheSameHashCodeIfTheirSizeDiffers,The following statement contains a magic number: var other = SutFactory("value"' new TSqlVarCharSize(456));
Magic Number,Projac.Sql.Tests.SqlClient,TSqlVarCharValueTests,D:\research\architectureSmells\repos\yreynhout_Projac\src\Projac.SqlClient.Tests\TSqlVarCharValueTests.cs,SutFactory,The following statement contains a magic number: return SutFactory("value"' new TSqlVarCharSize(123));
