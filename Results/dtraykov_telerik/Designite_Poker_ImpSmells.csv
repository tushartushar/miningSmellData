Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Poker,Card,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\Card.cs,CardFaceToString,Cyclomatic complexity of the method is 15
Long Statement,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsHighCard,The length of the statement  "	if (IsValidHand (hand) && !IsOnePair (hand) && !IsTwoPair (hand) && !IsThreeOfAKind (hand) && !IsStraight (hand) && !IsFlush (hand) && !IsFourOfAKind (hand) && !IsStraightFlush (hand) && !IsFullHouse (hand)) { " is 209.
Complex Conditional,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsHighCard,The conditional expression  "IsValidHand (hand) && !IsOnePair (hand) && !IsTwoPair (hand) && !IsThreeOfAKind (hand) && !IsStraight (hand) && !IsFlush (hand) && !IsFourOfAKind (hand) && !IsStraightFlush (hand) && !IsFullHouse (hand)"  is complex.
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsFourOfAKind,The following statement contains a magic number: if (maxCount == 4) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: if (maxCount == 3 && pair == 2) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: if (maxCount == 3 && pair == 2) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsStraight,The following statement contains a magic number: if ((hand.Cards [4].Face - hand.Cards [0].Face) == 4) {  	return true;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsStraight,The following statement contains a magic number: if ((hand.Cards [4].Face - hand.Cards [0].Face) == 4) {  	return true;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsStraight,The following statement contains a magic number: if (hand.Cards [4].Face == CardFace.Ace && hand.Cards [3].Face == CardFace.Five) {  	// a wheel: A' 2' 3' 4' 5  	return true;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsStraight,The following statement contains a magic number: if (hand.Cards [4].Face == CardFace.Ace && hand.Cards [3].Face == CardFace.Five) {  	// a wheel: A' 2' 3' 4' 5  	return true;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: if (maxCount == 3 && pair == 1) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsTwoPair,The following statement contains a magic number: if (maxCount == 2 && pair == 2) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsTwoPair,The following statement contains a magic number: if (maxCount == 2 && pair == 2) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\dtraykov_telerik\C# High Quality Code\TestDrivenDevelopment\Poker\PokerHandsChecker.cs,IsOnePair,The following statement contains a magic number: if (maxCount == 2 && pair == 1) {  	return true;  }  else {  	return false;  }  
