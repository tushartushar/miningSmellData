Implementation smell,Namespace,Class,File,Method,Description
Complex Method,KnapsackProblem,KnapsackProblem,C:\repos\dtraykov_telerik\C# Data Structures and Algorithms\DynamicProgramming\KnapsackProblem\KnapsackProblem.cs,KnapsackDynamic,Cyclomatic complexity of the method is 13
Magic Number,KnapsackProblem,KnapsackProblem,C:\repos\dtraykov_telerik\C# Data Structures and Algorithms\DynamicProgramming\KnapsackProblem\KnapsackProblem.cs,KnapsackDynamic,The following statement contains a magic number: for (int x = 0; x <= items.Length - 2; x++) {  	for (int y = 1; y <= capacity; y++) {  		var currentItem = items [x + 1];  		if (currentItem.Weight > y) {  			valuesArray [x + 1' y] = valuesArray [x' y];  			continue;  		}  		int valueWhenDropping = valuesArray [x' y];  		int valueWhenTaking = valuesArray [x' y - currentItem.Weight] + currentItem.Value;  		if (valueWhenTaking > valueWhenDropping) {  			valuesArray [x + 1' y] = valueWhenTaking;  			keepArray [x + 1' y] = 1;  		}  		else {  			valuesArray [x + 1' y] = valueWhenDropping;  			keepArray [x + 1' y] = 0;  		}  	}  }  
