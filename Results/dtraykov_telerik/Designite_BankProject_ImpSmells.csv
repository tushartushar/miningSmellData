Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The length of the statement  "	Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' goshuDepositAcount.GetType ()' goshuDepositAcount.Customer.GetType ()' goshuDepositAcount.Customer.Name' goshuDepositAcount.InterestAmountForPeriod (6)); " is 246.
Long Statement,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The length of the statement  "	Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' telerikDepositAcount.GetType ()' telerikDepositAcount.Customer.GetType ()' telerikDepositAcount.Customer.Name' telerikDepositAcount.InterestAmountForPeriod (6)); " is 254.
Long Statement,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The length of the statement  "	Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' goshuLoanAccount.GetType ()' goshuLoanAccount.Customer.GetType ()' goshuLoanAccount.Customer.Name' goshuLoanAccount.InterestAmountForPeriod (6)); " is 238.
Long Statement,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The length of the statement  "	Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' telerikLoanAccount.GetType ()' telerikLoanAccount.Customer.GetType ()' telerikLoanAccount.Customer.Name' telerikLoanAccount.InterestAmountForPeriod (6)); " is 246.
Long Statement,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The length of the statement  "	Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next two years: {3} "' goshuMortageAccount.GetType ()' goshuMortageAccount.Customer.GetType ()' goshuMortageAccount.Customer.Name' goshuMortageAccount.InterestAmountForPeriod (24)); " is 249.
Long Statement,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The length of the statement  "	Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next two years: {3} "' telerikMortageAccount.GetType ()' telerikMortageAccount.Customer.GetType ()' telerikMortageAccount.Customer.Name' telerikMortageAccount.InterestAmountForPeriod (24)); " is 257.
Magic Number,BankProject,DepositAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\DepositAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Balance <= 1000 && this.Balance >= 0) {  	return 0;  }  else {  	return base.InterestAmountForPeriod (mounts);  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 3) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 3);  	}  }  else {  	if (mounts <= 2) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 2);  	}  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 3) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 3);  	}  }  else {  	if (mounts <= 2) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 2);  	}  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 3) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 3);  	}  }  else {  	if (mounts <= 2) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 2);  	}  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 3) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 3);  	}  }  else {  	if (mounts <= 2) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 2);  	}  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 3) {  	return 0;  }  else {  	return (this.Balance * this.InterestRate) * (mounts - 3);  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 3) {  	return 0;  }  else {  	return (this.Balance * this.InterestRate) * (mounts - 3);  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: return (this.Balance * this.InterestRate) * (mounts - 3);  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 2) {  	return 0;  }  else {  	return (this.Balance * this.InterestRate) * (mounts - 2);  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 2) {  	return 0;  }  else {  	return (this.Balance * this.InterestRate) * (mounts - 2);  }  
Magic Number,BankProject,LoanAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\LoanAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: return (this.Balance * this.InterestRate) * (mounts - 2);  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 6) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 6);  	}  }  else {  	if (mounts <= 12) {  		return (this.Balance * (this.InterestRate / 2)) * (mounts);  	}  	else {  		return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  	}  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 6) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 6);  	}  }  else {  	if (mounts <= 12) {  		return (this.Balance * (this.InterestRate / 2)) * (mounts);  	}  	else {  		return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  	}  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 6) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 6);  	}  }  else {  	if (mounts <= 12) {  		return (this.Balance * (this.InterestRate / 2)) * (mounts);  	}  	else {  		return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  	}  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 6) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 6);  	}  }  else {  	if (mounts <= 12) {  		return (this.Balance * (this.InterestRate / 2)) * (mounts);  	}  	else {  		return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  	}  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 6) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 6);  	}  }  else {  	if (mounts <= 12) {  		return (this.Balance * (this.InterestRate / 2)) * (mounts);  	}  	else {  		return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  	}  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (this.Customer.GetType ().ToString () == "Individual") {  	if (mounts <= 6) {  		return 0;  	}  	else {  		return (this.Balance * this.InterestRate) * (mounts - 6);  	}  }  else {  	if (mounts <= 12) {  		return (this.Balance * (this.InterestRate / 2)) * (mounts);  	}  	else {  		return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  	}  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 6) {  	return 0;  }  else {  	return (this.Balance * this.InterestRate) * (mounts - 6);  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 6) {  	return 0;  }  else {  	return (this.Balance * this.InterestRate) * (mounts - 6);  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: return (this.Balance * this.InterestRate) * (mounts - 6);  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 12) {  	return (this.Balance * (this.InterestRate / 2)) * (mounts);  }  else {  	return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 12) {  	return (this.Balance * (this.InterestRate / 2)) * (mounts);  }  else {  	return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 12) {  	return (this.Balance * (this.InterestRate / 2)) * (mounts);  }  else {  	return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: if (mounts <= 12) {  	return (this.Balance * (this.InterestRate / 2)) * (mounts);  }  else {  	return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  }  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: return (this.Balance * (this.InterestRate / 2)) * (mounts);  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  
Magic Number,BankProject,MortageAccount,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\MortageAccount.cs,InterestAmountForPeriod,The following statement contains a magic number: return (this.Balance * (this.InterestRate / 2)) * (mounts) + (this.Balance * this.InterestRate) * (mounts - 12);  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: goshuDepositAcount.AddDeposit (200);  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' goshuDepositAcount.GetType ()' goshuDepositAcount.Customer.GetType ()' goshuDepositAcount.Customer.Name' goshuDepositAcount.InterestAmountForPeriod (6));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' telerikDepositAcount.GetType ()' telerikDepositAcount.Customer.GetType ()' telerikDepositAcount.Customer.Name' telerikDepositAcount.InterestAmountForPeriod (6));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine (new string ('='' 80));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' goshuLoanAccount.GetType ()' goshuLoanAccount.Customer.GetType ()' goshuLoanAccount.Customer.Name' goshuLoanAccount.InterestAmountForPeriod (6));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next six mounths: {3} "' telerikLoanAccount.GetType ()' telerikLoanAccount.Customer.GetType ()' telerikLoanAccount.Customer.Name' telerikLoanAccount.InterestAmountForPeriod (6));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine (new string ('='' 80));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next two years: {3} "' goshuMortageAccount.GetType ()' goshuMortageAccount.Customer.GetType ()' goshuMortageAccount.Customer.Name' goshuMortageAccount.InterestAmountForPeriod (24));  
Magic Number,BankProject,BankProjectTest,C:\repos\dtraykov_telerik\C# OOP Homeworks\OOPPrinciplesII\BankProject\BankProjectTest.cs,Main,The following statement contains a magic number: Console.WriteLine ("The {0} of the {1}-{2} have interest amount for next two years: {3} "' telerikMortageAccount.GetType ()' telerikMortageAccount.Customer.GetType ()' telerikMortageAccount.Customer.Name' telerikMortageAccount.InterestAmountForPeriod (24));  
