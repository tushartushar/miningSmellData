Implementation smell,Namespace,Class,File,Method,Description
Long Method,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,The method has 100 lines of code.
Complex Method,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,executeCommandLine,Cyclomatic complexity of the method is 13
Complex Method,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,Cyclomatic complexity of the method is 14
Complex Method,Mono.Options,Option,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,Option,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,Option,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,Option,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,ArgumentSource,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,GetArguments,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteOptionDescriptions,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,The method has 12 parameters. Parameters: package' targetDir' packagesDir' bootstrapperExe' backgroundGif' signingOpts' baseUrl' setupIcon' generateMsi' packageAs64Bit' frameworkVersion' generateDeltas
Long Parameter List,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,createSetupEmbeddedZip,The method has 5 parameters. Parameters: fullPackage' releasesDir' backgroundGif' signingOpts' setupIcon
Long Parameter List,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Parameter List,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteDescription,The method has 5 parameters. Parameters: o' value' prefix' firstWidth' remWidth
Long Parameter List,Mono.Options,ActionOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,ActionOption,The method has 5 parameters. Parameters: prototype' description' count' action' hidden
Long Identifier,Squirrel.Update,AuthenticodeTools,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\AuthenticodeTools.cs,winVerifyTrust,The length of the parameter wintrust_action_generic_verify_v2 is 33.
Long Statement,Squirrel.Update,AuthenticodeTools,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\AuthenticodeTools.cs,winVerifyTrust,The length of the statement  "            using (UnmanagedPointer guidPtr = new UnmanagedPointer(Marshal.AllocHGlobal(Marshal.SizeOf(typeof(Guid)))' AllocMethod.HGlobal)) " is 128.
Long Statement,Squirrel.Update,AuthenticodeTools,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\AuthenticodeTools.cs,winVerifyTrust,The length of the statement  "            using (UnmanagedPointer wvtDataPtr = new UnmanagedPointer(Marshal.AllocHGlobal(Marshal.SizeOf(typeof(WINTRUST_DATA)))' AllocMethod.HGlobal)) " is 140.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,executeCommandLine,The length of the statement  "                    Releasify(opt.target' opt.releaseDir' opt.packagesDir' opt.bootstrapperExe' opt.backgroundGif' opt.signingParameters' opt.baseUrl' opt.setupIcon' !opt.noMsi' opt.packageAs64Bit' opt.frameworkVersion' !opt.noDelta); " is 214.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Update,The length of the statement  "                    var updateInfo = await mgr.CheckForUpdate(intention: UpdaterIntention.Update' ignoreDeltaUpdates: ignoreDeltaUpdates' progress: x => Console.WriteLine(x / 3)); " is 159.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,The length of the statement  "                    throw new Exception(string.Format("Invalid --baseUrl '{0}'. A base URL must start with http or https and be a valid URI."' baseUrl)); " is 133.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,The length of the statement  "                rp.CreateReleasePackage(Path.Combine(di.FullName' rp.SuggestedReleaseFileName)' packagesDir' contentsPostProcessHook: pkgPath => { " is 130.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,The length of the statement  "            var zipPath = createSetupEmbeddedZip(Path.Combine(di.FullName' newestFullRelease.Filename)' di.FullName' backgroundGif' signingOpts' setupIcon).Result; " is 151.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Releasify,The length of the statement  "                var arguments = String.Format("\"{0}\" \"{1}\" \"--set-required-framework\" \"{2}\""' targetSetupExe' zipPath' frameworkVersion); " is 129.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,ProcessStart,The length of the statement  "                    Utility.AppDirForVersion(appDir' new SemanticVersion(x.Version.Version.Major' x.Version.Version.Minor' x.Version.Version.Build' "")) " is 132.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,ProcessStart,The length of the statement  "                Process.Start(new ProcessStartInfo(targetExe.FullName' arguments ?? "") { WorkingDirectory = Path.GetDirectoryName(targetExe.FullName) }); " is 138.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,setPEVersionInfoAndIcon,The length of the statement  "            var args = verStrings.Aggregate(new StringBuilder("\"" + realExePath + "\"")' (acc' x) => { acc.AppendFormat(" --set-version-string \"{0}\" \"{1}\""' x.Key' x.Value); return acc; }); " is 182.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,createMsiPackage,The length of the statement  "                templateData[String.Format("IdAsGuid{0}"' i)] = Utility.CreateGuidFromHash(String.Format("{0}:{1}"' package.Id' i)).ToString(); " is 127.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,createMsiPackage,The length of the statement  "            var candleParams = String.Format("-nologo -ext WixNetFxExtension -out \"{0}\" \"{1}\""' wxsTarget.Replace(".wxs"' ".wixobj")' wxsTarget); " is 137.
Long Statement,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,createMsiPackage,The length of the statement  "            var lightParams = String.Format("-ext WixNetFxExtension -sval -out \"{0}\" \"{1}\""' wxsTarget.Replace(".wxs"' ".msi")' wxsTarget.Replace(".wxs"' ".wixobj")); " is 158.
Long Statement,Squirrel.Update,SetupLogLogger,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Write,The length of the statement  "            lock (gate) inner.WriteLine($"[{DateTime.Now.ToString("dd/MM/yy HH:mm:ss")}] {logLevel.ToString().ToLower()}: {message}"); " is 122.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "install="' "Install the app whose package is in the specified directory"' v => { updateAction = UpdateAction.Install; target = v; } }' " is 137.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "download="' "Download the releases specified by the URL and write new results to stdout as JSON"' v => { updateAction = UpdateAction.Download; target = v; } }' " is 162.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "checkForUpdate="' "Check for one available update and writes new results to stdout as JSON"' v => { updateAction = UpdateAction.CheckForUpdate; target = v; } }' " is 163.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "update="' "Update the application to the latest remote version specified by URL"' v => { updateAction = UpdateAction.Update; target = v; } }' " is 144.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "releasify="' "Update or generate a releases directory with a given NuGet package"' v => { updateAction = UpdateAction.Releasify; target = v; } }' " is 148.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "createShortcut="' "Create a shortcut for the given executable name"' v => { updateAction = UpdateAction.Shortcut; target = v; } }' " is 133.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "removeShortcut="' "Remove a shortcut for the given executable name"' v => { updateAction = UpdateAction.Deshortcut; target = v; } }' " is 135.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "updateSelf="' "Copy the currently executing Update.exe into the default location"' v => { updateAction =  UpdateAction.UpdateSelf; target = v; } }' " is 150.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "processStart="' "Start an executable in the latest version of the app package"' v => { updateAction =  UpdateAction.ProcessStart; processStart = v; }' true}' " is 160.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "processStartAndWait="' "Start an executable in the latest version of the app package"' v => { updateAction =  UpdateAction.ProcessStart; processStart = v; shouldWait = true; }' true}' " is 186.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "l=|shortcut-locations="' "Comma-separated string of shortcut locations' e.g. 'Desktop'StartMenu'"' v => shortcutArgs = v}' " is 125.
Long Statement,Squirrel.Update,StartupOption,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\StartupOption.cs,Parse,The length of the statement  "                { "msi-win64"' "Mark the MSI as 64-bit' which is useful in Enterprise deployment scenarios"' _ => packageAs64Bit = true}' " is 121.
Complex Conditional,Mono.Options,Option,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&  					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Magic Number,Squirrel.Update,AnimatedGifWindow,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\AnimatedGifWindow.cs,ShowWindow,The following statement contains a magic number: var thread = new Thread(() => {                  if (token.IsCancellationRequested) return;                    try {                      Task.Delay(initialDelay' token).ContinueWith(t => { return true; }).Wait();                  } catch (Exception) {                      return;                  }                    wnd = new AnimatedGifWindow();                  wnd.Show();                    Task.Delay(TimeSpan.FromSeconds(5.0)' token).ContinueWith(t => {                      if (t.IsCanceled) return;                      wnd.Dispatcher.BeginInvoke(new Action(() => wnd.Topmost = false));                  });                    token.Register(() => wnd.Dispatcher.BeginInvoke(new Action(wnd.Close)));                  EventHandler<int> progressSourceOnProgress = ((sender' p) =>                      wnd.Dispatcher.BeginInvoke(                          new Action(() => wnd.TaskbarItemInfo.ProgressValue = p/100.0)));                  progressSource.Progress += progressSourceOnProgress;                  try {                      (new Application()).Run(wnd);                  } finally {                      progressSource.Progress -= progressSourceOnProgress;                  }              });
Magic Number,Squirrel.Update,AnimatedGifWindow,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\AnimatedGifWindow.cs,ShowWindow,The following statement contains a magic number: var thread = new Thread(() => {                  if (token.IsCancellationRequested) return;                    try {                      Task.Delay(initialDelay' token).ContinueWith(t => { return true; }).Wait();                  } catch (Exception) {                      return;                  }                    wnd = new AnimatedGifWindow();                  wnd.Show();                    Task.Delay(TimeSpan.FromSeconds(5.0)' token).ContinueWith(t => {                      if (t.IsCanceled) return;                      wnd.Dispatcher.BeginInvoke(new Action(() => wnd.Topmost = false));                  });                    token.Register(() => wnd.Dispatcher.BeginInvoke(new Action(wnd.Close)));                  EventHandler<int> progressSourceOnProgress = ((sender' p) =>                      wnd.Dispatcher.BeginInvoke(                          new Action(() => wnd.TaskbarItemInfo.ProgressValue = p/100.0)));                  progressSource.Progress += progressSourceOnProgress;                  try {                      (new Application()).Run(wnd);                  } finally {                      progressSource.Progress -= progressSourceOnProgress;                  }              });
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,executeCommandLine,The following statement contains a magic number: switch (opt.updateAction) {  #if !MONO                  case UpdateAction.Install:                      var progressSource = new ProgressSource();                      if (!opt.silentInstall) {                          AnimatedGifWindow.ShowWindow(TimeSpan.FromSeconds(4)' animatedGifWindowToken.Token' progressSource);                      }                        Install(opt.silentInstall' progressSource' Path.GetFullPath(opt.target)).Wait();                      animatedGifWindowToken.Cancel();                      break;                  case UpdateAction.Uninstall:                      Uninstall().Wait();                      break;                  case UpdateAction.Download:                      Console.WriteLine(Download(opt.target).Result);                      break;                  case UpdateAction.Update:                      Update(opt.target).Wait();                      break;                  case UpdateAction.CheckForUpdate:                      Console.WriteLine(CheckForUpdate(opt.target).Result);                      break;                  case UpdateAction.UpdateSelf:                      UpdateSelf().Wait();                      break;                  case UpdateAction.Shortcut:                      Shortcut(opt.target' opt.shortcutArgs' opt.processStartArgs' opt.setupIcon);                      break;                  case UpdateAction.Deshortcut:                      Deshortcut(opt.target' opt.shortcutArgs);                      break;                  case UpdateAction.ProcessStart:                      ProcessStart(opt.processStart' opt.processStartArgs' opt.shouldWait);                      break;  #endif                  case UpdateAction.Releasify:                      Releasify(opt.target' opt.releaseDir' opt.packagesDir' opt.bootstrapperExe' opt.backgroundGif' opt.signingParameters' opt.baseUrl' opt.setupIcon' !opt.noMsi' opt.packageAs64Bit' opt.frameworkVersion' !opt.noDelta);                      break;                  }
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Install,The following statement contains a magic number: await Task.Delay(500);
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Install,The following statement contains a magic number: this.ErrorIfThrows(() => Utility.Retry(() => Directory.CreateDirectory(mgr.RootAppDirectory)' 3)'                          "Couldn't recreate app directory' perhaps Antivirus is blocking it");
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Update,The following statement contains a magic number: var updateInfo = await mgr.CheckForUpdate(intention: UpdaterIntention.Update' ignoreDeltaUpdates: ignoreDeltaUpdates' progress: x => Console.WriteLine(x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Update,The following statement contains a magic number: await mgr.DownloadReleases(updateInfo.ReleasesToApply' x => Console.WriteLine(33 + x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Update,The following statement contains a magic number: await mgr.DownloadReleases(updateInfo.ReleasesToApply' x => Console.WriteLine(33 + x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Update,The following statement contains a magic number: await mgr.ApplyReleases(updateInfo' x => Console.WriteLine(66 + x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Update,The following statement contains a magic number: await mgr.ApplyReleases(updateInfo' x => Console.WriteLine(66 + x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Download,The following statement contains a magic number: var updateInfo = await mgr.CheckForUpdate(intention: UpdaterIntention.Update' progress: x => Console.WriteLine(x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Download,The following statement contains a magic number: await mgr.DownloadReleases(updateInfo.ReleasesToApply' x => Console.WriteLine(33 + x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,Download,The following statement contains a magic number: await mgr.DownloadReleases(updateInfo.ReleasesToApply' x => Console.WriteLine(33 + x / 3));
Magic Number,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,createMsiPackage,The following statement contains a magic number: i <= 10
Magic Number,Squirrel.Update,SetupLogLogger,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,SetupLogLogger,The following statement contains a magic number: inner = new StreamWriter(str' Encoding.UTF8' 4096' false) { AutoFlush = true };
Magic Number,Squirrel.Update,SetupLogLogger,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,SetupLogLogger,The following statement contains a magic number: i < 10
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'  					delegate (OptionValueCollection v) {action (v [0]' v [1]);}' hidden);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' ""' 80' 80);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' ""' 80' 80);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' new string (' '' OptionWidth+2)'  						Description_FirstWidth' Description_RemWidth);
Magic Number,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' s.Description' new string (' '' OptionWidth+2)'  						Description_FirstWidth' Description_RemWidth);
Missing Default,Squirrel.Update,Program,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Program.cs,executeCommandLine,The following switch statement is missing a default case: switch (opt.updateAction) {  #if !MONO                  case UpdateAction.Install:                      var progressSource = new ProgressSource();                      if (!opt.silentInstall) {                          AnimatedGifWindow.ShowWindow(TimeSpan.FromSeconds(4)' animatedGifWindowToken.Token' progressSource);                      }                        Install(opt.silentInstall' progressSource' Path.GetFullPath(opt.target)).Wait();                      animatedGifWindowToken.Cancel();                      break;                  case UpdateAction.Uninstall:                      Uninstall().Wait();                      break;                  case UpdateAction.Download:                      Console.WriteLine(Download(opt.target).Result);                      break;                  case UpdateAction.Update:                      Update(opt.target).Wait();                      break;                  case UpdateAction.CheckForUpdate:                      Console.WriteLine(CheckForUpdate(opt.target).Result);                      break;                  case UpdateAction.UpdateSelf:                      UpdateSelf().Wait();                      break;                  case UpdateAction.Shortcut:                      Shortcut(opt.target' opt.shortcutArgs' opt.processStartArgs' opt.setupIcon);                      break;                  case UpdateAction.Deshortcut:                      Deshortcut(opt.target' opt.shortcutArgs);                      break;                  case UpdateAction.ProcessStart:                      ProcessStart(opt.processStart' opt.processStartArgs' opt.shouldWait);                      break;  #endif                  case UpdateAction.Releasify:                      Releasify(opt.target' opt.releaseDir' opt.packagesDir' opt.bootstrapperExe' opt.backgroundGif' opt.signingParameters' opt.baseUrl' opt.setupIcon' !opt.noMsi' opt.packageAs64Bit' opt.frameworkVersion' !opt.noDelta);                      break;                  }
Missing Default,Mono.Options,OptionSet,D:\research\architectureSmells\repos1\Squirrel_Squirrel.Windows\src\Update\Mono.Options\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:  						ParseValue (v' c);  						break;  				}
