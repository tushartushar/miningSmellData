Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,ReadAndSerialize,The method has 114 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The method has 147 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateAuthorizationRules,The method has 117 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,GetMessageText,The method has 121 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,GetMessageText,The method has 120 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The method has 235 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has 104 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has 112 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,The method has 250 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessages,The method has 242 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The method has 526 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageText,The method has 132 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageText,The method has 107 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageText,The method has 137 lines of code.
Long Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The method has 102 lines of code.
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,CustomMessageSessionAsyncHandler,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\CustomMessageSessionAsyncHandler.cs,OnMessageAsync,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,SetLease,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetOperator,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,ReadAndSerialize,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,GetPropertyValue,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,MapClassToEntity,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,Cyclomatic complexity of the method is 28
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateQueues,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateTopics,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateRelays,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateEventHubs,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateSubscriptions,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateAuthorizationRules,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateRules,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateFilter,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateNotificationHubs,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,Equals,Cyclomatic complexity of the method is 25
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,GetValue,Cyclomatic complexity of the method is 23
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,Cyclomatic complexity of the method is 27
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetMessagingNamespaces,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,TwoFilesConfiguration,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\TwoFilesConfiguration.cs,TryUpdateEntryInDictionarySectionUsingRawXml,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer.Helpers,TwoFilesConfiguration,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\TwoFilesConfiguration.cs,HandleUpdateConfigurationFileError,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateBrokeredMessageTemplate,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventDataBatch,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventDataBatch,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateMessageForApiReceiver,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateMessageForWcfReceiver,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessages,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendBatch,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessage,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,Cyclomatic complexity of the method is 60
Complex Method,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,ConfigurationHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ConfigurationHelper.cs,UpdateServiceBusNamespace,The method has 5 parameters. Parameters: configFileUse' key' newKey' newValue' writeToLog
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,SetLease,The method has 5 parameters. Parameters: ns' eventHub' consumerGroup' partitionId' lease
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,CheckpointAsync,The method has 5 parameters. Parameters: ns' eventHub' consumerGroup' lease' offset
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,ServiceBusNamespace,The method has 12 parameters. Parameters: connectionStringType' connectionString' uri' ns' servicePath' name' key' stsEndpoint' transportType' isSas' entityPath' isUserCreated
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,ServiceBusNamespace,The method has 11 parameters. Parameters: connectionString' endpoint' stsEndpoint' runtimePort' managementPort' windowsDomain' windowsUsername' windowsPassword' ns' transportType' isUserCreated
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,TwoFilesConfiguration,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\TwoFilesConfiguration.cs,UpdateEntryInDictionarySection,The method has 5 parameters. Parameters: sectionName' key' newKey' newValue' writeToLog
Long Parameter List,Microsoft.Azure.ServiceBusExplorer.Helpers,TwoFilesConfiguration,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\TwoFilesConfiguration.cs,WriteParsingFailure,The method has 5 parameters. Parameters: writeToLogDelegate' configFile' appSettingsKey' value' type
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has 7 parameters. Parameters: nameSpace' path' issuerName' issuerSecret' sharedAccessKeyName' sharedAccessKey' transportType
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has 6 parameters. Parameters: uri' issuerName' issuerSecret' sharedAccessKeyName' sharedAccessKey' transportType
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateBrokeredMessageTemplate,The method has 14 parameters. Parameters: text' label' contentType' messageId' sessionId' correlationId' partitionKey' to' replyTo' replyToSessionId' timeToLive' scheduledEnqueueTimeUtc' forcePersistence' properties
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateBrokeredMessageTemplate,The method has 13 parameters. Parameters: stream' label' contentType' messageId' sessionId' correlationId' partitionKey' to' replyTo' replyToSessionId' timeToLive' scheduledEnqueueTimeUtc' properties
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,The method has 19 parameters. Parameters: eventHubClient' eventDataTemplateEnumerable' getMessageNumber' messageCount' taskId' updatePartitionKey' noPartitionKey' addMessageNumber' logging' verbose' statistics' sendBatch' batchSize' senderThinkTime' thinkTime' eventDataInspector' updateStatistics' cancellationTokenSource' partitionId
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventDataBatch,The method has 6 parameters. Parameters: eventHubClient' eventDataList' messageNumberList' taskId' logging' verbose
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventDataBatch,The method has 6 parameters. Parameters: eventHubSender' eventDataList' messageNumberList' taskId' logging' verbose
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,The method has 6 parameters. Parameters: eventHubClient' eventData' messageNumber' taskId' logging' verbose
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,The method has 6 parameters. Parameters: eventHubSender' eventData' messageNumber' taskId' logging' verbose
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateMessageForApiReceiver,The method has 6 parameters. Parameters: messageTemplate' taskId' updateMessageId' oneSessionPerTask' bodyType' messageInspector
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateMessageForWcfReceiver,The method has 5 parameters. Parameters: messageTemplate' taskId' updateMessageId' oneSessionPerTask' to
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessages,The method has 21 parameters. Parameters: messageSender' messageTemplateEnumerable' getMessageNumber' messageCount' taskId' updateMessageId' addMessageNumber' oneSessionPerTask' logging' verbose' statistics' sendBatch' isBinary' batchSize' senderThinkTime' thinkTime' bodyType' messageInspector' updateStatistics' cancellationTokenSource' traceMessage
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendBatch,The method has 8 parameters. Parameters: messageSender' messageList' taskId' isBinary' useWcf' logging' verbose' elapsedMilliseconds
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessage,The method has 8 parameters. Parameters: messageSender' message' taskId' isBinary' useWcf' logging' verbose' elapsedMilliseconds
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The method has 18 parameters. Parameters: messageReceiver' taskId' timeout' filter' moveToDeadLetterQueue' completeReceive' defer' logging' verbose' statistics' receiveBatch' batchSize' receiverThinkTime' thinkTime' messageInspector' updateStatistics' cancellationTokenSource' traceMessage
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The method has 6 parameters. Parameters: entityDescription' messageCount' complete' deadletterQueue' receiveTimeout' sessionTimeout
Long Parameter List,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveNextMessage,The method has 6 parameters. Parameters: messageCount' messageTotal' messageReceiver' encoder' complete' timeout
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ConfigurationParameters,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ConfigurationParameters.cs,,The length of the parameter ConfigurationConfigFileParameter is 32.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ConfigurationParameters,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ConfigurationParameters.cs,,The length of the parameter SaveCheckpointsToFileParameter is 30.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ConfigurationParameters,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ConfigurationParameters.cs,,The length of the parameter MonitorRefreshIntervalParameter is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ConfigurationParameters,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ConfigurationParameters.cs,,The length of the parameter MicrosoftServiceBusConnectionString is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter ServicePointMaxIdleTimeMilliSeconds is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter DefaultUsedSpaceAlertPercentage is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter DefaultDuplicateDetectionHistoryExpiryDuration is 46.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MinimumAllowedIdleTimeoutForAutoDelete is 38.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MaximumAllowedIdleTimeoutForAutoDelete is 38.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MaximumDuplicateDetectionHistoryTimeWindow is 42.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MinimumDuplicateDetectionHistoryTimeWindow is 42.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MaximumRequestSchedulerQueueDepth is 33.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MaximumBatchSchedulerQueueDepth is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter MaximumMessageHeaderPropertySize is 32.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter DefaultMessageSessionPrefetchCount is 34.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,Constants,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\Constants.cs,,The length of the parameter DefaultLastPeekedSequenceNumber is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,,The length of the parameter PropertyIsNotPrimitiveOrDateTimeOrString is 40.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,,The length of the parameter FilterExpressionCannotBeNullOrEmpty is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,,The length of the parameter FilterExpressionCannotStartWithLogicalOperator is 46.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,,The length of the parameter NotificationHubDescriptionClass is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,,The length of the parameter LambdaExpressionRuleActionFqdn is 30.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,,The length of the parameter RelayClientAuthenticationTypeProperty is 37.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,,The length of the parameter relayClientAuthenticationDictionary is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetMessagingNamespaces,The length of the parameter microsoftServiceBusConnectionString is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespacesNotConfigured is 33.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceIsNullOrEmpty is 32.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceNamespaceAndUriAreNullOrEmpty is 48.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceIssuerNameIsNullOrEmpty is 42.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceIssuerSecretIsNullOrEmpty is 44.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceEndpointIsNullOrEmpty is 40.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceEndpointPrefixedWithSb is 41.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceStsEndpointIsNullOrEmpty is 43.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceRuntimePortIsNullOrEmpty is 43.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceManagementPortIsNullOrEmpty is 46.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceEndpointUriIsInvalid is 39.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceSharedAccessKeyNameIsInvalid is 47.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ServiceBusNamespaceSharedAccessKeyIsInvalid is 43.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringSharedAccessKeyName is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringSharedAccessKey is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringManagementPort is 30.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringWindowsUsername is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringWindowsPassword is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringSharedSecretIssuer is 34.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter ConnectionStringSharedSecretValue is 33.
Long Identifier,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,,The length of the parameter SasConnectionStringEntityPathFormat is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the parameter notificationHubNamespaceManagerSettings is 39.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the parameter notificationHubNamespaceManagerSettings is 39.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ServiceBusConnectionStringCannotBeNull is 38.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ServiceBusUriArgumentCannotBeNull is 33.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ServiceBusNamespaceArgumentCannotBeNull is 39.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ServiceBusIssuerNameArgumentCannotBeNull is 40.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ServiceBusIssuerSecretArgumentCannotBeNull is 42.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter SubscriptionDescriptionCannotBeNull is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter EventHubDescriptionCannotBeNull is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter PartitionDescriptionCannotBeNull is 32.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ConsumerGroupDescriptionCannotBeNull is 36.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter NotificationHubDescriptionCannotBeNull is 38.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter MessageSuccessfullyReceivedNoTask is 33.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ReceivedMessagePropertiesHeader is 31.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter MessageReadFromDeadLetterQueue is 30.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter ReceiverStatisticsWithCompleteLine1 is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter EventDataTemplateEnumerableCannotBeNull is 39.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter CancellationTokenSourceCannotBeNull is 35.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter MessageFactorySuccessfullyCreated is 33.
Long Identifier,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,,The length of the parameter notificationHubNamespaceManager is 31.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,ReadCheckpoints,The length of the statement  "                    itemList = JsonSerializerHelper.Deserialize<List<EventProcessorCheckpointInfo>>(stream) ?? new List<EventProcessorCheckpointInfo>(); " is 132.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The length of the statement  "                    var propertyInfo = propertyList.FirstOrDefault(p => string.Compare(p.Name' property' StringComparison.InvariantCultureIgnoreCase) == 0); " is 136.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The length of the statement  "                        throw new ApplicationException(string.Format(PropertyIsNotPrimitiveOrDateTimeOrString' propertyInfo.PropertyType' propertyInfo.Name)); " is 134.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The length of the statement  "                                     Convert.ChangeType(RemoveDelimiters(value)' Nullable.GetUnderlyingType(propertyInfo.PropertyType) ?? propertyInfo.PropertyType) : " is 129.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The length of the statement  "            var propertyInfo = propertyList.FirstOrDefault(p => string.Compare(p.Name' filter.Property' StringComparison.InvariantCultureIgnoreCase) == 0); " is 143.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The length of the statement  "                var left = propertyInfo.PropertyType != typeof(DateTime?) ? member : (Expression)Expression.Call(member' getValueOrDefault); " is 124.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,DeserializeAndCreate,The length of the statement  "                    CreateNotificationHubs(serviceBusHelper' root.Descendants(string.Format(NodeNameFormat' Namespace' NotificationHubEntity))); " is 124.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,GetProperties,The length of the statement  "                Where(p => p.Name == RelayType || (p.CanRead == canRead && p.CanWrite == canWrite && p.Name != ExtensionData && p.PropertyType != typeof(DateTime))). " is 149.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,ReadProperties,The length of the statement  "                            Value = ConversionHelper.MapStringTypeToCLRType(element.Attribute(Type).Value.Trim()' element.Attribute(Value).Value.Trim()) " is 124.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,GetRelayClientAuthenticationType,The length of the statement  "            return (RelayClientAuthenticationType)relayClientAuthenticationDictionary[binding.Name].GetValue(securityProperty' null); " is 121.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "            var parameters = connectionString.Split(';').ToDictionary(s => s.Substring(0' s.IndexOf('=')).ToLower()' s => s.Substring(s.IndexOf('=') + 1)); " is 143.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "                if (!parameters.ContainsKey(ConnectionStringSharedAccessKeyName) || string.IsNullOrWhiteSpace(parameters[ConnectionStringSharedAccessKeyName])) " is 143.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "                if (!parameters.ContainsKey(ConnectionStringSharedAccessKey) || string.IsNullOrWhiteSpace(parameters[ConnectionStringSharedAccessKey])) " is 135.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "                return new ServiceBusNamespace(ServiceBusNamespaceType.Cloud' connectionString' endpoint' ns' null' sharedAccessKeyName' sharedAccessKey' stsEndpoint' transportType' true'  " is 171.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "                return new ServiceBusNamespace(connectionString' endpoint' stsEndpoint' runtimePort' managementPort' windowsDomain' windowsUsername' windowsPassword' ns' transportType' isUserCreated); " is 184.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "                return new ServiceBusNamespace(ServiceBusNamespaceType.Cloud' connectionString' endpoint' ns' null' issuerName' issuerSecret' stsEndpoint' transportType' isUserCreated); " is 169.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The length of the statement  "                return new ServiceBusNamespace(ServiceBusNamespaceType.Custom' connectionString' uriString' ns' servicePath' issuerName' issuerSecret' null' transportType' isUserCreated); " is 171.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetMessagingNamespaces,The length of the statement  "                var serviceBusNamespace = ServiceBusNamespace.GetServiceBusNamespace(ConfigurationParameters.MicrosoftServiceBusConnectionString' microsoftServiceBusConnectionString' writeToLog); " is 179.
Long Statement,Microsoft.Azure.ServiceBusExplorer.Helpers,VersionProvider,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\VersionProvider.cs,IsLatestVersion,The length of the statement  "            var currentVersion = new Version(currentVersionInfo.FileMajorPart' currentVersionInfo.FileMinorPart' currentVersionInfo.FileBuildPart); " is 135.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret); " is 120.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff' " is 130.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential) " is 133.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff' " is 147.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings); " is 127.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret); " is 120.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff' " is 130.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential) " is 133.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff' " is 147.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings); " is 127.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    namespaceManager = Microsoft.ServiceBus.NamespaceManager.CreateFromConnectionString(connectionString = csBuilder.ToString()); " is 125.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    namespaceManager.Settings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff' " is 131.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    notificationHubNamespaceManager = NotificationHubs.NamespaceManager.CreateFromConnectionString(serviceBusNamespace.ConnectionStringWithoutTransportType); " is 153.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                    if (notificationHubNamespaceManager.Settings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential) " is 134.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                        notificationHubNamespaceManager.Settings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff' " is 148.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The length of the statement  "                WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceManager.Address.AbsoluteUri)); " is 131.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetRelayUri,The length of the statement  "            return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(currentScheme' Namespace' string.Concat(ServicePath' description.Path)); " is 139.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetEventHubUri,The length of the statement  "            return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' eventHubPath)); " is 128.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetPartition,The length of the statement  "                return RetryHelper.RetryFunc(() => namespaceManager.GetEventHubPartition(partitionDescription.EventHubPath' partitionDescription.ConsumerGroupName' partitionDescription.PartitionId)' writeToLog); " is 195.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetPartitions,The length of the statement  "            return description.PartitionIds.Select((t' i) => i).Select(index => RetryHelper.RetryFunc(() => namespaceManager.GetEventHubPartition(description.Path' description.PartitionIds[index])' writeToLog)).ToList(); " is 208.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetPartitions,The length of the statement  "                return description.PartitionIds.Select((t' i) => i).Select(index => RetryHelper.RetryFunc(() => namespaceManager.GetEventHubPartition(description.Path' description.PartitionIds[index])' writeToLog)).ToList(); " is 208.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetPartitions,The length of the statement  "                return description.PartitionIds.Select((t' i) => i).Select(index => RetryHelper.RetryFunc(() => namespaceManager.GetEventHubPartition(description.Path' consumerGroupName' description.PartitionIds[index])' writeToLog)).ToList(); " is 227.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetPartitions,The length of the statement  "                return description.PartitionIds.Select((t' i) => i).Select(index => RetryHelper.RetryFunc(() => namespaceManager.GetEventHubPartition(description.Path' consumerGroupName' description.PartitionIds[index])' writeToLog)).ToList(); " is 227.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetPartitionUri,The length of the statement  "            return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' eventHubName' "/"' consumerGroupName' "/"' partitionId)); " is 170.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteConsumerGroup,The length of the statement  "                OnDelete?.Invoke(new ServiceBusHelperEventArgs(new ConsumerGroupDescription(eventHubName' name)' EntityType.ConsumerGroup)); " is 124.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteConsumerGroup,The length of the statement  "                RetryHelper.RetryAction(() => namespaceManager.DeleteConsumerGroup(consumerGroupDescription.EventHubPath' consumerGroupDescription.Name)' writeToLog); " is 150.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteConsumerGroup,The length of the statement  "                WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ConsumerGroupDeleted' consumerGroupDescription.Name)); " is 123.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetConsumerGroupUri,The length of the statement  "            return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' eventHubName' "/"' consumerGroupPath)); " is 152.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateNotificationHub,The length of the statement  "            var notificationHub = RetryHelper.RetryFunc(() => notificationHubNamespaceManager.CreateNotificationHub(description)' writeToLog); " is 130.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteNotificationHub,The length of the statement  "                await RetryHelper.RetryActionAsync(() => notificationHubNamespaceManager.DeleteNotificationHubAsync(notificationHubDescription.Path)' writeToLog); " is 146.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteNotificationHub,The length of the statement  "                WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' NotificationHubDeleted' notificationHubDescription.Path)); " is 127.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,UpdateNotificationHub,The length of the statement  "                var notificationHub = RetryHelper.RetryFunc(() => notificationHubNamespaceManager.UpdateNotificationHub(description)' writeToLog); " is 130.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetNotificationHubUri,The length of the statement  "            return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' notificationHubPath)); " is 135.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetQueues,The length of the statement  "                    //Documentation states AND is the only logical clause allowed in the filter (And FYI a maximum of only 3 filter expressions allowed) " is 132.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetQueues,The length of the statement  "                    //https://docs.microsoft.com/en-us/dotnet/api/microsoft.servicebus.namespacemanager.getqueuesasync?view=azure-dotnet#Microsoft_ServiceBus_NamespaceManager_GetQueuesAsync_System_String_ " is 184.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetQueues,The length of the statement  "                        var task = string.IsNullOrWhiteSpace(filter) ? namespaceManager.GetQueuesAsync() : namespaceManager.GetQueuesAsync(splitFilter); " is 128.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageSessions,The length of the statement  "            return RetryHelper.RetryFunc(() => dateTime != null ? queueClient.GetMessageSessions(dateTime.Value) : queueClient.GetMessageSessions()' writeToLog); " is 149.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageSessions,The length of the statement  "            return RetryHelper.RetryFunc(() => dateTime != null ? queueClient.GetMessageSessions(dateTime.Value) : queueClient.GetMessageSessions()' writeToLog); " is 149.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetTopics,The length of the statement  "                        var task = string.IsNullOrWhiteSpace(filter) ? namespaceManager.GetTopicsAsync() : namespaceManager.GetTopicsAsync(splitFilter); " is 128.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageSessions,The length of the statement  "            return RetryHelper.RetryFunc(() => dateTime != null ? subscriptionClient.GetMessageSessions(dateTime.Value) : subscriptionClient.GetMessageSessions()' writeToLog); " is 163.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetQueueUri,The length of the statement  "                return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' queuePath)); " is 125.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetQueueDeadLetterQueueUri,The length of the statement  "                return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' QueueClient.FormatDeadLetterPath(queuePath))); " is 159.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetTopicUri,The length of the statement  "                return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' topicPath)); " is 125.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetSubscriptionUri,The length of the statement  "                return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' string.Concat(ServicePath' SubscriptionClient.FormatSubscriptionPath(topicPath' name))); " is 174.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetSubscriptionDeadLetterQueueUri,The length of the statement  "                return Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme' Namespace' SubscriptionClient.FormatDeadLetterPath(topicPath' name)); " is 144.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateSubscription,The length of the statement  "            var subscription = RetryHelper.RetryFunc(() => namespaceManager.CreateSubscription(subscriptionDescription)' writeToLog); " is 121.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateSubscription,The length of the statement  "            WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' SubscriptionCreated' subscription.Name' topicDescription.Path)); " is 133.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateSubscription,The length of the statement  "            OnCreate?.Invoke(new ServiceBusHelperEventArgs(new SubscriptionWrapper(subscription' topicDescription)' EntityType.Subscription)); " is 130.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateSubscription,The length of the statement  "            var subscription = RetryHelper.RetryFunc(() => namespaceManager.CreateSubscription(subscriptionDescription' ruleDescription)' writeToLog); " is 138.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateSubscription,The length of the statement  "            WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' SubscriptionCreated' subscription.Name' topicDescription.Path)); " is 133.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateSubscription,The length of the statement  "            OnCreate?.Invoke(new ServiceBusHelperEventArgs(new SubscriptionWrapper(subscription' topicDescription)' EntityType.Subscription)); " is 130.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,UpdateSubscription,The length of the statement  "            var subscription = RetryHelper.RetryFunc(() => namespaceManager.UpdateSubscription(subscriptionDescription)' writeToLog); " is 121.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,UpdateSubscription,The length of the statement  "            WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' SubscriptionUpdated' subscription.Name' topicDescription.Path)); " is 133.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,UpdateSubscription,The length of the statement  "            //OnCreate(new ServiceBusHelperEventArgs(new SubscriptionWrapper(subscription' topicDescription)' EntityType.Subscription)); " is 124.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteSubscription,The length of the statement  "            await RetryHelper.RetryActionAsync(() => namespaceManager.DeleteSubscriptionAsync(subscriptionDescription.TopicPath' subscriptionDescription.Name)' writeToLog); " is 160.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,DeleteSubscription,The length of the statement  "            WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' SubscriptionDeleted' subscriptionDescription.Name' subscriptionDescription.TopicPath)); " is 156.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,AddRule,The length of the statement  "            var subscriptionClient = RetryHelper.RetryFunc(() => MessagingFactory.CreateSubscriptionClient(subscriptionDescription.TopicPath' " is 129.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,AddRule,The length of the statement  "            Func<IEnumerable<RuleDescription>> func = (() => namespaceManager.GetRules(subscriptionDescription.TopicPath' subscriptionDescription.Name)); " is 141.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,AddRule,The length of the statement  "            WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' RuleCreated' ruleDescription.Name' subscriptionDescription.Name)); " is 135.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateMessageForApiReceiver,The length of the statement  "            outboundMessage.SessionId = oneSessionPerTask ? taskId.ToString(CultureInfo.InvariantCulture) : messageTemplate.SessionId; " is 122.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,CreateMessageForWcfReceiver,The length of the statement  "                outboundMessage.SessionId = oneSessionPerTask ? taskId.ToString(CultureInfo.InvariantCulture) : messageTemplate.SessionId; " is 122.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessage,The length of the statement  "                        builder.AppendLine(string.Format(MessageTextFormat' messageText.Contains('\n') ? messageText : messageText.Substring(0' Math.Min(messageText.Length' 128)) + (messageText.Length >= 128 ? "..." : ""))); " is 200.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The length of the statement  "            var messagesPerSecond = totalReceiveElapsedTime > 0 ? (double)(messagesReceived * 1000) / (double)totalReceiveElapsedTime : 0; " is 126.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The length of the statement  "                        messageReceiver = messagingFactory.CreateMessageReceiver(SubscriptionClient.FormatDeadLetterPath(subscriptionDescription.TopicPath' " is 131.
Long Statement,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The length of the statement  "                            messageReceiver = messagingFactory.CreateMessageReceiver(SubscriptionClient.FormatSubscriptionPath(subscriptionDescription.TopicPath' " is 133.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,GetLease,The conditional expression  "string.IsNullOrWhiteSpace(ns) ||                  string.IsNullOrWhiteSpace(eventHub) ||                  string.IsNullOrWhiteSpace(consumerGroup) ||                  string.IsNullOrWhiteSpace(partitionId)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,SetLease,The conditional expression  "string.IsNullOrWhiteSpace(ns) ||                  string.IsNullOrWhiteSpace(eventHub) ||                  string.IsNullOrWhiteSpace(consumerGroup) ||                  string.IsNullOrWhiteSpace(partitionId)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,CheckpointAsync,The conditional expression  "string.IsNullOrWhiteSpace(ns) ||                  string.IsNullOrWhiteSpace(eventHub) ||                  string.IsNullOrWhiteSpace(consumerGroup) ||                  lease == null ||                  string.IsNullOrWhiteSpace(offset)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The conditional expression  "!propertyInfo.PropertyType.IsPrimitive &&                          propertyInfo.PropertyType != typeof(string) &&                          propertyInfo.PropertyType != typeof(DateTime) &&                          propertyInfo.PropertyType != typeof(DateTime?)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetString,The conditional expression  "value.Length >= 2 &&                  (value[0] == '\'' && value[value.Length - 1] == '\'') ||                  (value[0] == '"' && value[value.Length - 1] == '"')"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,RemoveDelimiters,The conditional expression  "value.Length >= 2 &&                  (value[0] == '\'' && value[value.Length - 1] == '\'') ||                  (value[0] == '"' && value[value.Length - 1] == '"')"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The conditional expression  "value is Filter || value is RuleAction || value is ApnsCredential || value is WnsCredential"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateAuthorizationRules,The conditional expression  "!string.IsNullOrWhiteSpace(keyName) &&                              !string.IsNullOrWhiteSpace(primaryKey) &&                              rights != null &&                              rights.Count > 0"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateAuthorizationRules,The conditional expression  "!string.IsNullOrWhiteSpace(keyName) &&                              !string.IsNullOrWhiteSpace(primaryKey) &&                              rights != null &&                              rights.Count > 0"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateAuthorizationRules,The conditional expression  "!string.IsNullOrWhiteSpace(issuerName) &&                              !string.IsNullOrWhiteSpace(claimType) &&                              !string.IsNullOrWhiteSpace(claimValue) &&                              rights != null &&                              rights.Count > 0"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,GetMessageText,The conditional expression  "messageText.ToCharArray().GroupBy(c => c).                                              Where(g => char.IsControl(g.Key) && g.Key != '\t' && g.Key != '\n' && g.Key != '\r').                                              Select(g => g.First()).Any()"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,GetMessageText,The conditional expression  "eventDataText.ToCharArray().GroupBy(c => c).                                              Where(g => char.IsControl(g.Key) && g.Key != '\t' && g.Key != '\n' && g.Key != '\r').                                              Select(g => g.First()).Any()"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,ServiceBusBindingHelper,The conditional expression  "type.Name != NetMessagingBinding &&                          type.Name.Length > 4 &&                          type.Name.Substring(type.Name.Length - 4' 4) != BasePostfix &&                          type.IsSubclassOf(typeof(Binding))"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,GetRelayClientAuthenticationType,The conditional expression  "binding == null ||                  !securityDictionary.ContainsKey(binding.Name) ||                  securityDictionary[binding.Name] == null ||                  !relayClientAuthenticationDictionary.ContainsKey(binding.Name) ||                  relayClientAuthenticationDictionary[binding.Name] == null"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,SetSecurityProperties,The conditional expression  "binding == null ||                  !securityDictionary.ContainsKey(binding.Name) ||                  securityDictionary[binding.Name] == null ||                  !relayClientAuthenticationDictionary.ContainsKey(binding.Name) ||                  relayClientAuthenticationDictionary[binding.Name] == null"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The conditional expression  "toLower.Contains(ConnectionStringRuntimePort) ||                  toLower.Contains(ConnectionStringManagementPort) ||                  toLower.Contains(ConnectionStringWindowsUsername) ||                  toLower.Contains(ConnectionStringWindowsDomain) ||                  toLower.Contains(ConnectionStringWindowsPassword)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The conditional expression  "!toLower.Contains(ConnectionStringEndpoint) ||                      !toLower.Contains(ConnectionStringStsEndpoint) ||                      !toLower.Contains(ConnectionStringRuntimePort) ||                      !toLower.Contains(ConnectionStringManagementPort)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The conditional expression  "defer &&                                  !readingDeferredMessages &&                                  filter != null &&                                  filter.Match(inboundMessage)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The conditional expression  "!deferredMessage &&                                  moveToDeadLetterQueue &&                                  filter != null &&                                  filter.Match(inboundMessage)"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The conditional expression  "messageReceiver.Mode == ReceiveMode.PeekLock &&                                      !completeReceive &&                                      !deferredMessage &&                                      !movedToDeadLetterQueue"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageText,The conditional expression  "!useAscii && messageText.ToCharArray().GroupBy(c => c).                                                  Where(g => char.IsControl(g.Key) && g.Key != '\t' && g.Key != '\n' && g.Key != '\r').                                                  Select(g => g.First()).Any()"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageText,The conditional expression  "messageText.ToCharArray().GroupBy(c => c).                                          Where(g => char.IsControl(g.Key) && g.Key != '\t' && g.Key != '\n' && g.Key != '\r').                                          Select(g => g.First()).Any()"  is complex.
Complex Conditional,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,GetMessageText,The conditional expression  "eventDataText.ToCharArray().GroupBy(c => c).                              Where(g => char.IsControl(g.Key) && g.Key != '\t' && g.Key != '\n' && g.Key != '\r').                              Select(g => g.First()).Any()"  is complex.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,BrokeredMessageExtensions,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\BrokeredMessageExtensions.cs,BrokeredMessageExtensions,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,EventDataExtensions,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventDataExtensions.cs,EventDataExtensions,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,EventProcessorCheckpointHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\EventProcessorCheckpointHelper.cs,WriteFile,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,LogMessage,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,WriteToLog,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,WriteToLog,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,LogEventData,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,WriteToLog,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,WriteToLog,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,WriteMessage,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,WriteRelayMessage,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,ReadRelayMessage,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,WriteProperties,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,ReadMessage,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageAndPropertiesHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageAndPropertiesHelper.cs,WriteFile,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageSerializationHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageSerializationHelper.cs,Serialize,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer.Helpers,MessageSerializationHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MessageSerializationHelper.cs,Serialize,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveNextMessage,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveNextMessage,The method has an empty catch block.
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,DeadLetterMessageHandler,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\DeadLetterMessageHandler.cs,DeleteMessages,The following statement contains a magic number: var lockedMessages = new Dictionary<long' BrokeredMessage>(1000);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,DeadLetterMessageHandler,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\DeadLetterMessageHandler.cs,DeleteMessages,The following statement contains a magic number: stopwatch.ElapsedMilliseconds >= maxTimeInSeconds * 1000
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,DeadLetterMessageHandler,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\DeadLetterMessageHandler.cs,MoveMessages,The following statement contains a magic number: var lockedMessages = new List<BrokeredMessage>(1000);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,DeadLetterMessageHandler,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\DeadLetterMessageHandler.cs,MoveMessages,The following statement contains a magic number: stopwatch.ElapsedMilliseconds >= maxTimeInSeconds * 1000
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,DeadLetterMessageHandler,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\DeadLetterMessageHandler.cs,GetMaxOperationTimeInSeconds,The following statement contains a magic number: const int FinalActionsTime = 3;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The following statement contains a magic number: switch (filterList.Count)              {                  case 1:                      exp = GetExpression(param' filterList[0]);                      break;                  case 2:                      exp = GetExpression(param' filterList[0]' filterList[1]);                      break;                  default:                      while (filterList.Count > 0)                      {                          var f1 = filterList[0];                          var f2 = filterList[1];                            exp = exp == null ?                                GetExpression(param' filterList[0]' filterList[1]) :                                op == LogicalOperator.Or ?                                Expression.OrElse(exp' GetExpression(param' filterList[0]' filterList[1])) :                                Expression.AndAlso(exp' GetExpression(param' filterList[0]' filterList[1]));                            op = filterList[1].LogicalOperator;                            filterList.Remove(f1);                          filterList.Remove(f2);                            if (filterList.Count != 1)                          {                              continue;                          }                          exp = Expression.AndAlso(exp' GetExpression(param' filterList[0]));                          filterList.RemoveAt(0);                      }                      break;              }
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetString,The following statement contains a magic number: return value.Length == 2 ? string.Empty : value.Substring(1' value.Length - 2);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetString,The following statement contains a magic number: return value.Length == 2 ? string.Empty : value.Substring(1' value.Length - 2);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetString,The following statement contains a magic number: value.Length >= 2 &&                  (value[0] == '\'' && value[value.Length - 1] == '\'') ||                  (value[0] == '"' && value[value.Length - 1] == '"')
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,RemoveDelimiters,The following statement contains a magic number: return value.Length == 2 ? string.Empty : value.Substring(1' value.Length - 2);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,RemoveDelimiters,The following statement contains a magic number: return value.Length == 2 ? string.Empty : value.Substring(1' value.Length - 2);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,RemoveDelimiters,The following statement contains a magic number: value.Length >= 2 &&                  (value[0] == '\'' && value[value.Length - 1] == '\'') ||                  (value[0] == '"' && value[value.Length - 1] == '"')
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The following statement contains a magic number: value = 1024;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The following statement contains a magic number: string.Compare(keyValuePair.Key'                                     MaxSizeInMegabytes'                                     StringComparison.InvariantCultureIgnoreCase) == 0 &&                      !(new List<long> { 1024' 2048' 3072' 4096' 5120 }).Contains((long)value)
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The following statement contains a magic number: string.Compare(keyValuePair.Key'                                     MaxSizeInMegabytes'                                     StringComparison.InvariantCultureIgnoreCase) == 0 &&                      !(new List<long> { 1024' 2048' 3072' 4096' 5120 }).Contains((long)value)
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The following statement contains a magic number: string.Compare(keyValuePair.Key'                                     MaxSizeInMegabytes'                                     StringComparison.InvariantCultureIgnoreCase) == 0 &&                      !(new List<long> { 1024' 2048' 3072' 4096' 5120 }).Contains((long)value)
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The following statement contains a magic number: string.Compare(keyValuePair.Key'                                     MaxSizeInMegabytes'                                     StringComparison.InvariantCultureIgnoreCase) == 0 &&                      !(new List<long> { 1024' 2048' 3072' 4096' 5120 }).Contains((long)value)
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,SerializeEntity,The following statement contains a magic number: string.Compare(keyValuePair.Key'                                     MaxSizeInMegabytes'                                     StringComparison.InvariantCultureIgnoreCase) == 0 &&                      !(new List<long> { 1024' 2048' 3072' 4096' 5120 }).Contains((long)value)
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,WriteToLog,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(50));
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,WriteToLog,The following statement contains a magic number: builder.AppendLine(string.Format(MessageTextFormat'                                  messageText.Contains('\n')                                      ? messageText                                      : messageText.Substring(0' Math.Min(messageText.Length' 128)) +                                        (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,LogBrokeredMessageInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogBrokeredMessageInspector.cs,WriteToLog,The following statement contains a magic number: builder.AppendLine(string.Format(MessageTextFormat'                                  messageText.Contains('\n')                                      ? messageText                                      : messageText.Substring(0' Math.Min(messageText.Length' 128)) +                                        (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,WriteToLog,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(50));
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,WriteToLog,The following statement contains a magic number: builder.AppendLine(string.Format(EventDataTextFormat'                                  messageText.Contains('\n')                                      ? messageText                                      : messageText.Substring(0' Math.Min(messageText.Length' 128)) +                                        (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,LogEventDataInspector,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\LogEventDataInspector.cs,WriteToLog,The following statement contains a magic number: builder.AppendLine(string.Format(EventDataTextFormat'                                  messageText.Contains('\n')                                      ? messageText                                      : messageText.Substring(0' Math.Min(messageText.Length' 128)) +                                        (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: LogFontSize = (decimal)8.25;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: TreeViewFontSize = (decimal)8.25;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: RetryCount = 10;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: RetryTimeout = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: ServerTimeout = 3;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: TopCount = 10;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: SenderThinkTime = 500;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: ReceiverThinkTime = 500;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,SetDefault,The following statement contains a magic number: MonitorRefreshInterval = 30;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,OnOffDeviceBrokeredMessageGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\OnOffDeviceBrokeredMessageGenerator.cs,OnOffDeviceBrokeredMessageGenerator,The following statement contains a magic number: MaxDeviceId = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,OnOffDeviceBrokeredMessageGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\OnOffDeviceBrokeredMessageGenerator.cs,OnOffDeviceBrokeredMessageGenerator,The following statement contains a magic number: AlertPercentage = 10;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,OnOffDeviceBrokeredMessageGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\OnOffDeviceBrokeredMessageGenerator.cs,GenerateBrokeredMessageCollection,The following statement contains a magic number: var payload = new OnOffDeviceEvent                      {                          EventId = EventId++'                          DeviceId = random.Next(MinDeviceId' MaxDeviceId + 1)'                          Value = random.Next(1' 101) <= AlertPercentage ? alertState : normalState'                          Timestamp = DateTime.UtcNow                      };
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,OnOffDeviceEventDataGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\OnOffDeviceEventDataGenerator.cs,OnOffDeviceEventDataGenerator,The following statement contains a magic number: MaxDeviceId = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,OnOffDeviceEventDataGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\OnOffDeviceEventDataGenerator.cs,OnOffDeviceEventDataGenerator,The following statement contains a magic number: AlertPercentage = 10;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,OnOffDeviceEventDataGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\OnOffDeviceEventDataGenerator.cs,GenerateEventDataCollection,The following statement contains a magic number: var payload = new OnOffDeviceEvent                      {                          EventId = EventId++'                          DeviceId = random.Next(MinDeviceId' MaxDeviceId + 1)'                          Value = random.Next(1' 101) <= AlertPercentage ? alertState : normalState'                          Timestamp = DateTime.UtcNow                      };
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,QueueDescriptionExtensions,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\QueueDescriptionExtensions.cs,MaxSizeInGigabytes,The following statement contains a magic number: return (int) (queueDescription.MaxSizeInMegabytes / 1024);
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,ServiceBusBindingHelper,The following statement contains a magic number: type.Name != NetMessagingBinding &&                          type.Name.Length > 4 &&                          type.Name.Substring(type.Name.Length - 4' 4) != BasePostfix &&                          type.IsSubclassOf(typeof(Binding))
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,ServiceBusBindingHelper,The following statement contains a magic number: type.Name != NetMessagingBinding &&                          type.Name.Length > 4 &&                          type.Name.Substring(type.Name.Length - 4' 4) != BasePostfix &&                          type.IsSubclassOf(typeof(Binding))
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusBindingHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusBindingHelper.cs,ServiceBusBindingHelper,The following statement contains a magic number: type.Name != NetMessagingBinding &&                          type.Name.Length > 4 &&                          type.Name.Substring(type.Name.Length - 4' 4) != BasePostfix &&                          type.IsSubclassOf(typeof(Binding))
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The following statement contains a magic number: parameters.Count < 3
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ServiceBusNamespace,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusNamespace.cs,GetServiceBusNamespace,The following statement contains a magic number: parameters.Count < 3
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ThresholdDeviceBrokeredMessageGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ThresholdDeviceBrokeredMessageGenerator.cs,ThresholdDeviceBrokeredMessageGenerator,The following statement contains a magic number: MaxDeviceId = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ThresholdDeviceBrokeredMessageGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ThresholdDeviceBrokeredMessageGenerator.cs,ThresholdDeviceBrokeredMessageGenerator,The following statement contains a magic number: MaxValue = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ThresholdDeviceEventDataGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ThresholdDeviceEventDataGenerator.cs,ThresholdDeviceEventDataGenerator,The following statement contains a magic number: MaxDeviceId = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,ThresholdDeviceEventDataGenerator,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ThresholdDeviceEventDataGenerator.cs,ThresholdDeviceEventDataGenerator,The following statement contains a magic number: MaxValue = 100;
Magic Number,Microsoft.Azure.ServiceBusExplorer.Helpers,TopicDescriptionExtensions,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\TopicDescriptionExtensions.cs,MaxSizeInGigabytes,The following statement contains a magic number: return (int) (topicDescription.MaxSizeInMegabytes / 1024);
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(nameSpace))                  {                      throw new ArgumentException(ServiceBusNamespaceArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the scheme' namespace and service name (optional)                  namespaceUri = Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme'                                                                                   nameSpace'                                                                                   path);                  // Create the atom feed URI using the scheme' namespace and service name (optional)                  atomFeedUri = Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(Uri.UriSchemeHttp'                                                                                  nameSpace'                                                                                  path);                  Namespace = nameSpace;                  ServicePath = path;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                      var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(nameSpace))                  {                      throw new ArgumentException(ServiceBusNamespaceArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the scheme' namespace and service name (optional)                  namespaceUri = Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme'                                                                                   nameSpace'                                                                                   path);                  // Create the atom feed URI using the scheme' namespace and service name (optional)                  atomFeedUri = Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(Uri.UriSchemeHttp'                                                                                  nameSpace'                                                                                  path);                  Namespace = nameSpace;                  ServicePath = path;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                      var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(nameSpace))                  {                      throw new ArgumentException(ServiceBusNamespaceArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the scheme' namespace and service name (optional)                  namespaceUri = Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(scheme'                                                                                   nameSpace'                                                                                   path);                  // Create the atom feed URI using the scheme' namespace and service name (optional)                  atomFeedUri = Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(Uri.UriSchemeHttp'                                                                                  nameSpace'                                                                                  path);                  Namespace = nameSpace;                  ServicePath = path;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                      var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(uri))                  {                      throw new ArgumentException(ServiceBusUriArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the uri specified in the Connect form                  namespaceUri = new Uri(uri);                  connectionStringType = ServiceBusNamespaceType.Cloud;                  if (!string.IsNullOrWhiteSpace(namespaceUri.Host) &&                      namespaceUri.Host.Contains('.'))                  {                      Namespace = namespaceUri.Host.Substring(0' namespaceUri.Host.IndexOf('.'));                  }                    // Create the atom feed URI using the scheme' namespace and service name (optional)                  if (uri.Substring(0' 4) != Uri.UriSchemeHttp)                  {                      var index = uri.IndexOf("://"' StringComparison.Ordinal);                      if (index > 0)                      {                          uri = Uri.UriSchemeHttp + uri.Substring(index);                      }                  }                  atomFeedUri = new Uri(uri);                    ServicePath = string.Empty;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                    var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(uri))                  {                      throw new ArgumentException(ServiceBusUriArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the uri specified in the Connect form                  namespaceUri = new Uri(uri);                  connectionStringType = ServiceBusNamespaceType.Cloud;                  if (!string.IsNullOrWhiteSpace(namespaceUri.Host) &&                      namespaceUri.Host.Contains('.'))                  {                      Namespace = namespaceUri.Host.Substring(0' namespaceUri.Host.IndexOf('.'));                  }                    // Create the atom feed URI using the scheme' namespace and service name (optional)                  if (uri.Substring(0' 4) != Uri.UriSchemeHttp)                  {                      var index = uri.IndexOf("://"' StringComparison.Ordinal);                      if (index > 0)                      {                          uri = Uri.UriSchemeHttp + uri.Substring(index);                      }                  }                  atomFeedUri = new Uri(uri);                    ServicePath = string.Empty;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                    var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(uri))                  {                      throw new ArgumentException(ServiceBusUriArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the uri specified in the Connect form                  namespaceUri = new Uri(uri);                  connectionStringType = ServiceBusNamespaceType.Cloud;                  if (!string.IsNullOrWhiteSpace(namespaceUri.Host) &&                      namespaceUri.Host.Contains('.'))                  {                      Namespace = namespaceUri.Host.Substring(0' namespaceUri.Host.IndexOf('.'));                  }                    // Create the atom feed URI using the scheme' namespace and service name (optional)                  if (uri.Substring(0' 4) != Uri.UriSchemeHttp)                  {                      var index = uri.IndexOf("://"' StringComparison.Ordinal);                      if (index > 0)                      {                          uri = Uri.UriSchemeHttp + uri.Substring(index);                      }                  }                  atomFeedUri = new Uri(uri);                    ServicePath = string.Empty;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                    var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,Connect,The following statement contains a magic number: Func<bool> func = (() =>              {                  if (string.IsNullOrWhiteSpace(uri))                  {                      throw new ArgumentException(ServiceBusUriArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerName))                  {                      throw new ArgumentException(ServiceBusIssuerNameArgumentCannotBeNull);                  }                  if (string.IsNullOrWhiteSpace(issuerSecret))                  {                      throw new ArgumentException(ServiceBusIssuerSecretArgumentCannotBeNull);                  }                    // Create the service URI using the uri specified in the Connect form                  namespaceUri = new Uri(uri);                  connectionStringType = ServiceBusNamespaceType.Cloud;                  if (!string.IsNullOrWhiteSpace(namespaceUri.Host) &&                      namespaceUri.Host.Contains('.'))                  {                      Namespace = namespaceUri.Host.Substring(0' namespaceUri.Host.IndexOf('.'));                  }                    // Create the atom feed URI using the scheme' namespace and service name (optional)                  if (uri.Substring(0' 4) != Uri.UriSchemeHttp)                  {                      var index = uri.IndexOf("://"' StringComparison.Ordinal);                      if (index > 0)                      {                          uri = Uri.UriSchemeHttp + uri.Substring(index);                      }                  }                  atomFeedUri = new Uri(uri);                    ServicePath = string.Empty;                    // Create shared secret credentials to to authenticate with the Access Control service'                   // and acquire an access token that proves to the Service Bus insfrastructure that the                   // the Service Bus Explorer is authorized to access the entities in the specified namespace.                  tokenProvider = Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  try                  {                      notificationHubTokenProvider = NotificationHubs.TokenProvider.CreateSharedSecretTokenProvider(issuerName' issuerSecret);                  }                  catch (Exception)                  {                      // ignored                  }                    currentIssuerName = issuerName;                  currentIssuerSecret = issuerSecret;                  currentSharedAccessKeyName = sharedAccessKeyName;                  currentSharedAccessKey = sharedAccessKey;                  currentTransportType = transportType;                    // Create and instance of the NamespaceManagerSettings which                   // specifies service namespace client settings and metadata.                  var namespaceManagerSettings = new Microsoft.ServiceBus.NamespaceManagerSettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (namespaceManagerSettings.RetryPolicy is Microsoft.ServiceBus.RetryExponential defaultServiceBusRetryExponential)                  {                      namespaceManagerSettings.RetryPolicy = new Microsoft.ServiceBus.RetryExponential(defaultServiceBusRetryExponential.MinimalBackoff'                                                                                             defaultServiceBusRetryExponential.MaximumBackoff'                                                                                             RetryHelper.RetryCount);                  }                    var notificationHubNamespaceManagerSettings = new NotificationHubs.NamespaceManagerSettings                  {                      TokenProvider = notificationHubTokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                    // Set retry count                  if (notificationHubNamespaceManagerSettings.RetryPolicy is NotificationHubs.RetryExponential defaultNotificationHubsRetryExponential)                  {                      notificationHubNamespaceManagerSettings.RetryPolicy = new NotificationHubs.RetryExponential(defaultNotificationHubsRetryExponential.MinimalBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.MaximumBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.DeltaBackoff'                                                                                                                  defaultNotificationHubsRetryExponential.TerminationTimeBuffer'                                                                                                                  RetryHelper.RetryCount);                  }                    // The NamespaceManager class can be used for managing entities'                   // such as queues' topics' subscriptions' and rules' in your service namespace.                   // You must provide service namespace address and access credentials in order                   // to manage your service namespace.                  namespaceManager = new Microsoft.ServiceBus.NamespaceManager(namespaceUri' namespaceManagerSettings);                  try                  {                      notificationHubNamespaceManager = new NotificationHubs.NamespaceManager(namespaceUri' notificationHubNamespaceManagerSettings);                  }                  catch (Exception)                  {                      // ignored                  }                  WriteToLogIf(traceEnabled' string.Format(CultureInfo.CurrentCulture' ServiceBusIsConnected' namespaceUri.AbsoluteUri));                    // The MessagingFactorySettings specifies the service bus messaging factory settings.                  var messagingFactorySettings = new MessagingFactorySettings                  {                      TokenProvider = tokenProvider'                      OperationTimeout = TimeSpan.FromMinutes(5)                  };                  // In the first release of the service bus' the only available transport protocol is sb                   if (scheme == DefaultScheme)                  {                      messagingFactorySettings.NetMessagingTransportSettings = new NetMessagingTransportSettings();                  }                    // As the name suggests' the MessagingFactory class is a Factory class that allows to create                  // instances of the QueueClient' TopicClient and SubscriptionClient classes.                  MessagingFactory = MessagingFactory.Create(namespaceUri' messagingFactorySettings);                  WriteToLogIf(traceEnabled' MessageFactorySuccessfullyCreated);                  return true;              });
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendEventData,The following statement contains a magic number: var messagesPerSecond = totalElapsedTime > 0 ? (double)(messagesSent * 1000) / (double)totalElapsedTime : 0;
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessages,The following statement contains a magic number: var messagesPerSecond = totalElapsedTime > 0 ? (double)(messagesSent * 1000) / (double)totalElapsedTime : 0;
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendBatch,The following statement contains a magic number: builder.AppendLine(string.Format(MessageTextFormat' messageText.Contains('\n') ? messageText :                                                                                  messageText.Substring(0' Math.Min(messageText.Length' 128)) +                                                                                  (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendBatch,The following statement contains a magic number: builder.AppendLine(string.Format(MessageTextFormat' messageText.Contains('\n') ? messageText :                                                                                  messageText.Substring(0' Math.Min(messageText.Length' 128)) +                                                                                  (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessage,The following statement contains a magic number: builder.AppendLine(string.Format(MessageTextFormat' messageText.Contains('\n') ? messageText : messageText.Substring(0' Math.Min(messageText.Length' 128)) + (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,SendMessage,The following statement contains a magic number: builder.AppendLine(string.Format(MessageTextFormat' messageText.Contains('\n') ? messageText : messageText.Substring(0' Math.Min(messageText.Length' 128)) + (messageText.Length >= 128 ? "..." : "")));
Magic Number,Microsoft.Azure.ServiceBusExplorer,ServiceBusHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ServiceBusHelper.cs,ReceiveMessages,The following statement contains a magic number: var messagesPerSecond = totalReceiveElapsedTime > 0 ? (double)(messagesReceived * 1000) / (double)totalReceiveElapsedTime : 0;
Duplicate Code,Microsoft.Azure.ServiceBusExplorer.Helpers,ImportExportHelper,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ImportExportHelper.cs,CreateAuthorizationRules,The method contains a code clone-set at the following line numbers (starting from the method definition): ((40' 67)' (70' 97))
Missing Default,Microsoft.Azure.ServiceBusExplorer.Helpers,ExpressionBuilder<T>,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\ExpressionBuilder.cs,GetExpression,The following switch statement is missing a default case: switch (filter.Operator)                  {                      case Operator.Equal:                          return Expression.Equal(left' constant);                      case Operator.NotEqual:                          return Expression.NotEqual(left' constant);                      case Operator.GreaterThan:                          return Expression.GreaterThan(left' constant);                      case Operator.GreaterThanOrEqual:                          return Expression.GreaterThanOrEqual(left' constant);                      case Operator.LessThan:                          return Expression.LessThan(left' constant);                      case Operator.LessThanOrEqual:                          return Expression.LessThanOrEqual(left' constant);                      case Operator.Contains:                          return Expression.Call(left' containsMethod' new Expression[] { constant });                      case Operator.StartsWith:                          return Expression.Call(left' startsWithMethod' new Expression[] { constant });                      case Operator.EndsWith:                          return Expression.Call(left' endsWithMethod' new Expression[] { constant });                  }
Missing Default,Microsoft.Azure.ServiceBusExplorer.Helpers,MainSettings,C:\research\architectureSmells\repos\paolosalvatori_ServiceBusExplorer\src\Common\Helpers\MainSettings.cs,GetValue,The following switch statement is missing a default case: switch (setting)              {                  case ConfigurationParameters.LogFontSize:                      return LogFontSize;                    case ConfigurationParameters.TreeViewFontSize:                      return TreeViewFontSize;                    case ConfigurationParameters.RetryCountParameter:                      return RetryCount;                    case ConfigurationParameters.RetryTimeoutParameter:                      return RetryTimeout;                    case ConfigurationParameters.ReceiveTimeoutParameter:                      return ReceiveTimeout;                    case ConfigurationParameters.ServerTimeoutParameter:                      return ServerTimeout;                    case ConfigurationParameters.PrefetchCountParameter:                      return PrefetchCount;                    case ConfigurationParameters.TopParameter:                      return TopCount;                    case ConfigurationParameters.SenderThinkTimeParameter:                      return SenderThinkTime;                    case ConfigurationParameters.ReceiverThinkTimeParameter:                      return ReceiverThinkTime;                    case ConfigurationParameters.MonitorRefreshIntervalParameter:                      return MonitorRefreshInterval;                    case ConfigurationParameters.ShowMessageCountParameter:                      return ShowMessageCount;                    case ConfigurationParameters.UseAsciiParameter:                      return UseAscii;                    case ConfigurationParameters.SaveMessageToFileParameter:                      return SaveMessageToFile;                    case ConfigurationParameters.SavePropertiesToFileParameter:                      return SavePropertiesToFile;                    case ConfigurationParameters.SaveCheckpointsToFileParameter:                      return SaveCheckpointsToFile;                    case ConfigurationParameters.LabelParameter:                      return Label;                    case ConfigurationParameters.FileParameter:                      return MessageFile;                    case ConfigurationParameters.MessageParameter:                      return MessageText;                    case ConfigurationParameters.SelectedEntitiesParameter:                      return SelectedEntities;                    case ConfigurationParameters.MessageBodyType:                      return MessageBodyType;                    case ConfigurationParameters.ConnectivityMode:                      return ConnectivityMode;                    case ConfigurationParameters.Encoding:                      return EncodingType;              }
