Implementation smell,Namespace,Class,File,Method,Description
Long Method,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The method has 112 lines of code.
Complex Method,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,Cyclomatic complexity of the method is 11
Complex Method,KRPC.SpaceCenter.ExtensionMethods,AutoPilotModeExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\AutoPilotModeExtensions.cs,ToSASMode,Cyclomatic complexity of the method is 11
Complex Method,KRPC.SpaceCenter.ExtensionMethods,AutoPilotModeExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\AutoPilotModeExtensions.cs,FromSASMode,Cyclomatic complexity of the method is 11
Complex Method,KRPC.SpaceCenter.ExtensionMethods,ContractStateExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ContractStateExtensions.cs,ToContractState,Cyclomatic complexity of the method is 11
Complex Method,KRPC.SpaceCenter.ExtensionMethods,GameModeExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GameModeExtensions.cs,ToGameMode,Cyclomatic complexity of the method is 8
Complex Method,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,Cyclomatic complexity of the method is 13
Complex Method,KRPC.SpaceCenter.ExtensionMethods,VesselSituationExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\VesselSituationExtensions.cs,ToVesselSituation,Cyclomatic complexity of the method is 9
Complex Method,KRPC.SpaceCenter.ExtensionMethods,VesselTypeExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\VesselTypeExtensions.cs,ToVesselType,Cyclomatic complexity of the method is 10
Complex Method,KRPC.SpaceCenter.ExtensionMethods,VesselTypeExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\VesselTypeExtensions.cs,FromVesselType,Cyclomatic complexity of the method is 10
Complex Method,KRPC.SpaceCenter,ControlInputs,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\PilotAddon.cs,Add,Cyclomatic complexity of the method is 11
Complex Method,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,SASTargetDirection,Cyclomatic complexity of the method is 28
Complex Method,KRPC.SpaceCenter.Services,Orbit,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Orbit.cs,CalcClosestAproach,Cyclomatic complexity of the method is 10
Complex Method,KRPC.SpaceCenter.Services,ReferenceFrame,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ReferenceFrame.cs,GetHashCode,Cyclomatic complexity of the method is 8
Complex Method,KRPC.SpaceCenter.Services,ResourceTransfer,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ResourceTransfer.cs,Start,Cyclomatic complexity of the method is 8
Long Parameter List,KRPC.SpaceCenter.AutoPilot,PIDController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\PIDController.cs,PIDController,The method has 6 parameters. Parameters: input' kp' ki' kd' outputMin' outputMax
Long Parameter List,KRPC.SpaceCenter.AutoPilot,PIDController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\PIDController.cs,Reset,The method has 6 parameters. Parameters: input' kp' ki' kd' outputMin' outputMax
Long Parameter List,KRPC.SpaceCenter.AutoPilot,PIDController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\PIDController.cs,SetParameters,The method has 5 parameters. Parameters: kp' ki' kd' outputMin' outputMax
Long Parameter List,KRPC.SpaceCenter.ExternalAPI,FAR,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExternalAPI\FAR.cs,CalculateVesselAeroForces,The method has 5 parameters. Parameters: vessel' aeroForce' aeroTorque' velocityWorldVector' altitude
Long Parameter List,KRPC.SpaceCenter.Services,Node,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Node.cs,Node,The method has 5 parameters. Parameters: vessel' ut' prograde' normal' radial
Long Parameter List,KRPC.SpaceCenter.Services,ReferenceFrame,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ReferenceFrame.cs,ReferenceFrame,The method has 12 parameters. Parameters: type' body' vessel' node' part' dockingPort' thruster' parent' hybridPosition' hybridRotation' hybridVelocity' hybridAngularVelocity
Long Parameter List,KRPC.SpaceCenter.Services,ReferenceFrame,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ReferenceFrame.cs,ReferenceFrame,The method has 5 parameters. Parameters: parent' relativePosition' relativeRotation' relativeVelocity' relativeAngularVelocity
Long Parameter List,KRPC.SpaceCenter.Services,ReferenceFrame,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ReferenceFrame.cs,CreateRelative,The method has 5 parameters. Parameters: referenceFrame' position' rotation' velocity' angularVelocity
Long Parameter List,KRPC.SpaceCenter.Services,Waypoint,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Waypoint.cs,Waypoint,The method has 5 parameters. Parameters: latitude' longitude' altitude' body' name
Long Parameter List,KRPC.SpaceCenter.Services,WaypointManager,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\WaypointManager.cs,AddWaypointAtAltitude,The method has 5 parameters. Parameters: latitude' longitude' altitude' body' name
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The length of the statement  "            var sunDotCorrected = (1.0f + Vector3.Dot(sunVector' Quaternion.AngleAxis(45f * Mathf.Sign((float)body.rotationPeriod)' body.bodyTransform.up) * up)) * 0.5f; " is 157.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The length of the statement  "            double atmosphereTemperatureOffset = body.latitudeTemperatureBiasCurve.Evaluate(time) + (double)body.latitudeTemperatureSunMultCurve.Evaluate(time) * sunDotNormalized + body.axialTemperatureSunMultCurve.Evaluate(sunAxialDot); " is 225.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The length of the statement  "            return body.GetTemperature(altitude) + body.atmosphereTemperatureSunMultCurve.Evaluate((float)altitude) * atmosphereTemperatureOffset; " is 134.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetDensity,The length of the statement  "            var atmosphereTemperatureOffset = body.latitudeTemperatureBiasCurve.Evaluate(0) + body.latitudeTemperatureSunMultCurve.Evaluate(0) * sunDot + body.axialTemperatureSunMultCurve.Evaluate(sunAxialDot); " is 198.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetDensity,The length of the statement  "            var temperature = body.GetTemperature(altitude) + body.atmosphereTemperatureSunMultCurve.Evaluate((float)altitude) * atmosphereTemperatureOffset; " is 145.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The length of the statement  "                //TrajectoriesDebug partDebug = VesselAerodynamicModel.DebugParts ? p.FindModuleImplementing<TrajectoriesDebug>() : null; " is 121.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The length of the statement  "                        dragForce = -(Vector3d)sim_dragVectorDir * Mathf.Lerp(p.minimum_drag' p.maximum_drag' Mathf.Abs(Vector3.Dot(p.partTransform.TransformDirection(p.dragReferenceVector)' sim_dragVectorDir))); " is 188.
Long Statement,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The length of the statement  "                        dragForce = -(Vector3d)sim_dragVectorDir * Mathf.Lerp(p.minimum_drag' p.maximum_drag' Vector3.Angle(p.partTransform.TransformDirection(p.dragReferenceVector)' sim_dragVectorDir) / 180f); " is 186.
Long Statement,KRPC.SpaceCenter,PilotAddon,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\PilotAddon.cs,Fly,The length of the statement  "            if (RemoteTech.IsAvailable && !remoteTechSanctionedDelegates.Contains (vessel) && RemoteTech.HasFlightComputer (vessel.id)) { " is 125.
Long Statement,KRPC.SpaceCenter.ExternalAPI,FAR,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExternalAPI\FAR.cs,Load,The length of the statement  "            var type = APILoader.Load( typeof(FAR)' "FerramAerospaceResearch"' "FerramAerospaceResearch.FARAPI"' new Version (0' 15)); " is 122.
Long Statement,KRPC.SpaceCenter.Services,Control,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Control.cs,PostActivateStage,The length of the statement  "                throw new YieldException (new ParameterizedContinuation<IList<Vessel>' global::Vessel[]> (PostActivateStage' preVessels)); " is 122.
Long Statement,KRPC.SpaceCenter.Services,Control,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Control.cs,CheckManeuverNodes,The length of the statement  "                throw new InvalidOperationException ("Maneuver node editing is not available. Either the vessel is in a situation where maneuver nodes cannot be used' or the tracking station has not been upgraded to support them."); " is 216.
Long Statement,KRPC.SpaceCenter.Services,Flight,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Flight.cs,SimulateAerodynamicForceAt,The length of the statement  "                FAR.CalculateVesselAeroForces(vessel' out worldForce' out torque' worldVelocity - body.InternalBody.getRFrmVel(worldPosition)' altitude); " is 137.
Long Statement,KRPC.SpaceCenter.Services,ReferenceFrame,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ReferenceFrame.cs,CreateRelative,The length of the statement  "            return new ReferenceFrame (referenceFrame' position.ToVector ()' rotation.ToQuaternion ()' velocity.ToVector ()' angularVelocity.ToVector ()); " is 142.
Long Statement,KRPC.SpaceCenter.Services,ReferenceFrame,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ReferenceFrame.cs,CreateHybrid,The length of the statement  "            return new ReferenceFrame (ReferenceFrameType.Hybrid' hybridPosition: position' hybridRotation: rotation' hybridVelocity: velocity' hybridAngularVelocity: angularVelocity); " is 172.
Long Statement,KRPC.SpaceCenter.Services,SpaceCenter,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\SpaceCenter.cs,WarpTo,The length of the statement  "                throw new YieldException (new ParameterizedContinuationVoid<double'float'float> (WarpTo' ut' maxRailsRate' maxPhysicsRate)); " is 124.
Long Statement,KRPC.SpaceCenter.Services,Vessel,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Vessel.cs,ComputeInertiaTensor,The length of the statement  "                    Quaternion rot = Quaternion.Inverse (vesselTransform.rotation) * part.transform.rotation * part.rb.inertiaTensorRotation; " is 121.
Long Statement,KRPC.SpaceCenter.Services,Vessel,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Vessel.cs,AngularVelocity,The length of the statement  "            return referenceFrame.AngularVelocityFromWorldSpace (InternalVessel.GetComponent<Rigidbody> ().angularVelocity).ToTuple (); " is 123.
Long Statement,KRPC.SpaceCenter.Services.Parts,Decoupler,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Decoupler.cs,PostDecouple,The length of the statement  "            // FIXME: sometimes after decoupling' KSP changes it's mind as to what the active vessel is' so we wait for 10 frames before getting the active vessel " is 150.
Long Statement,KRPC.SpaceCenter.Services.Parts,Decoupler,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Decoupler.cs,PostDecouple,The length of the statement  "                throw new YieldException (new ParameterizedContinuation<Vessel' IList<Guid>' int> (PostDecouple' preVesselIds' wait + 1)); " is 122.
Long Statement,KRPC.SpaceCenter.Services.Parts,DockingPort,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\DockingPort.cs,PostUndock,The length of the statement  "            // FIXME: sometimes after undocking' KSP changes it's mind as to what the active vessel is' so we wait for 10 frames before getting the active vessel " is 149.
Long Statement,KRPC.SpaceCenter.Services.Parts,DockingPort,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\DockingPort.cs,PostUndock,The length of the statement  "                throw new YieldException (new ParameterizedContinuation<Vessel' IList<Guid>' int> (PostUndock' preVesselIds' wait + 1)); " is 120.
Long Statement,KRPC.SpaceCenter.Services.Parts,DockingPort,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\DockingPort.cs,IndividualState,The length of the statement  "                return shieldModule.status.StartsWith ("Moving"' StringComparison.CurrentCulture) ? DockingPortState.Moving : DockingPortState.Shielded; " is 136.
Long Statement,KRPC.SpaceCenter.Services.Parts,Engine,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Engine.cs,GetThrust,The length of the statement  "            return 1000f * Mathf.Lerp (engine.minFuelFlow' engine.maxFuelFlow' throttle) * flowMultiplier * specificImpulse * engine.g * velocityMultiplier; " is 144.
Long Statement,KRPC.SpaceCenter.Services.Parts,Experiment,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Experiment.cs,Run,The length of the statement  "            gatherData = experiment.GetType().GetMethod("gatherScienceData"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.FlattenHierarchy); " is 142.
Long Statement,KRPC.SpaceCenter.Services.Parts,Experiment,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Experiment.cs,getKSCBiome,The length of the statement  "            return at == "KSC" ? at : at.Replace ("KSC"' string.Empty).Replace ("Grounds"' string.Empty).Replace ("_"' string.Empty); " is 121.
Long Statement,KRPC.SpaceCenter.Services.Parts,RCS,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\RCS.cs,GetThrust,The length of the statement  "            return 1000f * (float)rcs.maxFuelFlow * (float)throttle * (float)rcs.G * rcs.atmosphereCurve.Evaluate ((float)pressure); " is 120.
Complex Conditional,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,SASTargetDirection,The conditional expression  "sasMode == SASMode.Prograde || sasMode == SASMode.Retrograde ||                  sasMode == SASMode.Normal || sasMode == SASMode.AntiNormal ||                  sasMode == SASMode.Radial || sasMode == SASMode.AntiRadial"  is complex.
Complex Conditional,KRPC.SpaceCenter.Services.Parts,DockingPort,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\DockingPort.cs,Undock,The conditional expression  "InvokeEvent (port' "Decouple Node") || InvokeEvent (port' "Undock") ||                  (dockedPort != null && (InvokeEvent (dockedPort' "Decouple Node") || InvokeEvent (dockedPort' "Undock")))"  is complex.
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: StoppingTime = new Vector3d (0.5' 0.5' 0.5);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: StoppingTime = new Vector3d (0.5' 0.5' 0.5);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: StoppingTime = new Vector3d (0.5' 0.5' 0.5);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: DecelerationTime = new Vector3d (5' 5' 5);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: DecelerationTime = new Vector3d (5' 5' 5);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: DecelerationTime = new Vector3d (5' 5' 5);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: RollThreshold = 5;
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: Overshoot = new Vector3d (0.01' 0.01' 0.01);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: Overshoot = new Vector3d (0.01' 0.01' 0.01);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: Overshoot = new Vector3d (0.01' 0.01' 0.01);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: TimeToPeak = new Vector3d (3' 3' 3);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: TimeToPeak = new Vector3d (3' 3' 3);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AttitudeController,The following statement contains a magic number: TimeToPeak = new Vector3d (3' 3' 3);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,UpdatePIDParameters,The following statement contains a magic number: twiceZetaOmega [i] = 2 * zeta * omega;
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,UpdatePIDParameters,The following statement contains a magic number: i < 3
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AnglesToAngularVelocity,The following statement contains a magic number: var velocity = -Math.Sign (angles [i]) * Math.Min (maxVelocity' Math.Sqrt (2.0 * Math.Abs (theta) * acceleration));
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AnglesToAngularVelocity,The following statement contains a magic number: var attenuation = 1.0 / (1.0 + Math.Exp (-((Math.Abs (theta) - attenuationAngle) * (6.0 / attenuationAngle))));
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,AnglesToAngularVelocity,The following statement contains a magic number: i < 3
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,DoAutoTune,The following statement contains a magic number: DoAutoTuneAxis (YawPID' 2' torque' moi);
Magic Number,KRPC.SpaceCenter.AutoPilot,AttitudeController,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\AutoPilot\AttitudeController.cs,DoAutoTuneAxis,The following statement contains a magic number: accelerationInv > 1000
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,ActionGroupExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ActionGroupExtensions.cs,GetActionGroup,The following statement contains a magic number: switch (index) {              case 1:                  return KSPActionGroup.Custom01;              case 2:                  return KSPActionGroup.Custom02;              case 3:                  return KSPActionGroup.Custom03;              case 4:                  return KSPActionGroup.Custom04;              case 5:                  return KSPActionGroup.Custom05;              case 6:                  return KSPActionGroup.Custom06;              case 7:                  return KSPActionGroup.Custom07;              case 8:                  return KSPActionGroup.Custom08;              case 9:                  return KSPActionGroup.Custom09;              case 0:                  return KSPActionGroup.Custom10;              default:                  throw new ArgumentOutOfRangeException (nameof (index)' "Action group index must be betwee 0 and 9 inclusive");              }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToList,The following statement contains a magic number: return new List<double> (new double[] {                  m [0' 0]' m [0' 1]' m [0' 2]'                  m [1' 0]' m [1' 1]' m [1' 2]'                  m [2' 0]' m [2' 1]' m [2' 2]              });
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToList,The following statement contains a magic number: return new List<double> (new double[] {                  m [0' 0]' m [0' 1]' m [0' 2]'                  m [1' 0]' m [1' 1]' m [1' 2]'                  m [2' 0]' m [2' 1]' m [2' 2]              });
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToList,The following statement contains a magic number: return new List<double> (new double[] {                  m [0' 0]' m [0' 1]' m [0' 2]'                  m [1' 0]' m [1' 1]' m [1' 2]'                  m [2' 0]' m [2' 1]' m [2' 2]              });
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToList,The following statement contains a magic number: return new List<double> (new double[] {                  m [0' 0]' m [0' 1]' m [0' 2]'                  m [1' 0]' m [1' 1]' m [1' 2]'                  m [2' 0]' m [2' 1]' m [2' 2]              });
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToList,The following statement contains a magic number: return new List<double> (new double[] {                  m [0' 0]' m [0' 1]' m [0' 2]'                  m [1' 0]' m [1' 1]' m [1' 2]'                  m [2' 0]' m [2' 1]' m [2' 2]              });
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToList,The following statement contains a magic number: return new List<double> (new double[] {                  m [0' 0]' m [0' 1]' m [0' 2]'                  m [1' 0]' m [1' 1]' m [1' 2]'                  m [2' 0]' m [2' 1]' m [2' 2]              });
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,NormAngle,The following statement contains a magic number: return angle - 360d * Math.Floor ((angle + 180d) / 360d);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,NormAngle,The following statement contains a magic number: return angle - 360d * Math.Floor ((angle + 180d) / 360d);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,NormAngle,The following statement contains a magic number: return angle - 360d * Math.Floor ((angle + 180d) / 360d);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,NormAngle,The following statement contains a magic number: return angle - 360f * Mathf.Floor ((angle + 180f) / 360f);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,NormAngle,The following statement contains a magic number: return angle - 360f * Mathf.Floor ((angle + 180f) / 360f);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,NormAngle,The following statement contains a magic number: return angle - 360f * Mathf.Floor ((angle + 180f) / 360f);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ClampAngle360,The following statement contains a magic number: angle = angle % 360d;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ClampAngle360,The following statement contains a magic number: angle += 360d;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ClampAngle180,The following statement contains a magic number: angle -= 360;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ClampAngle180,The following statement contains a magic number: angle > 180
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToDegrees,The following statement contains a magic number: return radians * (180f / (float)Math.PI);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToDegrees,The following statement contains a magic number: return radians * (180d / Math.PI);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToRadians,The following statement contains a magic number: return degrees * ((float)Math.PI / 180f);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToRadians,The following statement contains a magic number: return degrees * (Math.PI / 180d);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,PitchHeadingRoll,The following statement contains a magic number: var pitch = eulerAngles.y > 180d ? 360d - eulerAngles.y : -eulerAngles.y;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,PitchHeadingRoll,The following statement contains a magic number: var pitch = eulerAngles.y > 180d ? 360d - eulerAngles.y : -eulerAngles.y;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,PitchHeadingRoll,The following statement contains a magic number: var roll = eulerAngles.x >= 90d ? 270d - eulerAngles.x : -90d - eulerAngles.x;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,PitchHeadingRoll,The following statement contains a magic number: var roll = eulerAngles.x >= 90d ? 270d - eulerAngles.x : -90d - eulerAngles.x;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,PitchHeadingRoll,The following statement contains a magic number: var roll = eulerAngles.x >= 90d ? 270d - eulerAngles.x : -90d - eulerAngles.x;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,QuaternionFromPitchHeadingRoll,The following statement contains a magic number: var y = pitch < 0d ? -pitch : 360d - pitch;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,QuaternionFromPitchHeadingRoll,The following statement contains a magic number: var x = roll <= -90d ? -roll - 90d : 270d - roll;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,QuaternionFromPitchHeadingRoll,The following statement contains a magic number: var x = roll <= -90d ? -roll - 90d : 270d - roll;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,QuaternionFromPitchHeadingRoll,The following statement contains a magic number: var x = roll <= -90d ? -roll - 90d : 270d - roll;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,LookRotation2,The following statement contains a magic number: var w = Math.Sqrt (1.0d + right.x + up.y + forward.z) * 0.5d;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,LookRotation2,The following statement contains a magic number: var r = 0.25d / w;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,Add,The following statement contains a magic number: i < 4
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,MultiplyScalar,The following statement contains a magic number: i < 3
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,Diagonal,The following statement contains a magic number: return new Vector3d (m [0' 0]' m [1' 1]' m [2' 2]);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,Diagonal,The following statement contains a magic number: return new Vector3d (m [0' 0]' m [1' 1]' m [2' 2]);
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToDiagonalMatrix,The following statement contains a magic number: i < 4
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,ToDiagonalMatrix,The following statement contains a magic number: i < 3
Magic Number,KRPC.SpaceCenter.ExtensionMethods,GeometryExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\GeometryExtensions.cs,OuterProduct,The following statement contains a magic number: i < 3
Magic Number,KRPC.SpaceCenter.ExtensionMethods,PartExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\PartExtensions.cs,WetMass,The following statement contains a magic number: return !part.IsMassless () && part.rb != null ? part.rb.mass * 1000f : 0f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,PartExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\PartExtensions.cs,DryMass,The following statement contains a magic number: return !part.IsMassless () && part.rb != null ? Mathf.Max (0f' (part.rb.mass - part.resourceMass) * 1000f) : 0f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: polarAngle > Mathf.PI / 2.0f
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: var time = (Mathf.PI / 2.0f - polarAngle) * 57.29578f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: var time = (Mathf.PI / 2.0f - polarAngle) * 57.29578f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: var sunBodyMaxDot = (1.0f + Mathf.Cos(sunPolarAngle - bodyPolarAngle)) * 0.5f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: var sunBodyMinDot = (1.0f + Mathf.Cos(sunPolarAngle + bodyPolarAngle)) * 0.5f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: var sunDotCorrected = (1.0f + Vector3.Dot(sunVector' Quaternion.AngleAxis(45f * Mathf.Sign((float)body.rotationPeriod)' body.bodyTransform.up) * up)) * 0.5f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetTemperature,The following statement contains a magic number: var sunDotCorrected = (1.0f + Vector3.Dot(sunVector' Quaternion.AngleAxis(45f * Mathf.Sign((float)body.rotationPeriod)' body.bodyTransform.up) * up)) * 0.5f;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetDensity,The following statement contains a magic number: var sunDot = 0.5;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,GetPressure,The following statement contains a magic number: return body.GetPressure (altitude) * 1000d;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The following statement contains a magic number: var dyn_pressure = 0.0005 * rho * v_wrld_vel.sqrMagnitude;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The following statement contains a magic number: mach = 25.0;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The following statement contains a magic number: mach > 25.0
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The following statement contains a magic number: switch (p.dragModel) {                      case Part.DragModel.DEFAULT:                      case Part.DragModel.CUBE:                          var cubes = p.DragCubes;                            var p_drag_data = new DragCubeList.CubeData();                            float drag;                          if (cubes.None) { // since 1.0.5' some parts don't have drag cubes (for example fuel lines and struts)                             drag = p.maximum_drag;                          } else {                              try {                                  cubes.AddSurfaceDragDirection(-sim_dragVectorDirLocal' (float)mach' ref p_drag_data);                              } catch (Exception) {                                  cubes.SetDrag(sim_dragVectorDirLocal' (float)mach);                                  cubes.ForceUpdate(true' true);                                  cubes.AddSurfaceDragDirection(-sim_dragVectorDirLocal' (float)mach' ref p_drag_data);                                  //Debug.Log(String.Format("Trajectories: Caught NRE on Drag Initialization.  Should be fixed now.  {0}"' e));                              }                                drag = p_drag_data.areaDrag * PhysicsGlobals.DragCubeMultiplier;                                liftForce = p_drag_data.liftForce;                          }                            var sim_dragScalar = dyn_pressure * drag * PhysicsGlobals.DragMultiplier;                          dragForce = -(Vector3d)sim_dragVectorDir * sim_dragScalar;                          break;                        case Part.DragModel.SPHERICAL:                          dragForce = -(Vector3d)sim_dragVectorDir * p.maximum_drag;                          break;                        case Part.DragModel.CYLINDRICAL:                          dragForce = -(Vector3d)sim_dragVectorDir * Mathf.Lerp(p.minimum_drag' p.maximum_drag' Mathf.Abs(Vector3.Dot(p.partTransform.TransformDirection(p.dragReferenceVector)' sim_dragVectorDir)));                          break;                        case Part.DragModel.CONIC:                          dragForce = -(Vector3d)sim_dragVectorDir * Mathf.Lerp(p.minimum_drag' p.maximum_drag' Vector3.Angle(p.partTransform.TransformDirection(p.dragReferenceVector)' sim_dragVectorDir) / 180f);                          break;                        default:                          // no drag to apply                          dragForce = Vector3d.zero;                          break;                  }
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The following statement contains a magic number: var liftQ = dyn_pressure * 1000;
Magic Number,KRPC.SpaceCenter.ExtensionMethods,StockAerodynamics,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\StockAerodynamics.cs,SimAeroForce,The following statement contains a magic number: return (total_lift + total_drag) * 1000d;
Magic Number,KRPC.SpaceCenter,ITorqueProviderExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ITorqueProviderExtensions.cs,GetPotentialTorque,The following statement contains a magic number: return new Torque (posd * 1000.0d' negd * 1000.0d);
Magic Number,KRPC.SpaceCenter,ITorqueProviderExtensions,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExtensionMethods\ITorqueProviderExtensions.cs,GetPotentialTorque,The following statement contains a magic number: return new Torque (posd * 1000.0d' negd * 1000.0d);
Magic Number,KRPC.SpaceCenter.ExternalAPI,FAR,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExternalAPI\FAR.cs,Load,The following statement contains a magic number: var type = APILoader.Load( typeof(FAR)' "FerramAerospaceResearch"' "FerramAerospaceResearch.FARAPI"' new Version (0' 15));
Magic Number,KRPC.SpaceCenter.ExternalAPI,FAR,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExternalAPI\FAR.cs,CalculateVesselAeroForces,The following statement contains a magic number: aeroTorque = (Vector3)parameters[2];
Magic Number,KRPC.SpaceCenter.ExternalAPI,RemoteTech,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\ExternalAPI\RemoteTech.cs,Load,The following statement contains a magic number: IsAvailable = (APILoader.Load (typeof(RemoteTech)' "RemoteTech"' "RemoteTech.API.API"' new Version (1' 8)) != null);
Magic Number,KRPC.SpaceCenter.NameTag,KOSNameTag,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\NameTag\NameTag.cs,PopupNameTagChanger,The following statement contains a magic number: ScreenMessages.PostScreenMessage(formattedString' 6' ScreenMessageStyle.UPPER_CENTER);
Magic Number,KRPC.SpaceCenter.NameTag,Window,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\NameTag\Window.cs,Invoke,The following statement contains a magic number: const float WINDOW_WIDTH = 200;
Magic Number,KRPC.SpaceCenter.NameTag,Window,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\NameTag\Window.cs,Invoke,The following statement contains a magic number: windowRect = new Rect(xPixelPoint' yPixelPoint' WINDOW_WIDTH' 130);
Magic Number,KRPC.SpaceCenter.NameTag,Window,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\NameTag\Window.cs,OnGUI,The following statement contains a magic number: numberOfRepaints >= 2 && ! wasFocusedOnce
Magic Number,KRPC.SpaceCenter.NameTag,Window,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\NameTag\Window.cs,DrawWindow,The following statement contains a magic number: tagValue = GUILayout.TextField( tagValue' GUILayout.MinWidth(160f));
Magic Number,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,Wait,The following statement contains a magic number: Error > 0.75f || InternalVessel.GetComponent<Rigidbody> ().angularVelocity.magnitude > 0.05f
Magic Number,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,Wait,The following statement contains a magic number: Error > 0.75f || InternalVessel.GetComponent<Rigidbody> ().angularVelocity.magnitude > 0.05f
Magic Number,KRPC.SpaceCenter.Services,CelestialBody,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\CelestialBody.cs,SurfaceHeight,The following statement contains a magic number: const double raySource = 1000;
Magic Number,KRPC.SpaceCenter.Services,CelestialBody,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\CelestialBody.cs,SurfaceHeight,The following statement contains a magic number: const double raySecondPoint = 500;
Magic Number,KRPC.SpaceCenter.Services,CelestialBody,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\CelestialBody.cs,SurfaceHeight,The following statement contains a magic number: Mathf.Abs(hit.distance) < 3000
Magic Number,KRPC.SpaceCenter.Services,CelestialBody,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\CelestialBody.cs,SurfaceHeight,The following statement contains a magic number: Physics.Raycast(rayCastStart' (rayCastStop - rayCastStart)' out hit' float.MaxValue' 1 << 15)
Magic Number,KRPC.SpaceCenter.Services,Control,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Control.cs,GetActionGroup,The following statement contains a magic number: group > 250
Magic Number,KRPC.SpaceCenter.Services,Control,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Control.cs,SetActionGroup,The following statement contains a magic number: group > 250
Magic Number,KRPC.SpaceCenter.Services,Control,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Control.cs,ToggleActionGroup,The following statement contains a magic number: group > 250
Magic Number,KRPC.SpaceCenter.Services,Orbit,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Orbit.cs,MeanAnomalyAtUT,The following statement contains a magic number: return percent * (2 * Math.PI);
Magic Number,KRPC.SpaceCenter.Services,Orbit,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Orbit.cs,CalcClosestAproach,The following statement contains a magic number: interval = 100 / myOrbit.InternalOrbit.meanMotion;
Magic Number,KRPC.SpaceCenter.Services,Orbit,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Orbit.cs,CalcClosestAproach,The following statement contains a magic number: double timestep = (maxtime - mintime) / 20;
Magic Number,KRPC.SpaceCenter.Services,Orbit,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Orbit.cs,CalcClosestAproach,The following statement contains a magic number: timestep = (fine_maxtime - fine_mintime) / 50;
Magic Number,KRPC.SpaceCenter.Services,ResourceTransfer,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ResourceTransfer.cs,ResourceTransfer,The following statement contains a magic number: transferRate = 0.1f * totalStorage;
Magic Number,KRPC.SpaceCenter.Services,ResourceTransfer,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\ResourceTransfer.cs,Update,The following statement contains a magic number: Complete |= amountToTransfer < 0.0001f;
Magic Number,KRPC.SpaceCenter.Services,Resources,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Resources.cs,Density,The following statement contains a magic number: return GetResource (name).density * 1000f;
Magic Number,KRPC.SpaceCenter.Services,SpaceCenter,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\SpaceCenter.cs,WaitForVesselSwitch,The following statement contains a magic number: tick < 25
Magic Number,KRPC.SpaceCenter.Services,SpaceCenter,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\SpaceCenter.cs,IncreaseRailsWarp,The following statement contains a magic number: Math.Abs (currentRate - TimeWarp.CurrentRate) > 0.01
Magic Number,KRPC.SpaceCenter.Services,SpaceCenter,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\SpaceCenter.cs,IncreasePhysicsWarp,The following statement contains a magic number: Math.Abs (currentRate - TimeWarp.CurrentRate) > 0.01
Magic Number,KRPC.SpaceCenter.Services,Vessel,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Vessel.cs,ComputeInertiaTensor,The following statement contains a magic number: return inertiaTensor.MultiplyScalar (1000f);
Magic Number,KRPC.SpaceCenter.Services,Waypoint,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Waypoint.cs,Waypoint,The following statement contains a magic number: Color = 1115;
Magic Number,KRPC.SpaceCenter.Services.Parts,Decoupler,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Decoupler.cs,PostDecouple,The following statement contains a magic number: wait < 10 || !Decoupled
Magic Number,KRPC.SpaceCenter.Services.Parts,DockingPort,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\DockingPort.cs,PostUndock,The following statement contains a magic number: wait < 10 || State == DockingPortState.Docked
Magic Number,KRPC.SpaceCenter.Services.Parts,DockingPort,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\DockingPort.cs,Rotation,The following statement contains a magic number: return referenceFrame.RotationFromWorldSpace (port.nodeTransform.rotation * Quaternion.Euler (90' 0' 0)).ToTuple ();
Magic Number,KRPC.SpaceCenter.Services.Parts,Engine,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Engine.cs,GetThrust,The following statement contains a magic number: flowMultiplier = (float)(engine.part.atmDensity / 1.225d);
Magic Number,KRPC.SpaceCenter.Services.Parts,Engine,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Engine.cs,GetThrust,The following statement contains a magic number: return 1000f * Mathf.Lerp (engine.minFuelFlow' engine.maxFuelFlow' throttle) * flowMultiplier * specificImpulse * engine.g * velocityMultiplier;
Magic Number,KRPC.SpaceCenter.Services.Parts,Force,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Force.cs,Update,The following statement contains a magic number: Part.InternalPart.AddForceAtPosition (worldForce / 1000f' worldPosition);
Magic Number,KRPC.SpaceCenter.Services.Parts,Part,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\Part.cs,ComputeInertiaTensor,The following statement contains a magic number: return inertiaTensor.MultiplyScalar (1000f);
Magic Number,KRPC.SpaceCenter.Services.Parts,RCS,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\Parts\RCS.cs,GetThrust,The following statement contains a magic number: return 1000f * (float)rcs.maxFuelFlow * (float)throttle * (float)rcs.G * rcs.atmosphereCurve.Evaluate ((float)pressure);
Missing Default,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,SASTargetDirection,The following switch statement is missing a default case: switch (sasMode) {                      case SASMode.Prograde:                          return ReferenceFrame.Orbital (vessel).DirectionToWorldSpace (Vector3d.up);                      case SASMode.Retrograde:                          return ReferenceFrame.Orbital (vessel).DirectionToWorldSpace (Vector3d.down);                      case SASMode.Normal:                          return ReferenceFrame.Orbital (vessel).DirectionToWorldSpace (Vector3d.forward);                      case SASMode.AntiNormal:                          return ReferenceFrame.Orbital (vessel).DirectionToWorldSpace (Vector3d.back);                      case SASMode.Radial:                          return ReferenceFrame.Orbital (vessel).DirectionToWorldSpace (Vector3d.left);                      case SASMode.AntiRadial:                          return ReferenceFrame.Orbital (vessel).DirectionToWorldSpace (Vector3d.right);                      }
Missing Default,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,SASTargetDirection,The following switch statement is missing a default case: switch (sasMode) {                      case SASMode.Prograde:                          return ReferenceFrame.SurfaceVelocity (vessel).DirectionToWorldSpace (Vector3d.up);                      case SASMode.Retrograde:                          return ReferenceFrame.SurfaceVelocity (vessel).DirectionToWorldSpace (Vector3d.down);                      case SASMode.Normal:                          return ReferenceFrame.Object (vessel.orbit.referenceBody).DirectionToWorldSpace (Vector3d.up);                      case SASMode.AntiNormal:                          return ReferenceFrame.Object (vessel.orbit.referenceBody).DirectionToWorldSpace (Vector3d.down);                      case SASMode.Radial:                          return ReferenceFrame.Surface (vessel).DirectionToWorldSpace (Vector3d.right);                      case SASMode.AntiRadial:                          return ReferenceFrame.Surface (vessel).DirectionToWorldSpace (Vector3d.left);                      }
Missing Default,KRPC.SpaceCenter.Services,AutoPilot,D:\research\architectureSmells\repos\djungelorm_krpc\service\SpaceCenter\src\Services\AutoPilot.cs,SASTargetDirection,The following switch statement is missing a default case: switch (sasMode) {                      case SASMode.Prograde:                          return vessel.GetWorldVelocity () - FlightGlobals.fetch.VesselTarget.GetWorldVelocity ();                      case SASMode.Retrograde:                          return FlightGlobals.fetch.VesselTarget.GetWorldVelocity () - vessel.GetWorldVelocity ();                      case SASMode.Normal:                          return ReferenceFrame.Object (vessel.orbit.referenceBody).DirectionToWorldSpace (Vector3d.up);                      case SASMode.AntiNormal:                          return ReferenceFrame.Object (vessel.orbit.referenceBody).DirectionToWorldSpace (Vector3d.down);                      case SASMode.Radial:                          return ReferenceFrame.Surface (vessel).DirectionToWorldSpace (Vector3d.right);                      case SASMode.AntiRadial:                          return ReferenceFrame.Surface (vessel).DirectionToWorldSpace (Vector3d.left);                      }
