Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BuildDocPages,DocPageGenerator,C:\repos\NLog_NLog\tools\BuildDocPages\DocPageGenerator.cs,GenerateSinglePage,The method has 5 parameters. Parameters: kind' kindName' name' slug' title
Long Statement,BuildDocPages,DocPageGenerator,C:\repos\NLog_NLog\tools\BuildDocPages\DocPageGenerator.cs,GenerateKind,The length of the statement  "            foreach (var it in inputDocument.Elements("type").Where(c => c.Attribute("kind").Value == kind).Select(c => new { Name = c.Attribute("name").Value' Slug = c.Attribute("slug").Value' Title = c.Attribute("title").Value })) " is 220.
Long Statement,BuildDocPages,DocPageGenerator,C:\repos\NLog_NLog\tools\BuildDocPages\DocPageGenerator.cs,GenerateSinglePage,The length of the statement  "            var type = inputDocument.Elements("type").Where(c => c.Attribute("kind").Value == kind && c.Attribute("name").Value == name).Single(); " is 134.
Magic Number,BuildDocPages,Program,C:\repos\NLog_NLog\tools\BuildDocPages\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length != 6)                  {                      Usage();                      return 1;                  }                    DocPageGenerator generator = new DocPageGenerator();                  generator.InputFile = args[0];                  generator.Stylesheet = args[1];                  generator.OutputDirectory = args[2];                  generator.BaseDirectory = args[3];                  generator.FileSuffix = args[4];                  generator.Mode = args[5];                  generator.Generate();                  return 0;              }              catch (Exception ex)              {                  Console.WriteLine("ERROR: {0}"' ex);                  return 1;              }
Magic Number,BuildDocPages,Program,C:\repos\NLog_NLog\tools\BuildDocPages\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length != 6)                  {                      Usage();                      return 1;                  }                    DocPageGenerator generator = new DocPageGenerator();                  generator.InputFile = args[0];                  generator.Stylesheet = args[1];                  generator.OutputDirectory = args[2];                  generator.BaseDirectory = args[3];                  generator.FileSuffix = args[4];                  generator.Mode = args[5];                  generator.Generate();                  return 0;              }              catch (Exception ex)              {                  Console.WriteLine("ERROR: {0}"' ex);                  return 1;              }
Magic Number,BuildDocPages,Program,C:\repos\NLog_NLog\tools\BuildDocPages\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length != 6)                  {                      Usage();                      return 1;                  }                    DocPageGenerator generator = new DocPageGenerator();                  generator.InputFile = args[0];                  generator.Stylesheet = args[1];                  generator.OutputDirectory = args[2];                  generator.BaseDirectory = args[3];                  generator.FileSuffix = args[4];                  generator.Mode = args[5];                  generator.Generate();                  return 0;              }              catch (Exception ex)              {                  Console.WriteLine("ERROR: {0}"' ex);                  return 1;              }
Magic Number,BuildDocPages,Program,C:\repos\NLog_NLog\tools\BuildDocPages\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length != 6)                  {                      Usage();                      return 1;                  }                    DocPageGenerator generator = new DocPageGenerator();                  generator.InputFile = args[0];                  generator.Stylesheet = args[1];                  generator.OutputDirectory = args[2];                  generator.BaseDirectory = args[3];                  generator.FileSuffix = args[4];                  generator.Mode = args[5];                  generator.Generate();                  return 0;              }              catch (Exception ex)              {                  Console.WriteLine("ERROR: {0}"' ex);                  return 1;              }
Magic Number,BuildDocPages,Program,C:\repos\NLog_NLog\tools\BuildDocPages\Program.cs,Main,The following statement contains a magic number: try              {                  if (args.Length != 6)                  {                      Usage();                      return 1;                  }                    DocPageGenerator generator = new DocPageGenerator();                  generator.InputFile = args[0];                  generator.Stylesheet = args[1];                  generator.OutputDirectory = args[2];                  generator.BaseDirectory = args[3];                  generator.FileSuffix = args[4];                  generator.Mode = args[5];                  generator.Generate();                  return 0;              }              catch (Exception ex)              {                  Console.WriteLine("ERROR: {0}"' ex);                  return 1;              }
