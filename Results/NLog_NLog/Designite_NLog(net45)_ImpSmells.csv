Implementation smell,Namespace,Class,File,Method,Description
Long Method,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitSelfQuoted2,The method has 109 lines of code.
Long Method,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitQuoted2,The method has 131 lines of code.
Long Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,TryArchiveFile,The method has 106 lines of code.
Complex Method,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,GetTargetsByLevelForLogger,Cyclomatic complexity of the method is 10
Complex Method,NLog,LoggerImpl,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LoggerImpl.cs,Write,Cyclomatic complexity of the method is 9
Complex Method,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromOrdinal,Cyclomatic complexity of the method is 8
Complex Method,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromString,Cyclomatic complexity of the method is 9
Complex Method,NLog.Conditions,ConditionRelationalExpression,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Expressions\ConditionRelationalExpression.cs,TryPromoteType,Cyclomatic complexity of the method is 9
Complex Method,NLog.Conditions,ConditionParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionParser.cs,ParseLiteralExpression,Cyclomatic complexity of the method is 9
Complex Method,NLog.Conditions,ConditionParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionParser.cs,TryPlainKeywordToExpression,Cyclomatic complexity of the method is 8
Complex Method,NLog.Conditions,ConditionTokenizer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionTokenizer.cs,GetNextToken,Cyclomatic complexity of the method is 11
Complex Method,NLog.Conditions,ConditionTokenizer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionTokenizer.cs,TryGetLogicalToken,Cyclomatic complexity of the method is 9
Complex Method,NLog.Config,LoggerNameMatcher,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggerNameMatcher.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,GetDefaultCandidateConfigFilePaths,Cyclomatic complexity of the method is 12
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,LoadConfig,Cyclomatic complexity of the method is 8
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,SetNLogElementSettings,Cyclomatic complexity of the method is 19
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseExtensionsElement,Cyclomatic complexity of the method is 10
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseVariableElement,Cyclomatic complexity of the method is 9
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseRuleElement,Cyclomatic complexity of the method is 16
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseTargetsElement,Cyclomatic complexity of the method is 13
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseTargetWrapper,Cyclomatic complexity of the method is 9
Complex Method,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseCompoundTarget,Cyclomatic complexity of the method is 9
Complex Method,NLog.Config,PropertyTypeConverter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\PropertyTypeConverter.cs,Convert,Cyclomatic complexity of the method is 8
Complex Method,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,Check,Cyclomatic complexity of the method is 9
Complex Method,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,RefreshFilterInfo,Cyclomatic complexity of the method is 8
Complex Method,NLog.Internal,DictionaryEnumeratorBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,MoveNext,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,ExceptionHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\ExceptionHelper.cs,MustBeRethrownImmediately,Cyclomatic complexity of the method is 11
Complex Method,NLog.Internal,FilePathLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Files\FilePathLayout.cs,DetectFilePathKind,Cyclomatic complexity of the method is 8
Complex Method,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,Cyclomatic complexity of the method is 10
Complex Method,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,ScanProperties,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,ScanPropertyForObject,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,ObjectReflectionCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectReflectionCache.cs,TryLookupExpandoObject,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,AppendIntegerAsString,Cyclomatic complexity of the method is 11
Complex Method,NLog.Internal,StringHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringHelpers.cs,Replace,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitWithEscape2,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitWithSelfEscape2,Cyclomatic complexity of the method is 8
Complex Method,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitSelfQuoted2,Cyclomatic complexity of the method is 14
Complex Method,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitQuoted2,Cyclomatic complexity of the method is 18
Complex Method,NLog.Internal,UrlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\UrlHelper.cs,EscapeDataEncode,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,EscapeXmlString,Cyclomatic complexity of the method is 12
Complex Method,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,XmlConvertToElementName,Cyclomatic complexity of the method is 10
Complex Method,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,XmlConvertToString,Cyclomatic complexity of the method is 17
Complex Method,NLog.Internal.FileAppenders,FileAppenderCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\FileAppenderCache.cs,CloseAppenders,Cyclomatic complexity of the method is 8
Complex Method,NLog.Internal.NetworkSenders,NetworkSenderFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\NetworkSenders\NetworkSenderFactory.cs,Create,Cyclomatic complexity of the method is 9
Complex Method,NLog.LayoutRenderers,CallSiteLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\CallSite\CallSiteLayoutRenderer.cs,Append,Cyclomatic complexity of the method is 10
Complex Method,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,CalculateIpAddressScore,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,CsvLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\CSV\CsvLayout.cs,InitializeLayout,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,RenderJsonFormattedMessage,Cyclomatic complexity of the method is 17
Complex Method,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,CompileLayout,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterName,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterValue,Cyclomatic complexity of the method is 15
Complex Method,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseLayoutRenderer,Cyclomatic complexity of the method is 10
Complex Method,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,InitializeLayout,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,RenderXmlFormattedMessage,Cyclomatic complexity of the method is 13
Complex Method,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendLogEventXmlProperties,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyObjectValue,Cyclomatic complexity of the method is 8
Complex Method,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyStringValue,Cyclomatic complexity of the method is 11
Complex Method,NLog.MessageTemplates,MessageTemplateParameters,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\MessageTemplateParameters.cs,ParseMessageTemplate,Cyclomatic complexity of the method is 9
Complex Method,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,Cyclomatic complexity of the method is 10
Complex Method,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,Render,Cyclomatic complexity of the method is 11
Complex Method,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeConvertibleObject,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskCreation,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskCompletion,Cyclomatic complexity of the method is 11
Complex Method,NLog.Targets,ColoredConsoleAnsiPrinter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleAnsiPrinter.cs,GetForegroundColorEscapeCode,Cyclomatic complexity of the method is 17
Complex Method,NLog.Targets,ColoredConsoleAnsiPrinter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleAnsiPrinter.cs,GetBackgroundColorEscapeCode,Cyclomatic complexity of the method is 17
Complex Method,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,InitializeTarget,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,GenerateColorEscapeSequences,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,Cyclomatic complexity of the method is 16
Complex Method,NLog.Targets,DbTypeSetter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseParameterInfo.cs,TryLookupParameterType,Cyclomatic complexity of the method is 18
Complex Method,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,InitializeTarget,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObject,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeDictionaryObject,Cyclomatic complexity of the method is 11
Complex Method,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SkipQuotes,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,AppendStringEscape,Cyclomatic complexity of the method is 16
Complex Method,NLog.Targets,EventLogTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\EventLogTarget.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetFileAppenderFactory,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,CalculateNextArchiveEventTime,Cyclomatic complexity of the method is 13
Complex Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GenerateArchiveFileNameAfterCleanup,Cyclomatic complexity of the method is 11
Complex Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,TryArchiveFile,Cyclomatic complexity of the method is 10
Complex Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveFileNameBasedOnTime,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,TruncateArchiveTime,Cyclomatic complexity of the method is 13
Complex Method,NLog.Targets,LineEndingMode,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\LineEndingMode.cs,FromString,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,ConfigureMailClient,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,Target,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Target.cs,WriteAsyncLogEvents,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,WebServiceTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\WebServiceTarget.cs,DoInvoke,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,RemoveNonLetters,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateFileNameTemplate,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateArchiveFileInfo,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets.FileArchiveModes,FileArchiveModeRolling,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeRolling.cs,CheckArchiveCleanup,Cyclomatic complexity of the method is 10
Complex Method,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,WriteEventsInQueue,Cyclomatic complexity of the method is 9
Long Parameter List,NLog,ILogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILogger-V1.cs,Trace,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILogger-V1.cs,Debug,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILogger-V1.cs,Info,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILogger-V1.cs,Warn,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILogger-V1.cs,Error,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILogger-V1.cs,Fatal,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILoggerBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILoggerBase-V1.cs,Log,The method has 5 parameters. Parameters: level' message' arg1' arg2' arg3
Long Parameter List,NLog,ILoggerBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILoggerBase-V1.cs,Log,The method has 5 parameters. Parameters: level' exception' formatProvider' message' args
Long Parameter List,NLog,ILoggerBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILoggerBase-V1.cs,Log,The method has 5 parameters. Parameters: level' formatProvider' message' argument1' argument2
Long Parameter List,NLog,ILoggerBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILoggerBase-V1.cs,Log,The method has 6 parameters. Parameters: level' formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,ILoggerBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\ILoggerBase-V1.cs,Log,The method has 5 parameters. Parameters: level' message' argument1' argument2' argument3
Long Parameter List,NLog,IValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Abstractions\IValueFormatter.cs,FormatValue,The method has 5 parameters. Parameters: value' format' captureType' formatProvider' builder
Long Parameter List,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,LogEventInfo,The method has 5 parameters. Parameters: level' loggerName' formatProvider' message' parameters
Long Parameter List,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,LogEventInfo,The method has 6 parameters. Parameters: level' loggerName' formatProvider' message' parameters' exception
Long Parameter List,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,Create,The method has 5 parameters. Parameters: logLevel' loggerName' formatProvider' message' parameters
Long Parameter List,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,Create,The method has 5 parameters. Parameters: logLevel' loggerName' exception' formatProvider' message
Long Parameter List,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,Create,The method has 6 parameters. Parameters: logLevel' loggerName' exception' formatProvider' message' parameters
Long Parameter List,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,GetTargetsByLevelForLogger,The method has 5 parameters. Parameters: name' loggingRules' targetsByLevel' lastTargetsByLevel' suppressedLevels
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,ConditionalDebug,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,ConditionalTrace,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Trace,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Debug,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Info,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Warn,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Error,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Fatal,The method has 5 parameters. Parameters: formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Log,The method has 5 parameters. Parameters: level' message' arg1' arg2' arg3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Log,The method has 5 parameters. Parameters: level' exception' formatProvider' message' args
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Log,The method has 5 parameters. Parameters: level' formatProvider' message' argument1' argument2
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Log,The method has 6 parameters. Parameters: level' formatProvider' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,Log,The method has 5 parameters. Parameters: level' message' argument1' argument2' argument3
Long Parameter List,NLog,Logger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Logger-Conditional.cs,WriteToTargets,The method has 5 parameters. Parameters: level' ex' formatProvider' message' args
Long Parameter List,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,TraceData,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,TraceData,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,TraceEvent,The method has 6 parameters. Parameters: eventCache' source' eventType' id' format' args
Long Parameter List,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,TraceEvent,The method has 5 parameters. Parameters: eventCache' source' eventType' id' message
Long Parameter List,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,TraceTransfer,The method has 5 parameters. Parameters: eventCache' source' id' message' relatedActivityId
Long Parameter List,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,ProcessLogEventInfo,The method has 7 parameters. Parameters: logLevel' loggerName' message' arguments' eventId' eventType' relatedActivityId
Long Parameter List,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,AddRule,The method has 5 parameters. Parameters: minLevel' maxLevel' target' loggerNamePattern' final
Long Parameter List,NLog.Fluent,LogBuilder,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Fluent\LogBuilder.cs,Message,The method has 5 parameters. Parameters: format' arg0' arg1' arg2' arg3
Long Parameter List,NLog.Internal,SortHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\SortHelpers.cs,CreateBucketDictionaryWithValue,The method has 5 parameters. Parameters: inputs' keyComparer' currentIndex' singleBucketKey' keyValue
Long Parameter List,NLog.Internal,NativeMethods,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\NativeMethods.cs,LogonUser,The method has 6 parameters. Parameters: pszUsername' pszDomain' pszPassword' dwLogonType' dwLogonProvider' phToken
Long Parameter List,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,ScanProperties,The method has 5 parameters. Parameters: aggressiveSearch' result' o' level' visitedObjects
Long Parameter List,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,ScanPropertyForObject,The method has 6 parameters. Parameters: prop' propValue' aggressiveSearch' result' level' visitedObjects
Long Parameter List,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,ScanPropertiesList,The method has 5 parameters. Parameters: aggressiveSearch' result' elements' level' visitedObjects
Long Parameter List,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryCreateCollectionObject,The method has 6 parameters. Parameters: obj' propInfo' valueRaw' collectionObject' collectionAddMethod' collectionItemType
Long Parameter List,NLog.Internal,Win32FileNativeMethods,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Win32FileNativeMethods.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,WriteAttributeSafeString,The method has 5 parameters. Parameters: writer' prefix' localName' ns' value
Long Parameter List,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,WriteElementSafeString,The method has 5 parameters. Parameters: writer' prefix' localName' ns' value
Long Parameter List,NLog.Layouts,CsvLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\CSV\CsvLayout.cs,RenderColumnLayout,The method has 5 parameters. Parameters: logEvent' columnLayout' quoting' target' i
Long Parameter List,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,AppendJsonPropertyValue,The method has 7 parameters. Parameters: propName' propertyValue' format' formatProvider' captureType' sb' beginJsonMessage
Long Parameter List,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyObjectValue,The method has 7 parameters. Parameters: propName' propertyValue' sb' orgLength' objectsInPath' depth' ignorePropertiesElementName
Long Parameter List,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlCollectionObject,The method has 7 parameters. Parameters: propName' collection' sb' orgLength' objectsInPath' depth' ignorePropertiesElementName
Long Parameter List,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlDictionaryObject,The method has 7 parameters. Parameters: propName' dictionary' sb' orgLength' objectsInPath' depth' ignorePropertiesElementName
Long Parameter List,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlObjectPropertyValues,The method has 7 parameters. Parameters: propName' propertyValues' sb' orgLength' objectsInPath' depth' ignorePropertiesElementName
Long Parameter List,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyValue,The method has 6 parameters. Parameters: propName' propertyValue' sb' orgLength' ignoreValue' ignorePropertiesElementName
Long Parameter List,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyStringValue,The method has 6 parameters. Parameters: propName' xmlValueString' sb' orgLength' ignoreValue' ignorePropertiesElementName
Long Parameter List,NLog.MessageTemplates,Hole,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\Hole.cs,Hole,The method has 5 parameters. Parameters: name' format' captureType' position' alignment
Long Parameter List,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,Render,The method has 6 parameters. Parameters: template' formatProvider' parameters' forceTemplateRenderer' sb' messageTemplateParameters
Long Parameter List,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,RenderHole,The method has 5 parameters. Parameters: sb' hole' formatProvider' value' legacy
Long Parameter List,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,RenderHole,The method has 6 parameters. Parameters: sb' captureType' holeFormat' formatProvider' value' legacy
Long Parameter List,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,FormatValue,The method has 5 parameters. Parameters: value' format' captureType' formatProvider' builder
Long Parameter List,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeSimpleObject,The method has 5 parameters. Parameters: value' format' formatProvider' builder' convertToString
Long Parameter List,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeWithoutCyclicLoop,The method has 6 parameters. Parameters: collection' format' formatProvider' builder' objectsInPath' depth
Long Parameter List,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeDictionaryObject,The method has 6 parameters. Parameters: dictionary' format' formatProvider' builder' objectsInPath' depth
Long Parameter List,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeCollectionObject,The method has 6 parameters. Parameters: collection' format' formatProvider' builder' objectsInPath' depth
Long Parameter List,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeCollectionItem,The method has 6 parameters. Parameters: item' format' formatProvider' builder' objectsInPath' depth
Long Parameter List,NLog.Targets,ColoredConsoleAnsiPrinter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleAnsiPrinter.cs,ReleaseTextWriter,The method has 5 parameters. Parameters: consoleWriter' consoleStream' oldForegroundColor' oldBackgroundColor' flush
Long Parameter List,NLog.Targets,ColoredConsoleSystemPrinter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleSystemPrinter.cs,ReleaseTextWriter,The method has 5 parameters. Parameters: consoleWriter' consoleStream' oldForegroundColor' oldBackgroundColor' flush
Long Parameter List,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,WriteToOutputWithPrinter,The method has 5 parameters. Parameters: consoleStream' colorMessage' newForegroundColor' newBackgroundColor' wordHighlighting
Long Parameter List,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The method has 7 parameters. Parameters: consolePrinter' consoleWriter' message' defaultForegroundColor' defaultBackgroundColor' rowForegroundColor' rowBackgroundColor
Long Parameter List,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,RenderLogEventToWriteBuffer,The method has 6 parameters. Parameters: output' layout' logEvent' targetBuilder' targetBuffer' targetBufferPosition
Long Parameter List,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,TryGetConvertedRawValue,The method has 5 parameters. Parameters: logEvent' parameterInfo' dbParameterType' dbParameterCulture' value
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObject,The method has 5 parameters. Parameters: value' destination' options' objectsInPath' depth
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObjectWithReflection,The method has 5 parameters. Parameters: value' destination' options' objectsInPath' depth
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeWithFormatProvider,The method has 5 parameters. Parameters: formattable' includeQuotes' destination' options' hasFormat
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeDictionaryObject,The method has 5 parameters. Parameters: dictionary' destination' options' objectsInPath' depth
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeCollectionObject,The method has 5 parameters. Parameters: value' destination' options' objectsInPath' depth
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObjectWithProperties,The method has 5 parameters. Parameters: value' destination' options' objectsInPath' depth
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeSimpleTypeCodeValue,The method has 5 parameters. Parameters: value' objTypeCode' destination' options' forceToString
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeSimpleNumericValue,The method has 5 parameters. Parameters: value' objTypeCode' destination' options' forceToString
Long Parameter List,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObjectProperties,The method has 5 parameters. Parameters: objectPropertyList' destination' options' objectsInPath' depth
Long Parameter List,NLog.Targets,EventLogTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\EventLogTarget.cs,WriteEntry,The method has 5 parameters. Parameters: logEventInfo' message' entryType' eventId' category
Long Parameter List,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GenerateArchiveFileNameAfterCleanup,The method has 5 parameters. Parameters: fileName' fileInfo' archiveFilePattern' archiveDate' initializedNewFile
Long Parameter List,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,TryArchiveFile,The method has 5 parameters. Parameters: fileName' ev' upcomingWriteSize' previousLogEventTimestamp' initializedNewFile
Long Parameter List,NLog.Targets,IColoredConsolePrinter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\IColoredConsolePrinter.cs,ReleaseTextWriter,The method has 5 parameters. Parameters: consoleWriter' consoleStream' oldForegroundColor' oldBackgroundColor' flush
Long Parameter List,NLog.Targets,TargetWithContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\TargetWithContext.cs,AddContextProperty,The method has 5 parameters. Parameters: logEvent' itemName' itemValue' checkForDuplicates' combinedProperties
Long Parameter List,NLog.Targets,WebServiceTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\WebServiceTarget.cs,DoInvoke,The method has 5 parameters. Parameters: parameters' continuation' request' beginFunc' getStreamFunc
Long Parameter List,NLog.Targets,WebServiceTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\WebServiceTarget.cs,PostPayload,The method has 5 parameters. Parameters: continuation' beginFunc' getStreamFunc' postPayload' sendContinuation
Long Parameter List,NLog.Targets.FileArchiveModes,FileArchiveModeDateAndSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDateAndSequence.cs,TryParseDateAndSequence,The method has 5 parameters. Parameters: archiveFileNameWithoutPath' dateFormat' fileTemplate' date' sequence
Long Parameter List,NLog.Targets.FileArchiveModes,FileArchiveModeFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeFactory.cs,CreateArchiveStyle,The method has 5 parameters. Parameters: archiveFilePath' archiveNumbering' dateFormat' customArchiveFileName' maxArchiveFiles
Long Identifier,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,ResetFormattedMessage,The length of the parameter rebuildMessageTemplateParameters is 32.
Long Identifier,NLog.Conditions,ConditionMethodExpression,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Expressions\ConditionMethodExpression.cs,,The length of the parameter _lateBoundMethodDefaultParameters is 33.
Long Identifier,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,GetDefaultCandidateConfigFilePaths,The length of the parameter platformFileSystemCaseInsensitive is 33.
Long Identifier,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseTargetsElement,The length of the parameter typeNameToDefaultTargetParameters is 33.
Long Identifier,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseTargetElement,The length of the parameter typeNameToDefaultTargetParameters is 33.
Long Identifier,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseTargetWrapper,The length of the parameter typeNameToDefaultTargetParameters is 33.
Long Identifier,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseCompoundTarget,The length of the parameter typeNameToDefaultTargetParameters is 33.
Long Identifier,NLog.Config,LoggingConfigurationWatchableFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationWatchableFileLoader.cs,,The length of the parameter ReconfigAfterFileChangedTimeout is 31.
Long Identifier,NLog.Internal.FileAppenders,CountingSingleProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\CountingSingleProcessFileAppender.cs,,The length of the parameter _enableFileDeleteSimpleMonitor is 30.
Long Identifier,NLog.Internal.FileAppenders,CountingSingleProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\CountingSingleProcessFileAppender.cs,,The length of the parameter _lastSimpleMonitorCheckTimeUtc is 30.
Long Identifier,NLog.Internal.FileAppenders,SingleProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\SingleProcessFileAppender.cs,,The length of the parameter _enableFileDeleteSimpleMonitor is 30.
Long Identifier,NLog.Internal.FileAppenders,SingleProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\SingleProcessFileAppender.cs,,The length of the parameter _lastSimpleMonitorCheckTimeUtc is 30.
Long Identifier,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,,The length of the parameter _propertiesElementNameHasFormat is 31.
Long Identifier,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,,The length of the parameter _buildConnectionStringDelegate is 30.
Long Identifier,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,PreviousLogOverlappedPeriod,The length of the parameter periodAfterPreviousLogEventTime is 31.
Long Identifier,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,PreviousLogOverlappedPeriod,The length of the parameter periodAfterPreviousLogEventTimeString is 37.
Long Identifier,NLog.Targets,Target,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Target.cs,,The length of the parameter _precalculateStringBuilderPool is 30.
Long Statement,NLog,GlobalDiagnosticsContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\GlobalDiagnosticsContext.cs,Set,The length of the statement  "                bool requireCopyOnWrite = _dictReadOnly != null && !_dict.ContainsKey(item); // Overwrite existing value is ok (no resize) " is 122.
Long Statement,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,RemoveScopeWillClearContext,The length of the statement  "                      || (immutableDict.Count == 2 && !ReferenceEquals(_item2' null) && ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && !_item1.Equals(_item2)) " is 196.
Long Statement,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,RemoveScopeWillClearContext,The length of the statement  "                      || (immutableDict.Count == 3 && !ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && immutableDict.ContainsKey(_item3) && !_item1.Equals(_item2) && !_item1.Equals(_item3) && !_item2.Equals(_item3)) " is 252.
Long Statement,NLog,MappedDiagnosticsLogicalContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsLogicalContext.cs,GetThreadLocal,The length of the statement  "            return System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(LogicalThreadDictionaryKey) as Dictionary<string' object>; " is 126.
Long Statement,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,CanLogEventDeferMessageFormat,The length of the statement  "            if (_message?.Length < 256 && ReferenceEquals(MessageFormatter' LogMessageTemplateFormatter.DefaultAuto.MessageFormatter)) " is 122.
Long Statement,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,GetTargetsByLevelForLogger,The length of the statement  "                    targetsFound = GetTargetsByLevelForLogger(name' rule.GetChildRulesThreadSafe()' targetsByLevel' lastTargetsByLevel' suppressedLevels) || targetsFound; " is 150.
Long Statement,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,CloseOldConfig,The length of the statement  "                    InternalLogger.Warn("Target flush timeout. One or more targets did not complete flush operation' skipping target close."); " is 122.
Long Statement,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,CreateNewLogger,The length of the statement  "                    InternalLogger.Error(ex' "GetLogger / GetCurrentClassLogger. Cannot create instance of type '{0}'. It should have an default contructor."' loggerType); " is 151.
Long Statement,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,CreateCustomLoggerType,The length of the statement  "                    $"GetLogger / GetCurrentClassLogger is '{customLoggerType}' as loggerType is static class and should instead inherit from Logger"; " is 130.
Long Statement,NLog,LoggerImpl,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LoggerImpl.cs,Write,The length of the statement  "                    int? firstLegacyUserFrame = firstUserFrame.HasValue ? SkipToUserStackFrameLegacy(stackFrames' firstUserFrame.Value) : (int?)null; " is 129.
Long Statement,NLog,LoggerImpl,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LoggerImpl.cs,Write,The length of the statement  "                prevFilterResult = result;  // Cache the result' and reuse it for the next target' if it comes from the same logging-rule " is 121.
Long Statement,NLog,LoggerImpl,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LoggerImpl.cs,SkipToUserStackFrameLegacy,The length of the statement  "                    if (declaringType?.Namespace == "System.Runtime.CompilerServices" || declaringType == typeof(System.Threading.ExecutionContext)) " is 128.
Long Statement,NLog,LoggerImpl,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LoggerImpl.cs,IsLoggerType,The length of the statement  "            var isLoggerType = declaringType != null && (loggerType == declaringType || declaringType.IsSubclassOf(loggerType) || loggerType.IsAssignableFrom(declaringType)); " is 162.
Long Statement,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,Fail,The length of the statement  "            ProcessLogEventInfo(LogLevel.Error' null' string.Concat(message' " "' detailMessage)' null' null' TraceEventType.Error' null); " is 126.
Long Statement,NLog.Attributes,LogLevelTypeConverter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Attributes\LogLevelTypeConverter.cs,CanConvertTo,The length of the statement  "            return destinationType == typeof(string) || IsNumericType(destinationType) || base.CanConvertTo(context' destinationType); " is 122.
Long Statement,NLog.Common,AsyncHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Common\AsyncHelpers.cs,StartAsyncTask,The length of the statement  "            System.Threading.Tasks.Task.Factory.StartNew(asyncDelegate' state' CancellationToken.None' System.Threading.Tasks.TaskCreationOptions.None' System.Threading.Tasks.TaskScheduler.Default); " is 186.
Long Statement,NLog.Conditions,ConditionParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionParser.cs,ParseLiteralExpression,The length of the statement  "                ConditionExpression e = new ConditionLayoutExpression(Layout.FromString(_tokenizer.StringTokenValue' _configurationItemFactory)); " is 129.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,LoadNLogExtensionAssemblies,The length of the statement  "                if (assembly.FullName.StartsWith("NLog."' StringComparison.OrdinalIgnoreCase) && !alreadyRegistered.Contains(assembly.FullName)) " is 128.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,GetAutoLoadingFileLocations,The length of the statement  "            var entryLocation = PathHelpers.TrimDirectorySeparators(AssemblyHelpers.GetAssemblyFileLocation(Assembly.GetEntryAssembly())); " is 126.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,GetAutoLoadingFileLocations,The length of the statement  "            if (!string.IsNullOrEmpty(entryLocation) && !string.Equals(entryLocation' assemblyLocation' StringComparison.OrdinalIgnoreCase)) " is 128.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,GetAutoLoadingFileLocations,The length of the statement  "            if (!string.IsNullOrEmpty(baseDirectory) && !string.Equals(baseDirectory' assemblyLocation' StringComparison.OrdinalIgnoreCase)) " is 128.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,GetNLogExtensionFiles,The length of the statement  "                InternalLogger.Warn(ex' "Skipping auto loading location because assembly directory does not exist: {0}"' assemblyLocation); " is 123.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,GetNLogExtensionFiles,The length of the statement  "                InternalLogger.Warn(ex' "Skipping auto loading location because access not allowed to assembly directory: {0}"' assemblyLocation); " is 130.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,GetNLogExtensionFiles,The length of the statement  "                InternalLogger.Warn(ex' "Skipping auto loading location because access not allowed to assembly directory: {0}"' assemblyLocation); " is 130.
Long Statement,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExternalItems,The length of the statement  "            _layoutRenderers.RegisterNamedType("configsetting"' "NLog.Extensions.Logging.ConfigSettingLayoutRenderer' NLog.Extensions.Logging"); " is 132.
Long Statement,NLog.Config,DynamicLogLevelFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\DynamicLogLevelFilter.cs,ParseSingleLevel,The length of the statement  "                InternalLogger.Warn(ex' "Logging rule {0} with filter `{1}` has invalid level filter: {2}"' _loggingRule.RuleName' _loggingRule.LoggerNamePattern' levelFilter); " is 160.
Long Statement,NLog.Config,DynamicLogLevelFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\DynamicLogLevelFilter.cs,ParseLevels,The length of the statement  "                    InternalLogger.Warn(ex' "Logging rule {0} with filter `{1}` has invalid level filter: {2}"' _loggingRule.RuleName' _loggingRule.LoggerNamePattern' levelFilter); " is 160.
Long Statement,NLog.Config,DynamicRangeLevelFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\DynamicRangeLevelFilter.cs,GenerateLogLevels,The length of the statement  "                _activeFilter = activeFilter = new KeyValuePair<MinMaxLevels' bool[]>(new MinMaxLevels(minLevelFilter' maxLevelFilter)' logLevels); " is 131.
Long Statement,NLog.Config,DynamicRangeLevelFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\DynamicRangeLevelFilter.cs,ParseLogLevel,The length of the statement  "                InternalLogger.Warn(ex' "Logging rule {0} with filter `{1}` has invalid level filter: {2}"' _loggingRule.RuleName' _loggingRule.LoggerNamePattern' logLevel); " is 157.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,AddTargetThreadSafe,The length of the statement  "                InternalLogger.Info("Registered target {0}: {1} (Target created with different name: {2})"' name' target.GetType().FullName' target.Name); " is 138.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,ReloadNewConfig,The length of the statement  "                //problem: XmlLoggingConfiguration.Initialize eats exception with invalid XML. ALso XmlLoggingConfiguration.Reload never returns null. " is 134.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,CheckUnusedTargets,The length of the statement  "            ReadOnlyCollection<Target> configuredNamedTargets = ConfiguredNamedTargets; //assign to variable because `ConfiguredNamedTargets` computes a new list every time. " is 161.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,CheckUnusedTargets,The length of the statement  "            InternalLogger.Debug("Unused target checking is started... Rule Count: {0}' Target Count: {1}"' LoggingRules.Count' configuredNamedTargets.Count); " is 146.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,CheckUnusedTargets,The length of the statement  "            var targetNamesAtRules = new HashSet<string>(GetLoggingRulesThreadSafe().SelectMany(r => r.Targets).Select(t => t.Name)); " is 121.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,CheckUnusedTargets,The length of the statement  "            var compoundTargets = configuredNamedTargets.OfType<CompoundTargetBase>().SelectMany(wt => wt.Targets.Select(t => new KeyValuePair<Target' Target>(t' wt))).ToLookup(p => p.Key' p => p.Value); " is 191.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,CheckUnusedTargets,The length of the statement  "                InternalLogger.Warn("Unused target detected. Add a rule for this target to the configuration. TargetName: {0}"' target.Name); " is 125.
Long Statement,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,CheckUnusedTargets,The length of the statement  "            InternalLogger.Debug("Unused target checking is completed. Total Rule Count: {0}' Total Target Count: {1}' Unused Target Count: {2}"' LoggingRules.Count' configuredNamedTargets.Count' unusedCount); " is 197.
Long Statement,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,LoadXmlLoggingConfiguration,The length of the statement  "                            newConfig = new XmlLoggingConfiguration(xmlReaderRetry' configFile' logFactory); // Scan again after having updated LogFactory' to throw correct exception " is 154.
Long Statement,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,LoadXmlLoggingConfiguration,The length of the statement  "                if (ex.MustBeRethrownImmediately() || ex.MustBeRethrown() || (logFactory.ThrowConfigExceptions ?? logFactory.ThrowExceptions)) " is 126.
Long Statement,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,CreateEmptyDefaultConfig,The length of the statement  "            return new XmlLoggingConfiguration($"<nlog autoReload='{autoReload}'></nlog>"' configFile' logFactory);    // Empty default config' but monitors file " is 149.
Long Statement,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,GetDefaultCandidateConfigFilePaths,The length of the statement  "            if (!string.IsNullOrEmpty(entryAssemblyLocation) && !string.Equals(entryAssemblyLocation' baseDirectory' StringComparison.OrdinalIgnoreCase)) " is 141.
Long Statement,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,GetDefaultCandidateConfigFilePaths,The length of the statement  "            foreach (var filePath in GetPrivateBinPathNLogLocations(baseDirectory' nlogConfigFile' platformFileSystemCaseInsensitive ? nLogConfigFileLowerCase : string.Empty)) " is 163.
Long Statement,NLog.Config,LoggingConfigurationFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationFileLoader.cs,GetAppSpecificNLogLocations,The length of the statement  "                string processDirectory = !string.IsNullOrEmpty(processFilePath) ? PathHelpers.TrimDirectorySeparators(Path.GetDirectoryName(processFilePath)) : string.Empty; " is 158.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,LoadConfig,The length of the statement  "            var validatedConfig = ValidatedConfigurationElement.Create(nlogConfig' LogFactory); // Validate after having loaded initial settings " is 132.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,SetNLogElementSettings,The length of the statement  "                        LogFactory.KeepVariablesOnReload = ParseBooleanValue(configItem.Key' configItem.Value' LogFactory.KeepVariablesOnReload); " is 121.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,SetNLogElementSettings,The length of the statement  "                        InternalLogger.LogToConsoleError = ParseBooleanValue(configItem.Key' configItem.Value' InternalLogger.LogToConsoleError); " is 121.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,CreateUniqueSortedListFromConfig,The length of the statement  "                        InternalLogger.Debug("Skipping duplicate value for 'NLog'. PropertyName={0}. Skips Value={1}. Existing Value={2}"' configItem.Key' configItem.Value' dict[key]); " is 160.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ExpandFilePathVariables,The length of the statement  "                    internalLogFile = internalLogFile.Replace(currentDirToken' System.IO.Directory.GetCurrentDirectory() + System.IO.Path.DirectorySeparatorChar.ToString()); " is 153.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ExpandFilePathVariables,The length of the statement  "                    internalLogFile = internalLogFile.Replace(baseDirToken' LogFactory.CurrentAppDomain.BaseDirectory + System.IO.Path.DirectorySeparatorChar.ToString()); " is 150.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ExpandFilePathVariables,The length of the statement  "                    internalLogFile = internalLogFile.Replace(tempDirToken' System.IO.Path.GetTempPath() + System.IO.Path.DirectorySeparatorChar.ToString()); " is 137.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseLevelLayout,The length of the statement  "            SimpleLayout simpleLayout = !StringHelpers.IsNullOrWhiteSpace(levelLayout) ? new SimpleLayout(levelLayout' _configurationItemFactory) : null; " is 141.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseLoggingRuleTargets,The length of the statement  "                        new NLogConfigurationException($"Target '{targetName}' not found for logging rule: {(string.IsNullOrEmpty(rule.RuleName) ? rule.LoggerNamePattern : rule.RuleName)}."); " is 167.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseTargetWrapper,The length of the statement  "                        var configException = new NLogConfigurationException($"Failed to assign wrapped target {targetTypeName}' because target {wrapper.Name} already has one."); " is 154.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,GetConfigItemTypeAttribute,The length of the statement  "            var typeAttributeValue = sectionNameForRequiredValue != null ? element.GetRequiredValue("type"' sectionNameForRequiredValue) : element.GetOptionalValue("type"' null); " is 166.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,SetPropertyFromElement,The length of the statement  "                InternalLogger.Debug("Skipping unknown element {0} in section {1}. Not matching any property on {2} - {3}"' childElement.Name' parentElement.Name' o' o?.GetType()); " is 164.
Long Statement,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseBooleanValue,The length of the statement  "                var configException = new NLogConfigurationException(exception' $"'{propertyName}' hasn't a valid boolean value '{value}'. {defaultValue} will be used"); " is 153.
Long Statement,NLog.Config,ValidatedConfigurationElement,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,CreateValueLookup,The length of the statement  "                        string validationError = string.IsNullOrEmpty(attributeKey) ? $"Invalid property for '{element.Name}' without name. Value={attribute.Value}" " is 140.
Long Statement,NLog.Config,ValidatedConfigurationElement,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,CreateValueLookup,The length of the statement  "                            : $"Duplicate value for '{element.Name}'. PropertyName={attributeKey}. Skips Value={attribute.Value}. Existing Value={valueLookup[attributeKey]}"; " is 146.
Long Statement,NLog.Config,LoggingConfigurationSectionExtensions,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,GetOptionalBooleanValue,The length of the statement  "                var configException = new NLogConfigurationException(exception' $"'{attributeName}' hasn't a valid boolean value '{value}'. {defaultValue} will be used"); " is 154.
Long Statement,NLog.Config,LoggingConfigurationWatchableFileLoader,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationWatchableFileLoader.cs,TryWachtingConfigFile,The length of the statement  "                InternalLogger.Warn(exception' "Cannot start file watching: {0}"' string.Join("'"' _logFactory._config.FileNamesToWatch.ToArray())); " is 132.
Long Statement,NLog.Config,LoggingRule,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingRule.cs,SetLoggingLevels,The length of the statement  "            _logLevelFilter = _logLevelFilter.GetSimpleFilterForUpdate().SetLoggingLevels(LogLevel.MinLevel' LogLevel.MaxLevel' false).SetLoggingLevels(minLevel' maxLevel' true); " is 166.
Long Statement,NLog.Config,NLogXmlElement,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\NLogXmlElement.cs,AssertName,The length of the statement  "            throw new InvalidOperationException("Assertion failed. Expected element name '" + string.Join("|"' allowedNames) + "'' actual: '" + LocalName + "'."); " is 150.
Long Statement,NLog.Config,PropertyTypeConverter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\PropertyTypeConverter.cs,Convert,The length of the statement  "            if (propertyType == null || propertyValue == null || propertyValue.GetType() == propertyType || propertyType == typeof(object)) " is 127.
Long Statement,NLog.Config,XmlLoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,Initialize,The length of the statement  "                if (!ignoreErrors && (LogFactory.ThrowConfigExceptions ?? LogFactory.ThrowExceptions || configurationException.MustBeRethrown())) " is 129.
Long Statement,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,Check,The length of the statement  "                            while (OptimizeBufferDefaultLength < targetBuilder.Result.Capacity && OptimizeBufferDefaultLength < MaxInitialRenderBufferLength) " is 129.
Long Statement,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,Check,The length of the statement  "                        _repeatFilter.Add(new FilterInfoKey(filterInfo.StringBuffer' filterInfoKey.StringValue' filterInfoKey.StringHashCode)' filterInfo); " is 131.
Long Statement,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,CreateFilterInfo,The length of the statement  "                if (OptimizeBufferReuse && reusableObject.StringBuffer != null && reusableObject.StringBuffer.Capacity != OptimizeBufferDefaultLength) " is 134.
Long Statement,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,RefreshFilterInfo,The length of the statement  "                        logEvent.Message += string.Format(FilterCountMessageAppendFormat' filterCount.ToString(System.Globalization.CultureInfo.InvariantCulture)); " is 139.
Long Statement,NLog.Fluent,Log,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Fluent\Log.cs,Create,The length of the statement  "            string name = !StringHelpers.IsNullOrWhiteSpace(callerFilePath) ? Path.GetFileNameWithoutExtension(callerFilePath) : null; " is 122.
Long Statement,NLog.Internal,AssemblyHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\AssemblyHelpers.cs,GetAssemblyFileLocation,The length of the statement  "                    InternalLogger.Warn("Ignoring assembly location because code base is unknown: '{0}' ({1})"' assembly.CodeBase' fullName); " is 121.
Long Statement,NLog.Internal,AssemblyHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\AssemblyHelpers.cs,GetAssemblyFileLocation,The length of the statement  "                    InternalLogger.Warn("Ignoring assembly location because it is not a valid directory: '{0}' ({1})"' assemblyCodeBase.LocalPath' fullName); " is 137.
Long Statement,NLog.Internal,AssemblyHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\AssemblyHelpers.cs,GetAssemblyFileLocation,The length of the statement  "                    InternalLogger.Warn("Ignoring assembly location because directory doesn't exists: '{0}' ({1})"' assemblyLocation' fullName); " is 124.
Long Statement,NLog.Internal,CallSiteInformation,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\CallSiteInformation.cs,GetCallerClassName,The length of the statement  "            return StackTraceUsageUtils.GetStackFrameMethodClassName(method' includeNameSpace' cleanAsyncMoveNext' cleanAnonymousDelegates) ?? string.Empty; " is 144.
Long Statement,NLog.Internal,CallSiteInformation,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\CallSiteInformation.cs,GetCallerMethodName,The length of the statement  "            return StackTraceUsageUtils.GetStackFrameMethodName(method' includeMethodInfo' cleanAsyncMoveNext' cleanAnonymousDelegates) ?? string.Empty; " is 140.
Long Statement,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,SetMessageProperties,The length of the statement  "                if (newMessageProperties != null && (_eventProperties.Count > 0 || !InsertMessagePropertiesIntoEmptyDictionary(newMessageProperties' _eventProperties))) " is 152.
Long Statement,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,RemoveOldMessageProperties,The length of the statement  "                if (_eventProperties.TryGetValue(oldMessageProperties[i].Name' out var propertyValue) && propertyValue.IsMessageProperty) " is 121.
Long Statement,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,Contains,The length of the statement  "                if (((IDictionary<object' PropertyValue>)EventProperties).Contains(new KeyValuePair<object' PropertyValue>(item.Key' new PropertyValue(item.Value' false)))) " is 156.
Long Statement,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,Contains,The length of the statement  "                if (((IDictionary<object' PropertyValue>)EventProperties).Contains(new KeyValuePair<object' PropertyValue>(item.Key' new PropertyValue(item.Value' true)))) " is 155.
Long Statement,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,Remove,The length of the statement  "                if (((IDictionary<object' PropertyValue>)EventProperties).Remove(new KeyValuePair<object' PropertyValue>(item.Key' new PropertyValue(item.Value' false)))) " is 154.
Long Statement,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,Remove,The length of the statement  "                if (((IDictionary<object' PropertyValue>)EventProperties).Remove(new KeyValuePair<object' PropertyValue>(item.Key' new PropertyValue(item.Value' true)))) " is 153.
Long Statement,NLog.Internal,DictionaryEnumeratorBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,FindNextValidMessagePropertyIndex,The length of the statement  "                    if (_dictionary._eventProperties.TryGetValue(_dictionary._messageProperties[i].Name' out var valueItem) && valueItem.IsMessageProperty) " is 135.
Long Statement,NLog.Internal,SortHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\SortHelpers.cs,BucketSort,The length of the statement  "                return new ReadOnlySingleBucketDictionary<TKey' IList<TValue>>(new KeyValuePair<TKey' IList<TValue>>(singleBucketKey' inputs)' keyComparer); " is 140.
Long Statement,NLog.Internal,ReadOnlySingleBucketDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\SortHelpers.cs,Contains,The length of the statement  "                    return _comparer.Equals(_singleBucket.Value.Key' item.Key) && EqualityComparer<TValue>.Default.Equals(_singleBucket.Value.Value' item.Value); " is 141.
Long Statement,NLog.Internal,ExceptionHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\ExceptionHelper.cs,MustBeRethrown,The length of the statement  "            var shallRethrow = isConfigError ? (LogManager.ThrowConfigExceptions ?? LogManager.ThrowExceptions) : LogManager.ThrowExceptions; " is 129.
Long Statement,NLog.Internal,FactoryHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FactoryHelper.cs,CreateInstance,The length of the statement  "                throw new NLogConfigurationException($"Cannot access the constructor of type: {t.FullName}. Is the required permission granted?"' exception); " is 141.
Long Statement,NLog.Internal,Win32FileCharacteristicsHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Files\Win32FileCharacteristicsHelper.cs,GetFileCharacteristics,The length of the statement  "                    return new FileCharacteristics(DateTime.FromFileTimeUtc(fileInfo.ftCreationTime)' DateTime.FromFileTimeUtc(fileInfo.ftLastWriteTime)' fileInfo.nFileSizeLow + (((long)fileInfo.nFileSizeHigh) << 32)); " is 198.
Long Statement,NLog.Internal,LogMessageTemplateFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\LogMessageTemplateFormatter.cs,AppendFormattedMessage,The length of the statement  "                logEvent.Message.Render(logEvent.FormatProvider ?? CultureInfo.CurrentCulture' logEvent.Parameters' _forceTemplateRenderer' builder' out _); " is 140.
Long Statement,NLog.Internal,LogMessageTemplateFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\LogMessageTemplateFormatter.cs,AppendToBuilder,The length of the statement  "            logEvent.Message.Render(logEvent.FormatProvider ?? CultureInfo.CurrentCulture' logEvent.Parameters' _forceTemplateRenderer' builder' out var messageTemplateParameterList); " is 171.
Long Statement,NLog.Internal,LogMessageTemplateFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\LogMessageTemplateFormatter.cs,AppendToBuilder,The length of the statement  "            logEvent.CreateOrUpdatePropertiesInternal(false' messageTemplateParameterList ?? ArrayHelper.Empty<MessageTemplateParameter>()); " is 128.
Long Statement,NLog.Internal,PlatformDetector,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\PlatformDetector.cs,GetCurrentRuntimeOS,The length of the statement  "            else if (System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(System.Runtime.InteropServices.OSPlatform.Linux)) " is 121.
Long Statement,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,ScanPropertyForObject,The length of the statement  "                InternalLogger.Trace("{0}Scanning Property {1} '{2}' {3}"' new string(' '' level + 1)' prop.Name' propValue.ToString()' prop.PropertyType.Namespace); " is 149.
Long Statement,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,GetConfigurationPropertyValue,The length of the statement  "                InternalLogger.Info(ex' "{0}Type reflection not possible for property {1}. Maybe because of .NET Native."' new string(' '' level + 1)' prop.Name); " is 146.
Long Statement,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,IncludeConfigurationItem,The length of the statement  "                InternalLogger.Info(ex' "{0}Type reflection not possible for: {1}. Maybe because of .NET Native."' new string(' '' level)' item.ToString()); " is 140.
Long Statement,NLog.Internal,ObjectGraphScanner,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectGraphScanner.cs,IgnoreSimpleType,The length of the statement  "            return type == null || type.IsPrimitive() || type.IsEnum() || type == typeof(string) || type == typeof(System.Globalization.CultureInfo) || type == typeof(Type); " is 161.
Long Statement,NLog.Internal,ObjectReflectionCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectReflectionCache.cs,TryExtractExpandoObject,The length of the statement  "                        var dictionaryEnumerator = (IDictionaryEnumerator)Activator.CreateInstance(typeof(DictionaryEnumerator<'>).MakeGenericType(interfaceType.GetGenericArguments())); " is 161.
Long Statement,NLog.Internal,ObjectReflectionCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectReflectionCache.cs,TryExtractExpandoObject,The length of the statement  "                        propertyInfos = new ObjectPropertyInfos(null' new[] { new FastPropertyLookup(string.Empty' TypeCode.Object' (o' p) => dictionaryEnumerator.GetEnumerator(o)) }); " is 160.
Long Statement,NLog.Internal,ObjectReflectionCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\ObjectReflectionCache.cs,BuildFastLookup,The length of the statement  "                TypeCode typeCode = propertyType == typeof(string) ? TypeCode.String : (propertyType == typeof(int) ? TypeCode.Int32 : TypeCode.Object); " is 136.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,SetPropertyFromString,The length of the statement  "                    throw new NotSupportedException($"Parameter {propertyName} of {obj.GetType().Name} is an array and cannot be assigned a scalar value."); " is 136.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryGetPropertyInfo,The length of the statement  "            PropertyInfo propInfo = obj.GetType().GetProperty(propertyName' BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance); " is 135.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryImplicitConversion,The length of the statement  "                MethodInfo operatorImplicitMethod = resultType.GetMethod("op_Implicit"' BindingFlags.Public | BindingFlags.Static' null' new Type[] { value.GetType() }' null); " is 159.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryGetEnumValue,The length of the statement  "                    FieldInfo enumField = resultType.GetField(v' BindingFlags.IgnoreCase | BindingFlags.Static | BindingFlags.FlattenHierarchy | BindingFlags.Public); " is 146.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryGetEnumValue,The length of the statement  "                FieldInfo enumField = resultType.GetField(value' BindingFlags.IgnoreCase | BindingFlags.Static | BindingFlags.FlattenHierarchy | BindingFlags.Public); " is 150.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryFlatListConversion,The length of the statement  "            if (propInfo.PropertyType.IsGenericType() && TryCreateCollectionObject(obj' propInfo' valueRaw' out var newList' out var collectionAddMethod' out var propertyType)) " is 164.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryCreateCollectionObject,The length of the statement  "            if (isSet || typeDefinition == typeof(List<>) || typeDefinition == typeof(IList<>) || typeDefinition == typeof(IEnumerable<>)) //set or list/array etc " is 150.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryCreateCollectionObject,The length of the statement  "                collectionObject = CreateCollectionObjectInstance(isSet ? typeof(HashSet<>) : typeof(List<>)' collectionItemType' hashsetComparer); " is 131.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryCreateCollectionObject,The length of the statement  "                    throw new NLogConfigurationException("Cannot create instance of {0} for value {1}"' collectionType.ToString()' valueRaw); " is 121.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryCreateCollectionObject,The length of the statement  "                    throw new NLogConfigurationException("Add method on type {0} for value {1} not found"' collectionType.ToString()' valueRaw); " is 124.
Long Statement,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryGetPropertyInfo,The length of the statement  "                PropertyInfo propInfo = targetType.GetProperty(propertyName' BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance); " is 132.
Long Statement,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackTraceUsage,The length of the statement  "                return skipFrames == 0 ? (StackTraceUsage.WithCallSite | StackTraceUsage.WithFileNameAndLineNumber) : StackTraceUsage.WithSource; " is 129.
Long Statement,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackFrameMethodName,The length of the statement  "            if (cleanAsyncMoveNext && methodName == "MoveNext" && callerClassType?.DeclaringType != null && callerClassType.Name.StartsWith("<")) " is 133.
Long Statement,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackFrameMethodClassName,The length of the statement  "            if (cleanAsyncMoveNext && method.Name == "MoveNext" && callerClassType?.DeclaringType != null && callerClassType.Name.StartsWith("<")) " is 134.
Long Statement,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetClassFullName,The length of the statement  "                var callingClassAndMethod = stackTraceLines[i].Split(new[] { " "' "<>"' "("' ")" }' StringSplitOptions.RemoveEmptyEntries)[1]; " is 126.
Long Statement,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,TryCallSiteClassNameOptimization,The length of the statement  "            if ((stackTraceUsage & (StackTraceUsage.WithCallSite | StackTraceUsage.WithStackTrace)) != StackTraceUsage.WithCallSite) " is 120.
Long Statement,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,MustCaptureStackTrace,The length of the statement  "            if ((stackTraceUsage & (StackTraceUsage.WithCallSite | StackTraceUsage.WithStackTrace)) != StackTraceUsage.WithCallSite) " is 120.
Long Statement,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,MustCaptureStackTrace,The length of the statement  "            if (string.IsNullOrEmpty(logEvent.CallSiteInformation?.CallerMethodName) && string.IsNullOrEmpty(logEvent.CallSiteInformation?.CallerFilePath)) " is 143.
Long Statement,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,TryRememberCallSiteClassName,The length of the statement  "            CallSiteKey callSiteKey = new CallSiteKey(logEvent.CallerMemberName' logEvent.CallerFilePath' logEvent.CallerLineNumber); " is 121.
Long Statement,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,TryLookupCallSiteClassName,The length of the statement  "                System.Threading.Interlocked.CompareExchange(ref _callSiteClassNameCache' new MruCache<CallSiteKey' string>(1000)' null); " is 121.
Long Statement,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,TryLookupCallSiteClassName,The length of the statement  "            CallSiteKey callSiteKey = new CallSiteKey(logEvent.CallerMemberName' logEvent.CallerFilePath' logEvent.CallerLineNumber); " is 121.
Long Statement,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,XmlConvertToString,The length of the statement  "                    return safeConversion ? RemoveInvalidXmlChars(value.ToString(CultureInfo.InvariantCulture)) : value.ToString(CultureInfo.InvariantCulture); " is 139.
Long Statement,NLog.Internal.FileAppenders,BaseFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,WindowsCreateFile,The length of the statement  "                fileStream = new FileStream(handle' FileAccess.Write' overrideBufferSize > 0 ? overrideBufferSize : CreateFileParameters.BufferSize); " is 133.
Long Statement,NLog.Internal.FileAppenders,BaseFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,UpdateCreationTime,The length of the statement  "                CreationTimeUtc = FileCharacteristicsHelper.ValidateFileCreationTime(fileInfo' (f) => f.GetCreationTimeUtc()' (f) => f.GetLastWriteTimeUtc()).Value; " is 148.
Long Statement,NLog.Internal.FileAppenders,BaseFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,UpdateCreationTime,The length of the statement  "                // Set the file's creation time to avoid being thwarted by Windows' Tunneling capabilities (https://support.microsoft.com/en-us/kb/172190). " is 139.
Long Statement,NLog.Internal.FileAppenders,BaseMutexFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\BaseMutexFileAppender.cs,CreateArchiveMutex,The length of the statement  "                if (ex is SecurityException || ex is UnauthorizedAccessException || ex is NotSupportedException || ex is NotImplementedException || ex is PlatformNotSupportedException) " is 168.
Long Statement,NLog.Internal.FileAppenders,FileAppenderCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\FileAppenderCache.cs,GetFileCreationTimeSource,The length of the statement  "                    result = FileCharacteristicsHelper.ValidateFileCreationTime(appender' (f) => f.GetFileCreationTimeUtc()' f => fallbackTimeSource); " is 130.
Long Statement,NLog.Internal.FileAppenders,FileAppenderCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\FileAppenderCache.cs,GetFileCreationTimeSource,The length of the statement  "                result = FileCharacteristicsHelper.ValidateFileCreationTime(fileInfo' (f) => f.GetCreationTimeUtc()' (f) => fallbackTimeSource' (f) => f.GetLastWriteTimeUtc()).Value; " is 166.
Long Statement,NLog.Internal.FileAppenders,WindowsMultiProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\WindowsMultiProcessFileAppender.cs,CreateAppendOnlyFile,The length of the statement  "                    System.Security.AccessControl.FileSystemRights.AppendData | System.Security.AccessControl.FileSystemRights.Synchronize' // <- Atomic append " is 139.
Long Statement,NLog.Internal.NetworkSenders,SslSocketProxy,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\NetworkSenders\SslSocketProxy.cs,UserCertificateValidationCallback,The length of the statement  "            Common.InternalLogger.Debug("SSL certificate errors were encountered when establishing connection to the server: {0}' Certificate: {1}"' sslPolicyErrors' certificate); " is 167.
Long Statement,NLog.LayoutRenderers,AppSettingLayoutRenderer2,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\AppSettingLayoutRenderer2.cs,InitializeLayoutRenderer,The length of the statement  "            _connectionStringName = Item?.TrimStart().StartsWith(connectionStringSection' StringComparison.InvariantCultureIgnoreCase) == true ? " is 132.
Long Statement,NLog.LayoutRenderers,AssemblyVersionLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\AssemblyVersionLayoutRenderer.cs,GetVersion,The length of the statement  "                    return assembly?.GetFirstCustomAttribute<System.Reflection.AssemblyInformationalVersionAttribute>()?.InformationalVersion; " is 122.
Long Statement,NLog.LayoutRenderers,ProcessNameLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\ProcessNameLayoutRenderer.cs,Append,The length of the statement  "            var output = FullName ? ProcessIDHelper.Instance.CurrentProcessFilePath : ProcessIDHelper.Instance.CurrentProcessBaseName; " is 122.
Long Statement,NLog.LayoutRenderers,CallSiteLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\CallSite\CallSiteLayoutRenderer.cs,Append,The length of the statement  "                        string className = logEvent.CallSiteInformation.GetCallerClassName(method' IncludeNamespace' CleanNamesOfAsyncContinuations' CleanNamesOfAnonymousDelegates); " is 157.
Long Statement,NLog.LayoutRenderers,CallSiteLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\CallSite\CallSiteLayoutRenderer.cs,Append,The length of the statement  "                        string methodName = logEvent.CallSiteInformation.GetCallerMethodName(method' false' CleanNamesOfAsyncContinuations' CleanNamesOfAnonymousDelegates); " is 148.
Long Statement,NLog.LayoutRenderers,GdcLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Contexts\GdcLayoutRenderer.cs,GetValue,The length of the statement  "            //don't use GlobalDiagnosticsContext.Get to ensure we are not locking the Factory (indirect by LogManager.Configuration). " is 121.
Long Statement,NLog.LayoutRenderers,MdcLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Contexts\MdcLayoutRenderer.cs,GetValue,The length of the statement  "            //don't use MappedDiagnosticsContext.Get to ensure we are not locking the Factory (indirect by LogManager.Configuration). " is 121.
Long Statement,NLog.LayoutRenderers,MdlcLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Contexts\MdlcLayoutRenderer.cs,GetValue,The length of the statement  "            //don't use MappedDiagnosticsLogicalContext.Get to ensure we are not locking the Factory (indirect by LogManager.Configuration). " is 128.
Long Statement,NLog.LayoutRenderers,NdlcTimingLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Contexts\NdlcTimingLayoutRenderer.cs,Append,The length of the statement  "            DateTime scopeBegin = CurrentScope ? NestedDiagnosticsLogicalContext.PeekTopScopeBeginTime() : NestedDiagnosticsLogicalContext.PeekBottomScopeBeginTime(); " is 154.
Long Statement,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\ProcessTimeLayoutRenderer.cs,WritetTimestamp,The length of the statement  "                        //don't write negative times. This is probably an accuracy problem (accuracy is by default 16ms' see https://github.com/NLog/NLog/wiki/Time-Source) " is 147.
Long Statement,NLog.LayoutRenderers,BaseDirLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Directories\BaseDirLayoutRenderer.cs,GetFixedTempBaseDir,The length of the statement  "                if (!string.IsNullOrEmpty(tempDir) && Path.GetFullPath(baseDir).StartsWith(tempDir' StringComparison.OrdinalIgnoreCase)) " is 120.
Long Statement,NLog.LayoutRenderers,BaseDirLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Directories\BaseDirLayoutRenderer.cs,GetFixedTempBaseDir,The length of the statement  "                    if (!string.IsNullOrEmpty(processDir) && !Path.GetFullPath(processDir).StartsWith(tempDir' StringComparison.OrdinalIgnoreCase)) " is 127.
Long Statement,NLog.LayoutRenderers,ExceptionLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ExceptionLayoutRenderer.cs,AppendSerializeObject,The length of the statement  "            ConfigurationItemFactory.Default.ValueFormatter.FormatValue(ex' null' MessageTemplates.CaptureType.Serialize' null' sb); " is 120.
Long Statement,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,LookupIpAddress,The length of the statement  "                        if (CheckOptimalNetworkScore(networkAddress' networkScore + unicastScore' ref currentNetworkScore' ref currentIpAddress)) " is 121.
Long Statement,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,CalculateIpAddressScore,The length of the statement  "            if (ipAddress.AddressFamily != AddressFamily.InterNetwork && ipAddress.AddressFamily != AddressFamily.InterNetworkV6 && ipAddress.AddressFamily != _addressFamily) " is 162.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,Append,The length of the statement  "                xtw.WriteAttributeString("timestamp"' Convert.ToString((long)(logEvent.TimeStamp.ToUniversalTime() - log4jDateBase).TotalMilliseconds' CultureInfo.InvariantCulture)); " is 166.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,AppendCallSite,The length of the statement  "                xtw.WriteAttributeString("line"' logEvent.CallSiteInformation.GetCallerLineNumber(0).ToString(CultureInfo.InvariantCulture)); " is 125.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,AppendCallSite,The length of the statement  "                xtw.WriteElementSafeString("nlog"' "eventSequenceNumber"' dummyNLogNamespace' logEvent.SequenceID.ToString(CultureInfo.InvariantCulture)); " is 138.
Long Statement,NLog.LayoutRenderers,PerformanceCounterLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Machine\PerformanceCounterLayoutRenderer.cs,LookupPerformanceCounter,The length of the statement  "            if (perfCounterCached != null && perfCounterCached.MachineName == machineName && perfCounterCached.InstanceName == instanceName) " is 128.
Long Statement,NLog.LayoutRenderers,PerformanceCounterCached,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Machine\PerformanceCounterLayoutRenderer.cs,GetValue,The length of the statement  "                        // The recommended delay time between calls to the NextSample method is one second' to allow the counter to perform the next incremental read. " is 142.
Long Statement,NLog.LayoutRenderers,MessageLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\MessageLayoutRenderer.cs,Append,The length of the statement  "            bool exceptionOnly = logEvent.Exception != null && WithException && logEvent.Parameters?.Length == 1 && ReferenceEquals(logEvent.Parameters[0]' logEvent.Exception) && logEvent.Message == "{0}"; " is 193.
Long Statement,NLog.LayoutRenderers,MessageLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\MessageLayoutRenderer.cs,Append,The length of the statement  "                    primaryException = aggregateException.InnerExceptions.Count == 1 ? aggregateException.InnerExceptions[0] : aggregateException; " is 126.
Long Statement,NLog.LayoutRenderers,VariableLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\VariableLayoutRenderer.cs,InitializeLayoutRenderer,The length of the statement  "                        InternalLogger.Warn("${{var={0}}} should be declared as <variable name=\"var_{0}\" value=\"...\" /> and used like this ${{var_{0}}}. Because of layout isn't thread safe. Layout={1}"' Name' layout); " is 197.
Long Statement,NLog.LayoutRenderers,VariableLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\VariableLayoutRenderer.cs,InitializeLayoutRenderer,The length of the statement  "                        InternalLogger.Warn("${{var={0}}} is not thread safe. This could lead to unexpected results when two targets use the same layout"' Name); " is 137.
Long Statement,NLog.LayoutRenderers.Wrappers,CachedLayoutRendererWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Wrappers\CachedLayoutRendererWrapper.cs,InvalidateCachedValue,The length of the statement  "            if (_cachedValue == null || _renderedCacheKey != newCacheKey || (_cachedValueTimeout.HasValue && logEvent.TimeStamp > _cachedValueExpires)) " is 139.
Long Statement,NLog.LayoutRenderers.Wrappers,UrlEncodeLayoutRendererWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Wrappers\Encodings\UrlEncodeLayoutRendererWrapper.cs,Transform,The length of the statement  "                UrlHelper.EscapeEncodingOptions encodingOptions = UrlHelper.GetUriStringEncodingFlags(EscapeDataNLogLegacy' SpaceAsPlus' EscapeDataRfc3986); " is 140.
Long Statement,NLog.Layouts,CsvLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\CSV\CsvLayout.cs,RenderHeader,The length of the statement  "                var columnLayout = new SimpleLayout(new LayoutRenderers.LayoutRenderer[] { new LayoutRenderers.LiteralLayoutRenderer(col.Name) }' col.Name' ConfigurationItemFactory.Default); " is 174.
Long Statement,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,RenderJsonFormattedMessage,The length of the statement  "                    AppendJsonPropertyValue(key' propertyValue' null' null' MessageTemplates.CaptureType.Unknown' sb' sb.Length == orgLength); " is 122.
Long Statement,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,RenderJsonFormattedMessage,The length of the statement  "                    AppendJsonPropertyValue(key' propertyValue' null' null' MessageTemplates.CaptureType.Unknown' sb' sb.Length == orgLength); " is 122.
Long Statement,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,RenderJsonFormattedMessage,The length of the statement  "                    AppendJsonPropertyValue(key' propertyValue' null' null' MessageTemplates.CaptureType.Unknown' sb' sb.Length == orgLength); " is 122.
Long Statement,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,RenderJsonFormattedMessage,The length of the statement  "                IEnumerable<MessageTemplates.MessageTemplateParameter> propertiesList = logEvent.CreateOrUpdatePropertiesInternal(true); " is 120.
Long Statement,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,RenderJsonFormattedMessage,The length of the statement  "                    AppendJsonPropertyValue(prop.Name' prop.Value' prop.Format' logEvent.FormatProvider' prop.CaptureType' sb' sb.Length == orgLength); " is 131.
Long Statement,NLog.Layouts,Layout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\Layout.cs,PerformObjectScanning,The length of the statement  "            StackTraceUsage = objectGraphScannerList.OfType<IUsesStackTrace>().DefaultIfEmpty().Max(item => item?.StackTraceUsage ?? StackTraceUsage.None); " is 143.
Long Statement,NLog.Layouts,SimpleLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\SimpleLayout.cs,TryGetRawValue,The length of the statement  "                        InternalLogger.Warn(exception' "Exception in TryGetRawValue using '{0}.TryGetRawValue()'"' _rawValueRenderer?.GetType()); " is 121.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,InitializeLayout,The length of the statement  "                        Common.InternalLogger.Warn("XmlElement(ElementName={0}): Contains duplicate attribute name: {1} (Invalid xml)"' ElementNameInternal' attribute.Name); " is 149.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendLogEventProperties,The length of the statement  "            IEnumerable<MessageTemplates.MessageTemplateParameter> propertiesList = logEventInfo.CreateOrUpdatePropertiesInternal(true); " is 124.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyObjectValue,The length of the statement  "                        using (new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(propertyValue' ref objectsInPath' false' _referenceEqualsComparer)) " is 136.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyObjectValue,The length of the statement  "                            AppendXmlObjectPropertyValues(propName' ref propertyValues' sb' orgLength' ref objectsInPath' nextDepth' ignorePropertiesElementName); " is 134.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyObjectValue,The length of the statement  "                    using (new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(propertyValue' ref objectsInPath' false' _referenceEqualsComparer)) " is 136.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlPropertyObjectValue,The length of the statement  "                        AppendXmlObjectPropertyValues(propName' ref propertyValues' sb' orgLength' ref objectsInPath' nextDepth' ignorePropertiesElementName); " is 134.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,StartCollectionScope,The length of the statement  "            return new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(value' ref objectsInPath' true' _referenceEqualsComparer); " is 127.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlDictionaryObject,The length of the statement  "            string propNameElement = AppendXmlPropertyValue(propName' string.Empty' sb' orgLength' true' ignorePropertiesElementName); " is 122.
Long Statement,NLog.Layouts,XmlElementBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\XML\XmlElementBase.cs,AppendXmlObjectPropertyValues,The length of the statement  "                string propNameElement = AppendXmlPropertyValue(propName' string.Empty' sb' orgLength' true' ignorePropertiesElementName); " is 122.
Long Statement,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParseHole,The length of the statement  "            int literalSkip = _position - start + (type == CaptureType.Normal ? 1 : 2);     // Account for skipped '{'' '{$' or '{@' " is 120.
Long Statement,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,SkipUntil,The length of the statement  "                throw new TemplateParserException($"Reached end of template while expecting one of {formattedChars}."' _position' _template); " is 125.
Long Statement,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,Render,The length of the statement  "                if (holeIndex == 0 && !forceTemplateRenderer && templateEnumerator.Current.MaybePositionalTemplate && sb.Length == originalLength) " is 130.
Long Statement,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,Render,The length of the statement  "                        messageTemplateParameters[holeIndex++] = new MessageTemplateParameter(hole.Name' holeParameter' hole.Format' hole.CaptureType); " is 127.
Long Statement,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,FormatObject,The length of the statement  "                return SerializeWithoutCyclicLoop(collection' format' formatProvider' builder' default(SingleItemOptimizedHashSet<object>)' 0); " is 127.
Long Statement,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeWithoutCyclicLoop,The length of the statement  "                using (new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(dictionary' ref objectsInPath' true' _referenceEqualsComparer)) " is 132.
Long Statement,NLog.MessageTemplates,ValueFormatter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\ValueFormatter.cs,SerializeWithoutCyclicLoop,The length of the statement  "            using (new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(collection' ref objectsInPath' true' _referenceEqualsComparer)) " is 132.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,InitializeTarget,The length of the statement  "                _requestQueue = ForceLockingQueue ? (AsyncRequestQueueBase)new AsyncRequestQueue(QueueLimit' OverflowAction) : new ConcurrentRequestQueue(QueueLimit' OverflowAction); " is 166.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,WriteAsyncTask,The length of the statement  "                // Should never come here. Only here if someone by mistake configured BatchSize > 1 for target that only handles single LogEventInfo " is 132.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,WriteAsyncTask,The length of the statement  "                        taskChain = taskChain.ContinueWith(t => WriteAsyncTask(logEvent' cancellationToken)' cancellationToken' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler).Unwrap(); " is 174.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,RetryFailedAsyncTask,The length of the statement  "            retryDelay = TimeSpan.FromMilliseconds(RetryDelayMilliseconds * (RetryCount - retryCountRemaining) * 2 + RetryDelayMilliseconds); " is 129.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,WriteAsyncTaskWithRetry,The length of the statement  "                            InternalLogger.Warn(actualException' "{0}: Write operation failed. {1} attempts left. Sleep {2} ms"' Name' retryCount' retryDelay.TotalMilliseconds); " is 149.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskCreation,The length of the statement  "                reusableLogEvents = Interlocked.CompareExchange(ref _reusableLogEvents' null' _reusableLogEvents) ?? System.Tuple.Create(new List<LogEventInfo>()' new List<AsyncContinuation>()); " is 178.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,StartWriteAsyncTask,The length of the statement  "                return Task.Factory.StartNew(e => throw (Exception)e' new AggregateException(ex)' _cancelTokenSource.Token' TaskCreationOptions.None' TaskScheduler); " is 149.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskCompletion,The length of the statement  "                            InternalLogger.Warn(actualException' "{0}: WriteAsyncTask failed on completion. Sleep {1} ms"' Name' retryDelay.TotalMilliseconds); " is 131.
Long Statement,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskTimeout,The length of the statement  "                        RetryFailedAsyncTask(actualException ?? new TimeoutException("WriteAsyncTask had timeout")' CancellationToken.None' 0' out var retryDelay); " is 139.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,InitializeTarget,The length of the statement  "                    InternalLogger.Info("ColoredConsole(Name={0}): Console detected as turned off. Disable DetectConsoleAvailable to skip detection. Reason: {1}"' Name' reason); " is 157.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,InitializeTarget,The length of the statement  "                        InternalLogger.Info("ColoredConsole(Name={0}): Console output is redirected so no colors. Disable DetectOutputRedirected to skip detection."' Name); " is 148.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,WriteToOutput,The length of the statement  "            catch (Exception ex) when (ex is OverflowException || ex is IndexOutOfRangeException || ex is ArgumentOutOfRangeException) " is 122.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,WriteToOutput,The length of the statement  "                                        "Logging to the console will be paused. Enable by reloading the config or re-initialize the targets"' Name' ex.GetType()); " is 122.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,WriteToOutputWithColor,The length of the statement  "                newForegroundColor = matchingRule.ForegroundColor != ConsoleOutputColor.NoChange ? (ConsoleColor)matchingRule.ForegroundColor : default(ConsoleColor?); " is 151.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,WriteToOutputWithColor,The length of the statement  "                newBackgroundColor = matchingRule.BackgroundColor != ConsoleOutputColor.NoChange ? (ConsoleColor)matchingRule.BackgroundColor : default(ConsoleColor?); " is 151.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,WriteToOutputWithPrinter,The length of the statement  "                        ColorizeEscapeSequences(_consolePrinter' consoleWriter' colorMessage' oldForegroundColor' oldBackgroundColor' rowForegroundColor' rowBackgroundColor); " is 150.
Long Statement,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The length of the statement  "                            if ((oldColorConfig.Key.HasValue && !newColorConfig.Key.HasValue) || (oldColorConfig.Value.HasValue && !newColorConfig.Value.HasValue)) " is 135.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,InitializeTarget,The length of the statement  "                    InternalLogger.Info("Console(Name={0}): Console has been detected as turned off. Disable DetectConsoleAvailable to skip detection. Reason: {1}"' Name' reason); " is 159.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,WriteBufferToOutput,The length of the statement  "                RenderLogEventToWriteBuffer(output' layout' logEvent' targetBuilder.Result' targetBuffer.Result' ref targetBufferPosition); " is 123.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,WriteBufferToOutput,The length of the statement  "                        RenderLogEventToWriteBuffer(output' Layout' logEvents[i].LogEvent' targetBuilder.Result' targetBuffer.Result' ref targetBufferPosition); " is 136.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,WriteLineToOutput,The length of the statement  "            catch (Exception ex) when (ex is OverflowException || ex is IndexOutOfRangeException || ex is ArgumentOutOfRangeException) " is 122.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,WriteLineToOutput,The length of the statement  "                                        "Logging to the console will be paused. Enable by reloading the config or re-initialize the targets"' Name' ex.GetType()); " is 122.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,WriteBufferToOutput,The length of the statement  "            catch (Exception ex) when (ex is OverflowException || ex is IndexOutOfRangeException || ex is ArgumentOutOfRangeException) " is 122.
Long Statement,NLog.Targets,ConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ConsoleTarget.cs,WriteBufferToOutput,The length of the statement  "                                        "Logging to the console will be paused. Enable by reloading the config or re-initialize the targets"' Name' ex.GetType()); " is 122.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,InitializeTarget,The length of the statement  "                    throw new NLogConfigurationException($"Connection string '{ConnectionStringName}' is not declared in <connectionStrings /> section."); " is 134.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,InitializeTarget,The length of the statement  "                    InternalLogger.Error(ex' "DatabaseTarget(Name={0}): Failed to create ConnectionType from DBProvider={1}"' Name' DBProvider); " is 124.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,InitConnectionString,The length of the statement  "                    InternalLogger.Warn(ex' "DatabaseTarget(Name={0}): DbConnectionStringBuilder failed to parse '{1}' ConnectionString"' Name' ConnectionStringName); " is 146.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,InitProviderFactory,The length of the statement  "                InternalLogger.Error(ex' "DatabaseTarget(Name={0}): DbProviderFactories failed to get factory from ProviderName={1}"' Name' providerName); " is 138.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,CreateDbCommandWithParameters,The length of the statement  "                InternalLogger.Trace("  DatabaseTarget: Parameter: '{0}' = '{1}' ({2})"' dbParameter.ParameterName' dbParameter.Value' dbParameter.DbType); " is 139.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,RunInstallCommands,The length of the statement  "                    installationContext.Trace("DatabaseTarget(Name={0}) - Executing {1} '{2}'"' Name' commandInfo.CommandType' commandText); " is 120.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,RunInstallCommands,The length of the statement  "                    using (IDbCommand command = CreateDbCommandWithParameters(logEvent' commandInfo.CommandType' commandText' commandInfo.Parameters)) " is 130.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,CreateDatabaseParameter,The length of the statement  "                    InternalLogger.Warn("  DatabaseTarget: Parameter: '{0}' - Failed to assign DbType={1}"' parameterInfo.Name' parameterInfo.DbType); " is 130.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,CreateDatabaseParameter,The length of the statement  "                InternalLogger.Error(ex' "  DatabaseTarget: Parameter: '{0}' - Failed to assign DbType={1}"' parameterInfo.Name' parameterInfo.DbType); " is 135.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,GetDatabaseParameterValue,The length of the statement  "                InternalLogger.Trace("  DatabaseTarget: Attempt to convert layout value for '{0}' into {1}"' parameterInfo.Name' dbParameterType?.Name); " is 136.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,GetDatabaseParameterValue,The length of the statement  "                return PropertyTypeConverter.Convert(parameterValue' dbParameterType' parameterInfo.Format' dbParameterCulture) ?? DBNull.Value; " is 128.
Long Statement,NLog.Targets,DatabaseTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseTarget.cs,GetDatabaseParameterValue,The length of the statement  "                InternalLogger.Warn(ex' "  DatabaseTarget: Failed to convert layout value for '{0}' into {1}"' parameterInfo.Name' dbParameterType?.Name); " is 138.
Long Statement,NLog.Targets,DebuggerTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DebuggerTarget.cs,InitializeTarget,The length of the statement  "                InternalLogger.Debug("Debugger(Name={0}): System.Diagnostics.Debugger.IsLogging()==false. Output has been disabled."' Name); " is 124.
Long Statement,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObject,The length of the statement  "                if (objTypeCode != TypeCode.Object && objTypeCode != TypeCode.Char && StringHelpers.IsNullOrWhiteSpace(options.Format) && options.FormatProvider == null) " is 153.
Long Statement,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObjectWithReflection,The length of the statement  "                        using (new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(value' ref objectsInPath' false' _referenceEqualsComparer)) " is 128.
Long Statement,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,StartCollectionScope,The length of the statement  "            return new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(value' ref objectsInPath' true' _referenceEqualsComparer); " is 127.
Long Statement,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObjectWithProperties,The length of the statement  "                    using (new SingleItemOptimizedHashSet<object>.SingleItemScopedInsert(value' ref objectsInPath' false' _referenceEqualsComparer)) " is 128.
Long Statement,NLog.Targets,EventLogTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\EventLogTarget.cs,Uninstall,The length of the statement  "                InternalLogger.Debug("EventLogTarget(Name={0}): Skipping removing of event source because it contains layout renderers"' Name); " is 127.
Long Statement,NLog.Targets,EventLogTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\EventLogTarget.cs,IsInstalled,The length of the statement  "            InternalLogger.Debug("EventLogTarget(Name={0}): Unclear if event source exists because it contains layout renderers"' Name); " is 124.
Long Statement,NLog.Targets,EventLogTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\EventLogTarget.cs,CreateEventSourceIfNeeded,The length of the statement  "                InternalLogger.Debug("EventLogTarget(Name={0}): Skipping creation of event source because it contains layout renderers"' Name); " is 127.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetFileArchiveHelper,The length of the statement  "            return _fileArchiveHelper ?? (_fileArchiveHelper = FileArchiveModeFactory.CreateArchiveStyle(archiveFilePattern' ArchiveNumbering' GetArchiveDateFormatString(ArchiveDateFormat)' ArchiveFileName != null' MaxArchiveFiles)); " is 221.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,RefreshArchiveFilePatternToWatch,The length of the statement  "                bool mustWatchActiveFile = KeepFileOpen && EnableFileDelete && !NetworkWrites && !ReplaceFileContentsOnEachWrite && !EnableFileDeleteSimpleMonitor; " is 147.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,RefreshArchiveFilePatternToWatch,The length of the statement  "                    string fileNameMask = fileArchiveStyle != null ? _fileArchiveHelper.GenerateFileNameMask(fileNamePattern) : string.Empty; " is 121.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,RefreshArchiveFilePatternToWatch,The length of the statement  "                    string directoryMask = !string.IsNullOrEmpty(fileNameMask) ? Path.Combine(Path.GetDirectoryName(fileNamePattern)' fileNameMask) : string.Empty; " is 143.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,CleanupInitializedFiles,The length of the statement  "                InternalLogger.Trace("FileTarget(Name={0}): Cleanup Initialized Files with cleanupThreshold {1}"' Name' cleanupThreshold); " is 122.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The length of the statement  "                int openFileAutoTimeoutSecs = (OpenFileCacheTimeout > 0 && OpenFileFlushTimeout > 0) ? Math.Min(OpenFileCacheTimeout' OpenFileFlushTimeout) : Math.Max(OpenFileCacheTimeout' OpenFileFlushTimeout); " is 195.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,Write,The length of the statement  "                    ProcessLogEvent(logEvent' logFileName' new ArraySegment<byte>(targetStream.Result.GetBuffer()' 0' (int)targetStream.Result.Length)); " is 132.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,Write,The length of the statement  "            using (var reusableStream = (OptimizeBufferReuse && logEvents.Count <= 1000) ? _reusableAsyncFileWriteStream.Allocate() : _reusableAsyncFileWriteStream.None) " is 157.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,Write,The length of the statement  "                        InternalLogger.Warn("FileTarget(Name={0}): FileName Layout returned empty string. The path is not of a legal form."' Name); " is 123.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,ProcessLogEvent,The length of the statement  "            bool archiveOccurred = TryArchiveFile(fileName' logEvent' bytesToWrite.Count' previousLogEventTimestamp' initializedNewFile); " is 125.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,ArchiveFileMove,The length of the statement  "                InternalLogger.Warn(ex' "FileTarget(Name={0}): Archiving failed. Checking for retry move of {1} to {2}."' Name' fileName' archiveFileName); " is 139.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,DeleteOldArchiveFile,The length of the statement  "                InternalLogger.Debug(exception' "FileTarget(Name={0}): Failed to delete old log file '{1}' as directory is missing."' Name' fileName); " is 134.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveDate,The length of the statement  "            InternalLogger.Trace("FileTarget(Name={0}): Calculating archive date. File-LastModifiedUtc: {1}; Previous LogEvent-TimeStamp: {2}"' Name' fileLastModifiedUtc' previousLogEventTimestamp); " is 186.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveDate,The length of the statement  "                    InternalLogger.Trace("FileTarget(Name={0}): Using previous LogEvent-TimeStamp {1}' because more recent than File-LastModified {2}"' Name' previousLogEventTimestamp' lastWriteTimeSource); " is 186.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveDate,The length of the statement  "                    InternalLogger.Trace("FileTarget(Name={0}): Using previous LogEvent-TimeStamp {1}' because archive period is overlapping with File-LastModified {2}"' Name' previousLogEventTimestamp' lastWriteTimeSource); " is 204.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveDate,The length of the statement  "                    InternalLogger.Trace("FileTarget(Name={0}): Using previous LogEvent-TimeStamp {1}' because AutoFlush=false affects File-LastModified {2}"' Name' previousLogEventTimestamp' lastWriteTimeSource); " is 193.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,PreviousLogOverlappedPeriod,The length of the statement  "            string periodAfterPreviousLogEventTimeString = periodAfterPreviousLogEventTime.Value.ToString(formatString' CultureInfo.InvariantCulture); " is 138.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,DoAutoArchive,The length of the statement  "            var archiveFileName = GenerateArchiveFileNameAfterCleanup(fileName' fileInfo' archiveFilePattern' archiveDate' initializedNewFile); " is 131.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GenerateArchiveFileNameAfterCleanup,The length of the statement  "                if (initializedNewFile && string.Equals(Path.GetDirectoryName(archiveFilePattern)' fileInfo.DirectoryName' StringComparison.OrdinalIgnoreCase)) " is 143.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GenerateArchiveFileNameAfterCleanup,The length of the statement  "            var archiveFileName = archiveDate.HasValue ? fileArchiveStyle.GenerateArchiveFileName(archiveFilePattern' archiveDate.Value' existingArchiveFiles) : null; " is 154.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GenerateArchiveFileNameAfterCleanup,The length of the statement  "            if (string.Equals(Path.GetDirectoryName(archiveFileName.FileName)' fileInfo.DirectoryName' StringComparison.OrdinalIgnoreCase)) " is 127.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GenerateArchiveFileNameAfterCleanup,The length of the statement  "            var cleanupArchiveFiles = fileArchiveStyle.CheckArchiveCleanup(archiveFilePattern' existingArchiveFiles' MaxArchiveFiles); " is 122.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,TryArchiveFile,The length of the statement  "                    if (!string.IsNullOrEmpty(_previousLogFileName) && _previousLogFileName != archiveFile && _previousLogFileName != fileName) " is 123.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveFileNameBasedOnTime,The length of the statement  "            DateTime? fallbackTimeSourceLinux = (previousLogEventTimestamp != DateTime.MinValue && IsSimpleKeepFileOpen) ? previousLogEventTimestamp : (DateTime?)null; " is 155.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveFileNameBasedOnTime,The length of the statement  "                if (TruncateArchiveTime(previousLogEventTimestamp' FileArchivePeriod.Minute) < TruncateArchiveTime(creationTimeSource.Value' FileArchivePeriod.Minute) && PlatformDetector.IsUnix) " is 178.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveFileNameBasedOnTime,The length of the statement  "                        InternalLogger.Debug("FileTarget(Name={0}): Adjusted file creation time from {1} to {2}. Linux FileSystem probably don't support file birthtime."' Name' creationTimeSource' previousLogEventTimestamp); " is 200.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetArchiveFileNameBasedOnTime,The length of the statement  "                        InternalLogger.Debug("FileTarget(Name={0}): File creation time {1} newer than previous file write time {2}. Linux FileSystem probably don't support file birthtime' unless multiple applications are writing to the same file. Configure FileTarget.KeepFileOpen=true AND FileTarget.ConcurrentWrites=false' so NLog can fix this."' Name' creationTimeSource' previousLogEventTimestamp); " is 378.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,InitializeFile,The length of the statement  "            if (_initializedFiles.Count != 0 && _previousLogEventTimestamp.HasValue && _previousLogFileName == fileName && logEvent.TimeStamp == _previousLogEventTimestamp.Value) " is 166.
Long Statement,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,ProcessOnStartup,The length of the statement  "                    var cleanupArchiveFiles = fileArchiveStyle.CheckArchiveCleanup(archiveFilePattern' existingArchiveFiles' MaxArchiveFiles); " is 122.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,ProcessSingleMailMessage,The length of the statement  "                            InternalLogger.Debug("MailTarget(Name={0}): Sending mail to {1} using {2}:{3} (ssl=true)"' Name' msg.To' client.Host' client.Port); " is 131.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,ProcessSingleMailMessage,The length of the statement  "                            InternalLogger.Debug("MailTarget(Name={0}): Sending mail to {1} using {2}:{3} (ssl=false)"' Name' msg.To' client.Host' client.Port); " is 132.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,ConfigureMailClient,The length of the statement  "                    InternalLogger.Trace("MailTarget(Name={0}):   Using basic authentication: Username='{1}' Password='{2}'"' Name' username' new string('*'' password.Length)); " is 156.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,CheckRequiredParameters,The length of the statement  "                throw new NLogConfigurationException("The MailTarget's '{0}' properties are not set - but needed because useSystemNetMailSettings=false and DeliveryMethod=Network. The email message will not be sent."' "SmtpServer"); " is 216.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,CheckRequiredParameters,The length of the statement  "            if (!UseSystemNetMailSettings && string.IsNullOrEmpty(PickupDirectoryLocation) && DeliveryMethod == SmtpDeliveryMethod.SpecifiedPickupDirectory) " is 144.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,CheckRequiredParameters,The length of the statement  "                throw new NLogConfigurationException("The MailTarget's '{0}' properties are not set - but needed because useSystemNetMailSettings=false and DeliveryMethod=SpecifiedPickupDirectory. The email message will not be sent."' "PickupDirectoryLocation"); " is 246.
Long Statement,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,CreateMailMessage,The length of the statement  "                    InternalLogger.Warn("MailTarget(Name={0}): Could not convert '{1}' to MailPriority' valid values are Low' Normal and High. Using normal priority as fallback."' Name' renderedPriority); " is 184.
Long Statement,NLog.Targets,MethodCallTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MethodCallTarget.cs,InitializeTarget,The length of the statement  "                        throw new NLogConfigurationException($"MethodCallTarget: MethodName={MethodName} not found in ClassName={ClassName} - it should be static"); " is 140.
Long Statement,NLog.Targets,MethodCallTargetBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MethodCallTargetBase.cs,Write,The length of the statement  "                    Common.InternalLogger.Warn(ex' "{0}(Name={1}): Failed to get parameter value {2}"' GetType()' Name' Parameters[i].Name); " is 120.
Long Statement,NLog.Targets,NetworkTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\NetworkTarget.cs,ChunkedSend,The length of the statement  "                            continuation(new OverflowException($"Attempted to send a message larger than MaxMessageSize ({MaxMessageSize}). Actual size was: {buffer.Length}. Adjust OnOverflow and MaxMessageSize parameters accordingly.")); " is 210.
Long Statement,NLog.Targets,PerformanceCounterTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Install,The length of the statement  "            var countersByCategory = LoggingConfiguration.AllTargets.OfType<PerformanceCounterTarget>().BucketSort(c => c.CategoryName); " is 124.
Long Statement,NLog.Targets,PerformanceCounterTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Install,The length of the statement  "                CounterCreationDataCollection ccds = GetCounterCreationDataCollection(countersByCategory[CategoryName]' out categoryType); " is 122.
Long Statement,NLog.Targets,PerformanceCounterTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Install,The length of the statement  "                installationContext.Debug("Creating category '{0}' with {1} counter(s) (Type: {2})"' categoryName' ccds.Count' categoryType); " is 125.
Long Statement,NLog.Targets,PerformanceCounterTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Write,The length of the statement  "                    InternalLogger.Error("PerfCounterTarget(Name={0}): Error incrementing PerfCounter {1}. IncrementValue must be an integer but was <{2}>"' Name' CounterName' incrementValueString); " is 178.
Long Statement,NLog.Targets,PerformanceCounterTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,EnsureInitialized,The length of the statement  "                    InternalLogger.Error(exception' "PerfCounterTarget(Name={0}): Cannot open performance counter {1}/{2}/{3}."' Name' CategoryName' CounterName' InstanceName); " is 156.
Long Statement,NLog.Targets,Target,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Target.cs,PrecalculateVolatileLayoutsConcurrent,The length of the statement  "                System.Threading.Interlocked.CompareExchange(ref _precalculateStringBuilderPool' new StringBuilderPool(Environment.ProcessorCount * 2)' null); " is 142.
Long Statement,NLog.Targets,TargetWithContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\TargetWithContext.cs,GetAllProperties,The length of the statement  "                combinedProperties = combinedProperties ?? CreateNewDictionary(logEvent.Properties.Count + (ContextProperties?.Count ?? 0)); " is 124.
Long Statement,NLog.Targets,TargetWithContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\TargetWithContext.cs,CaptureContextProperties,The length of the statement  "                    Common.InternalLogger.Warn(ex' "{0}(Name={1}): Failed to add context property {2}"' GetType()' Name' contextProperty.Name); " is 123.
Long Statement,NLog.Targets,TargetWithContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\TargetWithContext.cs,SerializeItemValue,The length of the statement  "            if (value is string || Convert.GetTypeCode(value) != TypeCode.Object || value is Guid || value is TimeSpan || value is DateTimeOffset) " is 134.
Long Statement,NLog.Targets,WebServiceTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\WebServiceTarget.cs,DoInvoke,The length of the statement  "                    _activeProtocol = new KeyValuePair<WebServiceProtocol' HttpPostFormatterBase>(Protocol' _postFormatterFactories[Protocol](this)); " is 129.
Long Statement,NLog.Targets,WebServiceTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\WebServiceTarget.cs,BuildWebServiceUrl,The length of the statement  "                UrlHelper.EscapeEncodingOptions encodingOptions = UrlHelper.GetUriStringEncodingFlags(EscapeDataNLogLegacy' false' EscapeDataRfc3986); " is 134.
Long Statement,NLog.Targets.FileArchiveModes,FileNameTemplate,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeBase.cs,ReplacePattern,The length of the statement  "                return !FoundPattern || string.IsNullOrEmpty(replacementValue) ? Template : Template.Substring(0' BeginAt) + replacementValue + Template.Substring(EndAt); " is 154.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDate,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDate.cs,GenerateArchiveFileInfo,The length of the statement  "                if (DateTime.TryParseExact(datePart' _archiveDateFormat' CultureInfo.InvariantCulture' DateTimeStyles.None' out fileDate)) " is 122.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDate,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDate.cs,GenerateArchiveFileName,The length of the statement  "            archiveFilePath = Path.Combine(dirName' archiveFileNameTemplate.ReplacePattern("*").Replace("*"' archiveDate.ToString(_archiveDateFormat))); " is 140.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDateAndSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDateAndSequence.cs,GenerateArchiveFileInfo,The length of the statement  "            if (!TryParseDateAndSequence(archiveFileNameWithoutPath' _archiveDateFormat' fileTemplate' out var date' out var sequence)) " is 123.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateArchiveFileInfo,The length of the statement  "            InternalLogger.Trace("FileTarget: extracted sequenceNumber: {0} from file '{1}'"' sequenceNumber' archiveFile.FullName); " is 120.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateArchiveFileInfo,The length of the statement  "            var creationTimeUtc = FileCharacteristicsHelper.ValidateFileCreationTime(archiveFile' (f) => f.GetCreationTimeUtc()' (f) => f.GetLastWriteTimeUtc()).Value; " is 155.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateArchiveFileInfo,The length of the statement  "            return new DateAndSequenceArchive(archiveFile.FullName' creationTimeUtc' string.Empty' sequenceNumber > 0 ? sequenceNumber : 0); " is 128.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,ExtractArchiveNumberFromFileName,The length of the statement  "            string numberPart = previousToLastDotIdx == -1 ? archiveFileName.Substring(lastDotIdx + 1) : archiveFileName.Substring(previousToLastDotIdx + 1' lastDotIdx - previousToLastDotIdx - 1); " is 184.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateArchiveFileName,The length of the statement  "                    existingFileName = Path.GetFileNameWithoutExtension(Path.GetFileNameWithoutExtension(existingFileName)) + existingExtension; " is 124.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateArchiveFileName,The length of the statement  "                archiveFilePath = Path.Combine(Path.GetDirectoryName(archiveFilePath)' string.Concat(Path.GetFileNameWithoutExtension(initialFileName)' "."' nextSequenceNumber.ToString(CultureInfo.InvariantCulture)' Path.GetExtension(initialFileName))); " is 237.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicTemplate,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicTemplate.cs,CheckArchiveCleanup,The length of the statement  "            return _archiveHelper.CheckArchiveCleanup(CreateDynamicTemplate(archiveFilePath)' existingArchiveFiles' maxArchiveFiles); " is 121.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicTemplate,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicTemplate.cs,GenerateArchiveFileName,The length of the statement  "            return _archiveHelper.GenerateArchiveFileName(CreateDynamicTemplate(archiveFilePath)' archiveDate' existingArchiveFiles); " is 121.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeFactory.cs,CreateArchiveStyle,The length of the statement  "                    InternalLogger.Info("FileTarget: Pattern {{#}} is missing in ArchiveFileName `{0}` (Fallback to dynamic wildcard)"' archiveFilePath); " is 133.
Long Statement,NLog.Targets.FileArchiveModes,FileArchiveModeRolling,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeRolling.cs,GetExistingArchiveFiles,The length of the statement  "                existingArchiveFiles.Add(new DateAndSequenceArchive(existingFileInfo.FullName' DateTime.MinValue' string.Empty' archiveNumber)); " is 128.
Long Statement,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,InitializeTarget,The length of the statement  "                _requestQueue = ForceLockingQueue ? (AsyncRequestQueueBase)new AsyncRequestQueue(QueueLimit' OverflowAction) : new ConcurrentRequestQueue(QueueLimit' OverflowAction); " is 166.
Long Statement,NLog.Targets.Wrappers,FallbackGroupTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\FallbackGroupTarget.cs,Write,The length of the statement  "                                InternalLogger.Debug("FallbackGroup(Name={0}): Target '{1}' succeeded. Returning to the first one."' Name' Targets[targetToInvoke]); " is 132.
Long Statement,NLog.Targets.Wrappers,FallbackGroupTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\FallbackGroupTarget.cs,Write,The length of the statement  "                    InternalLogger.Warn(ex' "FallbackGroup(Name={0}): Target '{1}' failed. Proceeding to the next one."' Name' Targets[targetToInvoke]); " is 132.
Long Statement,NLog.Targets.Wrappers,LimitingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\LimitingTargetWrapper.cs,InitializeTarget,The length of the statement  "            InternalLogger.Trace("LimitingWrapper(Name={0}): Initialized with MessageLimit={1} and Interval={2}."' Name' MessageLimit' Interval); " is 133.
Long Statement,NLog.Targets.Wrappers,LimitingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\LimitingTargetWrapper.cs,Write,The length of the statement  "                InternalLogger.Trace("LimitingWrapper(Name={0}): Discarded event' because MessageLimit of '{1}' was reached."' Name' MessageLimit); " is 131.
Long Statement,NLog.Targets.Wrappers,RepeatingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\RepeatingTargetWrapper.cs,Write,The length of the statement  "            AsyncHelpers.Repeat(RepeatCount' logEvent.Continuation' cont => WrappedTarget.WriteAsyncLogEvent(logEvent.LogEvent.WithContinuation(cont))); " is 140.
Long Statement,NLog.Targets.Wrappers,RetryingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\RetryingTargetWrapper.cs,Write,The length of the statement  "                InternalLogger.Warn(ex' "RetryingWrapper(Name={0}): Error while writing to '{1}'. Try {2}/{3}"' Name' WrappedTarget' retryNumber' RetryCount); " is 142.
Long Statement,NLog.Targets.Wrappers,SplitGroupTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\SplitGroupTarget.cs,Write,The length of the statement  "            AsyncHelpers.ForEachItemSequentially(Targets' logEvent.Continuation' (t' cont) => t.WriteAsyncLogEvent(logEvent.LogEvent.WithContinuation(cont))); " is 146.
Complex Conditional,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,RemoveScopeWillClearContext,The conditional expression  "(immutableDict.Count == 1 && ReferenceEquals(_item2' null) && immutableDict.ContainsKey(_item1))                        || (immutableDict.Count == 2 && !ReferenceEquals(_item2' null) && ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && !_item1.Equals(_item2))                        || (immutableDict.Count == 3 && !ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && immutableDict.ContainsKey(_item3) && !_item1.Equals(_item2) && !_item1.Equals(_item3) && !_item2.Equals(_item3))"  is complex.
Complex Conditional,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,CreateOrUpdatePropertiesInternal,The conditional expression  "forceCreate || templateParameters?.Count > 0 || (templateParameters == null && HasMessageTemplateParameters)"  is complex.
Complex Conditional,NLog.Config,ConfigurationItemFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\ConfigurationItemFactory.cs,LoadNLogExtensionAssemblies,The conditional expression  "assembly.FullName.StartsWith("NLog.Extensions.Logging'"' StringComparison.OrdinalIgnoreCase)                    || assembly.FullName.StartsWith("NLog.Web'"' StringComparison.OrdinalIgnoreCase)                    || assembly.FullName.StartsWith("NLog.Web.AspNetCore'"' StringComparison.OrdinalIgnoreCase)                    || assembly.FullName.StartsWith("Microsoft.Extensions.Logging'"' StringComparison.OrdinalIgnoreCase)                    || assembly.FullName.StartsWith("Microsoft.Extensions.Logging.Abstractions'"' StringComparison.OrdinalIgnoreCase)                    || assembly.FullName.StartsWith("Microsoft.Extensions.Logging.Filter'"' StringComparison.OrdinalIgnoreCase)                    || assembly.FullName.StartsWith("Microsoft.Logging'"' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseRuleElement,The conditional expression  "string.IsNullOrEmpty(ruleName) && string.IsNullOrEmpty(namePattern) &&                  string.IsNullOrEmpty(writeTargets) && !final"  is complex.
Complex Conditional,NLog.Config,PropertyTypeConverter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\PropertyTypeConverter.cs,Convert,The conditional expression  "propertyType == null || propertyValue == null || propertyValue.GetType() == propertyType || propertyType == typeof(object)"  is complex.
Complex Conditional,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The conditional expression  "elementGeneration <= oldGeneration || (element.Value.Virgin && (i != 0 || elementGeneration < latestGeneration))"  is complex.
Complex Conditional,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,SetPropertyFromString,The conditional expression  "!(TryNLogSpecificConversion(propertyType' value' out newValue' configurationItemFactory)                      || TryGetEnumValue(propertyType' value' out newValue' true)                      || TrySpecialConversion(propertyType' value' out newValue)                      || TryImplicitConversion(propertyType' value' out newValue)                      || TryFlatListConversion(obj' propInfo' value' out newValue)                      || TryTypeConverterConversion(propertyType' value' out newValue))"  is complex.
Complex Conditional,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryFlatListConversion,The conditional expression  "!(TryGetEnumValue(propertyType' value' out newValue' false)                            || TrySpecialConversion(propertyType' value' out newValue)                            || TryImplicitConversion(propertyType' value' out newValue)                            || TryTypeConverterConversion(propertyType' value' out newValue))"  is complex.
Complex Conditional,NLog.Internal,PropertyHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Reflection\PropertyHelper.cs,TryCreateCollectionObject,The conditional expression  "isSet || typeDefinition == typeof(List<>) || typeDefinition == typeof(IList<>) || typeDefinition == typeof(IEnumerable<>)"  is complex.
Complex Conditional,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackFrameMethodName,The conditional expression  "cleanAsyncMoveNext && methodName == "MoveNext" && callerClassType?.DeclaringType != null && callerClassType.Name.StartsWith("<")"  is complex.
Complex Conditional,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackFrameMethodName,The conditional expression  "cleanAnonymousDelegates && (methodName.StartsWith("<") && methodName.Contains("__") && methodName.Contains(">"))"  is complex.
Complex Conditional,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackFrameMethodClassName,The conditional expression  "cleanAsyncMoveNext && method.Name == "MoveNext" && callerClassType?.DeclaringType != null && callerClassType.Name.StartsWith("<")"  is complex.
Complex Conditional,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetStackFrameMethodClassName,The conditional expression  "!includeNameSpace                  && callerClassType?.DeclaringType != null                  && callerClassType.IsNested                  && callerClassType.GetFirstCustomAttribute<CompilerGeneratedAttribute>() != null"  is complex.
Complex Conditional,NLog.Internal.FileAppenders,BaseMutexFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\BaseMutexFileAppender.cs,CreateArchiveMutex,The conditional expression  "ex is SecurityException || ex is UnauthorizedAccessException || ex is NotSupportedException || ex is NotImplementedException || ex is PlatformNotSupportedException"  is complex.
Complex Conditional,NLog.LayoutRenderers,PerformanceCounterLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Machine\PerformanceCounterLayoutRenderer.cs,LookupPerformanceCounter,The conditional expression  "(_machineName?.Text == null || _machineName.IsFixedText) && (_instance?.Text == null || _instance.IsFixedText)"  is complex.
Complex Conditional,NLog.LayoutRenderers.Wrappers,CachedLayoutRendererWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Wrappers\CachedLayoutRendererWrapper.cs,InvalidateCachedValue,The conditional expression  "_cachedValue == null || _renderedCacheKey != newCacheKey || (_cachedValueTimeout.HasValue && logEvent.TimeStamp > _cachedValueExpires)"  is complex.
Complex Conditional,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterName,The conditional expression  "(ch == '=' || ch == '}' || ch == ':') && nestLevel == 0"  is complex.
Complex Conditional,NLog.Layouts,SimpleLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\SimpleLayout.cs,Precalculate,The conditional expression  "success && value != null && (Convert.GetTypeCode(value) != TypeCode.Object || value.GetType().IsValueType())"  is complex.
Complex Conditional,NLog.MessageTemplates,TemplateRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateRenderer.cs,Render,The conditional expression  "holeIndex == 0 && !forceTemplateRenderer && templateEnumerator.Current.MaybePositionalTemplate && sb.Length == originalLength"  is complex.
Complex Conditional,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskStartNext,The conditional expression  "previousTask != null && !fullBatchCompleted && TaskDelayMilliseconds >= 50 && !_requestQueue.IsEmpty"  is complex.
Complex Conditional,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskTimeout,The conditional expression  "previousTask.Status != TaskStatus.Canceled &&                              previousTask.Status != TaskStatus.Faulted &&                              previousTask.Status != TaskStatus.RanToCompletion && !previousTask.Wait(100)"  is complex.
Complex Conditional,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The conditional expression  "(oldColorConfig.Key.HasValue && !newColorConfig.Key.HasValue) || (oldColorConfig.Value.HasValue && !newColorConfig.Value.HasValue)"  is complex.
Complex Conditional,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,SerializeObject,The conditional expression  "objTypeCode != TypeCode.Object && objTypeCode != TypeCode.Char && StringHelpers.IsNullOrWhiteSpace(options.Format) && options.FormatProvider == null"  is complex.
Complex Conditional,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The conditional expression  "(OpenFileCacheSize > 0 || EnableFileDelete) && (OpenFileCacheTimeout > 0 || OpenFileFlushTimeout > 0)"  is complex.
Complex Conditional,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,InitializeFile,The conditional expression  "_initializedFiles.Count != 0 && _previousLogEventTimestamp.HasValue && _previousLogFileName == fileName && logEvent.TimeStamp == _previousLogEventTimestamp.Value"  is complex.
Complex Conditional,NLog.Targets,TargetWithContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\TargetWithContext.cs,SerializeItemValue,The conditional expression  "value is string || Convert.GetTypeCode(value) != TypeCode.Object || value is Guid || value is TimeSpan || value is DateTimeOffset"  is complex.
Complex Conditional,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateFileNameTemplate,The conditional expression  "sb.Length > 3 && sb[sb.Length - 3] != '{' && sb[sb.Length - 2] != '#' && sb[sb.Length - 1] != '}'"  is complex.
Empty Catch Block,NLog.Internal.FileAppenders,MutexMultiProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\MutexMultiProcessFileAppender.cs,Write,The method has an empty catch block.
Empty Catch Block,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,NotifyTaskCompletion,The method has an empty catch block.
Empty Catch Block,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,TryArchiveFile,The method has an empty catch block.
Magic Number,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,ItemRemover,The following statement contains a magic number: _item3 = items[2].Key;
Magic Number,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,ItemRemover,The following statement contains a magic number: _itemArray = _itemArray ?? new string[itemCount - 3];
Magic Number,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,ItemRemover,The following statement contains a magic number: _itemArray[i - 3] = items[i].Key;
Magic Number,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,ItemRemover,The following statement contains a magic number: itemCount > 2
Magic Number,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,RemoveScopeWillClearContext,The following statement contains a magic number: (immutableDict.Count == 1 && ReferenceEquals(_item2' null) && immutableDict.ContainsKey(_item1))                        || (immutableDict.Count == 2 && !ReferenceEquals(_item2' null) && ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && !_item1.Equals(_item2))                        || (immutableDict.Count == 3 && !ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && immutableDict.ContainsKey(_item3) && !_item1.Equals(_item2) && !_item1.Equals(_item3) && !_item2.Equals(_item3))
Magic Number,NLog,ItemRemover,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Contexts\MappedDiagnosticsContext.cs,RemoveScopeWillClearContext,The following statement contains a magic number: (immutableDict.Count == 1 && ReferenceEquals(_item2' null) && immutableDict.ContainsKey(_item1))                        || (immutableDict.Count == 2 && !ReferenceEquals(_item2' null) && ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && !_item1.Equals(_item2))                        || (immutableDict.Count == 3 && !ReferenceEquals(_item3' null) && immutableDict.ContainsKey(_item1) && immutableDict.ContainsKey(_item2) && immutableDict.ContainsKey(_item3) && !_item1.Equals(_item2) && !_item1.Equals(_item3) && !_item2.Equals(_item3))
Magic Number,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,The following statement contains a magic number: parameters.Length > 5
Magic Number,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,IsLogEventMutableSafe,The following statement contains a magic number: properties.Count > 5
Magic Number,NLog,LogEventInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogEventInfo.cs,CanLogEventDeferMessageFormat,The following statement contains a magic number: _message?.Length < 256 && ReferenceEquals(MessageFormatter' LogMessageTemplateFormatter.DefaultAuto.MessageFormatter)
Magic Number,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,Close,The following statement contains a magic number: Monitor.TryEnter(_syncRoot' 500)
Magic Number,NLog,LogFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogFactory.cs,OnStopLogging,The following statement contains a magic number: Close(TimeSpan.FromMilliseconds(1500));
Magic Number,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal)              {                  case 0:                      return Trace;                  case 1:                      return Debug;                  case 2:                      return Info;                  case 3:                      return Warn;                  case 4:                      return Error;                  case 5:                      return Fatal;                  case 6:                      return Off;                    default:                      throw new ArgumentException("Invalid ordinal.");              }
Magic Number,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal)              {                  case 0:                      return Trace;                  case 1:                      return Debug;                  case 2:                      return Info;                  case 3:                      return Warn;                  case 4:                      return Error;                  case 5:                      return Fatal;                  case 6:                      return Off;                    default:                      throw new ArgumentException("Invalid ordinal.");              }
Magic Number,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal)              {                  case 0:                      return Trace;                  case 1:                      return Debug;                  case 2:                      return Info;                  case 3:                      return Warn;                  case 4:                      return Error;                  case 5:                      return Fatal;                  case 6:                      return Off;                    default:                      throw new ArgumentException("Invalid ordinal.");              }
Magic Number,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal)              {                  case 0:                      return Trace;                  case 1:                      return Debug;                  case 2:                      return Info;                  case 3:                      return Warn;                  case 4:                      return Error;                  case 5:                      return Fatal;                  case 6:                      return Off;                    default:                      throw new ArgumentException("Invalid ordinal.");              }
Magic Number,NLog,LogLevel,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal)              {                  case 0:                      return Trace;                  case 1:                      return Debug;                  case 2:                      return Info;                  case 3:                      return Warn;                  case 4:                      return Error;                  case 5:                      return Fatal;                  case 6:                      return Off;                    default:                      throw new ArgumentException("Invalid ordinal.");              }
Magic Number,NLog.Common,InternalLogger,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Common\InternalLogger-generated.cs,FormatMessage,The following statement contains a magic number: var builder = new StringBuilder(formattedMessage.Length + timeStampFormat.Length + (ex?.ToString().Length ?? 0) + 25);
Magic Number,NLog.Common,LogEventInfoBuffer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Common\LogEventInfoBuffer.cs,Append,The following statement contains a magic number: int newLength = _buffer.Length * 2;
Magic Number,NLog.Conditions,ConditionTokenizer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionTokenizer.cs,GetNextToken,The following statement contains a magic number: ch >= 32 && ch < 128
Magic Number,NLog.Conditions,ConditionTokenizer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionTokenizer.cs,GetNextToken,The following statement contains a magic number: ch >= 32 && ch < 128
Magic Number,NLog.Conditions,ConditionTokenizer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionTokenizer.cs,BuildCharIndexToTokenType,The following statement contains a magic number: var result = new ConditionTokenType[128];
Magic Number,NLog.Conditions,ConditionTokenizer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Conditions\Parsing\ConditionTokenizer.cs,BuildCharIndexToTokenType,The following statement contains a magic number: i < 128
Magic Number,NLog.Config,LoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfiguration.cs,RemoveTarget,The following statement contains a magic number: flushCompleted.WaitOne(TimeSpan.FromSeconds(15));
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,WhenRepeatedFilter,The following statement contains a magic number: TimeoutSeconds = 10;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,WhenRepeatedFilter,The following statement contains a magic number: MaxLength = 1000;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,WhenRepeatedFilter,The following statement contains a magic number: DefaultFilterCacheSize = 1000;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,WhenRepeatedFilter,The following statement contains a magic number: MaxFilterCacheSize = 50000;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,Check,The following statement contains a magic number: OptimizeBufferDefaultLength *= 2;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,CreateFilterInfo,The following statement contains a magic number: int aggressiveTimeoutSeconds = _repeatFilter.Count > MaxFilterCacheSize ? TimeoutSeconds * 2 / 3 : TimeoutSeconds;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,CreateFilterInfo,The following statement contains a magic number: int aggressiveTimeoutSeconds = _repeatFilter.Count > MaxFilterCacheSize ? TimeoutSeconds * 2 / 3 : TimeoutSeconds;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,CreateFilterInfo,The following statement contains a magic number: PruneFilterCache(logEvent' Math.Max(1' TimeoutSeconds / 2));
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,PruneFilterCache,The following statement contains a magic number: DefaultFilterCacheSize *= 2;
Magic Number,NLog.Filters,WhenRepeatedFilter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,PruneFilterCache,The following statement contains a magic number: _repeatFilter.Count * 2 > DefaultFilterCacheSize && DefaultFilterCacheSize < MaxFilterCacheSize
Magic Number,NLog.Filters,FilterInfo,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Filters\WhenRepeatedFilter.cs,IsObsolete,The following statement contains a magic number: return (logEventTime - LastFilterTime).TotalSeconds > timeoutSeconds && HasExpired(logEventTime' timeoutSeconds * 2);
Magic Number,NLog.Internal,PropertiesDictionary,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Collections\PropertiesDictionary.cs,VerifyUniqueMessageTemplateParametersFast,The following statement contains a magic number: parameterList.Count > 10
Magic Number,NLog.Internal,FileCharacteristicsHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Files\FileCharacteristicsHelper.cs,ValidateFileCreationTime,The following statement contains a magic number: finalFallback != null && (!fileCreationTime.HasValue || fileCreationTime.Value.Year < 1980)
Magic Number,NLog.Internal,FileCharacteristicsHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Files\FileCharacteristicsHelper.cs,ValidateFileCreationTime,The following statement contains a magic number: fileCreationTime.HasValue && fileCreationTime.Value.Year < 1980 && !PlatformDetector.IsWin32
Magic Number,NLog.Internal,FilePathLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Files\FilePathLayout.cs,DetectFilePathKind,The following statement contains a magic number: length >= 2
Magic Number,NLog.Internal,Win32FileCharacteristicsHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Files\Win32FileCharacteristicsHelper.cs,GetFileCharacteristics,The following statement contains a magic number: return new FileCharacteristics(DateTime.FromFileTimeUtc(fileInfo.ftCreationTime)' DateTime.FromFileTimeUtc(fileInfo.ftLastWriteTime)' fileInfo.nFileSizeLow + (((long)fileInfo.nFileSizeHigh) << 32));
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: long latestGeneration = _currentVersion - 2;
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: var pruneKeys = new List<TKey>((int)(_dictionary.Count / 2.5));
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: long oldGeneration = _currentVersion - 5;
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: switch (i)                  {                      case 0: oldGeneration = _currentVersion - (int)(_maxCapacity / 1.5); break;                      case 1: oldGeneration = _currentVersion - 10; break;                  }
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: switch (i)                  {                      case 0: oldGeneration = _currentVersion - (int)(_maxCapacity / 1.5); break;                      case 1: oldGeneration = _currentVersion - 10; break;                  }
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: i = 3;
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: _dictionary.Count - pruneKeys.Count < _maxCapacity / 1.5
Magic Number,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following statement contains a magic number: i < 3
Magic Number,NLog.Internal,PlatformDetector,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\PlatformDetector.cs,GetCurrentRuntimeOS,The following statement contains a magic number: (int)platformID == 4 || (int)platformID == 128
Magic Number,NLog.Internal,PlatformDetector,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\PlatformDetector.cs,GetCurrentRuntimeOS,The following statement contains a magic number: (int)platformID == 4 || (int)platformID == 128
Magic Number,NLog.Internal,StackTraceUsageUtils,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StackTraceUsageUtils.cs,GetClassFullName,The following statement contains a magic number: int framesToSkip = 2;
Magic Number,NLog.Internal,StreamHelpers,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StreamHelpers.cs,CopyWithOffset,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,NLog.Internal,StringBuilderPool,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StringBuilderPooling\StringBuilderPool.cs,StringBuilderPool,The following statement contains a magic number: _fastPool = new StringBuilder(10 * initialBuilderCapacity);
Magic Number,NLog.Internal,StringBuilderPool,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StringBuilderPooling\StringBuilderPool.cs,Release,The following statement contains a magic number: int maxBuilderCapacity = poolIndex == -1 ? _maxBuilderCapacity * 10 : _maxBuilderCapacity;
Magic Number,NLog.Internal,StringBuilderPool,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\StringBuilderPooling\StringBuilderPool.cs,Release,The following statement contains a magic number: stringBuilder = new StringBuilder(maxBuilderCapacity / 2);
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,AppendInvariant,The following statement contains a magic number: length_calc /= 10;
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,AppendInvariant,The following statement contains a magic number: builder[strpos] = charToInt[value % 10];
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,AppendInvariant,The following statement contains a magic number: value /= 10;
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,CopyTo,The following statement contains a magic number: sourceLength < 8
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append2DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)((number / 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append2DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)((number % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 1000) % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 1000) % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 100) % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 100) % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 10) % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 10) % 10) + '0'));
Magic Number,NLog.Internal,StringBuilderExt,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringBuilderExt.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append((char)(((number / 1) % 10) + '0'));
Magic Number,NLog.Internal,TargetWithFilterChain,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\TargetWithFilterChain.cs,TryLookupCallSiteClassName,The following statement contains a magic number: System.Threading.Interlocked.CompareExchange(ref _callSiteClassNameCache' new MruCache<CallSiteKey' string>(1000)' null);
Magic Number,NLog.Internal,UrlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\UrlHelper.cs,EscapeDataEncode,The following statement contains a magic number: byteArray = new byte[8];
Magic Number,NLog.Internal,UrlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\UrlHelper.cs,WriteWideChars,The following statement contains a magic number: target.Append(hexChars[(byteCh & 0xf0) >> 4]);
Magic Number,NLog.Internal,UrlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\UrlHelper.cs,HandleLegacyEncoding,The following statement contains a magic number: target.Append(hexChars[(ch >> 4) & 0xF]);
Magic Number,NLog.Internal,UrlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\UrlHelper.cs,HandleLegacyEncoding,The following statement contains a magic number: ch < 256
Magic Number,NLog.Internal,Win32ProcessIDHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Win32ProcessIDHelper.cs,Win32ProcessIDHelper,The following statement contains a magic number: var sb = new StringBuilder(512);
Magic Number,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,SmallAndNoEscapeNeeded,The following statement contains a magic number: return text.Length < 4096 && text.IndexOfAny(xmlEncodeNewlines ? XmlEscapeNewlineChars : XmlEscapeChars) < 0;
Magic Number,NLog.Internal.FileAppenders,BaseMutexFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\BaseMutexFileAppender.cs,GetMutexName,The following statement contains a magic number: const int maxMutexNameLength = 260;
Magic Number,NLog.Internal.FileAppenders,FileAppenderCache,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\FileAppenderCache.cs,ExternalFileArchivingWatcher_OnFileChanged,The following statement contains a magic number: _autoClosingTimer.Change(50' Timeout.Infinite);
Magic Number,NLog.Internal.FileAppenders,RetryingMultiProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\RetryingMultiProcessFileAppender.cs,Write,The following statement contains a magic number: int overrideBufferSize = Math.Min((count / 4096 + 1) * 4096' CreateFileParameters.BufferSize);
Magic Number,NLog.Internal.FileAppenders,RetryingMultiProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\RetryingMultiProcessFileAppender.cs,Write,The following statement contains a magic number: int overrideBufferSize = Math.Min((count / 4096 + 1) * 4096' CreateFileParameters.BufferSize);
Magic Number,NLog.Internal.FileAppenders,WindowsMultiProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\WindowsMultiProcessFileAppender.cs,CreateAppendOnlyFile,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,NLog.Internal.FileAppenders,WindowsMultiProcessFileAppender,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\FileAppenders\WindowsMultiProcessFileAppender.cs,CreateAppendOnlyFile,The following statement contains a magic number: CreationTimeUtc < DateTime.UtcNow - TimeSpan.FromSeconds(2) && filePosition == 0
Magic Number,NLog.LayoutRenderers,AssemblyVersionLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\AssemblyVersionLayoutRenderer.cs,ApplyFormatToVersion,The following statement contains a magic number: version = Format.Replace("major"' versionParts[0])                  .Replace("minor"' versionParts.Length > 1 ? versionParts[1] : "0")                  .Replace("build"' versionParts.Length > 2 ? versionParts[2] : "0")                  .Replace("revision"' versionParts.Length > 3 ? versionParts[3] : "0");
Magic Number,NLog.LayoutRenderers,AssemblyVersionLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\AssemblyVersionLayoutRenderer.cs,ApplyFormatToVersion,The following statement contains a magic number: version = Format.Replace("major"' versionParts[0])                  .Replace("minor"' versionParts.Length > 1 ? versionParts[1] : "0")                  .Replace("build"' versionParts.Length > 2 ? versionParts[2] : "0")                  .Replace("revision"' versionParts.Length > 3 ? versionParts[3] : "0");
Magic Number,NLog.LayoutRenderers,AssemblyVersionLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\AssemblyVersionLayoutRenderer.cs,ApplyFormatToVersion,The following statement contains a magic number: version = Format.Replace("major"' versionParts[0])                  .Replace("minor"' versionParts.Length > 1 ? versionParts[1] : "0")                  .Replace("build"' versionParts.Length > 2 ? versionParts[2] : "0")                  .Replace("revision"' versionParts.Length > 3 ? versionParts[3] : "0");
Magic Number,NLog.LayoutRenderers,AssemblyVersionLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\AssemblyVersionLayoutRenderer.cs,ApplyFormatToVersion,The following statement contains a magic number: version = Format.Replace("major"' versionParts[0])                  .Replace("minor"' versionParts.Length > 1 ? versionParts[1] : "0")                  .Replace("build"' versionParts.Length > 2 ? versionParts[2] : "0")                  .Replace("revision"' versionParts.Length > 3 ? versionParts[3] : "0");
Magic Number,NLog.LayoutRenderers,GarbageCollectorInfoLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\GarbageCollectorInfoLayoutRenderer.cs,GetValue,The following statement contains a magic number: switch (Property)              {                  case GarbageCollectorProperty.TotalMemory:                      value = GC.GetTotalMemory(false);                      break;                    case GarbageCollectorProperty.TotalMemoryForceCollection:                      value = GC.GetTotalMemory(true);                      break;    #if !SILVERLIGHT                  case GarbageCollectorProperty.CollectionCount0:                      value = GC.CollectionCount(0);                      break;                    case GarbageCollectorProperty.CollectionCount1:                      value = GC.CollectionCount(1);                      break;                    case GarbageCollectorProperty.CollectionCount2:                      value = GC.CollectionCount(2);                      break;  #endif                    case GarbageCollectorProperty.MaxGeneration:                      value = GC.MaxGeneration;                      break;              }
Magic Number,NLog.LayoutRenderers,StackTraceLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\CallSite\StackTraceLayoutRenderer.cs,StackTraceLayoutRenderer,The following statement contains a magic number: TopFrames = 3;
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: short b = (short)((hashCode >> 16) & 0XFFFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte d = (byte)((zeroDateTicks >> 56) & 0xFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte e = (byte)((zeroDateTicks >> 48) & 0xFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte f = (byte)((zeroDateTicks >> 40) & 0xFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte g = (byte)((zeroDateTicks >> 32) & 0xFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte h = (byte)((zeroDateTicks >> 24) & 0xFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte i = (byte)((zeroDateTicks >> 16) & 0xFF);
Magic Number,NLog.LayoutRenderers,GuidLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Counters\GuidLayoutRenderer.cs,GetValue,The following statement contains a magic number: byte j = (byte)((zeroDateTicks >> 8) & 0xFF);
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\LongDateLayoutRenderer.cs,Append,The following statement contains a magic number: builder.Append4DigitsZeroPadded((int)(dt.Ticks % 10000000) / 1000);
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\LongDateLayoutRenderer.cs,Append,The following statement contains a magic number: builder.Append4DigitsZeroPadded((int)(dt.Ticks % 10000000) / 1000);
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\ProcessTimeLayoutRenderer.cs,WritetTimestamp,The following statement contains a magic number: milliseconds < 10
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\ProcessTimeLayoutRenderer.cs,WritetTimestamp,The following statement contains a magic number: milliseconds < 100
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\TimeLayoutRenderer.cs,Append,The following statement contains a magic number: builder.Append4DigitsZeroPadded((int)(dt.Ticks % 10000000) / 1000);
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\DateTime\TimeLayoutRenderer.cs,Append,The following statement contains a magic number: builder.Append4DigitsZeroPadded((int)(dt.Ticks % 10000000) / 1000);
Magic Number,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,CheckOptimalNetworkScore,The following statement contains a magic number: const int greatNetworkScore = 16;
Magic Number,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,CalculateNetworkInterfaceScore,The following statement contains a magic number: const int macAddressMinLength = 12;
Magic Number,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,CalculateNetworkInterfaceScore,The following statement contains a magic number: currentScore += 5;
Magic Number,NLog.LayoutRenderers,LocalIpAddressLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LocalIpAddressLayoutRenderer.cs,CalculateIpAddressScore,The following statement contains a magic number: currentScore += 8;
Magic Number,NLog.LayoutRenderers,PerformanceCounterCached,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Machine\PerformanceCounterLayoutRenderer.cs,GetValue,The following statement contains a magic number: timeDifferenceSecs > 0.5F || timeDifferenceSecs < -0.5F
Magic Number,NLog.LayoutRenderers,PerformanceCounterCached,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Machine\PerformanceCounterLayoutRenderer.cs,GetValue,The following statement contains a magic number: timeDifferenceSecs > 0.5F || timeDifferenceSecs < -0.5F
Magic Number,NLog.LayoutRenderers.Wrappers,UrlEncodeLayoutRendererWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Wrappers\Encodings\UrlEncodeLayoutRendererWrapper.cs,Transform,The following statement contains a magic number: System.Text.StringBuilder sb = new System.Text.StringBuilder(text.Length + 20);
Magic Number,NLog.LayoutRenderers.Wrappers,WrapLineLayoutRendererWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Wrappers\WrapLineLayoutRendererWrapper.cs,WrapLineLayoutRendererWrapper,The following statement contains a magic number: WrapLine = 80;
Magic Number,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,PerformJsonEscapeIfNeeded,The following statement contains a magic number: sb.Length - valueStart <= 2
Magic Number,NLog.Layouts,JsonLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\JSON\JsonLayout.cs,PerformJsonEscapeIfNeeded,The following statement contains a magic number: var jsonEscape = sb.ToString(valueStart + 1' sb.Length - valueStart - 2);
Magic Number,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterValue,The following statement contains a magic number: switch (nextChar)                      {                          case ':':                          case '{':                          case '}':                          case '\'':                          case '"':                          case '\\':                              sr.Read();                              nameBuf.Append(nextChar);                              break;                          case '0':                              sr.Read();                              nameBuf.Append('\0');                              break;                          case 'a':                              sr.Read();                              nameBuf.Append('\a');                              break;                          case 'b':                              sr.Read();                              nameBuf.Append('\b');                              break;                          case 'f':                              sr.Read();                              nameBuf.Append('\f');                              break;                          case 'n':                              sr.Read();                              nameBuf.Append('\n');                              break;                          case 'r':                              sr.Read();                              nameBuf.Append('\r');                              break;                          case 't':                              sr.Read();                              nameBuf.Append('\t');                              break;                          case 'u':                              sr.Read();                              var uChar = GetUnicode(sr' 4); // 4 digits                              nameBuf.Append(uChar);                              break;                          case 'U':                              sr.Read();                              var UChar = GetUnicode(sr' 8); // 8 digits                              nameBuf.Append(UChar);                              break;                          case 'x':                              sr.Read();                              var xChar = GetUnicode(sr' 4); // 1-4 digits                              nameBuf.Append(xChar);                              break;                          case 'v':                              sr.Read();                              nameBuf.Append('\v');                              break;                      }
Magic Number,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterValue,The following statement contains a magic number: switch (nextChar)                      {                          case ':':                          case '{':                          case '}':                          case '\'':                          case '"':                          case '\\':                              sr.Read();                              nameBuf.Append(nextChar);                              break;                          case '0':                              sr.Read();                              nameBuf.Append('\0');                              break;                          case 'a':                              sr.Read();                              nameBuf.Append('\a');                              break;                          case 'b':                              sr.Read();                              nameBuf.Append('\b');                              break;                          case 'f':                              sr.Read();                              nameBuf.Append('\f');                              break;                          case 'n':                              sr.Read();                              nameBuf.Append('\n');                              break;                          case 'r':                              sr.Read();                              nameBuf.Append('\r');                              break;                          case 't':                              sr.Read();                              nameBuf.Append('\t');                              break;                          case 'u':                              sr.Read();                              var uChar = GetUnicode(sr' 4); // 4 digits                              nameBuf.Append(uChar);                              break;                          case 'U':                              sr.Read();                              var UChar = GetUnicode(sr' 8); // 8 digits                              nameBuf.Append(UChar);                              break;                          case 'x':                              sr.Read();                              var xChar = GetUnicode(sr' 4); // 1-4 digits                              nameBuf.Append(xChar);                              break;                          case 'v':                              sr.Read();                              nameBuf.Append('\v');                              break;                      }
Magic Number,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterValue,The following statement contains a magic number: switch (nextChar)                      {                          case ':':                          case '{':                          case '}':                          case '\'':                          case '"':                          case '\\':                              sr.Read();                              nameBuf.Append(nextChar);                              break;                          case '0':                              sr.Read();                              nameBuf.Append('\0');                              break;                          case 'a':                              sr.Read();                              nameBuf.Append('\a');                              break;                          case 'b':                              sr.Read();                              nameBuf.Append('\b');                              break;                          case 'f':                              sr.Read();                              nameBuf.Append('\f');                              break;                          case 'n':                              sr.Read();                              nameBuf.Append('\n');                              break;                          case 'r':                              sr.Read();                              nameBuf.Append('\r');                              break;                          case 't':                              sr.Read();                              nameBuf.Append('\t');                              break;                          case 'u':                              sr.Read();                              var uChar = GetUnicode(sr' 4); // 4 digits                              nameBuf.Append(uChar);                              break;                          case 'U':                              sr.Read();                              var UChar = GetUnicode(sr' 8); // 8 digits                              nameBuf.Append(UChar);                              break;                          case 'x':                              sr.Read();                              var xChar = GetUnicode(sr' 4); // 1-4 digits                              nameBuf.Append(xChar);                              break;                          case 'v':                              sr.Read();                              nameBuf.Append('\v');                              break;                      }
Magic Number,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,GetUnicode,The following statement contains a magic number: code = code * 16 + digitCode;
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParseCloseBracketPart,The following statement contains a magic number: throw new TemplateParserException("Unexpected '}}' "' _position - 2' _template);
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParseHole,The following statement contains a magic number: int literalSkip = _position - start + (type == CaptureType.Normal ? 1 : 2);
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following statement contains a magic number: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ReadInt,The following statement contains a magic number: digit < 0 || digit > 9
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ReadInt,The following statement contains a magic number: i = i * 10 + digit;
Magic Number,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ReadInt,The following statement contains a magic number: x < 12
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,AsyncTaskTarget,The following statement contains a magic number: TaskTimeoutSeconds = 150;
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,AsyncTaskTarget,The following statement contains a magic number: RetryDelayMilliseconds = 500;
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,AsyncTaskTarget,The following statement contains a magic number: _requestQueue = new AsyncRequestQueue(10000' AsyncTargetWrapperOverflowAction.Discard);
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,InitializeTarget,The following statement contains a magic number: !ForceLockingQueue && OverflowAction == AsyncTargetWrapperOverflowAction.Block && BatchSize * 1.5m > QueueLimit
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,RetryFailedAsyncTask,The following statement contains a magic number: retryDelay = TimeSpan.FromMilliseconds(RetryDelayMilliseconds * (RetryCount - retryCountRemaining) * 2 + RetryDelayMilliseconds);
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskStartNext,The following statement contains a magic number: previousTask != null && !fullBatchCompleted && TaskDelayMilliseconds >= 50 && !_requestQueue.IsEmpty
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskCreation,The following statement contains a magic number: _taskTimeoutTimer.Change(TaskTimeoutSeconds * 1000' Timeout.Infinite);
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskCompletion,The following statement contains a magic number: fullBatchCompleted = reusableLogEvents.Item2.Count * 2 > BatchSize;
Magic Number,NLog.Targets,AsyncTaskTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\AsyncTaskTarget.cs,TaskTimeout,The following statement contains a magic number: previousTask.Status != TaskStatus.Canceled &&                              previousTask.Status != TaskStatus.Faulted &&                              previousTask.Status != TaskStatus.RanToCompletion && !previousTask.Wait(100)
Magic Number,NLog.Targets,ColoredConsoleAnsiPrinter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleAnsiPrinter.cs,AcquireTextWriter,The following statement contains a magic number: return new StringWriter(reusableBuilder ?? new StringBuilder(50)' consoleStream.FormatProvider);
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,GenerateColorEscapeSequences,The following statement contains a magic number: sb = sb ?? new StringBuilder(message.Length + 5);
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p1 < message.Length && message[p1] >= 32
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 2;
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 2;
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 2;
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: var background = (ConsoleOutputColor)(message[p1 + 2] - 'A');
Magic Number,NLog.Targets,ColoredConsoleTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 3;
Magic Number,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,EscapeChar,The following statement contains a magic number: ch < 32
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: ConcurrentWriteAttempts = 10;
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: BufferSize = 32768;
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: OpenFileCacheSize = 5;
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The following statement contains a magic number: _autoClosingTimer = new Timer(                      (state) => AutoClosingTimerCallback(this' EventArgs.Empty)'                      null'                      openFileAutoTimeoutSecs * 1000'                      openFileAutoTimeoutSecs * 1000);
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The following statement contains a magic number: _autoClosingTimer = new Timer(                      (state) => AutoClosingTimerCallback(this' EventArgs.Empty)'                      null'                      openFileAutoTimeoutSecs * 1000'                      openFileAutoTimeoutSecs * 1000);
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetMemoryStreamInitialSize,The following statement contains a magic number: return (1 + eventsCount) * ((firstEventSize / 1024) + 1) * 1024;
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetMemoryStreamInitialSize,The following statement contains a magic number: return (1 + eventsCount) * ((firstEventSize / 1024) + 1) * 1024;
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,GetMemoryStreamInitialSize,The following statement contains a magic number: eventsCount > 10
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,DeleteAndWaitForFileDelete,The following statement contains a magic number: AsyncHelpers.WaitForDelay(TimeSpan.FromMilliseconds(100));
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,DeleteAndWaitForFileDelete,The following statement contains a magic number: i < 120
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,CalculateNextWeekday,The following statement contains a magic number: target += 7;
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,AutoCloseAppendersAfterArchive,The following statement contains a magic number: bool lockTaken = Monitor.TryEnter(SyncRoot' TimeSpan.FromSeconds(2));
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,AutoClosingTimerCallback,The following statement contains a magic number: bool lockTaken = Monitor.TryEnter(SyncRoot' TimeSpan.FromSeconds(0.5));
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,ConditionalFlushOpenFileAppenders,The following statement contains a magic number: DateTime flushTime = Time.TimeSource.Current.Time.AddSeconds(-Math.Max(OpenFileFlushTimeout' 5) * 2);
Magic Number,NLog.Targets,FileTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileTarget.cs,ConditionalFlushOpenFileAppenders,The following statement contains a magic number: DateTime flushTime = Time.TimeSource.Current.Time.AddSeconds(-Math.Max(OpenFileFlushTimeout' 5) * 2);
Magic Number,NLog.Targets,JsonSerializeOptions,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\JsonSerializeOptions.cs,JsonSerializeOptions,The following statement contains a magic number: MaxRecursionLimit = 10;
Magic Number,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,MailTarget,The following statement contains a magic number: SmtpPort = 25;
Magic Number,NLog.Targets,MailTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\MailTarget.cs,MailTarget,The following statement contains a magic number: Timeout = 10000;
Magic Number,NLog.Targets,NetworkTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\NetworkTarget.cs,NetworkTarget,The following statement contains a magic number: MaxMessageSize = 65000;
Magic Number,NLog.Targets,NetworkTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\NetworkTarget.cs,NetworkTarget,The following statement contains a magic number: ConnectionCacheSize = 5;
Magic Number,NLog.Targets,NLogViewerTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\NLogViewerTarget.cs,NLogViewerTarget,The following statement contains a magic number: MaxConnections = 16;
Magic Number,NLog.Targets,Target,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Target.cs,PrecalculateVolatileLayoutsConcurrent,The following statement contains a magic number: System.Threading.Interlocked.CompareExchange(ref _precalculateStringBuilderPool' new StringBuilderPool(Environment.ProcessorCount * 2)' null);
Magic Number,NLog.Targets,TargetWithContext,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\TargetWithContext.cs,CreateNewDictionary,The following statement contains a magic number: return new Dictionary<string' object>(Math.Max(initialCapacity' 3));
Magic Number,NLog.Targets,WebServiceTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\WebServiceTarget.cs,WriteStreamAndFixPreamble,The following statement contains a magic number: const int preambleSize = 3;
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeBase,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeBase.cs,GetExistingArchiveFiles,The following statement contains a magic number: _lastArchiveFileCount = short.MaxValue * 2;
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeDateAndSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDateAndSequence.cs,GenerateArchiveFileName,The following statement contains a magic number: int minSequenceLength = archiveFileNameTemplate.EndAt - archiveFileNameTemplate.BeginAt - 2;
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateFileNameTemplate,The following statement contains a magic number: switch (_archiveNumbering)              {                  case ArchiveNumberingMode.Sequence:                  case ArchiveNumberingMode.Rolling:                  case ArchiveNumberingMode.DateAndSequence:                      {                          // Force sequence-number into template (Just before extension)                          if (sb.Length > 3 && sb[sb.Length - 3] != '{' && sb[sb.Length - 2] != '#' && sb[sb.Length - 1] != '}')                          {                              if (digitsRemoved <= 1)                              {                                  sb.Append("{");                                  sb.Append("#");                                  sb.Append("}");                              }                              else                              {                                  sb.Append('*');                              }                          }                      }                      break;              }
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateFileNameTemplate,The following statement contains a magic number: switch (_archiveNumbering)              {                  case ArchiveNumberingMode.Sequence:                  case ArchiveNumberingMode.Rolling:                  case ArchiveNumberingMode.DateAndSequence:                      {                          // Force sequence-number into template (Just before extension)                          if (sb.Length > 3 && sb[sb.Length - 3] != '{' && sb[sb.Length - 2] != '#' && sb[sb.Length - 1] != '}')                          {                              if (digitsRemoved <= 1)                              {                                  sb.Append("{");                                  sb.Append("#");                                  sb.Append("}");                              }                              else                              {                                  sb.Append('*');                              }                          }                      }                      break;              }
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateFileNameTemplate,The following statement contains a magic number: switch (_archiveNumbering)              {                  case ArchiveNumberingMode.Sequence:                  case ArchiveNumberingMode.Rolling:                  case ArchiveNumberingMode.DateAndSequence:                      {                          // Force sequence-number into template (Just before extension)                          if (sb.Length > 3 && sb[sb.Length - 3] != '{' && sb[sb.Length - 2] != '#' && sb[sb.Length - 1] != '}')                          {                              if (digitsRemoved <= 1)                              {                                  sb.Append("{");                                  sb.Append("#");                                  sb.Append("}");                              }                              else                              {                                  sb.Append('*');                              }                          }                      }                      break;              }
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeRolling,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeRolling.cs,ReplaceNumberPattern,The following statement contains a magic number: int lastPart = pattern.IndexOf("#}"' StringComparison.Ordinal) + 2;
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeRolling,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeRolling.cs,ReplaceNumberPattern,The following statement contains a magic number: int numDigits = lastPart - firstPart - 2;
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeRolling,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeRolling.cs,ReplaceNumberPattern,The following statement contains a magic number: return pattern.Substring(0' firstPart) + Convert.ToString(value' 10).PadLeft(numDigits' '0') +                     pattern.Substring(lastPart);
Magic Number,NLog.Targets.FileArchiveModes,FileArchiveModeSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeSequence.cs,GenerateArchiveFileName,The following statement contains a magic number: int minSequenceLength = archiveFileNameTemplate.EndAt - archiveFileNameTemplate.BeginAt - 2;
Magic Number,NLog.Targets.Wrappers,AsyncRequestQueue,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncRequestQueue-T.cs,Enqueue,The following statement contains a magic number: switch (OnOverflow)                      {                          case AsyncTargetWrapperOverflowAction.Discard:                              InternalLogger.Debug("Discarding one element from queue");                              var lostItem = _logEventInfoQueue.Dequeue();                              OnLogEventDropped(lostItem.LogEvent);                              break;                            case AsyncTargetWrapperOverflowAction.Grow:                              InternalLogger.Debug("The overflow action is Grow' adding element anyway");                              OnLogEventQueueGrows(RequestCount + 1);                              RequestLimit *= 2;                              break;                            case AsyncTargetWrapperOverflowAction.Block:                              while (_logEventInfoQueue.Count >= RequestLimit)                              {                                  InternalLogger.Debug("Blocking because the overflow action is Block...");                                  System.Threading.Monitor.Wait(_logEventInfoQueue);                                  InternalLogger.Trace("Entered critical section.");                              }                                InternalLogger.Trace("Async queue limit ok.");                              break;                      }
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,AsyncTargetWrapper,The following statement contains a magic number: _requestQueue = new AsyncRequestQueue(10000' AsyncTargetWrapperOverflowAction.Discard);
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,AsyncTargetWrapper,The following statement contains a magic number: BatchSize = 200;
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,AsyncTargetWrapper,The following statement contains a magic number: FullBatchSizeWriteLimit = 5;
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,InitializeTarget,The following statement contains a magic number: !ForceLockingQueue && OverflowAction == AsyncTargetWrapperOverflowAction.Block && BatchSize * 1.5m > QueueLimit
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,CloseTarget,The following statement contains a magic number: Monitor.TryEnter(_writeLockObject' 500)
Magic Number,NLog.Targets.Wrappers,BufferingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\BufferingTargetWrapper.cs,FlushCallback,The following statement contains a magic number: int timeoutMilliseconds = Math.Min(FlushTimeout / 2' 100);
Magic Number,NLog.Targets.Wrappers,BufferingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\BufferingTargetWrapper.cs,FlushCallback,The following statement contains a magic number: int timeoutMilliseconds = Math.Min(FlushTimeout / 2' 100);
Magic Number,NLog.Targets.Wrappers,ConcurrentRequestQueue,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\ConcurrentRequestQueue.cs,Enqueue,The following statement contains a magic number: switch (OnOverflow)                  {                      case AsyncTargetWrapperOverflowAction.Discard:                          {                              do                              {                                  if (_logEventInfoQueue.TryDequeue(out var lostItem))                                  {                                      InternalLogger.Debug("Discarding one element from queue");                                      queueWasEmpty = Interlocked.Decrement(ref _count) == 1 || queueWasEmpty;                                      OnLogEventDropped(lostItem.LogEvent);                                      break;                                  }                                  currentCount = Interlocked.Read(ref _count);                                  queueWasEmpty = true;                              } while (currentCount > RequestLimit);                          }                          break;                      case AsyncTargetWrapperOverflowAction.Block:                          {                              WaitForBelowRequestLimit();                              queueWasEmpty = true;                          }                          break;                      case AsyncTargetWrapperOverflowAction.Grow:                          {                              InternalLogger.Debug("The overflow action is Grow' adding element anyway");                              OnLogEventQueueGrows(currentCount);                              RequestLimit *= 2;                          }                          break;                  }
Magic Number,NLog.Targets.Wrappers,ConcurrentRequestQueue,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\ConcurrentRequestQueue.cs,TrySpinWaitForLowerCount,The following statement contains a magic number: i <= 20
Magic Number,NLog.Targets.Wrappers,RetryingTargetWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\RetryingTargetWrapper.cs,Write,The following statement contains a magic number: continuation = ex =>              {                  if (ex == null)                  {                      logEvent.Continuation(null);                      return;                  }                    int retryNumber = Interlocked.Increment(ref counter);                  InternalLogger.Warn(ex' "RetryingWrapper(Name={0}): Error while writing to '{1}'. Try {2}/{3}"' Name' WrappedTarget' retryNumber' RetryCount);                    // exceeded retry count                  if (retryNumber >= RetryCount)                  {                      InternalLogger.Warn("Too many retries. Aborting.");                      logEvent.Continuation(ex);                      return;                  }                    // sleep and try again (Check every 100 ms if target have been closed)                  for (int i = 0; i < RetryDelayMilliseconds;)                  {                      int retryDelay = Math.Min(100' RetryDelayMilliseconds - i);                      AsyncHelpers.WaitForDelay(TimeSpan.FromMilliseconds(retryDelay));                      i += retryDelay;                      if (!IsInitialized)                      {                          InternalLogger.Warn("RetryingWrapper(Name={0}): Target closed. Aborting."' Name);                          logEvent.Continuation(ex);                          return;                      }                  }                    WrappedTarget.WriteAsyncLogEvent(logEvent.LogEvent.WithContinuation(continuation));              };
Duplicate Code,NLog.Internal,StringSplitter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\Strings\StringSplitter.cs,SplitSelfQuoted2,The method contains a code clone-set at the following line numbers (starting from the method definition): ((45' 66)' (88' 109))
Missing Default,NLog,NLogTraceListener,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\NLogTraceListener.cs,InitAttributes,The following switch statement is missing a default case: switch (key.ToUpperInvariant())                      {                          case "DEFAULTLOGLEVEL":                              _defaultLogLevel = LogLevel.FromString(value);                              break;                            case "FORCELOGLEVEL":                              _forceLogLevel = LogLevel.FromString(value);                              break;                            case "AUTOLOGGERNAME":                              AutoLoggerName = XmlConvert.ToBoolean(value);                              break;                            case "DISABLEFLUSH":                              _disableFlush = bool.Parse(value);                              break;                      }
Missing Default,NLog.Config,LoggingConfigurationParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\LoggingConfigurationParser.cs,ParseNLogSection,The following switch statement is missing a default case: switch (configSection.Name?.Trim().ToUpperInvariant())              {                  case "TIME":                      ParseTimeElement(ValidatedConfigurationElement.Create(configSection' LogFactory));                      return true;                    case "VARIABLE":                      ParseVariableElement(ValidatedConfigurationElement.Create(configSection' LogFactory));                      return true;                    case "VARIABLES":                      ParseVariablesElement(ValidatedConfigurationElement.Create(configSection' LogFactory));                      return true;                    case "APPENDERS":                  case "TARGETS":                      ParseTargetsElement(ValidatedConfigurationElement.Create(configSection' LogFactory));                      return true;              }
Missing Default,NLog.Config,XmlLoggingConfiguration,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseTopLevel,The following switch statement is missing a default case: switch (content.LocalName.ToUpperInvariant())              {                  case "CONFIGURATION":                      ParseConfigurationElement(content' filePath' autoReloadDefault);                      break;                    case "NLOG":                      ParseNLogElement(content' filePath' autoReloadDefault);                      break;              }
Missing Default,NLog.Internal,MruCache<TKey;TValue>,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\MruCache.cs,PruneCache,The following switch statement is missing a default case: switch (i)                  {                      case 0: oldGeneration = _currentVersion - (int)(_maxCapacity / 1.5); break;                      case 1: oldGeneration = _currentVersion - 10; break;                  }
Missing Default,NLog.Internal,XmlHelper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Internal\XmlHelper.cs,XmlConvertToElementName,The following switch statement is missing a default case: switch (chr)                  {                      case ':':   // namespace-delimiter                          if (i != 0 && allowNamespace)                          {                              allowNamespace = false;                              sb?.Append(chr);                              continue;                          }                          break;                      case '_':                          sb?.Append(chr);                          continue;                      case '0':                      case '1':                      case '2':                      case '3':                      case '4':                      case '5':                      case '6':                      case '7':                      case '8':                      case '9':                      case '-':                      case '.':                          {                              if (i != 0)                              {                                  sb?.Append(chr);                                  continue;                              }                              includeChr = true;                              break;                          }                  }
Missing Default,NLog.LayoutRenderers,GarbageCollectorInfoLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\ApplicationEnvironment\GarbageCollectorInfoLayoutRenderer.cs,GetValue,The following switch statement is missing a default case: switch (Property)              {                  case GarbageCollectorProperty.TotalMemory:                      value = GC.GetTotalMemory(false);                      break;                    case GarbageCollectorProperty.TotalMemoryForceCollection:                      value = GC.GetTotalMemory(true);                      break;    #if !SILVERLIGHT                  case GarbageCollectorProperty.CollectionCount0:                      value = GC.CollectionCount(0);                      break;                    case GarbageCollectorProperty.CollectionCount1:                      value = GC.CollectionCount(1);                      break;                    case GarbageCollectorProperty.CollectionCount2:                      value = GC.CollectionCount(2);                      break;  #endif                    case GarbageCollectorProperty.MaxGeneration:                      value = GC.MaxGeneration;                      break;              }
Missing Default,NLog.LayoutRenderers,StackTraceLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\CallSite\StackTraceLayoutRenderer.cs,Append,The following switch statement is missing a default case: switch (Format)              {                  case StackTraceFormat.Raw:                      AppendRaw(builder' logEvent' startingFrame' endingFrame);                      break;                    case StackTraceFormat.Flat:                      AppendFlat(builder' logEvent' startingFrame' endingFrame);                      break;                    case StackTraceFormat.DetailedFlat:                      AppendDetailedFlat(builder' logEvent' startingFrame' endingFrame);                      break;              }
Missing Default,NLog.LayoutRenderers,LevelLayoutRenderer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\LevelLayoutRenderer.cs,Append,The following switch statement is missing a default case: switch (Format)              {                  case LevelFormat.Name:                      builder.Append(level.ToString());                      break;                  case LevelFormat.FirstCharacter:                      builder.Append(level.ToString()[0]);                      break;                  case LevelFormat.Ordinal:                      builder.AppendInvariant(level.Ordinal);                      break;              }
Missing Default,NLog.LayoutRenderers.Wrappers,XmlEncodeLayoutRendererWrapper,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\LayoutRenderers\Wrappers\Encodings\XmlEncodeLayoutRendererWrapper.cs,RequiresXmlEncode,The following switch statement is missing a default case: switch (target[i])                  {                      case '<':                      case '>':                      case '&':                      case '\'':                      case '"':                          return true;                      case '\r':                      case '\n':                          if (XmlEncodeNewlines)                              return true;                          break;                  }
Missing Default,NLog.Layouts,CsvLayout,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\CSV\CsvLayout.cs,InitializeLayout,The following switch statement is missing a default case: switch (Delimiter)              {                  case CsvColumnDelimiterMode.Auto:                      _actualColumnDelimiter = CultureInfo.CurrentCulture.TextInfo.ListSeparator;                      break;                    case CsvColumnDelimiterMode.Comma:                      _actualColumnDelimiter = "'";                      break;                    case CsvColumnDelimiterMode.Semicolon:                      _actualColumnDelimiter = ";";                      break;                    case CsvColumnDelimiterMode.Pipe:                      _actualColumnDelimiter = "|";                      break;                    case CsvColumnDelimiterMode.Tab:                      _actualColumnDelimiter = "\t";                      break;                    case CsvColumnDelimiterMode.Space:                      _actualColumnDelimiter = " ";                      break;                    case CsvColumnDelimiterMode.Custom:                      _actualColumnDelimiter = CustomColumnDelimiter;                      break;              }
Missing Default,NLog.Layouts,LayoutParser,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterValue,The following switch statement is missing a default case: switch (nextChar)                      {                          case ':':                          case '{':                          case '}':                          case '\'':                          case '"':                          case '\\':                              sr.Read();                              nameBuf.Append(nextChar);                              break;                          case '0':                              sr.Read();                              nameBuf.Append('\0');                              break;                          case 'a':                              sr.Read();                              nameBuf.Append('\a');                              break;                          case 'b':                              sr.Read();                              nameBuf.Append('\b');                              break;                          case 'f':                              sr.Read();                              nameBuf.Append('\f');                              break;                          case 'n':                              sr.Read();                              nameBuf.Append('\n');                              break;                          case 'r':                              sr.Read();                              nameBuf.Append('\r');                              break;                          case 't':                              sr.Read();                              nameBuf.Append('\t');                              break;                          case 'u':                              sr.Read();                              var uChar = GetUnicode(sr' 4); // 4 digits                              nameBuf.Append(uChar);                              break;                          case 'U':                              sr.Read();                              var UChar = GetUnicode(sr' 8); // 8 digits                              nameBuf.Append(UChar);                              break;                          case 'x':                              sr.Read();                              var xChar = GetUnicode(sr' 4); // 1-4 digits                              nameBuf.Append(xChar);                              break;                          case 'v':                              sr.Read();                              nameBuf.Append('\v');                              break;                      }
Missing Default,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParameterIndexToString,The following switch statement is missing a default case: switch (parameterIndex)              {                  case 0: return "0";                  case 1: return "1";                  case 2: return "2";                  case 3: return "3";                  case 4: return "4";                  case 5: return "5";                  case 6: return "6";                  case 7: return "7";                  case 8: return "8";                  case 9: return "9";              }
Missing Default,NLog.MessageTemplates,TemplateEnumerator,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\MessageTemplates\TemplateEnumerator.cs,ParseFormat,The following switch statement is missing a default case: switch (c)                  {                      case '}':                          {                              if (_position < _length && Peek() == '}')                              {                                  //this is an escaped } and need to be added to the format.                                  Skip('}');                                  format += "}";                              }                              else                              {                                  //done. unread the '}' .                                  _position--;                                  //done                                  return format;                              }                              break;                          }                      case '{':                          {                              //we need a second {' otherwise this format is wrong.                              var next = Peek();                              if (next == '{')                              {                                  //this is an escaped } and need to be added to the format.                                  Skip('{');                                  format += "{";                              }                              else                              {                                  throw new TemplateParserException($"Expected '{{' but found '{next}' instead in format."'                                      _position' _template);                              }                                break;                          }                  }
Missing Default,NLog.Targets,DbTypeSetter,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DatabaseParameterInfo.cs,TryLookupParameterType,The following switch statement is missing a default case: switch (dbType)                  {                      case System.Data.DbType.AnsiString:                      case System.Data.DbType.String:                      case System.Data.DbType.AnsiStringFixedLength:                      case System.Data.DbType.StringFixedLength:                      case System.Data.DbType.Xml:                          return typeof(string);                      case System.Data.DbType.Byte:                          return typeof(byte);                      case System.Data.DbType.SByte:                          return typeof(sbyte);                      case System.Data.DbType.Boolean:                          return typeof(bool);                      case System.Data.DbType.Date:                      case System.Data.DbType.DateTime:                      case System.Data.DbType.DateTime2:                          return typeof(DateTime);                      case System.Data.DbType.DateTimeOffset:                          return typeof(DateTimeOffset);                      case System.Data.DbType.Decimal:                      case System.Data.DbType.VarNumeric:                      case System.Data.DbType.Currency:                          return typeof(decimal);                      case System.Data.DbType.Double:                          return typeof(double);                      case System.Data.DbType.Guid:                          return typeof(Guid);                      case System.Data.DbType.Int16:                          return typeof(short);                      case System.Data.DbType.Int32:                          return typeof(int);                      case System.Data.DbType.Int64:                          return typeof(long);                      case System.Data.DbType.Object:                          return typeof(object);                      case System.Data.DbType.Single:                          return typeof(float);                      case System.Data.DbType.Time:                          return typeof(TimeSpan);                      case System.Data.DbType.UInt16:                          return typeof(ushort);                      case System.Data.DbType.UInt32:                          return typeof(uint);                      case System.Data.DbType.UInt64:                          return typeof(ulong);                  }
Missing Default,NLog.Targets,DefaultJsonSerializer,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\DefaultJsonSerializer.cs,IsNumericTypeCode,The following switch statement is missing a default case: switch (objTypeCode)              {                  case TypeCode.Byte:                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return true;                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return includeDecimals;              }
Missing Default,NLog.Targets,NetworkTarget,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\NetworkTarget.cs,Write,The following switch statement is missing a default case: switch (OnConnectionOverflow)                          {                              case NetworkTargetConnectionsOverflowAction.DiscardMessage:                                  InternalLogger.Warn("NetworkTarget(Name={0}): Discarding message otherwise to many connections."' Name);                                  logEvent.Continuation(null);                                  return;                                case NetworkTargetConnectionsOverflowAction.AllowNewConnnection:                                  InternalLogger.Debug("NetworkTarget(Name={0}): Too may connections' but this is allowed"' Name);                                  break;                                case NetworkTargetConnectionsOverflowAction.Block:                                  while (_openNetworkSenders.Count >= MaxConnections)                                  {                                      InternalLogger.Debug("NetworkTarget(Name={0}): Blocking networktarget otherwhise too many connections."' Name);                                      Monitor.Wait(_openNetworkSenders);                                      InternalLogger.Trace("NetworkTarget(Name={0}): Entered critical section."' Name);                                  }                                    InternalLogger.Trace("NetworkTarget(Name={0}): Limit ok."' Name);                                  break;                          }
Missing Default,NLog.Targets.FileArchiveModes,FileArchiveModeDynamicSequence,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeDynamicSequence.cs,GenerateFileNameTemplate,The following switch statement is missing a default case: switch (_archiveNumbering)              {                  case ArchiveNumberingMode.Sequence:                  case ArchiveNumberingMode.Rolling:                  case ArchiveNumberingMode.DateAndSequence:                      {                          // Force sequence-number into template (Just before extension)                          if (sb.Length > 3 && sb[sb.Length - 3] != '{' && sb[sb.Length - 2] != '#' && sb[sb.Length - 1] != '}')                          {                              if (digitsRemoved <= 1)                              {                                  sb.Append("{");                                  sb.Append("#");                                  sb.Append("}");                              }                              else                              {                                  sb.Append('*');                              }                          }                      }                      break;              }
Missing Default,NLog.Targets.FileArchiveModes,FileArchiveModeFactory,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\FileArchiveModes\FileArchiveModeFactory.cs,CreateStrictFileArchiveMode,The following switch statement is missing a default case: switch (archiveNumbering)              {                  case ArchiveNumberingMode.Rolling: return new FileArchiveModeRolling();                  case ArchiveNumberingMode.Sequence: return new FileArchiveModeSequence(dateFormat);                  case ArchiveNumberingMode.Date: return new FileArchiveModeDate(dateFormat' ShouldDeleteOldArchives(maxArchiveFiles));                  case ArchiveNumberingMode.DateAndSequence: return new FileArchiveModeDateAndSequence(dateFormat);              }
Missing Default,NLog.Targets.Wrappers,AsyncRequestQueue,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\AsyncRequestQueue-T.cs,Enqueue,The following switch statement is missing a default case: switch (OnOverflow)                      {                          case AsyncTargetWrapperOverflowAction.Discard:                              InternalLogger.Debug("Discarding one element from queue");                              var lostItem = _logEventInfoQueue.Dequeue();                              OnLogEventDropped(lostItem.LogEvent);                              break;                            case AsyncTargetWrapperOverflowAction.Grow:                              InternalLogger.Debug("The overflow action is Grow' adding element anyway");                              OnLogEventQueueGrows(RequestCount + 1);                              RequestLimit *= 2;                              break;                            case AsyncTargetWrapperOverflowAction.Block:                              while (_logEventInfoQueue.Count >= RequestLimit)                              {                                  InternalLogger.Debug("Blocking because the overflow action is Block...");                                  System.Threading.Monitor.Wait(_logEventInfoQueue);                                  InternalLogger.Trace("Entered critical section.");                              }                                InternalLogger.Trace("Async queue limit ok.");                              break;                      }
Missing Default,NLog.Targets.Wrappers,ConcurrentRequestQueue,C:\research\architectureSmells\repos\NLog_NLog\src\NLog\Targets\Wrappers\ConcurrentRequestQueue.cs,Enqueue,The following switch statement is missing a default case: switch (OnOverflow)                  {                      case AsyncTargetWrapperOverflowAction.Discard:                          {                              do                              {                                  if (_logEventInfoQueue.TryDequeue(out var lostItem))                                  {                                      InternalLogger.Debug("Discarding one element from queue");                                      queueWasEmpty = Interlocked.Decrement(ref _count) == 1 || queueWasEmpty;                                      OnLogEventDropped(lostItem.LogEvent);                                      break;                                  }                                  currentCount = Interlocked.Read(ref _count);                                  queueWasEmpty = true;                              } while (currentCount > RequestLimit);                          }                          break;                      case AsyncTargetWrapperOverflowAction.Block:                          {                              WaitForBelowRequestLimit();                              queueWasEmpty = true;                          }                          break;                      case AsyncTargetWrapperOverflowAction.Grow:                          {                              InternalLogger.Debug("The overflow action is Grow' adding element anyway");                              OnLogEventQueueGrows(currentCount);                              RequestLimit *= 2;                          }                          break;                  }
