Implementation smell,Namespace,Class,File,Method,Description
Long Statement,System.ServiceProcess,ServiceBase,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceBase.cs,DeferredShutdown,The length of the statement  "                if (_status.currentState == ServiceControlStatus.STATE_PAUSED || _status.currentState == ServiceControlStatus.STATE_RUNNING) " is 124.
Long Statement,System.ServiceProcess,ServiceBase,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceBase.cs,Run,The length of the statement  "            IntPtr entriesPointer = Marshal.AllocHGlobal((IntPtr)((services.Length + 1) * Marshal.SizeOf(typeof(SERVICE_TABLE_ENTRY)))); " is 124.
Long Statement,System.ServiceProcess,ServiceBase,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceBase.cs,Initialize,The length of the statement  "                //Cannot register the service with NT service manatger if the object has been disposed' since finalization has been suppressed. " is 127.
Long Statement,System.ServiceProcess,ServiceBase,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceBase.cs,ServiceCommandCallback,The length of the statement  "                            if (_status.currentState == ServiceControlStatus.STATE_PAUSED || _status.currentState == ServiceControlStatus.STATE_RUNNING) " is 124.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,GetDataBaseHandleWithConnectAccess,The length of the statement  "                _serviceManagerHandle = new SafeServiceHandle(GetDataBaseHandleWithAccess(_machineName' Interop.Advapi32.ServiceControllerOptions.SC_MANAGER_CONNECT)); " is 151.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,GetDataBaseHandleWithEnumerateAccess,The length of the statement  "            return GetDataBaseHandleWithAccess(machineName' Interop.Advapi32.ServiceControllerOptions.SC_MANAGER_ENUMERATE_SERVICE); " is 120.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,GetServiceHandle,The length of the statement  "            IntPtr serviceHandle = Interop.Advapi32.OpenService(_serviceManagerHandle.DangerousGetHandle()' ServiceName' desiredAccess); " is 124.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,GetServicesInGroup,The length of the statement  "            return GetServices<Interop.Advapi32.ENUM_SERVICE_STATUS_PROCESS>(machineName' Interop.Advapi32.ServiceTypeOptions.SERVICE_TYPE_WIN32' group' status => { return status; }); " is 171.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,GetServicesOfType,The length of the statement  "            return GetServices<ServiceController>(machineName' serviceType' null' status => { return new ServiceController(machineName' status); }); " is 136.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,Continue,The length of the statement  "                bool result = Interop.Advapi32.ControlService(serviceHandle' Interop.Advapi32.ControlOptions.CONTROL_CONTINUE' &status); " is 120.
Long Statement,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,WaitForStatus,The length of the statement  "                throw new ArgumentException(SR.Format(SR.InvalidEnumArgument' nameof(desiredStatus)' (int)desiredStatus' typeof(ServiceControllerStatus))); " is 139.
Complex Conditional,System.ServiceProcess,ServiceBase,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceBase.cs,RequestAdditionalTime,The conditional expression  "_status.currentState != ServiceControlStatus.STATE_CONTINUE_PENDING &&                      _status.currentState != ServiceControlStatus.STATE_START_PENDING &&                      _status.currentState != ServiceControlStatus.STATE_STOP_PENDING &&                      _status.currentState != ServiceControlStatus.STATE_PAUSE_PENDING"  is complex.
Complex Conditional,System.ServiceProcess,ServiceBase,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceBase.cs,ServiceCommandCallback,The conditional expression  "_status.currentState != ServiceControlStatus.STATE_CONTINUE_PENDING &&                      _status.currentState != ServiceControlStatus.STATE_START_PENDING &&                      _status.currentState != ServiceControlStatus.STATE_STOP_PENDING &&                      _status.currentState != ServiceControlStatus.STATE_PAUSE_PENDING"  is complex.
Magic Number,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,Stop,The following statement contains a magic number: try              {                  // Before stopping this service' stop all the dependent services that are running.                  // (It's OK not to cache the result of getting the DependentServices property because it caches on its own.)                  for (int i = 0; i < DependentServices.Length; i++)                  {                      ServiceController currentDependent = DependentServices[i];                      currentDependent.Refresh();                      if (currentDependent.Status != ServiceControllerStatus.Stopped)                      {                          currentDependent.Stop();                          currentDependent.WaitForStatus(ServiceControllerStatus.Stopped' new TimeSpan(0' 0' 30));                      }                  }                    Interop.Advapi32.SERVICE_STATUS status = new Interop.Advapi32.SERVICE_STATUS();                  bool result = Interop.Advapi32.ControlService(serviceHandle' Interop.Advapi32.ControlOptions.CONTROL_STOP' &status);                  if (!result)                  {                      Exception inner = new Win32Exception(Marshal.GetLastWin32Error());                      throw new InvalidOperationException(SR.Format(SR.StopService' ServiceName' _machineName)' inner);                  }              }              finally              {                  Interop.Advapi32.CloseServiceHandle(serviceHandle);              }
Magic Number,System.ServiceProcess,ServiceController,C:\selectedRepos\dotnet_corefx\src\System.ServiceProcess.ServiceController\src\System\ServiceProcess\ServiceController.cs,WaitForStatus,The following statement contains a magic number: while (Status != desiredStatus)              {                  if (DateTime.UtcNow - start > timeout)                      throw new System.ServiceProcess.TimeoutException(SR.Timeout);                    _waitForStatusSignal.WaitOne(250);                  Refresh();              }
