Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System.IO.Pipes,NamedPipeClientStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeClientStream.cs,NamedPipeClientStream,Cyclomatic complexity of the method is 8
Long Parameter List,System.IO.Pipes,NamedPipeClientStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeClientStream.cs,NamedPipeClientStream,The method has 5 parameters. Parameters: serverName' pipeName' direction' options' impersonationLevel
Long Parameter List,System.IO.Pipes,NamedPipeClientStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeClientStream.cs,NamedPipeClientStream,The method has 6 parameters. Parameters: serverName' pipeName' direction' options' impersonationLevel' inheritability
Long Parameter List,System.IO.Pipes,NamedPipeServerStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeServerStream.cs,NamedPipeServerStream,The method has 5 parameters. Parameters: pipeName' direction' maxNumberOfServerInstances' transmissionMode' options
Long Parameter List,System.IO.Pipes,NamedPipeServerStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeServerStream.cs,NamedPipeServerStream,The method has 7 parameters. Parameters: pipeName' direction' maxNumberOfServerInstances' transmissionMode' options' inBufferSize' outBufferSize
Long Parameter List,System.IO.Pipes,NamedPipeServerStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeServerStream.cs,NamedPipeServerStream,The method has 8 parameters. Parameters: pipeName' direction' maxNumberOfServerInstances' transmissionMode' options' inBufferSize' outBufferSize' inheritability
Long Parameter List,System.IO.Pipes,PipeStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\PipeStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,System.IO.Pipes,PipeStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\PipeStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Statement,System.IO.Pipes,AnonymousPipeClientStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\AnonymousPipeClientStream.cs,Init,The length of the statement  "            Debug.Assert(direction != PipeDirection.InOut' "anonymous pipes are unidirectional' caller should have verified before calling Init"); " is 134.
Long Statement,System.IO.Pipes,PipeStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\PipeStream.cs,Init,The length of the statement  "            Debug.Assert(transmissionMode >= PipeTransmissionMode.Byte && transmissionMode <= PipeTransmissionMode.Message' "transmissionMode is out of range"); " is 148.
Long Statement,System.Threading.Tasks,TaskToApm,C:\selectedRepos\dotnet_corefx\src\Common\src\System\Threading\Tasks\TaskToApm.cs,Begin,The length of the statement  "                asyncResult = task.AsyncState == state ? (IAsyncResult)task : new TaskWrapperAsyncResult(task' state' completedSynchronously: false); " is 133.
Magic Number,System.IO.Pipes,NamedPipeServerStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Pipes\src\System\IO\Pipes\NamedPipeServerStream.cs,NamedPipeServerStream,The following statement contains a magic number: if ((maxNumberOfServerInstances < 1 || maxNumberOfServerInstances > 254) && (maxNumberOfServerInstances != MaxAllowedServerInstances))              {                  // win32 allows fixed values of 1-254 or 255 to mean max allowed by system. We expose 255 as -1 (unlimited)                  // through the MaxAllowedServerInstances constant. This is consistent e.g. with -1 as infinite timeout' etc.                  // We do this check for consistency on Unix' even though maxNumberOfServerInstances is otherwise ignored.                  throw new ArgumentOutOfRangeException(nameof(maxNumberOfServerInstances)' SR.ArgumentOutOfRange_MaxNumServerInstances);              }
