Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,System.Collections,CaseInsensitiveComparer,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\CaseInsensitiveComparer.cs,,The length of the parameter s_InvariantCaseInsensitiveComparer is 34.
Long Identifier,System.Collections,CaseInsensitiveHashCodeProvider,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\CaseInsensitiveHashCodeProvider.cs,,The length of the parameter s_invariantCaseInsensitiveHashCodeProvider is 42.
Long Statement,System.Collections,SortedList,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\SortedList.cs,Clear,The length of the statement  "            Array.Clear(keys' 0' _size); // Don't need to doc this but we clear the elements so that the gc can reclaim the references. " is 123.
Long Statement,System.Collections,SortedList,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\SortedList.cs,Clear,The length of the statement  "            Array.Clear(values' 0' _size); // Don't need to doc this but we clear the elements so that the gc can reclaim the references. " is 125.
Long Statement,System.Collections,Stack,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Stack.cs,Clear,The length of the statement  "            Array.Clear(_array' 0' _size); // Don't need to doc this but we clear the elements so that the gc can reclaim the references. " is 125.
Virtual Method Call from Constructor,System.Collections,Queue,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Queue.cs,Queue,The constructor "Queue" calls a virtual method "Enqueue".
Virtual Method Call from Constructor,System.Collections,Stack,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Stack.cs,Stack,The constructor "Stack" calls a virtual method "Push".
Magic Number,System.Collections,Queue,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Queue.cs,Queue,The following statement contains a magic number: if (!(growFactor >= 1.0 && growFactor <= 10.0))                  throw new ArgumentOutOfRangeException(nameof(growFactor)' SR.Format(SR.ArgumentOutOfRange_QueueGrowFactor' 1' 10));
Magic Number,System.Collections,Queue,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Queue.cs,Queue,The following statement contains a magic number: if (!(growFactor >= 1.0 && growFactor <= 10.0))                  throw new ArgumentOutOfRangeException(nameof(growFactor)' SR.Format(SR.ArgumentOutOfRange_QueueGrowFactor' 1' 10));
Magic Number,System.Collections,Queue,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Queue.cs,Queue,The following statement contains a magic number: _growFactor = (int)(growFactor * 100);
Magic Number,System.Collections,Queue,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Queue.cs,Enqueue,The following statement contains a magic number: if (_size == _array.Length)              {                  int newcapacity = (int)((long)_array.Length * (long)_growFactor / 100);                  if (newcapacity < _array.Length + _MinimumGrow)                  {                      newcapacity = _array.Length + _MinimumGrow;                  }                  SetCapacity(newcapacity);              }
Magic Number,System.Collections,SortedList,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\SortedList.cs,EnsureCapacity,The following statement contains a magic number: int newCapacity = keys.Length == 0 ? 16 : keys.Length * 2;
Magic Number,System.Collections,SortedList,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\SortedList.cs,EnsureCapacity,The following statement contains a magic number: int newCapacity = keys.Length == 0 ? 16 : keys.Length * 2;
Magic Number,System.Collections,Stack,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Stack.cs,Push,The following statement contains a magic number: if (_size == _array.Length)              {                  Object[] newArray = new Object[2 * _array.Length];                  Array.Copy(_array' 0' newArray' 0' _size);                  _array = newArray;              }
Magic Number,System.Collections,StackEnumerator,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Stack.cs,StackEnumerator,The following statement contains a magic number: _index = -2;
Magic Number,System.Collections,StackEnumerator,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Stack.cs,MoveNext,The following statement contains a magic number: if (_index == -2)                  {  // First call to enumerator.                      _index = _stack._size - 1;                      retval = (_index >= 0);                      if (retval)                          _currentElement = _stack._array[_index];                      return retval;                  }
Magic Number,System.Collections,StackEnumerator,C:\selectedRepos\dotnet_corefx\src\System.Collections.NonGeneric\src\System\Collections\Stack.cs,Reset,The following statement contains a magic number: _index = -2;
