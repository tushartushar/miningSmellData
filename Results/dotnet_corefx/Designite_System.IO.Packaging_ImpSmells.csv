Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,ParseCorePropertyPart,The method has 103 lines of code.
Complex Method,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,Add,Cyclomatic complexity of the method is 9
Complex Method,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,Open,Cyclomatic complexity of the method is 9
Complex Method,System.IO.Packaging,PackUriHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,GetExceptionIfPartUriInvalid,Cyclomatic complexity of the method is 9
Complex Method,System.IO.Packaging,XmlCompatibilityReader,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\XmlCompatibilityReader.cs,HandleChoice,Cyclomatic complexity of the method is 8
Complex Method,System.IO.Packaging,CompatibilityScope,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\XmlCompatibilityReader.cs,Verify,Cyclomatic complexity of the method is 10
Long Parameter List,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,Add,The method has 5 parameters. Parameters: targetUri' targetMode' relationshipType' id' parsing
Long Parameter List,System.IO.Packaging,PackageRelationship,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageRelationship.cs,PackageRelationship,The method has 6 parameters. Parameters: package' sourcePart' targetUri' targetMode' relationshipType' id
Long Parameter List,System.IO.Packaging,ZipPackagePart,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackagePart.cs,ZipPackagePart,The method has 7 parameters. Parameters: zipPackage' zipArchive' zipArchiveEntry' zipStreamManager' partUri' contentType' compressionOption
Long Parameter List,System.IO.Packaging,ZipWrappingStream,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipWrappingStream.cs,ZipWrappingStream,The method has 6 parameters. Parameters: zipArchiveEntry' stream' packageFileMode' packageFileAccess' canRead' canWrite
Long Identifier,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,WriteRelationshipsAsXml,The length of the parameter alwaysWriteTargetModeAttribute is 30.
Long Identifier,System.IO.Packaging,PackageRelationship,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageRelationship.cs,,The length of the parameter s_containerRelationshipPartName is 31.
Long Identifier,System.IO.Packaging,PackUriHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,,The length of the parameter s_relationshipPartExtensionName is 31.
Long Identifier,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,,The length of the parameter s_relationshipPartUpperCaseExtension is 36.
Long Identifier,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,,The length of the parameter s_relationshipPartUpperCaseSegmentName is 38.
Long Identifier,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,,The length of the parameter s_containerRelationshipNormalizedPartUri is 40.
Long Identifier,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,,The length of the parameter s_coreDocumentPropertiesContentType is 35.
Long Identifier,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,,The length of the parameter CoreDocumentPropertiesRelationshipType is 38.
Long Identifier,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,,The length of the parameter DefaultPropertyPartNameExtension is 32.
Long Identifier,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,,The length of the parameter s_contentTypesFileUpperInvariant is 32.
Long Identifier,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,,The length of the parameter s_defaultDictionaryInitialSize is 30.
Long Identifier,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,,The length of the parameter s_overrideDictionaryInitialSize is 31.
Long Identifier,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,,The length of the parameter s_temporaryPartNameWithoutExtension is 35.
Long Statement,System.IO.Packaging,ContentType,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ContentType.cs,ParseParameterAndValue,The length of the statement  "                parameterAndValue = parameterAndValue.Substring(parameterStartIndex + parameterValueLength).TrimStart(s_linearWhiteSpaceChars); " is 127.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ParseRelationshipPart,The length of the statement  "                        //MoveToContent - Skips over the following - ProcessingInstruction' DocumentType' Comment' Whitespace' or SignificantWhitespace " is 127.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ParseRelationshipPart,The length of the statement  "                                    if (!(String.CompareOrdinal(s_relationshipsTagName' reader.LocalName) == 0 && (reader.NodeType == XmlNodeType.EndElement))) " is 123.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ProcessRelationshipAttributes,The length of the statement  "                throw new XmlException(SR.Format(SR.RequiredRelationshipAttributeMissing' s_targetAttributeName)' null' reader.LineNumber' reader.LinePosition); " is 144.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ProcessRelationshipAttributes,The length of the statement  "                throw new XmlException(SR.Format(SR.RequiredRelationshipAttributeMissing' s_typeAttributeName)' null' reader.LineNumber' reader.LinePosition); " is 142.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ProcessRelationshipAttributes,The length of the statement  "                throw new XmlException(SR.Format(SR.RequiredRelationshipAttributeMissing' s_idAttributeName)' null' reader.LineNumber' reader.LinePosition); " is 140.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ProcessEndElementForRelationshipTag,The length of the statement  "                throw new XmlException(SR.Format(SR.ElementIsNotEmptyElement' s_relationshipTagName)' null' reader.LineNumber' reader.LinePosition); " is 132.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,Add,The length of the statement  "            PackageRelationship relationship = new PackageRelationship(_package' _sourcePart' targetUri' targetMode' relationshipType' id); " is 127.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,EnsureRelationshipPart,The length of the statement  "                    CompressionOption compressionOption = _sourcePart == null ? CompressionOption.NotCompressed : _sourcePart.CompressionOption; " is 124.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,EnsureRelationshipPart,The length of the statement  "                    _relationshipPart = _package.CreatePart(_uri' PackagingUtilities.RelationshipPartContentType.ToString()' compressionOption); " is 124.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ThrowIfXmlBaseAttributeIsPresent,The length of the statement  "                throw new XmlException(SR.Format(SR.InvalidXmlBaseAttributePresent' s_xmlBaseAttributeName)' null' reader.LineNumber' reader.LinePosition); " is 139.
Long Statement,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ThrowForInvalidAttributeValue,The length of the statement  "            throw new XmlException(SR.Format(SR.InvalidValueForTheAttribute' attributeName)' ex' reader.LineNumber' reader.LinePosition); " is 125.
Long Statement,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,DeletePart,The length of the statement  "            PackUriHelper.ValidatedPartUri validatedPartUri = (PackUriHelper.ValidatedPartUri)PackUriHelper.ValidatePartUri(partUri); " is 121.
Long Statement,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,DeletePart,The length of the statement  "                if (Uri.Compare(owningPartUri' PackUriHelper.PackageRootUri' UriComponents.SerializationInfoString' UriFormat.UriEscaped' StringComparison.Ordinal) == 0) " is 153.
Long Statement,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,GetParts,The length of the statement  "                    "Subclass is expected to return an array [an empty one if there are no parts] as a result of GetPartsCore method call. "); " is 122.
Long Statement,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,GetParts,The length of the statement  "                Dictionary<PackUriHelper.ValidatedPartUri' PackagePart> seenPartUris = new Dictionary<PackUriHelper.ValidatedPartUri' PackagePart>(parts.Length); " is 145.
Long Statement,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,DoClose,The length of the statement  "                if (PackUriHelper.IsRelationshipPartUri(p.Uri) && PackUriHelper.ComparePartUri(p.Uri' PackageRelationship.ContainerRelationshipPartName) != 0) " is 142.
Long Statement,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,CheckIdRange,The length of the statement  "            if ((id <= PackageXmlEnum.NotDefined) || (id >= (PackageXmlEnum.LastPrinted | PackageXmlEnum.XmlSchemaInstanceNamespace))) " is 122.
Long Statement,System.IO.Packaging,PackagingUtilities,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackagingUtilities.cs,PerformInitialReadAndVerifyEncoding,The length of the statement  "            //However' we can't use XmlTextReader' as it is not in COREFX.  Therefore' if there is no XmlDeclaration' or the encoding " is 121.
Long Statement,System.IO.Packaging,PackagingUtilities,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackagingUtilities.cs,PerformInitialReadAndVerifyEncoding,The length of the statement  "            //TODO: in the future' we can do the work to detect the BOM' and throw an exception if the file is in an invalid encoding. " is 122.
Long Statement,System.IO.Packaging,PackagingUtilities,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackagingUtilities.cs,PerformInitialReadAndVerifyEncoding,The length of the statement  "            // Eric White: IMO' this is not a serious problem.  Office will never write with the wrong encoding' nor will any of the " is 120.
Long Statement,System.IO.Packaging,PackUriHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,GetRelationshipPartUri,The length of the statement  "            if (Uri.Compare(partUri' PackageRootUri' UriComponents.SerializationInfoString' UriFormat.UriEscaped' StringComparison.Ordinal) == 0) " is 133.
Long Statement,System.IO.Packaging,PackUriHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,GetRelationshipPartUri,The length of the statement  "            partName = Path.Combine(partName' s_relationshipPartSegmentName' file); // Adding the "_rels" segment and the last segment back " is 127.
Long Statement,System.IO.Packaging,PackUriHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,GetStringForPartUriFromAnyUri,The length of the statement  "            Debug.Assert(!(partUri is ValidatedPartUri)' "This method should only be called when we have not already validated the part uri"); " is 130.
Long Statement,System.IO.Packaging,PackUriHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,GetStringForPartUriFromAnyUri,The length of the statement  "                safeUnescapedUri = new Uri(partUri.GetComponents(UriComponents.SerializationInfoString' UriFormat.SafeUnescaped)' UriKind.Relative); " is 132.
Long Statement,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,IsRelationshipUri,The length of the statement  "                string[] segments = NormalizedPartUriString.Split(s_forwardSlashCharArray); //new Uri(_defaultUri' this).Segments; //partUri.Segments cannot be called on a relative Uri; " is 169.
Long Statement,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,IsRelationshipUri,The length of the statement  "                Debug.Assert(String.CompareOrdinal((Path.GetExtension(segments[segments.Length - 1]))' s_relationshipPartUpperCaseExtension) == 0); " is 131.
Long Statement,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,ParseCorePropertyPart,The length of the statement  "                //MoveToContent - Skips over the following - ProcessingInstruction' DocumentType' Comment' Whitespace' or SignificantWhitespace " is 127.
Long Statement,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,ParseCorePropertyPart,The length of the statement  "                    || (object)reader.NamespaceURI != PackageXmlStringTable.GetXmlStringAsObject(PackageXmlEnum.PackageCorePropertiesNamespace) " is 123.
Long Statement,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,ParseCorePropertyPart,The length of the statement  "                    if ((object)reader.NamespaceURI != PackageXmlStringTable.GetXmlStringAsObject(PackageXmlStringTable.GetXmlNamespace(xmlStringIndex))) " is 133.
Long Statement,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,WriteXmlStartTagsForPackageProperties,The length of the statement  "            _xmlWriter.WriteStartElement(PackageXmlStringTable.GetXmlString(PackageXmlEnum.CoreProperties)'              // local name " is 122.
Long Statement,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,WriteXmlStartTagsForPackageProperties,The length of the statement  "                                         PackageXmlStringTable.GetXmlString(PackageXmlEnum.PackageCorePropertiesNamespace));                                      // namespace " is 133.
Long Statement,System.IO.Packaging,PartBasedPackageProperties,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PartBasedPackageProperties.cs,SerializeDirtyProperties,The length of the statement  "                    _xmlWriter.WriteString(XmlConvert.ToString(((Nullable<DateTime>)entry.Value).Value.ToUniversalTime()' "yyyy-MM-ddTHH:mm:ss.fffffffZ")); " is 135.
Long Statement,System.IO.Packaging,XmlCompatibilityReader,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\XmlCompatibilityReader.cs,Error,The length of the statement  "            throw new XmlException(string.Format(CultureInfo.InvariantCulture' message' args)' null' info == null ? 1 : info.LineNumber' " is 124.
Long Statement,System.IO.Packaging,ZipPackage,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,CreatePartCore,The length of the statement  "            return new ZipPackagePart(this' zipArchiveEntry.Archive' zipArchiveEntry' _zipStreamManager' (PackUriHelper.ValidatedPartUri)partUri' contentType' compressionOption); " is 166.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The length of the statement  "                    //MoveToContent - Skips over the following - ProcessingInstruction' DocumentType' Comment' Whitespace' or SignificantWhitespace " is 127.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The length of the statement  "                            throw new XmlException(SR.TypesTagHasExtraAttributes' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 132.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The length of the statement  "                                    if (reader.NodeType == XmlNodeType.EndElement && reader.Depth == 0 && String.CompareOrdinal(reader.Name' s_typesTagName) == 0) " is 126.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The length of the statement  "                                        throw new XmlException(SR.TypesXmlDoesNotMatchSchema' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 132.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The length of the statement  "                        throw new XmlException(SR.TypesElementExpected' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 126.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ProcessDefaultTagAttributes,The length of the statement  "                    throw new XmlException(SR.DefaultTagDoesNotMatchSchema' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 134.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ProcessOverrideTagAttributes,The length of the statement  "                    throw new XmlException(SR.OverrideTagDoesNotMatchSchema' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 135.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ProcessOverrideTagAttributes,The length of the statement  "                PackUriHelper.ValidatedPartUri partUri = PackUriHelper.ValidatePartUri(new Uri(partNameAttributeValue' UriKind.Relative)); " is 122.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ProcessEndElement,The length of the statement  "                    throw new XmlException(SR.Format(SR.ElementIsNotEmptyElement' elementName)' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 154.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ValidateXmlAttribute,The length of the statement  "                    throw new XmlException(SR.Format(SR.RequiredAttributeEmpty' tagName' attributeName)' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 163.
Long Statement,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ThrowIfXmlAttributeMissing,The length of the statement  "                    throw new XmlException(SR.Format(SR.RequiredAttributeMissing' tagName' attributeName)' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition); " is 165.
Long Statement,System.IO,FileFormatException,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\FileFormatException.cs,GetObjectData,The length of the statement  "            info.AddValue("SourceUri"' SourceUri?.GetComponents(UriComponents.SerializationInfoString' UriFormat.SafeUnescaped)' typeof(string)); " is 133.
Complex Conditional,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ParseRelationshipPart,The conditional expression  "reader.NodeType == XmlNodeType.Element                              && (reader.Depth == 0)                              && (String.CompareOrdinal(s_relationshipsTagName' reader.LocalName) == 0)                              && (String.CompareOrdinal(PackagingUtilities.RelationshipNamespaceUri' reader.NamespaceURI) == 0)"  is complex.
Complex Conditional,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ParseRelationshipPart,The conditional expression  "reader.NodeType == XmlNodeType.Element                                      && (reader.Depth == 1)                                      && (String.CompareOrdinal(s_relationshipTagName' reader.LocalName) == 0)                                      && (String.CompareOrdinal(PackagingUtilities.RelationshipNamespaceUri' reader.NamespaceURI) == 0)"  is complex.
Complex Conditional,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,Add,The conditional expression  "(!targetUri.IsAbsoluteUri && targetMode != TargetMode.External)                      || (targetUri.IsAbsoluteUri && targetUri.Scheme == PackUriHelper.UriSchemePack)"  is complex.
Complex Conditional,System.IO.Packaging,Package,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\Package.cs,AddIfNoPrefixCollisionDetected,The conditional expression  "(precedingPartName != null                  && normalizedPartName.StartsWith(precedingPartName' StringComparison.Ordinal)                  && normalizedPartName.Length > precedingPartName.Length                  && normalizedPartName[precedingPartName.Length] == PackUriHelper.ForwardSlashChar) ||                  (followingPartName != null                  && followingPartName.StartsWith(normalizedPartName' StringComparison.Ordinal)                  && followingPartName.Length > normalizedPartName.Length                  && followingPartName[normalizedPartName.Length] == PackUriHelper.ForwardSlashChar)"  is complex.
Complex Conditional,System.IO.Packaging,PackagePart,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackagePart.cs,ThrowIfOpenAccessModesAreIncompatible,The conditional expression  "access == FileAccess.Read &&                  (mode == FileMode.Create || mode == FileMode.CreateNew || mode == FileMode.Truncate || mode == FileMode.Append)"  is complex.
Complex Conditional,System.IO.Packaging,PackagePart,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackagePart.cs,ThrowIfOpenAccessModesAreIncompatible,The conditional expression  "(_container.FileOpenAccess == FileAccess.Read && access != FileAccess.Read) ||                  (_container.FileOpenAccess == FileAccess.Write && access != FileAccess.Write)"  is complex.
Complex Conditional,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The conditional expression  "(reader.NodeType == XmlNodeType.Element)                          && (reader.Depth == 0)                          && (String.CompareOrdinal(reader.NamespaceURI' s_typesNamespaceUri) == 0)                          && (String.CompareOrdinal(reader.Name' s_typesTagName) == 0)"  is complex.
Complex Conditional,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The conditional expression  "reader.NodeType == XmlNodeType.Element                                  && reader.Depth == 1                                  && (String.CompareOrdinal(reader.NamespaceURI' s_typesNamespaceUri) == 0)                                  && (String.CompareOrdinal(reader.Name' s_defaultTagName) == 0)"  is complex.
Complex Conditional,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ParseContentTypesFile,The conditional expression  "reader.NodeType == XmlNodeType.Element                                      && reader.Depth == 1                                      && (String.CompareOrdinal(reader.NamespaceURI' s_typesNamespaceUri) == 0)                                      && (String.CompareOrdinal(reader.Name' s_overrideTagName) == 0)"  is complex.
Virtual Method Call from Constructor,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,InternalRelationshipCollection,The constructor "InternalRelationshipCollection" calls a virtual method "PartExists".
Magic Number,System.IO.Packaging,ContentType,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ContentType.cs,ValidateCarriageReturns,The following statement contains a magic number: int index = contentType.IndexOf(s_linearWhiteSpaceChars[2]);
Magic Number,System.IO.Packaging,ContentType,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ContentType.cs,ValidateCarriageReturns,The following statement contains a magic number: while (index != -1)              {                  if (contentType[index - 1] == s_linearWhiteSpaceChars[1] || contentType[index + 1] == s_linearWhiteSpaceChars[1])                  {                      index = contentType.IndexOf(s_linearWhiteSpaceChars[2]' ++index);                  }                  else                      throw new ArgumentException(SR.InvalidLinearWhiteSpaceCharacter);              }
Magic Number,System.IO.Packaging,ContentType,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ContentType.cs,ParseTypeAndSubType,The following statement contains a magic number: if (splitBasedOnForwardSlash.Length != 2)                  throw new ArgumentException(SR.InvalidTypeSubType);
Magic Number,System.IO.Packaging,ContentType,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ContentType.cs,ValidateQuotedStringOrToken,The following statement contains a magic number: if (parameterValue.Length >= 2 &&                  parameterValue.StartsWith(Quote' StringComparison.Ordinal) &&                  parameterValue.EndsWith(Quote' StringComparison.Ordinal))                  ValidateQuotedText(parameterValue.Substring(1' parameterValue.Length - 2));              else                  ValidateToken(parameterValue);
Magic Number,System.IO.Packaging,ContentType,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ContentType.cs,ValidateQuotedStringOrToken,The following statement contains a magic number: if (parameterValue.Length >= 2 &&                  parameterValue.StartsWith(Quote' StringComparison.Ordinal) &&                  parameterValue.EndsWith(Quote' StringComparison.Ordinal))                  ValidateQuotedText(parameterValue.Substring(1' parameterValue.Length - 2));              else                  ValidateToken(parameterValue);
Magic Number,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,InternalRelationshipCollection,The following statement contains a magic number: _relationships = new List<PackageRelationship>(4);
Magic Number,System.IO.Packaging,InternalRelationshipCollection,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\InternalRelationshipCollection.cs,ParseRelationshipPart,The following statement contains a magic number: using (Stream s = part.GetStream(FileMode.Open' FileAccess.Read))              {                  // load from the relationship part associated with the given part                  using (XmlReader baseReader = XmlReader.Create(s))                  {                      using (XmlCompatibilityReader reader = new XmlCompatibilityReader(baseReader' s_relationshipKnownNamespaces))                      {                          //This method expects the reader to be in ReadState.Initial.                          //It will make the first read call.                          PackagingUtilities.PerformInitialReadAndVerifyEncoding(baseReader);                            //Note: After the previous method call the reader should be at the first tag in the markup.                          //MoveToContent - Skips over the following - ProcessingInstruction' DocumentType' Comment' Whitespace' or SignificantWhitespace                          //If the reader is currently at a content node then this function call is a no-op                          reader.MoveToContent();                            // look for our tag and namespace pair - throw if other elements are encountered                          // Make sure that the current node read is an Element                           if (reader.NodeType == XmlNodeType.Element                              && (reader.Depth == 0)                              && (String.CompareOrdinal(s_relationshipsTagName' reader.LocalName) == 0)                              && (String.CompareOrdinal(PackagingUtilities.RelationshipNamespaceUri' reader.NamespaceURI) == 0))                          {                              ThrowIfXmlBaseAttributeIsPresent(reader);                                //There should be a namespace Attribute present at this level.                               //Also any other attribute on the <Relationships> tag is an error including xml: and xsi: attributes                              if (PackagingUtilities.GetNonXmlnsAttributeCount(reader) > 0)                                  throw new XmlException(SR.RelationshipsTagHasExtraAttributes' null' reader.LineNumber' reader.LinePosition);                                // start tag encountered for Relationships                              // now parse individual Relationship tags                              while (reader.Read())                              {                                  //Skips over the following - ProcessingInstruction' DocumentType' Comment' Whitespace' or SignificantWhitespace                                  //If the reader is currently at a content node then this function call is a no-op                                  reader.MoveToContent();                                    //If MoveToContent() takes us to the end of the content                                  if (reader.NodeType == XmlNodeType.None)                                      continue;                                    if (reader.NodeType == XmlNodeType.Element                                      && (reader.Depth == 1)                                      && (String.CompareOrdinal(s_relationshipTagName' reader.LocalName) == 0)                                      && (String.CompareOrdinal(PackagingUtilities.RelationshipNamespaceUri' reader.NamespaceURI) == 0))                                  {                                      ThrowIfXmlBaseAttributeIsPresent(reader);                                        int expectedAttributesCount = 3;                                        string targetModeAttributeValue = reader.GetAttribute(s_targetModeAttributeName);                                      if (targetModeAttributeValue != null)                                          expectedAttributesCount++;                                        //check if there are expected number of attributes.                                       //Also any other attribute on the <Relationship> tag is an error including xml: and xsi: attributes                                      if (PackagingUtilities.GetNonXmlnsAttributeCount(reader) == expectedAttributesCount)                                      {                                          ProcessRelationshipAttributes(reader);                                            //Skip the EndElement for Relationship                                          if (!reader.IsEmptyElement)                                              ProcessEndElementForRelationshipTag(reader);                                      }                                      else                                      {                                          throw new XmlException(SR.RelationshipTagDoesntMatchSchema' null' reader.LineNumber' reader.LinePosition);                                      }                                  }                                  else                                      if (!(String.CompareOrdinal(s_relationshipsTagName' reader.LocalName) == 0 && (reader.NodeType == XmlNodeType.EndElement)))                                      throw new XmlException(SR.UnknownTagEncountered' null' reader.LineNumber' reader.LinePosition);                              }                          }                          else throw new XmlException(SR.ExpectedRelationshipsElementTag' null' reader.LineNumber' reader.LinePosition);                      }                  }              }
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[2] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[3] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[4] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[5] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[6] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[7] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[8] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' null);
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[9] = new XmlStringTableStruct(nameString' PackageXmlEnum.PackageCorePropertiesNamespace' "NotSpecified");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[10] = new XmlStringTableStruct(nameString' PackageXmlEnum.NotDefined' "NotSpecified");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[11] = new XmlStringTableStruct(nameString' PackageXmlEnum.DublinCorePropertiesNamespace' "String");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[12] = new XmlStringTableStruct(nameString' PackageXmlEnum.DublinCorePropertiesNamespace' "String");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[13] = new XmlStringTableStruct(nameString' PackageXmlEnum.DublinCorePropertiesNamespace' "String");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[14] = new XmlStringTableStruct(nameString' PackageXmlEnum.DublinCorePropertiesNamespace' "String");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[15] = new XmlStringTableStruct(nameString' PackageXmlEnum.DublinCorePropertiesNamespace' "String");
Magic Number,System.IO.Packaging,PackageXmlStringTable,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackageXmlStringTable.cs,PackageXmlStringTable,The following statement contains a magic number: s_xmlstringtable[20] = new XmlStringTableStruct(nameString' PackageXmlEnum.PackageCorePropertiesNamespace' "String");
Magic Number,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,IsRelationshipUri,The following statement contains a magic number: if ((segments.Length >= 3) &&                      (segments[segments.Length - 1].Length > s_relationshipPartExtensionName.Length))                  {                      // look for "_RELS" segment which must be second last segment                      result = (String.CompareOrdinal(segments[segments.Length - 2]' s_relationshipPartUpperCaseSegmentName) == 0);                  }
Magic Number,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,IsRelationshipUri,The following statement contains a magic number: if ((segments.Length >= 3) &&                      (segments[segments.Length - 1].Length > s_relationshipPartExtensionName.Length))                  {                      // look for "_RELS" segment which must be second last segment                      result = (String.CompareOrdinal(segments[segments.Length - 2]' s_relationshipPartUpperCaseSegmentName) == 0);                  }
Magic Number,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,IsRelationshipUri,The following statement contains a magic number: if (segments.Length > 3 && result == true)                  {                      if ((segments[segments.Length - 1]).EndsWith(s_relsrelsUpperCaseExtension' StringComparison.Ordinal))                      {                          // look for "_rels" segment in the third last segment                          if (String.CompareOrdinal(segments[segments.Length - 3]' s_relationshipPartUpperCaseSegmentName) == 0)                              throw new ArgumentException(SR.NotAValidRelationshipPartUri);                      }                  }
Magic Number,System.IO.Packaging,ValidatedPartUri,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\PackUriHelper.cs,IsRelationshipUri,The following statement contains a magic number: if (segments.Length > 3 && result == true)                  {                      if ((segments[segments.Length - 1]).EndsWith(s_relsrelsUpperCaseExtension' StringComparison.Ordinal))                      {                          // look for "_rels" segment in the third last segment                          if (String.CompareOrdinal(segments[segments.Length - 3]' s_relationshipPartUpperCaseSegmentName) == 0)                              throw new ArgumentException(SR.NotAValidRelationshipPartUri);                      }                  }
Magic Number,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ProcessDefaultTagAttributes,The following statement contains a magic number: if (PackagingUtilities.GetNonXmlnsAttributeCount(reader) != 2)                      throw new XmlException(SR.DefaultTagDoesNotMatchSchema' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition);
Magic Number,System.IO.Packaging,ContentTypeHelper,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ProcessOverrideTagAttributes,The following statement contains a magic number: if (PackagingUtilities.GetNonXmlnsAttributeCount(reader) != 2)                      throw new XmlException(SR.OverrideTagDoesNotMatchSchema' null' ((IXmlLineInfo)reader).LineNumber' ((IXmlLineInfo)reader).LinePosition);
Missing Default,System.IO.Packaging,XmlCompatibilityReader,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\XmlCompatibilityReader.cs,Read,The following switch statement is missing a default case: switch (Reader.NodeType)                  {                      case XmlNodeType.Element:                          {                              // if the element read should be ignored' read the next element                              if (!ReadStartElement(ref more))                              {                                  continue;                              }                              break;                          }                      case XmlNodeType.EndElement:                          {                              // if the element read should be ignored' read the next element                              if (!ReadEndElement(ref more))                              {                                  continue;                              }                              break;                          }                  }
Missing Default,System.IO.Packaging,ZipPackage,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipPackage.cs,ZipPackage,The following switch statement is missing a default case: switch (packageFileMode)                      {                          case FileMode.Open:                              if (s.Length == 0)                              {                                  throw new FileFormatException(SR.ZipZeroSizeFileIsNotValidArchive);                              }                              break;                            case FileMode.CreateNew:                              if (s.Length != 0)                              {                                  throw new IOException(SR.CreateNewOnNonEmptyStream);                              }                              break;                            case FileMode.Create:                              if (s.Length != 0)                              {                                  s.SetLength(0); // Discard existing data                              }                              break;                      }
Missing Default,System.IO.Packaging,ZipStreamManager,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipStreamManager.cs,Open,The following switch statement is missing a default case: switch (_packageFileAccess)              {                  case FileAccess.Read:                      switch (streamFileAccess)                      {                          case FileAccess.Read:                              canRead = true;                              canWrite = false;                              break;                          case FileAccess.Write:                              canRead = false;                              canWrite = false;                              break;                          case FileAccess.ReadWrite:                              canRead = true;                              canWrite = false;                              break;                      }                      break;                  case FileAccess.Write:                      switch (streamFileAccess)                      {                          case FileAccess.Read:                              canRead = false;                              canWrite = false;                              break;                          case FileAccess.Write:                              canRead = false;                              canWrite = true;                              break;                          case FileAccess.ReadWrite:                              canRead = false;                              canWrite = true;                              break;                      }                      break;                  case FileAccess.ReadWrite:                      switch (streamFileAccess)                      {                          case FileAccess.Read:                              canRead = true;                              canWrite = false;                              break;                          case FileAccess.Write:                              canRead = false;                              canWrite = true;                              break;                          case FileAccess.ReadWrite:                              canRead = true;                              canWrite = true;                              break;                      }                      break;              }
Missing Default,System.IO.Packaging,ZipStreamManager,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipStreamManager.cs,Open,The following switch statement is missing a default case: switch (streamFileAccess)                      {                          case FileAccess.Read:                              canRead = true;                              canWrite = false;                              break;                          case FileAccess.Write:                              canRead = false;                              canWrite = false;                              break;                          case FileAccess.ReadWrite:                              canRead = true;                              canWrite = false;                              break;                      }
Missing Default,System.IO.Packaging,ZipStreamManager,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipStreamManager.cs,Open,The following switch statement is missing a default case: switch (streamFileAccess)                      {                          case FileAccess.Read:                              canRead = false;                              canWrite = false;                              break;                          case FileAccess.Write:                              canRead = false;                              canWrite = true;                              break;                          case FileAccess.ReadWrite:                              canRead = false;                              canWrite = true;                              break;                      }
Missing Default,System.IO.Packaging,ZipStreamManager,C:\selectedRepos\dotnet_corefx\src\System.IO.Packaging\src\System\IO\Packaging\ZipStreamManager.cs,Open,The following switch statement is missing a default case: switch (streamFileAccess)                      {                          case FileAccess.Read:                              canRead = true;                              canWrite = false;                              break;                          case FileAccess.Write:                              canRead = false;                              canWrite = true;                              break;                          case FileAccess.ReadWrite:                              canRead = true;                              canWrite = true;                              break;                      }
