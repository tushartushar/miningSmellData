Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WebData.BaseLib,StringGen,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\BaseLibManaged\Globalization.cs,GetIllegalXmlStringWithSeed,Cyclomatic complexity of the method is 9
Magic Number,WebData.BaseLib,StringGen,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\BaseLibManaged\Globalization.cs,GetIllegalXmlStringWithSeed,The following statement contains a magic number: for (i = 0; i < cBaseCharMap.Length; i += 2)              {                  //special processing for 0                   if (i == 0)                  {                      iSum += cBaseCharMap[i] - 1;                  }                  else                  {                      //as the data in the table is not sequential' we                      //we need to take an educated guess if this is a non interval                      //we will take that the rage shouldn't be more than 100 chars                      //as well as the range shouldn't be negative                      if ((cBaseCharMap[i] - cBaseCharMap[i - 1] - 1 > 0) &&                          (cBaseCharMap[i] - cBaseCharMap[i - 1] - 1 < 100))                      {                          iSum += cBaseCharMap[i] - cBaseCharMap[i - 1] - 1;                      }                  }              }
Magic Number,WebData.BaseLib,StringGen,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\BaseLibManaged\Globalization.cs,GetIllegalXmlStringWithSeed,The following statement contains a magic number: for (i = 0; i < cBaseCharMap.Length; i += 2)              {                  //special processing for 0                   if (i == 0)                  {                      iSum += cBaseCharMap[i] - 1;                  }                  else                  {                      //as the data in the table is not sequential' we                      //we need to take an educated guess if this is a non interval                      //we will take that the rage shouldn't be more than 100 chars                      //as well as the range shouldn't be negative                      if ((cBaseCharMap[i] - cBaseCharMap[i - 1] - 1 > 0) &&                          (cBaseCharMap[i] - cBaseCharMap[i - 1] - 1 < 100))                      {                          iSum += cBaseCharMap[i] - cBaseCharMap[i - 1] - 1;                      }                  }              }
Magic Number,WebData.BaseLib,StringGen,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\BaseLibManaged\Globalization.cs,GetIllegalXmlStringWithSeed,The following statement contains a magic number: for (int iChar = 0; iChar < iStrLen; iChar++)              {                  //get a rand number out of that                  int iRandNum = cRandom.Next(iSum);                    //get the right char under the number we just got                  i = 0;                  int iVal = 0;                    while (true)                  {                      iVal = iRandNum;                      //special case for 0                      if (i == 0)                      {                          iRandNum -= cBaseCharMap[i] - 1;                      }                      else                      {                          if (cBaseCharMap[i] - cBaseCharMap[i - 1] - 1 > 0)                          {                              iRandNum -= cBaseCharMap[i] - cBaseCharMap[i - 1] - 1;                          }                      }                        if (iRandNum >= 0)                      {                          i += 2;                      }                      else                      {                          break;                      }                  }                    //special case for i=0                  if (i == 0)                  {                      sResult += (char)iVal;                  }                  else                  {                      sResult += (char)(cBaseCharMap[i - 1] + iVal);                  }              }
