Implementation smell,Namespace,Class,File,Method,Description
Long Statement,System.Collections.Specialized,OrderedDictionaryKeyValueCollection,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\OrderedDictionary.cs,GetEnumerator,The length of the statement  "                return new OrderedDictionaryEnumerator(_objects' _isKeys == true ? OrderedDictionaryEnumerator.Keys : OrderedDictionaryEnumerator.Values); " is 138.
Virtual Method Call from Constructor,System.Collections.Specialized,OrderedDictionaryEnumerator,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\OrderedDictionary.cs,OrderedDictionaryEnumerator,The constructor "OrderedDictionaryEnumerator" calls a virtual method "GetEnumerator".
Magic Number,System.Collections.Specialized,BitVector32,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,CreateMaskFromHighValue,The following statement contains a magic number: short required = 16;
Magic Number,System.Collections.Specialized,BitVector32,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,CreateSectionHelper,The following statement contains a magic number: if (offset >= 32)              {                  throw new InvalidOperationException(SR.BitVectorFull);              }
Magic Number,System.Collections.Specialized,BitVector32,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(/*"BitVector32{".Length*/12 + /*32 bits*/32 + /*"}".Length"*/1);
Magic Number,System.Collections.Specialized,BitVector32,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(/*"BitVector32{".Length*/12 + /*32 bits*/32 + /*"}".Length"*/1);
Magic Number,System.Collections.Specialized,BitVector32,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,ToString,The following statement contains a magic number: for (int i = 0; i < 32; i++)              {                  if ((locdata & 0x80000000) != 0)                  {                      sb.Append('1');                  }                  else                  {                      sb.Append('0');                  }                  locdata <<= 1;              }
Magic Number,System.Collections.Specialized,Section,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,ToString,The following statement contains a magic number: return "Section{0x" + Convert.ToString(value.Mask' 16) + "' 0x" + Convert.ToString(value.Offset' 16) + "}";
Magic Number,System.Collections.Specialized,Section,C:\selectedRepos\dotnet_corefx\src\System.Collections.Specialized\src\System\Collections\Specialized\BitVector32.cs,ToString,The following statement contains a magic number: return "Section{0x" + Convert.ToString(value.Mask' 16) + "' 0x" + Convert.ToString(value.Offset' 16) + "}";
