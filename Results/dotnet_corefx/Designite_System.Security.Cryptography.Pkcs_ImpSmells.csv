Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Internal.Cryptography,DecryptorPal,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\DecryptorPal.cs,TryDecrypt,The method has 5 parameters. Parameters: recipientInfo' cert' originatorCerts' extraStore' exception
Long Parameter List,Internal.Cryptography,PkcsPal,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\PkcsPal.cs,Encrypt,The method has 5 parameters. Parameters: recipients' contentInfo' contentEncryptionAlgorithm' originatorCerts' unprotectedAttributes
Long Parameter List,Internal.Cryptography,PkcsPal,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\PkcsPal.cs,Decode,The method has 6 parameters. Parameters: encodedMessage' version' contentInfo' contentEncryptionAlgorithm' originatorCerts' unprotectedAttributes
Long Statement,System.Security.Cryptography.Pkcs,EnvelopedCms,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\System\Security\Cryptography\Pkcs\EnvelopedCms.cs,Encrypt,The length of the statement  "            // Desktop compat note: Unlike the desktop' we don't provide a free UI to select the recipient. The app must give it to us programmatically. " is 140.
Long Statement,System.Security.Cryptography.Pkcs,EnvelopedCms,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\System\Security\Cryptography\Pkcs\EnvelopedCms.cs,Encrypt,The length of the statement  "            _encodedMessage = PkcsPal.Instance.Encrypt(recipients' ContentInfo' ContentEncryptionAlgorithm' Certificates' UnprotectedAttributes); " is 133.
Long Statement,System.Security.Cryptography.Pkcs,EnvelopedCms,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\System\Security\Cryptography\Pkcs\EnvelopedCms.cs,Decode,The length of the statement  "            _decryptorPal = PkcsPal.Instance.Decode(encodedMessage' out version' out contentInfo' out contentEncryptionAlgorithm' out originatorCerts' out unprotectedAttributes); " is 166.
Long Statement,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,OctetStringToUnicode,The length of the statement  "                return string.Empty;   // Desktop compat: 0-length byte array maps to string.empty. 1-length byte array gets passed to Marshal.PtrToStringUni() with who knows what outcome. " is 172.
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,UnicodeToOctetString,The following statement contains a magic number: byte[] octets = new byte[2 * (s.Length + 1)];
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,OctetStringToUnicode,The following statement contains a magic number: if (octets.Length < 2)                  return string.Empty;
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,OctetStringToUnicode,The following statement contains a magic number: string s = Encoding.Unicode.GetString(octets' 0' octets.Length - 2);
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,ToUpperHexString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(ba.Length * 2);
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,UpperHexStringToByteArray,The following statement contains a magic number: byte[] ba = new byte[normalizedString.Length / 2];
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,UpperHexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < ba.Length; i++)              {                  char c = normalizedString[i * 2];                  byte b = (byte)(UpperHexCharToNybble(c) << 4);                  c = normalizedString[i * 2 + 1];                  b |= UpperHexCharToNybble(c);                  ba[i] = b;              }
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,UpperHexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < ba.Length; i++)              {                  char c = normalizedString[i * 2];                  byte b = (byte)(UpperHexCharToNybble(c) << 4);                  c = normalizedString[i * 2 + 1];                  b |= UpperHexCharToNybble(c);                  ba[i] = b;              }
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,UpperHexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < ba.Length; i++)              {                  char c = normalizedString[i * 2];                  byte b = (byte)(UpperHexCharToNybble(c) << 4);                  c = normalizedString[i * 2 + 1];                  b |= UpperHexCharToNybble(c);                  ba[i] = b;              }
Magic Number,Internal.Cryptography,Helpers,C:\selectedRepos\dotnet_corefx\src\System.Security.Cryptography.Pkcs\src\Internal\Cryptography\Helpers.cs,UpperHexCharToNybble,The following statement contains a magic number: if (c >= 'A' && c <= 'F')                  return (byte)(c - 'A' + 10);
