Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,,The length of the parameter _timeStampSinceCollectionStarted is 32.
Long Identifier,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,,The length of the parameter _pollingIntervalInMilliseconds is 30.
Long Statement,System.Diagnostics.Tracing,EventCounter,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,Enqueue,The length of the statement  "            // It is possible that two threads read the same bufferedValuesIndex' but only one will be able to write the slot' so that is okay. " is 131.
Long Statement,System.Diagnostics.Tracing,EventCounter,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,Enqueue,The length of the statement  "                    // will eventually enter this code path and potentially calling Flushing on a buffer that is not full' and that's okay too. " is 123.
Long Statement,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,RegisterCommandCallback,The length of the statement  "                string msg = "EventCounterError: Old Runtime that does not support EventSource.EventCommandExecuted.  EventCounters not Supported"; " is 131.
Long Statement,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,EnsureEventSourceIndexAvailable,The length of the statement  "                Array.Copy(EventCounterGroup.s_eventCounterGroups' 0' newEventCounterGroups' 0' EventCounterGroup.s_eventCounterGroups.Length); " is 127.
Long Statement,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,OnTimer,The length of the statement  "                        _eventSource.Write("EventCounters"' new EventSourceOptions() { Level = EventLevel.LogAlways }' new PayloadType(payload)); " is 121.
Magic Number,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,EnableTimer,The following statement contains a magic number: if (pollingIntervalInSeconds <= 0)              {                  DisposeTimer();                  _pollingIntervalInMilliseconds = 0;              }              else if (_pollingIntervalInMilliseconds == 0 || pollingIntervalInSeconds * 1000 < _pollingIntervalInMilliseconds)              {                  Debug.WriteLine("Polling interval changed at " + DateTime.UtcNow.ToString("mm.ss.ffffff"));                  _pollingIntervalInMilliseconds = (int)(pollingIntervalInSeconds * 1000);                  DisposeTimer();                  _timeStampSinceCollectionStarted = DateTime.UtcNow;                  _pollingTimer = new Timer(OnTimer' null' _pollingIntervalInMilliseconds' _pollingIntervalInMilliseconds);              }
Magic Number,System.Diagnostics.Tracing,EventCounterGroup,C:\selectedRepos\dotnet_corefx\src\System.Diagnostics.Tracing\src\System\Diagnostics\Tracing\EventCounter.cs,EnableTimer,The following statement contains a magic number: if (pollingIntervalInSeconds <= 0)              {                  DisposeTimer();                  _pollingIntervalInMilliseconds = 0;              }              else if (_pollingIntervalInMilliseconds == 0 || pollingIntervalInSeconds * 1000 < _pollingIntervalInMilliseconds)              {                  Debug.WriteLine("Polling interval changed at " + DateTime.UtcNow.ToString("mm.ss.ffffff"));                  _pollingIntervalInMilliseconds = (int)(pollingIntervalInSeconds * 1000);                  DisposeTimer();                  _timeStampSinceCollectionStarted = DateTime.UtcNow;                  _pollingTimer = new Timer(OnTimer' null' _pollingIntervalInMilliseconds' _pollingIntervalInMilliseconds);              }
