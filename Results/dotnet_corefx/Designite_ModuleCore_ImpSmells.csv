Implementation smell,Namespace,Class,File,Method,Description
Long Method,OLEDB.Test.ModuleCore,CKeywordParser,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cparser.cs,ParseKeywords,The method has 139 lines of code.
Long Parameter List,OLEDB.Test.ModuleCore,CError,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cerror.cs,Log,The method has 6 parameters. Parameters: actual' expected' source' message' details' eErrorLevel
Long Parameter List,OLEDB.Test.ModuleCore,CTestException,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\ctestexception.cs,CTestException,The method has 5 parameters. Parameters: result' message' actual' expected' inner
Long Parameter List,OLEDB.Test.ModuleCore,ITestConsole,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\interop.cs,Log,The method has 8 parameters. Parameters: bstrActual' bstrExpected' bstrSource' bstrMessage' bstrDetails' flags' bstrFilename' iline
Virtual Method Call from Constructor,OLEDB.Test.ModuleCore,CTestModule,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\ctestmodule.cs,CTestModule,The constructor "CTestModule" calls a virtual method "DetermineIncludes".
Virtual Method Call from Constructor,OLEDB.Test.ModuleCore,CTestModule,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\ctestmodule.cs,CTestModule,The constructor "CTestModule" calls a virtual method "DetermineFilters".
Empty Catch Block,OLEDB.Test.ModuleCore,XunitTestCase,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\XunitTestCase.cs,Run,The method has an empty catch block.
Magic Number,OLEDB.Test.ModuleCore,CError,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cerror.cs,Log,The following statement contains a magic number: try              {                  //Get caller function' 0=current                  //StackTrace rStackTrace = new StackTrace();                  //StackFrame rStackFrame = rStackTrace.GetFrame(1);                    //Log the error                  if (TestConsole != null)                  {                      //ITestConsole.Log                      TestConsole.Log(Common.Format(actual)'			//actual                                          Common.Format(expected)'		//expected                                          source'							//source                                          message'						//message                                          details'						//details                                          tagCONSOLEFLAGS.CONSOLE_TEXT'	//flags                                          "fake_filename"'                                          999                                      );                  }                    else if (Error != null)                  {                      //We call IError::Compare' which logs the error AND increments the error count...                      Console.WriteLine("Message:\t" + message);                      Console.WriteLine("Source:\t\t" + source);                      Console.WriteLine("Expected:\t" + expected);                      Console.WriteLine("Received:\t" + actual);                      Console.WriteLine("Details:" + CError.NewLine + details);                  }              }                finally              {                  //Restore the error level                  ErrorLevel = rSavedLevel;              }
Magic Number,OLEDB.Test.ModuleCore,CError,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cerror.cs,PrintUnknownCharacter,The following statement contains a magic number: while (number > 0)              {                  int n = number % 16;                  number = number / 16;                  if (n < 10)                  {                      result = (char)(n + (int)'0') + result;                  }                  else                  {                      result = (char)(n - 10 + (int)'A') + result;                  }              }
Magic Number,OLEDB.Test.ModuleCore,CError,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cerror.cs,PrintUnknownCharacter,The following statement contains a magic number: while (number > 0)              {                  int n = number % 16;                  number = number / 16;                  if (n < 10)                  {                      result = (char)(n + (int)'0') + result;                  }                  else                  {                      result = (char)(n - 10 + (int)'A') + result;                  }              }
Magic Number,OLEDB.Test.ModuleCore,CError,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cerror.cs,PrintUnknownCharacter,The following statement contains a magic number: while (number > 0)              {                  int n = number % 16;                  number = number / 16;                  if (n < 10)                  {                      result = (char)(n + (int)'0') + result;                  }                  else                  {                      result = (char)(n - 10 + (int)'A') + result;                  }              }
Magic Number,OLEDB.Test.ModuleCore,CError,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\cerror.cs,PrintUnknownCharacter,The following statement contains a magic number: while (number > 0)              {                  int n = number % 16;                  number = number / 16;                  if (n < 10)                  {                      result = (char)(n + (int)'0') + result;                  }                  else                  {                      result = (char)(n - 10 + (int)'A') + result;                  }              }
Missing Default,OLEDB.Test.ModuleCore,CTestBase,C:\selectedRepos\dotnet_corefx\src\Common\tests\System\Xml\ModuleCore\ctestbase.cs,HandleException,The following switch statement is missing a default case: switch (eResult)                  {                      case TEST_PASS:                      case TEST_SKIPPED:                          return eResult; //were done                        case TEST_WARNING:                          eErrorLevel = tagERRORLEVEL.HR_WARNING;                          break;                  }
