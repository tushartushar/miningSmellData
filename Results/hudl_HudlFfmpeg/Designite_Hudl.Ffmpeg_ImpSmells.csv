Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Hudl.FFmpeg.Filters.BaseTypes,FiltergraphManager,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\BaseTypes\FiltergraphManager.cs,Add,Cyclomatic complexity of the method is 9
Long Parameter List,Hudl.FFmpeg.Filters,AFade,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\AFade.cs,AFade,The method has 5 parameters. Parameters: startUnit' lengthInUnits' unitType' transitionType' curveType
Long Statement,Hudl.FFmpeg.Command.Utility,CommandHelperUtility,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\Utility\CommandHelperUtility.cs,FilterchainFromStreamIdentifier,The length of the statement  "            return command.Objects.Filtergraph.FilterchainList.FirstOrDefault(f => f.GetStreamIdentifiers().Any(r => r.Equals(streamId))); " is 126.
Long Statement,Hudl.FFmpeg.Filters,Concat,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Concat.cs,EditInfo,The length of the statement  "                infoToUpdate.AudioStream.AudioMetadata.Duration = TimeSpan.FromSeconds(suppliedInfo.Sum(i => i.AudioStream.AudioMetadata.Duration.TotalSeconds)); " is 145.
Long Statement,Hudl.FFmpeg.Filters,Concat,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Concat.cs,EditInfo,The length of the statement  "                infoToUpdate.VideoStream.VideoMetadata.Duration = TimeSpan.FromSeconds(suppliedInfo.Sum(i => i.VideoStream.VideoMetadata.Duration.TotalSeconds)); " is 145.
Long Statement,Hudl.FFmpeg.Filters,Trim,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Trim.cs,EditInfo,The length of the statement  "                startTimeInSeconds = (double)StartFrame.Value / (double)infoToUpdate.VideoStream.VideoMetadata.AverageFrameRate.ToDouble(); " is 123.
Long Statement,Hudl.FFmpeg.Metadata,MetadataInfoStreamCalculator,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Metadata\MetadataInfoStreamCalculator.cs,Calculate,The length of the statement  "            metadataManipulators.ForEach(mm => metadataInfoResult = mm.EditInfo(metadataInfoResult' new List<MetadataInfoTreeContainer> { metadataInfoTreeSource.ResultMetadataInfo })); " is 172.
Long Statement,Hudl.FFmpeg.Metadata,MetadataInfoTreeGroup,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Metadata\Models\MetadataInfoTreeGroup.cs,Fill,The length of the statement  "                var streamIdListFromMaps = allSettingMaps.Select(map => StreamIdentifier.Create(command.Owner.Id' command.Id' map.Stream)).ToList(); " is 132.
Long Statement,Hudl.FFmpeg.Command,FFmpegCommandProcessor,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\FFmpegCommandProcessor.cs,Open,The length of the statement  "                throw new InvalidOperationException(string.Format("Cannot open a command processor that is currently in the '{0}' state."' Status)); " is 132.
Long Statement,Hudl.FFmpeg.Command,FFmpegCommandProcessor,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\FFmpegCommandProcessor.cs,Close,The length of the statement  "                throw new InvalidOperationException(string.Format("Cannot close a command processor that is currently in the '{0}' state."' Status)); " is 133.
Long Statement,Hudl.FFmpeg.Command,FFmpegCommandProcessor,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\FFmpegCommandProcessor.cs,Send,The length of the statement  "                throw new InvalidOperationException(string.Format("Cannot process a command processor that is currently in the '{0}' state."' Status)); " is 135.
Long Statement,Hudl.FFmpeg.Command,FFmpegCommandProcessor,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\FFmpegCommandProcessor.cs,CheckForKnownExceptions,The length of the statement  "            if (ResourceManagement.CommandConfiguration.HasFlag(CommandConfigurationFlagTypes.RetrySignal15Termination) && IsSignal15Error(errorOutput)) " is 140.
Long Statement,Hudl.FFmpeg.Command,FFmpegCommandBuilder,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\FFmpegCommandBuilder.cs,WriteFilterchainIn,The length of the statement  "                var indexOfResource = command.Objects.Inputs.FindIndex(inputs => inputs.GetStreamIdentifiers().Any(s => s.Map == streamId.Map)); " is 128.
Long Statement,Hudl.FFmpeg.Command,CommandFactory,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Command\CommandFactory.cs,Create,The length of the statement  "                throw new InvalidOperationException("A command factory cannot be created without a global configuration set Hudl.FFmpeg.ResourceManagement.CommandConfiguration");    " is 162.
Long Statement,Hudl.FFmpeg.Filters.BaseTypes,FiltergraphManager,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\BaseTypes\FiltergraphManager.cs,Add,The length of the statement  "                if (!streamIdList.TrueForAll(streamId => Owner.Objects.ContainsInput(streamId) || Owner.Objects.ContainsStream(streamId))) " is 122.
Long Statement,Hudl.FFmpeg.Filters.BaseTypes,FiltergraphManager,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\BaseTypes\FiltergraphManager.cs,Add,The length of the statement  "                    throw new ArgumentException("Cannot apply filters to inputs or streams that do not exist in the command."' "streamIds"); " is 120.
Long Statement,Hudl.FFmpeg.Settings.BaseTypes,SettingsCollection,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\BaseTypes\SettingsCollection.cs,Add,The length of the statement  "                throw new ArgumentException(string.Format("The SettingsCollection already contains a type of {0}."' setting.GetType().Name)' "setting"); " is 136.
Long Statement,Hudl.FFmpeg.Settings.BaseTypes,SettingsCollection,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\BaseTypes\SettingsCollection.cs,Add,The length of the statement  "                throw new ArgumentException(string.Format("The SettingsCollection is restricted only to {0} settings."' Type)' "setting"); " is 122.
Long Statement,Hudl.FFmpeg.Settings.BaseTypes,SettingsCollection,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\BaseTypes\SettingsCollection.cs,MergeRange,The length of the statement  "                throw new ArgumentException(string.Format("Settings parameter must be of the same type {0} as the SettingsCollection."' Type)); " is 127.
Long Statement,Hudl.FFmpeg.Sugar,CommandStageExtensions,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Sugar\CommandStageExtensions.cs,FilterEach,The length of the statement  "            var outputStreamIdentifiers = stage.Command.FilterchainManager.AddToEach(filterchain' stage.StreamIdentifiers.ToArray()); " is 121.
Magic Number,Hudl.FFmpeg.Filters,AEvalSrc,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\AEvalSrc.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.AudioMetadata = new AudioStreamMetadata                  {                      SampleRate = SampleRate ?? 44100'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,Color,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Color.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,Color,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Color.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,Color,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Color.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,Color,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Color.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,NullSrc,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\NullSrc.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,NullSrc,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\NullSrc.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,NullSrc,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\NullSrc.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,NullSrc,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\NullSrc.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.VideoMetadata = new VideoStreamMetadata                  {                      Width = Size.HasValue ? Size.Value.Width : 320'                      Height = Size.HasValue ? Size.Value.Height : 240'                      AverageFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      RFrameRate = Fraction.Create(FrameRate ?? 25' 1)'                      Duration = Duration ?? TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters,ANullSrc,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\ANullSrc.cs,EditInfo,The following statement contains a magic number: emptyMetadataInfo.AudioMetadata = new AudioStreamMetadata                  {                      SampleRate = SampleRate ?? 44100'                      Duration = TimeSpan.MaxValue'                      DurationTs = long.MaxValue'                  };
Magic Number,Hudl.FFmpeg.Filters.BaseTypes,BaseSplit,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\BaseTypes\BaseSplit.cs,OutputCount,The following statement contains a magic number: return NumberOfStreams ?? 2;
Magic Number,Hudl.FFmpeg.Filters.BaseTypes,Filtergraph,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\BaseTypes\Filtergraph.cs,ToString,The following statement contains a magic number: var filtergraph = new StringBuilder(100);
Magic Number,Hudl.FFmpeg.Filters.Templates,Dissolve,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Templates\Dissolve.cs,SetupTemplate,The following statement contains a magic number: if (streamIdList.Count != 2)              {                  throw new InvalidOperationException("Crossfade Concatenate requires two input video streams.");              }
Magic Number,Hudl.FFmpeg.Filters.Templates,Dissolve,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Templates\Dissolve.cs,SetupTemplate,The following statement contains a magic number: var fromSplit = command.Select(streamFrom)                                     .Filter(Filterchain.FilterTo<VideoStream>(new Split(2)));
Magic Number,Hudl.FFmpeg.Filters.Templates,Dissolve,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Templates\Dissolve.cs,SetupTemplate,The following statement contains a magic number: var toSplit = command.Select(streamTo)                                   .Filter(Filterchain.FilterTo<VideoStream>(new Split(2)));
Magic Number,Hudl.FFmpeg.Settings,BitRateVideo,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\BitRateVideo.cs,EditInfo,The following statement contains a magic number: infoToUpdate.VideoStream.VideoMetadata.BitRate = Rate * 1000;
Magic Number,Hudl.FFmpeg.Settings,BitRateAudio,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\BitRateAudio.cs,EditInfo,The following statement contains a magic number: infoToUpdate.AudioStream.AudioMetadata.BitRate = Rate * 1000;
Magic Number,Hudl.FFmpeg.Settings.BaseTypes,BaseQualityScale,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\BaseTypes\BaseQualityScale.cs,BaseQualityScale,The following statement contains a magic number: if (scale > 31)              {                  throw new ArgumentException("Quality scale must be between 1 and 31.");              }
Magic Number,Hudl.FFmpeg.Common,Helpers,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Common\Helpers.cs,NewMap,The following statement contains a magic number: return string.Concat("mp"' Guid.NewGuid().ToString().Substring(0' 8));
Missing Default,Hudl.FFmpeg.Filters,ATrim,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\ATrim.cs,ATrim,The following switch statement is missing a default case: switch (timebaseUnit)              {                  case AudioUnitType.Sample:                      EndSample = endUnit;                      StartSample = startUnit;                      break;                  case AudioUnitType.Seconds:                      End = endUnit;                      Start = startUnit;                      break;                  case AudioUnitType.Timebase:                      EndPts = endUnit;                      StartPts = startUnit;                      break;              }
Missing Default,Hudl.FFmpeg.Filters,Trim,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Filters\Trim.cs,Trim,The following switch statement is missing a default case: switch (timebaseUnit)              {                  case VideoUnitType.Frames:                      EndFrame = endUnit;                      StartFrame = startUnit;                      break;                  case VideoUnitType.Seconds:                      End = endUnit;                      Start = startUnit;                      break;                  case VideoUnitType.Timebase:                      EndPts = endUnit;                      StartPts = startUnit;                      break;              }
Missing Default,Hudl.FFmpeg.Settings,AvoidNegativeTimestamps,C:\repos\hudl_HudlFfmpeg\Hudl.FFmpeg\Settings\AvoidNegativeTimestamps.cs,EditInfo,The following switch statement is missing a default case: switch (Type)              {                  case AvoidNegativeTimestampsType.MakeNonNegative:                      if (minStartTimeTs < 0)                      {                          if (infoToUpdate.HasVideo)                          {                              infoToUpdate.VideoStream.VideoMetadata.StartTime = TimeSpan.FromTicks(videoStartTime.Value - minStartTime.Value);                              infoToUpdate.VideoStream.VideoMetadata.StartTimeTs = videoStartTimeTs.Value - minStartTimeTs.Value;                          }                          if (infoToUpdate.HasAudio)                          {                              infoToUpdate.AudioStream.AudioMetadata.StartTime = TimeSpan.FromTicks(audioStartTime.Value - minStartTime.Value);                              infoToUpdate.AudioStream.AudioMetadata.StartTimeTs = audioStartTimeTs.Value - minStartTimeTs.Value;                          }                      }                      break;                  case AvoidNegativeTimestampsType.MakeZero:                      if (minStartTimeTs != 0)                      {                          if (infoToUpdate.HasVideo)                          {                              infoToUpdate.VideoStream.VideoMetadata.StartTime = TimeSpan.FromTicks(videoStartTime.Value - minStartTime.Value);                              infoToUpdate.VideoStream.VideoMetadata.StartTimeTs = videoStartTimeTs.Value - minStartTimeTs.Value;                          }                          if (infoToUpdate.HasAudio)                          {                              infoToUpdate.AudioStream.AudioMetadata.StartTime = TimeSpan.FromTicks(audioStartTime.Value - minStartTime.Value);                              infoToUpdate.AudioStream.AudioMetadata.StartTimeTs = audioStartTimeTs.Value - minStartTimeTs.Value;                          }                      }                      break;              }
