Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,ValidateNumerics,Cyclomatic complexity of the method is 9
Long Identifier,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,ValidateNumerics,The length of the parameter decimalRepresentationOfValidate is 31.
Long Statement,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,Validate,The length of the statement  "            return validateAttributes == null || !validateAttributes.Any() || validateAttributes.All(va => ValidateSingle(propertyInfo' va' value)); " is 136.
Long Statement,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,ValidateNumerics,The length of the statement  "            throw new InvalidOperationException(string.Format("Validation for \"{0}\" of type \"{1}\"' is not valid for numeric types."' propertyInfo.Name' validate.Op)); " is 158.
Long Statement,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,ValidateNonNumerics,The length of the statement  "            throw new InvalidOperationException(string.Format("Validation for \"{0}\" of type \"{1}\"' is not valid for non numeric types."' propertyInfo.Name' validate.Op)); " is 162.
Long Statement,Hudl.FFmpeg.Collections,ForStreamCollection<TCollection>,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Collections\ForStreamCollection.cs,Add,The length of the statement  "                throw new InvalidOperationException(string.Format("A member '{0}' already exists in the collection."' applierType.Name)); " is 121.
Long Statement,Hudl.FFmpeg.Filters.Serialization,FilterSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Filters\Serialization\FilterSerializerAttributeParser.cs,FillFilterAttribute,The length of the statement  "                throw new Exception(string.Format("IFilter type of \"{0}\"' does not contain the FilterAttribute and must."' filterType.Name)); " is 127.
Long Statement,Hudl.FFmpeg.Filters.Serialization,FilterSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Filters\Serialization\FilterSerializerAttributeParser.cs,FillFilterParameterAttributes,The length of the statement  "                var filterPropertyFormattedValue = RunFilterSerializationFormat(filterParameterAttribute' filterType' propertyInfo' value); " is 123.
Long Statement,Hudl.FFmpeg.Filters.Serialization,FilterSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Filters\Serialization\FilterSerializerAttributeParser.cs,RunFilterSerializationValidation,The length of the statement  "                throw new InvalidOperationException(string.Format("IFilter type of \"{0}\" parameter \"{1}\" has an invalid value of \"{2}\"."' filterType.Name' propertyInfo.Name' value)); " is 172.
Long Statement,Hudl.FFmpeg.Filters.Serialization,FilterSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Filters\Serialization\FilterSerializerAttributeParser.cs,RunFilterSerializationFormat,The length of the statement  "                return Decimal.TryParse(value.ToString()' out decValue) ? decValue.ToString(CultureInfo.InvariantCulture) : value.ToString(); " is 125.
Long Statement,Hudl.FFmpeg.Filters.Serialization,FilterSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Filters\Serialization\FilterSerializerAttributeParser.cs,RunFilterSerializationFormat,The length of the statement  "                throw new Exception(string.Format("IFilter type of \"{0}\" parameter \"{1}\"' Formatter must be of type IFilterParameterFormatter."' filterType.Name' propertyInfo.Name)); " is 170.
Long Statement,Hudl.FFmpeg.Settings.Utility,SettingsUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Settings\Extensions\SettingsExtensions.cs,GetSettingsAttribute,The length of the statement  "                throw new InvalidOperationException(string.Format("ISetting \"{0}\"' does not include the SettingAttribute."' setting.GetType().Name)); " is 135.
Long Statement,Hudl.FFmpeg.Settings.Serialization,SettingSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Settings\Serialization\SettingSerializerAttributeParser.cs,FillSettingAttribute,The length of the statement  "                throw new Exception(string.Format("ISetting type of \"{0}\"' does not contain the FilterAttribute and must."' settingParameter.Name)); " is 134.
Long Statement,Hudl.FFmpeg.Settings.Serialization,SettingSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Settings\Serialization\SettingSerializerAttributeParser.cs,FillSettingParameterAttributes,The length of the statement  "                var settingPropertyFormattedValue = RunSettingSerializationFormat(settingParameterAttribute' settingType' propertyInfo' settingPropertyValue); " is 142.
Long Statement,Hudl.FFmpeg.Settings.Serialization,SettingSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Settings\Serialization\SettingSerializerAttributeParser.cs,RunSettingSerializationValidation,The length of the statement  "                throw new InvalidOperationException(string.Format("ISetting type of \"{0}\" parameter \"{1}\" has an invalid value of \"{2}\"."' filterType.Name' propertyInfo.Name' value)); " is 173.
Long Statement,Hudl.FFmpeg.Settings.Serialization,SettingSerializerAttributeParser,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Settings\Serialization\SettingSerializerAttributeParser.cs,RunSettingSerializationFormat,The length of the statement  "                throw new Exception(string.Format("ISetting type of \"{0}\" parameter \"{1}\"' Formatter must be of type IFormatter."' filterType.Name' propertyInfo.Name)); " is 156.
Empty Catch Block,Hudl.FFmpeg.Command.StreamReaders,StandardErrorAsyncStreamReader,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Command\StreamReaders\StandardErrorAsyncStreamReader.cs,AsyncStdErrorMonitor,The method has an empty catch block.
Empty Catch Block,Hudl.FFmpeg.Command.StreamReaders,StandardOutputAsyncStreamReader,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Command\StreamReaders\StandardOutputAsyncStreamReader.cs,AsyncStdErrorMonitor,The method has an empty catch block.
Magic Number,Hudl.FFmpeg.Command.Models,FFCommandBuilderBase,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Command\Models\FFcommandBuilderBase.cs,FFCommandBuilderBase,The following statement contains a magic number: BuilderBase = new StringBuilder(100);
Magic Number,Hudl.FFmpeg.Command.StreamReaders,BaseStandardStreamReader,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Command\StreamReaders\BaseStandardStreamReader.cs,Stop,The following statement contains a magic number: _stopSignal.WaitOne(1000);
Magic Number,Hudl.FFmpeg.Command.StreamReaders,BaseStandardStreamReader,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Command\StreamReaders\BaseStandardStreamReader.cs,HandleDataReceived,The following statement contains a magic number: newBuilder.Append(OutputBuilder.ToString()' OutputBuilderLimit / 2' OutputBuilderLimit / 2);
Magic Number,Hudl.FFmpeg.Command.StreamReaders,BaseStandardStreamReader,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Command\StreamReaders\BaseStandardStreamReader.cs,HandleDataReceived,The following statement contains a magic number: newBuilder.Append(OutputBuilder.ToString()' OutputBuilderLimit / 2' OutputBuilderLimit / 2);
Magic Number,Hudl.FFmpeg.Extensions,ProcessExtensions,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Extensions\ProcessExtensions.cs,WaitForProcessStart,The following statement contains a magic number: var processTimeout = TimeSpan.FromMilliseconds(timeoutMilliseconds ?? 10000);
Magic Number,Hudl.FFmpeg.Extensions,ProcessExtensions,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Extensions\ProcessExtensions.cs,WaitForProcessStart,The following statement contains a magic number: Thread.Sleep(20.Milliseconds());
Magic Number,Hudl.FFmpeg.Extensions,ProcessExtensions,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Extensions\ProcessExtensions.cs,WaitForProcessStop,The following statement contains a magic number: process.WaitForExit((int)5.Seconds().TotalMilliseconds);
Magic Number,Hudl.FFmpeg.Filters.Serialization,FilterSerializerWriter,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Filters\Serialization\FilterSerializerWriter.cs,Write,The following statement contains a magic number: var parameterBuilder = new StringBuilder(75);
Magic Number,Hudl.FFmpeg.Formatters.Utility,FormattingUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Formatters\Utility\FormattingUtility.cs,Duration,The following statement contains a magic number: return string.Format("{0}:{1}:{2}.{3}"'                                   timespan.Hours.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                   timespan.Minutes.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                   timespan.Seconds.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                    timespan.Milliseconds.ToString(CultureInfo.InvariantCulture));
Magic Number,Hudl.FFmpeg.Formatters.Utility,FormattingUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Formatters\Utility\FormattingUtility.cs,Duration,The following statement contains a magic number: return string.Format("{0}:{1}:{2}.{3}"'                                   timespan.Hours.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                   timespan.Minutes.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                   timespan.Seconds.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                    timespan.Milliseconds.ToString(CultureInfo.InvariantCulture));
Magic Number,Hudl.FFmpeg.Formatters.Utility,FormattingUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Formatters\Utility\FormattingUtility.cs,Duration,The following statement contains a magic number: return string.Format("{0}:{1}:{2}.{3}"'                                   timespan.Hours.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                   timespan.Minutes.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                   timespan.Seconds.ToString(CultureInfo.InvariantCulture).PadLeft(2' '0')'                                    timespan.Milliseconds.ToString(CultureInfo.InvariantCulture));
Magic Number,Hudl.FFmpeg.Settings.Serialization,SettingSerializerWriter,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Settings\Serialization\SettingSerializerWriter.cs,Write,The following statement contains a magic number: var parameterBuilder = new StringBuilder(75);
Missing Default,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,ValidateNumerics,The following switch statement is missing a default case: switch (validate.Op)              {                  case LogicalOperators.Equals:                      return decimalRepresentationOfObject == decimalRepresentationOfValidate;                  case LogicalOperators.NotEquals:                      return decimalRepresentationOfObject != decimalRepresentationOfValidate;                  case LogicalOperators.LesserThan:                      return decimalRepresentationOfObject < decimalRepresentationOfValidate;                  case LogicalOperators.LesserThanOrEqual:                      return decimalRepresentationOfObject <= decimalRepresentationOfValidate;                  case LogicalOperators.GreaterThan:                      return decimalRepresentationOfObject > decimalRepresentationOfValidate;                  case LogicalOperators.GreaterThanOrEqual:                      return decimalRepresentationOfObject >= decimalRepresentationOfValidate;                  case LogicalOperators.IsNotOneOf:                      return !validate.Value.Any(v =>                          {                              if (!decimal.TryParse(validate.Value.First().ToString()' out decimalRepresentationOfObject))                              {                                  return false;                              }                                return decimalRepresentationOfObject == decimalRepresentationOfValidate;                          });                  case LogicalOperators.IsOneOf:                      return validate.Value.Any(v =>                          {                              if (!decimal.TryParse(validate.Value.First().ToString()' out decimalRepresentationOfObject))                              {                                  return false;                              }                                return decimalRepresentationOfObject == decimalRepresentationOfValidate;                          });              }
Missing Default,Hudl.FFmpeg.Attributes.Utility,ValidationUtility,D:\research\architectureSmells\repos\hudl_HudlFfmpeg\Hudl.FFmpeg.Core\Attributes\Utility\ValidationUtility.cs,ValidateNonNumerics,The following switch statement is missing a default case: switch (validate.Op)              {                  case LogicalOperators.Equals:                      return value.Equals(validate.Value.First());                   case LogicalOperators.NotEquals:                      return !value.Equals(validate.Value.First());                  case LogicalOperators.IsOneOf:                      return validate.Value.Any(value.Equals);                  case LogicalOperators.IsNotOneOf:                      return !validate.Value.Any(value.Equals);              }
