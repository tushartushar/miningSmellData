Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByIntIds,The length of the statement  "			Assert.That(customers.ToList().ConvertAll(x => x.Id)' Is.EquivalentTo(googleFounderIds.ToList().ConvertAll(x => (long)x))); " is 123.
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OPagingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oPagingTests.cs,Paging_GetAll_starting_at_0_limit_2,The following statement contains a magic number: var customers = provider.GetAll<Customer>(new PagingCriteria(0' 2));
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OPagingTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oPagingTests.cs,Paging_GetAll_starting_at_0_limit_2,The following statement contains a magic number: Assert.That(customers.Count' Is.EqualTo(2));
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OAdvancedQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oAdvancedQueryTests.cs,GetByIds_using_ArrayOfIntId,The following statement contains a magic number: var ids = new ArrayOfIntId(new[] {1' 2' 3});
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OAdvancedQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oAdvancedQueryTests.cs,GetByIds_using_ArrayOfIntId,The following statement contains a magic number: var ids = new ArrayOfIntId(new[] {1' 2' 3});
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicWriteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicWriteTests.cs,Add_Update_and_Store,The following statement contains a magic number: var newCustomer = new Customer(100' "New"' "Customer");
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicWriteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicWriteTests.cs,Add_Update_and_Store,The following statement contains a magic number: var storedCustomer = provider.GetById<Customer>(100);
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicWriteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicWriteTests.cs,Add_Update_and_Store,The following statement contains a magic number: var modifiedCustomer = provider.GetById<Customer>(100);
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicWriteTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicWriteTests.cs,Add_Update_and_Store,The following statement contains a magic number: var deletedCustomer = provider.GetById<Customer>(100);
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oTestBase.cs,CreateTestDatabase,The following statement contains a magic number: Customers = new[] {  				new Customer(1' "Steve"' "Jobs")'  				new Customer(2' "Sergey"' "Brin")'  				new Customer(3' "Larry"' "Page")'  				new Customer(4' "Eric"' "Schmidt")'  				new Customer(5' "Bill"' "Gates")'  				new Customer(6' "Bram"' "Cohen")'  				new Customer(7' "Mike"' "Morhaime")'  				new Customer(8' "Jimmy"' "Wales")'  				new Customer(9' "Ray"' "Ozzie")'  				new Customer(10' "Jeff"' "Bezos")'  				new Customer(11' "Steve"' "Ballmer")'  				new Customer(12' "Steve"' "Wozniak")'  				new PreferredCustomer(13' "Preferred"' "Customer")'  			};
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByIntId,The following statement contains a magic number: var customer = provider.GetById<Customer>(5);
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByLongId,The following statement contains a magic number: var customer = provider.GetById<Customer>((long)5);
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByIntId_from_super_type_without_id_field,The following statement contains a magic number: var preferredCustomer = provider.GetById<PreferredCustomer>(13);
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByIntId_from_super_type_without_id_field,The following statement contains a magic number: Assert.That(preferredCustomer.Id' Is.EqualTo(13));
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Longs_and_ints_with_the_same_value_are_equal,The following statement contains a magic number: int intVal = 5;
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: int intVal = 5;
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: long longVal = 5;
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: long[] longValues = new long[] { 3' 4' 5 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: long[] longValues = new long[] { 3' 4' 5 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: long[] longValues = new long[] { 3' 4' 5 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: int[] intValues = new int[] { 3' 4' 5 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: int[] intValues = new int[] { 3' 4' 5 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,Testing_int_and_long_values_in_a_collection,The following statement contains a magic number: int[] intValues = new int[] { 3' 4' 5 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetById_that_does_not_exist_returns_null,The following statement contains a magic number: const long nonExistantUserId = 100;
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByIntIds,The following statement contains a magic number: var googleFounderIds = new[] { 2' 3 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByIntIds,The following statement contains a magic number: var googleFounderIds = new[] { 2' 3 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByLongIds,The following statement contains a magic number: var googleFounderIds = new long[] { 2' 3 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,GetByLongIds,The following statement contains a magic number: var googleFounderIds = new long[] { 2' 3 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,FindByValues,The following statement contains a magic number: var googleFounderIds = new long[] { 2' 3 };
Magic Number,ServiceStack.DataAccess.Db4oProvider.Tests,Db4OBasicQueryTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Extras\src\ServiceStack.DataAccess\ServiceStack.DataAccess.Db4oProvider.Tests\Db4oBasicQueryTests.cs,FindByValues,The following statement contains a magic number: var googleFounderIds = new long[] { 2' 3 };
