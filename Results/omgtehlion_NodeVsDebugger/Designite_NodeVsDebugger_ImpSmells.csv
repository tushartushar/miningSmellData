Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,ConstructDebugPropertyInfo,Cyclomatic complexity of the method is 12
Complex Method,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,GetFrameInfo,Cyclomatic complexity of the method is 10
Complex Method,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,GetArgumentFormat,Cyclomatic complexity of the method is 8
Complex Method,NodeVsDebugger,AD7Thread,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Thread.cs,GetThreadProperties,Cyclomatic complexity of the method is 7
Complex Method,NodeVsDebugger,NodeVsDebuggerRegistrationAttribute,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\NodeVsDebuggerRegistrationAttribute.cs,Register,Cyclomatic complexity of the method is 8
Complex Method,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,ParseConfig,Cyclomatic complexity of the method is 15
Complex Method,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,dbg_EventReceived,Cyclomatic complexity of the method is 8
Complex Method,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,ReadLoop,Cyclomatic complexity of the method is 9
Complex Method,NodeVsDebugger,V8DebugSession,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8DebugSession.cs,connection_DataReceived,Cyclomatic complexity of the method is 9
Complex Method,NodeVsDebugger,Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\Property.cs,FillValue,Cyclomatic complexity of the method is 32
Long Parameter List,NodeVsDebugger,AD7DocumentContext,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7DocumentContext.cs,AD7DocumentContext,The method has 5 parameters.
Long Parameter List,NodeVsDebugger,AD7DocumentContext,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7DocumentContext.cs,Compare,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7Engine,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Engine.cs,Attach,The method has 5 parameters.
Long Parameter List,NodeVsDebugger,AD7Engine,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Engine.cs,LaunchSuspended,The method has 13 parameters.
Long Parameter List,NodeVsDebugger,AD7Engine,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Engine.cs,EnumCodePaths,The method has 6 parameters.
Long Parameter List,NodeVsDebugger,AD7Engine,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Engine.cs,WatchForExpressionEvaluationOnThread,The method has 5 parameters.
Long Parameter List,NodeVsDebugger,AD7Engine,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Engine.cs,WatchForThreadStep,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7Engine,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Engine.cs,SetSymbolLoadState,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7ProgramProvider,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7ProgramProvider.cs,GetProviderProcessData,The method has 5 parameters.
Long Parameter List,NodeVsDebugger,AD7ProgramProvider,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7ProgramProvider.cs,GetProviderProgramNode,The method has 6 parameters.
Long Parameter List,NodeVsDebugger,AD7ProgramProvider,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7ProgramProvider.cs,WatchForProviderEvents,The method has 6 parameters.
Long Parameter List,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,EnumChildren,The method has 7 parameters.
Long Parameter List,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,GetPropertyInfo,The method has 6 parameters.
Long Parameter List,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,SetValueAsReference,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,EvaluateSync,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,GetCustomViewerList,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,SetValueAsStringWithError,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,EnumProperties,The method has 6 parameters.
Long Parameter List,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,ParseText,The method has 6 parameters.
Long Parameter List,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,DebuggedProcess,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,FetchFrames,The method has 4 parameters.
Long Parameter List,NodeVsDebugger,Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\Property.cs,Property,The method has 4 parameters.
Long Statement,NodeVsDebugger,AD7BoundBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7BoundBreakpoint.cs,Enable,The length of the statement  "		// A production debug engine would remove or add the underlying int3 here. The sample engine does not support true disabling " is 124.
Long Statement,NodeVsDebugger,AD7Module,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Module.cs,GetSymbolInfo,The length of the statement  "	// This engine only supports loading symbols at the location specified in the binary's symbol path location in the PE file and " is 126.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,Bind,The length of the statement  "			// The breakpoint could not be bound. This may occur for many reasons such as an invalid location' an invalid expression' etc... " is 128.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,Bind,The length of the statement  "			// The sample engine does not support this' but a real world engine will want to send an instance of IDebugBreakpointErrorEvent2 to the " is 135.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,Bind,The length of the statement  "			// UI and return a valid instance of IDebugErrorBreakpoint2 from IDebugPendingBreakpoint2::EnumErrorBreakpoints. The debugger will then " is 135.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,CanBind,The length of the statement  "		// The sample engine does not support this' but a real world engine will want to return a valid enumeration of IDebugErrorBreakpoint2. " is 134.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,EnumErrorBreakpoints,The length of the statement  "	// Called when a pending breakpoint could not be bound. This may occur for many reasons such as an invalid location' an invalid expression' etc... " is 146.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,EnumErrorBreakpoints,The length of the statement  "	// The sample engine does not support this' but a real world engine will want to send an instance of IDebugBreakpointErrorEvent2 to the " is 135.
Long Statement,NodeVsDebugger,AD7PendingBreakpoint,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7PendingBreakpoint.cs,EnumErrorBreakpoints,The length of the statement  "	// UI and return a valid enumeration of IDebugErrorBreakpoint2 from IDebugPendingBreakpoint2::EnumErrorBreakpoints. The debugger will then " is 138.
Long Statement,NodeVsDebugger,AD7Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Property.cs,EnumChildren,The length of the statement  "		ppEnum = new AD7PropertyEnum (m_variableInformation.GetChildren ().OrderBy (v => v.m_name' comparer).Select (v => new AD7Property (v).ConstructDebugPropertyInfo (dwFields))); " is 174.
Long Statement,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,GetFrameInfo,The length of the statement  "		// If there is source information' construct a string that contains the module name' function name' and optionally argument names and values. " is 141.
Long Statement,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,GetFrameInfo,The length of the statement  "				funcName.Append (string.Join ("' "' m_parameters.Select (p => string.Format (format' p.m_typeName' string.IsNullOrEmpty (p.m_name) ? "?" : p.m_name' p.m_value)))); " is 163.
Long Statement,NodeVsDebugger,AD7StackFrame,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7StackFrame.cs,EnumProperties,The length of the statement  "		if (guidFilter == AD7Guids.guidFilterLocalsPlusArgs || guidFilter == AD7Guids.guidFilterAllLocalsPlusArgs || guidFilter == AD7Guids.guidFilterAllLocals) { " is 154.
Long Statement,NodeVsDebugger,AD7Thread,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Thread.cs,EnumFrameInfo,The length of the statement  "		enumObject = new AD7FrameInfoEnum (m_debuggedThread.StackFrames.Select (f => new AD7StackFrame (m_engine' this' f).GetFrameInfo (dwFieldSpec)).ToArray ()); " is 155.
Long Statement,NodeVsDebugger,ScriptMapping,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\ScriptMapping.cs,ToLocal,The length of the statement  "	return localRemote.Where (mapping => remotePath.StartsWith (mapping.Item2)).Select (mapping => mapping.Item1 + remotePath.Substring (mapping.Item2.Length).Replace ('/'' '\\')).FirstOrDefault (); " is 194.
Long Statement,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,LogMessage,The length of the statement  "	log.WriteRaw ("{\"type\": \"" + direction + "\"' \"at\": \"" + log.Elapsed.ToString (CultureInfo.InvariantCulture) + "\"' \"body\": " + body + "}'"); " is 149.
Empty Catch Block,NodeVsDebugger,TempScriptCache,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\TempScriptCache.cs,TempScriptCache,The method has an empty catch block.
Empty Catch Block,NodeVsDebugger,TempScriptCache,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\TempScriptCache.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,NodeVsDebugger,TempScriptCache,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\TempScriptCache.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,OnClose,The method has an empty catch block.
Empty Catch Block,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,Close,The method has an empty catch block.
Magic Number,NodeVsDebugger,AD7Thread,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Thread.cs,GetThreadProperties100,The following statement contains a magic number: if (hRes == Constants.S_OK && dwFields != (uint)dwFields90) {  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME) != 0) {  		// Thread display name is being requested  		props [0].bstrDisplayName = "<thread name>";  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME;  		// Give this display name a higher priority than the default (0)  		// so that it will actually be displayed  		props [0].DisplayNamePriority = 10;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME_PRIORITY;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_CATEGORY) != 0) {  		// Thread category is being requested  		props [0].dwThreadCategory = 0;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_CATEGORY;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_AFFINITY) != 0) {  		// Thread cpu affinity is being requested  		props [0].AffinityMask = 0;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_AFFINITY;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_PRIORITY_ID) != 0) {  		// Thread display name is being requested  		props [0].priorityId = 0;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_PRIORITY_ID;  	}  }  
Magic Number,NodeVsDebugger,AD7Thread,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Thread.cs,GetThreadProperties100,The following statement contains a magic number: if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME) != 0) {  	// Thread display name is being requested  	props [0].bstrDisplayName = "<thread name>";  	props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME;  	// Give this display name a higher priority than the default (0)  	// so that it will actually be displayed  	props [0].DisplayNamePriority = 10;  	props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME_PRIORITY;  }  
Magic Number,NodeVsDebugger,AD7Thread,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\AD7.Impl\AD7Thread.cs,GetThreadProperties100,The following statement contains a magic number: props [0].DisplayNamePriority = 10;  
Magic Number,NodeVsDebugger,NodeVsDebuggerRegistrationAttribute,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\NodeVsDebuggerRegistrationAttribute.cs,Register,The following statement contains a magic number: using (var guid = context.CreateKey (@"AD7Metrics\Engine\" + new Guid (Constants.DebuggerGuid).ToString ("B"))) {  	guid.SetValue (""' Constants.DebuggerIdString);  	guid.SetValue ("CLSID"' typeof(AD7Engine).GUID.ToString ("B"));  	guid.SetValue ("ProgramProvider"' typeof(AD7ProgramProvider).GUID.ToString ("B"));  	guid.SetValue ("Attach"' 1);  	guid.SetValue ("AddressBP"' 0);  	guid.SetValue ("AutoSelectPriority"' 4);  	//engineKey.SetValue("Exceptions"' 1);  	//engineKey.SetValue("RemoteDebugging"' 1);  	guid.SetValue ("CallstackBP"' 1);  	guid.SetValue ("Name"' Constants.EngineName);  	guid.SetValue ("PortSupplier"' "{708C1ECA-FF48-11D2-904F-00C04FA302A1}");  	guid.SetValue ("AlwaysLoadProgramProviderLocal"' 1);  	using (var incompat = guid.CreateSubkey ("IncompatibleList")) {  		incompat.SetValue ("guidCOMPlusNativeEng"' "{92EF0900-2251-11D2-B72E-0000F87572EF}");  		incompat.SetValue ("guidCOMPlusOnlyEng"' "{449EC4CC-30D2-4032-9256-EE18EB41B62B}");  		incompat.SetValue ("guidNativeOnlyEng"' "{449EC4CC-30D2-4032-9256-EE18EB41B62B}");  		incompat.SetValue ("guidScriptEng"' "{F200A7E7-DEA5-11D0-B854-00A0244A1DE2}");  	}  }  
Magic Number,NodeVsDebugger,NodeVsDebuggerRegistrationAttribute,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\NodeVsDebuggerRegistrationAttribute.cs,Register,The following statement contains a magic number: guid.SetValue ("AutoSelectPriority"' 4);  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,RandomizePort,The following statement contains a magic number: while (port <= 1024 || port >= 65536) {  	var listener = new TcpListener (IPAddress.Loopback' 0);  	listener.Start ();  	port = ((IPEndPoint)listener.LocalEndpoint).Port;  	listener.Stop ();  }  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,RandomizePort,The following statement contains a magic number: while (port <= 1024 || port >= 65536) {  	var listener = new TcpListener (IPAddress.Loopback' 0);  	listener.Start ();  	port = ((IPEndPoint)listener.LocalEndpoint).Port;  	listener.Stop ();  }  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,Terminate,The following statement contains a magic number: dbg.RequestSync ("evaluate"' new {  	expression = "process.exit(1);"'  	global = true  }' 500);  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,DoStackWalk,The following statement contains a magic number: while (frameId < totalFrames && DateTime.Now.Ticks < maxTicks) {  	if (!FetchFrames (debuggedThread' frameId' 5' ref totalFrames))  		break;  	frameId += 5;  }  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,DoStackWalk,The following statement contains a magic number: while (frameId < totalFrames && DateTime.Now.Ticks < maxTicks) {  	if (!FetchFrames (debuggedThread' frameId' 5' ref totalFrames))  		break;  	frameId += 5;  }  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,DoStackWalk,The following statement contains a magic number: if (!FetchFrames (debuggedThread' frameId' 5' ref totalFrames))  	break;  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,DoStackWalk,The following statement contains a magic number: frameId += 5;  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,GetLocalFile,The following statement contains a magic number: if (fetchIfNotExists && (script.LocalFile == null || !File.Exists (script.LocalFile))) {  	// fetch actual file  	var evt = new ManualResetEvent (false);  	dbg.Request ("scripts"' new {  		types = 7'  		ids = new[] {  			script.Id  		}'  		includeSource = true  	}' resp => {  		var body = resp ["body"] [0];  		tempScriptCache.SaveScript (script' (string)body ["source"]);  		evt.Set ();  	});  	evt.WaitOne (200);  }  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,GetLocalFile,The following statement contains a magic number: if (fetchIfNotExists && (script.LocalFile == null || !File.Exists (script.LocalFile))) {  	// fetch actual file  	var evt = new ManualResetEvent (false);  	dbg.Request ("scripts"' new {  		types = 7'  		ids = new[] {  			script.Id  		}'  		includeSource = true  	}' resp => {  		var body = resp ["body"] [0];  		tempScriptCache.SaveScript (script' (string)body ["source"]);  		evt.Set ();  	});  	evt.WaitOne (200);  }  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,GetLocalFile,The following statement contains a magic number: dbg.Request ("scripts"' new {  	types = 7'  	ids = new[] {  		script.Id  	}'  	includeSource = true  }' resp => {  	var body = resp ["body"] [0];  	tempScriptCache.SaveScript (script' (string)body ["source"]);  	evt.Set ();  });  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,GetLocalFile,The following statement contains a magic number: evt.WaitOne (200);  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,WaitForAttach,The following statement contains a magic number: if (!attachEvent.WaitOne (10 * 1000))  	throw new Exception ("cannot attach");  
Magic Number,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,WaitForAttach,The following statement contains a magic number: if (!attachEvent.WaitOne (10 * 1000))  	throw new Exception ("cannot attach");  
Magic Number,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,ReadLoop,The following statement contains a magic number: if (l == "") {  	var len = int.Parse (currentHeaders ["Content-Length"]);  	var buff = new char[len];  	var read = 0;  	try {  		while (read < len)  			read += reader.Read (buff' read' len - read);  	} catch (IOException ex) {  		CloseReason = ex.ToString ();  		Close ();  		return false;  	}  	var recoded = Encoding.UTF8.GetString (latin1.GetBytes (buff));  	var body = (JObject)JsonConvert.DeserializeObject (recoded);  	OnReceived (currentHeaders' body);  	// done  	currentHeaders.Clear ();  } else {  	if (isFirstMsg && l == "Remote debugging session already active") {  		CloseReason = l;  		Close ();  		return false;  	}  	var parts = l.Split (new[] {  		':'  	}' 2);  	if (parts.Length != 2)  		throw new Exception ("Invalid header: " + l);  	currentHeaders.Add (parts [0]' parts [1].Trim ());  }  
Magic Number,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,ReadLoop,The following statement contains a magic number: if (l == "") {  	var len = int.Parse (currentHeaders ["Content-Length"]);  	var buff = new char[len];  	var read = 0;  	try {  		while (read < len)  			read += reader.Read (buff' read' len - read);  	} catch (IOException ex) {  		CloseReason = ex.ToString ();  		Close ();  		return false;  	}  	var recoded = Encoding.UTF8.GetString (latin1.GetBytes (buff));  	var body = (JObject)JsonConvert.DeserializeObject (recoded);  	OnReceived (currentHeaders' body);  	// done  	currentHeaders.Clear ();  } else {  	if (isFirstMsg && l == "Remote debugging session already active") {  		CloseReason = l;  		Close ();  		return false;  	}  	var parts = l.Split (new[] {  		':'  	}' 2);  	if (parts.Length != 2)  		throw new Exception ("Invalid header: " + l);  	currentHeaders.Add (parts [0]' parts [1].Trim ());  }  
Magic Number,NodeVsDebugger,V8Connection,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\V8Connection.cs,ReadLoop,The following statement contains a magic number: if (parts.Length != 2)  	throw new Exception ("Invalid header: " + l);  
Magic Number,NodeVsDebugger,WorkerThread,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\WorkerThread.cs,ThreadFunc,The following statement contains a magic number: while (!fQuit) {  	//if ((m_debuggedProcess != null) && (m_debuggedProcess.IsPumpingDebugEvents)) {  	//    m_debuggedProcess.WaitForAndDispatchDebugEvent();  	//}  	// If the other thread is dispatching a command' execute it now.  	var fReceivedCommand = m_opSet.WaitOne (new TimeSpan (0' 0' 0' 0' 100)' false);  	if (fReceivedCommand) {  		if (m_fSyncOp) {  			try {  				m_op ();  			} catch (Exception opException) {  				m_opException = opException;  			}  		} else {  			m_op ();  		}  		// This lock ensures the m_op operations and the manual reset events are accessed atomicly  		lock (this) {  			fQuit = (m_op == m_quitOperation);  			if (!fQuit) {  				m_op = null;  			}  			m_opSet.Reset ();  			m_opComplete.Set ();  		}  	}  }  
Magic Number,NodeVsDebugger,Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\Property.cs,DetectStringLength,The following statement contains a magic number: if (len != null) {  	FullStringLength = (int)len;  } else {  	if (s.Length == 0)  		return;  	if (s [s.Length - 1] == ')') {  		const string prefix = "... (length: ";  		var idx = s.IndexOf (prefix' s.Length - prefix.Length - 7' StringComparison.Ordinal);  		if (idx != -1) {  			var sLen = s.Substring (idx + prefix.Length).TrimEnd (')');  			int iLen;  			if (int.TryParse (sLen' out iLen)) {  				if (iLen > idx)  					FullStringLength = iLen;  			}  		}  	}  }  
Magic Number,NodeVsDebugger,Property,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\Property.cs,DetectStringLength,The following statement contains a magic number: if (s [s.Length - 1] == ')') {  	const string prefix = "... (length: ";  	var idx = s.IndexOf (prefix' s.Length - prefix.Length - 7' StringComparison.Ordinal);  	if (idx != -1) {  		var sLen = s.Substring (idx + prefix.Length).TrimEnd (')');  		int iLen;  		if (int.TryParse (sLen' out iLen)) {  			if (iLen > idx)  				FullStringLength = iLen;  		}  	}  }  
Missing Default,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,dbg_EventReceived,The following switch statement is missing a default case: switch (evt) {  case "break":  case "exception":  	m_pollThread.RunOperation (() => Callback.OnAsyncBreakComplete (Threads [0]));  	break;  case "afterCompile":  	var mod = JsonToScript ((JObject)body ["script"]);  	Callback.OnModuleLoad (mod);  	break;  }  
Missing Default,NodeVsDebugger,DebuggedProcess,D:\newReposJune17\omgtehlion_NodeVsDebugger\NodeVsDebugger\DebuggedProcess.cs,Step,The following switch statement is missing a default case: switch (sk) {  case Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND.STEP_INTO:  	stepaction = "in";  	break;  case Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND.STEP_OUT:  	stepaction = "out";  	break;  }  
