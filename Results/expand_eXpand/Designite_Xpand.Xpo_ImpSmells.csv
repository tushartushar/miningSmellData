Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Xpand.Xpo.Collections,ManyToManyCollectionHelper<T>,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Collections\ManyToManyCollectionHelper.cs,collection_CollectionChanged,Cyclomatic complexity of the method is 13
Complex Method,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetTypeFromString,Cyclomatic complexity of the method is 15
Complex Method,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,Cyclomatic complexity of the method is 15
Complex Method,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetTypeFromString,Cyclomatic complexity of the method is 15
Complex Method,Xpand.Xpo,ExpressionVisitor,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ExpressionVisitor.cs,Visit,Cyclomatic complexity of the method is 16
Complex Method,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,ChangeType,Cyclomatic complexity of the method is 20
Complex Method,Xpand.Xpo.Filtering,CriteriaOperatorExtractor,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Filtering\CriteriaOperatorExtractor.cs,Extract,Cyclomatic complexity of the method is 11
Long Parameter List,Xpand.Xpo,IXPSimpleObjectExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\IXPSimpleObjectExtensions.cs,CreateCustomMember,The method has 5 parameters. Parameters: classInfo' propertyName' propertyType' nonPersistent' attributes
Long Parameter List,Xpand.Xpo.MetaData,XpandCodeMemberInfo,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\MetaData\XpandCodeMemberInfo.cs,XpandCodeMemberInfo,The method has 7 parameters. Parameters: owner' propertyName' propertyType' referenceType' nonPersistent' nonPublic' callBack
Long Parameter List,Xpand.Xpo.MetaData,XpandCustomMemberInfo,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\MetaData\XpandCustomMemberInfo.cs,XpandCustomMemberInfo,The method has 6 parameters. Parameters: owner' propertyName' propertyType' referenceType' nonPersistent' nonPublic
Long Parameter List,Xpand.Xpo.MetaData,XpandCustomMemberInfo,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\MetaData\XpandCustomMemberInfo.cs,XpandCustomMemberInfo,The method has 7 parameters. Parameters: owner' propertyName' propertyType' referenceType' nonPersistent' nonPublic' readOnly
Long Parameter List,Xpand.Xpo.MetaData,XpandProxyCustomMemberInfo,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\MetaData\XpandProxyCustomMemberInfo.cs,XpandProxyCustomMemberInfo,The method has 6 parameters. Parameters: owner' propertyName' propertyType' referenceType' nonPersistent' nonPublic
Long Parameter List,Xpand.Xpo.MetaData,XpandProxyCustomMemberInfo,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\MetaData\XpandProxyCustomMemberInfo.cs,XpandProxyCustomMemberInfo,The method has 7 parameters. Parameters: owner' propertyName' propertyType' referenceType' nonPersistent' nonPublic' readOnly
Long Identifier,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateForeignKey,The length of the parameter throwUnableToCreateDBObjectException is 36.
Long Identifier,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateColumn,The length of the parameter throwUnableToCreateDBObjectException is 36.
Long Identifier,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateForeignKey,The length of the parameter throwUnableToCreateDBObjectException is 36.
Long Identifier,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateColumn,The length of the parameter throwUnableToCreateDBObjectException is 36.
Long Identifier,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateColumnCore,The length of the parameter throwUnableToCreateDBObjectException is 36.
Long Identifier,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CallSchemaUpdateMethod,The length of the parameter throwUnableToCreateDBObjectException is 36.
Long Identifier,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetDataStores,The length of the parameter dataStoreManagerSimpleDataLayer is 31.
Long Identifier,Xpand.Xpo.DB,DataStoreProxy,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreProxy.cs,UpdateSchema,The length of the parameter dontCreateIfFirstTableNotExist is 30.
Long Identifier,Xpand.Xpo.DB,DataStoreUpdateSchemaEventArgs,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreUpdateSchemaEventArgs.cs,DataStoreUpdateSchemaEventArgs,The length of the parameter dontCreateIfFirstTableNotExist is 30.
Long Identifier,Xpand.Xpo.DB,ISchemaUpdater,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\IDataStoreProxy.cs,Update,The length of the parameter dataStoreUpdateSchemaEventArgs is 30.
Long Identifier,Xpand.Xpo.DB,SchemaColumnSizeUpdater,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\SchemaColumnSizeUpdater.cs,Update,The length of the parameter dataStoreUpdateSchemaEventArgs is 30.
Long Identifier,Xpand.Xpo.DB,XpoServerId,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\XpoServerId.cs,,The length of the parameter dataLayerForCachedServerPrefix is 30.
Long Identifier,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,FindObject,The length of the parameter persistentCriteriaEvaluationBehavior is 36.
Long Identifier,Xpand.Xpo,XpandCustomObject,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandCustomObject.cs,,The length of the parameter _isDefaultPropertyAttributeInit is 31.
Long Identifier,Xpand.Xpo,XpandCustomObject,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandCustomObject.cs,,The length of the parameter CancelTriggerObjectChangedName is 30.
Long Statement,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetColumns,The length of the statement  "            Query query = schema == string.Empty ? new Query("select COLUMN_NAME' DATA_TYPE' CHARACTER_MAXIMUM_LENGTH from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @p1"' " is 162.
Long Statement,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetColumns,The length of the statement  "                              : new Query("select COLUMN_NAME' DATA_TYPE' CHARACTER_MAXIMUM_LENGTH from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = @p1 and TABLE_SCHEMA = @p2"' " is 148.
Long Statement,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetColumns,The length of the statement  "                                    new QueryParameterCollection(new OperandValue(ComposeSafeTableName(table.Name))' new OperandValue(schema))' new[] { "@p1"' "@p2" }); " is 132.
Long Statement,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetColumns,The length of the statement  "                table.AddColumn(new DBColumn((string)row.Values[0]' false' String.Empty' type == DBColumnType.String ? size : 0' type)); " is 120.
Long Statement,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,UpdateColumnSize,The length of the statement  "                    var actualColumn = actualTable.Columns.Find(col => String.Compare(col.Name' ComposeSafeColumnName(dbColumn.Name)' StringComparison.OrdinalIgnoreCase) == 0); " is 156.
Long Statement,Xpand.Xpo.ConnectionProviders,DBColumnTypeExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\DBColumnTypeExtensions.cs,GetType,The length of the statement  "            if ((((underlyingNullableType != null && underlyingNullableType == typeof(TimeSpan) || propertyType == typeof(TimeSpan))) && dbColumnType == DBColumnType.Double)) " is 162.
Long Statement,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetColumns,The length of the statement  "            foreach (SelectStatementResultRow row in SelectData(new Query(string.Format(CultureInfo.InvariantCulture' "show columns from `{0}`"' ComposeSafeTableName(table.Name)))).Rows) { " is 176.
Long Statement,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The length of the statement  "            Query query = schema == string.Empty ? new Query("SELECT COLUMN_NAME' DATA_TYPE' CHAR_COL_DECL_LENGTH' DATA_PRECISION' DATA_SCALE from USER_TAB_COLUMNS where TABLE_NAME = :p0"' " is 176.
Long Statement,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The length of the statement  "                              : new Query("SELECT COLUMN_NAME' DATA_TYPE' CHAR_COL_DECL_LENGTH' DATA_PRECISION' DATA_SCALE from ALL_TAB_COLUMNS where OWNER = :p0 and TABLE_NAME = :p1"' " is 154.
Long Statement,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The length of the statement  "                int precision = row.Values[3] != DBNull.Value ? ((IConvertible)row.Values[3]).ToInt32(CultureInfo.InvariantCulture) : 0; " is 120.
Long Statement,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The length of the statement  "                table.AddColumn(new DBColumn((string)row.Values[0]' false' String.Empty' type == DBColumnType.String ? size : 0' type)); " is 120.
Long Statement,Xpand.Xpo.Converters.ValueConverters,DictionaryValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\DictionaryValueConverter.cs,ConvertToStorageType,The length of the statement  "            string s = ((Dictionary<string' string>) value).Aggregate<KeyValuePair<string' string>' string>(null' (current' o) => current + (o.Key + keyDelimeter + o.Value + delimeter)); " is 174.
Long Statement,Xpand.Xpo.Converters.ValueConverters,DictionaryValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\DictionaryValueConverter.cs,ConvertFromStorageType,The length of the statement  "                return split.Select(s => s.Split(keyDelimeter.ToCharArray())).ToDictionary(strings => strings[0].TrimStart('[')' strings => strings.Length == 1 ? null : strings[1].Trim().TrimEnd(']')); " is 185.
Long Statement,Xpand.Xpo.Converters.ValueConverters,XpandUtcDateTimeConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\XpandUtcDateTimeConverter.cs,ConvertFromStorageType,The length of the statement  "            return convertFromStorageType != null && ((DateTime)convertFromStorageType).Date == new DateTime(0001' 1' 1) ? null : convertFromStorageType; " is 141.
Long Statement,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateColumn,The length of the statement  "            CallSchemaUpdateMethod(connectionProviderSql'  sql => CreateColumnCore(xpMemberInfo' throwUnableToCreateDBObjectException' sql' column)'throwUnableToCreateDBObjectException); " is 174.
Long Statement,Xpand.Xpo.DB,DataStoreExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreExtensions.cs,CreateForeighKey,The length of the statement  "                var dbForeignKey = new DBForeignKey(new StringCollection { xpMemberInfo.Name }' xpMemberInfo.ReferenceType.TableName' new StringCollection { xpMemberInfo.ReferenceType.KeyProperty.Name }); " is 188.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetKeyInfo,The length of the statement  "            return dataStoreAttribute == null ? new KeyInfo(false' DefaultDictionaryKey) : new KeyInfo(dataStoreAttribute.IsLegacy' (dataStoreAttribute.DataStoreName ?? dataStoreAttribute.ConnectionString)); " is 195.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetIntermediateTableNames,The length of the statement  "            return classInfo.CollectionProperties.OfType<XPMemberInfo>().Where(info => info.IntermediateClass != null).Select(memberInfo => memberInfo.IntermediateClass.TableName); " is 168.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetXPClassInfo,The length of the statement  "            var xpClassInfos = _reflectionDictionaries.Select(pair => pair.Value).SelectMany(dictionary => dictionary.Classes.OfType<XPClassInfo>()); " is 137.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetConnectionString,The length of the statement  "            IDataStore connectionProvider = XpoDefault.GetConnectionProvider(_connectionString' AutoCreateOption.DatabaseAndSchema); " is 120.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetDataStoreAttributes,The length of the statement  "            var dataStoreAttributes = AppDomain.CurrentDomain.GetAssemblies().SelectMany(assmb => assmb.GetCustomAttributes(typeof(Attribute)' false).OfType<DataStoreAttribute>()); " is 168.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetDataLayer,The length of the statement  "                var connectionProvider = keyValuePair.Key.Key==DefaultDictionaryKey?defaultStore:GetConnectionProvider(keyValuePair.Key.Key); " is 125.
Long Statement,Xpand.Xpo.DB,DataStoreManager,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\DataStoreManager.cs,GetType,The length of the statement  "            var types = _reflectionDictionaries.Select(pair => pair.Value).SelectMany(dictionary => dictionary.Classes.OfType<XPClassInfo>()).Select(classInfo => classInfo.ClassType); " is 171.
Long Statement,Xpand.Xpo.DB,SchemaColumnSizeUpdater,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\SchemaColumnSizeUpdater.cs,UpdateColumnSize,The length of the statement  "                    var actualColumn = actualTable.Columns.Find(col => String.Compare(col.Name' sqlDataStore.ComposeSafeColumnName(dbColumn.Name)' StringComparison.OrdinalIgnoreCase) == 0); " is 169.
Long Statement,Xpand.Xpo,IXPSimpleObjectExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\IXPSimpleObjectExtensions.cs,GetKeyProperty,The length of the statement  "            return classInfo.PersistentProperties.OfType<XPMemberInfo>().FirstOrDefault(info => info.HasAttribute(typeof(KeyAttribute))); " is 125.
Long Statement,Xpand.Xpo,IXPSimpleObjectExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\IXPSimpleObjectExtensions.cs,CreateCustomMember,The length of the statement  "            var xpandCustomMemberInfo = new XpandCustomMemberInfo(classInfo' propertyName' propertyType' null' nonPersistent' false); " is 121.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,CreatePropertyValueStore,The length of the statement  "                    throw new NotImplementedException("All bindings inside the MemberInitExpression are expected to be of type MemberAssignment."); " is 127.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,CreatePropertyValueStore,The length of the statement  "                    throw new ArgumentOutOfRangeException(memberName' String.Format("The member {0} of the {1} class could not be found."' memberName' classInfo.FullName)); " is 152.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,CreatePropertyValueStore,The length of the statement  "                    throw new ArgumentException(memberName' String.Format("The member {0} of the {1} class is not persistent."' memberName' classInfo.FullName)); " is 141.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,Delete,The length of the statement  "            List<ModificationStatement> collection = DeleteQueryGenerator.GenerateDelete(classInfo' ObjectGeneratorCriteriaSet.GetCommonCriteriaSet(criteria)' batchWideData); " is 162.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,Update,The length of the statement  "            List<ModificationStatement> collection = UpdateQueryGenerator.GenerateUpdate(classInfo' properties' ObjectGeneratorCriteriaSet.GetCommonCriteriaSet(criteria)' batchWideData); " is 174.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,FindObject,The length of the statement  "                session.FindObject(persistentCriteriaEvaluationBehavior' typeof(TClassType)' new XPQuery<TClassType>(session).TransformExpression(expression)); " is 143.
Long Statement,Xpand.Xpo,SessionExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\SessionExtensions.cs,FindObject,The length of the statement  "            return (TClassType)session.FindObject(typeof(TClassType)' new XPQuery<TClassType>(session).TransformExpression(expression)' false); " is 131.
Long Statement,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,GetPropertyInfo,The length of the statement  "                return GetPropertyInfo(info.PropertyType' propertyName.Substring(propertyName.IndexOf("."' StringComparison.Ordinal) + 1)); " is 123.
Long Statement,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,GetPropertyInfoValue,The length of the statement  "                return o == null ? null : GetPropertyInfoValue(propertyName.Substring(propertyName.IndexOf("."' StringComparison.Ordinal) + 1)' o); " is 131.
Long Statement,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,GetXpMemberInfoValue,The length of the statement  "                        ? GetPropertyInfoValue(propertyName.Substring(propertyName.IndexOf("."' StringComparison.Ordinal) + 1)' info.GetValue(o)) " is 121.
Long Statement,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,SetXpMemberProperty,The length of the statement  "                    SetXpMemberProperty(propertyName.Substring(propertyName.IndexOf("."' StringComparison.Ordinal) + 1)' value' dbObject' save); " is 124.
Long Statement,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,SetXpMemberProperty,The length of the statement  "                SetPropertyValue(o.GetType().GetProperty(propertyName.Substring(propertyName.IndexOf("."' StringComparison.Ordinal) + 1))' o' " is 125.
Long Statement,Xpand.Xpo,XpandReflectionHelper,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\XpandReflectionHelper.cs,GetXpMemberInfo,The length of the statement  "                    return GetXpMemberInfo(type' propertyName.Substring(propertyName.IndexOf("."' StringComparison.Ordinal) + 1)' throwIfMissing); " is 126.
Complex Conditional,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,UpdateColumnSize,The conditional expression  "(actualColumn != null) &&                          (actualColumn.ColumnType == DBColumnType.String) &&                          (actualColumn.Size != column.Size) &&                          (column.DBTypeName != string.Format("varchar({0})"' actualColumn.Size))"  is complex.
Complex Conditional,Xpand.Xpo.ConnectionProviders,DBColumnTypeExtensions,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\DBColumnTypeExtensions.cs,GetType,The conditional expression  "(((underlyingNullableType != null && underlyingNullableType == typeof(TimeSpan) || propertyType == typeof(TimeSpan))) && dbColumnType == DBColumnType.Double)"  is complex.
Empty Catch Block,Xpand.Xpo.Converters.TypeConverters,EnumDescTypeConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\TypeConverters\EnumDescTypeConverter.cs,ConvertFrom,The method has an empty catch block.
Empty Catch Block,Xpand.Xpo.Converters.ValueConverters,SerializableObjectConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SerializableObjectConverter.cs,ConvertFromStorageType,The method has an empty catch block.
Magic Number,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetColumns,The following statement contains a magic number: int size = row.Values[2] != DBNull.Value ? ((IConvertible)row.Values[2]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetColumns,The following statement contains a magic number: int size = row.Values[2] != DBNull.Value ? ((IConvertible)row.Values[2]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,FormatFunction,The following statement contains a magic number: string format = String.Format("{0}({1}' {2})"' operands[0]' operands[1]' operands[2]);
Magic Number,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,FormatFunction,The following statement contains a magic number: operands.Length == 3
Magic Number,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,FormatFunction,The following statement contains a magic number: operands.Length == 2
Magic Number,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetColumns,The following statement contains a magic number: rowValue5 = System.Text.Encoding.Default.GetString((byte[])row.Values[5]);
Magic Number,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: size = Int32.Parse(typeName.Substring(5' typeName.Length - 6));
Magic Number,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: size = Int32.Parse(typeName.Substring(5' typeName.Length - 6));
Magic Number,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: size = Int32.Parse(typeName.Substring(8' typeName.Length - 9));
Magic Number,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: size = Int32.Parse(typeName.Substring(8' typeName.Length - 9));
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The following statement contains a magic number: int size = row.Values[2] != DBNull.Value ? ((IConvertible)row.Values[2]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The following statement contains a magic number: int size = row.Values[2] != DBNull.Value ? ((IConvertible)row.Values[2]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The following statement contains a magic number: int precision = row.Values[3] != DBNull.Value ? ((IConvertible)row.Values[3]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The following statement contains a magic number: int precision = row.Values[3] != DBNull.Value ? ((IConvertible)row.Values[3]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The following statement contains a magic number: int scale = row.Values[4] != DBNull.Value ? ((IConvertible)row.Values[4]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetColumns,The following statement contains a magic number: int scale = row.Values[4] != DBNull.Value ? ((IConvertible)row.Values[4]).ToInt32(CultureInfo.InvariantCulture) : 0;
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: switch (typeName.ToLower()) {                  case "int":                      return DBColumnType.Int32;                  case "blob":                  case "raw":                      return DBColumnType.ByteArray;                  case "number":                      if (precision == 0 || scale != 0)                          return DBColumnType.Decimal;                      if (precision < 3)                          return DBColumnType.Byte;                      if (precision < 5)                          return DBColumnType.Int16;                      if (precision < 10)                          return DBColumnType.Int32;                      if (precision < 20)                          return DBColumnType.Int64;                      return DBColumnType.Decimal;                  case "nchar":                  case "char":                      if (size > 1)                          return DBColumnType.String;                      return DBColumnType.Char;                  case "money":                      return DBColumnType.Decimal;                  case "float":                      return DBColumnType.Double;                  case "nvarchar":                  case "varchar":                  case "varchar2":                  case "nvarchar2":                      return DBColumnType.String;                  case "date":                  case "timestamp":                      return DBColumnType.DateTime;                  case "clob":                  case "nclob":                      return DBColumnType.String;              }
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: switch (typeName.ToLower()) {                  case "int":                      return DBColumnType.Int32;                  case "blob":                  case "raw":                      return DBColumnType.ByteArray;                  case "number":                      if (precision == 0 || scale != 0)                          return DBColumnType.Decimal;                      if (precision < 3)                          return DBColumnType.Byte;                      if (precision < 5)                          return DBColumnType.Int16;                      if (precision < 10)                          return DBColumnType.Int32;                      if (precision < 20)                          return DBColumnType.Int64;                      return DBColumnType.Decimal;                  case "nchar":                  case "char":                      if (size > 1)                          return DBColumnType.String;                      return DBColumnType.Char;                  case "money":                      return DBColumnType.Decimal;                  case "float":                      return DBColumnType.Double;                  case "nvarchar":                  case "varchar":                  case "varchar2":                  case "nvarchar2":                      return DBColumnType.String;                  case "date":                  case "timestamp":                      return DBColumnType.DateTime;                  case "clob":                  case "nclob":                      return DBColumnType.String;              }
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: switch (typeName.ToLower()) {                  case "int":                      return DBColumnType.Int32;                  case "blob":                  case "raw":                      return DBColumnType.ByteArray;                  case "number":                      if (precision == 0 || scale != 0)                          return DBColumnType.Decimal;                      if (precision < 3)                          return DBColumnType.Byte;                      if (precision < 5)                          return DBColumnType.Int16;                      if (precision < 10)                          return DBColumnType.Int32;                      if (precision < 20)                          return DBColumnType.Int64;                      return DBColumnType.Decimal;                  case "nchar":                  case "char":                      if (size > 1)                          return DBColumnType.String;                      return DBColumnType.Char;                  case "money":                      return DBColumnType.Decimal;                  case "float":                      return DBColumnType.Double;                  case "nvarchar":                  case "varchar":                  case "varchar2":                  case "nvarchar2":                      return DBColumnType.String;                  case "date":                  case "timestamp":                      return DBColumnType.DateTime;                  case "clob":                  case "nclob":                      return DBColumnType.String;              }
Magic Number,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetTypeFromString,The following statement contains a magic number: switch (typeName.ToLower()) {                  case "int":                      return DBColumnType.Int32;                  case "blob":                  case "raw":                      return DBColumnType.ByteArray;                  case "number":                      if (precision == 0 || scale != 0)                          return DBColumnType.Decimal;                      if (precision < 3)                          return DBColumnType.Byte;                      if (precision < 5)                          return DBColumnType.Int16;                      if (precision < 10)                          return DBColumnType.Int32;                      if (precision < 20)                          return DBColumnType.Int64;                      return DBColumnType.Decimal;                  case "nchar":                  case "char":                      if (size > 1)                          return DBColumnType.String;                      return DBColumnType.Char;                  case "money":                      return DBColumnType.Decimal;                  case "float":                      return DBColumnType.Double;                  case "nvarchar":                  case "varchar":                  case "varchar2":                  case "nvarchar2":                      return DBColumnType.String;                  case "date":                  case "timestamp":                      return DBColumnType.DateTime;                  case "clob":                  case "nclob":                      return DBColumnType.String;              }
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: var dateTime = new DateTime(1753' 1' 1);
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: dateTime = new DateTime(9999' 12' 31);
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: dateTime = new DateTime(9999' 12' 31);
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: dateTime = new DateTime(9999' 12' 31);
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertFromStorageType,The following statement contains a magic number: return value != null && (DateTime)value == new DateTime(1753' 1' 1) ? DateTime.MinValue : value;
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOffSetOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: var dateTime = new DateTimeOffset(new DateTime(1753' 1' 1));
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOffSetOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: dateTime = new DateTimeOffset(new DateTime(9999' 12' 31));
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOffSetOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: dateTime = new DateTimeOffset(new DateTime(9999' 12' 31));
Magic Number,Xpand.Xpo.Converters.ValueConverters,SqlDateTimeOffSetOverFlowValueConverter,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Converters\ValueConverters\SqlDateTimeOverFlowValueConverter.cs,ConvertToStorageType,The following statement contains a magic number: dateTime = new DateTimeOffset(new DateTime(9999' 12' 31));
Magic Number,Xpand.Xpo.DB,XpoSequencer,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\DB\XpoSequencer.cs,GetNextValue,The following statement contains a magic number: attempt > MaxIdGenerationAttempts / 2
Missing Default,Xpand.Xpo.ConnectionProviders,MSSqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\CustomContainsProvider.cs,GetTypeFromString,The following switch statement is missing a default case: switch (typeName) {                  case "int":                      return DBColumnType.Int32;                  case "image":                  case "varbinary":                      return DBColumnType.ByteArray;                  case "nchar":                  case "char":                      if (length == 1)                          return DBColumnType.Char;                      return DBColumnType.String;                  case "varchar":                  case "nvarchar":                  case "xml":                  case "ntext":                  case "text":                      return DBColumnType.String;                  case "bit":                      return DBColumnType.Boolean;                  case "tinyint":                      return DBColumnType.Byte;                  case "smallint":                      return DBColumnType.Int16;                  case "bigint":                      return DBColumnType.Int64;                  case "numeric":                  case "decimal":                      return DBColumnType.Decimal;                  case "money":                  case "smallmoney":                      return DBColumnType.Decimal;                  case "float":                      return DBColumnType.Double;                  case "real":                      return DBColumnType.Single;                  case "uniqueidentifier":                      return DBColumnType.Guid;                  case "datetime":                  case "timestamp":                  case "datetime2":                  case "smalldatetime":                  case "date":                      return DBColumnType.DateTime;              }
Missing Default,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,The following switch statement is missing a default case: switch (typeName) {                  case "char(1)":                      return DBColumnType.Char;                  case "tinyint(1)":                      return DBColumnType.Boolean;              }
Missing Default,Xpand.Xpo.ConnectionProviders,MySqlConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\MySqlConnectionProvider.cs,GetTypeFromString,The following switch statement is missing a default case: switch (typeWithoutBrackets) {                  case "int":                      return DBColumnType.Int32;                  case "int unsigned":                      return DBColumnType.UInt32;                  case "longblob":                  case "tinyblob":                  case "mediumblob":                  case "blob":                      return DBColumnType.ByteArray;                  case "text":                  case "mediumtext":                      return DBColumnType.String;                  case "bit":                  case "tinyint unsigned":                      return DBColumnType.Byte;                  case "tinyint":                      return DBColumnType.SByte;                  case "smallint":                      return DBColumnType.Int16;                  case "smallint unsigned":                      return DBColumnType.UInt16;                  case "bigint":                      return DBColumnType.Int64;                  case "bigint unsigned":                      return DBColumnType.UInt64;                  case "double":                      return DBColumnType.Double;                  case "datetime":                  case "timestamp":                      return DBColumnType.DateTime;                                    }
Missing Default,Xpand.Xpo.ConnectionProviders,OracleConnectionProvider,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\ConnectionProviders\OracleConnectionProvider.cs,GetTypeFromString,The following switch statement is missing a default case: switch (typeName.ToLower()) {                  case "int":                      return DBColumnType.Int32;                  case "blob":                  case "raw":                      return DBColumnType.ByteArray;                  case "number":                      if (precision == 0 || scale != 0)                          return DBColumnType.Decimal;                      if (precision < 3)                          return DBColumnType.Byte;                      if (precision < 5)                          return DBColumnType.Int16;                      if (precision < 10)                          return DBColumnType.Int32;                      if (precision < 20)                          return DBColumnType.Int64;                      return DBColumnType.Decimal;                  case "nchar":                  case "char":                      if (size > 1)                          return DBColumnType.String;                      return DBColumnType.Char;                  case "money":                      return DBColumnType.Decimal;                  case "float":                      return DBColumnType.Double;                  case "nvarchar":                  case "varchar":                  case "varchar2":                  case "nvarchar2":                      return DBColumnType.String;                  case "date":                  case "timestamp":                      return DBColumnType.DateTime;                  case "clob":                  case "nclob":                      return DBColumnType.String;              }
Missing Default,Xpand.Xpo.Parser,EnumCriteriaParser,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.Xpo\Parser\EnumCriteriaParser.cs,Visit,The following switch statement is missing a default case: switch (theOperator.OperatorType) {                  case UnaryOperatorType.IsNull:                      UpdatePropertyName(theOperator.Operand);                      break;                  case UnaryOperatorType.Not:                      theOperator.Operand.Accept(this);                      break;              }
