Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,OnLogicRuleExecute,Cyclomatic complexity of the method is 9
Complex Method,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,LogicRuleViewControllerOnLogicRuleExecute,Cyclomatic complexity of the method is 9
Long Identifier,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,,The length of the parameter ActiveObjectTypeHasActionRules is 30.
Long Identifier,Xpand.ExpressApp.ModelArtifactState.ControllerState.Logic,ControllerStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\Logic\ControllerStateRuleController.cs,,The length of the parameter ActiveObjectTypeHasControllerRules is 34.
Long Identifier,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,CustomProcessSelectedItem,The length of the parameter customProcessListViewSelectedItemEventArgs is 42.
Long Identifier,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Model,ObjectViewActionExecutionContextsGroupNodeUpdater,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Model\ObjectViewActionExecutionContextsGroupNodeUpdater.cs,UpdateNode,The length of the parameter modelActionExecutionContextGroup is 32.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState,ActionStateLogicInstaller,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\ActionStateLogicInstaller.cs,GetModelLogicCore,The length of the statement  "            var conditionalActionState = ((IModelApplicationModelArtifactState) applicationModel).ModelArtifactState.ConditionalActionState; " is 128.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,OnFrameAssigned,The length of the statement  "            Frame.GetController<LogicRuleViewController>(controller => controller.LogicRuleExecutor.LogicRuleExecute += OnLogicRuleExecute); " is 128.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,FrameOnDisposing,The length of the statement  "            Frame.GetController<LogicRuleViewController>(controller => controller.LogicRuleExecutor.LogicRuleExecute -= OnLogicRuleExecute); " is 128.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,GetActionContextIds,The length of the statement  "                var modelActionContexts = ((IModelApplicationModelArtifactState) Application.Model).ModelArtifactState.ConditionalActionState.ActionContexts.First(contexts => contexts.Id==actionContext); " is 187.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,ActivateDeActivateAction,The length of the statement  "            actionBase.Active[ActiveObjectTypeHasActionRules] = info.InvertCustomization || ((IActionStateRule)info.Rule).ActionState != Persistent.Base.ModelArtifact.ActionState.Hidden; " is 174.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,EnableDisableAction,The length of the statement  "            actionBase.Enabled[ActiveObjectTypeHasActionRules] = info.InvertCustomization || ((IActionStateRule)info.Rule).ActionState != Persistent.Base.ModelArtifact.ActionState.Disabled; " is 177.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,GetModuleActions,The length of the statement  "            var assemblies =Application.Modules.Where(@base => new Regex(rule.Module).IsMatch(@base.GetType().FullName + "")).Select( " is 121.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Model,ActionStateRuleDomainLogic,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Model\IModelActionStateRule.cs,Get_ActionContexts,The length of the statement  "            return ((IModelApplicationModelArtifactState) modelActionStateRule.Application).ModelArtifactState.ConditionalActionState.ActionContexts.Select(contexts => contexts.Id); " is 169.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Security,PopulateActionsController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Security\PopulateActionsController.cs,GetPredefinedValues,The length of the statement  "            return Application.Model.ActionDesign.Actions.Aggregate(""' (current' action) => current + (action.Id + ";")).TrimEnd(';'); " is 123.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ActionState.Security.Improved,PopulateActionsController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Security\Improved\PopulateActionsController.cs,GetPredefinedValues,The length of the statement  "            return Application.Model.ActionDesign.Actions.Aggregate(""' (current' action) => current + (action.Id + ";")).TrimEnd(';'); " is 123.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ControllerState,ControllerStateLogicInstaller,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\ControllerStateLogicInstaller.cs,GetModelLogicCore,The length of the statement  "            var controllerState = ((IModelApplicationModelArtifactState) applicationModel).ModelArtifactState.ConditionalControllerState; " is 125.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ControllerState.Logic,ControllerStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\Logic\ControllerStateRuleController.cs,ChangeState,The length of the statement  "                    controller.Active[ActiveObjectTypeHasControllerRules] = info.InvertCustomization || ((IControllerStateRule)info.Rule).ControllerState == Persistent.Base.ModelArtifact.ControllerState.Enabled; " is 191.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ControllerState.Logic,ControllerStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\Logic\ControllerStateRuleController.cs,GetAssemblies,The length of the statement  "            return Application.Modules.Where(@base => new Regex(controllerStateRule.Module).IsMatch(@base.GetType().FullName + "")). " is 120.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ControllerState.Logic,ControllerStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\Logic\ControllerStateRuleController.cs,GetControllers,The length of the statement  "            return Frame.Controllers.Cast<Controller>().Where(controller => assemblies.Contains(controller.GetType().Assembly.FullName)); " is 125.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ControllerState.Logic,ControllerStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\Logic\ControllerStateRuleController.cs,OnFrameAssigned,The length of the statement  "            Frame.GetController<LogicRuleViewController>(controller => controller.LogicRuleExecutor.LogicRuleExecute += LogicRuleExecutorOnLogicRuleExecute); " is 145.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ControllerState.Logic,ControllerStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ControllerState\Logic\ControllerStateRuleController.cs,FrameOnDisposing,The length of the statement  "            Frame.GetController<LogicRuleViewController>(controller => controller.LogicRuleExecutor.LogicRuleExecute -= LogicRuleExecutorOnLogicRuleExecute); " is 145.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,OnFrameAssigned,The length of the statement  "            Frame.GetController<LogicRuleViewController>(controller => controller.LogicRuleExecutor.LogicRuleExecute += LogicRuleViewControllerOnLogicRuleExecute); " is 151.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,FrameOnDisposing,The length of the statement  "            Frame.GetController<LogicRuleViewController>(controller => controller.LogicRuleExecutor.LogicRuleExecute -= LogicRuleViewControllerOnLogicRuleExecute); " is 151.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,LogicRuleViewControllerOnLogicRuleExecute,The length of the statement  "                        if (View.Model.AsObjectView is IModelDetailView && objectViewRule.ObjectView is IModelDetailView&&View.ObjectTypeInfo!=null) { " is 126.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,LogicRuleViewControllerOnLogicRuleExecute,The length of the statement  "                            var modelView = info.Active ? objectViewRule.ObjectView : Application.Model.BOModel.GetClass(View.ObjectTypeInfo.Type).DefaultDetailView; " is 137.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,CustomProcessSelectedItem,The length of the statement  "                showViewParameters.CreatedView.CurrentObject = showViewParameters.CreatedView.ObjectSpace.GetObject(View.CurrentObject); " is 120.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Model,ObjectViewRuleDomainLogic,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Model\IModelObjectViewRule.cs,Get_ObjectViews,The length of the statement  "                var modelDetailViews = objectViewRule.Application.Views.OfType<IModelObjectView>().Where(view => view.ModelClass == objectViewRule.ModelClass); " is 143.
Long Statement,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Model,ObjectViewActionExecutionContextsGroupNodeUpdater,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Model\ObjectViewActionExecutionContextsGroupNodeUpdater.cs,UpdateNode,The length of the statement  "                var modelActionExecutionContexts = modelActionExecutionContextGroup.AddNode<IModelActionExecutionContexts>(ObjectViewActionContext); " is 132.
Missing Default,Xpand.ExpressApp.ModelArtifactState.ActionState.Logic,ActionStateRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ActionState\Logic\ActionStateRuleController.cs,OnLogicRuleExecute,The following switch statement is missing a default case: switch (rule.ActionState){                              case Persistent.Base.ModelArtifact.ActionState.ForceActive:{                                  actionBase.Active.Clear();                                  break;                              }                              case Persistent.Base.ModelArtifact.ActionState.Hidden:                                  ActivateDeActivateAction(logicRuleInfo' actionBase);                                  break;                              case Persistent.Base.ModelArtifact.ActionState.Disabled:                                  EnableDisableAction(logicRuleInfo' actionBase);                                  break;                              case Persistent.Base.ModelArtifact.ActionState.Executed:{                                  if (logicRuleInfo.Active){                                      ExecuteAction(actionBase);                                  }                              }                                  break;                              case Persistent.Base.ModelArtifact.ActionState.ExecutedAndDisable:                                  ExecuteAndDisableAction(actionBase);                                  break;                          }
Missing Default,Xpand.ExpressApp.ModelArtifactState,ModelArtifactStateModule,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ModelArtifactStateModule.cs,ConvertXml,The following switch statement is missing a default case: switch (parameters.XmlNodeName) {                  case "ConditionalDetailView":                      parameters.NodeType = typeof(IModelLogicConditionalObjectView);                      break;                  case "ConditionalDetailViewRule":                      parameters.NodeType = typeof(IModelObjectViewRule);                      break;                  case "ConditionalObjectViewRule":                      parameters.NodeType = typeof(IModelObjectViewRule);                      break;              }
Missing Default,Xpand.ExpressApp.ModelArtifactState.ObjectViews.Logic,ConditionalObjectViewRuleController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ModelArtifactState\ObjectViews\Logic\ConditionalObjectViewRuleController.cs,LogicRuleViewControllerOnLogicRuleExecute,The following switch statement is missing a default case: switch (executionContext) {                      case ExecutionContext.None:                          if (info.Active) {                              ProcessActions(info' objectViewRule);                          }                          break;                      case ExecutionContext.CustomProcessSelectedItem:                          if (info.Active) {                              CustomProcessSelectedItem(info' objectViewRule);                          }                          break;                      case ExecutionContext.CurrentObjectChanged:                          if (View.Model.AsObjectView is IModelDetailView && objectViewRule.ObjectView is IModelDetailView&&View.ObjectTypeInfo!=null) {                              var modelView = info.Active ? objectViewRule.ObjectView : Application.Model.BOModel.GetClass(View.ObjectTypeInfo.Type).DefaultDetailView;                              if (modelView!=null){                                  var shortcut = new ViewShortcut(modelView.Id'View.ObjectTypeInfo.KeyMember.GetValue(View.CurrentObject).ToString());                                  Frame.SetView(Application.ProcessShortcut(shortcut)'View.Tag as Frame);                              }                          }                          break;                  }
