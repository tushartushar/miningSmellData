Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Import,Cyclomatic complexity of the method is 8
Long Parameter List,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Execute,The method has 5 parameters. Parameters: application' tuple' excelImport' action' message
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Connect,The length of the statement  "                .SelectMany(import => watchers.Where(_ => _.excelImport.Oid==import.Oid&&!_.watcher.Monitoring).Do(_ => _.watcher.Start())).Publish().RefCount(); " is 145.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Connect,The length of the statement  "                    .SelectMany(import => watchers.Where(_ => _.excelImport.Oid==import.Oid&&_.watcher.Monitoring).Do(_ => _.watcher.Stop()))) " is 122.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Connect,The length of the statement  "            var excelImportFileDrops = watchers.SelectMany(_ => _.watcher.Dropped.Select(fileDropped => (_.excelImport'fileDropped'_.watcher))).Publish().RefCount(); " is 153.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Connect,The length of the statement  "                        .Catch<Unit'Exception>(exception => Unit.Default.AsObservable().ObserveOn(((Control) tuple.Application.MainWindow.Template)).SelectMany(_ => Observable.Empty<Unit>())) " is 167.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Import,The length of the statement  "                    notificationMessage = $"Importing of {excelImport.Name} failed please check the {nameof(ExcelImport.FailedResults)} in the UI and run the import again."; " is 153.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,Import,The length of the statement  "                application.Execute(tuple' excelImport' space => objectSpace.CommitChanges()'$"Exception when importing {excelImport.Name} - {{0}}"); " is 133.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,SkipAutoImportReason,The length of the statement  "                file.Succeded == true && file.FileName.ToLower() == fileDropped.Name.ToLower() && file.CreationTime.ToString(CultureInfo.InvariantCulture) == " is 141.
Long Statement,Xpand.ExpressApp.ExcelImporter.Win.Services,AutoImportService,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Services\AutoImportService.cs,SkipAutoImportReason,The length of the statement  "                var lastImportedFile = excelImport.AutoImportedFiles.OrderByDescending(_ => _.EndTime).FirstOrDefault(file => file.FileName==fileDropped.Name); " is 143.
Magic Number,Xpand.ExpressApp.ExcelImporter.Win.Controllers,ExcelImportDetailViewController,D:\research\architectureSmells\repos\expand_eXpand\Xpand\Xpand.ExpressApp.Modules\ExcelImporter.Win\Controllers\ExcelImportDetailViewController.cs,ShowMapConfigView,The following statement contains a magic number: parameters.CreatedView.Disposing += (sender' args) => {                  Observable.FromAsync(async () => await Task.Delay(100))                      .ObserveOn(SynchronizationContext.Current)                      .Do(unit => Frame.GetController<RefreshController>().RefreshAction.DoExecute())                      .Subscribe();              };
