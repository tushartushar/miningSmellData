Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BinarySearchTree,BinarySearchTree,C:\repos\joefroh_Blog\DataStructuresAndAlgorithms\BinarySearchTree\BinarySearchTree.cs,CreateTreeNodes,The following statement contains a magic number: if (length > 0) {  	var root = new Node<T> ();  	root.Data = list.ElementAt ((length / 2) + start);  	root.Left = CreateTreeNodes (list' start' (length / 2) + start);  	root.Right = CreateTreeNodes (list' (length / 2) + start + 1' end);  	return root;  }  
Magic Number,BinarySearchTree,BinarySearchTree,C:\repos\joefroh_Blog\DataStructuresAndAlgorithms\BinarySearchTree\BinarySearchTree.cs,CreateTreeNodes,The following statement contains a magic number: if (length > 0) {  	var root = new Node<T> ();  	root.Data = list.ElementAt ((length / 2) + start);  	root.Left = CreateTreeNodes (list' start' (length / 2) + start);  	root.Right = CreateTreeNodes (list' (length / 2) + start + 1' end);  	return root;  }  
Magic Number,BinarySearchTree,BinarySearchTree,C:\repos\joefroh_Blog\DataStructuresAndAlgorithms\BinarySearchTree\BinarySearchTree.cs,CreateTreeNodes,The following statement contains a magic number: if (length > 0) {  	var root = new Node<T> ();  	root.Data = list.ElementAt ((length / 2) + start);  	root.Left = CreateTreeNodes (list' start' (length / 2) + start);  	root.Right = CreateTreeNodes (list' (length / 2) + start + 1' end);  	return root;  }  
Magic Number,BinarySearchTree,BinarySearchTree,C:\repos\joefroh_Blog\DataStructuresAndAlgorithms\BinarySearchTree\BinarySearchTree.cs,CreateTreeNodes,The following statement contains a magic number: root.Data = list.ElementAt ((length / 2) + start);  
Magic Number,BinarySearchTree,BinarySearchTree,C:\repos\joefroh_Blog\DataStructuresAndAlgorithms\BinarySearchTree\BinarySearchTree.cs,CreateTreeNodes,The following statement contains a magic number: root.Left = CreateTreeNodes (list' start' (length / 2) + start);  
Magic Number,BinarySearchTree,BinarySearchTree,C:\repos\joefroh_Blog\DataStructuresAndAlgorithms\BinarySearchTree\BinarySearchTree.cs,CreateTreeNodes,The following statement contains a magic number: root.Right = CreateTreeNodes (list' (length / 2) + start + 1' end);  
