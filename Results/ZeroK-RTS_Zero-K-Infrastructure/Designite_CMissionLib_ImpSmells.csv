Implementation smell,Namespace,Class,File,Method,Description
Long Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,Mission,The method has 60 lines of code.
Long Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CreateArchive,The method has 123 lines of code.
Long Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetLuaStartscript,The method has 119 lines of code.
Long Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyTrigger,The method has 61 lines of code.
Long Method,CMissionLib.Actions,GuiMessageAction,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Actions\GUI\GuiMessageAction.cs,GetLuaTable,The method has 64 lines of code.
Long Method,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,LoadTiles,The method has 67 lines of code.
Long Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,ReadUnits,The method has 70 lines of code.
Complex Method,CMissionLib,LuaTable,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\LuaTable.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CreateArchive,Cyclomatic complexity of the method is 41
Complex Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetLuaStartscript,Cyclomatic complexity of the method is 9
Complex Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetScript,Cyclomatic complexity of the method is 10
Complex Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,PostLoad,Cyclomatic complexity of the method is 15
Complex Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyTrigger,Cyclomatic complexity of the method is 15
Complex Method,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyAction,Cyclomatic complexity of the method is 8
Complex Method,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,Cyclomatic complexity of the method is 9
Complex Method,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,LoadTiles,Cyclomatic complexity of the method is 7
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,ProcessModInfoItem,Cyclomatic complexity of the method is 15
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetMod,Cyclomatic complexity of the method is 7
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetBuildPic,Cyclomatic complexity of the method is 8
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,ProcessMapInfoItem,Cyclomatic complexity of the method is 30
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetMapInfo,Cyclomatic complexity of the method is 8
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetUnitList,Cyclomatic complexity of the method is 7
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,LoadOption,Cyclomatic complexity of the method is 23
Complex Method,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,ReadUnits,Cyclomatic complexity of the method is 21
Complex Method,CMissionLib.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Option.cs,GetPair,Cyclomatic complexity of the method is 15
Complex Method,CMissionLib.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Option.cs,ToString,Cyclomatic complexity of the method is 8
Long Parameter List,CMissionLib,UnitStartInfo,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitStartInfo.cs,UnitStartInfo,The method has 4 parameters.
Long Parameter List,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,LoadTiles,The method has 5 parameters.
Long Parameter List,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,CopyBitmap32Section,The method has 7 parameters.
Long Parameter List,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The method has 6 parameters.
Long Parameter List,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The method has 5 parameters.
Long Statement,CMissionLib,Extensions,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Extensions.cs,ToBitmapSource,The length of the statement  "		bitmapSource = Imaging.CreateBitmapSourceFromHBitmap (hBitmap' IntPtr.Zero' Int32Rect.Empty' BitmapSizeOptions.FromEmptyOptions ()); " is 132.
Long Statement,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,PostLoad,The length of the statement  "		//if (unitDef == null) unitDef = Mod.UnitDefs.FirstOrDefault(ud => unit.UnitDef.FullName == ud.FullName);   // this doesn't work - unit.UnitDef will be null " is 156.
Long Statement,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetModInfo,The length of the statement  "	sb.AppendLine ("    " + (!string.IsNullOrEmpty (rapidTag) ? String.Format ("[[rapid://{0}]]\n"' rapidTag) : String.Format ("[[{0}]]"' mod.Name))); " is 146.
Long Statement,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyTrigger,The length of the statement  "            System.Runtime.Serialization.Formatters.Binary.BinaryFormatter format = new System.Runtime.Serialization.Formatters.Binary.BinaryFormatter();" is 141.
Long Statement,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyTrigger,The length of the statement  "			foreach (UnitsAreInAreaCondition condition in copy.Conditions.Where (x => x.GetType () == typeof(UnitsAreInAreaCondition))) { " is 125.
Long Statement,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyTrigger,The length of the statement  "			foreach (UnitFinishedCondition condition in copy.Conditions.Where (x => x.GetType () == typeof(UnitFinishedCondition))) { " is 121.
Long Statement,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CopyTrigger,The length of the statement  "			foreach (PlayerJoinedCondition condition in copy.Conditions.Where (x => x.GetType () == typeof(PlayerJoinedCondition))) { " is 121.
Long Statement,CMissionLib.UnitSyncLib,SM2,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SM2.cs,GetTexture,The length of the statement  "		//var newBitmap = new Bitmap(GetBitmap(map.Texture)' new Size(map.Texture.PixelWidth / 8' map.Texture.PixelHeight / 8)); " is 120.
Long Statement,CMissionLib.UnitSyncLib,SM2,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SM2.cs,GetBitmap,The length of the statement  "	BitmapData data = bmp.LockBits (new Rectangle (Point.Empty' bmp.Size)' ImageLockMode.WriteOnly' PixelFormat.Format32bppPArgb); " is 126.
Long Statement,CMissionLib.UnitSyncLib,SM2,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SM2.cs,ConvertBitmap,The length of the statement  "	return System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap (source.GetHbitmap ()' System.IntPtr.Zero' System.Windows.Int32Rect.Empty' BitmapSizeOptions.FromEmptyOptions ()); " is 182.
Long Statement,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The length of the statement  "	if (magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32) { " is 147.
Long Statement,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,FixAspectRatio,The length of the statement  "	var newSize = map.Size.Width > map.Size.Height ? new Size (squareMinimap.Width' (int)(squareMinimap.Height / ((float)map.Size.Width / map.Size.Height))) : new Size ((int)(squareMinimap.Width * ((float)map.Size.Width / map.Size.Height))' squareMinimap.Height); " is 259.
Long Statement,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The length of the statement  "			var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat); " is 120.
Complex Conditional,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The conditional expression  "magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32"  is complex.
Complex Conditional,CMissionLib.UnitSyncLib,TileFileHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\TileFileHeader.cs,SelfCheck,The conditional expression  "version != 1 || tileSize != 32 || compressionType != 1 || magic != "spring tilefile" || tileNumber != numTiles"  is complex.
Virtual Method Call from Constructor,CMissionLib,TriggerLogic,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\TriggerLogic.cs,TriggerLogic,The constructor "TriggerLogic" calls a virtual method "GetDefaultName".
Empty Catch Block,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,CreateArchive,The method has an empty catch block.
Empty Catch Block,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,Dispose,The method has an empty catch block.
Empty Catch Block,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetBuildPic,The method has an empty catch block.
Empty Catch Block,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetBuildPic,The method has an empty catch block.
Magic Number,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetLuaStartscript,The following statement contains a magic number: if (customModOptions != null) {  	List<string> modoptsArray = new List<string> (customModOptions.Split (new string[] {  		";"  	}' StringSplitOptions.RemoveEmptyEntries));  	foreach (string modopt in modoptsArray) {  		var modoptSplit = modopt.Split (new string[] {  			"="  		}' StringSplitOptions.RemoveEmptyEntries);  		if (modoptSplit.Length < 2)  			continue;  		var key = modoptSplit [0];  		// make sure only the first = is used as a separator  		var valueArray = new string[modoptSplit.Length - 1];  		for (int i = 1; i < modoptSplit.Length; i++) {  			valueArray [i - 1] = modoptSplit [i];  		}  		var value = String.Join (""' valueArray);  		modopts.Add (key' value);  	}  }  
Magic Number,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetLuaStartscript,The following statement contains a magic number: foreach (string modopt in modoptsArray) {  	var modoptSplit = modopt.Split (new string[] {  		"="  	}' StringSplitOptions.RemoveEmptyEntries);  	if (modoptSplit.Length < 2)  		continue;  	var key = modoptSplit [0];  	// make sure only the first = is used as a separator  	var valueArray = new string[modoptSplit.Length - 1];  	for (int i = 1; i < modoptSplit.Length; i++) {  		valueArray [i - 1] = modoptSplit [i];  	}  	var value = String.Join (""' valueArray);  	modopts.Add (key' value);  }  
Magic Number,CMissionLib,Mission,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\Mission.cs,GetLuaStartscript,The following statement contains a magic number: if (modoptSplit.Length < 2)  	continue;  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,Distance,The following statement contains a magic number: rmean = (e1.R + e2.R) / 2;  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,Distance,The following statement contains a magic number: return (((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8);  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,Distance,The following statement contains a magic number: return (((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8);  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,Distance,The following statement contains a magic number: return (((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8);  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,Distance,The following statement contains a magic number: return (((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8);  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,Distance,The following statement contains a magic number: return (((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8);  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short r = 20; r <= 255; r += 3) {  	for (short g = 20; g <= 255; g += 3) {  		for (short b = 50; b <= 255; b += 3) {  			temp.R = (byte)r;  			temp.G = (byte)g;  			temp.B = (byte)b;  			var minDist = int.MaxValue;  			for (var i = 0; i < input.Length; ++i) {  				if (i == index)  					continue;  				var cDistance = temp % input [i];  				if (cDistance <= bestVal) {  					minDist = int.MinValue;  					break;  				}  				if (cDistance < minDist)  					minDist = cDistance;  			}  			if (minDist > bestVal) {  				bestVal = minDist;  				bestCol = temp;  			}  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: r += 3
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short g = 20; g <= 255; g += 3) {  	for (short b = 50; b <= 255; b += 3) {  		temp.R = (byte)r;  		temp.G = (byte)g;  		temp.B = (byte)b;  		var minDist = int.MaxValue;  		for (var i = 0; i < input.Length; ++i) {  			if (i == index)  				continue;  			var cDistance = temp % input [i];  			if (cDistance <= bestVal) {  				minDist = int.MinValue;  				break;  			}  			if (cDistance < minDist)  				minDist = cDistance;  		}  		if (minDist > bestVal) {  			bestVal = minDist;  			bestCol = temp;  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short g = 20; g <= 255; g += 3) {  	for (short b = 50; b <= 255; b += 3) {  		temp.R = (byte)r;  		temp.G = (byte)g;  		temp.B = (byte)b;  		var minDist = int.MaxValue;  		for (var i = 0; i < input.Length; ++i) {  			if (i == index)  				continue;  			var cDistance = temp % input [i];  			if (cDistance <= bestVal) {  				minDist = int.MinValue;  				break;  			}  			if (cDistance < minDist)  				minDist = cDistance;  		}  		if (minDist > bestVal) {  			bestVal = minDist;  			bestCol = temp;  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short g = 20; g <= 255; g += 3) {  	for (short b = 50; b <= 255; b += 3) {  		temp.R = (byte)r;  		temp.G = (byte)g;  		temp.B = (byte)b;  		var minDist = int.MaxValue;  		for (var i = 0; i < input.Length; ++i) {  			if (i == index)  				continue;  			var cDistance = temp % input [i];  			if (cDistance <= bestVal) {  				minDist = int.MinValue;  				break;  			}  			if (cDistance < minDist)  				minDist = cDistance;  		}  		if (minDist > bestVal) {  			bestVal = minDist;  			bestCol = temp;  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short g = 20; g <= 255; g += 3) {  	for (short b = 50; b <= 255; b += 3) {  		temp.R = (byte)r;  		temp.G = (byte)g;  		temp.B = (byte)b;  		var minDist = int.MaxValue;  		for (var i = 0; i < input.Length; ++i) {  			if (i == index)  				continue;  			var cDistance = temp % input [i];  			if (cDistance <= bestVal) {  				minDist = int.MinValue;  				break;  			}  			if (cDistance < minDist)  				minDist = cDistance;  		}  		if (minDist > bestVal) {  			bestVal = minDist;  			bestCol = temp;  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short g = 20; g <= 255; g += 3) {  	for (short b = 50; b <= 255; b += 3) {  		temp.R = (byte)r;  		temp.G = (byte)g;  		temp.B = (byte)b;  		var minDist = int.MaxValue;  		for (var i = 0; i < input.Length; ++i) {  			if (i == index)  				continue;  			var cDistance = temp % input [i];  			if (cDistance <= bestVal) {  				minDist = int.MinValue;  				break;  			}  			if (cDistance < minDist)  				minDist = cDistance;  		}  		if (minDist > bestVal) {  			bestVal = minDist;  			bestCol = temp;  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short g = 20; g <= 255; g += 3) {  	for (short b = 50; b <= 255; b += 3) {  		temp.R = (byte)r;  		temp.G = (byte)g;  		temp.B = (byte)b;  		var minDist = int.MaxValue;  		for (var i = 0; i < input.Length; ++i) {  			if (i == index)  				continue;  			var cDistance = temp % input [i];  			if (cDistance <= bestVal) {  				minDist = int.MinValue;  				break;  			}  			if (cDistance < minDist)  				minDist = cDistance;  		}  		if (minDist > bestVal) {  			bestVal = minDist;  			bestCol = temp;  		}  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: g += 3
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short b = 50; b <= 255; b += 3) {  	temp.R = (byte)r;  	temp.G = (byte)g;  	temp.B = (byte)b;  	var minDist = int.MaxValue;  	for (var i = 0; i < input.Length; ++i) {  		if (i == index)  			continue;  		var cDistance = temp % input [i];  		if (cDistance <= bestVal) {  			minDist = int.MinValue;  			break;  		}  		if (cDistance < minDist)  			minDist = cDistance;  	}  	if (minDist > bestVal) {  		bestVal = minDist;  		bestCol = temp;  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short b = 50; b <= 255; b += 3) {  	temp.R = (byte)r;  	temp.G = (byte)g;  	temp.B = (byte)b;  	var minDist = int.MaxValue;  	for (var i = 0; i < input.Length; ++i) {  		if (i == index)  			continue;  		var cDistance = temp % input [i];  		if (cDistance <= bestVal) {  			minDist = int.MinValue;  			break;  		}  		if (cDistance < minDist)  			minDist = cDistance;  	}  	if (minDist > bestVal) {  		bestVal = minDist;  		bestCol = temp;  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: for (short b = 50; b <= 255; b += 3) {  	temp.R = (byte)r;  	temp.G = (byte)g;  	temp.B = (byte)b;  	var minDist = int.MaxValue;  	for (var i = 0; i < input.Length; ++i) {  		if (i == index)  			continue;  		var cDistance = temp % input [i];  		if (cDistance <= bestVal) {  			minDist = int.MinValue;  			break;  		}  		if (cDistance < minDist)  			minDist = cDistance;  	}  	if (minDist > bestVal) {  		bestVal = minDist;  		bestCol = temp;  	}  }  
Magic Number,MissionEditor2,MyCol,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\MyCol.cs,GetBestRelocation,The following statement contains a magic number: b += 3
Magic Number,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The following statement contains a magic number: if (magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32) {  	throw new Exception ("Invalid SMF header");  }  
Magic Number,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The following statement contains a magic number: if (magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32) {  	throw new Exception ("Invalid SMF header");  }  
Magic Number,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The following statement contains a magic number: if (magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32) {  	throw new Exception ("Invalid SMF header");  }  
Magic Number,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The following statement contains a magic number: if (magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32) {  	throw new Exception ("Invalid SMF header");  }  
Magic Number,CMissionLib.UnitSyncLib,SMFHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\SMFHeader.cs,SelfCheck,The following statement contains a magic number: if (magic != "spring map file" || version != 1 || mapx % 128 != 0 || mapy % 128 != 0 || squareSize != 8 || texelPerSquare != 8 || tilesize != 32) {  	throw new Exception ("Invalid SMF header");  }  
Magic Number,CMissionLib.UnitSyncLib,TileFileHeader,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\TileFileHeader.cs,SelfCheck,The following statement contains a magic number: if (version != 1 || tileSize != 32 || compressionType != 1 || magic != "spring tilefile" || tileNumber != numTiles)  	throw new Exception ("Invalid SMT");  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: for (var block = 0; block < blockCount; block++) {  	var x = 4 * (block % ((size + 3) / 4)) + offsetX;  	var y = 4 * (block / ((size + 3) / 4)) + offsetY;  	DecodeDxt1Block (progress' (int*)destinationBitmap' x' y' stride / UncompressedBytesPerPixel);  	progress += 8;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Texture,The following statement contains a magic number: progress += 8;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = 0;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = *(ushort*)&blockData [2];  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = *(ushort*)&blockData [2];  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [2] = ((r0 * 2 + r1) / 3) << 16 | ((g0 * 2 + g1) / 3) << 8 | ((b0 * 2 + b1) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [3] = ((r0 + r1 * 2) / 3) << 16 | ((g0 + g1 * 2) / 3) << 8 | ((b0 + b1 * 2) / 3);  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [0] = r0 << 16 | g0 << 8 | b0;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [0] = r0 << 16 | g0 << 8 | b0;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [1] = r1 << 16 | g1 << 8 | b1;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: colors [1] = r1 << 16 | g1 << 8 | b1;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: for (var y = 0; y < 4; y++) {  	for (var x = 0; x < 4; x++) {  		destinationBitmap [(y + offsetY) * stride + (x + offsetX)] = colors [bits & 0x3];  		bits >>= 2;  	}  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: for (var y = 0; y < 4; y++) {  	for (var x = 0; x < 4; x++) {  		destinationBitmap [(y + offsetY) * stride + (x + offsetX)] = colors [bits & 0x3];  		bits >>= 2;  	}  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: for (var y = 0; y < 4; y++) {  	for (var x = 0; x < 4; x++) {  		destinationBitmap [(y + offsetY) * stride + (x + offsetX)] = colors [bits & 0x3];  		bits >>= 2;  	}  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: for (var x = 0; x < 4; x++) {  	destinationBitmap [(y + offsetY) * stride + (x + offsetX)] = colors [bits & 0x3];  	bits >>= 2;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: for (var x = 0; x < 4; x++) {  	destinationBitmap [(y + offsetY) * stride + (x + offsetX)] = colors [bits & 0x3];  	bits >>= 2;  }  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,DecodeDxt1Block,The following statement contains a magic number: bits >>= 2;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,UnpackRed,The following statement contains a magic number: return (x & 0x0000F800) >> 8;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,UnpackGreen,The following statement contains a magic number: return (x & 0x000007E0) >> 3;  
Magic Number,CMissionLib.UnitSyncLib,Tiles,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Tiles.cs,UnpackBlue,The following statement contains a magic number: return (x & 0x0000001F) << 3;  
Magic Number,CMissionLib.UnitSyncLib,Mod,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Mod.cs,ExtractNameAndVersion,The following statement contains a magic number: if (match.Success) {  	double.TryParse (match.Groups [2].Value' out version);  	name = match.Groups [1].Value;  }  
Magic Number,CMissionLib.UnitSyncLib,Mod,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Mod.cs,ExtractNameAndVersion,The following statement contains a magic number: double.TryParse (match.Groups [2].Value' out version);  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,UnitSync,The following statement contains a magic number: if (!NativeMethods.Init (false' 666))  	throw new UnitSyncException ("Unitsync initialization failed.");  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: try {  	var infoMapPointer = Marshal.UnsafeAddrOfPinnedArrayElement (infoMapData' 0);  	var bitmap = new Bitmap (width' height' PixelFormat.Format24bppRgb);  	try {  		if (!NativeMethods.GetInfoMap (mapName' name' infoMapPointer' bytesPerPixel))  			throw new UnitSyncException ("GetInfoMap failed");  		var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat);  		const int PixelSize = 3;  		var p = (byte*)bitmapData.Scan0;  		for (var i = 0; i < infoMapData.Length; i++) {  			var v = infoMapData [i];  			var d = i / width * bitmapData.Stride + i % width * PixelSize;  			p [d] = p [d + 1] = p [d + 2] = v;  		}  		bitmap.UnlockBits (bitmapData);  	} catch {  		bitmap.Dispose ();  		throw;  	}  	return bitmap;  } finally {  	infoMapHandle.Free ();  }  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: try {  	var infoMapPointer = Marshal.UnsafeAddrOfPinnedArrayElement (infoMapData' 0);  	var bitmap = new Bitmap (width' height' PixelFormat.Format24bppRgb);  	try {  		if (!NativeMethods.GetInfoMap (mapName' name' infoMapPointer' bytesPerPixel))  			throw new UnitSyncException ("GetInfoMap failed");  		var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat);  		const int PixelSize = 3;  		var p = (byte*)bitmapData.Scan0;  		for (var i = 0; i < infoMapData.Length; i++) {  			var v = infoMapData [i];  			var d = i / width * bitmapData.Stride + i % width * PixelSize;  			p [d] = p [d + 1] = p [d + 2] = v;  		}  		bitmap.UnlockBits (bitmapData);  	} catch {  		bitmap.Dispose ();  		throw;  	}  	return bitmap;  } finally {  	infoMapHandle.Free ();  }  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: try {  	if (!NativeMethods.GetInfoMap (mapName' name' infoMapPointer' bytesPerPixel))  		throw new UnitSyncException ("GetInfoMap failed");  	var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat);  	const int PixelSize = 3;  	var p = (byte*)bitmapData.Scan0;  	for (var i = 0; i < infoMapData.Length; i++) {  		var v = infoMapData [i];  		var d = i / width * bitmapData.Stride + i % width * PixelSize;  		p [d] = p [d + 1] = p [d + 2] = v;  	}  	bitmap.UnlockBits (bitmapData);  } catch {  	bitmap.Dispose ();  	throw;  }  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: try {  	if (!NativeMethods.GetInfoMap (mapName' name' infoMapPointer' bytesPerPixel))  		throw new UnitSyncException ("GetInfoMap failed");  	var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat);  	const int PixelSize = 3;  	var p = (byte*)bitmapData.Scan0;  	for (var i = 0; i < infoMapData.Length; i++) {  		var v = infoMapData [i];  		var d = i / width * bitmapData.Stride + i % width * PixelSize;  		p [d] = p [d + 1] = p [d + 2] = v;  	}  	bitmap.UnlockBits (bitmapData);  } catch {  	bitmap.Dispose ();  	throw;  }  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: for (var i = 0; i < infoMapData.Length; i++) {  	var v = infoMapData [i];  	var d = i / width * bitmapData.Stride + i % width * PixelSize;  	p [d] = p [d + 1] = p [d + 2] = v;  }  
Magic Number,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: p [d] = p [d + 1] = p [d + 2] = v;  
Missing Default,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,ProcessModInfoItem,The following switch statement is missing a default case: switch (key) {  case "description":  	mod.Description = NativeMethods.GetInfoValueString (index);  	break;  case "mutator":  	mod.Mutator = NativeMethods.GetInfoValueString (index);  	break;  case "name":  	mod.Name = NativeMethods.GetInfoValueString (index);  	break;  case "shortname":  	mod.ShortName = NativeMethods.GetInfoValueString (index);  	break;  case "version":  	mod.PrimaryModVersion = NativeMethods.GetInfoValueString (index);  	break;  }  
Missing Default,CMissionLib.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\NativeMethods.cs,ProcessMapInfoItem,The following switch statement is missing a default case: switch (key) {  case "description":  	info.description = NativeMethods.GetInfoValueString (index);  	break;  case "author":  	info.author = NativeMethods.GetInfoValueString (index);  	break;  case "tidalStrength":  	info.tidalStrength = NativeMethods.GetInfoValueInteger (index);  	break;  case "gravity":  	info.gravity = NativeMethods.GetInfoValueInteger (index);  	break;  case "maxMetal":  	info.maxMetal = NativeMethods.GetInfoValueFloat (index);  	break;  case "extractorRadius":  	info.extractorRadius = NativeMethods.GetInfoValueInteger (index);  	break;  case "minWind":  	info.minWind = NativeMethods.GetInfoValueInteger (index);  	break;  case "maxWind":  	info.maxWind = NativeMethods.GetInfoValueInteger (index);  	break;  case "width":  	info.width = NativeMethods.GetInfoValueInteger (index);  	break;  case "height":  	info.height = NativeMethods.GetInfoValueInteger (index);  	break;  }  
Missing Default,CMissionLib.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\CMissionLib\UnitSyncLib\Option.cs,GetPair,The following switch statement is missing a default case: switch (Type) {  case OptionType.Bool:  	if (Value != "0" && Value != "1")  		return false;  	result = ConstructLine (Value);  	return true;  case OptionType.Number:  	double d;  	if (!double.TryParse (Value' out d))  		return false;  	if (d < min || d > max)  		return false;  	result = ConstructLine (Value);  	return true;  case OptionType.String:  	if (strMaxLen != 0 && Value.Length > strMaxLen)  		return false;  	result = ConstructLine (Value);  	return true;  case OptionType.List:  	foreach (var lop in ListOptions) {  		if (lop.Key == Value) {  			result = ConstructLine (lop.Key);  			return true;  		}  	}  	return false;  }  
