Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadInternal,The method has 112 lines of code.
Long Method,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadTorrentFiles,The method has 72 lines of code.
Long Method,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,ProcessInfo,The method has 68 lines of code.
Complex Method,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,IsSafe,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadInternal,Cyclomatic complexity of the method is 70
Complex Method,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadTorrentFiles,Cyclomatic complexity of the method is 30
Complex Method,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,ProcessInfo,Cyclomatic complexity of the method is 47
Complex Method,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetAllFilePaths,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,LoadFiles,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.BEncoding,BEncodedDictionary,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedDictionary.cs,DecodeTorrent,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.BEncoding,BEncodedDictionary,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedDictionary.cs,DecodeInternal,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.BEncoding,BEncodedList,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedList.cs,DecodeInternal,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,DecodeInternal,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.BEncoding,BEncodedString,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,DecodeInternal,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.BEncoding,BEncodedValue,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\IBEncodedValue.cs,Decode,Cyclomatic complexity of the method is 24
Complex Method,MonoTorrent.Client.PieceWriters,DiskWriter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\DiskWriter.cs,Read,Cyclomatic complexity of the method is 7
Complex Method,MonoTorrent.Client.PieceWriters,DiskWriter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\DiskWriter.cs,Write,Cyclomatic complexity of the method is 8
Long Parameter List,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecode,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,Toolbox,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\ToolBox.cs,ByteMatch,The method has 5 parameters.
Long Parameter List,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,CreateMultiFileTorrent,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,CreateSingleFileTorrent,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,TorrentFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentFile.cs,TorrentFile,The method has 4 parameters.
Long Parameter List,MonoTorrent.Common,TorrentFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentFile.cs,TorrentFile,The method has 7 parameters.
Long Parameter List,MonoTorrent.Common,TorrentCreatorEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\EventArgs\TorrentCreatorEventArgs.cs,TorrentCreatorEventArgs,The method has 4 parameters.
Long Parameter List,MonoTorrent.BEncoding,BEncodedValue,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\IBEncodedValue.cs,Decode,The method has 4 parameters.
Long Parameter List,MonoTorrent.BEncoding,BEncodedValue,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\IBEncodedValue.cs,Decode,The method has 4 parameters.
Long Parameter List,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The method has 5 parameters.
Long Parameter List,MonoTorrent.Client,SparseFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\NtfsSparseFile.cs,CreateFileW,The method has 7 parameters.
Long Parameter List,MonoTorrent.Client,SparseFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\NtfsSparseFile.cs,DeviceIoControl,The method has 8 parameters.
Long Parameter List,MonoTorrent.Client,SparseFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\NtfsSparseFile.cs,GetVolumeInformationW,The method has 8 parameters.
Long Parameter List,MonoTorrent.Client,TorrentFileStream,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\TorrentFileStream.cs,TorrentFileStream,The method has 5 parameters.
Long Parameter List,MonoTorrent.Client,BufferedIO,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\PieceData.cs,BufferedIO,The method has 7 parameters.
Long Parameter List,MonoTorrent.Client,BufferedIO,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\PieceData.cs,BufferedIO,The method has 8 parameters.
Long Parameter List,MonoTorrent.Client.PieceWriters,PieceWriter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\PieceWriter.cs,Move,The method has 4 parameters.
Long Parameter List,MonoTorrent.Client.PieceWriters,PieceWriter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\PieceWriter.cs,Move,The method has 4 parameters.
Long Parameter List,MonoTorrent.Client.PieceWriters,DiskWriter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\DiskWriter.cs,Move,The method has 4 parameters.
Long Statement,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The length of the statement  "		array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0); " is 120.
Long Statement,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadInternal,The length of the statement  "						throw new BEncodingException (String.Format ("Non-BEncodedList found in announce-list (found {0})"' announces [j].GetType ())); " is 127.
Long Statement,MonoTorrent.BEncoding,BEncodedDictionary,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedDictionary.cs,DecodeInternal,The length of the statement  "					throw new BEncodingException (String.Format ("Illegal BEncodedDictionary. The attributes are not ordered correctly. Old key: {0}' New key: {1}"' oldkey' key)); " is 159.
Long Statement,MonoTorrent.Client,SparseFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\NtfsSparseFile.cs,CanCreateSparse,The length of the statement  "	var result = GetVolumeInformationW (volume' volumeName' MAX_PATH' out serialNumber' out maxComponent' out fsFlags' systemName' MAX_PATH); " is 137.
Complex Conditional,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,IsSafe,The conditional expression  "(((ch >= 'a') && (ch <= 'z')) || ((ch >= 'A') && (ch <= 'Z'))) || ((ch >= '0') && (ch <= '9'))"  is complex.
Complex Conditional,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The conditional expression  "((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0))"  is complex.
Complex Conditional,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The conditional expression  "((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0))"  is complex.
Empty Catch Block,MonoTorrent.Client,SparseFile,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\PieceWriter\NtfsSparseFile.cs,CreateSparse,The method has an empty catch block.
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,IntToHex,The following statement contains a magic number: if (n <= 9)  	return (char)(n + 0x30);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,IntToHex,The following statement contains a magic number: return (char)((n - 10) + 0x61);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,HexToInt,The following statement contains a magic number: if ((h >= 'a') && (h <= 'f'))  	return ((h - 'a') + 10);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,HexToInt,The following statement contains a magic number: return ((h - 'a') + 10);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,HexToInt,The following statement contains a magic number: if ((h >= 'A') && (h <= 'F'))  	return ((h - 'A') + 10);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,HexToInt,The following statement contains a magic number: return ((h - 'A') + 10);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var num4 = buf [index];  	if (num4 == 0x2b)  		num4 = 0x20;  	else if ((num4 == 0x25) && (i < (count - 2))) {  		var num5 = HexToInt ((char)buf [index + 1]);  		var num6 = HexToInt ((char)buf [index + 2]);  		if ((num5 >= 0) && (num6 >= 0)) {  			num4 = (byte)((num5 << 4) | num6);  			i += 2;  		}  	}  	sourceArray [length++] = num4;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var num4 = buf [index];  	if (num4 == 0x2b)  		num4 = 0x20;  	else if ((num4 == 0x25) && (i < (count - 2))) {  		var num5 = HexToInt ((char)buf [index + 1]);  		var num6 = HexToInt ((char)buf [index + 2]);  		if ((num5 >= 0) && (num6 >= 0)) {  			num4 = (byte)((num5 << 4) | num6);  			i += 2;  		}  	}  	sourceArray [length++] = num4;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var num4 = buf [index];  	if (num4 == 0x2b)  		num4 = 0x20;  	else if ((num4 == 0x25) && (i < (count - 2))) {  		var num5 = HexToInt ((char)buf [index + 1]);  		var num6 = HexToInt ((char)buf [index + 2]);  		if ((num5 >= 0) && (num6 >= 0)) {  			num4 = (byte)((num5 << 4) | num6);  			i += 2;  		}  	}  	sourceArray [length++] = num4;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var num4 = buf [index];  	if (num4 == 0x2b)  		num4 = 0x20;  	else if ((num4 == 0x25) && (i < (count - 2))) {  		var num5 = HexToInt ((char)buf [index + 1]);  		var num6 = HexToInt ((char)buf [index + 2]);  		if ((num5 >= 0) && (num6 >= 0)) {  			num4 = (byte)((num5 << 4) | num6);  			i += 2;  		}  	}  	sourceArray [length++] = num4;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if (num4 == 0x2b)  	num4 = 0x20;  else if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if (num4 == 0x2b)  	num4 = 0x20;  else if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if (num4 == 0x2b)  	num4 = 0x20;  else if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if (num4 == 0x2b)  	num4 = 0x20;  else if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if ((num4 == 0x25) && (i < (count - 2))) {  	var num5 = HexToInt ((char)buf [index + 1]);  	var num6 = HexToInt ((char)buf [index + 2]);  	if ((num5 >= 0) && (num6 >= 0)) {  		num4 = (byte)((num5 << 4) | num6);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if ((num5 >= 0) && (num6 >= 0)) {  	num4 = (byte)((num5 << 4) | num6);  	i += 2;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: if ((num5 >= 0) && (num6 >= 0)) {  	num4 = (byte)((num5 << 4) | num6);  	i += 2;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: num4 = (byte)((num5 << 4) | num6);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeBytesFromBytesInternal,The following statement contains a magic number: i += 2;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: for (var i = 0; i < count; i++) {  	var index = offset + i;  	var b = buf [index];  	if (b == 0x2b)  		b = 0x20;  	else if ((b == 0x25) && (i < (count - 2))) {  		if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  			var num4 = HexToInt ((char)buf [index + 2]);  			var num5 = HexToInt ((char)buf [index + 3]);  			var num6 = HexToInt ((char)buf [index + 4]);  			var num7 = HexToInt ((char)buf [index + 5]);  			if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  				goto Label_00DA;  			var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num8 = HexToInt ((char)buf [index + 1]);  		var num9 = HexToInt ((char)buf [index + 2]);  		if ((num8 >= 0) && (num9 >= 0)) {  			b = (byte)((num8 << 4) | num9);  			i += 2;  		}  	}  	Label_00DA:  	decoder.AddByte (b);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if (b == 0x2b)  	b = 0x20;  else if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((b == 0x25) && (i < (count - 2))) {  	if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  		var num4 = HexToInt ((char)buf [index + 2]);  		var num5 = HexToInt ((char)buf [index + 3]);  		var num6 = HexToInt ((char)buf [index + 4]);  		var num7 = HexToInt ((char)buf [index + 5]);  		if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  			goto Label_00DA;  		var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num8 = HexToInt ((char)buf [index + 1]);  	var num9 = HexToInt ((char)buf [index + 2]);  	if ((num8 >= 0) && (num9 >= 0)) {  		b = (byte)((num8 << 4) | num9);  		i += 2;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((buf [index + 1] == 0x75) && (i < (count - 5))) {  	var num4 = HexToInt ((char)buf [index + 2]);  	var num5 = HexToInt ((char)buf [index + 3]);  	var num6 = HexToInt ((char)buf [index + 4]);  	var num7 = HexToInt ((char)buf [index + 5]);  	if (((num4 < 0) || (num5 < 0)) || ((num6 < 0) || (num7 < 0)))  		goto Label_00DA;  	var ch = (char)((((num4 << 12) | (num5 << 8)) | (num6 << 4)) | num7);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: i += 5;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((num8 >= 0) && (num9 >= 0)) {  	b = (byte)((num8 << 4) | num9);  	i += 2;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: if ((num8 >= 0) && (num9 >= 0)) {  	b = (byte)((num8 << 4) | num9);  	i += 2;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: b = (byte)((num8 << 4) | num9);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromBytesInternal,The following statement contains a magic number: i += 2;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if (ch == '+')  		ch = ' ';  	else if ((ch == '%') && (i < (length - 2))) {  		if ((s [i + 1] == 'u') && (i < (length - 5))) {  			var num3 = HexToInt (s [i + 2]);  			var num4 = HexToInt (s [i + 3]);  			var num5 = HexToInt (s [i + 4]);  			var num6 = HexToInt (s [i + 5]);  			if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  				goto Label_0106;  			ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  			i += 5;  			decoder.AddChar (ch);  			continue;  		}  		var num7 = HexToInt (s [i + 1]);  		var num8 = HexToInt (s [i + 2]);  		if ((num7 >= 0) && (num8 >= 0)) {  			var b = (byte)((num7 << 4) | num8);  			i += 2;  			decoder.AddByte (b);  			continue;  		}  	}  	Label_0106:  	if ((ch & 0xff80) == 0)  		decoder.AddByte ((byte)ch);  	else  		decoder.AddChar (ch);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if (ch == '+')  	ch = ' ';  else if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((ch == '%') && (i < (length - 2))) {  	if ((s [i + 1] == 'u') && (i < (length - 5))) {  		var num3 = HexToInt (s [i + 2]);  		var num4 = HexToInt (s [i + 3]);  		var num5 = HexToInt (s [i + 4]);  		var num6 = HexToInt (s [i + 5]);  		if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  			goto Label_0106;  		ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  		i += 5;  		decoder.AddChar (ch);  		continue;  	}  	var num7 = HexToInt (s [i + 1]);  	var num8 = HexToInt (s [i + 2]);  	if ((num7 >= 0) && (num8 >= 0)) {  		var b = (byte)((num7 << 4) | num8);  		i += 2;  		decoder.AddByte (b);  		continue;  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((s [i + 1] == 'u') && (i < (length - 5))) {  	var num3 = HexToInt (s [i + 2]);  	var num4 = HexToInt (s [i + 3]);  	var num5 = HexToInt (s [i + 4]);  	var num6 = HexToInt (s [i + 5]);  	if (((num3 < 0) || (num4 < 0)) || ((num5 < 0) || (num6 < 0)))  		goto Label_0106;  	ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  	i += 5;  	decoder.AddChar (ch);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: ch = (char)((((num3 << 12) | (num4 << 8)) | (num5 << 4)) | num6);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: i += 5;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((num7 >= 0) && (num8 >= 0)) {  	var b = (byte)((num7 << 4) | num8);  	i += 2;  	decoder.AddByte (b);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: if ((num7 >= 0) && (num8 >= 0)) {  	var b = (byte)((num7 << 4) | num8);  	i += 2;  	decoder.AddByte (b);  	continue;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlDecodeStringFromStringInternal,The following statement contains a magic number: i += 2;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: for (var j = 0; j < count; j++) {  	var num6 = bytes [offset + j];  	var ch2 = (char)num6;  	if (IsSafe (ch2))  		buffer [num4++] = num6;  	else if (ch2 == ' ')  		buffer [num4++] = 0x2b;  	else {  		buffer [num4++] = 0x25;  		buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  		buffer [num4++] = (byte)IntToHex (num6 & 15);  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: for (var j = 0; j < count; j++) {  	var num6 = bytes [offset + j];  	var ch2 = (char)num6;  	if (IsSafe (ch2))  		buffer [num4++] = num6;  	else if (ch2 == ' ')  		buffer [num4++] = 0x2b;  	else {  		buffer [num4++] = 0x25;  		buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  		buffer [num4++] = (byte)IntToHex (num6 & 15);  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: for (var j = 0; j < count; j++) {  	var num6 = bytes [offset + j];  	var ch2 = (char)num6;  	if (IsSafe (ch2))  		buffer [num4++] = num6;  	else if (ch2 == ' ')  		buffer [num4++] = 0x2b;  	else {  		buffer [num4++] = 0x25;  		buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  		buffer [num4++] = (byte)IntToHex (num6 & 15);  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (IsSafe (ch2))  	buffer [num4++] = num6;  else if (ch2 == ' ')  	buffer [num4++] = 0x2b;  else {  	buffer [num4++] = 0x25;  	buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  	buffer [num4++] = (byte)IntToHex (num6 & 15);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (IsSafe (ch2))  	buffer [num4++] = num6;  else if (ch2 == ' ')  	buffer [num4++] = 0x2b;  else {  	buffer [num4++] = 0x25;  	buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  	buffer [num4++] = (byte)IntToHex (num6 & 15);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (IsSafe (ch2))  	buffer [num4++] = num6;  else if (ch2 == ' ')  	buffer [num4++] = 0x2b;  else {  	buffer [num4++] = 0x25;  	buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  	buffer [num4++] = (byte)IntToHex (num6 & 15);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (ch2 == ' ')  	buffer [num4++] = 0x2b;  else {  	buffer [num4++] = 0x25;  	buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  	buffer [num4++] = (byte)IntToHex (num6 & 15);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (ch2 == ' ')  	buffer [num4++] = 0x2b;  else {  	buffer [num4++] = 0x25;  	buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  	buffer [num4++] = (byte)IntToHex (num6 & 15);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: if (ch2 == ' ')  	buffer [num4++] = 0x2b;  else {  	buffer [num4++] = 0x25;  	buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  	buffer [num4++] = (byte)IntToHex (num6 & 15);  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: buffer [num4++] = (byte)IntToHex ((num6 >> 4) & 15);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternal,The following statement contains a magic number: buffer [num4++] = (byte)IntToHex (num6 & 15);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: for (var j = 0; j < count; j++) {  	var b = bytes [offset + j];  	if (IsNonAsciiByte (b)) {  		buffer [num3++] = 0x25;  		buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  		buffer [num3++] = (byte)IntToHex (b & 15);  	} else  		buffer [num3++] = b;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: for (var j = 0; j < count; j++) {  	var b = bytes [offset + j];  	if (IsNonAsciiByte (b)) {  		buffer [num3++] = 0x25;  		buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  		buffer [num3++] = (byte)IntToHex (b & 15);  	} else  		buffer [num3++] = b;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: for (var j = 0; j < count; j++) {  	var b = bytes [offset + j];  	if (IsNonAsciiByte (b)) {  		buffer [num3++] = 0x25;  		buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  		buffer [num3++] = (byte)IntToHex (b & 15);  	} else  		buffer [num3++] = b;  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: if (IsNonAsciiByte (b)) {  	buffer [num3++] = 0x25;  	buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  	buffer [num3++] = (byte)IntToHex (b & 15);  } else  	buffer [num3++] = b;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: if (IsNonAsciiByte (b)) {  	buffer [num3++] = 0x25;  	buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  	buffer [num3++] = (byte)IntToHex (b & 15);  } else  	buffer [num3++] = b;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: if (IsNonAsciiByte (b)) {  	buffer [num3++] = 0x25;  	buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  	buffer [num3++] = (byte)IntToHex (b & 15);  } else  	buffer [num3++] = b;  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: buffer [num3++] = (byte)IntToHex ((b >> 4) & 15);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeBytesToBytesInternalNonAscii,The following statement contains a magic number: buffer [num3++] = (byte)IntToHex (b & 15);  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if ((ch & 0xff80) == 0) {  		if (ignoreAscii || IsSafe (ch))  			builder.Append (ch);  		else if (ch == ' ')  			builder.Append ('+');  		else {  			builder.Append ('%');  			builder.Append (IntToHex ((ch >> 4) & '\x000f'));  			builder.Append (IntToHex (ch & '\x000f'));  		}  	} else {  		builder.Append ("%u");  		builder.Append (IntToHex ((ch >> 12) & '\x000f'));  		builder.Append (IntToHex ((ch >> 8) & '\x000f'));  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if ((ch & 0xff80) == 0) {  		if (ignoreAscii || IsSafe (ch))  			builder.Append (ch);  		else if (ch == ' ')  			builder.Append ('+');  		else {  			builder.Append ('%');  			builder.Append (IntToHex ((ch >> 4) & '\x000f'));  			builder.Append (IntToHex (ch & '\x000f'));  		}  	} else {  		builder.Append ("%u");  		builder.Append (IntToHex ((ch >> 12) & '\x000f'));  		builder.Append (IntToHex ((ch >> 8) & '\x000f'));  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if ((ch & 0xff80) == 0) {  		if (ignoreAscii || IsSafe (ch))  			builder.Append (ch);  		else if (ch == ' ')  			builder.Append ('+');  		else {  			builder.Append ('%');  			builder.Append (IntToHex ((ch >> 4) & '\x000f'));  			builder.Append (IntToHex (ch & '\x000f'));  		}  	} else {  		builder.Append ("%u");  		builder.Append (IntToHex ((ch >> 12) & '\x000f'));  		builder.Append (IntToHex ((ch >> 8) & '\x000f'));  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var ch = s [i];  	if ((ch & 0xff80) == 0) {  		if (ignoreAscii || IsSafe (ch))  			builder.Append (ch);  		else if (ch == ' ')  			builder.Append ('+');  		else {  			builder.Append ('%');  			builder.Append (IntToHex ((ch >> 4) & '\x000f'));  			builder.Append (IntToHex (ch & '\x000f'));  		}  	} else {  		builder.Append ("%u");  		builder.Append (IntToHex ((ch >> 12) & '\x000f'));  		builder.Append (IntToHex ((ch >> 8) & '\x000f'));  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: if ((ch & 0xff80) == 0) {  	if (ignoreAscii || IsSafe (ch))  		builder.Append (ch);  	else if (ch == ' ')  		builder.Append ('+');  	else {  		builder.Append ('%');  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  } else {  	builder.Append ("%u");  	builder.Append (IntToHex ((ch >> 12) & '\x000f'));  	builder.Append (IntToHex ((ch >> 8) & '\x000f'));  	builder.Append (IntToHex ((ch >> 4) & '\x000f'));  	builder.Append (IntToHex (ch & '\x000f'));  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: if ((ch & 0xff80) == 0) {  	if (ignoreAscii || IsSafe (ch))  		builder.Append (ch);  	else if (ch == ' ')  		builder.Append ('+');  	else {  		builder.Append ('%');  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  } else {  	builder.Append ("%u");  	builder.Append (IntToHex ((ch >> 12) & '\x000f'));  	builder.Append (IntToHex ((ch >> 8) & '\x000f'));  	builder.Append (IntToHex ((ch >> 4) & '\x000f'));  	builder.Append (IntToHex (ch & '\x000f'));  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: if ((ch & 0xff80) == 0) {  	if (ignoreAscii || IsSafe (ch))  		builder.Append (ch);  	else if (ch == ' ')  		builder.Append ('+');  	else {  		builder.Append ('%');  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  } else {  	builder.Append ("%u");  	builder.Append (IntToHex ((ch >> 12) & '\x000f'));  	builder.Append (IntToHex ((ch >> 8) & '\x000f'));  	builder.Append (IntToHex ((ch >> 4) & '\x000f'));  	builder.Append (IntToHex (ch & '\x000f'));  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: if ((ch & 0xff80) == 0) {  	if (ignoreAscii || IsSafe (ch))  		builder.Append (ch);  	else if (ch == ' ')  		builder.Append ('+');  	else {  		builder.Append ('%');  		builder.Append (IntToHex ((ch >> 4) & '\x000f'));  		builder.Append (IntToHex (ch & '\x000f'));  	}  } else {  	builder.Append ("%u");  	builder.Append (IntToHex ((ch >> 12) & '\x000f'));  	builder.Append (IntToHex ((ch >> 8) & '\x000f'));  	builder.Append (IntToHex ((ch >> 4) & '\x000f'));  	builder.Append (IntToHex (ch & '\x000f'));  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: if (ignoreAscii || IsSafe (ch))  	builder.Append (ch);  else if (ch == ' ')  	builder.Append ('+');  else {  	builder.Append ('%');  	builder.Append (IntToHex ((ch >> 4) & '\x000f'));  	builder.Append (IntToHex (ch & '\x000f'));  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: if (ch == ' ')  	builder.Append ('+');  else {  	builder.Append ('%');  	builder.Append (IntToHex ((ch >> 4) & '\x000f'));  	builder.Append (IntToHex (ch & '\x000f'));  }  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: builder.Append (IntToHex ((ch >> 4) & '\x000f'));  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: builder.Append (IntToHex ((ch >> 12) & '\x000f'));  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: builder.Append (IntToHex ((ch >> 8) & '\x000f'));  
Magic Number,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,UrlEncodeUnicodeStringToStringInternal,The following statement contains a magic number: builder.Append (IntToHex ((ch >> 4) & '\x000f'));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,BitField,The following statement contains a magic number: array = new int[(length + 31) / 32];  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,BitField,The following statement contains a magic number: array = new int[(length + 31) / 32];  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,BitField,The following statement contains a magic number: this.array = new int[(array.Length + 31) / 32];  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,BitField,The following statement contains a magic number: this.array = new int[(array.Length + 31) / 32];  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Clone,The following statement contains a magic number: Buffer.BlockCopy (array' 0' b.array' 0' array.Length * 4);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstFalse,The following statement contains a magic number: for (var i = (startIndex / 32); i <= loopEnd; i++) {  	if (array [i] == ~0)  		// This one has no false values  		continue;  	start = i * 32;  	end = start + 32;  	start = (start < startIndex) ? startIndex : start;  	end = (end > length) ? length : end;  	end = (end > endIndex) ? endIndex : end;  	if (end == Length && end > 0)  		end--;  	for (var j = start; j <= end; j++) {  		if (!Get (j))  			// This piece is true  			return j;  	}  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstFalse,The following statement contains a magic number: for (var i = (startIndex / 32); i <= loopEnd; i++) {  	if (array [i] == ~0)  		// This one has no false values  		continue;  	start = i * 32;  	end = start + 32;  	start = (start < startIndex) ? startIndex : start;  	end = (end > length) ? length : end;  	end = (end > endIndex) ? endIndex : end;  	if (end == Length && end > 0)  		end--;  	for (var j = start; j <= end; j++) {  		if (!Get (j))  			// This piece is true  			return j;  	}  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstFalse,The following statement contains a magic number: for (var i = (startIndex / 32); i <= loopEnd; i++) {  	if (array [i] == ~0)  		// This one has no false values  		continue;  	start = i * 32;  	end = start + 32;  	start = (start < startIndex) ? startIndex : start;  	end = (end > length) ? length : end;  	end = (end > endIndex) ? endIndex : end;  	if (end == Length && end > 0)  		end--;  	for (var j = start; j <= end; j++) {  		if (!Get (j))  			// This piece is true  			return j;  	}  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstFalse,The following statement contains a magic number: start = i * 32;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstFalse,The following statement contains a magic number: end = start + 32;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstTrue,The following statement contains a magic number: for (var i = (startIndex / 32); i <= loopEnd; i++) {  	if (array [i] == 0)  		// This one has no true values  		continue;  	start = i * 32;  	end = start + 32;  	start = (start < startIndex) ? startIndex : start;  	end = (end > length) ? length : end;  	end = (end > endIndex) ? endIndex : end;  	if (end == Length && end > 0)  		end--;  	for (var j = start; j <= end; j++) {  		if (Get (j))  			// This piece is true  			return j;  	}  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstTrue,The following statement contains a magic number: for (var i = (startIndex / 32); i <= loopEnd; i++) {  	if (array [i] == 0)  		// This one has no true values  		continue;  	start = i * 32;  	end = start + 32;  	start = (start < startIndex) ? startIndex : start;  	end = (end > length) ? length : end;  	end = (end > endIndex) ? endIndex : end;  	if (end == Length && end > 0)  		end--;  	for (var j = start; j <= end; j++) {  		if (Get (j))  			// This piece is true  			return j;  	}  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstTrue,The following statement contains a magic number: for (var i = (startIndex / 32); i <= loopEnd; i++) {  	if (array [i] == 0)  		// This one has no true values  		continue;  	start = i * 32;  	end = start + 32;  	start = (start < startIndex) ? startIndex : start;  	end = (end > length) ? length : end;  	end = (end > endIndex) ? endIndex : end;  	if (end == Length && end > 0)  		end--;  	for (var j = start; j <= end; j++) {  		if (Get (j))  			// This piece is true  			return j;  	}  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstTrue,The following statement contains a magic number: start = i * 32;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FirstTrue,The following statement contains a magic number: end = start + 32;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,From,The following statement contains a magic number: Buffer.BlockCopy (value.array' 0' array' 0' array.Length * 4);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: for (var i = 0; i < end; i++)  	array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: for (var i = 0; i < end; i++)  	array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: for (var i = 0; i < end; i++)  	array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: array [i] = (buffer [offset++] << 24) | (buffer [offset++] << 16) | (buffer [offset++] << 8) | (buffer [offset++] << 0);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: for (var i = end * 32; i < Length; i += 8) {  	array [array.Length - 1] |= buffer [offset++] << shift;  	shift -= 8;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: for (var i = end * 32; i < Length; i += 8) {  	array [array.Length - 1] |= buffer [offset++] << shift;  	shift -= 8;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: for (var i = end * 32; i < Length; i += 8) {  	array [array.Length - 1] |= buffer [offset++] << shift;  	shift -= 8;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: i += 8
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,FromArray,The following statement contains a magic number: shift -= 8;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if (value) {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  		// If it's not already true  		trueCount++;  	// Increase true count  	array [index >> 5] |= (1 << (31 - index & 31));  } else {  	if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  		// If it's not already false  		trueCount--;  	// Decrease true count  	array [index >> 5] &= ~(1 << (31 - (index & 31)));  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  	// If it's not already true  	trueCount++;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  	// If it's not already true  	trueCount++;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if ((array [index >> 5] & (1 << (31 - (index & 31)))) == 0)  	// If it's not already true  	trueCount++;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: array [index >> 5] |= (1 << (31 - index & 31));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: array [index >> 5] |= (1 << (31 - index & 31));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: array [index >> 5] |= (1 << (31 - index & 31));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  	// If it's not already false  	trueCount--;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  	// If it's not already false  	trueCount--;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: if ((array [index >> 5] & (1 << (31 - (index & 31)))) != 0)  	// If it's not already false  	trueCount--;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: array [index >> 5] &= ~(1 << (31 - (index & 31)));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: array [index >> 5] &= ~(1 << (31 - (index & 31)));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Set,The following statement contains a magic number: array [index >> 5] &= ~(1 << (31 - (index & 31)));  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: for (var i = 0; i < end; i++) {  	buffer [offset++] = (byte)(array [i] >> 24);  	buffer [offset++] = (byte)(array [i] >> 16);  	buffer [offset++] = (byte)(array [i] >> 8);  	buffer [offset++] = (byte)(array [i] >> 0);  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: for (var i = 0; i < end; i++) {  	buffer [offset++] = (byte)(array [i] >> 24);  	buffer [offset++] = (byte)(array [i] >> 16);  	buffer [offset++] = (byte)(array [i] >> 8);  	buffer [offset++] = (byte)(array [i] >> 0);  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: for (var i = 0; i < end; i++) {  	buffer [offset++] = (byte)(array [i] >> 24);  	buffer [offset++] = (byte)(array [i] >> 16);  	buffer [offset++] = (byte)(array [i] >> 8);  	buffer [offset++] = (byte)(array [i] >> 0);  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: buffer [offset++] = (byte)(array [i] >> 24);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: buffer [offset++] = (byte)(array [i] >> 16);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: buffer [offset++] = (byte)(array [i] >> 8);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: for (var i = end * 32; i < Length; i += 8) {  	buffer [offset++] = (byte)(array [array.Length - 1] >> shift);  	shift -= 8;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: for (var i = end * 32; i < Length; i += 8) {  	buffer [offset++] = (byte)(array [array.Length - 1] >> shift);  	shift -= 8;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: for (var i = end * 32; i < Length; i += 8) {  	buffer [offset++] = (byte)(array [array.Length - 1] >> shift);  	shift -= 8;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: i += 8
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,ToByteArray,The following statement contains a magic number: shift -= 8;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Get,The following statement contains a magic number: return (array [index >> 5] & (1 << (31 - (index & 31)))) != 0;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Get,The following statement contains a magic number: return (array [index >> 5] & (1 << (31 - (index & 31)))) != 0;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Get,The following statement contains a magic number: return (array [index >> 5] & (1 << (31 - (index & 31)))) != 0;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Validate,The following statement contains a magic number: for (var i = 0; i < array.Length; i++) {  	var v = (uint)array [i];  	v = v - ((v >> 1) & 0x55555555);  	v = (v & 0x33333333) + ((v >> 2) & 0x33333333);  	count += (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Validate,The following statement contains a magic number: for (var i = 0; i < array.Length; i++) {  	var v = (uint)array [i];  	v = v - ((v >> 1) & 0x55555555);  	v = (v & 0x33333333) + ((v >> 2) & 0x33333333);  	count += (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Validate,The following statement contains a magic number: for (var i = 0; i < array.Length; i++) {  	var v = (uint)array [i];  	v = v - ((v >> 1) & 0x55555555);  	v = (v & 0x33333333) + ((v >> 2) & 0x33333333);  	count += (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;  }  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Validate,The following statement contains a magic number: v = (v & 0x33333333) + ((v >> 2) & 0x33333333);  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Validate,The following statement contains a magic number: count += (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;  
Magic Number,MonoTorrent.Common,BitField,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\BitField.cs,Validate,The following statement contains a magic number: count += (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;  
Magic Number,MonoTorrent.Common,Toolbox,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\ToolBox.cs,ToHex,The following statement contains a magic number: for (var i = 0; i < array.Length; i++) {  	var hex = array [i].ToString ("X");  	if (hex.Length != 2)  		sb.Append ("0");  	sb.Append (hex);  }  
Magic Number,MonoTorrent.Common,Toolbox,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\ToolBox.cs,ToHex,The following statement contains a magic number: if (hex.Length != 2)  	sb.Append ("0");  
Magic Number,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,Torrent,The following statement contains a magic number: creationDate = new DateTime (1970' 1' 1' 0' 0' 0);  
Magic Number,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadHashPieces,The following statement contains a magic number: if (data.Length % 20 != 0)  	throw new TorrentException ("Invalid infohash detected");  
Magic Number,MonoTorrent.Common,Torrent,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\Torrent.cs,LoadHashPieces,The following statement contains a magic number: pieces = new Hashes (data' data.Length / 20);  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,TorrentCreator,The following statement contains a magic number: PieceLength = 256 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,TorrentCreator,The following statement contains a magic number: PieceLength = 256 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetSize,The following statement contains a magic number: if (Directory.Exists (path))  	GetAllFilePaths (path' paths);  else if (File.Exists (path))  	paths.Add (path);  else  	return 64 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetSize,The following statement contains a magic number: if (Directory.Exists (path))  	GetAllFilePaths (path' paths);  else if (File.Exists (path))  	paths.Add (path);  else  	return 64 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetSize,The following statement contains a magic number: if (File.Exists (path))  	paths.Add (path);  else  	return 64 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetSize,The following statement contains a magic number: if (File.Exists (path))  	paths.Add (path);  else  	return 64 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetSize,The following statement contains a magic number: return 64 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,GetSize,The following statement contains a magic number: return 64 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: for (var i = 32768; i < 4 * 1024 * 1024; i *= 2) {  	var pieces = (int)(totalSize / i) + 1;  	if ((pieces * 20) < (60 * 1024))  		return i;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: i *= 2
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: if ((pieces * 20) < (60 * 1024))  	return i;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: if ((pieces * 20) < (60 * 1024))  	return i;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: if ((pieces * 20) < (60 * 1024))  	return i;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: return 4 * 1024 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: return 4 * 1024 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: return 4 * 1024 * 1024;  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: while (totalLength > 0) {  	var bytesToRead = (int)Math.Min (totalLength' PieceLength);  	var io = new BufferedIO (null' buffer' (piecesBufferOffset / 20) * PieceLength' bytesToRead' bytesToRead' files' path);  	totalLength -= writer.ReadChunk (io);  	// If we are using the synchronous version' result is null  	if (result != null && result.Aborted)  		return piecesBuffer;  	var currentHash = hasher.ComputeHash (buffer.Array' 0' io.ActualCount);  	RaiseHashed (new TorrentCreatorEventArgs (0' 0' //reader.CurrentFile.Position' reader.CurrentFile.Length'  	piecesBufferOffset * PieceLength' (piecesBuffer.Length - 20) * PieceLength));  	Buffer.BlockCopy (currentHash' 0' piecesBuffer' piecesBufferOffset' currentHash.Length);  	piecesBufferOffset += currentHash.Length;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: while (totalLength > 0) {  	var bytesToRead = (int)Math.Min (totalLength' PieceLength);  	var io = new BufferedIO (null' buffer' (piecesBufferOffset / 20) * PieceLength' bytesToRead' bytesToRead' files' path);  	totalLength -= writer.ReadChunk (io);  	// If we are using the synchronous version' result is null  	if (result != null && result.Aborted)  		return piecesBuffer;  	var currentHash = hasher.ComputeHash (buffer.Array' 0' io.ActualCount);  	RaiseHashed (new TorrentCreatorEventArgs (0' 0' //reader.CurrentFile.Position' reader.CurrentFile.Length'  	piecesBufferOffset * PieceLength' (piecesBuffer.Length - 20) * PieceLength));  	Buffer.BlockCopy (currentHash' 0' piecesBuffer' piecesBufferOffset' currentHash.Length);  	piecesBufferOffset += currentHash.Length;  }  
Magic Number,MonoTorrent.Common,TorrentCreator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: RaiseHashed (new TorrentCreatorEventArgs (0' 0' //reader.CurrentFile.Position' reader.CurrentFile.Length'  piecesBufferOffset * PieceLength' (piecesBuffer.Length - 20) * PieceLength));  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,DecodeInternal,The following statement contains a magic number: try {  	if (reader.ReadByte () != 'i')  		// remove the leading 'i'  		throw new BEncodingException ("Invalid data found. Aborting.");  	if (reader.PeekChar () == '-') {  		sign = -1;  		reader.ReadChar ();  	}  	int letter;  	while (((letter = reader.PeekChar ()) != -1) && letter != 'e') {  		if (letter < '0' || letter > '9')  			throw new BEncodingException ("Invalid number found.");  		number = number * 10 + (letter - '0');  		reader.ReadChar ();  	}  	if (reader.ReadByte () != 'e')  		//remove the trailing 'e'  		throw new BEncodingException ("Invalid data found. Aborting.");  	number *= sign;  } catch (BEncodingException ex) {  	throw new BEncodingException ("Couldn't decode number"' ex);  } catch {  	throw new BEncodingException ("Couldn't decode number");  }  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,DecodeInternal,The following statement contains a magic number: while (((letter = reader.PeekChar ()) != -1) && letter != 'e') {  	if (letter < '0' || letter > '9')  		throw new BEncodingException ("Invalid number found.");  	number = number * 10 + (letter - '0');  	reader.ReadChar ();  }  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,DecodeInternal,The following statement contains a magic number: number = number * 10 + (letter - '0');  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = number; i != 0; i /= 10)  	reversed = reversed * 10 + i % 10;  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = number; i != 0; i /= 10)  	reversed = reversed * 10 + i % 10;  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = number; i != 0; i /= 10)  	reversed = reversed * 10 + i % 10;  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: i /= 10
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: reversed = reversed * 10 + i % 10;  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: reversed = reversed * 10 + i % 10;  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = reversed; i != 0; i /= 10)  	buffer [written++] = (byte)(i % 10 + '0');  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = reversed; i != 0; i /= 10)  	buffer [written++] = (byte)(i % 10 + '0');  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: i /= 10
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: buffer [written++] = (byte)(i % 10 + '0');  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = number; i % 10 == 0 && number != 0; i /= 10)  	buffer [written++] = (byte)'0';  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: for (var i = number; i % 10 == 0 && number != 0; i /= 10)  	buffer [written++] = (byte)'0';  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: i /= 10
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,LengthInBytes,The following statement contains a magic number: for (var i = number; i != 0; i /= 10)  	count++;  
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,LengthInBytes,The following statement contains a magic number: i /= 10
Magic Number,MonoTorrent.BEncoding,BEncodedString,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,LengthInBytes,The following statement contains a magic number: for (var i = textBytes.Length; i != 0; i = i / 10)  	prefix += 1;  
Magic Number,MonoTorrent.BEncoding,BEncodedString,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,LengthInBytes,The following statement contains a magic number: i = i / 10
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,ReadInt,The following statement contains a magic number: offset += 4;  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,ReadLong,The following statement contains a magic number: offset += 8;  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,ReadShort,The following statement contains a magic number: offset += 2;  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: offset += Write (buffer' offset' (byte)(value >> 8));  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: return 2;  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: offset += Write (buffer' offset' (byte)(value >> 24));  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: offset += Write (buffer' offset' (byte)(value >> 16));  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: offset += Write (buffer' offset' (byte)(value >> 8));  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: return 4;  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: offset += Write (buffer' offset' (int)(value >> 32));  
Magic Number,MonoTorrent.Client.Messages,Message,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,Write,The following statement contains a magic number: return 8;  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,BufferManager,The following statement contains a magic number: AllocateBuffers (4' BufferType.LargeMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,BufferManager,The following statement contains a magic number: AllocateBuffers (4' BufferType.MediumMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,BufferManager,The following statement contains a magic number: AllocateBuffers (4' BufferType.SmallMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (type == BufferType.SmallMessageBuffer) {  	lock (smallMessageBuffers) {  		if (smallMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.SmallMessageBuffer);  		buffer = smallMessageBuffers.Dequeue ();  	}  } else if (type == BufferType.MediumMessageBuffer) {  	lock (mediumMessageBuffers) {  		if (mediumMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.MediumMessageBuffer);  		buffer = mediumMessageBuffers.Dequeue ();  	}  } // If we're getting a large buffer and there are none in the pool' just return a new one.  // Otherwise return one from the pool.  else if (type == BufferType.LargeMessageBuffer) {  	lock (largeMessageBuffers) {  		if (largeMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.LargeMessageBuffer);  		buffer = largeMessageBuffers.Dequeue ();  	}  } else  	throw new TorrentException ("You cannot directly request a massive buffer");  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (type == BufferType.SmallMessageBuffer) {  	lock (smallMessageBuffers) {  		if (smallMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.SmallMessageBuffer);  		buffer = smallMessageBuffers.Dequeue ();  	}  } else if (type == BufferType.MediumMessageBuffer) {  	lock (mediumMessageBuffers) {  		if (mediumMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.MediumMessageBuffer);  		buffer = mediumMessageBuffers.Dequeue ();  	}  } // If we're getting a large buffer and there are none in the pool' just return a new one.  // Otherwise return one from the pool.  else if (type == BufferType.LargeMessageBuffer) {  	lock (largeMessageBuffers) {  		if (largeMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.LargeMessageBuffer);  		buffer = largeMessageBuffers.Dequeue ();  	}  } else  	throw new TorrentException ("You cannot directly request a massive buffer");  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (type == BufferType.SmallMessageBuffer) {  	lock (smallMessageBuffers) {  		if (smallMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.SmallMessageBuffer);  		buffer = smallMessageBuffers.Dequeue ();  	}  } else if (type == BufferType.MediumMessageBuffer) {  	lock (mediumMessageBuffers) {  		if (mediumMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.MediumMessageBuffer);  		buffer = mediumMessageBuffers.Dequeue ();  	}  } // If we're getting a large buffer and there are none in the pool' just return a new one.  // Otherwise return one from the pool.  else if (type == BufferType.LargeMessageBuffer) {  	lock (largeMessageBuffers) {  		if (largeMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.LargeMessageBuffer);  		buffer = largeMessageBuffers.Dequeue ();  	}  } else  	throw new TorrentException ("You cannot directly request a massive buffer");  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: lock (smallMessageBuffers) {  	if (smallMessageBuffers.Count == 0)  		AllocateBuffers (5' BufferType.SmallMessageBuffer);  	buffer = smallMessageBuffers.Dequeue ();  }  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (smallMessageBuffers.Count == 0)  	AllocateBuffers (5' BufferType.SmallMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: AllocateBuffers (5' BufferType.SmallMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (type == BufferType.MediumMessageBuffer) {  	lock (mediumMessageBuffers) {  		if (mediumMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.MediumMessageBuffer);  		buffer = mediumMessageBuffers.Dequeue ();  	}  } // If we're getting a large buffer and there are none in the pool' just return a new one.  // Otherwise return one from the pool.  else if (type == BufferType.LargeMessageBuffer) {  	lock (largeMessageBuffers) {  		if (largeMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.LargeMessageBuffer);  		buffer = largeMessageBuffers.Dequeue ();  	}  } else  	throw new TorrentException ("You cannot directly request a massive buffer");  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (type == BufferType.MediumMessageBuffer) {  	lock (mediumMessageBuffers) {  		if (mediumMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.MediumMessageBuffer);  		buffer = mediumMessageBuffers.Dequeue ();  	}  } // If we're getting a large buffer and there are none in the pool' just return a new one.  // Otherwise return one from the pool.  else if (type == BufferType.LargeMessageBuffer) {  	lock (largeMessageBuffers) {  		if (largeMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.LargeMessageBuffer);  		buffer = largeMessageBuffers.Dequeue ();  	}  } else  	throw new TorrentException ("You cannot directly request a massive buffer");  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: lock (mediumMessageBuffers) {  	if (mediumMessageBuffers.Count == 0)  		AllocateBuffers (5' BufferType.MediumMessageBuffer);  	buffer = mediumMessageBuffers.Dequeue ();  }  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (mediumMessageBuffers.Count == 0)  	AllocateBuffers (5' BufferType.MediumMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: AllocateBuffers (5' BufferType.MediumMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (type == BufferType.LargeMessageBuffer) {  	lock (largeMessageBuffers) {  		if (largeMessageBuffers.Count == 0)  			AllocateBuffers (5' BufferType.LargeMessageBuffer);  		buffer = largeMessageBuffers.Dequeue ();  	}  } else  	throw new TorrentException ("You cannot directly request a massive buffer");  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: lock (largeMessageBuffers) {  	if (largeMessageBuffers.Count == 0)  		AllocateBuffers (5' BufferType.LargeMessageBuffer);  	buffer = largeMessageBuffers.Dequeue ();  }  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: if (largeMessageBuffers.Count == 0)  	AllocateBuffers (5' BufferType.LargeMessageBuffer);  
Magic Number,MonoTorrent.Client,BufferManager,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Client\Managers\BufferManager.cs,GetBuffer,The following statement contains a magic number: AllocateBuffers (5' BufferType.LargeMessageBuffer);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,InfoHash,The following statement contains a magic number: if (infoHash.Length != 20)  	throw new ArgumentException ("Infohash must be exactly 20 bytes long");  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,Equals,The following statement contains a magic number: return other == null || other.Length != 20 ? false : Toolbox.ByteMatch (Hash' other);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromHex,The following statement contains a magic number: if (infoHash.Length != 40)  	throw new ArgumentException ("Infohash must be 40 characters long");  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromHex,The following statement contains a magic number: for (var i = 0; i < hash.Length; i++)  	hash [i] = byte.Parse (infoHash.Substring (i * 2' 2)' NumberStyles.HexNumber);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromHex,The following statement contains a magic number: for (var i = 0; i < hash.Length; i++)  	hash [i] = byte.Parse (infoHash.Substring (i * 2' 2)' NumberStyles.HexNumber);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromHex,The following statement contains a magic number: hash [i] = byte.Parse (infoHash.Substring (i * 2' 2)' NumberStyles.HexNumber);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromHex,The following statement contains a magic number: hash [i] = byte.Parse (infoHash.Substring (i * 2' 2)' NumberStyles.HexNumber);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromMagnetLink,The following statement contains a magic number: if (hashEnd - hashStart != 40)  	throw new ArgumentException ("Infohash is not 40 characters long");  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,FromMagnetLink,The following statement contains a magic number: return FromHex (magnetLink.Substring (hashStart' 40));  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash [0] | (Hash [1] << 8) | (Hash [2] << 16) | (Hash [3] << 24);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash [0] | (Hash [1] << 8) | (Hash [2] << 16) | (Hash [3] << 24);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash [0] | (Hash [1] << 8) | (Hash [2] << 16) | (Hash [3] << 24);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash [0] | (Hash [1] << 8) | (Hash [2] << 16) | (Hash [3] << 24);  
Magic Number,MonoTorrent,InfoHash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MonoTorrent.Common\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash [0] | (Hash [1] << 8) | (Hash [2] << 16) | (Hash [3] << 24);  
Missing Default,MonoTorrent.Common,MyHttpUtility,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\MonoTorrent\MyHttpUtility.cs,IsSafe,The following switch statement is missing a default case: switch (ch) {  case '\'':  case '(':  case ')':  case '*':  case '-':  case '.':  case '_':  case '!':  	return true;  }  
