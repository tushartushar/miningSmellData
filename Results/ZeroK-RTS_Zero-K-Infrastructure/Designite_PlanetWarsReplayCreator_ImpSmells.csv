Implementation smell,Namespace,Class,File,Method,Description
Long Method,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The method has 92 lines of code.
Long Method,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The method has 99 lines of code.
Long Method,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,The method has 65 lines of code.
Long Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The method has 62 lines of code.
Long Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The method has 62 lines of code.
Complex Method,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,AddFrame,Cyclomatic complexity of the method is 7
Complex Method,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,Cyclomatic complexity of the method is 24
Complex Method,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,Cyclomatic complexity of the method is 19
Complex Method,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadContents,Cyclomatic complexity of the method is 16
Complex Method,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,Cyclomatic complexity of the method is 11
Complex Method,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,Cyclomatic complexity of the method is 8
Complex Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,Cyclomatic complexity of the method is 10
Complex Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,Cyclomatic complexity of the method is 17
Complex Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,Cyclomatic complexity of the method is 16
Complex Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,Cyclomatic complexity of the method is 8
Complex Method,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Contest,Cyclomatic complexity of the method is 7
Long Parameter List,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,LZWEncoder,The method has 4 parameters.
Long Parameter List,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The method has 5 parameters.
Long Parameter List,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Altersingle,The method has 5 parameters.
Long Statement,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The length of the statement  "				var bitmap = new RenderTargetBitmap((int)viewBox.ActualWidth' (int)viewBox.ActualHeight' 96 * (int)viewBox.ActualWidth' 96 * (int)viewBox.ActualHeight' PixelFormats.Pbgra32);" is 174.
Long Statement,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The length of the statement  "	foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) { " is 133.
Long Statement,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The length of the statement  "	int available' clear' code_mask' code_size' end_of_information' in_code' old_code' bits' code' count' i' datum' data_size' first' top' bi' pi; " is 142.
Long Statement,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Contest,The length of the statement  "	/* finds closest neuron (min dist) and updates freq *//* finds best neuron (min dist-bias) and returns position *//* for frequently chosen neurons' freq[i] is high and bias[i] is negative *//* bias[i] = gamma*((1/netsize)-freq[i]) */int i' dist' a' biasdist' betafreq; " is 268.
Empty Catch Block,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadBlock,The method has an empty catch block.
Empty Catch Block,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The method has an empty catch block.
Empty Catch Block,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The method has an empty catch block.
Empty Catch Block,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The method has an empty catch block.
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: foreach (var link in gal.Links) {  	var line = new Line {  		X1 = link.PlanetByPlanetID1.X'  		Y1 = link.PlanetByPlanetID1.Y'  		X2 = link.PlanetByPlanetID2.X'  		Y2 = link.PlanetByPlanetID2.Y'  		Stroke = Brushes.White'  		StrokeThickness = 0.01'  	};  	mapCanvas.Children.Add (line);  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: foreach (var planet in gal.Planets) {  	planetIconSize = 0.03;  	var planetIcon = new Ellipse {  		Width = planetIconSize'  		Height = planetIconSize'  		Fill = Brushes.White  	};  	Canvas.SetLeft (planetIcon' planet.X - planetIcon.Width / 2);  	Canvas.SetTop (planetIcon' planet.Y - planetIcon.Height / 2);  	mapCanvas.Children.Add (planetIcon);  	planetIcons.Add (planet.PlanetID' planetIcon);  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: foreach (var planet in gal.Planets) {  	planetIconSize = 0.03;  	var planetIcon = new Ellipse {  		Width = planetIconSize'  		Height = planetIconSize'  		Fill = Brushes.White  	};  	Canvas.SetLeft (planetIcon' planet.X - planetIcon.Width / 2);  	Canvas.SetTop (planetIcon' planet.Y - planetIcon.Height / 2);  	mapCanvas.Children.Add (planetIcon);  	planetIcons.Add (planet.PlanetID' planetIcon);  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: foreach (var planet in gal.Planets) {  	planetIconSize = 0.03;  	var planetIcon = new Ellipse {  		Width = planetIconSize'  		Height = planetIconSize'  		Fill = Brushes.White  	};  	Canvas.SetLeft (planetIcon' planet.X - planetIcon.Width / 2);  	Canvas.SetTop (planetIcon' planet.Y - planetIcon.Height / 2);  	mapCanvas.Children.Add (planetIcon);  	planetIcons.Add (planet.PlanetID' planetIcon);  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: planetIconSize = 0.03;  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: Canvas.SetLeft (planetIcon' planet.X - planetIcon.Width / 2);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,mapCanvas_Loaded,The following statement contains a magic number: Canvas.SetTop (planetIcon' planet.Y - planetIcon.Height / 2);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: if (chapter.Clan != null) {  	var clanImageUrl = chapter.Clan.GetImageUrl ();  	var icon = planetIcons [chapter.PlanetID];  	icon.Width = planetIconSize * 2;  	icon.Height = planetIconSize * 2;  	Canvas.SetLeft (icon' chapter.Planet.X - icon.Width / 2);  	Canvas.SetTop (icon' chapter.Planet.Y - icon.Height / 2);  	icon.Fill = new ImageBrush {  		ImageSource = CreateImageSynchronously (string.Format ("{0}/{1}"' GlobalConst.BaseSiteUrl' clanImageUrl))  	};  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: if (chapter.Clan != null) {  	var clanImageUrl = chapter.Clan.GetImageUrl ();  	var icon = planetIcons [chapter.PlanetID];  	icon.Width = planetIconSize * 2;  	icon.Height = planetIconSize * 2;  	Canvas.SetLeft (icon' chapter.Planet.X - icon.Width / 2);  	Canvas.SetTop (icon' chapter.Planet.Y - icon.Height / 2);  	icon.Fill = new ImageBrush {  		ImageSource = CreateImageSynchronously (string.Format ("{0}/{1}"' GlobalConst.BaseSiteUrl' clanImageUrl))  	};  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: if (chapter.Clan != null) {  	var clanImageUrl = chapter.Clan.GetImageUrl ();  	var icon = planetIcons [chapter.PlanetID];  	icon.Width = planetIconSize * 2;  	icon.Height = planetIconSize * 2;  	Canvas.SetLeft (icon' chapter.Planet.X - icon.Width / 2);  	Canvas.SetTop (icon' chapter.Planet.Y - icon.Height / 2);  	icon.Fill = new ImageBrush {  		ImageSource = CreateImageSynchronously (string.Format ("{0}/{1}"' GlobalConst.BaseSiteUrl' clanImageUrl))  	};  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: if (chapter.Clan != null) {  	var clanImageUrl = chapter.Clan.GetImageUrl ();  	var icon = planetIcons [chapter.PlanetID];  	icon.Width = planetIconSize * 2;  	icon.Height = planetIconSize * 2;  	Canvas.SetLeft (icon' chapter.Planet.X - icon.Width / 2);  	Canvas.SetTop (icon' chapter.Planet.Y - icon.Height / 2);  	icon.Fill = new ImageBrush {  		ImageSource = CreateImageSynchronously (string.Format ("{0}/{1}"' GlobalConst.BaseSiteUrl' clanImageUrl))  	};  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: icon.Width = planetIconSize * 2;  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: icon.Height = planetIconSize * 2;  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: Canvas.SetLeft (icon' chapter.Planet.X - icon.Width / 2);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,ApplyHistoryItem,The following statement contains a magic number: Canvas.SetTop (icon' chapter.Planet.Y - icon.Height / 2);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: anim.SetSize (512' 512);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: anim.SetSize (512' 512);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: anim.SetDelay (200);  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) {  	foreach (var chapter in chapters)  		ApplyHistoryItem (chapter);  	mapCanvas.UpdateLayout ();  	var bitmap = new RenderTargetBitmap (512' 512' 96 * 512' 96 * 512' PixelFormats.Pbgra32);  	bitmap.Render (mapCanvas);  	var encoder = new BmpBitmapEncoder ();  	encoder.Frames.Add (BitmapFrame.Create (bitmap));  	var ms = new MemoryStream ();  	encoder.Save (ms);  	anim.AddFrame (System.Drawing.Image.FromStream (ms));  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) {  	foreach (var chapter in chapters)  		ApplyHistoryItem (chapter);  	mapCanvas.UpdateLayout ();  	var bitmap = new RenderTargetBitmap (512' 512' 96 * 512' 96 * 512' PixelFormats.Pbgra32);  	bitmap.Render (mapCanvas);  	var encoder = new BmpBitmapEncoder ();  	encoder.Frames.Add (BitmapFrame.Create (bitmap));  	var ms = new MemoryStream ();  	encoder.Save (ms);  	anim.AddFrame (System.Drawing.Image.FromStream (ms));  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) {  	foreach (var chapter in chapters)  		ApplyHistoryItem (chapter);  	mapCanvas.UpdateLayout ();  	var bitmap = new RenderTargetBitmap (512' 512' 96 * 512' 96 * 512' PixelFormats.Pbgra32);  	bitmap.Render (mapCanvas);  	var encoder = new BmpBitmapEncoder ();  	encoder.Frames.Add (BitmapFrame.Create (bitmap));  	var ms = new MemoryStream ();  	encoder.Save (ms);  	anim.AddFrame (System.Drawing.Image.FromStream (ms));  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) {  	foreach (var chapter in chapters)  		ApplyHistoryItem (chapter);  	mapCanvas.UpdateLayout ();  	var bitmap = new RenderTargetBitmap (512' 512' 96 * 512' 96 * 512' PixelFormats.Pbgra32);  	bitmap.Render (mapCanvas);  	var encoder = new BmpBitmapEncoder ();  	encoder.Frames.Add (BitmapFrame.Create (bitmap));  	var ms = new MemoryStream ();  	encoder.Save (ms);  	anim.AddFrame (System.Drawing.Image.FromStream (ms));  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) {  	foreach (var chapter in chapters)  		ApplyHistoryItem (chapter);  	mapCanvas.UpdateLayout ();  	var bitmap = new RenderTargetBitmap (512' 512' 96 * 512' 96 * 512' PixelFormats.Pbgra32);  	bitmap.Render (mapCanvas);  	var encoder = new BmpBitmapEncoder ();  	encoder.Frames.Add (BitmapFrame.Create (bitmap));  	var ms = new MemoryStream ();  	encoder.Save (ms);  	anim.AddFrame (System.Drawing.Image.FromStream (ms));  }  
Magic Number,PlanetWarsReplayCreator,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\MainWindow.xaml.cs,exportButton_Click,The following statement contains a magic number: foreach (var chapters in db.PlanetOwnerHistories.Where (x => x.Planet.Galaxy.IsDefault).GroupBy (x => x.Turn).OrderBy (x => x.Key)) {  	foreach (var chapter in chapters)  		ApplyHistoryItem (chapter);  	mapCanvas.UpdateLayout ();  	var bitmap = new RenderTargetBitmap (512' 512' 96 * 512' 96 * 512' PixelFormats.Pbgra32);  	bitmap.Render (mapCanvas);  	var encoder = new BmpBitmapEncoder ();  	encoder.Frames.Add (BitmapFrame.Create (bitmap));  	var ms = new MemoryStream ();  	encoder.Save (ms);  	anim.AddFrame (System.Drawing.Image.FromStream (ms));  }  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: if (width < 1)  	width = 320;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: width = 320;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: if (height < 1)  	height = 240;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,SetSize,The following statement contains a magic number: height = 240;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,AnalyzePixels,The following statement contains a magic number: colorDepth = 8;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,AnalyzePixels,The following statement contains a magic number: palSize = 7;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,FindClosest,The following statement contains a magic number: for (int i = 0; i < len;) {  	int dr = r - (colorTab [i++] & 0xff);  	int dg = g - (colorTab [i++] & 0xff);  	int db = b - (colorTab [i] & 0xff);  	int d = dr * dr + dg * dg + db * db;  	int index = i / 3;  	if (usedEntry [index] && (d < dmin)) {  		dmin = d;  		minpos = index;  	}  	i++;  }  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,GetImagePixels,The following statement contains a magic number: pixels = new Byte[3 * image.Width * image.Height];  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: fs.WriteByte (4);  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: if (transparent == Color.Empty) {  	transp = 0;  	disp = 0;  	// dispose = no action  } else {  	transp = 1;  	disp = 2;  	// force clear if using transparent color  }  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: disp = 2;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: if (dispose >= 0) {  	disp = dispose & 7;  	// user override  }  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: disp = dispose & 7;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteGraphicCtrlExt,The following statement contains a magic number: disp <<= 2;  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteNetscapeExt,The following statement contains a magic number: fs.WriteByte (11);  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteNetscapeExt,The following statement contains a magic number: fs.WriteByte (3);  
Magic Number,Gif.Components,AnimatedGifEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\AnimatedGifEncoder.cs,WriteShort,The following statement contains a magic number: fs.WriteByte (Convert.ToByte ((value >> 8) & 0xff));  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose > 0) {  	if (lastDispose == 3) {  		// use image before last  		int n = frameCount - 2;  		if (n > 0) {  			lastImage = GetFrame (n - 1);  		} else {  			lastImage = null;  		}  	}  	if (lastImage != null) {  		//				int[] prev =  		//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  		int[] prev = GetPixels (new Bitmap (lastImage));  		Array.Copy (prev' 0' dest' 0' width * height);  		// copy pixels  		if (lastDispose == 2) {  			// fill last image rect area with background color  			Graphics g = Graphics.FromImage (image);  			Color c = Color.Empty;  			if (transparency) {  				c = Color.FromArgb (0' 0' 0' 0);  				// assume background is transparent  			} else {  				c = Color.FromArgb (lastBgColor);  				//						c = new Color(lastBgColor); // use given background color  			}  			Brush brush = new SolidBrush (c);  			g.FillRectangle (brush' lastRect);  			brush.Dispose ();  			g.Dispose ();  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose > 0) {  	if (lastDispose == 3) {  		// use image before last  		int n = frameCount - 2;  		if (n > 0) {  			lastImage = GetFrame (n - 1);  		} else {  			lastImage = null;  		}  	}  	if (lastImage != null) {  		//				int[] prev =  		//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  		int[] prev = GetPixels (new Bitmap (lastImage));  		Array.Copy (prev' 0' dest' 0' width * height);  		// copy pixels  		if (lastDispose == 2) {  			// fill last image rect area with background color  			Graphics g = Graphics.FromImage (image);  			Color c = Color.Empty;  			if (transparency) {  				c = Color.FromArgb (0' 0' 0' 0);  				// assume background is transparent  			} else {  				c = Color.FromArgb (lastBgColor);  				//						c = new Color(lastBgColor); // use given background color  			}  			Brush brush = new SolidBrush (c);  			g.FillRectangle (brush' lastRect);  			brush.Dispose ();  			g.Dispose ();  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose > 0) {  	if (lastDispose == 3) {  		// use image before last  		int n = frameCount - 2;  		if (n > 0) {  			lastImage = GetFrame (n - 1);  		} else {  			lastImage = null;  		}  	}  	if (lastImage != null) {  		//				int[] prev =  		//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  		int[] prev = GetPixels (new Bitmap (lastImage));  		Array.Copy (prev' 0' dest' 0' width * height);  		// copy pixels  		if (lastDispose == 2) {  			// fill last image rect area with background color  			Graphics g = Graphics.FromImage (image);  			Color c = Color.Empty;  			if (transparency) {  				c = Color.FromArgb (0' 0' 0' 0);  				// assume background is transparent  			} else {  				c = Color.FromArgb (lastBgColor);  				//						c = new Color(lastBgColor); // use given background color  			}  			Brush brush = new SolidBrush (c);  			g.FillRectangle (brush' lastRect);  			brush.Dispose ();  			g.Dispose ();  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose == 3) {  	// use image before last  	int n = frameCount - 2;  	if (n > 0) {  		lastImage = GetFrame (n - 1);  	} else {  		lastImage = null;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose == 3) {  	// use image before last  	int n = frameCount - 2;  	if (n > 0) {  		lastImage = GetFrame (n - 1);  	} else {  		lastImage = null;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastImage != null) {  	//				int[] prev =  	//					((DataBufferInt) lastImage.getRaster().getDataBuffer()).getData();  	int[] prev = GetPixels (new Bitmap (lastImage));  	Array.Copy (prev' 0' dest' 0' width * height);  	// copy pixels  	if (lastDispose == 2) {  		// fill last image rect area with background color  		Graphics g = Graphics.FromImage (image);  		Color c = Color.Empty;  		if (transparency) {  			c = Color.FromArgb (0' 0' 0' 0);  			// assume background is transparent  		} else {  			c = Color.FromArgb (lastBgColor);  			//						c = new Color(lastBgColor); // use given background color  		}  		Brush brush = new SolidBrush (c);  		g.FillRectangle (brush' lastRect);  		brush.Dispose ();  		g.Dispose ();  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (lastDispose == 2) {  	// fill last image rect area with background color  	Graphics g = Graphics.FromImage (image);  	Color c = Color.Empty;  	if (transparency) {  		c = Color.FromArgb (0' 0' 0' 0);  		// assume background is transparent  	} else {  		c = Color.FromArgb (lastBgColor);  		//						c = new Color(lastBgColor); // use given background color  	}  	Brush brush = new SolidBrush (c);  	g.FillRectangle (brush' lastRect);  	brush.Dispose ();  	g.Dispose ();  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: for (int i = 0; i < ih; i++) {  	int line = i;  	if (interlace) {  		if (iline >= ih) {  			pass++;  			switch (pass) {  			case 2:  				iline = 4;  				break;  			case 3:  				iline = 2;  				inc = 4;  				break;  			case 4:  				iline = 1;  				inc = 2;  				break;  			}  		}  		line = iline;  		iline += inc;  	}  	line += iy;  	if (line < height) {  		int k = line * width;  		int dx = k + ix;  		// start of line in dest  		int dlim = dx + iw;  		// end of dest line  		if ((k + width) < dlim) {  			dlim = k + width;  			// past dest edge  		}  		int sx = i * iw;  		// start of line in source  		while (dx < dlim) {  			// map color and insert in destination  			int index = ((int)pixels [sx++]) & 0xff;  			int c = act [index];  			if (c != 0) {  				dest [dx] = c;  			}  			dx++;  		}  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (interlace) {  	if (iline >= ih) {  		pass++;  		switch (pass) {  		case 2:  			iline = 4;  			break;  		case 3:  			iline = 2;  			inc = 4;  			break;  		case 4:  			iline = 1;  			inc = 2;  			break;  		}  	}  	line = iline;  	iline += inc;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: if (iline >= ih) {  	pass++;  	switch (pass) {  	case 2:  		iline = 4;  		break;  	case 3:  		iline = 2;  		inc = 4;  		break;  	case 4:  		iline = 1;  		inc = 2;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: iline = 4;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: iline = 2;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: inc = 4;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following statement contains a magic number: inc = 2;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: available = clear + 2;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: for (i = 0; i < npix;) {  	if (top == 0) {  		if (bits < code_size) {  			//  Load bytes until there are enough bits for a code.  			if (count == 0) {  				// Read a new data block.  				count = ReadBlock ();  				if (count <= 0)  					break;  				bi = 0;  			}  			datum += (((int)block [bi]) & 0xff) << bits;  			bits += 8;  			bi++;  			count--;  			continue;  		}  		//  Get the next code.  		code = datum & code_mask;  		datum >>= code_size;  		bits -= code_size;  		//  Interpret the code  		if ((code > available) || (code == end_of_information))  			break;  		if (code == clear) {  			//  Reset decoder.  			code_size = data_size + 1;  			code_mask = (1 << code_size) - 1;  			available = clear + 2;  			old_code = NullCode;  			continue;  		}  		if (old_code == NullCode) {  			pixelStack [top++] = suffix [code];  			old_code = code;  			first = code;  			continue;  		}  		in_code = code;  		if (code == available) {  			pixelStack [top++] = (byte)first;  			code = old_code;  		}  		while (code > clear) {  			pixelStack [top++] = suffix [code];  			code = prefix [code];  		}  		first = ((int)suffix [code]) & 0xff;  		//  Add a new string to the string table'  		if (available >= MaxStackSize)  			break;  		pixelStack [top++] = (byte)first;  		prefix [available] = (short)old_code;  		suffix [available] = (byte)first;  		available++;  		if (((available & code_mask) == 0) && (available < MaxStackSize)) {  			code_size++;  			code_mask += available;  		}  		old_code = in_code;  	}  	//  Pop a pixel off the pixel stack.  	top--;  	pixels [pi++] = pixelStack [top];  	i++;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: for (i = 0; i < npix;) {  	if (top == 0) {  		if (bits < code_size) {  			//  Load bytes until there are enough bits for a code.  			if (count == 0) {  				// Read a new data block.  				count = ReadBlock ();  				if (count <= 0)  					break;  				bi = 0;  			}  			datum += (((int)block [bi]) & 0xff) << bits;  			bits += 8;  			bi++;  			count--;  			continue;  		}  		//  Get the next code.  		code = datum & code_mask;  		datum >>= code_size;  		bits -= code_size;  		//  Interpret the code  		if ((code > available) || (code == end_of_information))  			break;  		if (code == clear) {  			//  Reset decoder.  			code_size = data_size + 1;  			code_mask = (1 << code_size) - 1;  			available = clear + 2;  			old_code = NullCode;  			continue;  		}  		if (old_code == NullCode) {  			pixelStack [top++] = suffix [code];  			old_code = code;  			first = code;  			continue;  		}  		in_code = code;  		if (code == available) {  			pixelStack [top++] = (byte)first;  			code = old_code;  		}  		while (code > clear) {  			pixelStack [top++] = suffix [code];  			code = prefix [code];  		}  		first = ((int)suffix [code]) & 0xff;  		//  Add a new string to the string table'  		if (available >= MaxStackSize)  			break;  		pixelStack [top++] = (byte)first;  		prefix [available] = (short)old_code;  		suffix [available] = (byte)first;  		available++;  		if (((available & code_mask) == 0) && (available < MaxStackSize)) {  			code_size++;  			code_mask += available;  		}  		old_code = in_code;  	}  	//  Pop a pixel off the pixel stack.  	top--;  	pixels [pi++] = pixelStack [top];  	i++;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (top == 0) {  	if (bits < code_size) {  		//  Load bytes until there are enough bits for a code.  		if (count == 0) {  			// Read a new data block.  			count = ReadBlock ();  			if (count <= 0)  				break;  			bi = 0;  		}  		datum += (((int)block [bi]) & 0xff) << bits;  		bits += 8;  		bi++;  		count--;  		continue;  	}  	//  Get the next code.  	code = datum & code_mask;  	datum >>= code_size;  	bits -= code_size;  	//  Interpret the code  	if ((code > available) || (code == end_of_information))  		break;  	if (code == clear) {  		//  Reset decoder.  		code_size = data_size + 1;  		code_mask = (1 << code_size) - 1;  		available = clear + 2;  		old_code = NullCode;  		continue;  	}  	if (old_code == NullCode) {  		pixelStack [top++] = suffix [code];  		old_code = code;  		first = code;  		continue;  	}  	in_code = code;  	if (code == available) {  		pixelStack [top++] = (byte)first;  		code = old_code;  	}  	while (code > clear) {  		pixelStack [top++] = suffix [code];  		code = prefix [code];  	}  	first = ((int)suffix [code]) & 0xff;  	//  Add a new string to the string table'  	if (available >= MaxStackSize)  		break;  	pixelStack [top++] = (byte)first;  	prefix [available] = (short)old_code;  	suffix [available] = (byte)first;  	available++;  	if (((available & code_mask) == 0) && (available < MaxStackSize)) {  		code_size++;  		code_mask += available;  	}  	old_code = in_code;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (top == 0) {  	if (bits < code_size) {  		//  Load bytes until there are enough bits for a code.  		if (count == 0) {  			// Read a new data block.  			count = ReadBlock ();  			if (count <= 0)  				break;  			bi = 0;  		}  		datum += (((int)block [bi]) & 0xff) << bits;  		bits += 8;  		bi++;  		count--;  		continue;  	}  	//  Get the next code.  	code = datum & code_mask;  	datum >>= code_size;  	bits -= code_size;  	//  Interpret the code  	if ((code > available) || (code == end_of_information))  		break;  	if (code == clear) {  		//  Reset decoder.  		code_size = data_size + 1;  		code_mask = (1 << code_size) - 1;  		available = clear + 2;  		old_code = NullCode;  		continue;  	}  	if (old_code == NullCode) {  		pixelStack [top++] = suffix [code];  		old_code = code;  		first = code;  		continue;  	}  	in_code = code;  	if (code == available) {  		pixelStack [top++] = (byte)first;  		code = old_code;  	}  	while (code > clear) {  		pixelStack [top++] = suffix [code];  		code = prefix [code];  	}  	first = ((int)suffix [code]) & 0xff;  	//  Add a new string to the string table'  	if (available >= MaxStackSize)  		break;  	pixelStack [top++] = (byte)first;  	prefix [available] = (short)old_code;  	suffix [available] = (byte)first;  	available++;  	if (((available & code_mask) == 0) && (available < MaxStackSize)) {  		code_size++;  		code_mask += available;  	}  	old_code = in_code;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (bits < code_size) {  	//  Load bytes until there are enough bits for a code.  	if (count == 0) {  		// Read a new data block.  		count = ReadBlock ();  		if (count <= 0)  			break;  		bi = 0;  	}  	datum += (((int)block [bi]) & 0xff) << bits;  	bits += 8;  	bi++;  	count--;  	continue;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: bits += 8;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: if (code == clear) {  	//  Reset decoder.  	code_size = data_size + 1;  	code_mask = (1 << code_size) - 1;  	available = clear + 2;  	old_code = NullCode;  	continue;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,DecodeImageData,The following statement contains a magic number: available = clear + 2;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: if (n < nbytes) {  	status = STATUS_FORMAT_ERROR;  } else {  	tab = new int[256];  	// max size to avoid bounds checks  	int i = 0;  	int j = 0;  	while (i < ncolors) {  		int r = ((int)c [j++]) & 0xff;  		int g = ((int)c [j++]) & 0xff;  		int b = ((int)c [j++]) & 0xff;  		tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: if (n < nbytes) {  	status = STATUS_FORMAT_ERROR;  } else {  	tab = new int[256];  	// max size to avoid bounds checks  	int i = 0;  	int j = 0;  	while (i < ncolors) {  		int r = ((int)c [j++]) & 0xff;  		int g = ((int)c [j++]) & 0xff;  		int b = ((int)c [j++]) & 0xff;  		tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: if (n < nbytes) {  	status = STATUS_FORMAT_ERROR;  } else {  	tab = new int[256];  	// max size to avoid bounds checks  	int i = 0;  	int j = 0;  	while (i < ncolors) {  		int r = ((int)c [j++]) & 0xff;  		int g = ((int)c [j++]) & 0xff;  		int b = ((int)c [j++]) & 0xff;  		tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: tab = new int[256];  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: while (i < ncolors) {  	int r = ((int)c [j++]) & 0xff;  	int g = ((int)c [j++]) & 0xff;  	int b = ((int)c [j++]) & 0xff;  	tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: while (i < ncolors) {  	int r = ((int)c [j++]) & 0xff;  	int g = ((int)c [j++]) & 0xff;  	int b = ((int)c [j++]) & 0xff;  	tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadColorTable,The following statement contains a magic number: tab [i++] = (int)(0xff000000 | (r << 16) | (g << 8) | b);  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadContents,The following statement contains a magic number: while (!(done || Error ())) {  	int code = Read ();  	switch (code) {  	case 0x2C:  		// image separator  		ReadImage ();  		break;  	case 0x21:  		// extension  		code = Read ();  		switch (code) {  		case 0xf9:  			// graphics control extension  			ReadGraphicControlExt ();  			break;  		case 0xff:  			// application extension  			ReadBlock ();  			String app = "";  			for (int i = 0; i < 11; i++) {  				app += (char)block [i];  			}  			if (app.Equals ("NETSCAPE2.0")) {  				ReadNetscapeExt ();  			} else  				Skip ();  			// don't care  			break;  		default:  			// uninteresting extension  			Skip ();  			break;  		}  		break;  	case 0x3b:  		// terminator  		done = true;  		break;  	case 0x00:  		// bad byte' but keep going and see what happens  		break;  	default:  		status = STATUS_FORMAT_ERROR;  		break;  	}  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadContents,The following statement contains a magic number: switch (code) {  case 0x2C:  	// image separator  	ReadImage ();  	break;  case 0x21:  	// extension  	code = Read ();  	switch (code) {  	case 0xf9:  		// graphics control extension  		ReadGraphicControlExt ();  		break;  	case 0xff:  		// application extension  		ReadBlock ();  		String app = "";  		for (int i = 0; i < 11; i++) {  			app += (char)block [i];  		}  		if (app.Equals ("NETSCAPE2.0")) {  			ReadNetscapeExt ();  		} else  			Skip ();  		// don't care  		break;  	default:  		// uninteresting extension  		Skip ();  		break;  	}  	break;  case 0x3b:  	// terminator  	done = true;  	break;  case 0x00:  	// bad byte' but keep going and see what happens  	break;  default:  	status = STATUS_FORMAT_ERROR;  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadContents,The following statement contains a magic number: switch (code) {  case 0xf9:  	// graphics control extension  	ReadGraphicControlExt ();  	break;  case 0xff:  	// application extension  	ReadBlock ();  	String app = "";  	for (int i = 0; i < 11; i++) {  		app += (char)block [i];  	}  	if (app.Equals ("NETSCAPE2.0")) {  		ReadNetscapeExt ();  	} else  		Skip ();  	// don't care  	break;  default:  	// uninteresting extension  	Skip ();  	break;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadContents,The following statement contains a magic number: for (int i = 0; i < 11; i++) {  	app += (char)block [i];  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadGraphicControlExt,The following statement contains a magic number: dispose = (packed & 0x1c) >> 2;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadGraphicControlExt,The following statement contains a magic number: delay = ReadShort () * 10;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadHeader,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	id += (char)Read ();  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadImage,The following statement contains a magic number: lctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadImage,The following statement contains a magic number: lctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadLSD,The following statement contains a magic number: gctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadLSD,The following statement contains a magic number: gctSize = 2 << (packed & 7);  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: do {  	ReadBlock ();  	if (block [0] == 1) {  		// loop count sub-block  		int b1 = ((int)block [1]) & 0xff;  		int b2 = ((int)block [2]) & 0xff;  		loopCount = (b2 << 8) | b1;  	}  } while ((blockSize > 0) && !Error ());  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: do {  	ReadBlock ();  	if (block [0] == 1) {  		// loop count sub-block  		int b1 = ((int)block [1]) & 0xff;  		int b2 = ((int)block [2]) & 0xff;  		loopCount = (b2 << 8) | b1;  	}  } while ((blockSize > 0) && !Error ());  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: if (block [0] == 1) {  	// loop count sub-block  	int b1 = ((int)block [1]) & 0xff;  	int b2 = ((int)block [2]) & 0xff;  	loopCount = (b2 << 8) | b1;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: if (block [0] == 1) {  	// loop count sub-block  	int b1 = ((int)block [1]) & 0xff;  	int b2 = ((int)block [2]) & 0xff;  	loopCount = (b2 << 8) | b1;  }  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadNetscapeExt,The following statement contains a magic number: loopCount = (b2 << 8) | b1;  
Magic Number,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,ReadShort,The following statement contains a magic number: return Read () | (Read () << 8);  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,LZWEncoder,The following statement contains a magic number: initCodeSize = Math.Max (2' color_depth);  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Add,The following statement contains a magic number: if (a_count >= 254)  	Flush (outs);  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,ClearTable,The following statement contains a magic number: free_ent = ClearCode + 2;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,The following statement contains a magic number: free_ent = ClearCode + 2;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,The following statement contains a magic number: for (fcode = hsize; fcode < 65536; fcode *= 2)  	++hshift;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,The following statement contains a magic number: for (fcode = hsize; fcode < 65536; fcode *= 2)  	++hshift;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,The following statement contains a magic number: fcode *= 2
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Compress,The following statement contains a magic number: hshift = 8 - hshift;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits >= 8) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits >= 8) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits >= 8) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_accum >>= 8;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_bits -= 8;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: if (code == EOFCode) {  	// At EOF' write the rest of the buffer.  	while (cur_bits > 0) {  		Add ((byte)(cur_accum & 0xff)' outs);  		cur_accum >>= 8;  		cur_bits -= 8;  	}  	Flush (outs);  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: if (code == EOFCode) {  	// At EOF' write the rest of the buffer.  	while (cur_bits > 0) {  		Add ((byte)(cur_accum & 0xff)' outs);  		cur_accum >>= 8;  		cur_bits -= 8;  	}  	Flush (outs);  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits > 0) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: while (cur_bits > 0) {  	Add ((byte)(cur_accum & 0xff)' outs);  	cur_accum >>= 8;  	cur_bits -= 8;  }  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_accum >>= 8;  
Magic Number,Gif.Components,LZWEncoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\LZWEncoder.cs,Output,The following statement contains a magic number: cur_bits -= 8;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] = new int[4];  	p = network [i];  	p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  	freq [i] = intbias / netsize;  	/* 1/netsize */bias [i] = 0;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] = new int[4];  	p = network [i];  	p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  	freq [i] = intbias / netsize;  	/* 1/netsize */bias [i] = 0;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] = new int[4];  	p = network [i];  	p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  	freq [i] = intbias / netsize;  	/* 1/netsize */bias [i] = 0;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: network [i] = new int[4];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,NeuQuant,The following statement contains a magic number: p [0] = p [1] = p [2] = (i << (netbiasshift + 8)) / netsize;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,ColorMap,The following statement contains a magic number: for (int i = 0; i < netsize; i++)  	index [network [i] [3]] = i;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,ColorMap,The following statement contains a magic number: index [network [i] [3]] = i;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,ColorMap,The following statement contains a magic number: for (int i = 0; i < netsize; i++) {  	int j = index [i];  	map [k++] = (byte)(network [j] [0]);  	map [k++] = (byte)(network [j] [1]);  	map [k++] = (byte)(network [j] [2]);  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,ColorMap,The following statement contains a magic number: map [k++] = (byte)(network [j] [2]);  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	p = network [i];  	smallpos = i;  	smallval = p [1];  	/* index on g *//* find smallest in i..netsize-1 */for (j = i + 1; j < netsize; j++) {  		q = network [j];  		if (q [1] < smallval) {  			/* index on g */smallpos = j;  			smallval = q [1];  			/* index on g */}  	}  	q = network [smallpos];  	/* swap p (i) and q (smallpos) entries */if (i != smallpos) {  		j = q [0];  		q [0] = p [0];  		p [0] = j;  		j = q [1];  		q [1] = p [1];  		p [1] = j;  		j = q [2];  		q [2] = p [2];  		p [2] = j;  		j = q [3];  		q [3] = p [3];  		p [3] = j;  	}  	/* smallval entry is now in position i */if (smallval != previouscol) {  		netindex [previouscol] = (startpos + i) >> 1;  		for (j = previouscol + 1; j < smallval; j++)  			netindex [j] = i;  		previouscol = smallval;  		startpos = i;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: if (i != smallpos) {  	j = q [0];  	q [0] = p [0];  	p [0] = j;  	j = q [1];  	q [1] = p [1];  	p [1] = j;  	j = q [2];  	q [2] = p [2];  	p [2] = j;  	j = q [3];  	q [3] = p [3];  	p [3] = j;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: j = q [2];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [2] = p [2];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [2] = p [2];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: p [2] = j;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: j = q [3];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [3] = p [3];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: q [3] = p [3];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: p [3] = j;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Inxbuild,The following statement contains a magic number: for (j = previouscol + 1; j < 256; j++)  	netindex [j] = maxnetpos;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: alphadec = 30 + ((samplefac - 1) / 3);  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: alphadec = 30 + ((samplefac - 1) / 3);  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: samplepixels = lengthcount / (3 * samplefac);  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if (lengthcount < minpicturebytes)  	step = 3;  else if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime1) != 0)  	step = 3 * prime1;  else {  	if ((lengthcount % prime2) != 0)  		step = 3 * prime2;  	else {  		if ((lengthcount % prime3) != 0)  			step = 3 * prime3;  		else  			step = 3 * prime4;  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime1;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime2) != 0)  	step = 3 * prime2;  else {  	if ((lengthcount % prime3) != 0)  		step = 3 * prime3;  	else  		step = 3 * prime4;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime2) != 0)  	step = 3 * prime2;  else {  	if ((lengthcount % prime3) != 0)  		step = 3 * prime3;  	else  		step = 3 * prime4;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime2) != 0)  	step = 3 * prime2;  else {  	if ((lengthcount % prime3) != 0)  		step = 3 * prime3;  	else  		step = 3 * prime4;  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime2;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime3) != 0)  	step = 3 * prime3;  else  	step = 3 * prime4;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: if ((lengthcount % prime3) != 0)  	step = 3 * prime3;  else  	step = 3 * prime4;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime3;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: step = 3 * prime4;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: while (i < samplepixels) {  	b = (p [pix + 0] & 0xff) << netbiasshift;  	g = (p [pix + 1] & 0xff) << netbiasshift;  	r = (p [pix + 2] & 0xff) << netbiasshift;  	j = Contest (b' g' r);  	Altersingle (alpha' j' b' g' r);  	if (rad != 0)  		Alterneigh (rad' j' b' g' r);  	/* alter neighbours */pix += step;  	if (pix >= lim)  		pix -= lengthcount;  	i++;  	if (delta == 0)  		delta = 1;  	if (i % delta == 0) {  		alpha -= alpha / alphadec;  		radius -= radius / radiusdec;  		rad = radius >> radiusbiasshift;  		if (rad <= 1)  			rad = 0;  		for (j = 0; j < rad; j++)  			radpower [j] = alpha * (((rad * rad - j * j) * radbias) / (rad * rad));  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Learn,The following statement contains a magic number: r = (p [pix + 2] & 0xff) << netbiasshift;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: bestd = 1000;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: while ((i < netsize) || (j >= 0)) {  	if (i < netsize) {  		p = network [i];  		dist = p [1] - g;  		/* inx key */if (dist >= bestd)  			i = netsize;  		/* stop iter */else {  			i++;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  	if (j >= 0) {  		p = network [j];  		dist = g - p [1];  		/* inx key - reverse dif */if (dist >= bestd)  			j = -1;  		/* stop iter */else {  			j--;  			if (dist < 0)  				dist = -dist;  			a = p [0] - b;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				a = p [2] - r;  				if (a < 0)  					a = -a;  				dist += a;  				if (dist < bestd) {  					bestd = dist;  					best = p [3];  				}  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (i < netsize) {  	p = network [i];  	dist = p [1] - g;  	/* inx key */if (dist >= bestd)  		i = netsize;  	/* stop iter */else {  		i++;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (i < netsize) {  	p = network [i];  	dist = p [1] - g;  	/* inx key */if (dist >= bestd)  		i = netsize;  	/* stop iter */else {  		i++;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	i = netsize;  /* stop iter */else {  	i++;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	i = netsize;  /* stop iter */else {  	i++;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: a = p [2] - r;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	bestd = dist;  	best = p [3];  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: best = p [3];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (j >= 0) {  	p = network [j];  	dist = g - p [1];  	/* inx key - reverse dif */if (dist >= bestd)  		j = -1;  	/* stop iter */else {  		j--;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (j >= 0) {  	p = network [j];  	dist = g - p [1];  	/* inx key - reverse dif */if (dist >= bestd)  		j = -1;  	/* stop iter */else {  		j--;  		if (dist < 0)  			dist = -dist;  		a = p [0] - b;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			a = p [2] - r;  			if (a < 0)  				a = -a;  			dist += a;  			if (dist < bestd) {  				bestd = dist;  				best = p [3];  			}  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	j = -1;  /* stop iter */else {  	j--;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist >= bestd)  	j = -1;  /* stop iter */else {  	j--;  	if (dist < 0)  		dist = -dist;  	a = p [0] - b;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		a = p [2] - r;  		if (a < 0)  			a = -a;  		dist += a;  		if (dist < bestd) {  			bestd = dist;  			best = p [3];  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	a = p [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		best = p [3];  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: a = p [2] - r;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: if (dist < bestd) {  	bestd = dist;  	best = p [3];  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Map,The following statement contains a magic number: best = p [3];  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] [0] >>= netbiasshift;  	network [i] [1] >>= netbiasshift;  	network [i] [2] >>= netbiasshift;  	network [i] [3] = i;  	/* record colour no */}  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	network [i] [0] >>= netbiasshift;  	network [i] [1] >>= netbiasshift;  	network [i] [2] >>= netbiasshift;  	network [i] [3] = i;  	/* record colour no */}  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: network [i] [2] >>= netbiasshift;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Unbiasnet,The following statement contains a magic number: network [i] [3] = i;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: while ((j < hi) || (k > lo)) {  	a = radpower [m++];  	if (j < hi) {  		p = network [j++];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  		// prevents 1.3 miscompilation  	}  	if (k > lo) {  		p = network [k--];  		try {  			p [0] -= (a * (p [0] - b)) / alpharadbias;  			p [1] -= (a * (p [1] - g)) / alpharadbias;  			p [2] -= (a * (p [2] - r)) / alpharadbias;  		} catch (Exception e) {  		}  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (j < hi) {  	p = network [j++];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	} catch (Exception e) {  	}  	// prevents 1.3 miscompilation  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (j < hi) {  	p = network [j++];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	} catch (Exception e) {  	}  	// prevents 1.3 miscompilation  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  } catch (Exception e) {  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  } catch (Exception e) {  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (k > lo) {  	p = network [k--];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	} catch (Exception e) {  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: if (k > lo) {  	p = network [k--];  	try {  		p [0] -= (a * (p [0] - b)) / alpharadbias;  		p [1] -= (a * (p [1] - g)) / alpharadbias;  		p [2] -= (a * (p [2] - r)) / alpharadbias;  	} catch (Exception e) {  	}  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  } catch (Exception e) {  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: try {  	p [0] -= (a * (p [0] - b)) / alpharadbias;  	p [1] -= (a * (p [1] - g)) / alpharadbias;  	p [2] -= (a * (p [2] - r)) / alpharadbias;  } catch (Exception e) {  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Alterneigh,The following statement contains a magic number: p [2] -= (a * (p [2] - r)) / alpharadbias;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Altersingle,The following statement contains a magic number: n [2] -= (alpha * (n [2] - r)) / initalpha;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Altersingle,The following statement contains a magic number: n [2] -= (alpha * (n [2] - r)) / initalpha;  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Contest,The following statement contains a magic number: bestd = ~(((int)1) << 31);  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Contest,The following statement contains a magic number: for (i = 0; i < netsize; i++) {  	n = network [i];  	dist = n [0] - b;  	if (dist < 0)  		dist = -dist;  	a = n [1] - g;  	if (a < 0)  		a = -a;  	dist += a;  	a = n [2] - r;  	if (a < 0)  		a = -a;  	dist += a;  	if (dist < bestd) {  		bestd = dist;  		bestpos = i;  	}  	biasdist = dist - ((bias [i]) >> (intbiasshift - netbiasshift));  	if (biasdist < bestbiasd) {  		bestbiasd = biasdist;  		bestbiaspos = i;  	}  	betafreq = (freq [i] >> betashift);  	freq [i] -= betafreq;  	bias [i] += (betafreq << gammashift);  }  
Magic Number,Gif.Components,NeuQuant,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\NeuQuant.cs,Contest,The following statement contains a magic number: a = n [2] - r;  
Missing Default,Gif.Components,GifDecoder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\PlanetWarsReplayCreator\NGif\GifDecoder.cs,SetPixels,The following switch statement is missing a default case: switch (pass) {  case 2:  	iline = 4;  	break;  case 3:  	iline = 2;  	inc = 4;  	break;  case 4:  	iline = 1;  	inc = 2;  	break;  }  
