Implementation smell,Namespace,Class,File,Method,Description
Long Method,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The method has 83 lines of code.
Long Method,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The method has 68 lines of code.
Long Method,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The method has 67 lines of code.
Long Method,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The method has 138 lines of code.
Complex Method,LobbyClient,Battle,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Battle.cs,UpdateWith,Cyclomatic complexity of the method is 15
Complex Method,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,AddToLogs,Cyclomatic complexity of the method is 13
Complex Method,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,dedicatedProcess_Exited,Cyclomatic complexity of the method is 8
Complex Method,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,Cyclomatic complexity of the method is 65
Complex Method,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,GeneratePlayerSection,Cyclomatic complexity of the method is 8
Complex Method,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,Cyclomatic complexity of the method is 19
Complex Method,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,springProcess_Exited,Cyclomatic complexity of the method is 8
Complex Method,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,Cyclomatic complexity of the method is 48
Complex Method,LobbyClient,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient.cs,Process,Cyclomatic complexity of the method is 9
Complex Method,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,Say,Cyclomatic complexity of the method is 20
Complex Method,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,Cyclomatic complexity of the method is 98
Long Parameter List,LobbyClient,Battle,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Battle.cs,Battle,The method has 7 parameters.
Long Parameter List,LobbyClient,SayingEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\SayingEventArgs.cs,SayingEventArgs,The method has 4 parameters.
Long Parameter List,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,ScriptAddBot,The method has 6 parameters.
Long Parameter List,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,ScriptAddTeam,The method has 4 parameters.
Long Parameter List,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,ScriptAddUser,The method has 5 parameters.
Long Parameter List,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ConnectGame,The method has 5 parameters.
Long Parameter List,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,HostGame,The method has 5 parameters.
Long Parameter List,LobbyClient,SpringBattleContext,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.SpringBattleContext.cs,SetForConnecting,The method has 5 parameters.
Long Parameter List,LobbyClient,SpringBattleContext,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.SpringBattleContext.cs,SetForHosting,The method has 5 parameters.
Long Parameter List,LobbyClient,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient.cs,Say,The method has 5 parameters.
Long Parameter List,LobbyClient,BattleInfoEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient_structures.cs,BattleInfoEventArgs,The method has 5 parameters.
Long Parameter List,LobbyClient,TasSayEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient_structures.cs,TasSayEventArgs,The method has 5 parameters.
Long Parameter List,LobbyClient.Legacy,SayingEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\SayingEventArgs.cs,SayingEventArgs,The method has 4 parameters.
Long Parameter List,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,TasClient,The method has 5 parameters.
Long Parameter List,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,Say,The method has 5 parameters.
Long Parameter List,LobbyClient.Legacy,TasSayEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient_structures.cs,TasSayEventArgs,The method has 6 parameters.
Long Identifier,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,TasClient,The length of the parameter invokeUserStatusChangedOnExtensions is 35.
Long Statement,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,HostGame,The length of the statement  "		scriptPath = Utils.MakePath (paths.WritableDirectory' "script_" + startContext.FounderName + ".txt").Replace ('\\'' '/'); " is 121.
Long Statement,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,MarkPlayerDead,The length of the statement  "		sp.LoseTime = isDead ? (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds : (int?)null; " is 126.
Long Statement,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The length of the statement  "			if ((PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName)) " is 144.
Long Statement,LobbyClient,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Protocol\Messages.cs,CanUserPlanetWars,The length of the statement  "	return !string.IsNullOrEmpty (Faction) && Level >= GlobalConst.MinPlanetWarsLevel && EffectiveMmElo > GlobalConst.MinPlanetWarsElo; " is 131.
Long Statement,LobbyClient,ServerConnection,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\ServerConnection.cs,SendCommand,The length of the statement  "			CommandSent (this' new EventArgs<KeyValuePair<string' object[]>> (new KeyValuePair<string' object[]> (command' parameters))); " is 125.
Long Statement,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,GeneratePlayerSection,The length of the statement  "	foreach (var b in setup.LobbyStartContext.Bots.Where (x => !setup.LobbyStartContext.Players.Any (y => y.Name == x.Owner))) { " is 124.
Long Statement,LobbyClient,SpringSettings,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\SpringSettings.cs,GetEngineConfigOptions,The length of the statement  "	Trace.TraceInformation ("Extracting configuration from Spring located in {0}"' paths.GetEngineFolderByVersion (engine)); " is 120.
Long Statement,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The length of the statement  "					Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length); " is 120.
Long Statement,LobbyClient,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient.cs,GetUserCaseInsensitive,The length of the statement  "	return ExistingUsers.Values.FirstOrDefault (u => string.Equals (u.Name' userName' StringComparison.InvariantCultureIgnoreCase)); " is 128.
Long Statement,LobbyClient,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient.cs,OnConnectionClosed,The length of the statement  "	ConnectionLost (this' new TasEventArgs (string.Format ("Connection {0}"' wasRequested ? "closed on user request" : "disconnected"))); " is 133.
Long Statement,LobbyClient,UserBattleStatus,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\UserBattleStatus.cs,Equals,The length of the statement  "	return other.AllyNumber == AllyNumber && other.IsSpectator.Equals (IsSpectator) && other.JoinTime.Equals (JoinTime) && Equals (other.Name' Name) && Equals (other.SyncStatus' SyncStatus); " is 186.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,GetUserCaseInsensitive,The length of the statement  "	return ExistingUsers.Values.FirstOrDefault (u => String.Equals (u.Name' userName' StringComparison.InvariantCultureIgnoreCase)); " is 128.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,GetMyUserID,The length of the statement  "	var nics = NetworkInterface.GetAllNetworkInterfaces ().Where (x => !String.IsNullOrWhiteSpace (x.GetPhysicalAddress ().ToString ()) && x.NetworkInterfaceType != NetworkInterfaceType.Loopback && x.NetworkInterfaceType != NetworkInterfaceType.Tunnel); " is 249.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,Login,The length of the statement  "	con.SendCommand ("LOGIN"' userName' Utils.HashLobbyPassword (password)' cpu' localIp' appName' "\t" + GetMyUserID ()' "\ta sp m cl p"); " is 135.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.MessageBox' ""' ""' Utils.Glue (args' 0)' false)); " is 138.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Channel' args [0]' ""' Utils.Glue (args' 1)' false)); " is 141.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false)); " is 147.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true)); " is 146.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' username' Utils.Glue (args' 1)' false)); " is 146.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' args [0]' Utils.Glue (args' 1)' false)); " is 146.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' false)); " is 140.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' true)); " is 139.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "			InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Broadcast' ""' ""' Utils.Glue (args' 0)' false)); " is 137.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The length of the statement  "		Trace.TraceError ("TASC error: Error was thrown while processing chat command {0} \"{1}\" (check if chat event trigger faulty code in application): {2}"' command' Utils.Glue (args)' e); " is 185.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnServerMsg,The length of the statement  "	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Server' ""' ""' Utils.Glue (args' 0)' false)); " is 134.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnMotd,The length of the statement  "		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Motd' ""' ""' Utils.Glue (args' 0)' false)); " is 132.
Long Statement,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnAddUser,The length of the statement  "		Trace.TraceError ("Error was thrown while processing chat command ADDUSER (check if this event trigger faulty code in application): " + e); " is 139.
Complex Conditional,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The conditional expression  "(PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName)"  is complex.
Empty Catch Block,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,SayGame,The method has an empty catch block.
Empty Catch Block,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,dedicatedProcess_Exited,The method has an empty catch block.
Empty Catch Block,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,dedicatedProcess_Exited,The method has an empty catch block.
Empty Catch Block,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,springProcess_Exited,The method has an empty catch block.
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,ExitGame,The following statement contains a magic number: try {  	if (IsRunning) {  		SayGame ("/kill");  		process.WaitForExit (20000);  		if (!IsRunning)  			return;  		Trace.TraceWarning ("Terminating dedicated server process due to /kill timeout");  		Context.WasKilled = true;  		process.Kill ();  		process.WaitForExit (1000);  		if (!IsRunning)  			return;  		process.Kill ();  	}  } catch (Exception ex) {  	Trace.TraceError ("Error quitting dedicated server: {0}"' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,ExitGame,The following statement contains a magic number: try {  	if (IsRunning) {  		SayGame ("/kill");  		process.WaitForExit (20000);  		if (!IsRunning)  			return;  		Trace.TraceWarning ("Terminating dedicated server process due to /kill timeout");  		Context.WasKilled = true;  		process.Kill ();  		process.WaitForExit (1000);  		if (!IsRunning)  			return;  		process.Kill ();  	}  } catch (Exception ex) {  	Trace.TraceError ("Error quitting dedicated server: {0}"' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,ExitGame,The following statement contains a magic number: if (IsRunning) {  	SayGame ("/kill");  	process.WaitForExit (20000);  	if (!IsRunning)  		return;  	Trace.TraceWarning ("Terminating dedicated server process due to /kill timeout");  	Context.WasKilled = true;  	process.Kill ();  	process.WaitForExit (1000);  	if (!IsRunning)  		return;  	process.Kill ();  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,ExitGame,The following statement contains a magic number: if (IsRunning) {  	SayGame ("/kill");  	process.WaitForExit (20000);  	if (!IsRunning)  		return;  	Trace.TraceWarning ("Terminating dedicated server process due to /kill timeout");  	Context.WasKilled = true;  	process.Kill ();  	process.WaitForExit (1000);  	if (!IsRunning)  		return;  	process.Kill ();  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,ExitGame,The following statement contains a magic number: process.WaitForExit (20000);  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,ExitGame,The following statement contains a magic number: process.WaitForExit (1000);  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,dedicatedProcess_Exited,The following statement contains a magic number: try {  	if (!process.WaitForExit (2000))  		process.Kill ();  } catch {  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,dedicatedProcess_Exited,The following statement contains a magic number: if (!process.WaitForExit (2000))  	process.Kill ();  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,dedicatedProcess_Exited,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,HandleSpecialMessages,The following statement contains a magic number: try {  	if (string.IsNullOrEmpty (e.Text) || !e.Text.StartsWith ("SPRINGIE:"))  		return;  	int count;  	if (!gamePrivateMessages.TryGetValue (e.Text' out count))  		count = 0;  	count++;  	gamePrivateMessages [e.Text] = count;  	if (count != 2)  		return;  	var text = e.Text.Substring (9);  	if (text.StartsWith ("READY:")) {  		var name = text.Substring (6);  		var entry = Context.ActualPlayers.FirstOrDefault (x => x.Name == name);  		if (entry != null)  			entry.IsIngameReady = true;  	}  	if (text == "FORCE")  		ForceStart ();  	Context.OutputExtras.Add (text);  } catch (Exception ex) {  	Trace.TraceError ("Error while processing '{0}' :{1}"' e.Text' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,HandleSpecialMessages,The following statement contains a magic number: try {  	if (string.IsNullOrEmpty (e.Text) || !e.Text.StartsWith ("SPRINGIE:"))  		return;  	int count;  	if (!gamePrivateMessages.TryGetValue (e.Text' out count))  		count = 0;  	count++;  	gamePrivateMessages [e.Text] = count;  	if (count != 2)  		return;  	var text = e.Text.Substring (9);  	if (text.StartsWith ("READY:")) {  		var name = text.Substring (6);  		var entry = Context.ActualPlayers.FirstOrDefault (x => x.Name == name);  		if (entry != null)  			entry.IsIngameReady = true;  	}  	if (text == "FORCE")  		ForceStart ();  	Context.OutputExtras.Add (text);  } catch (Exception ex) {  	Trace.TraceError ("Error while processing '{0}' :{1}"' e.Text' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,HandleSpecialMessages,The following statement contains a magic number: try {  	if (string.IsNullOrEmpty (e.Text) || !e.Text.StartsWith ("SPRINGIE:"))  		return;  	int count;  	if (!gamePrivateMessages.TryGetValue (e.Text' out count))  		count = 0;  	count++;  	gamePrivateMessages [e.Text] = count;  	if (count != 2)  		return;  	var text = e.Text.Substring (9);  	if (text.StartsWith ("READY:")) {  		var name = text.Substring (6);  		var entry = Context.ActualPlayers.FirstOrDefault (x => x.Name == name);  		if (entry != null)  			entry.IsIngameReady = true;  	}  	if (text == "FORCE")  		ForceStart ();  	Context.OutputExtras.Add (text);  } catch (Exception ex) {  	Trace.TraceError ("Error while processing '{0}' :{1}"' e.Text' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,HandleSpecialMessages,The following statement contains a magic number: if (count != 2)  	return;  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,HandleSpecialMessages,The following statement contains a magic number: if (text.StartsWith ("READY:")) {  	var name = text.Substring (6);  	var entry = Context.ActualPlayers.FirstOrDefault (x => x.Name == name);  	if (entry != null)  		entry.IsIngameReady = true;  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: try {  	switch (e.EventType) {  	case Talker.SpringEventType.PLAYER_JOINED:  		var entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngame = true;  		PlayerJoined.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		break;  	case Talker.SpringEventType.PLAYER_LEFT:  		entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngame = false;  		if (e.Param == 0)  			PlayerDisconnected.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		PlayerLeft.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		break;  	case Talker.SpringEventType.GAME_LUAMSG:  		HandleSpecialMessages (e);  		break;  	case Talker.SpringEventType.PLAYER_CHAT:  		if (e.Param == 255)  			HandleSpecialMessages (e);  		else  			AddToLogs (e);  		if ((PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName))  			PlayerSaid (this' new SpringLogEventArgs (e.PlayerName' e.Text));  		break;  	case Talker.SpringEventType.PLAYER_DEFEATED:  		MarkPlayerDead (e.PlayerName' true);  		if (PlayerLost != null)  			PlayerLost (this' new SpringLogEventArgs (e.PlayerName));  		break;  	case Talker.SpringEventType.SERVER_GAMEOVER:  		if (!Context.GameEndedOk) {  			foreach (var p in Context.ActualPlayers) {  				if (!p.IsIngame && !p.IsSpectator)  					MarkPlayerDead (p.Name' true);  				p.IsIngame = false;  			}  			if (e.winningAllyTeams.Length > 0) {  				foreach (var ally in e.winningAllyTeams)  					foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == ally)))  						p.IsVictoryTeam = true;  			} else {  				foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.LoseTime == null)))  					foreach (var q in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == p.AllyNumber)))  						q.IsVictoryTeam = true;  			}  			if (Context.IngameStartTime != null) {  				Context.GameEndedOk = true;  				Context.Duration = (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds;  				GameOver.Invoke (this' new SpringLogEventArgs (e.PlayerName));  			} else  				Trace.TraceWarning ("recieved GAMEOVER before STARTPLAYING!");  			Task.Delay (10000).ContinueWith (x => ExitGame ());  		}  		break;  	case Talker.SpringEventType.PLAYER_READY:  		if (e.Param == 1) {  			entry = Context.GetOrAddPlayer (e.PlayerName);  			if (entry != null)  				entry.IsIngameReady = true;  		}  		break;  	case Talker.SpringEventType.SERVER_STARTPLAYING:  		Context.ReplayName = e.ReplayFileName;  		Context.EngineBattleID = e.GameID;  		Context.IngameStartTime = DateTime.UtcNow;  		foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator))  			p.IsIngameReady = true;  		BattleStarted (this' EventArgs.Empty);  		break;  	case Talker.SpringEventType.SERVER_QUIT:  		if (LobbyStartContext != null)  			foreach (var p in Context.ActualPlayers)  				p.IsIngame = false;  		break;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring message:{0}"' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: try {  	switch (e.EventType) {  	case Talker.SpringEventType.PLAYER_JOINED:  		var entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngame = true;  		PlayerJoined.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		break;  	case Talker.SpringEventType.PLAYER_LEFT:  		entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngame = false;  		if (e.Param == 0)  			PlayerDisconnected.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		PlayerLeft.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		break;  	case Talker.SpringEventType.GAME_LUAMSG:  		HandleSpecialMessages (e);  		break;  	case Talker.SpringEventType.PLAYER_CHAT:  		if (e.Param == 255)  			HandleSpecialMessages (e);  		else  			AddToLogs (e);  		if ((PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName))  			PlayerSaid (this' new SpringLogEventArgs (e.PlayerName' e.Text));  		break;  	case Talker.SpringEventType.PLAYER_DEFEATED:  		MarkPlayerDead (e.PlayerName' true);  		if (PlayerLost != null)  			PlayerLost (this' new SpringLogEventArgs (e.PlayerName));  		break;  	case Talker.SpringEventType.SERVER_GAMEOVER:  		if (!Context.GameEndedOk) {  			foreach (var p in Context.ActualPlayers) {  				if (!p.IsIngame && !p.IsSpectator)  					MarkPlayerDead (p.Name' true);  				p.IsIngame = false;  			}  			if (e.winningAllyTeams.Length > 0) {  				foreach (var ally in e.winningAllyTeams)  					foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == ally)))  						p.IsVictoryTeam = true;  			} else {  				foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.LoseTime == null)))  					foreach (var q in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == p.AllyNumber)))  						q.IsVictoryTeam = true;  			}  			if (Context.IngameStartTime != null) {  				Context.GameEndedOk = true;  				Context.Duration = (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds;  				GameOver.Invoke (this' new SpringLogEventArgs (e.PlayerName));  			} else  				Trace.TraceWarning ("recieved GAMEOVER before STARTPLAYING!");  			Task.Delay (10000).ContinueWith (x => ExitGame ());  		}  		break;  	case Talker.SpringEventType.PLAYER_READY:  		if (e.Param == 1) {  			entry = Context.GetOrAddPlayer (e.PlayerName);  			if (entry != null)  				entry.IsIngameReady = true;  		}  		break;  	case Talker.SpringEventType.SERVER_STARTPLAYING:  		Context.ReplayName = e.ReplayFileName;  		Context.EngineBattleID = e.GameID;  		Context.IngameStartTime = DateTime.UtcNow;  		foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator))  			p.IsIngameReady = true;  		BattleStarted (this' EventArgs.Empty);  		break;  	case Talker.SpringEventType.SERVER_QUIT:  		if (LobbyStartContext != null)  			foreach (var p in Context.ActualPlayers)  				p.IsIngame = false;  		break;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring message:{0}"' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: switch (e.EventType) {  case Talker.SpringEventType.PLAYER_JOINED:  	var entry = Context.GetOrAddPlayer (e.PlayerName);  	if (entry != null)  		entry.IsIngame = true;  	PlayerJoined.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.PLAYER_LEFT:  	entry = Context.GetOrAddPlayer (e.PlayerName);  	if (entry != null)  		entry.IsIngame = false;  	if (e.Param == 0)  		PlayerDisconnected.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	PlayerLeft.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.GAME_LUAMSG:  	HandleSpecialMessages (e);  	break;  case Talker.SpringEventType.PLAYER_CHAT:  	if (e.Param == 255)  		HandleSpecialMessages (e);  	else  		AddToLogs (e);  	if ((PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName))  		PlayerSaid (this' new SpringLogEventArgs (e.PlayerName' e.Text));  	break;  case Talker.SpringEventType.PLAYER_DEFEATED:  	MarkPlayerDead (e.PlayerName' true);  	if (PlayerLost != null)  		PlayerLost (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.SERVER_GAMEOVER:  	if (!Context.GameEndedOk) {  		foreach (var p in Context.ActualPlayers) {  			if (!p.IsIngame && !p.IsSpectator)  				MarkPlayerDead (p.Name' true);  			p.IsIngame = false;  		}  		if (e.winningAllyTeams.Length > 0) {  			foreach (var ally in e.winningAllyTeams)  				foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == ally)))  					p.IsVictoryTeam = true;  		} else {  			foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.LoseTime == null)))  				foreach (var q in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == p.AllyNumber)))  					q.IsVictoryTeam = true;  		}  		if (Context.IngameStartTime != null) {  			Context.GameEndedOk = true;  			Context.Duration = (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds;  			GameOver.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		} else  			Trace.TraceWarning ("recieved GAMEOVER before STARTPLAYING!");  		Task.Delay (10000).ContinueWith (x => ExitGame ());  	}  	break;  case Talker.SpringEventType.PLAYER_READY:  	if (e.Param == 1) {  		entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngameReady = true;  	}  	break;  case Talker.SpringEventType.SERVER_STARTPLAYING:  	Context.ReplayName = e.ReplayFileName;  	Context.EngineBattleID = e.GameID;  	Context.IngameStartTime = DateTime.UtcNow;  	foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator))  		p.IsIngameReady = true;  	BattleStarted (this' EventArgs.Empty);  	break;  case Talker.SpringEventType.SERVER_QUIT:  	if (LobbyStartContext != null)  		foreach (var p in Context.ActualPlayers)  			p.IsIngame = false;  	break;  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: switch (e.EventType) {  case Talker.SpringEventType.PLAYER_JOINED:  	var entry = Context.GetOrAddPlayer (e.PlayerName);  	if (entry != null)  		entry.IsIngame = true;  	PlayerJoined.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.PLAYER_LEFT:  	entry = Context.GetOrAddPlayer (e.PlayerName);  	if (entry != null)  		entry.IsIngame = false;  	if (e.Param == 0)  		PlayerDisconnected.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	PlayerLeft.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.GAME_LUAMSG:  	HandleSpecialMessages (e);  	break;  case Talker.SpringEventType.PLAYER_CHAT:  	if (e.Param == 255)  		HandleSpecialMessages (e);  	else  		AddToLogs (e);  	if ((PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName))  		PlayerSaid (this' new SpringLogEventArgs (e.PlayerName' e.Text));  	break;  case Talker.SpringEventType.PLAYER_DEFEATED:  	MarkPlayerDead (e.PlayerName' true);  	if (PlayerLost != null)  		PlayerLost (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.SERVER_GAMEOVER:  	if (!Context.GameEndedOk) {  		foreach (var p in Context.ActualPlayers) {  			if (!p.IsIngame && !p.IsSpectator)  				MarkPlayerDead (p.Name' true);  			p.IsIngame = false;  		}  		if (e.winningAllyTeams.Length > 0) {  			foreach (var ally in e.winningAllyTeams)  				foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == ally)))  					p.IsVictoryTeam = true;  		} else {  			foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.LoseTime == null)))  				foreach (var q in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == p.AllyNumber)))  					q.IsVictoryTeam = true;  		}  		if (Context.IngameStartTime != null) {  			Context.GameEndedOk = true;  			Context.Duration = (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds;  			GameOver.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		} else  			Trace.TraceWarning ("recieved GAMEOVER before STARTPLAYING!");  		Task.Delay (10000).ContinueWith (x => ExitGame ());  	}  	break;  case Talker.SpringEventType.PLAYER_READY:  	if (e.Param == 1) {  		entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngameReady = true;  	}  	break;  case Talker.SpringEventType.SERVER_STARTPLAYING:  	Context.ReplayName = e.ReplayFileName;  	Context.EngineBattleID = e.GameID;  	Context.IngameStartTime = DateTime.UtcNow;  	foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator))  		p.IsIngameReady = true;  	BattleStarted (this' EventArgs.Empty);  	break;  case Talker.SpringEventType.SERVER_QUIT:  	if (LobbyStartContext != null)  		foreach (var p in Context.ActualPlayers)  			p.IsIngame = false;  	break;  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: if (e.Param == 255)  	HandleSpecialMessages (e);  else  	AddToLogs (e);  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: if (!Context.GameEndedOk) {  	foreach (var p in Context.ActualPlayers) {  		if (!p.IsIngame && !p.IsSpectator)  			MarkPlayerDead (p.Name' true);  		p.IsIngame = false;  	}  	if (e.winningAllyTeams.Length > 0) {  		foreach (var ally in e.winningAllyTeams)  			foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == ally)))  				p.IsVictoryTeam = true;  	} else {  		foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.LoseTime == null)))  			foreach (var q in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == p.AllyNumber)))  				q.IsVictoryTeam = true;  	}  	if (Context.IngameStartTime != null) {  		Context.GameEndedOk = true;  		Context.Duration = (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds;  		GameOver.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	} else  		Trace.TraceWarning ("recieved GAMEOVER before STARTPLAYING!");  	Task.Delay (10000).ContinueWith (x => ExitGame ());  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following statement contains a magic number: Task.Delay (10000).ContinueWith (x => ExitGame ());  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,timer_Elapsed,The following statement contains a magic number: try {  	var timeSinceStart = DateTime.UtcNow.Subtract (Context.StartTime).TotalSeconds;  	const int timeToWait = 180;  	const int timeToWarn = 120;  	if (Context.IsHosting && IsRunning && (Context.IngameStartTime == null))  		if (timeSinceStart > timeToWait)  			ForceStart ();  		else if (timeSinceStart > timeToWarn)  			SayGame ();  } catch (Exception ex) {  	Trace.TraceError ("Error checking start: {0}"' ex);  }  
Magic Number,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,timer_Elapsed,The following statement contains a magic number: try {  	var timeSinceStart = DateTime.UtcNow.Subtract (Context.StartTime).TotalSeconds;  	const int timeToWait = 180;  	const int timeToWarn = 120;  	if (Context.IsHosting && IsRunning && (Context.IngameStartTime == null))  		if (timeSinceStart > timeToWait)  			ForceStart ();  		else if (timeSinceStart > timeToWarn)  			SayGame ();  } catch (Exception ex) {  	Trace.TraceError ("Error checking start: {0}"' ex);  }  
Magic Number,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,GenerateHostScript,The following statement contains a magic number: try {  	Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture;  	var script = new StringBuilder ();  	script.AppendLine ("[GAME]");  	script.AppendLine ("{");  	script.AppendFormat ("  ZkSearchTag={0};\n"' Guid.NewGuid ());  	script.AppendFormat ("  Mapname={0};\n"' context.LobbyStartContext.Map);  	script.AppendFormat ("  StartPosType={0};\n"' context.LobbyStartContext.IsMission ? 3 : 2);  	script.AppendFormat ("  GameType={0};\n"' context.LobbyStartContext.Mod);  	script.AppendFormat ("  ModHash=1;\n");  	script.AppendFormat ("  MapHash=1;\n");  	if (loopbackListenPort > 0)  		script.AppendFormat ("  AutohostPort={0};\n"' loopbackListenPort);  	script.AppendLine ();  	script.AppendFormat ("  HostIP={0};\n"' context.IpAddress);  	script.AppendFormat ("  HostPort={0};\n"' context.Port);  	//script.AppendFormat("  SourcePort={0};\n"' 8300);  	script.AppendFormat ("  IsHost=1;\n");  	script.AppendLine ();  	if (!string.IsNullOrEmpty (context.MyUserName))  		script.AppendFormat ("  MyPlayerName={0};\n"' context.MyUserName);  	if (!string.IsNullOrEmpty (context.MyPassword) || !string.IsNullOrEmpty (context.MyUserName))  		script.AppendFormat ("  MyPasswd={0};\n"' context.MyPassword ?? context.MyUserName);  	GeneratePlayerSection (script' context);  	return script.ToString ();  } finally {  	Thread.CurrentThread.CurrentCulture = previousCulture;  }  
Magic Number,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,GenerateHostScript,The following statement contains a magic number: try {  	Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture;  	var script = new StringBuilder ();  	script.AppendLine ("[GAME]");  	script.AppendLine ("{");  	script.AppendFormat ("  ZkSearchTag={0};\n"' Guid.NewGuid ());  	script.AppendFormat ("  Mapname={0};\n"' context.LobbyStartContext.Map);  	script.AppendFormat ("  StartPosType={0};\n"' context.LobbyStartContext.IsMission ? 3 : 2);  	script.AppendFormat ("  GameType={0};\n"' context.LobbyStartContext.Mod);  	script.AppendFormat ("  ModHash=1;\n");  	script.AppendFormat ("  MapHash=1;\n");  	if (loopbackListenPort > 0)  		script.AppendFormat ("  AutohostPort={0};\n"' loopbackListenPort);  	script.AppendLine ();  	script.AppendFormat ("  HostIP={0};\n"' context.IpAddress);  	script.AppendFormat ("  HostPort={0};\n"' context.Port);  	//script.AppendFormat("  SourcePort={0};\n"' 8300);  	script.AppendFormat ("  IsHost=1;\n");  	script.AppendLine ();  	if (!string.IsNullOrEmpty (context.MyUserName))  		script.AppendFormat ("  MyPlayerName={0};\n"' context.MyUserName);  	if (!string.IsNullOrEmpty (context.MyPassword) || !string.IsNullOrEmpty (context.MyUserName))  		script.AppendFormat ("  MyPasswd={0};\n"' context.MyPassword ?? context.MyUserName);  	GeneratePlayerSection (script' context);  	return script.ToString ();  } finally {  	Thread.CurrentThread.CurrentCulture = previousCulture;  }  
Magic Number,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,GenerateHostScript,The following statement contains a magic number: script.AppendFormat ("  StartPosType={0};\n"' context.LobbyStartContext.IsMission ? 3 : 2);  
Magic Number,LobbyClient,ScriptGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\ScriptGenerator.cs,GenerateHostScript,The following statement contains a magic number: script.AppendFormat ("  StartPosType={0};\n"' context.LobbyStartContext.IsMission ? 3 : 2);  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ExitGame,The following statement contains a magic number: try {  	if (IsRunning) {  		if (!IsRunning)  			return;  		Trace.TraceInformation ("Terminating Spring process");  		Context.WasKilled = true;  		process.Kill ();  		process.WaitForExit (1000);  		if (!IsRunning)  			return;  		process.Kill ();  	}  } catch (Exception ex) {  	Trace.TraceError ("Error quitting spring: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ExitGame,The following statement contains a magic number: if (IsRunning) {  	if (!IsRunning)  		return;  	Trace.TraceInformation ("Terminating Spring process");  	Context.WasKilled = true;  	process.Kill ();  	process.WaitForExit (1000);  	if (!IsRunning)  		return;  	process.Kill ();  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ExitGame,The following statement contains a magic number: process.WaitForExit (1000);  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: try {  	var missionVars = "";  	foreach (var cycleline in text.Split (new[] {  		'\n''  		'\r'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		var line = cycleline;  		var gameframe = 0;  		if (line.StartsWith ("[DedicatedServer]"))  			line = line.Replace ("[DedicatedServer] "' "");  		if (line.StartsWith ("[")) {  			var idx = line.IndexOf ("] ");  			if (idx > 0) {  				int.TryParse (line.Substring (1' idx - 1)' out gameframe);  				if (idx >= 0)  					line = line.Substring (idx + 2);  			}  		}  		if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  			line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  		if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  			LobbyStartContext.Map = line.Substring (10).Trim ();  		if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  			var archiveNameIndex = line.IndexOf ("(archive"' 11);  			LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  			Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  		}  		if (line.StartsWith ("recording demo"))  			Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  		if (line.StartsWith ("Using demofile"' true' null))  			return;  		if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  			Context.EngineBattleID = line.Substring (8).Trim ();  		if (line.StartsWith ("STATS:"))  			Context.OutputExtras.Add (line.Substring (6));  		if (line.Contains ("SCORE: ")) {  			var match = Regex.Match (line' "SCORE: ([^ ]+)");  			if (match.Success) {  				var data = match.Groups [1].Value;  				data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  				var parts = data.Split ('/');  				var score = 0;  				if (parts.Length > 1) {  					score = Convert.ToInt32 (parts [1]);  					gameframe = Convert.ToInt32 (parts [0]);  				} else  					score = Convert.ToInt32 (data);  				Context.MissionScore = score;  				Context.MissionFrame = gameframe;  			}  		}  		if (line.Contains ("MISSIONVARS:")) {  			var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  			Context.MissionVars = match.Groups [1].Value.Trim ();  			Trace.TraceInformation ();  		}  		if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  			Context.IsCheating = true;  	}  } catch (Exception ex) {  	Trace.TraceError ("Error processing spring log: {0}"' ex);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: foreach (var cycleline in text.Split (new[] {  	'\n''  	'\r'  }' StringSplitOptions.RemoveEmptyEntries)) {  	var line = cycleline;  	var gameframe = 0;  	if (line.StartsWith ("[DedicatedServer]"))  		line = line.Replace ("[DedicatedServer] "' "");  	if (line.StartsWith ("[")) {  		var idx = line.IndexOf ("] ");  		if (idx > 0) {  			int.TryParse (line.Substring (1' idx - 1)' out gameframe);  			if (idx >= 0)  				line = line.Substring (idx + 2);  		}  	}  	if (line.StartsWith ("[AddGameSetupArchivesToVFS]"))  		line = line.Replace ("[AddGameSetupArchivesToVFS] "' "");  	if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  		LobbyStartContext.Map = line.Substring (10).Trim ();  	if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  		var archiveNameIndex = line.IndexOf ("(archive"' 11);  		LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  		Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  	}  	if (line.StartsWith ("recording demo"))  		Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  	if (line.StartsWith ("Using demofile"' true' null))  		return;  	if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  		Context.EngineBattleID = line.Substring (8).Trim ();  	if (line.StartsWith ("STATS:"))  		Context.OutputExtras.Add (line.Substring (6));  	if (line.Contains ("SCORE: ")) {  		var match = Regex.Match (line' "SCORE: ([^ ]+)");  		if (match.Success) {  			var data = match.Groups [1].Value;  			data = Encoding.ASCII.GetString (Convert.FromBase64String (match.Groups [1].Value));  			var parts = data.Split ('/');  			var score = 0;  			if (parts.Length > 1) {  				score = Convert.ToInt32 (parts [1]);  				gameframe = Convert.ToInt32 (parts [0]);  			} else  				score = Convert.ToInt32 (data);  			Context.MissionScore = score;  			Context.MissionFrame = gameframe;  		}  	}  	if (line.Contains ("MISSIONVARS:")) {  		var match = Regex.Match (line' "MISSIONVARS: ([^ ]+)");  		Context.MissionVars = match.Groups [1].Value.Trim ();  		Trace.TraceInformation ();  	}  	if (line.StartsWith ("Cheating!"' true' null) || line.StartsWith ("Cheating is enabled!"' true' null))  		Context.IsCheating = true;  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (line.StartsWith ("[")) {  	var idx = line.IndexOf ("] ");  	if (idx > 0) {  		int.TryParse (line.Substring (1' idx - 1)' out gameframe);  		if (idx >= 0)  			line = line.Substring (idx + 2);  	}  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (idx > 0) {  	int.TryParse (line.Substring (1' idx - 1)' out gameframe);  	if (idx >= 0)  		line = line.Substring (idx + 2);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (idx >= 0)  	line = line.Substring (idx + 2);  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: line = line.Substring (idx + 2);  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (string.IsNullOrEmpty (LobbyStartContext.Map) && line.StartsWith ("Using map"' true' null))  	LobbyStartContext.Map = line.Substring (10).Trim ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: LobbyStartContext.Map = line.Substring (10).Trim ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  	var archiveNameIndex = line.IndexOf ("(archive"' 11);  	LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  	Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  	var archiveNameIndex = line.IndexOf ("(archive"' 11);  	LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  	Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (string.IsNullOrEmpty (LobbyStartContext.Mod) && line.StartsWith ("Using game"' true' null)) {  	var archiveNameIndex = line.IndexOf ("(archive"' 11);  	LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  	Trace.TraceInformation ("Mod name: " + LobbyStartContext.Mod);  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: LobbyStartContext.Mod = line.Substring (11' archiveNameIndex - 11).Trim ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (line.StartsWith ("recording demo"))  	Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: Context.ReplayName = Path.GetFileName (line.Substring (15).Trim ());  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (line.StartsWith ("GameID: "' true' null) && (Context.EngineBattleID == null))  	Context.EngineBattleID = line.Substring (8).Trim ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: Context.EngineBattleID = line.Substring (8).Trim ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: if (line.StartsWith ("STATS:"))  	Context.OutputExtras.Add (line.Substring (6));  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,ParseInfolog,The following statement contains a magic number: Context.OutputExtras.Add (line.Substring (6));  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,springProcess_Exited,The following statement contains a magic number: try {  	if (!process.WaitForExit (2000))  		process.Kill ();  } catch {  }  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,springProcess_Exited,The following statement contains a magic number: if (!process.WaitForExit (2000))  	process.Kill ();  
Magic Number,LobbyClient,Spring,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.cs,springProcess_Exited,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,LobbyClient,SpringBattleContext,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.SpringBattleContext.cs,SetForHosting,The following statement contains a magic number: Port = port ?? 8452;  
Magic Number,LobbyClient,SpringBattleContext,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Spring.SpringBattleContext.cs,SetForSelfHosting,The following statement contains a magic number: Port = 8452;  
Magic Number,LobbyClient,SpringSettings,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\SpringSettings.cs,GetEngineConfigOptions,The following statement contains a magic number: p.WaitForExit (3000);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Close,The following statement contains a magic number: thread.Join (1000);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,SendText,The following statement contains a magic number: foreach (var s in lines) {  	var bytes = Encoding.UTF8.GetBytes (s.Substring (0' Math.Min (s.Length' 250)));  	// take only first 250 characters to prevent crashes  	if (springTalkPort != 0)  		udp.Send (bytes' bytes.Length' "127.0.0.1"' springTalkPort);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: while (!close) {  	var endpoint = new IPEndPoint (IPAddress.Loopback' 0);  	var data = udp.Receive (ref endpoint);  	springTalkPort = endpoint.Port;  	int msgSize;  	if (data.Length > 0) {  		var sea = new SpringEventArgs ();  		sea.EventType = (SpringEventType)data [0];  		switch (sea.EventType) {  		case SpringEventType.PLAYER_JOINED:  			sea.PlayerNumber = data [1];  			sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  			playerIdToName [sea.PlayerNumber] = sea.PlayerName;  			break;  		case SpringEventType.PLAYER_LEFT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_READY:  			sea.PlayerNumber = data [1];  			if (data.Length <= 2)  				sea.EventType = SpringEventType.PLAYER_DEFEATED;  			// hack for spring   			else  				sea.Param = data [2];  			break;  		case SpringEventType.PLAYER_CHAT:  			sea.PlayerNumber = data [1];  			sea.Param = data [2];  			sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  			break;  		case SpringEventType.PLAYER_DEFEATED:  			sea.PlayerNumber = data [1];  			break;  		case SpringEventType.SERVER_STARTPLAYING:  			msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  			sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  			sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  			break;  		case SpringEventType.SERVER_GAMEOVER:  			msgSize = data [1];  			sea.PlayerNumber = data [2];  			if (msgSize != data.Length)  				Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  			sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  			break;  		case SpringEventType.SERVER_MESSAGE:  			break;  		case SpringEventType.GAME_LUAMSG:  			sea.PlayerNumber = data [1];  			sea.Param = data [4];  			sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  			break;  		}  		if (sea.PlayerName == null) {  			var translated = TranslateIdToPlayerName (sea.PlayerNumber);  			if (translated != null)  				sea.PlayerName = translated;  		}  		if (SpringEvent != null)  			SpringEvent (this' sea);  	}  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length > 0) {  	var sea = new SpringEventArgs ();  	sea.EventType = (SpringEventType)data [0];  	switch (sea.EventType) {  	case SpringEventType.PLAYER_JOINED:  		sea.PlayerNumber = data [1];  		sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  		playerIdToName [sea.PlayerNumber] = sea.PlayerName;  		break;  	case SpringEventType.PLAYER_LEFT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_READY:  		sea.PlayerNumber = data [1];  		if (data.Length <= 2)  			sea.EventType = SpringEventType.PLAYER_DEFEATED;  		// hack for spring   		else  			sea.Param = data [2];  		break;  	case SpringEventType.PLAYER_CHAT:  		sea.PlayerNumber = data [1];  		sea.Param = data [2];  		sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  		break;  	case SpringEventType.PLAYER_DEFEATED:  		sea.PlayerNumber = data [1];  		break;  	case SpringEventType.SERVER_STARTPLAYING:  		msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  		sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  		sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  		break;  	case SpringEventType.SERVER_GAMEOVER:  		msgSize = data [1];  		sea.PlayerNumber = data [2];  		if (msgSize != data.Length)  			Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  		sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  		break;  	case SpringEventType.SERVER_MESSAGE:  		break;  	case SpringEventType.GAME_LUAMSG:  		sea.PlayerNumber = data [1];  		sea.Param = data [4];  		sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  		break;  	}  	if (sea.PlayerName == null) {  		var translated = TranslateIdToPlayerName (sea.PlayerNumber);  		if (translated != null)  			sea.PlayerName = translated;  	}  	if (SpringEvent != null)  		SpringEvent (this' sea);  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Param = data [2];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length <= 2)  	sea.EventType = SpringEventType.PLAYER_DEFEATED;  // hack for spring   else  	sea.Param = data [2];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: if (data.Length <= 2)  	sea.EventType = SpringEventType.PLAYER_DEFEATED;  // hack for spring   else  	sea.Param = data [2];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Param = data [2];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Param = data [2];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.PlayerNumber = data [2];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Param = data [4];  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  
Magic Number,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following statement contains a magic number: sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  
Magic Number,LobbyClient,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\TasClient.cs,TasClient,The following statement contains a magic number: pingTimer = new Timer (pingInterval * 1000) {  	AutoReset = true  };  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,TasClient,The following statement contains a magic number: pingTimer = new Timer (pingInterval * 1000) {  	AutoReset = true  };  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following statement contains a magic number: try {  	if (command.StartsWith ("#")) {  		MessageID = int.Parse (command.Substring (1));  		command = args [0];  		args = Utils.ShiftArray (args' -1);  	}  	Input (this' new TasInputArgs (command' args));  	switch (command) {  	case "TASServer":  		// happens after connecting to server  		OnTasServer (args);  		break;  	case "ACCEPTED":  		// Login accepted  		OnAccepted (args);  		break;  	case "DENIED":  		// login denied  		OnDenied (args);  		break;  	case "JOIN":  		// channel joined  		OnJoin (args);  		break;  	case "JOINFAILED":  		// channel join failed  		ChannelJoinFailed (this' new TasEventArgs (Utils.Glue (args)));  		break;  	case "CHANNEL":  		// iterating channels  		OnChannel (args);  		break;  	case "ENDOFCHANNELS":  		// end of channel list iteration  		OnEndOfChannels ();  		break;  	case "ADDUSER":  		// new user joined ta server  		OnAddUser (args);  		break;  	case "FORCELEAVECHANNEL":  		OnForceLeaveChannel (args);  		break;  	case "KICKUSER":  		OnKickUser (args);  		break;  	case "REMOVEUSER":  		// user left ta server  		OnRemoveUser (args);  		break;  	case "MOTD":  		// server motd  		OnMotd (args);  		break;  	case "SERVERMSG":  		// server message  		OnServerMsg (args);  		break;  	case "SERVERMSGBOX":  		// server messagebox  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.MessageBox' ""' ""' Utils.Glue (args' 0)' false));  		break;  	case "CHANNELMESSAGE":  		// server broadcast to channel  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Channel' args [0]' ""' Utils.Glue (args' 1)' false));  		break;  	case "SAID":  		// someone said something in channel  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false));  		break;  	case "SAIDEX":  		// someone said something with emote in channel  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true));  		break;  	case "SAYPRIVATE":  		// sent back from sever when user sends private message  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' username' Utils.Glue (args' 1)' false));  		break;  	case "SAIDPRIVATE":  		// someone said something to me  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' args [0]' Utils.Glue (args' 1)' false));  		break;  	case "SAIDBATTLE":  		// someone said something in battle  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' false));  		break;  	case "SAIDBATTLEEX":  		// someone said in battle with emote  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' true));  		break;  	case "BROADCAST":  		// server sends urgent broadcast  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Broadcast' ""' ""' Utils.Glue (args' 0)' false));  		break;  	case "REDIRECT":  		// server sends backup IP  		OnRedirect (args);  		break;  	case "CLIENTSTATUS":  		// client's status changed  		OnClientStatus (args);  		break;  	case "CLIENTS":  		// client list sent after channel join  		OnClients (args);  		break;  	case "JOINED":  		// user joined one of my channels  		OnJoined (args);  		break;  	case "LEFT":  		// user left one of my channels  		OnLeft (args);  		break;  	case "AGREEMENT":  		OnAgreement (args);  		break;  	case "PONG":  		lastPong = DateTime.UtcNow;  		break;  	case "AGREEMENTEND":  		OnAgreementEnd ();  		break;  	case "REGISTRATIONDENIED":  		RegistrationDenied (this' new TasEventArgs (Utils.Glue (args)));  		break;  	case "REGISTRATIONACCEPTED":  		RegistrationAccepted (this' new TasEventArgs (args));  		break;  	}  } catch (Exception e) {  	//not throwing "ApplicationException" because we can explicitly say its application fault here:  	Trace.TraceError ("TASC error: Error was thrown while processing chat command {0} \"{1}\" (check if chat event trigger faulty code in application): {2}"' command' Utils.Glue (args)' e);  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following statement contains a magic number: try {  	if (command.StartsWith ("#")) {  		MessageID = int.Parse (command.Substring (1));  		command = args [0];  		args = Utils.ShiftArray (args' -1);  	}  	Input (this' new TasInputArgs (command' args));  	switch (command) {  	case "TASServer":  		// happens after connecting to server  		OnTasServer (args);  		break;  	case "ACCEPTED":  		// Login accepted  		OnAccepted (args);  		break;  	case "DENIED":  		// login denied  		OnDenied (args);  		break;  	case "JOIN":  		// channel joined  		OnJoin (args);  		break;  	case "JOINFAILED":  		// channel join failed  		ChannelJoinFailed (this' new TasEventArgs (Utils.Glue (args)));  		break;  	case "CHANNEL":  		// iterating channels  		OnChannel (args);  		break;  	case "ENDOFCHANNELS":  		// end of channel list iteration  		OnEndOfChannels ();  		break;  	case "ADDUSER":  		// new user joined ta server  		OnAddUser (args);  		break;  	case "FORCELEAVECHANNEL":  		OnForceLeaveChannel (args);  		break;  	case "KICKUSER":  		OnKickUser (args);  		break;  	case "REMOVEUSER":  		// user left ta server  		OnRemoveUser (args);  		break;  	case "MOTD":  		// server motd  		OnMotd (args);  		break;  	case "SERVERMSG":  		// server message  		OnServerMsg (args);  		break;  	case "SERVERMSGBOX":  		// server messagebox  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.MessageBox' ""' ""' Utils.Glue (args' 0)' false));  		break;  	case "CHANNELMESSAGE":  		// server broadcast to channel  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Channel' args [0]' ""' Utils.Glue (args' 1)' false));  		break;  	case "SAID":  		// someone said something in channel  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false));  		break;  	case "SAIDEX":  		// someone said something with emote in channel  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true));  		break;  	case "SAYPRIVATE":  		// sent back from sever when user sends private message  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' username' Utils.Glue (args' 1)' false));  		break;  	case "SAIDPRIVATE":  		// someone said something to me  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' args [0]' Utils.Glue (args' 1)' false));  		break;  	case "SAIDBATTLE":  		// someone said something in battle  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' false));  		break;  	case "SAIDBATTLEEX":  		// someone said in battle with emote  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' true));  		break;  	case "BROADCAST":  		// server sends urgent broadcast  		InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Broadcast' ""' ""' Utils.Glue (args' 0)' false));  		break;  	case "REDIRECT":  		// server sends backup IP  		OnRedirect (args);  		break;  	case "CLIENTSTATUS":  		// client's status changed  		OnClientStatus (args);  		break;  	case "CLIENTS":  		// client list sent after channel join  		OnClients (args);  		break;  	case "JOINED":  		// user joined one of my channels  		OnJoined (args);  		break;  	case "LEFT":  		// user left one of my channels  		OnLeft (args);  		break;  	case "AGREEMENT":  		OnAgreement (args);  		break;  	case "PONG":  		lastPong = DateTime.UtcNow;  		break;  	case "AGREEMENTEND":  		OnAgreementEnd ();  		break;  	case "REGISTRATIONDENIED":  		RegistrationDenied (this' new TasEventArgs (Utils.Glue (args)));  		break;  	case "REGISTRATIONACCEPTED":  		RegistrationAccepted (this' new TasEventArgs (args));  		break;  	}  } catch (Exception e) {  	//not throwing "ApplicationException" because we can explicitly say its application fault here:  	Trace.TraceError ("TASC error: Error was thrown while processing chat command {0} \"{1}\" (check if chat event trigger faulty code in application): {2}"' command' Utils.Glue (args)' e);  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following statement contains a magic number: switch (command) {  case "TASServer":  	// happens after connecting to server  	OnTasServer (args);  	break;  case "ACCEPTED":  	// Login accepted  	OnAccepted (args);  	break;  case "DENIED":  	// login denied  	OnDenied (args);  	break;  case "JOIN":  	// channel joined  	OnJoin (args);  	break;  case "JOINFAILED":  	// channel join failed  	ChannelJoinFailed (this' new TasEventArgs (Utils.Glue (args)));  	break;  case "CHANNEL":  	// iterating channels  	OnChannel (args);  	break;  case "ENDOFCHANNELS":  	// end of channel list iteration  	OnEndOfChannels ();  	break;  case "ADDUSER":  	// new user joined ta server  	OnAddUser (args);  	break;  case "FORCELEAVECHANNEL":  	OnForceLeaveChannel (args);  	break;  case "KICKUSER":  	OnKickUser (args);  	break;  case "REMOVEUSER":  	// user left ta server  	OnRemoveUser (args);  	break;  case "MOTD":  	// server motd  	OnMotd (args);  	break;  case "SERVERMSG":  	// server message  	OnServerMsg (args);  	break;  case "SERVERMSGBOX":  	// server messagebox  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.MessageBox' ""' ""' Utils.Glue (args' 0)' false));  	break;  case "CHANNELMESSAGE":  	// server broadcast to channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Channel' args [0]' ""' Utils.Glue (args' 1)' false));  	break;  case "SAID":  	// someone said something in channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false));  	break;  case "SAIDEX":  	// someone said something with emote in channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true));  	break;  case "SAYPRIVATE":  	// sent back from sever when user sends private message  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' username' Utils.Glue (args' 1)' false));  	break;  case "SAIDPRIVATE":  	// someone said something to me  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' args [0]' Utils.Glue (args' 1)' false));  	break;  case "SAIDBATTLE":  	// someone said something in battle  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' false));  	break;  case "SAIDBATTLEEX":  	// someone said in battle with emote  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' true));  	break;  case "BROADCAST":  	// server sends urgent broadcast  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Broadcast' ""' ""' Utils.Glue (args' 0)' false));  	break;  case "REDIRECT":  	// server sends backup IP  	OnRedirect (args);  	break;  case "CLIENTSTATUS":  	// client's status changed  	OnClientStatus (args);  	break;  case "CLIENTS":  	// client list sent after channel join  	OnClients (args);  	break;  case "JOINED":  	// user joined one of my channels  	OnJoined (args);  	break;  case "LEFT":  	// user left one of my channels  	OnLeft (args);  	break;  case "AGREEMENT":  	OnAgreement (args);  	break;  case "PONG":  	lastPong = DateTime.UtcNow;  	break;  case "AGREEMENTEND":  	OnAgreementEnd ();  	break;  case "REGISTRATIONDENIED":  	RegistrationDenied (this' new TasEventArgs (Utils.Glue (args)));  	break;  case "REGISTRATIONACCEPTED":  	RegistrationAccepted (this' new TasEventArgs (args));  	break;  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following statement contains a magic number: switch (command) {  case "TASServer":  	// happens after connecting to server  	OnTasServer (args);  	break;  case "ACCEPTED":  	// Login accepted  	OnAccepted (args);  	break;  case "DENIED":  	// login denied  	OnDenied (args);  	break;  case "JOIN":  	// channel joined  	OnJoin (args);  	break;  case "JOINFAILED":  	// channel join failed  	ChannelJoinFailed (this' new TasEventArgs (Utils.Glue (args)));  	break;  case "CHANNEL":  	// iterating channels  	OnChannel (args);  	break;  case "ENDOFCHANNELS":  	// end of channel list iteration  	OnEndOfChannels ();  	break;  case "ADDUSER":  	// new user joined ta server  	OnAddUser (args);  	break;  case "FORCELEAVECHANNEL":  	OnForceLeaveChannel (args);  	break;  case "KICKUSER":  	OnKickUser (args);  	break;  case "REMOVEUSER":  	// user left ta server  	OnRemoveUser (args);  	break;  case "MOTD":  	// server motd  	OnMotd (args);  	break;  case "SERVERMSG":  	// server message  	OnServerMsg (args);  	break;  case "SERVERMSGBOX":  	// server messagebox  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.MessageBox' ""' ""' Utils.Glue (args' 0)' false));  	break;  case "CHANNELMESSAGE":  	// server broadcast to channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Channel' args [0]' ""' Utils.Glue (args' 1)' false));  	break;  case "SAID":  	// someone said something in channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false));  	break;  case "SAIDEX":  	// someone said something with emote in channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true));  	break;  case "SAYPRIVATE":  	// sent back from sever when user sends private message  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' username' Utils.Glue (args' 1)' false));  	break;  case "SAIDPRIVATE":  	// someone said something to me  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' args [0]' Utils.Glue (args' 1)' false));  	break;  case "SAIDBATTLE":  	// someone said something in battle  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' false));  	break;  case "SAIDBATTLEEX":  	// someone said in battle with emote  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' true));  	break;  case "BROADCAST":  	// server sends urgent broadcast  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Broadcast' ""' ""' Utils.Glue (args' 0)' false));  	break;  case "REDIRECT":  	// server sends backup IP  	OnRedirect (args);  	break;  case "CLIENTSTATUS":  	// client's status changed  	OnClientStatus (args);  	break;  case "CLIENTS":  	// client list sent after channel join  	OnClients (args);  	break;  case "JOINED":  	// user joined one of my channels  	OnJoined (args);  	break;  case "LEFT":  	// user left one of my channels  	OnLeft (args);  	break;  case "AGREEMENT":  	OnAgreement (args);  	break;  case "PONG":  	lastPong = DateTime.UtcNow;  	break;  case "AGREEMENTEND":  	OnAgreementEnd ();  	break;  case "REGISTRATIONDENIED":  	RegistrationDenied (this' new TasEventArgs (Utils.Glue (args)));  	break;  case "REGISTRATIONACCEPTED":  	RegistrationAccepted (this' new TasEventArgs (args));  	break;  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following statement contains a magic number: InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false));  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following statement contains a magic number: InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true));  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnKickUser,The following statement contains a magic number: if (us == MyUser.Name) {  	string kicker = args [0];  	string reason = args.Length > 2 ? string.Join (" "' args' 2) : null;  	KickedFromServer (this' new KickedFromServerEventArgs (kicker' reason));  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnKickUser,The following statement contains a magic number: if (us == MyUser.Name) {  	string kicker = args [0];  	string reason = args.Length > 2 ? string.Join (" "' args' 2) : null;  	KickedFromServer (this' new KickedFromServerEventArgs (kicker' reason));  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnAddUser,The following statement contains a magic number: try {  	var u = User.Create (args [0]);  	u.Country = args [1];  	int cpu;  	int.TryParse (args [2]' out cpu);  	u.Cpu = cpu;  	u.LobbyID = Convert.ToInt32 (args [3]);  	ExistingUsers.Add (u.Name' u);  	UserAdded (this' new EventArgs<User> (u));  } catch (Exception e) {  	//TraceError ensure bright red coloured message (WriteLine looked harmless):  	Trace.TraceError ("Error was thrown while processing chat command ADDUSER (check if this event trigger faulty code in application): " + e);  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnAddUser,The following statement contains a magic number: try {  	var u = User.Create (args [0]);  	u.Country = args [1];  	int cpu;  	int.TryParse (args [2]' out cpu);  	u.Cpu = cpu;  	u.LobbyID = Convert.ToInt32 (args [3]);  	ExistingUsers.Add (u.Name' u);  	UserAdded (this' new EventArgs<User> (u));  } catch (Exception e) {  	//TraceError ensure bright red coloured message (WriteLine looked harmless):  	Trace.TraceError ("Error was thrown while processing chat command ADDUSER (check if this event trigger faulty code in application): " + e);  }  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnAddUser,The following statement contains a magic number: int.TryParse (args [2]' out cpu);  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnAddUser,The following statement contains a magic number: u.LobbyID = Convert.ToInt32 (args [3]);  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnChannel,The following statement contains a magic number: if (args.Length >= 3)  	c.topic = Utils.Glue (args' 2);  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnChannel,The following statement contains a magic number: if (args.Length >= 3)  	c.topic = Utils.Glue (args' 2);  
Magic Number,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,OnChannel,The following statement contains a magic number: c.topic = Utils.Glue (args' 2);  
Magic Number,LobbyClient.Legacy,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\User.cs,FromInt,The following statement contains a magic number: IsAway = (status & 2) > 0;  
Magic Number,LobbyClient.Legacy,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\User.cs,FromInt,The following statement contains a magic number: IsAdmin = (status & 32) > 0;  
Magic Number,LobbyClient.Legacy,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\User.cs,FromInt,The following statement contains a magic number: IsBot = (status & 64) > 0;  
Magic Number,LobbyClient.Legacy,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\User.cs,FromInt,The following statement contains a magic number: Rank = (status & 28) >> 2;  
Magic Number,LobbyClient.Legacy,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\User.cs,FromInt,The following statement contains a magic number: Rank = (status & 28) >> 2;  
Magic Number,LobbyClient.Legacy,User,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\User.cs,ToInt,The following statement contains a magic number: res |= IsAway ? 2 : 0;  
Missing Default,LobbyClient,DedicatedServer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\DedicatedServer.cs,talker_SpringEvent,The following switch statement is missing a default case: switch (e.EventType) {  case Talker.SpringEventType.PLAYER_JOINED:  	var entry = Context.GetOrAddPlayer (e.PlayerName);  	if (entry != null)  		entry.IsIngame = true;  	PlayerJoined.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.PLAYER_LEFT:  	entry = Context.GetOrAddPlayer (e.PlayerName);  	if (entry != null)  		entry.IsIngame = false;  	if (e.Param == 0)  		PlayerDisconnected.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	PlayerLeft.Invoke (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.GAME_LUAMSG:  	HandleSpecialMessages (e);  	break;  case Talker.SpringEventType.PLAYER_CHAT:  	if (e.Param == 255)  		HandleSpecialMessages (e);  	else  		AddToLogs (e);  	if ((PlayerSaid != null) && ((e.Param == Talker.TO_EVERYONE) || (e.Param == Talker.TO_EVERYONE_LEGACY)) && !string.IsNullOrEmpty (e.PlayerName))  		PlayerSaid (this' new SpringLogEventArgs (e.PlayerName' e.Text));  	break;  case Talker.SpringEventType.PLAYER_DEFEATED:  	MarkPlayerDead (e.PlayerName' true);  	if (PlayerLost != null)  		PlayerLost (this' new SpringLogEventArgs (e.PlayerName));  	break;  case Talker.SpringEventType.SERVER_GAMEOVER:  	if (!Context.GameEndedOk) {  		foreach (var p in Context.ActualPlayers) {  			if (!p.IsIngame && !p.IsSpectator)  				MarkPlayerDead (p.Name' true);  			p.IsIngame = false;  		}  		if (e.winningAllyTeams.Length > 0) {  			foreach (var ally in e.winningAllyTeams)  				foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == ally)))  					p.IsVictoryTeam = true;  		} else {  			foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.LoseTime == null)))  				foreach (var q in Context.ActualPlayers.Where (x => !x.IsSpectator && (x.AllyNumber == p.AllyNumber)))  					q.IsVictoryTeam = true;  		}  		if (Context.IngameStartTime != null) {  			Context.GameEndedOk = true;  			Context.Duration = (int)DateTime.UtcNow.Subtract (Context.IngameStartTime ?? Context.StartTime).TotalSeconds;  			GameOver.Invoke (this' new SpringLogEventArgs (e.PlayerName));  		} else  			Trace.TraceWarning ("recieved GAMEOVER before STARTPLAYING!");  		Task.Delay (10000).ContinueWith (x => ExitGame ());  	}  	break;  case Talker.SpringEventType.PLAYER_READY:  	if (e.Param == 1) {  		entry = Context.GetOrAddPlayer (e.PlayerName);  		if (entry != null)  			entry.IsIngameReady = true;  	}  	break;  case Talker.SpringEventType.SERVER_STARTPLAYING:  	Context.ReplayName = e.ReplayFileName;  	Context.EngineBattleID = e.GameID;  	Context.IngameStartTime = DateTime.UtcNow;  	foreach (var p in Context.ActualPlayers.Where (x => !x.IsSpectator))  		p.IsIngameReady = true;  	BattleStarted (this' EventArgs.Empty);  	break;  case Talker.SpringEventType.SERVER_QUIT:  	if (LobbyStartContext != null)  		foreach (var p in Context.ActualPlayers)  			p.IsIngame = false;  	break;  }  
Missing Default,LobbyClient,Talker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Talker.cs,Listener,The following switch statement is missing a default case: switch (sea.EventType) {  case SpringEventType.PLAYER_JOINED:  	sea.PlayerNumber = data [1];  	sea.PlayerName = Encoding.ASCII.GetString (data' 2' data.Length - 2);  	playerIdToName [sea.PlayerNumber] = sea.PlayerName;  	break;  case SpringEventType.PLAYER_LEFT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	break;  case SpringEventType.PLAYER_READY:  	sea.PlayerNumber = data [1];  	if (data.Length <= 2)  		sea.EventType = SpringEventType.PLAYER_DEFEATED;  	// hack for spring   	else  		sea.Param = data [2];  	break;  case SpringEventType.PLAYER_CHAT:  	sea.PlayerNumber = data [1];  	sea.Param = data [2];  	sea.Text = Encoding.UTF8.GetString (data' 3' data.Length - 3);  	break;  case SpringEventType.PLAYER_DEFEATED:  	sea.PlayerNumber = data [1];  	break;  case SpringEventType.SERVER_STARTPLAYING:  	msgSize = data [1] + (data [2] << 8) + (data [3] << 16) + (data [4] << 24);  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on STARTPLAYING"' msgSize' data.Length);  	sea.GameID = data.Skip (5).Take (16).ToArray ().ToHex ();  	sea.ReplayFileName = Encoding.UTF8.GetString (data' 21' data.Length - 21);  	break;  case SpringEventType.SERVER_GAMEOVER:  	msgSize = data [1];  	sea.PlayerNumber = data [2];  	if (msgSize != data.Length)  		Trace.TraceWarning ("Warning spring message size mismatch' expected {0} got {1} on GAMEOVER"' msgSize' data.Length);  	sea.winningAllyTeams = data.Skip (3).Take (msgSize - 3).ToArray ();  	break;  case SpringEventType.SERVER_MESSAGE:  	break;  case SpringEventType.GAME_LUAMSG:  	sea.PlayerNumber = data [1];  	sea.Param = data [4];  	sea.Text = Encoding.ASCII.GetString (data' 5' data.Length - 5);  	break;  }  
Missing Default,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,Say,The following switch statement is missing a default case: switch (place) {  case SayPlace.Channel:  	if (!JoinedChannels.ContainsKey (args.Channel))  		JoinChannel (args.Channel);  	if (args.IsEmote)  		await con.SendCommand ("SAYEX"' args.Channel' args.Text);  	else  		await con.SendCommand ("SAY"' args.Channel' args.Text);  	break;  case SayPlace.User:  	await con.SendCommand ("SAYPRIVATE"' args.Channel' args.Text);  	break;  case SayPlace.Battle:  	if (args.IsEmote)  		await con.SendCommand ("SAYBATTLEEX"' args.Text);  	else  		await con.SendCommand ("SAYBATTLE"' args.Text);  	break;  case SayPlace.BattlePrivate:  	if (args.IsEmote)  		await con.SendCommand ("SAYBATTLEPRIVATEEX"' channel' args.Text);  	else  		await con.SendCommand ("SAYBATTLEPRIVATE"' channel' args.Text);  	break;  }  
Missing Default,LobbyClient.Legacy,TasClient,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\LobbyClient\Legacy\TasClient.cs,DispatchServerCommandOnGuiThread,The following switch statement is missing a default case: switch (command) {  case "TASServer":  	// happens after connecting to server  	OnTasServer (args);  	break;  case "ACCEPTED":  	// Login accepted  	OnAccepted (args);  	break;  case "DENIED":  	// login denied  	OnDenied (args);  	break;  case "JOIN":  	// channel joined  	OnJoin (args);  	break;  case "JOINFAILED":  	// channel join failed  	ChannelJoinFailed (this' new TasEventArgs (Utils.Glue (args)));  	break;  case "CHANNEL":  	// iterating channels  	OnChannel (args);  	break;  case "ENDOFCHANNELS":  	// end of channel list iteration  	OnEndOfChannels ();  	break;  case "ADDUSER":  	// new user joined ta server  	OnAddUser (args);  	break;  case "FORCELEAVECHANNEL":  	OnForceLeaveChannel (args);  	break;  case "KICKUSER":  	OnKickUser (args);  	break;  case "REMOVEUSER":  	// user left ta server  	OnRemoveUser (args);  	break;  case "MOTD":  	// server motd  	OnMotd (args);  	break;  case "SERVERMSG":  	// server message  	OnServerMsg (args);  	break;  case "SERVERMSGBOX":  	// server messagebox  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.MessageBox' ""' ""' Utils.Glue (args' 0)' false));  	break;  case "CHANNELMESSAGE":  	// server broadcast to channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Channel' args [0]' ""' Utils.Glue (args' 1)' false));  	break;  case "SAID":  	// someone said something in channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' false));  	break;  case "SAIDEX":  	// someone said something with emote in channel  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Channel' args [0]' args [1]' Utils.Glue (args' 2)' true));  	break;  case "SAYPRIVATE":  	// sent back from sever when user sends private message  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' username' Utils.Glue (args' 1)' false));  	break;  case "SAIDPRIVATE":  	// someone said something to me  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Normal' args [0]' args [0]' Utils.Glue (args' 1)' false));  	break;  case "SAIDBATTLE":  	// someone said something in battle  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' false));  	break;  case "SAIDBATTLEEX":  	// someone said in battle with emote  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Player' TasSayEventArgs.Places.Battle' ""' args [0]' Utils.Glue (args' 1)' true));  	break;  case "BROADCAST":  	// server sends urgent broadcast  	InvokeSaid (new TasSayEventArgs (TasSayEventArgs.Origins.Server' TasSayEventArgs.Places.Broadcast' ""' ""' Utils.Glue (args' 0)' false));  	break;  case "REDIRECT":  	// server sends backup IP  	OnRedirect (args);  	break;  case "CLIENTSTATUS":  	// client's status changed  	OnClientStatus (args);  	break;  case "CLIENTS":  	// client list sent after channel join  	OnClients (args);  	break;  case "JOINED":  	// user joined one of my channels  	OnJoined (args);  	break;  case "LEFT":  	// user left one of my channels  	OnLeft (args);  	break;  case "AGREEMENT":  	OnAgreement (args);  	break;  case "PONG":  	lastPong = DateTime.UtcNow;  	break;  case "AGREEMENTEND":  	OnAgreementEnd ();  	break;  case "REGISTRATIONDENIED":  	RegistrationDenied (this' new TasEventArgs (Utils.Glue (args)));  	break;  case "REGISTRATIONACCEPTED":  	RegistrationAccepted (this' new TasEventArgs (args));  	break;  }  
