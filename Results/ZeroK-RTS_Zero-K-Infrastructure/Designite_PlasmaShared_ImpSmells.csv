Implementation smell,Namespace,Class,File,Method,Description
Long Method,ZkData,MetaDataCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MetaDataCache.cs,GetMap,The method has 72 lines of code.
Complex Method,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,Cyclomatic complexity of the method is 27
Complex Method,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,InitialFolderScan,Cyclomatic complexity of the method is 10
Complex Method,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,MainThreadFunction,Cyclomatic complexity of the method is 11
Complex Method,ZkData,LuaTable,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\LuaTable.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,SpringPaths,Cyclomatic complexity of the method is 7
Complex Method,ZkData,CsvTable,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\CsvTable.cs,ParseCsvLine,Cyclomatic complexity of the method is 11
Complex Method,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,Decompress,Cyclomatic complexity of the method is 7
Complex Method,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,DownloadFile,Cyclomatic complexity of the method is 7
Complex Method,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,DownloadFileAsync,Cyclomatic complexity of the method is 7
Complex Method,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,ShiftArray,Cyclomatic complexity of the method is 8
Complex Method,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,Cyclomatic complexity of the method is 14
Complex Method,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Draw,Cyclomatic complexity of the method is 7
Complex Method,PlasmaShared.UnitSyncLib,ArchiveCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\ArchiveCache.cs,ArchiveCache,Cyclomatic complexity of the method is 12
Complex Method,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetMod,Cyclomatic complexity of the method is 7
Complex Method,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,ProcessMapInfoItem,Cyclomatic complexity of the method is 30
Complex Method,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,LoadOption,Cyclomatic complexity of the method is 23
Complex Method,ZkData.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\Option.cs,GetPair,Cyclomatic complexity of the method is 17
Complex Method,ZkData.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\Option.cs,ToString,Cyclomatic complexity of the method is 8
Long Parameter List,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,AddWork,The method has 5 parameters.
Long Parameter List,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,AddWork,The method has 4 parameters.
Long Parameter List,ZkData,MapRegisteredEventArgs,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MapRegisteredEventArgs.cs,MapRegisteredEventArgs,The method has 6 parameters.
Long Parameter List,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,SpringPaths,The method has 4 parameters.
Long Parameter List,ZkData,CsvTable,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\CsvTable.cs,CsvTable,The method has 5 parameters.
Long Parameter List,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,GetResized,The method has 4 parameters.
Long Parameter List,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,GetResizedWithCache,The method has 4 parameters.
Long Parameter List,PlasmaShared,IContentService,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\IContentService\IContentService.cs,RegisterResource,The method has 13 parameters.
Long Parameter List,PlasmaShared,IContentService,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\IContentService\IContentService.cs,SubmitMissionScore,The method has 6 parameters.
Long Parameter List,PlasmaShared,ResizedImageCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\ResizedImageCache.cs,GetResizedWithCache,The method has 4 parameters.
Long Parameter List,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The method has 4 parameters.
Long Parameter List,Diagrams,Node,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Node.cs,DrawConnector,The method has 4 parameters.
Long Statement,ZkData,EventExtensions,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\EventExtensions.cs,GetEventHandler,The length of the statement  "	var eventField = classType.GetField (eventName' BindingFlags.GetField | BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,ZkData,EventExtensions,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\EventExtensions.cs,SetEventHandler,The length of the statement  "	var eventField = classType.GetField (eventName' BindingFlags.GetField | BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The length of the statement  "		ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;"; " is 168.
Long Statement,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The length of the statement  "		ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;"; " is 219.
Long Statement,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The length of the statement  "		ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;"; " is 209.
Long Statement,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,GetNextWorkItem,The length of the statement  "		var queue = itemsSending > MaximumConcurrentTransmissions ? workQueue.Where (item => item.Operation != WorkItem.OperationType.UnitSync) : workQueue; " is 148.
Long Statement,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,GetResourceData,The length of the statement  "		AddWork (work.CacheItem' WorkItem.OperationType.ReAskServer' DateTime.Now.AddSeconds (UnitsyncMissingReaskQuery)' false); " is 121.
Long Statement,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,MainThreadFunction,The length of the statement  "					WorkProgressChanged (this' new ProgressEventArgs (workDone' workTotal' string.Format ("{0} {1}"' workItem.Operation' workItem.CacheItem.FileName))); " is 148.
Long Statement,ZkData,MetaDataCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MetaDataCache.cs,GetMap,The length of the statement  "			minimap = webClientForMap.DownloadData (String.Format ("{0}/{1}.minimap.jpg"' serverResourceUrlBase' mapName.EscapePath ())); " is 125.
Long Statement,ZkData,MetaDataCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MetaDataCache.cs,GetMap,The length of the statement  "			metalmap = webClientForMap.DownloadData (String.Format ("{0}/{1}.metalmap.jpg"' serverResourceUrlBase' mapName.EscapePath ())); " is 127.
Long Statement,ZkData,MetaDataCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MetaDataCache.cs,GetMap,The length of the statement  "			heightmap = webClientForMap.DownloadData (String.Format ("{0}/{1}.heightmap.jpg"' serverResourceUrlBase' mapName.EscapePath ())); " is 129.
Long Statement,ZkData,MetaDataCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MetaDataCache.cs,GetMap,The length of the statement  "			metadata = webClientForMap.DownloadData (String.Format ("{0}/{1}.metadata.xml.gz"' serverResourceUrlBase' mapName.EscapePath ())); " is 130.
Long Statement,ZkData,MetaDataCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\MetaDataCache.cs,GetMod,The length of the statement  "			modData = webClientForMod.DownloadData (String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.ResourceBaseUrl' modName.EscapePath ())); " is 135.
Long Statement,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,ReplaceFile,The length of the statement  "				Syscall.chmod (filepath' FilePermissions.S_IRWXU | FilePermissions.S_IRGRP | FilePermissions.S_IXGRP | FilePermissions.S_IROTH | FilePermissions.S_IXOTH); " is 154.
Long Statement,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,ReplaceFile,The length of the statement  "		foreach (var fb in Directory.GetFiles (Path.GetDirectoryName (bakName)' Path.GetFileNameWithoutExtension (filepath) + "*.bak")) { " is 129.
Long Statement,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,GenerateManifest,The length of the statement  "	var files = AppDomain.CurrentDomain.GetAssemblies ().Where (x => !x.IsDynamic && Path.GetDirectoryName (x.Location) == Directory.GetCurrentDirectory ()).Select (x => Path.GetFileName (x.Location)).ToList (); " is 207.
Long Statement,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,GetDedicatedServerPath,The length of the statement  "	return Path.Combine (GetEngineFolderByVersion (engine)' Environment.OSVersion.Platform == PlatformID.Unix ? "spring-dedicated" : "spring-dedicated.exe"); " is 153.
Long Statement,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,GetSpringExecutablePath,The length of the statement  "	return Path.Combine (GetEngineFolderByVersion (engine)' Environment.OSVersion.Platform == PlatformID.Unix ? "spring" : "spring.exe"); " is 133.
Long Statement,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,GetEngineList,The length of the statement  "	return new DirectoryInfo (Utils.MakePath (WritableDirectory' "engine"' Platform.ToString ())).GetDirectories ().Select (x => x.Name).Where (HasEngineVersion).ToList (); " is 168.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,EscapePath,The length of the statement  "		if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c == '-' || c == '(' || c == ')' || c == '.') " is 127.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,SplitEvery,The length of the statement  "	return s.Where ((c' index) => index % length == 0).Select ((c' index) => String.Concat (s.Skip (index * length).Take (length))); " is 128.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,ToBytes,The length of the statement  "	var newSize = ratio > 1 ? new Size (image.Size.Width' (int)(image.Size.Height / ratio)) : new Size ((int)(image.Size.Width * ratio)' image.Size.Height); " is 152.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,ToBytes,The length of the statement  "		graphics.DrawImage (image' new Rectangle (Point.Empty' newSize)' new Rectangle (Point.Empty' image.Size)' GraphicsUnit.Pixel); " is 126.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,Description,The length of the statement  "	var da = (DescriptionAttribute[])(e.GetType ().GetField (e.ToString ()).GetCustomAttributes (typeof(DescriptionAttribute)' false)); " is 131.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,VerifyUdpPort,The length of the statement  "		var ports = IPGlobalProperties.GetIPGlobalProperties ().GetActiveUdpListeners ().OrderBy (x => x.Port).Select (x => x.Port).ToList (); " is 134.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,AsTask,The length of the statement  "	tcs.Task.ContinueWith ((_' state) => ((RegisteredWaitHandle)state).Unregister (null)' registration' TaskScheduler.Default); " is 123.
Long Statement,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,GetMyUserID,The length of the statement  "		var nics = NetworkInterface.GetAllNetworkInterfaces ().Where (x => !String.IsNullOrWhiteSpace (x.GetPhysicalAddress ().ToString ()) && (x.NetworkInterfaceType != NetworkInterfaceType.Loopback) && (x.NetworkInterfaceType != NetworkInterfaceType.Tunnel)); " is 253.
Long Statement,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc32Old,The length of the statement  "	return Enumerable.Aggregate<byte' uint> ((IEnumerable<byte>)data' uint.MaxValue' (Func<uint' byte' uint>)((current' b) => Crc.Crc32Table [(long)(current >> 24 ^ (uint)b) & (long)byte.MaxValue] ^ current << 8)) ^ uint.MaxValue; " is 226.
Long Statement,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The length of the statement  "			Vector currentPosition = new Vector (CalcDistance (Point.Empty' current.Node.Location)' GetBearingAngle (Point.Empty' current.Node.Location)); " is 142.
Long Statement,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Draw,The length of the statement  "		Rectangle nodeBounds = new Rectangle (center.X + destination.X - (nodeSize.Width / 2)' center.Y + destination.Y - (nodeSize.Height / 2)' nodeSize.Width' nodeSize.Height); " is 170.
Long Statement,PlasmaShared.UnitSyncLib,ArchiveCache,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\ArchiveCache.cs,GetCacheFile,The length of the statement  "	return di.GetFiles ("ArchiveCache*.lua"' SearchOption.AllDirectories).OrderByDescending (x => x.LastWriteTime).FirstOrDefault (); " is 129.
Long Statement,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetMod,The length of the statement  "	Trace.TraceInformation ("Mod Information: Description {0}' Game {1}' Mutator {2}' ShortGame {3}' PrimaryModVersion {4}"' mod.Description' mod.Game' mod.Mutator' mod.ShortGame' mod.PrimaryModVersion); " is 199.
Long Statement,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,FixAspectRatio,The length of the statement  "	var newSize = map.Size.Width > map.Size.Height ? new Size (squareMinimap.Width' (int)(squareMinimap.Height / ((float)map.Size.Width / map.Size.Height))) : new Size ((int)(squareMinimap.Width * ((float)map.Size.Width / map.Size.Height))' squareMinimap.Height); " is 259.
Long Statement,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetInfoMap,The length of the statement  "		var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat); " is 120.
Long Statement,ZkData.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\Option.cs,GetPair,The length of the statement  "		//http://stackoverflow.com/questions/5060446/difference-between-currentculture-invariantculture-currentuiculture-and-instal " is 123.
Complex Conditional,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,EscapePath,The conditional expression  "(c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c == '-' || c == '(' || c == ')' || c == '.'"  is complex.
Complex Conditional,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The conditional expression  "((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0))"  is complex.
Complex Conditional,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The conditional expression  "((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0))"  is complex.
Empty Catch Block,ZkData,PlasmaResourceChecker,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\PlasmaResourceChecker.cs,InitialFolderScan,The method has an empty catch block.
Empty Catch Block,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,ReplaceFile,The method has an empty catch block.
Empty Catch Block,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,ReplaceFile,The method has an empty catch block.
Empty Catch Block,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,SpringPaths,The method has an empty catch block.
Empty Catch Block,ZkData,SpringPaths,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SpringPaths.cs,IsDirectoryWritable,The method has an empty catch block.
Empty Catch Block,ZkData,TcpTransport,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\TcpTransport.cs,InternalClose,The method has an empty catch block.
Empty Catch Block,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,CheckPath,The method has an empty catch block.
Empty Catch Block,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,SafeDelete,The method has an empty catch block.
Empty Catch Block,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,VerifyUdpPort,The method has an empty catch block.
Empty Catch Block,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,Dispose,The method has an empty catch block.
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: LobbyServerPort = 8200;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: OldSpringLobbyPort = 7000;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: UdpHostingPortStart = 8452;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: LobbyServerPort = 8202;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: OldSpringLobbyPort = 7000;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: UdpHostingPortStart = 7452;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: LobbyServerPort = 8200;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: OldSpringLobbyPort = 8200;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following statement contains a magic number: UdpHostingPortStart = 8452;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,CreateBasicHttpBinding,The following statement contains a magic number: binding.MaxBufferSize = 6553600;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,CreateBasicHttpBinding,The following statement contains a magic number: binding.MaxBufferPoolSize = 6553600;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,CreateBasicHttpBinding,The following statement contains a magic number: binding.MaxReceivedMessageSize = 6553600;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,CreateBasicHttpBinding,The following statement contains a magic number: binding.ReaderQuotas.MaxArrayLength = 1638400;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,CreateBasicHttpBinding,The following statement contains a magic number: binding.ReaderQuotas.MaxStringContentLength = 819200;  
Magic Number,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,CreateBasicHttpBinding,The following statement contains a magic number: binding.ReaderQuotas.MaxBytesPerRead = 409600;  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: if (x >= '0' && x <= '9')  	return x - '0';  else {  	if (x >= 'a' && x <= 'f')  		return x - 'a' + 10;  	else if (x >= 'A' && x <= 'F')  		return x - 'A' + 10;  	else  		throw new ArgumentException ("character is not convertible to hex byte");  }  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: if (x >= '0' && x <= '9')  	return x - '0';  else {  	if (x >= 'a' && x <= 'f')  		return x - 'a' + 10;  	else if (x >= 'A' && x <= 'F')  		return x - 'A' + 10;  	else  		throw new ArgumentException ("character is not convertible to hex byte");  }  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: if (x >= 'a' && x <= 'f')  	return x - 'a' + 10;  else if (x >= 'A' && x <= 'F')  	return x - 'A' + 10;  else  	throw new ArgumentException ("character is not convertible to hex byte");  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: if (x >= 'a' && x <= 'f')  	return x - 'a' + 10;  else if (x >= 'A' && x <= 'F')  	return x - 'A' + 10;  else  	throw new ArgumentException ("character is not convertible to hex byte");  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: return x - 'a' + 10;  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: if (x >= 'A' && x <= 'F')  	return x - 'A' + 10;  else  	throw new ArgumentException ("character is not convertible to hex byte");  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,CharToHexByte,The following statement contains a magic number: return x - 'A' + 10;  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,StringToBytes,The following statement contains a magic number: Debug.Assert (s.Length % 2 == 0);  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,StringToBytes,The following statement contains a magic number: while (i < destLen)  	res [i++] = (byte)((CharToHexByte (s [si++]) << 4) + CharToHexByte (s [si++]));  
Magic Number,ZkData,Hash,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Hash.cs,StringToBytes,The following statement contains a magic number: res [i++] = (byte)((CharToHexByte (s [si++]) << 4) + CharToHexByte (s [si++]));  
Magic Number,ZkData,Pool,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Pool.cs,GetStorageFileName,The following statement contains a magic number: return string.Format ("{0}/{1}/{2}.gz"' path' strHash.Substring (0' 2)' strHash.Substring (2));  
Magic Number,ZkData,Pool,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Pool.cs,GetStorageFileName,The following statement contains a magic number: return string.Format ("{0}/{1}/{2}.gz"' path' strHash.Substring (0' 2)' strHash.Substring (2));  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,SdpArchive,The following statement contains a magic number: while (r.Read (temp' 0' 1) > 0) {  	int nameLen = temp [0];  	var pi = new PoolFileInfo {  		Name = new string (r.ReadChars (nameLen))'  		Hash = new Hash (r.ReadBytes (Hash.Size))  	};  	temp = r.ReadBytes (4);  	pi.Crc = ParseUint32 (temp);  	temp = r.ReadBytes (4);  	pi.UncompressedSize = ParseUint32 (temp);  	files.Add (pi);  }  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,SdpArchive,The following statement contains a magic number: while (r.Read (temp' 0' 1) > 0) {  	int nameLen = temp [0];  	var pi = new PoolFileInfo {  		Name = new string (r.ReadChars (nameLen))'  		Hash = new Hash (r.ReadBytes (Hash.Size))  	};  	temp = r.ReadBytes (4);  	pi.Crc = ParseUint32 (temp);  	temp = r.ReadBytes (4);  	pi.UncompressedSize = ParseUint32 (temp);  	files.Add (pi);  }  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,SdpArchive,The following statement contains a magic number: temp = r.ReadBytes (4);  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,SdpArchive,The following statement contains a magic number: temp = r.ReadBytes (4);  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,ParseUint32,The following statement contains a magic number: i = (uint)c [0] << 24 | i;  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,ParseUint32,The following statement contains a magic number: i = (uint)c [1] << 16 | i;  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,ParseUint32,The following statement contains a magic number: i = (uint)c [2] << 8 | i;  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,ParseUint32,The following statement contains a magic number: i = (uint)c [2] << 8 | i;  
Magic Number,ZkData,SdpArchive,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SdpArchive.cs,ParseUint32,The following statement contains a magic number: i = (uint)c [3] << 0 | i;  
Magic Number,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,StartChecking,The following statement contains a magic number: timer = new Timer (o => {  	timerTick++;  	// graduyally increase update check interval if update fails  	if (timerTick >= timerTickInterval) {  		timerTick = 0;  		if (!CheckForUpdate ())  			timerTickInterval *= 2;  	}  }' null' 100' PeriodSeconds * 1000);  
Magic Number,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,StartChecking,The following statement contains a magic number: timer = new Timer (o => {  	timerTick++;  	// graduyally increase update check interval if update fails  	if (timerTick >= timerTickInterval) {  		timerTick = 0;  		if (!CheckForUpdate ())  			timerTickInterval *= 2;  	}  }' null' 100' PeriodSeconds * 1000);  
Magic Number,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,StartChecking,The following statement contains a magic number: timer = new Timer (o => {  	timerTick++;  	// graduyally increase update check interval if update fails  	if (timerTick >= timerTickInterval) {  		timerTick = 0;  		if (!CheckForUpdate ())  			timerTickInterval *= 2;  	}  }' null' 100' PeriodSeconds * 1000);  
Magic Number,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,StartChecking,The following statement contains a magic number: if (timerTick >= timerTickInterval) {  	timerTick = 0;  	if (!CheckForUpdate ())  		timerTickInterval *= 2;  }  
Magic Number,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,StartChecking,The following statement contains a magic number: if (!CheckForUpdate ())  	timerTickInterval *= 2;  
Magic Number,ZkData,SelfUpdater,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\SelfUpdater.cs,StartChecking,The following statement contains a magic number: timerTickInterval *= 2;  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,SaveJpeg,The following statement contains a magic number: if (quality < 0 || quality > 100)  	throw new ArgumentOutOfRangeException ("quality must be between 0 and 100.");  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,Decompress,The following statement contains a magic number: using (var compressedStream = new MemoryStream (data))  	using (var zipStream = new GZipStream (compressedStream' CompressionMode.Decompress))  		using (var resultStream = new MemoryStream ()) {  			var buffer = new byte[4096];  			int read;  			while ((read = zipStream.Read (buffer' 0' buffer.Length)) > 0)  				resultStream.Write (buffer' 0' read);  			return resultStream.ToArray ();  		}  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,Decompress,The following statement contains a magic number: using (var zipStream = new GZipStream (compressedStream' CompressionMode.Decompress))  	using (var resultStream = new MemoryStream ()) {  		var buffer = new byte[4096];  		int read;  		while ((read = zipStream.Read (buffer' 0' buffer.Length)) > 0)  			resultStream.Write (buffer' 0' read);  		return resultStream.ToArray ();  	}  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,Decompress,The following statement contains a magic number: using (var resultStream = new MemoryStream ()) {  	var buffer = new byte[4096];  	int read;  	while ((read = zipStream.Read (buffer' 0' buffer.Length)) > 0)  		resultStream.Write (buffer' 0' read);  	return resultStream.ToArray ();  }  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024)  	return bytes.ToString ();  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024)  	return ((double)bytes / 1024).ToString ("F2") + "k";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024)  	return ((double)bytes / 1024).ToString ("F2") + "k";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024)  	return ((double)bytes / 1024).ToString ("F2") + "k";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: return ((double)bytes / 1024).ToString ("F2") + "k";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024 * 1024)  	return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024 * 1024)  	return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024 * 1024)  	return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024 * 1024)  	return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: if (bytes < 1024 * 1024 * 1024)  	return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: return ((double)bytes / 1024 / 1024).ToString ("F2") + "M";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: return ((double)bytes / 1024 / 1024 / 1024).ToString ("F2") + "G";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: return ((double)bytes / 1024 / 1024 / 1024).ToString ("F2") + "G";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintByteLength,The following statement contains a magic number: return ((double)bytes / 1024 / 1024 / 1024).ToString ("F2") + "G";  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: if (secs < 60)  	return String.Format ("{0}s"' secs);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: if (secs < 3600)  	return String.Format ("{0}m {1}s"' secs / 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: if (secs < 3600)  	return String.Format ("{0}m {1}s"' secs / 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: if (secs < 3600)  	return String.Format ("{0}m {1}s"' secs / 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: return String.Format ("{0}m {1}s"' secs / 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: return String.Format ("{0}m {1}s"' secs / 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: return String.Format ("{0}h {1}m {2}s"' secs / 3600' secs / 60 % 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: return String.Format ("{0}h {1}m {2}s"' secs / 3600' secs / 60 % 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: return String.Format ("{0}h {1}m {2}s"' secs / 3600' secs / 60 % 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,PrintTimeRemaining,The following statement contains a magic number: return String.Format ("{0}h {1}m {2}s"' secs / 3600' secs / 60 % 60' secs % 60);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,GetWinChancePercent,The following statement contains a magic number: return (int)Math.Round ((1.0 / (1.0 + Math.Pow (10' (eloDiff) / 400.0))) * 100.0);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,GetWinChancePercent,The following statement contains a magic number: return (int)Math.Round ((1.0 / (1.0 + Math.Pow (10' (eloDiff) / 400.0))) * 100.0);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,GetWinChancePercent,The following statement contains a magic number: return (int)Math.Round ((1.0 / (1.0 + Math.Pow (10' (eloDiff) / 400.0))) * 100.0);  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,ToHex,The following statement contains a magic number: for (var i = 0; i < array.Length; i++) {  	var hex = array [i].ToString ("X");  	if (hex.Length != 2)  		sb.Append ("0");  	sb.Append (hex);  }  
Magic Number,ZkData,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Utils.cs,ToHex,The following statement contains a magic number: if (hex.Length != 2)  	sb.Append ("0");  
Magic Number,ZkData,Whois,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Whois.cs,QueryByIp,The following statement contains a magic number: foreach (var line in data.Split ('\n').Where (x => !string.IsNullOrEmpty (x) && x [0] != '%')) {  	var pieces = line.Split (new char[] {  		':'  	}' 2);  	var key = pieces.First ().Trim ();  	var value = pieces.Last ().Trim ();  	if (!result.ContainsKey (key))  		result [key] = value;  }  
Magic Number,ZkData,Whois,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Whois.cs,QueryWhois,The following statement contains a magic number: tcp.Connect (whoisServer' 43);  
Magic Number,PlasmaShared,CommandJsonSerializer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\CommandJsonSerializer.cs,DeserializeLine,The following statement contains a magic number: if (!string.IsNullOrEmpty (line)) {  	var parts = line.Split (new[] {  		" "  	}' 2' StringSplitOptions.RemoveEmptyEntries);  	if (parts.Length != 2)  		throw new Exception (string.Format ("Invalid json data {0} : {1}"' this' line));  	Type type;  	if (!knownTypes.TryGetValue (parts [0]' out type))  		throw new Exception (string.Format ("Invalid json type {0} : {1}"' this' parts [0]));  	return JsonConvert.DeserializeObject (parts [1]' type' settings) ?? type.GetConstructor (new Type[] {    	}).Invoke (null);  }  
Magic Number,PlasmaShared,CommandJsonSerializer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\CommandJsonSerializer.cs,DeserializeLine,The following statement contains a magic number: if (!string.IsNullOrEmpty (line)) {  	var parts = line.Split (new[] {  		" "  	}' 2' StringSplitOptions.RemoveEmptyEntries);  	if (parts.Length != 2)  		throw new Exception (string.Format ("Invalid json data {0} : {1}"' this' line));  	Type type;  	if (!knownTypes.TryGetValue (parts [0]' out type))  		throw new Exception (string.Format ("Invalid json type {0} : {1}"' this' parts [0]));  	return JsonConvert.DeserializeObject (parts [1]' type' settings) ?? type.GetConstructor (new Type[] {    	}).Invoke (null);  }  
Magic Number,PlasmaShared,CommandJsonSerializer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\CommandJsonSerializer.cs,DeserializeLine,The following statement contains a magic number: if (parts.Length != 2)  	throw new Exception (string.Format ("Invalid json data {0} : {1}"' this' line));  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc,The following statement contains a magic number: for (int i = 0; i < table.Length; i++) {  	fwd = (uint)i;  	rev = (uint)(i) << (3 * 8);  	for (int j = 8; j > 0; j--) {  		if ((fwd & 1) == 1) {  			fwd = (uint)((fwd >> 1) ^ poly);  		} else {  			fwd >>= 1;  		}  		if ((rev & 0x80000000) != 0) {  			rev = ((rev ^ poly) << 1) | 1;  		} else {  			rev <<= 1;  		}  	}  	table [i] = fwd;  	revtable [i] = rev;  }  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc,The following statement contains a magic number: for (int i = 0; i < table.Length; i++) {  	fwd = (uint)i;  	rev = (uint)(i) << (3 * 8);  	for (int j = 8; j > 0; j--) {  		if ((fwd & 1) == 1) {  			fwd = (uint)((fwd >> 1) ^ poly);  		} else {  			fwd >>= 1;  		}  		if ((rev & 0x80000000) != 0) {  			rev = ((rev ^ poly) << 1) | 1;  		} else {  			rev <<= 1;  		}  	}  	table [i] = fwd;  	revtable [i] = rev;  }  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc,The following statement contains a magic number: for (int i = 0; i < table.Length; i++) {  	fwd = (uint)i;  	rev = (uint)(i) << (3 * 8);  	for (int j = 8; j > 0; j--) {  		if ((fwd & 1) == 1) {  			fwd = (uint)((fwd >> 1) ^ poly);  		} else {  			fwd >>= 1;  		}  		if ((rev & 0x80000000) != 0) {  			rev = ((rev ^ poly) << 1) | 1;  		} else {  			rev <<= 1;  		}  	}  	table [i] = fwd;  	revtable [i] = rev;  }  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc,The following statement contains a magic number: rev = (uint)(i) << (3 * 8);  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc,The following statement contains a magic number: rev = (uint)(i) << (3 * 8);  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc,The following statement contains a magic number: for (int j = 8; j > 0; j--) {  	if ((fwd & 1) == 1) {  		fwd = (uint)((fwd >> 1) ^ poly);  	} else {  		fwd >>= 1;  	}  	if ((rev & 0x80000000) != 0) {  		rev = ((rev ^ poly) << 1) | 1;  	} else {  		rev <<= 1;  	}  }  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc32Old,The following statement contains a magic number: return Enumerable.Aggregate<byte' uint> ((IEnumerable<byte>)data' uint.MaxValue' (Func<uint' byte' uint>)((current' b) => Crc.Crc32Table [(long)(current >> 24 ^ (uint)b) & (long)byte.MaxValue] ^ current << 8)) ^ uint.MaxValue;  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc32Old,The following statement contains a magic number: return Enumerable.Aggregate<byte' uint> ((IEnumerable<byte>)data' uint.MaxValue' (Func<uint' byte' uint>)((current' b) => Crc.Crc32Table [(long)(current >> 24 ^ (uint)b) & (long)byte.MaxValue] ^ current << 8)) ^ uint.MaxValue;  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc32,The following statement contains a magic number: for (int i = 0; i < data.Length; ++i) {  	byte index = (byte)(((crc) & 0xff) ^ data [i]);  	crc = (uint)((crc >> 8) ^ Crc32Table [index]);  }  
Magic Number,PlasmaShared,Crc,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Crc.cs,Crc32,The following statement contains a magic number: crc = (uint)((crc >> 8) ^ Crc32Table [index]);  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: for (int i = 0; i < mNodes.Count; i++) {  	layout [i] = new NodeLayoutInfo (mNodes [i]' new Vector ()' Point.Empty);  	layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: for (int i = 0; i < mNodes.Count; i++) {  	layout [i] = new NodeLayoutInfo (mNodes [i]' new Vector ()' Point.Empty);  	layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: for (int i = 0; i < mNodes.Count; i++) {  	layout [i] = new NodeLayoutInfo (mNodes [i]' new Vector ()' Point.Empty);  	layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: for (int i = 0; i < mNodes.Count; i++) {  	layout [i] = new NodeLayoutInfo (mNodes [i]' new Vector ()' Point.Empty);  	layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: layout [i].Node.Location = new Point (rnd.Next (-50' 50)' rnd.Next (-50' 50));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: while (true) {  	double totalDisplacement = 0;  	for (int i = 0; i < layout.Length; i++) {  		NodeLayoutInfo current = layout [i];  		// express the node's current position as a vector' relative to the origin  		Vector currentPosition = new Vector (CalcDistance (Point.Empty' current.Node.Location)' GetBearingAngle (Point.Empty' current.Node.Location));  		Vector netForce = new Vector (0' 0);  		// determine repulsion between nodes  		foreach (Node other in mNodes) {  			if (other != current.Node)  				netForce += CalcRepulsionForce (current.Node' other);  		}  		// determine attraction caused by connections  		foreach (Node child in current.Node.Connections) {  			netForce += CalcAttractionForce (current.Node' child' springLength);  		}  		foreach (Node parent in mNodes) {  			if (parent.Connections.Contains (current.Node))  				netForce += CalcAttractionForce (current.Node' parent' springLength);  		}  		// apply net force to node velocity  		current.Velocity = (current.Velocity + netForce) * damping;  		// apply velocity to node position  		current.NextPosition = (currentPosition + current.Velocity).ToPoint ();  	}  	// move nodes to resultant positions (and calculate total displacement)  	for (int i = 0; i < layout.Length; i++) {  		NodeLayoutInfo current = layout [i];  		totalDisplacement += CalcDistance (current.Node.Location' current.NextPosition);  		current.Node.Location = current.NextPosition;  	}  	iterations++;  	if (totalDisplacement < 10)  		stopCount++;  	if (stopCount > 15)  		break;  	if (iterations > maxIterations)  		break;  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: while (true) {  	double totalDisplacement = 0;  	for (int i = 0; i < layout.Length; i++) {  		NodeLayoutInfo current = layout [i];  		// express the node's current position as a vector' relative to the origin  		Vector currentPosition = new Vector (CalcDistance (Point.Empty' current.Node.Location)' GetBearingAngle (Point.Empty' current.Node.Location));  		Vector netForce = new Vector (0' 0);  		// determine repulsion between nodes  		foreach (Node other in mNodes) {  			if (other != current.Node)  				netForce += CalcRepulsionForce (current.Node' other);  		}  		// determine attraction caused by connections  		foreach (Node child in current.Node.Connections) {  			netForce += CalcAttractionForce (current.Node' child' springLength);  		}  		foreach (Node parent in mNodes) {  			if (parent.Connections.Contains (current.Node))  				netForce += CalcAttractionForce (current.Node' parent' springLength);  		}  		// apply net force to node velocity  		current.Velocity = (current.Velocity + netForce) * damping;  		// apply velocity to node position  		current.NextPosition = (currentPosition + current.Velocity).ToPoint ();  	}  	// move nodes to resultant positions (and calculate total displacement)  	for (int i = 0; i < layout.Length; i++) {  		NodeLayoutInfo current = layout [i];  		totalDisplacement += CalcDistance (current.Node.Location' current.NextPosition);  		current.Node.Location = current.NextPosition;  	}  	iterations++;  	if (totalDisplacement < 10)  		stopCount++;  	if (stopCount > 15)  		break;  	if (iterations > maxIterations)  		break;  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: if (totalDisplacement < 10)  	stopCount++;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Arrange,The following statement contains a magic number: if (stopCount > 15)  	break;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,CalcDistance,The following statement contains a magic number: return (int)Math.Sqrt (Math.Pow (xDist' 2) + Math.Pow (yDist' 2));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,CalcDistance,The following statement contains a magic number: return (int)Math.Sqrt (Math.Pow (xDist' 2) + Math.Pow (yDist' 2));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Draw,The following statement contains a magic number: foreach (Node node in mNodes) {  	Point destination = ScalePoint (node.Location' scale);  	Size nodeSize = node.Size;  	Rectangle nodeBounds = new Rectangle (center.X + destination.X - (nodeSize.Width / 2)' center.Y + destination.Y - (nodeSize.Height / 2)' nodeSize.Width' nodeSize.Height);  	node.DrawNode (graphics' nodeBounds);  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,Draw,The following statement contains a magic number: foreach (Node node in mNodes) {  	Point destination = ScalePoint (node.Location' scale);  	Size nodeSize = node.Size;  	Rectangle nodeBounds = new Rectangle (center.X + destination.X - (nodeSize.Width / 2)' center.Y + destination.Y - (nodeSize.Height / 2)' nodeSize.Width' nodeSize.Height);  	node.DrawNode (graphics' nodeBounds);  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (diffX == 0)  	diffX = 0.001;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: diffX = 0.001;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (diffY == 0)  	diffY = 0.001;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: diffY = 0.001;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (Math.Abs (diffX) > Math.Abs (diffY)) {  	angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  	if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  		angle += 180;  } else {  	angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  	if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  		angle += 180;  	angle = (180 - (angle + 90));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (Math.Abs (diffX) > Math.Abs (diffY)) {  	angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  	if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  		angle += 180;  } else {  	angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  	if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  		angle += 180;  	angle = (180 - (angle + 90));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (Math.Abs (diffX) > Math.Abs (diffY)) {  	angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  	if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  		angle += 180;  } else {  	angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  	if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  		angle += 180;  	angle = (180 - (angle + 90));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (Math.Abs (diffX) > Math.Abs (diffY)) {  	angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  	if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  		angle += 180;  } else {  	angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  	if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  		angle += 180;  	angle = (180 - (angle + 90));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (Math.Abs (diffX) > Math.Abs (diffY)) {  	angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  	if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  		angle += 180;  } else {  	angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  	if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  		angle += 180;  	angle = (180 - (angle + 90));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (Math.Abs (diffX) > Math.Abs (diffY)) {  	angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  	if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  		angle += 180;  } else {  	angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  	if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  		angle += 180;  	angle = (180 - (angle + 90));  }  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: angle = Math.Tanh (diffY / diffX) * (180.0 / Math.PI);  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (((diffX < 0) && (diffY > 0)) || ((diffX < 0) && (diffY < 0)))  	angle += 180;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: angle += 180;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: angle = Math.Tanh (diffX / diffY) * (180.0 / Math.PI);  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: if (((diffY < 0) && (diffX > 0)) || ((diffY < 0) && (diffX < 0)))  	angle += 180;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: angle += 180;  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: angle = (180 - (angle + 90));  
Magic Number,Diagrams,Diagram,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Diagram.cs,GetBearingAngle,The following statement contains a magic number: angle = (180 - (angle + 90));  
Magic Number,Diagrams,Vector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Vector.cs,Vector,The following statement contains a magic number: if (mMagnitude < 0) {  	// resolve negative magnitude by reversing direction  	mMagnitude = -mMagnitude;  	mDirection = (180.0 + mDirection) % 360;  }  
Magic Number,Diagrams,Vector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Vector.cs,Vector,The following statement contains a magic number: if (mMagnitude < 0) {  	// resolve negative magnitude by reversing direction  	mMagnitude = -mMagnitude;  	mDirection = (180.0 + mDirection) % 360;  }  
Magic Number,Diagrams,Vector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Vector.cs,Vector,The following statement contains a magic number: mDirection = (180.0 + mDirection) % 360;  
Magic Number,Diagrams,Vector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Vector.cs,Vector,The following statement contains a magic number: mDirection = (180.0 + mDirection) % 360;  
Magic Number,Diagrams,Vector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Vector.cs,Vector,The following statement contains a magic number: if (mDirection < 0)  	mDirection = (360.0 + mDirection);  
Magic Number,Diagrams,Vector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\Diagrams\Vector.cs,Vector,The following statement contains a magic number: mDirection = (360.0 + mDirection);  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,UnitSync,The following statement contains a magic number: lock (unitsyncInitLocker) {  	paths = springPaths;  	originalDirectory = Directory.GetCurrentDirectory ();  	var unitSyncPath = paths.GetEngineFolderByVersion (engine);  	Trace.TraceInformation ("UnitSync: Directory: {0}"' unitSyncPath);  	Trace.TraceInformation ("UnitSync: ZKL: {0}"' originalDirectory);  	originalPathVariable = Environment.GetEnvironmentVariable ("PATH");  	if (originalPathVariable.Contains (unitSyncPath) != true)  		;  	{  		unitSyncPath;  	//Directory.SetCurrentDirectory(paths.UnitSyncDirectory);  	}  	;  	Environment.CurrentDirectory = unitSyncPath;  	var settingsPath = Path.Combine (unitSyncPath' "springsettings.cfg");  	File.WriteAllText (settingsPath);  	if (!NativeMethods.Init (false' 666))  		throw new UnitSyncException ("Unitsync initialization failed. " + NativeMethods.GetNextError ());  	Version = NativeMethods.GetSpringVersion ();  	UnitsyncWritableFolder = NativeMethods.GetWritableDataDirectory ();  	var read = NativeMethods.GetDataDirectories ();  	Trace.TraceInformation ("UnitSync version: {0}"' Version);  	Trace.TraceInformation ("UnitSync READ: {0}"' string.Join ("'"' read));  	Trace.TraceInformation ("UnitSync WRITE: {0}"' UnitsyncWritableFolder);  	TraceErrors ();  	Trace.TraceInformation ("UnitSync Initialized");  }  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,UnitSync,The following statement contains a magic number: if (!NativeMethods.Init (false' 666))  	throw new UnitSyncException ("Unitsync initialization failed. " + NativeMethods.GetNextError ());  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetResourceFromFileName,The following statement contains a magic number: if (ae.ModType == 3)  	return GetMap (ae);  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,ReInit,The following statement contains a magic number: lock (unitsyncInitLocker) {  	NativeMethods.UnInit ();  	NativeMethods.Init (false' 666);  	NativeMethods.GetMapCount ();  	NativeMethods.GetPrimaryModCount ();  }  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,ReInit,The following statement contains a magic number: NativeMethods.Init (false' 666);  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: try {  	var infoMapPointer = Marshal.UnsafeAddrOfPinnedArrayElement (infoMapData' 0);  	var bitmap = new Bitmap (width' height' PixelFormat.Format24bppRgb);  	if (!NativeMethods.GetInfoMap (mapName' name' infoMapPointer' bytesPerPixel))  		throw new UnitSyncException ("GetInfoMap " + name + " failed");  	var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat);  	const int PixelSize = 3;  	var p = (byte*)bitmapData.Scan0;  	for (var i = 0; i < infoMapData.Length; i++) {  		var v = infoMapData [i];  		var d = i / width * bitmapData.Stride + i % width * PixelSize;  		p [d] = p [d + 1] = p [d + 2] = v;  	}  	bitmap.UnlockBits (bitmapData);  	return bitmap;  } finally {  	infoMapHandle.Free ();  }  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: try {  	var infoMapPointer = Marshal.UnsafeAddrOfPinnedArrayElement (infoMapData' 0);  	var bitmap = new Bitmap (width' height' PixelFormat.Format24bppRgb);  	if (!NativeMethods.GetInfoMap (mapName' name' infoMapPointer' bytesPerPixel))  		throw new UnitSyncException ("GetInfoMap " + name + " failed");  	var bitmapData = bitmap.LockBits (new Rectangle (Point.Empty' bitmap.Size)' ImageLockMode.ReadOnly' bitmap.PixelFormat);  	const int PixelSize = 3;  	var p = (byte*)bitmapData.Scan0;  	for (var i = 0; i < infoMapData.Length; i++) {  		var v = infoMapData [i];  		var d = i / width * bitmapData.Stride + i % width * PixelSize;  		p [d] = p [d + 1] = p [d + 2] = v;  	}  	bitmap.UnlockBits (bitmapData);  	return bitmap;  } finally {  	infoMapHandle.Free ();  }  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: for (var i = 0; i < infoMapData.Length; i++) {  	var v = infoMapData [i];  	var d = i / width * bitmapData.Stride + i % width * PixelSize;  	p [d] = p [d + 1] = p [d + 2] = v;  }  
Magic Number,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,GetInfoMap,The following statement contains a magic number: p [d] = p [d + 1] = p [d + 2] = v;  
Missing Default,ZkData,GlobalConst,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\GlobalConst.cs,SetMode,The following switch statement is missing a default case: switch (newMode) {  case ModeType.Local:  	BaseSiteUrl = "http://localhost:9739";  	ZkDataContextConnectionString = "Data Source=.;Initial Catalog=zero-k_local;Integrated Security=True;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "localhost";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = true;  	break;  case ModeType.Test:  	BaseSiteUrl = "http://test.zero-k.info";  	ZkDataContextConnectionString = "Data Source=test.zero-k.info;Initial Catalog=zero-k_test;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "test.zero-k.info";  	LobbyServerPort = 8202;  	OldSpringLobbyPort = 7000;  	UdpHostingPortStart = 7452;  	AutoMigrateDatabase = false;  	break;  case ModeType.Live:  	BaseSiteUrl = "http://zero-k.info";  	ZkDataContextConnectionString = "Data Source=zero-k.info;Initial Catalog=zero-k;Persist Security Info=True;User ID=zero-k;Password=zkdevpass1;MultipleActiveResultSets=true;Min Pool Size=5;Max Pool Size=2000;";  	LobbyServerHost = "zero-k.info";  	LobbyServerPort = 8200;  	OldSpringLobbyPort = 8200;  	UdpHostingPortStart = 8452;  	AutoMigrateDatabase = false;  	break;  }  
Missing Default,ZkData.UnitSyncLib,UnitSync,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\NativeMethods.cs,ProcessMapInfoItem,The following switch statement is missing a default case: switch (key) {  case "description":  	info.description = NativeMethods.GetInfoValueString (index);  	break;  case "author":  	info.author = NativeMethods.GetInfoValueString (index);  	break;  case "tidalStrength":  	info.tidalStrength = NativeMethods.GetInfoValueInteger (index);  	break;  case "gravity":  	info.gravity = NativeMethods.GetInfoValueInteger (index);  	break;  case "maxMetal":  	info.maxMetal = NativeMethods.GetInfoValueFloat (index);  	break;  case "extractorRadius":  	info.extractorRadius = NativeMethods.GetInfoValueInteger (index);  	break;  case "minWind":  	info.minWind = NativeMethods.GetInfoValueInteger (index);  	break;  case "maxWind":  	info.maxWind = NativeMethods.GetInfoValueInteger (index);  	break;  case "width":  	info.width = NativeMethods.GetInfoValueInteger (index);  	break;  case "height":  	info.height = NativeMethods.GetInfoValueInteger (index);  	break;  }  
Missing Default,ZkData.UnitSyncLib,Option,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Shared\PlasmaShared\UnitSyncLib\Option.cs,GetPair,The following switch statement is missing a default case: switch (Type) {  case OptionType.Bool:  	if (Value != "0" && Value != "1")  		return false;  	result = ConstructLine (Value);  	return true;  case OptionType.Number:  	double d;  	//Note: Be aware of culture & places where server is located. It effect how number are read.  	//useful reference:  	//http://stackoverflow.com/questions/4974887/problem-with-double-tryparse-when-i-do-not-know-the-culture  	//http://stackoverflow.com/questions/5060446/difference-between-currentculture-invariantculture-currentuiculture-and-instal  	//var culture = System.Globalization.CultureInfo.GetCultureInfo("cs"); //czech culture  	var culture = System.Globalization.CultureInfo.InvariantCulture;  	var style = System.Globalization.NumberStyles.Any;  	if (!double.TryParse (Value' style' culture' out d))  		return false;  	if (d < min || d > max)  		return false;  	result = ConstructLine (Value);  	return true;  case OptionType.String:  	if (strMaxLen != 0 && Value.Length > strMaxLen)  		return false;  	result = ConstructLine (Value);  	return true;  case OptionType.List:  	foreach (var lop in ListOptions) {  		if (lop.Key == Value) {  			result = ConstructLine (lop.Key);  			return true;  		}  	}  	return false;  }  
