Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,ApplyResourceTurn,Cyclomatic complexity of the method is 9
Complex Method,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,Cyclomatic complexity of the method is 8
Long Parameter List,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,BuildShip,The method has 5 parameters. Parameters: count' playerName' password' celestialObjectID' shipType
Long Parameter List,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,OrderFleet,The method has 5 parameters. Parameters: playerName' password' fleetID' toBodyID' futureOffset
Long Parameter List,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,CreatePopulationTransport,The method has 5 parameters. Parameters: playerName' password' fromBodyID' toBodyID' count
Long Parameter List,ServiceData,IPlanetWarsService,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\IPlanetWarsService.cs,BuildShip,The method has 5 parameters. Parameters: playerName' password' celestialObjectID' shipType' count
Long Parameter List,ServiceData,IPlanetWarsService,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\IPlanetWarsService.cs,CreatePopulationTransport,The method has 5 parameters. Parameters: playerName' password' fromBodyID' toBodyID' count
Long Parameter List,ServiceData,IPlanetWarsService,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\IPlanetWarsService.cs,OrderFleet,The method has 5 parameters. Parameters: playerName' password' fleetID' toBodyID' futureOffset
Long Identifier,ServiceData,Transit,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db\Transit.cs,,The length of the parameter _CelestialObjectByFromObjectID is 30.
Long Identifier,ServiceData,CelestialObjectLink,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,,The length of the parameter _CelestialObjectByFirstObjectID is 31.
Long Identifier,ServiceData,CelestialObjectLink,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,,The length of the parameter _CelestialObjectBySecondObjectID is 32.
Long Identifier,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,,The length of the parameter _CelestialObjectLinksByFirstObjectID is 36.
Long Identifier,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,,The length of the parameter _CelestialObjectLinksBySecondObjectID is 37.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,GetMotherhipModuleBuildOption,The length of the statement  "			foreach (var u in db.StructureTypes.Where(x => x.NeedsTechID == null || x.Tech.StarSystemTeches.Any(y => y.StarSystemID == player.SystemID))) " is 141.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,BuildStructure,The length of the statement  "						x => x.StructureTypeID == structureTypeID && (x.NeedsTechID == null || x.Tech.StarSystemTeches.Any(y => y.StarSystemID == p.SystemID))); " is 136.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,BuildMothershipModule,The length of the statement  "						x => x.StructureTypeID == structureType && (x.NeedsTechID == null || x.Tech.StarSystemTeches.Any(y => y.StarSystemID == p.SystemID))); " is 134.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,GetBodyOptions,The length of the statement  "			foreach (var opt in db.ShipTypes.Where(x => x.NeedsTechID == null || x.Tech.StarSystemTeches.Any(y => y.StarSystemID == player.SystemID))) { " is 140.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,GetBodyOptions,The length of the statement  "				if (opt.MetalCost > player.Metal || opt.QuantiumCost > player.Quantium || opt.DarkMetalCost > player.DarkMatter) so.CanBuild = BuildResponse.NotEnoughResources; " is 160.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,GetBodyOptions,The length of the statement  "			foreach (var u in db.StructureTypes.Where(x => x.NeedsTechID == null || x.Tech.StarSystemTeches.Any(y => y.StarSystemID == player.SystemID))) { " is 143.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,GetBodyOptions,The length of the statement  "			          	{ Body = body' NewShipOptions = shipOptions' Player = player' Response = BuildResponse.Ok' NewStructureOptions = structureOptions }; " is 132.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,BuildShip,The length of the statement  "					db.ShipTypes.Single(x => x.ShipTypeID == shipType && (x.NeedsTechID == null || x.Tech.StarSystemTeches.Any(y => y.StarSystemID == p.SystemID))); " is 144.
Long Statement,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,BuildShip,The length of the statement  "				if (ship.MetalCost*count > p.Metal || ship.QuantiumCost*count > p.Quantium || ship.DarkMetalCost*count > p.DarkMatter) { " is 120.
Long Statement,ServiceData,DbDataContext,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.cs,AddEvent,The length of the statement  "			var e = new Event1() { EventType = (int)type' Text = string.Format(message' args)' BattleTurn = GetConfig().CombatTurn' Time = DateTime.UtcNow }; " is 145.
Long Statement,ServiceData,DbDataContext,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.cs,GetPlayer,The length of the statement  "				SpringAccounts.Where(x => x.Name == login && x.Password == SpringAccount.HashPassword(password) && x.Players != null && x.Players.IsActive).Select " is 146.
Long Statement,ServiceData,Transit,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db\Transit.cs,GetName,The length of the statement  "			else if (PopulationTransports != null) return string.Format("transport {0} ({1}k people)"' PopulationTransports.PopulationTransportID' PopulationTransports.Count); " is 163.
Long Statement,ServiceData,Transit,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db\Transit.cs,Initialize,The length of the statement  "			this._Players = new EntitySet<Player>(new Action<Player>(this.attach_Players)' new Action<Player>(this.detach_Players)); " is 120.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,CreateFleet,The length of the statement  "					if (order.Count > garrisonCount) throw new ApplicationException(string.Format("Not enough ships of type {0}"' order.ShipTypeID)); " is 129.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,ModifyFleet,The length of the statement  "						if (order.Count > garrisonCount) throw new ApplicationException(string.Format("Not enough ships of type {0}"' order.ShipTypeID)); " is 129.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,ModifyFleet,The length of the statement  "						if (change > fleetCount) throw new ApplicationException(string.Format("Not enough ships of type {0} in fleet"' order.ShipTypeID)); " is 130.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,OrderFleet,The length of the statement  "				fleet.Transit.SetTransit(target' FleetBaseWarp' db.GetConfig().CombatTurn + 1 + futureOffset' db.GetConfig()); // will start next turn " is 134.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,OrderFleet,The length of the statement  "					var ev = db.AddEvent(EventType.Fleet' "{0} changed destination from {1} to {2}' ETA {3}"' transit.GetNameWithOwner()' oldTarget.GetNameWithOwner()' transit.CelestialObjectByToObjectID.GetNameWithOwner()' transit.GetEtaString(db.GetConfig().SecondsPerTurn)); " is 257.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,OrderMothership,The length of the statement  "					var ev = db.AddEvent(EventType.Fleet' "{0} changed destination from {1} to {2}' ETA {3}"' transit.GetNameWithOwner()' oldTarget.GetNameWithOwner()' transit.CelestialObjectByToObjectID.GetNameWithOwner()' transit.GetEtaString(db.GetConfig().SecondsPerTurn)); " is 257.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,ProcessTransitTurn,The length of the statement  "				if (transit.StartBattleTurn >= config.CombatTurn && transit.EndBattleTurn >= config.CombatTurn && transit.OrbitsObjectID != null) " is 129.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,ProcessTransitTurn,The length of the statement  "					var ev = db.AddEvent(EventType.Fleet' "{0} arrived to {1}"' transit.GetNameWithOwner()' transit.CelestialObjectByToObjectID.GetNameWithOwner()); " is 144.
Long Statement,ServiceData,FleetLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\FleetLogic.cs,ProcessTransitTurn,The length of the statement  "							if (transit.CelestialObjectByToObjectID.Population > transit.CelestialObjectByToObjectID.MaxPopulation) transit.CelestialObjectByToObjectID.Population = transit.CelestialObjectByToObjectID.MaxPopulation; " is 203.
Long Statement,ServiceData,Battle,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._BattleEvents = new EntitySet<BattleEvent>(new Action<BattleEvent>(this.attach_BattleEvents)' new Action<BattleEvent>(this.detach_BattleEvents)); " is 150.
Long Statement,ServiceData,Event1,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._BattleEvents = new EntitySet<BattleEvent>(new Action<BattleEvent>(this.attach_BattleEvents)' new Action<BattleEvent>(this.detach_BattleEvents)); " is 150.
Long Statement,ServiceData,Event1,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectEvents = new EntitySet<CelestialObjectEvent>(new Action<CelestialObjectEvent>(this.attach_CelestialObjectEvents)' new Action<CelestialObjectEvent>(this.detach_CelestialObjectEvents)); " is 204.
Long Statement,ServiceData,Event1,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._PlayerEvents = new EntitySet<PlayerEvent>(new Action<PlayerEvent>(this.attach_PlayerEvents)' new Action<PlayerEvent>(this.detach_PlayerEvents)); " is 150.
Long Statement,ServiceData,Event1,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._FleetEvents = new EntitySet<FleetEvent>(new Action<FleetEvent>(this.attach_FleetEvents)' new Action<FleetEvent>(this.detach_FleetEvents)); " is 144.
Long Statement,ServiceData,Event1,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,CreateEvent,The length of the statement  "			var ev = new Event1() { EventType = (int)type' BattleTurn = battleTurn' Text = string.Format(text' args)' Time = DateTime.UtcNow }; " is 131.
Long Statement,ServiceData,Fleet,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._FleetShips = new EntitySet<FleetShip>(new Action<FleetShip>(this.attach_FleetShips)' new Action<FleetShip>(this.detach_FleetShips)); " is 138.
Long Statement,ServiceData,Fleet,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._FleetEvents = new EntitySet<FleetEvent>(new Action<FleetEvent>(this.attach_FleetEvents)' new Action<FleetEvent>(this.detach_FleetEvents)); " is 144.
Long Statement,ServiceData,StructureType,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectStructures = new EntitySet<CelestialObjectStructure>(new Action<CelestialObjectStructure>(this.attach_CelestialObjectStructures)' new Action<CelestialObjectStructure>(this.detach_CelestialObjectStructures)); " is 228.
Long Statement,ServiceData,StructureType,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._MothershipStructures = new EntitySet<MothershipStructure>(new Action<MothershipStructure>(this.attach_MothershipStructures)' new Action<MothershipStructure>(this.detach_MothershipStructures)); " is 198.
Long Statement,ServiceData,ShipType,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._FleetShips = new EntitySet<FleetShip>(new Action<FleetShip>(this.attach_FleetShips)' new Action<FleetShip>(this.detach_FleetShips)); " is 138.
Long Statement,ServiceData,ShipType,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectShips = new EntitySet<CelestialObjectShip>(new Action<CelestialObjectShip>(this.attach_CelestialObjectShips)' new Action<CelestialObjectShip>(this.detach_CelestialObjectShips)); " is 198.
Long Statement,ServiceData,Tech,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._StarSystemTeches = new EntitySet<StarSystemTech>(new Action<StarSystemTech>(this.attach_StarSystemTeches)' new Action<StarSystemTech>(this.detach_StarSystemTeches)); " is 171.
Long Statement,ServiceData,Tech,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._PlayerTechSpents = new EntitySet<PlayerTechSpent>(new Action<PlayerTechSpent>(this.attach_PlayerTechSpents)' new Action<PlayerTechSpent>(this.detach_PlayerTechSpents)); " is 174.
Long Statement,ServiceData,Tech,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._StructureTypes = new EntitySet<StructureType>(new Action<StructureType>(this.attach_StructureTypes)' new Action<StructureType>(this.detach_StructureTypes)); " is 162.
Long Statement,ServiceData,Tech,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._ShipTypes = new EntitySet<ShipType>(new Action<ShipType>(this.attach_ShipTypes)' new Action<ShipType>(this.detach_ShipTypes)); " is 132.
Long Statement,ServiceData,StarSystem,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._StarSystemTeches = new EntitySet<StarSystemTech>(new Action<StarSystemTech>(this.attach_StarSystemTeches)' new Action<StarSystemTech>(this.detach_StarSystemTeches)); " is 171.
Long Statement,ServiceData,StarSystem,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._Players = new EntitySet<Player>(new Action<Player>(this.attach_Players)' new Action<Player>(this.detach_Players)); " is 120.
Long Statement,ServiceData,Coalition,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._StarSystems = new EntitySet<StarSystem>(new Action<StarSystem>(this.attach_StarSystems)' new Action<StarSystem>(this.detach_StarSystems)); " is 144.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._Battles = new EntitySet<Battle>(new Action<Battle>(this.attach_Battles)' new Action<Battle>(this.detach_Battles)); " is 120.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectEvents = new EntitySet<CelestialObjectEvent>(new Action<CelestialObjectEvent>(this.attach_CelestialObjectEvents)' new Action<CelestialObjectEvent>(this.detach_CelestialObjectEvents)); " is 204.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectLinksByFirstObjectID = new EntitySet<CelestialObjectLink>(new Action<CelestialObjectLink>(this.attach_CelestialObjectLinksByFirstObjectID)' new Action<CelestialObjectLink>(this.detach_CelestialObjectLinksByFirstObjectID)); " is 243.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectLinksBySecondObjectID = new EntitySet<CelestialObjectLink>(new Action<CelestialObjectLink>(this.attach_CelestialObjectLinksBySecondObjectID)' new Action<CelestialObjectLink>(this.detach_CelestialObjectLinksBySecondObjectID)); " is 246.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectStructures = new EntitySet<CelestialObjectStructure>(new Action<CelestialObjectStructure>(this.attach_CelestialObjectStructures)' new Action<CelestialObjectStructure>(this.detach_CelestialObjectStructures)); " is 228.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjectShips = new EntitySet<CelestialObjectShip>(new Action<CelestialObjectShip>(this.attach_CelestialObjectShips)' new Action<CelestialObjectShip>(this.detach_CelestialObjectShips)); " is 198.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._TransitsByFromObjectID = new EntitySet<Transit>(new Action<Transit>(this.attach_TransitsByFromObjectID)' new Action<Transit>(this.detach_TransitsByFromObjectID)); " is 168.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._TransitsByToObjectID = new EntitySet<Transit>(new Action<Transit>(this.attach_TransitsByToObjectID)' new Action<Transit>(this.detach_TransitsByToObjectID)); " is 162.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._Transits = new EntitySet<Transit>(new Action<Transit>(this.attach_Transits)' new Action<Transit>(this.detach_Transits)); " is 126.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._StarSystems = new EntitySet<StarSystem>(new Action<StarSystem>(this.attach_StarSystems)' new Action<StarSystem>(this.detach_StarSystems)); " is 144.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._ChildCelestialObjects = new EntitySet<CelestialObject>(new Action<CelestialObject>(this.attach_ChildCelestialObjects)' new Action<CelestialObject>(this.detach_ChildCelestialObjects)); " is 189.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._Players = new EntitySet<Player>(new Action<Player>(this.attach_Players)' new Action<Player>(this.detach_Players)); " is 120.
Long Statement,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,UpdateIncomeInfo,The length of the statement  "			var mothership = Players.SingleOrDefault(x => x.HomeworldID == CelestialObjectID && (x.Transit == null || x.Transit.OrbitsObjectID == CelestialObjectID)); // mothership orbits this world " is 186.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._PlayerEvents = new EntitySet<PlayerEvent>(new Action<PlayerEvent>(this.attach_PlayerEvents)' new Action<PlayerEvent>(this.detach_PlayerEvents)); " is 150.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._MothershipStructures = new EntitySet<MothershipStructure>(new Action<MothershipStructure>(this.attach_MothershipStructures)' new Action<MothershipStructure>(this.detach_MothershipStructures)); " is 198.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._PlayerTechSpents = new EntitySet<PlayerTechSpent>(new Action<PlayerTechSpent>(this.attach_PlayerTechSpents)' new Action<PlayerTechSpent>(this.detach_PlayerTechSpents)); " is 174.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._PopulationTransports = new EntitySet<PopulationTransport>(new Action<PopulationTransport>(this.attach_PopulationTransports)' new Action<PopulationTransport>(this.detach_PopulationTransports)); " is 198.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._StarSystems = new EntitySet<StarSystem>(new Action<StarSystem>(this.attach_StarSystems)' new Action<StarSystem>(this.detach_StarSystems)); " is 144.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._CelestialObjects = new EntitySet<CelestialObject>(new Action<CelestialObject>(this.attach_CelestialObjects)' new Action<CelestialObject>(this.detach_CelestialObjects)); " is 174.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,Initialize,The length of the statement  "			this._ChildPlayers = new EntitySet<Player>(new Action<Player>(this.attach_ChildPlayers)' new Action<Player>(this.detach_ChildPlayers)); " is 135.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,ApplyResourceTurn,The length of the statement  "						var ev = Event1.CreateEvent(EventType.Player' turn' "{0}m people have died on planet {1} from starvation"' killed' o.Name); " is 123.
Long Statement,ServiceData,Player,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,ApplyPopulationTick,The length of the statement  "						var ev = Event1.CreateEvent(EventType.Player' turn' "Population cannot grow anymore on {0}' transport it to other planet!"' body.Name); " is 135.
Long Statement,ServiceData,GameLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\GameLogic.cs,Register,The length of the statement  "				var player = new Player() { IsActive = true' StarSystem = db.StarSystems.OrderBy(x => x.Players.Where(y => y.IsActive).Count()).First() }; " is 138.
Long Statement,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The length of the statement  "			db.CelestialObjects.DeleteAllOnSubmit(db.CelestialObjects.Where(x => x.CelestialObjectType != CelestialObjectType.Star && (x.ParentCelestialObject.StarSystems == null))); " is 170.
Long Statement,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The length of the statement  "			var neutralStars = db.CelestialObjects.Where(x => x.CelestialObjectType == CelestialObjectType.Star && x.StarSystems  == null); " is 127.
Magic Number,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,SellStructure,The following statement contains a magic number: using (var t = new TransactionScope()) {  				var db = new DbDataContext();  				var p = db.GetPlayer(playerName' password);    				var planet = db.CelestialObjects.Single(x => x.CelestialObjectID == celestialObjectID && x.OwnerID == p.PlayerID);    				var ret = new BodyResponse();    				var cnt = planet.GetStructureCount(structureTypeID);  				if (cnt <= 0) {  					ret.Response = BuildResponse.DoesNotExist;  					return ret;  				}  				else planet.SetStructureCount(structureTypeID' cnt - 1);    				p.Metal += db.StructureTypes.Single(x => x.StructureTypeID == structureTypeID).CostMetal/2.0;  				db.MarkDirty();  				db.SubmitChanges();  				planet.UpdateIncomeInfo();  				db.SubmitChanges();  				t.Complete();  				return GetBodyOptions(playerName' password' celestialObjectID);  			}
Magic Number,ServiceData,BuildingLogic,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\BuildingLogic.cs,SellMothershipModule,The following statement contains a magic number: using (var t = new TransactionScope()) {  				var db = new DbDataContext();  				var p = db.GetPlayer(playerName' password);    				var ret = new BodyResponse();      				var cnt = p.GetStructureCount(structureType);  				if (cnt <= 0) {  					ret.Response = BuildResponse.DoesNotExist;  					return ret;  				}  				p.SetStructureCount(structureType' cnt - 1);    				p.Metal += db.StructureTypes.Single(x => x.StructureTypeID == structureType).CostMetal/2.0;    				db.SubmitChanges();  				if (p.CelestialObject != null) p.CelestialObject.UpdateIncomeInfo();  				db.MarkDirty();  				db.SubmitChanges();  				p.MothershipStructures.Load();  				ret.Player = p;  				ret.NewStructureOptions = GetMotherhipModuleBuildOption(playerName' password);  				ret.Body = p.CelestialObject;  				ret.Response = BuildResponse.Ok;  				t.Complete();  				return ret;  			}
Magic Number,ServiceData,Transit,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db\Transit.cs,SetTransit,The following statement contains a magic number: var failSafe = 1000;
Magic Number,ServiceData,Position,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Position.cs,GetHashCode,The following statement contains a magic number: unchecked {  				return (X.GetHashCode()*397) ^ Y.GetHashCode();  			}
Magic Number,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,GetPosition,The following statement contains a magic number: if (OrbitDistance <=0 ) return new Position(X' Y);  			else {  				var parent =ParentCelestialObject.GetPosition(gameSecond' secondPerTurn);  				var turns = gameSecond / secondPerTurn;  				var theta = OrbitInitialAngle + OrbitSpeed*turns*2*Math.PI;          X = parent.X +OrbitDistance*Math.Cos(theta);          Y = parent.Y + OrbitDistance*Math.Sin(theta);  				return new Position(X'Y);  			}
Magic Number,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,UpdateIncomeInfo,The following statement contains a magic number: if (needsPeople > 0) Efficiency = 0.2 + 0.8 * ((double)Population / needsPeople);  			else Efficiency = 1;
Magic Number,ServiceData,CelestialObject,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Db.designer.cs,UpdateIncomeInfo,The following statement contains a magic number: if (needsPeople > 0) Efficiency = 0.2 + 0.8 * ((double)Population / needsPeople);  			else Efficiency = 1;
Magic Number,ServiceData,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Utils.cs,SecondsToTimeString,The following statement contains a magic number: if (seconds < 60) return seconds + "s";
Magic Number,ServiceData,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Utils.cs,SecondsToTimeString,The following statement contains a magic number: var minutes = seconds/60;
Magic Number,ServiceData,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Utils.cs,SecondsToTimeString,The following statement contains a magic number: if (minutes < 60) return minutes + "m";
Magic Number,ServiceData,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Utils.cs,SecondsToTimeString,The following statement contains a magic number: var hours = minutes/60;
Magic Number,ServiceData,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\Utils.cs,SecondsToTimeString,The following statement contains a magic number: minutes %= 60;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GaussianRandom,The following statement contains a magic number: for (var i = 0; i < 5; i++) {  				cnt += random.NextDouble();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GaussianRandom,The following statement contains a magic number: return min + (max - min)*cnt/5.0;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following statement contains a magic number: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,NewMap,The following statement contains a magic number: foreach (var star in neutralStars) {  				var planetCount = random.Next(3' 10);    				for (int i =0 ; i< planetCount; i++) {              					int distance = 0;  					var ok = false;  					while (!ok) {  						distance = random.Next(5' 100);  						ok = true;  						foreach (var p in star.ChildCelestialObjects) {  							if (Math.Abs(p.OrbitDistance - distance) < 5) {  								ok = false;  								break;  							}  						}  					}  					// todo set proper naming (in order)!    					CelestialObject o = GetRandomObject(CelestialObjectType.Star);            star.ChildCelestialObjects.Add(o); // orbits star				            o.Name = string.Format("{0} {1}"' star.Name' ToRoman(i+1));    					o.OrbitDistance = distance;  					o.OrbitSpeed = 1 / o.OrbitDistance / 100;  					o.OrbitSpeed = o.OrbitSpeed*(1+GaussianRandom(-30' 30)/100);    					if (o.CelestialObjectType !=  CelestialObjectType.Asteroid) {  						var moonCount = random.Next(3);  						double moonDistance = 0;    						for (int j = 0 ; j < moonCount;j++) {  							var moonStep = GaussianRandom(0.5' 2.5);  							CelestialObject m = GetRandomObject(o.CelestialObjectType);  							o.ChildCelestialObjects.Add(m);  							moonDistance += moonStep;  							m.OrbitDistance = moonDistance;  							m.OrbitSpeed = 1/m.OrbitDistance/300;  							m.OrbitSpeed = m.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);    							m.Name = o.Name + (char)('A' + j);    						}  					}  				}    				db.SubmitChanges();  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.Size = 5;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitInitialAngle = random.NextDouble() * 2 * Math.PI;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitDistance = o.ChildCelestialObjects.Max(x => (double?)x.OrbitDistance)??0 +GaussianRandom(5' 15);
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitDistance = o.ChildCelestialObjects.Max(x => (double?)x.OrbitDistance)??0 +GaussianRandom(5' 15);
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitSpeed = 1/o.OrbitDistance/100;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitSpeed = o.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitSpeed = o.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,CreateHomeworld,The following statement contains a magic number: o.OrbitSpeed = o.OrbitSpeed * (1 + GaussianRandom(-30' 30) / 100);
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: o.OrbitInitialAngle = random.NextDouble()*2*Math.PI;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: o.CelestialObjectType = random.Next(3 - (int)fromType) +  fromType+1;
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Magic Number,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following statement contains a magic number: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
Missing Default,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,ToRoman,The following switch statement is missing a default case: switch (i) {  				case 1:  					return "I";  				case 2:  					return "II";  				case 3:  					return "III";  				case 4:  					return "IV";  				case 5:  					return "V";  				case 6:  					return "VI";  				case 7:  					return "VII";  				case 8:  					return "VIII";  				case 9:  					return "IX";  				case 10:  					return "X";  			}
Missing Default,MapGenerator,MapGen,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\PlanetWars\ServiceData\MapGen.cs,GetRandomObject,The following switch statement is missing a default case: switch (o.CelestialObjectType) {  				case CelestialObjectType.Planet:  					o.MetalDensity = random.Next(2'16)/10;  					o.FoodDensity = random.Next(0'21)/10;  					o.Size = random.Next(3'7);  					break;    				case CelestialObjectType.Moon:  					o.MetalDensity = random.Next(3'22) / 10;  					o.FoodDensity = random.Next(0'10) / 10;  					o.Size = random.Next(2'5);  					break;    				case CelestialObjectType.Asteroid:  					o.MetalDensity = random.Next(5'35) / 10;  					o.FoodDensity = random.Next(0'5) / 10;  					o.Size = random.Next(1' 4);  					break;  			}
