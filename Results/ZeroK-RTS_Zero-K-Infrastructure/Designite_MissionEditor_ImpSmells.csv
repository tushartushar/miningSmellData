Implementation smell,Namespace,Class,File,Method,Description
Long Method,MissionEditor2,LocalizationControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\LocalizationControl.xaml.cs,AddControls,The method has 87 lines of code.
Long Method,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,The method has 81 lines of code.
Long Method,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The method has 93 lines of code.
Long Method,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The method has 111 lines of code.
Long Method,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The method has 68 lines of code.
Long Method,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logicGrid_Drop,The method has 103 lines of code.
Complex Method,MissionEditor2,LocalizationControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\LocalizationControl.xaml.cs,AddControls,Cyclomatic complexity of the method is 9
Complex Method,MissionEditor2,GiveTargetedOrdersActionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveTargetedOrdersActionControl.xaml.cs,CreateNewOrder,Cyclomatic complexity of the method is 9
Complex Method,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,Cyclomatic complexity of the method is 41
Complex Method,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,Cyclomatic complexity of the method is 15
Complex Method,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,canvas_MouseDown,Cyclomatic complexity of the method is 10
Complex Method,MissionEditor2,TriggersFolder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\TriggersFolder.cs,Triggers_CollectionChanged,Cyclomatic complexity of the method is 10
Complex Method,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,canvas_MouseDown,Cyclomatic complexity of the method is 10
Complex Method,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,Cyclomatic complexity of the method is 11
Complex Method,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseMove,Cyclomatic complexity of the method is 11
Complex Method,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,Cyclomatic complexity of the method is 11
Complex Method,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,UnitDefGrid_Loaded,Cyclomatic complexity of the method is 8
Complex Method,MissionEditor2,LogicTemplateSelector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\LogicTemplateSelector.cs,SelectTemplate,Cyclomatic complexity of the method is 22
Complex Method,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logicGrid_Drop,Cyclomatic complexity of the method is 28
Complex Method,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,ExportLocalizationFile,Cyclomatic complexity of the method is 11
Long Parameter List,MissionEditor2,ErrorDialog,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ErrorDialog.xaml.cs,ErrorDialog,The method has 4 parameters.
Long Parameter List,MissionEditor2,FolderConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\FolderConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,FolderConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\FolderConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,MissionItemsConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MissionItemsConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,MissionItemsConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MissionItemsConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,TranslateConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\TranslateConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,TranslateConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\TranslateConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,TriggerConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\TriggerConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,TriggerConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\TriggerConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Utils.cs,Bind,The method has 7 parameters.
Long Parameter List,MissionEditor2,Utils,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Utils.cs,GetDistance,The method has 4 parameters.
Long Parameter List,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,IsVisible,The method has 4 parameters.
Long Parameter List,MissionEditor2,ZoomConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,ZoomConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,BoolIntConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\BoolIntConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,BoolIntConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\BoolIntConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,CsvConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CsvConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,CsvConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CsvConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,IntConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\IntConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,IntConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\IntConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,NullableBoolConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\NullableBoolConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,NullableBoolConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\NullableBoolConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,MissionEditor2,OpposedConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\OpposedConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,MissionEditor2,OpposedConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\OpposedConverter.cs,ConvertBack,The method has 4 parameters.
Long Statement,MissionEditor2,GiveFactoryOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveFactoryOrdersPane.xaml.cs,UserControl_Loaded,The length of the statement  "	action.BuiltUnitsGroups.CollectionChanged += (s' ea) => setGroupsButton.Content = String.Join ("\r\n"' action.BuiltUnitsGroups); " is 128.
Long Statement,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The length of the statement  "	var firstUnits = action.Groups.Any () ? previousUnits.Where (u => u.Groups.Any (t => action.Groups.Contains (t))) : previousUnits; " is 130.
Long Statement,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,The length of the statement  "			bool isEngineFolder = File.Exists (Path.Combine (writableDir' Environment.OSVersion.Platform == PlatformID.Unix ? "spring" : "spring.exe")); " is 140.
Long Statement,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,The length of the statement  "			MessageBox.Show ("Mission successfully uploaded.\n\rIt is now accessible from the lobby.\r\nPlease make sure it works!"); " is 121.
Long Statement,MissionEditor2,UnitDefsGrid,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitDefsGrid.xaml.cs,GoToText,The length of the statement  "	var item = Grid.ItemsSource.Cast<UnitInfo> ().FirstOrDefault (ud => ud.Name.ToLower ().Contains (text.ToLower ()) || ud.FullName.ToLower ().Contains (text.ToLower ())); " is 168.
Long Statement,MissionEditor2,WelcomeDialog,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\WelcomeDialog.xaml.cs,AskForExistingMission,The length of the statement  "	var missionDialogFilter = String.Format ("Spring Mission files (*.{0})|*.{0}|Mutator (*.sdz)|*.sdz|All files (*.*)|*.*"' MissionExtension); " is 139.
Long Statement,MissionEditor2,App,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\App.xaml.cs,ReportError,The length of the statement  "		var version = ApplicationDeployment.IsNetworkDeployed ? ApplicationDeployment.CurrentDeployment.CurrentVersion.ToString () : "Unknown"; " is 135.
Long Statement,MissionEditor2,App,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\App.xaml.cs,ReportError,The length of the statement  "		var errorLogFile = Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments) + "\\My Games\\Spring\\MissionEditorErrors.txt"; " is 133.
Long Statement,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The length of the statement  "	if (unitDefGrid.Grid.SelectedItem != null && DateTime.Now - mouseDownDate < TimeSpan.FromMilliseconds (150) && e.ChangedButton == MouseButton.Left && Keyboard.Modifiers == ModifierKeys.None) { " is 192.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "			System.Windows.Forms.DialogResult confirmOverwrite = System.Windows.Forms.MessageBox.Show ("The .sdd already exists in the selected directory.\nIt will be deleted and replaced.\nContinue?"' "sdd already exists"' System.Windows.Forms.MessageBoxButtons.YesNo); " is 258.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "			//if (sdd) fileName = Path.ChangeExtension(fileName' "zip"); // this is the temporary zip' leave the .sdd path for the actual .sdd " is 130.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "					var scriptPath = String.Format ("{0}\\{1}.txt"' Path.GetDirectoryName (fileName)' Path.GetFileNameWithoutExtension (fileName)); " is 127.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "					var scriptPathLua = String.Format ("{0}\\{1}.lua"' Path.GetDirectoryName (fileName)' Path.GetFileNameWithoutExtension (fileName)); " is 130.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "	String GuiMessagePersistentDesc = "Hello!\nI differ from the regular GUI message in that I can't pause the game' have no close button' and there can be only one of me!\nI require a Chili widget to work!"; " is 204.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "	addAction ("Point Camera at Map Position"' () => new SetCameraPointTargetAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "Camera"); " is 155.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "	addAction ("Add Point to Objective"' () => new AddPointToObjectiveAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI"); " is 145.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "	addAction ("Show Convo Message"' () => new ConvoMessageAction ("Hello! I am a talking head for missions! I require a custom widget to work!")' "GUI"); " is 150.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "	addAction ("Show Marker Point"' () => new MarkerPointAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI"); " is 132.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The length of the statement  "	var aboutString = String.Format ("Mission Editor {0}\n\nby Quantum and KingRaptor\n\nFor help with the program' visit {1}"' version' GlobalConst.BaseSiteUrl + "/Wiki/MissionEditorStartPage"); " is 191.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The length of the statement  "	help.AddAction ("About"' () => MessageBox.Show (aboutString' "About Mission Editor"' MessageBoxButton.OK' MessageBoxImage.Information)); " is 136.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logicGrid_PreviewMouseMove,The length of the statement  "		if (Math.Abs (position.Y - dragStartPoint.Y) > SystemParameters.MinimumVerticalDragDistance || Math.Abs (position.X - dragStartPoint.X) > SystemParameters.MinimumHorizontalDragDistance) { " is 187.
Long Statement,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,ShowSaveWarning,The length of the statement  "	string msg = exit ? "You will lose any unsaved changes' save before exiting?" : "You will lose any unsaved changes' save first?"; " is 129.
Long Statement,MissionEditor2,MissionManagement,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MissionManagement.xaml.cs,searchBox_TextChanged,The length of the statement  "	var item = DataGrid.ItemsSource.Cast<Mission> ().FirstOrDefault (mission => mission.Name.ToLower ().Contains (text.ToLower ()) || mission.Description.ToLower ().Contains (text.ToLower ())); " is 189.
Complex Conditional,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The conditional expression  "pos.X >= x1 && pos.X <= x2 && pos.Y >= y1 && pos.Y <= y2"  is complex.
Complex Conditional,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The conditional expression  "unitDefGrid.Grid.SelectedItem != null && DateTime.Now - mouseDownDate < TimeSpan.FromMilliseconds (150) && e.ChangedButton == MouseButton.Left && Keyboard.Modifiers == ModifierKeys.None"  is complex.
Complex Conditional,MissionEditor2,LogicTemplateSelector,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\LogicTemplateSelector.cs,SelectTemplate,The conditional expression  "item is DummyCondition || item is DummyAction || item is ConditionsFolder || item is ActionsFolder"  is complex.
Complex Conditional,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveItem,The conditional expression  "(displacedType is Action && item is Condition) || (displacedType is Condition && item is Action)"  is complex.
Empty Catch Block,MissionEditor2,ErrorDialog,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ErrorDialog.xaml.cs,Hyperlink_Click,The method has an empty catch block.
Empty Catch Block,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,The method has an empty catch block.
Empty Catch Block,MissionEditor2,NewMissionDialog,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\NewMissionDialog.xaml.cs,Hyperlink_RequestNavigate,The method has an empty catch block.
Magic Number,MissionEditor2,GiveFactoryOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveFactoryOrdersPane.xaml.cs,MoveDownButton_Click,The following statement contains a magic number: if (index + 2 > action.BuildOrders.Count)  	return;  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,The following statement contains a magic number: switch (orderTypeName) {  case "Move":  	newOrder = new MoveOrder (position.X' position.Y);  	break;  case "Patrol":  	newOrder = new PatrolOrder (position.X' position.Y);  	break;  case "Stop":  	newOrder = new StopOrder ();  	break;  case "Fight":  	newOrder = new FightOrder (position.X' position.Y);  	break;  case "Attack":  	newOrder = new AttackOrder (position.X' position.Y);  	break;  case "Hold Position":  	newOrder = new MoveStateOrder (0);  	break;  case "Maneuver":  	newOrder = new MoveStateOrder (1);  	break;  case "Roam":  	newOrder = new MoveStateOrder (2);  	break;  case "Hold Fire":  	newOrder = new FireStateOrder (0);  	break;  case "Return Fire":  	newOrder = new FireStateOrder (1);  	break;  case "Fire At Will":  	newOrder = new FireStateOrder (2);  	break;  case "Enable Repeat Mode":  	newOrder = new RepeatOrder (1);  	break;  case "Disable Repeat Mode":  	newOrder = new RepeatOrder (0);  	break;  default:  	throw new Exception ("Ordertype not expected: " + orderTypeName);  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,The following statement contains a magic number: switch (orderTypeName) {  case "Move":  	newOrder = new MoveOrder (position.X' position.Y);  	break;  case "Patrol":  	newOrder = new PatrolOrder (position.X' position.Y);  	break;  case "Stop":  	newOrder = new StopOrder ();  	break;  case "Fight":  	newOrder = new FightOrder (position.X' position.Y);  	break;  case "Attack":  	newOrder = new AttackOrder (position.X' position.Y);  	break;  case "Hold Position":  	newOrder = new MoveStateOrder (0);  	break;  case "Maneuver":  	newOrder = new MoveStateOrder (1);  	break;  case "Roam":  	newOrder = new MoveStateOrder (2);  	break;  case "Hold Fire":  	newOrder = new FireStateOrder (0);  	break;  case "Return Fire":  	newOrder = new FireStateOrder (1);  	break;  case "Fire At Will":  	newOrder = new FireStateOrder (2);  	break;  case "Enable Repeat Mode":  	newOrder = new RepeatOrder (1);  	break;  case "Disable Repeat Mode":  	newOrder = new RepeatOrder (0);  	break;  default:  	throw new Exception ("Ordertype not expected: " + orderTypeName);  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,The following statement contains a magic number: newOrder = new MoveStateOrder (2);  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,The following statement contains a magic number: newOrder = new FireStateOrder (2);  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,canvas_PreviewMouseUp,The following statement contains a magic number: if (dragInfo == null) {  	if (DateTime.Now - canvasMouseDownDate < TimeSpan.FromMilliseconds (150) && e.ChangedButton == MouseButton.Left) {  		var mousePos = e.GetPosition (canvas);  		CreateNewOrder (mousePos);  	}  } else {  	e.Handled = true;  	canvas.ReleaseMouseCapture ();  	dragInfo = null;  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,canvas_PreviewMouseUp,The following statement contains a magic number: if (DateTime.Now - canvasMouseDownDate < TimeSpan.FromMilliseconds (150) && e.ChangedButton == MouseButton.Left) {  	var mousePos = e.GetPosition (canvas);  	CreateNewOrder (mousePos);  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: foreach (var order in action.Orders.OfType<Positionable> ()) {  	var icon = new OrderIcon ();  	icon.DataContext = order;  	icon.Bind (Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter ()' -4);  	icon.Bind (Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter ()' -2);  	Canvas.SetZIndex (icon' 10);  	canvas.Children.Add (icon);  	icon.MouseDown += OrderMouseDown;  	icon.MouseUp += OrderMouseUp;  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: foreach (var order in action.Orders.OfType<Positionable> ()) {  	var icon = new OrderIcon ();  	icon.DataContext = order;  	icon.Bind (Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter ()' -4);  	icon.Bind (Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter ()' -2);  	Canvas.SetZIndex (icon' 10);  	canvas.Children.Add (icon);  	icon.MouseDown += OrderMouseDown;  	icon.MouseUp += OrderMouseUp;  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: foreach (var order in action.Orders.OfType<Positionable> ()) {  	var icon = new OrderIcon ();  	icon.DataContext = order;  	icon.Bind (Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter ()' -4);  	icon.Bind (Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter ()' -2);  	Canvas.SetZIndex (icon' 10);  	canvas.Children.Add (icon);  	icon.MouseDown += OrderMouseDown;  	icon.MouseUp += OrderMouseUp;  }  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: icon.Bind (Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter ()' -4);  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: icon.Bind (Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter ()' -2);  
Magic Number,MissionEditor2,GiveOrdersPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: Canvas.SetZIndex (icon' 10);  
Magic Number,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,The following statement contains a magic number: try {  	var info = new ZkData.Mission () {  		Description = mission.Description'  		DescriptionStory = mission.DescriptionStory != String.Empty ? mission.DescriptionStory : null'  		Map = mission.Map.Name'  		Mod = mission.Mod.Name'  		Name = mission.Name'  		ScoringMethod = mission.ScoringMethod'  		Script = mission.GetScript ()'  		ModRapidTag = mission.RapidTag'  	};  	var slots = mission.GetSlots ();  	var image = File.ReadAllBytes (mission.ImagePath).ToImage (96' 96);  	var pngEncoder = new PngBitmapEncoder ();  	pngEncoder.Frames.Add (BitmapFrame.Create (image));  	var imageStream = new MemoryStream ();  	pngEncoder.Save (imageStream);  	imageStream.Position = 0;  	info.Image = imageStream.ToArray ();  	if (ApplicationDeployment.IsNetworkDeployed)  		info.MissionEditorVersion = ApplicationDeployment.CurrentDeployment.CurrentVersion.ToString ();  	using (var unitSync = new UnitSync (Settings.Default.SpringPath))  		info.SpringVersion = unitSync.Version;  	if (missionId.HasValue)  		info.MissionID = missionId.Value;  	string tempPath = null;  	var missionFileName = "publish_mission_temp.sdz";  	try {  		string writableDir = Settings.Default.SpringPath;  		// this is an engine folder' use our actual writable folder  		bool isEngineFolder = File.Exists (Path.Combine (writableDir' Environment.OSVersion.Platform == PlatformID.Unix ? "spring" : "spring.exe"));  		if (isEngineFolder) {  			writableDir = SpringPaths.GetMySpringDocPath ();  		}  		var paths = new SpringPaths (writableDir' true' false);  		string engine = paths.GetEngineList ().LastOrDefault ();  		if (isEngineFolder)  			engine = paths.GetEngineList ().FirstOrDefault (x => x == new DirectoryInfo (Settings.Default.SpringPath).Name);  		using (var unitSync = new ZkData.UnitSyncLib.UnitSync (paths' engine)) {  			var modPath = Path.Combine (paths.WritableDirectory' "games");  			tempPath = Path.Combine (modPath' missionFileName);  		}  		if (File.Exists (tempPath))  			File.Delete (tempPath);  		mission.CreateArchive (tempPath);  		Mod mod;  		using (var unitSync = new ZkData.UnitSyncLib.UnitSync (paths' engine)) {  			mod = (Mod)unitSync.GetResourceFromFileName (mission.Mod.ArchiveName);  			if (mod == null)  				throw new Exception ("Mod metadata not extracted: mod not found");  		}  		info.Mutator = File.ReadAllBytes (tempPath);  		var client = MissionServiceClientFactory.MakeClient ();  		client.SendMission (info' slots' mission.Author' password' mod);  		MessageBox.Show ("Mission successfully uploaded.\n\rIt is now accessible from the lobby.\r\nPlease make sure it works!");  		return true;  	} catch (Exception e) {  		if (Debugger.IsAttached)  			throw;  		MessageBox.Show (e.Message);  		return false;  	} finally {  		try {  			if (tempPath != null && File.Exists (tempPath))  				File.Delete (tempPath);  		} catch {  		}  	}  } catch (FaultException<ExceptionDetail> e) {  	if (Debugger.IsAttached)  		throw;  	MessageBox.Show (e.Message);  	return false;  } catch (FaultException e) {  	if (Debugger.IsAttached)  		throw;  	MessageBox.Show (e.Message);  	return false;  }  
Magic Number,MissionEditor2,Publishing,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Publishing.cs,SendMission,The following statement contains a magic number: try {  	var info = new ZkData.Mission () {  		Description = mission.Description'  		DescriptionStory = mission.DescriptionStory != String.Empty ? mission.DescriptionStory : null'  		Map = mission.Map.Name'  		Mod = mission.Mod.Name'  		Name = mission.Name'  		ScoringMethod = mission.ScoringMethod'  		Script = mission.GetScript ()'  		ModRapidTag = mission.RapidTag'  	};  	var slots = mission.GetSlots ();  	var image = File.ReadAllBytes (mission.ImagePath).ToImage (96' 96);  	var pngEncoder = new PngBitmapEncoder ();  	pngEncoder.Frames.Add (BitmapFrame.Create (image));  	var imageStream = new MemoryStream ();  	pngEncoder.Save (imageStream);  	imageStream.Position = 0;  	info.Image = imageStream.ToArray ();  	if (ApplicationDeployment.IsNetworkDeployed)  		info.MissionEditorVersion = ApplicationDeployment.CurrentDeployment.CurrentVersion.ToString ();  	using (var unitSync = new UnitSync (Settings.Default.SpringPath))  		info.SpringVersion = unitSync.Version;  	if (missionId.HasValue)  		info.MissionID = missionId.Value;  	string tempPath = null;  	var missionFileName = "publish_mission_temp.sdz";  	try {  		string writableDir = Settings.Default.SpringPath;  		// this is an engine folder' use our actual writable folder  		bool isEngineFolder = File.Exists (Path.Combine (writableDir' Environment.OSVersion.Platform == PlatformID.Unix ? "spring" : "spring.exe"));  		if (isEngineFolder) {  			writableDir = SpringPaths.GetMySpringDocPath ();  		}  		var paths = new SpringPaths (writableDir' true' false);  		string engine = paths.GetEngineList ().LastOrDefault ();  		if (isEngineFolder)  			engine = paths.GetEngineList ().FirstOrDefault (x => x == new DirectoryInfo (Settings.Default.SpringPath).Name);  		using (var unitSync = new ZkData.UnitSyncLib.UnitSync (paths' engine)) {  			var modPath = Path.Combine (paths.WritableDirectory' "games");  			tempPath = Path.Combine (modPath' missionFileName);  		}  		if (File.Exists (tempPath))  			File.Delete (tempPath);  		mission.CreateArchive (tempPath);  		Mod mod;  		using (var unitSync = new ZkData.UnitSyncLib.UnitSync (paths' engine)) {  			mod = (Mod)unitSync.GetResourceFromFileName (mission.Mod.ArchiveName);  			if (mod == null)  				throw new Exception ("Mod metadata not extracted: mod not found");  		}  		info.Mutator = File.ReadAllBytes (tempPath);  		var client = MissionServiceClientFactory.MakeClient ();  		client.SendMission (info' slots' mission.Author' password' mod);  		MessageBox.Show ("Mission successfully uploaded.\n\rIt is now accessible from the lobby.\r\nPlease make sure it works!");  		return true;  	} catch (Exception e) {  		if (Debugger.IsAttached)  			throw;  		MessageBox.Show (e.Message);  		return false;  	} finally {  		try {  			if (tempPath != null && File.Exists (tempPath))  				File.Delete (tempPath);  		} catch {  		}  	}  } catch (FaultException<ExceptionDetail> e) {  	if (Debugger.IsAttached)  		throw;  	MessageBox.Show (e.Message);  	return false;  } catch (FaultException e) {  	if (Debugger.IsAttached)  		throw;  	MessageBox.Show (e.Message);  	return false;  }  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,AddCylinder,The following statement contains a magic number: Canvas.SetLeft (info.Center' area.X - centerSize / 2.0);  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,AddCylinder,The following statement contains a magic number: Canvas.SetTop (info.Center' area.Y - centerSize / 2.0);  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (canvas.IsMouseCaptured) {  	if (dragInfo is CircleDragInfo) {  		var info = (CircleDragInfo)dragInfo;  		var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  		info.Area.R = r;  		info.Circle.Width = r * 2;  		info.Circle.Height = r * 2;  		Canvas.SetLeft (info.Circle' info.Area.X - r);  		Canvas.SetTop (info.Circle' info.Area.Y - r);  	} else if (dragInfo is RectangleDragInfo) {  		var info = (RectangleDragInfo)dragInfo;  		var dx = mousePosition.X - info.StartPoint.X;  		var dy = mousePosition.Y - info.StartPoint.Y;  		if (dx > 0) {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  			info.Rectangle.Width = dx;  			info.Area.X = info.StartPoint.X;  			info.Area.Width = dx;  		} else {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  			info.Rectangle.Width = -dx;  			info.Area.X = info.StartPoint.X + dx;  			info.Area.Width = -dx;  		}  		if (dy > 0) {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  			info.Rectangle.Height = dy;  			info.Area.Y = info.StartPoint.Y;  			info.Area.Height = dy;  		} else {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  			info.Rectangle.Height = -dy;  			info.Area.Y = info.StartPoint.Y + dy;  			info.Area.Height = -dy;  		}  	}  }  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (canvas.IsMouseCaptured) {  	if (dragInfo is CircleDragInfo) {  		var info = (CircleDragInfo)dragInfo;  		var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  		info.Area.R = r;  		info.Circle.Width = r * 2;  		info.Circle.Height = r * 2;  		Canvas.SetLeft (info.Circle' info.Area.X - r);  		Canvas.SetTop (info.Circle' info.Area.Y - r);  	} else if (dragInfo is RectangleDragInfo) {  		var info = (RectangleDragInfo)dragInfo;  		var dx = mousePosition.X - info.StartPoint.X;  		var dy = mousePosition.Y - info.StartPoint.Y;  		if (dx > 0) {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  			info.Rectangle.Width = dx;  			info.Area.X = info.StartPoint.X;  			info.Area.Width = dx;  		} else {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  			info.Rectangle.Width = -dx;  			info.Area.X = info.StartPoint.X + dx;  			info.Area.Width = -dx;  		}  		if (dy > 0) {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  			info.Rectangle.Height = dy;  			info.Area.Y = info.StartPoint.Y;  			info.Area.Height = dy;  		} else {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  			info.Rectangle.Height = -dy;  			info.Area.Y = info.StartPoint.Y + dy;  			info.Area.Height = -dy;  		}  	}  }  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (dragInfo is CircleDragInfo) {  	var info = (CircleDragInfo)dragInfo;  	var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  	info.Area.R = r;  	info.Circle.Width = r * 2;  	info.Circle.Height = r * 2;  	Canvas.SetLeft (info.Circle' info.Area.X - r);  	Canvas.SetTop (info.Circle' info.Area.Y - r);  } else if (dragInfo is RectangleDragInfo) {  	var info = (RectangleDragInfo)dragInfo;  	var dx = mousePosition.X - info.StartPoint.X;  	var dy = mousePosition.Y - info.StartPoint.Y;  	if (dx > 0) {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  		info.Rectangle.Width = dx;  		info.Area.X = info.StartPoint.X;  		info.Area.Width = dx;  	} else {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  		info.Rectangle.Width = -dx;  		info.Area.X = info.StartPoint.X + dx;  		info.Area.Width = -dx;  	}  	if (dy > 0) {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  		info.Rectangle.Height = dy;  		info.Area.Y = info.StartPoint.Y;  		info.Area.Height = dy;  	} else {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  		info.Rectangle.Height = -dy;  		info.Area.Y = info.StartPoint.Y + dy;  		info.Area.Height = -dy;  	}  }  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (dragInfo is CircleDragInfo) {  	var info = (CircleDragInfo)dragInfo;  	var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  	info.Area.R = r;  	info.Circle.Width = r * 2;  	info.Circle.Height = r * 2;  	Canvas.SetLeft (info.Circle' info.Area.X - r);  	Canvas.SetTop (info.Circle' info.Area.Y - r);  } else if (dragInfo is RectangleDragInfo) {  	var info = (RectangleDragInfo)dragInfo;  	var dx = mousePosition.X - info.StartPoint.X;  	var dy = mousePosition.Y - info.StartPoint.Y;  	if (dx > 0) {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  		info.Rectangle.Width = dx;  		info.Area.X = info.StartPoint.X;  		info.Area.Width = dx;  	} else {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  		info.Rectangle.Width = -dx;  		info.Area.X = info.StartPoint.X + dx;  		info.Area.Width = -dx;  	}  	if (dy > 0) {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  		info.Rectangle.Height = dy;  		info.Area.Y = info.StartPoint.Y;  		info.Area.Height = dy;  	} else {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  		info.Rectangle.Height = -dy;  		info.Area.Y = info.StartPoint.Y + dy;  		info.Area.Height = -dy;  	}  }  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: info.Circle.Width = r * 2;  
Magic Number,MissionEditor2,RegionControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\RegionControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: info.Circle.Height = r * 2;  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: Canvas.SetLeft (info.Center' area.X - centerSize / 2.0);  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: Canvas.SetTop (info.Center' area.Y - centerSize / 2.0);  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (canvas.IsMouseCaptured) {  	if (dragInfo is CircleDragInfo) {  		var info = (CircleDragInfo)dragInfo;  		var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  		info.Area.R = r;  		info.Circle.Width = r * 2;  		info.Circle.Height = r * 2;  		Canvas.SetLeft (info.Circle' info.Area.X - r);  		Canvas.SetTop (info.Circle' info.Area.Y - r);  	} else if (dragInfo is RectangleDragInfo) {  		var info = (RectangleDragInfo)dragInfo;  		var dx = mousePosition.X - info.StartPoint.X;  		var dy = mousePosition.Y - info.StartPoint.Y;  		if (dx > 0) {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  			info.Rectangle.Width = dx;  			info.Area.X = info.StartPoint.X;  			info.Area.Width = dx;  		} else {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  			info.Rectangle.Width = -dx;  			info.Area.X = info.StartPoint.X + dx;  			info.Area.Width = -dx;  		}  		if (dy > 0) {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  			info.Rectangle.Height = dy;  			info.Area.Y = info.StartPoint.Y;  			info.Area.Height = dy;  		} else {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  			info.Rectangle.Height = -dy;  			info.Area.Y = info.StartPoint.Y + dy;  			info.Area.Height = -dy;  		}  	}  }  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (canvas.IsMouseCaptured) {  	if (dragInfo is CircleDragInfo) {  		var info = (CircleDragInfo)dragInfo;  		var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  		info.Area.R = r;  		info.Circle.Width = r * 2;  		info.Circle.Height = r * 2;  		Canvas.SetLeft (info.Circle' info.Area.X - r);  		Canvas.SetTop (info.Circle' info.Area.Y - r);  	} else if (dragInfo is RectangleDragInfo) {  		var info = (RectangleDragInfo)dragInfo;  		var dx = mousePosition.X - info.StartPoint.X;  		var dy = mousePosition.Y - info.StartPoint.Y;  		if (dx > 0) {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  			info.Rectangle.Width = dx;  			info.Area.X = info.StartPoint.X;  			info.Area.Width = dx;  		} else {  			Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  			info.Rectangle.Width = -dx;  			info.Area.X = info.StartPoint.X + dx;  			info.Area.Width = -dx;  		}  		if (dy > 0) {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  			info.Rectangle.Height = dy;  			info.Area.Y = info.StartPoint.Y;  			info.Area.Height = dy;  		} else {  			Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  			info.Rectangle.Height = -dy;  			info.Area.Y = info.StartPoint.Y + dy;  			info.Area.Height = -dy;  		}  	}  }  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (dragInfo is CircleDragInfo) {  	var info = (CircleDragInfo)dragInfo;  	var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  	info.Area.R = r;  	info.Circle.Width = r * 2;  	info.Circle.Height = r * 2;  	Canvas.SetLeft (info.Circle' info.Area.X - r);  	Canvas.SetTop (info.Circle' info.Area.Y - r);  } else if (dragInfo is RectangleDragInfo) {  	var info = (RectangleDragInfo)dragInfo;  	var dx = mousePosition.X - info.StartPoint.X;  	var dy = mousePosition.Y - info.StartPoint.Y;  	if (dx > 0) {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  		info.Rectangle.Width = dx;  		info.Area.X = info.StartPoint.X;  		info.Area.Width = dx;  	} else {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  		info.Rectangle.Width = -dx;  		info.Area.X = info.StartPoint.X + dx;  		info.Area.Width = -dx;  	}  	if (dy > 0) {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  		info.Rectangle.Height = dy;  		info.Area.Y = info.StartPoint.Y;  		info.Area.Height = dy;  	} else {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  		info.Rectangle.Height = -dy;  		info.Area.Y = info.StartPoint.Y + dy;  		info.Area.Height = -dy;  	}  }  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (dragInfo is CircleDragInfo) {  	var info = (CircleDragInfo)dragInfo;  	var r = Utils.GetDistance (info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  	info.Area.R = r;  	info.Circle.Width = r * 2;  	info.Circle.Height = r * 2;  	Canvas.SetLeft (info.Circle' info.Area.X - r);  	Canvas.SetTop (info.Circle' info.Area.Y - r);  } else if (dragInfo is RectangleDragInfo) {  	var info = (RectangleDragInfo)dragInfo;  	var dx = mousePosition.X - info.StartPoint.X;  	var dy = mousePosition.Y - info.StartPoint.Y;  	if (dx > 0) {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X);  		info.Rectangle.Width = dx;  		info.Area.X = info.StartPoint.X;  		info.Area.Width = dx;  	} else {  		Canvas.SetLeft (info.Rectangle' info.StartPoint.X + dx);  		info.Rectangle.Width = -dx;  		info.Area.X = info.StartPoint.X + dx;  		info.Area.Width = -dx;  	}  	if (dy > 0) {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y);  		info.Rectangle.Height = dy;  		info.Area.Y = info.StartPoint.Y;  		info.Area.Height = dy;  	} else {  		Canvas.SetTop (info.Rectangle' info.StartPoint.Y + dy);  		info.Rectangle.Height = -dy;  		info.Area.Y = info.StartPoint.Y + dy;  		info.Area.Height = -dy;  	}  }  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: info.Circle.Width = r * 2;  
Magic Number,MissionEditor2,UnitEnteredAreaControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: info.Circle.Height = r * 2;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: if (isBlurred)  	border.Opacity = 0.2;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.Opacity = 0.2;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: Canvas.SetLeft (border' unit.X - border.Width / 2);  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: Canvas.SetTop (border' unit.Y - border.Height / 2);  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: Panel.SetZIndex (border' -10);  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform {  	CenterX = 8'  	CenterY = 8'  	ScaleX = 1 / 16.0 * mission.FromIngameX (unit.UnitDef.FootprintX * 16)'  	ScaleY = 1 / 16.0 * mission.FromIngameY (unit.UnitDef.FootprintY * 16)  };  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform {  	CenterX = 8'  	CenterY = 8'  	ScaleX = 1 / 16.0 * mission.FromIngameX (unit.UnitDef.FootprintX * 16)'  	ScaleY = 1 / 16.0 * mission.FromIngameY (unit.UnitDef.FootprintY * 16)  };  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform {  	CenterX = 8'  	CenterY = 8'  	ScaleX = 1 / 16.0 * mission.FromIngameX (unit.UnitDef.FootprintX * 16)'  	ScaleY = 1 / 16.0 * mission.FromIngameY (unit.UnitDef.FootprintY * 16)  };  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform {  	CenterX = 8'  	CenterY = 8'  	ScaleX = 1 / 16.0 * mission.FromIngameX (unit.UnitDef.FootprintX * 16)'  	ScaleY = 1 / 16.0 * mission.FromIngameY (unit.UnitDef.FootprintY * 16)  };  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform {  	CenterX = 8'  	CenterY = 8'  	ScaleX = 1 / 16.0 * mission.FromIngameX (unit.UnitDef.FootprintX * 16)'  	ScaleY = 1 / 16.0 * mission.FromIngameY (unit.UnitDef.FootprintY * 16)  };  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform {  	CenterX = 8'  	CenterY = 8'  	ScaleX = 1 / 16.0 * mission.FromIngameX (unit.UnitDef.FootprintX * 16)'  	ScaleY = 1 / 16.0 * mission.FromIngameY (unit.UnitDef.FootprintY * 16)  };  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: while (newHeading > 360)  	newHeading = newHeading - 360;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: while (newHeading > 360)  	newHeading = newHeading - 360;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: newHeading = newHeading - 360;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: while (newHeading < 0)  	newHeading = newHeading + 360;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: newHeading = newHeading + 360;  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleX = 1 / 16.0 * mission.FromIngameX (Unit.UnitDef.FootprintX * 16);  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleX = 1 / 16.0 * mission.FromIngameX (Unit.UnitDef.FootprintX * 16);  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleY = 1 / 16.0 * mission.FromIngameY (Unit.UnitDef.FootprintY * 16);  
Magic Number,MissionEditor2,UnitIcon,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleY = 1 / 16.0 * mission.FromIngameY (Unit.UnitDef.FootprintY * 16);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,ZoomControl,The following statement contains a magic number: MinZoom = 0.5;  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,ZoomControl,The following statement contains a magic number: MaxZoom = 100;  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,ZoomControl,The following statement contains a magic number: InitialZoom = 0.5;  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,ZoomControl,The following statement contains a magic number: ZoomStep = 1.3;  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: mouseMoveXAnimation.Duration = new Duration (TimeSpan.FromMilliseconds (50));  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: mouseMoveYAnimation.Duration = new Duration (TimeSpan.FromMilliseconds (50));  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomM11Animation.Duration = new Duration (TimeSpan.FromMilliseconds (200));  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomM22Animation.Duration = new Duration (TimeSpan.FromMilliseconds (200));  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomXAnimation.Duration = new Duration (TimeSpan.FromMilliseconds (200));  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomYAnimation.Duration = new Duration (TimeSpan.FromMilliseconds (200));  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: if (zoomInButton != null)  	zoomInButton.Click += (s' e) => ZoomAndCenter (zoom * ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: if (zoomInButton != null)  	zoomInButton.Click += (s' e) => ZoomAndCenter (zoom * ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomInButton.Click += (s' e) => ZoomAndCenter (zoom * ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomInButton.Click += (s' e) => ZoomAndCenter (zoom * ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: if (zoomOutButton != null)  	zoomOutButton.Click += (s' e) => ZoomAndCenter (zoom / ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: if (zoomOutButton != null)  	zoomOutButton.Click += (s' e) => ZoomAndCenter (zoom / ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomOutButton.Click += (s' e) => ZoomAndCenter (zoom / ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomControl,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomControl.cs,OnApplyTemplate,The following statement contains a magic number: zoomOutButton.Click += (s' e) => ZoomAndCenter (zoom / ZoomStep' ActualWidth / 2' ActualHeight / 2);  
Magic Number,MissionEditor2,ZoomConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The following statement contains a magic number: x = 2 - x - 0.01;  
Magic Number,MissionEditor2,ZoomConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The following statement contains a magic number: x = 2 - x - 0.01;  
Magic Number,MissionEditor2,ZoomConverter,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The following statement contains a magic number: return x > 1 ? 1 / (x + (x - 1) * 2) : 1 / x;  
Magic Number,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,PlaceUnitIcon,The following statement contains a magic number: unitIcon.Bind (Canvas.LeftProperty' unit' "X"' BindingMode.OneWay' new TranslateConverter ()' -8);  
Magic Number,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,PlaceUnitIcon,The following statement contains a magic number: unitIcon.Bind (Canvas.TopProperty' unit' "Y"' BindingMode.OneWay' new TranslateConverter ()' -8);  
Magic Number,MissionEditor2,CreateUnitsPane,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The following statement contains a magic number: if (unitDefGrid.Grid.SelectedItem != null && DateTime.Now - mouseDownDate < TimeSpan.FromMilliseconds (150) && e.ChangedButton == MouseButton.Left && Keyboard.Modifiers == ModifierKeys.None) {  	var unitType = (UnitInfo)unitDefGrid.Grid.SelectedItem;  	var mousePos = e.GetPosition (unitCanvas);  	var player = (Player)playerListBox.SelectedItem;  	var unitStartInfo = new UnitStartInfo (unitType' player' SnapToGridX (mousePos.X)' SnapToGridY (mousePos.Y));  	((INotifyPropertyChanged)unitStartInfo).PropertyChanged += (se' ea) =>// fixme: leak  	 {  		if (ea.PropertyName == "Groups")  			MainWindow.Instance.Mission.RaisePropertyChanged ("AllGroups");  	};  	action.Units.Add (unitStartInfo);  	PlaceUnitIcon (unitStartInfo);  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction) {  	var action = (MarkerPointAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction) {  	var action = (MarkerPointAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction) {  	var action = (MarkerPointAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction) {  	var action = (MarkerPointAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction) {  	var action = (MarkerPointAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction) {  	var action = (MarkerPointAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is SetCameraPointTargetAction) {  	var action = (SetCameraPointTargetAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  } else if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is AddPointToObjectiveAction) {  	var action = (AddPointToObjectiveAction)currentLogic;  	Action refreshPosition = delegate {  		Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  		Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  	};  	refreshPosition ();  	markerCanvas.MouseDown += (s' ea) => {  		var mousePos = ea.GetPosition (markerCanvas);  		action.X = mousePos.X;  		action.Y = mousePos.Y;  		refreshPosition ();  	};  }  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: Canvas.SetLeft (flagPole' action.X - flagPole.Width / 2);  
Magic Number,MissionEditor2,ListTemplates,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: Canvas.SetTop (flagPole' action.Y - flagPole.Height / 2);  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: autosaveTimer.Interval = new TimeSpan (0' 5' 0);  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction ("Point Camera at Map Position"' () => new SetCameraPointTargetAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "Camera");  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction ("Point Camera at Map Position"' () => new SetCameraPointTargetAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "Camera");  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction ("Add Point to Objective"' () => new AddPointToObjectiveAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction ("Add Point to Objective"' () => new AddPointToObjectiveAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction ("Show Marker Point"' () => new MarkerPointAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction ("Show Marker Point"' () => new MarkerPointAction (Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveItem,The following statement contains a magic number: if (direction == MoveDirection.Up) {  	if (index == 0)  		return false;  	if (toEnd)  		trigger.Logic.Move (index' 0);  	else  		trigger.Logic.Move (index' index - 1);  } else if (direction == MoveDirection.Down) {  	if (index + 2 > trigger.Logic.Count)  		return false;  	if (toEnd)  		trigger.Logic.Move (index' trigger.Logic.Count - 1);  	else  		trigger.Logic.Move (index' index + 1);  }  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveItem,The following statement contains a magic number: if (direction == MoveDirection.Down) {  	if (index + 2 > trigger.Logic.Count)  		return false;  	if (toEnd)  		trigger.Logic.Move (index' trigger.Logic.Count - 1);  	else  		trigger.Logic.Move (index' index + 1);  }  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveItem,The following statement contains a magic number: if (index + 2 > trigger.Logic.Count)  	return false;  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveTrigger,The following statement contains a magic number: if (direction == MoveDirection.Up) {  	if (index == 0)  		return false;  	if (toEnd)  		Mission.Triggers.Move (index' 0);  	else  		Mission.Triggers.Move (index' index - 1);  } else if (direction == MoveDirection.Down) {  	if (index + 2 > Mission.Triggers.Count)  		return false;  	if (toEnd)  		Mission.Triggers.Move (index' Mission.Triggers.Count - 1);  	else  		Mission.Triggers.Move (index' index + 1);  }  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveTrigger,The following statement contains a magic number: if (direction == MoveDirection.Down) {  	if (index + 2 > Mission.Triggers.Count)  		return false;  	if (toEnd)  		Mission.Triggers.Move (index' Mission.Triggers.Count - 1);  	else  		Mission.Triggers.Move (index' index + 1);  }  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveTrigger,The following statement contains a magic number: if (index + 2 > Mission.Triggers.Count)  	return false;  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logic_Loaded,The following statement contains a magic number: menu.AddAction ("Move Up 5 Spaces"' () => MoveItem (MoveDirection.Up' item' 5));  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logic_Loaded,The following statement contains a magic number: menu.AddAction ("Move Down 5 Spaces"' () => MoveItem (MoveDirection.Down' item' 5));  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,trigger_Loaded,The following statement contains a magic number: menu.AddAction ("Move Up 5 Spaces"' () => MoveTrigger (MoveDirection.Up' trigger' 5));  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,trigger_Loaded,The following statement contains a magic number: menu.AddAction ("Move Down 5 Spaces"' () => MoveTrigger (MoveDirection.Down' trigger' 5));  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The following statement contains a magic number: editMenu.AddAction ("Move Up 5 Spaces"' () => MoveCurrentItem (MoveDirection.Up' 5));  
Magic Number,MissionEditor2,MainWindow,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The following statement contains a magic number: editMenu.AddAction ("Move Down 5 Spaces"' () => MoveCurrentItem (MoveDirection.Down' 5));  
