Implementation smell,Namespace,Class,File,Method,Description
Long Method,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logicGrid_Drop,The method has 138 lines of code.
Complex Method,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,Cyclomatic complexity of the method is 10
Long Parameter List,MissionEditor2,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Utils.cs,Bind,The method has 7 parameters. Parameters: target' property' source' path' mode' converter' converterParameter
Long Statement,MissionEditor2,GiveFactoryOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveFactoryOrdersPane.xaml.cs,UserControl_Loaded,The length of the statement  "			action.BuiltUnitsGroups.CollectionChanged += (s' ea) => setGroupsButton.Content = String.Join("\r\n"' action.BuiltUnitsGroups); // leak " is 135.
Long Statement,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,OrderMouseDown,The length of the statement  "                        dragInfo = new DragInfo { Elements = new List<FrameworkElement> { element }' ElementOrigins =  origins' MouseOrigin = startPoint }; " is 131.
Long Statement,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The length of the statement  "			var border = new Border { BorderThickness = new Thickness(1)' CornerRadius = new CornerRadius(1)' Height = 16' Width = 16 }; " is 124.
Long Statement,MissionEditor2,Utils,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\Utils.cs,Bind,The length of the statement  "			var binding = new Binding(path) { Source = source' Mode = mode' Converter = converter' ConverterParameter = converterParameter }; " is 129.
Long Statement,MissionEditor2,App,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\App.xaml.cs,ReportError,The length of the statement  "				var version = ApplicationDeployment.IsNetworkDeployed ? ApplicationDeployment.CurrentDeployment.CurrentVersion.ToString() : "Unknown"; " is 134.
Long Statement,MissionEditor2,App,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\App.xaml.cs,ReportError,The length of the statement  "				var errorLogFile = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\My Games\\Spring\\MissionEditorErrors.txt"; " is 132.
Long Statement,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The length of the statement  "			if (unitDefGrid.Grid.SelectedItem != null && DateTime.Now - mouseDownDate < TimeSpan.FromMilliseconds(150) && e.ChangedButton == MouseButton.Left && " is 148.
Long Statement,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitIcon_MouseDown,The length of the statement  "					if (unitCanvas.CaptureMouse()) dragInfo = new DragInfo { Elements = elements' ElementOrigins = origins' MouseOrigin = startPoint }; " is 131.
Long Statement,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitIcon_MouseUp,The length of the statement  "                if (Keyboard.Modifiers == ModifierKeys.Shift || Keyboard.Modifiers == ModifierKeys.Control) unitIcon.IsSelected = !unitIcon.IsSelected; " is 135.
Long Statement,MissionEditor2,LogicTemplateSelector,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\LogicTemplateSelector.cs,SelectTemplate,The length of the statement  "			else if (item is DummyCondition || item is DummyAction || item is ConditionsFolder || item is ActionsFolder) resourceName = "dummyTemplate"; " is 140.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "			var saveFileDialog = new System.Windows.Forms.SaveFileDialog { DefaultExt = sdd ? "zip" : "sdz"' Filter = filter' RestoreDirectory = true }; " is 140.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "					System.Windows.Forms.DialogResult confirmOverwrite = System.Windows.Forms.MessageBox.Show("The .sdd already exists in the selected directory.\nIt will be deleted and replaced.\nContinue?"' " is 188.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "						//if (sdd) fileName = Path.ChangeExtension(fileName' "zip"); // this is the temporary zip' leave the .sdd path for the actual .sdd " is 130.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "										var scriptPath = String.Format("{0}\\{1}.txt"' Path.GetDirectoryName(fileName)' Path.GetFileNameWithoutExtension(fileName)); " is 124.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,BuildMission,The length of the statement  "										var scriptPathLua = String.Format("{0}\\{1}.lua"' Path.GetDirectoryName(fileName)' Path.GetFileNameWithoutExtension(fileName)); " is 127.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "            String GuiMessagePersistentDesc = "Hello!\nI differ from the regular GUI message in that I can't pause the game' have no close button' and there can be only one of me!\nI require a Chili widget to work!"; " is 204.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "            addAction("Point Camera at Map Position"' () => new SetCameraPointTargetAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "Camera"); " is 153.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "            addAction("Add Point to Objective"' () => new AddPointToObjectiveAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI"); " is 143.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "            addAction("Show Convo Message"' () => new ConvoMessageAction("Hello! I am a talking head for missions! I require a custom widget to work!")' "GUI"); " is 148.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The length of the statement  "            addAction("Show Marker Point"' () => new MarkerPointAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI"); " is 130.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,SaveMissionCheckSuccess,The length of the statement  "            var saveFileDialog = new SaveFileDialog { DefaultExt = WelcomeDialog.MissionExtension' Filter = WelcomeDialog.MissionDialogFilter' RestoreDirectory = true }; " is 157.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The length of the statement  "            var aboutString = String.Format("Mission Editor {0}\n\nby Quantum and KingRaptor\n\nFor help with the program' visit {1}"' version' GlobalConst.BaseSiteUrl + "/Wiki/MissionEditorStartPage"); " is 190.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The length of the statement  "            help.AddAction("About"' () => MessageBox.Show(aboutString' "About Mission Editor"' MessageBoxButton.OK' MessageBoxImage.Information)); " is 134.
Long Statement,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,ShowSaveWarning,The length of the statement  "            string msg = exit ? "You will lose any unsaved changes' save before exiting?" : "You will lose any unsaved changes' save first?"; " is 129.
Complex Conditional,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The conditional expression  "pos.X >= x1 && pos.X <= x2 && pos.Y >= y1 && pos.Y <= y2"  is complex.
Complex Conditional,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The conditional expression  "unitDefGrid.Grid.SelectedItem != null && DateTime.Now - mouseDownDate < TimeSpan.FromMilliseconds(150) && e.ChangedButton == MouseButton.Left &&  			    Keyboard.Modifiers == ModifierKeys.None"  is complex.
Complex Conditional,MissionEditor2,LogicTemplateSelector,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\LogicTemplateSelector.cs,SelectTemplate,The conditional expression  "item is DummyCondition || item is DummyAction || item is ConditionsFolder || item is ActionsFolder"  is complex.
Complex Conditional,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveItem,The conditional expression  "(displacedType is Action && item is Condition) ||                  (displacedType is Condition && item is Action)"  is complex.
Empty Catch Block,MissionEditor2,NewMissionDialog,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\NewMissionDialog.xaml.cs,Hyperlink_RequestNavigate,The method has an empty catch block.
Magic Number,MissionEditor2,GiveFactoryOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveFactoryOrdersPane.xaml.cs,MoveDownButton_Click,The following statement contains a magic number: if (index + 2 > action.BuildOrders.Count) return;
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,The following statement contains a magic number: switch (orderTypeName)  			{  				case "Move":  					newOrder = new MoveOrder(position.X' position.Y);  					break;  				case "Patrol":  					newOrder = new PatrolOrder(position.X' position.Y);  					break;  				case "Stop":  					newOrder = new StopOrder();  					break;  				case "Fight":  					newOrder = new FightOrder(position.X' position.Y);  					break;  				case "Attack":  					newOrder = new AttackOrder(position.X' position.Y);  					break;                  case "Hold Position":                      newOrder = new MoveStateOrder(0);                      break;                  case "Maneuver":                      newOrder = new MoveStateOrder(1);                      break;                  case "Roam":                      newOrder = new MoveStateOrder(2);                      break;                  case "Hold Fire":                      newOrder = new FireStateOrder(0);                      break;                  case "Return Fire":                      newOrder = new FireStateOrder(1);                      break;                  case "Fire At Will":                      newOrder = new FireStateOrder(2);                      break;  				case "Enable Repeat Mode":  					newOrder = new RepeatOrder(1);  					break;  				case "Disable Repeat Mode":  					newOrder = new RepeatOrder(0);  					break;  				default:  					throw new Exception("Ordertype not expected: " + orderTypeName);  			}
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,CreateNewOrder,The following statement contains a magic number: switch (orderTypeName)  			{  				case "Move":  					newOrder = new MoveOrder(position.X' position.Y);  					break;  				case "Patrol":  					newOrder = new PatrolOrder(position.X' position.Y);  					break;  				case "Stop":  					newOrder = new StopOrder();  					break;  				case "Fight":  					newOrder = new FightOrder(position.X' position.Y);  					break;  				case "Attack":  					newOrder = new AttackOrder(position.X' position.Y);  					break;                  case "Hold Position":                      newOrder = new MoveStateOrder(0);                      break;                  case "Maneuver":                      newOrder = new MoveStateOrder(1);                      break;                  case "Roam":                      newOrder = new MoveStateOrder(2);                      break;                  case "Hold Fire":                      newOrder = new FireStateOrder(0);                      break;                  case "Return Fire":                      newOrder = new FireStateOrder(1);                      break;                  case "Fire At Will":                      newOrder = new FireStateOrder(2);                      break;  				case "Enable Repeat Mode":  					newOrder = new RepeatOrder(1);  					break;  				case "Disable Repeat Mode":  					newOrder = new RepeatOrder(0);  					break;  				default:  					throw new Exception("Ordertype not expected: " + orderTypeName);  			}
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,canvas_PreviewMouseUp,The following statement contains a magic number: if (dragInfo == null)  			{  				if (DateTime.Now - canvasMouseDownDate < TimeSpan.FromMilliseconds(150) && e.ChangedButton == MouseButton.Left)  				{  					var mousePos = e.GetPosition(canvas);  					CreateNewOrder(mousePos);  				}  			}  			else  			{  				e.Handled = true;  				canvas.ReleaseMouseCapture();  				dragInfo = null;  			}
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,NewBoundLine,The following statement contains a magic number: var line = new Line  			{  				Stroke = Brushes.Red'  				StrokeThickness = 2.5'  				Opacity = 0.5'  				StrokeStartLineCap = PenLineCap.Round'  				StrokeEndLineCap = PenLineCap.Round  			};
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,NewBoundLine,The following statement contains a magic number: var line = new Line  			{  				Stroke = Brushes.Red'  				StrokeThickness = 2.5'  				Opacity = 0.5'  				StrokeStartLineCap = PenLineCap.Round'  				StrokeEndLineCap = PenLineCap.Round  			};
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: foreach (var order in action.Orders.OfType<Positionable>())  			{  				var icon = new OrderIcon();  				icon.DataContext = order;  				icon.Bind(Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter()' -4);  				icon.Bind(Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter()' -2);  				Canvas.SetZIndex(icon' 10);  				canvas.Children.Add(icon);  				icon.MouseDown += OrderMouseDown;                  icon.MouseUp += OrderMouseUp;  			}
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: foreach (var order in action.Orders.OfType<Positionable>())  			{  				var icon = new OrderIcon();  				icon.DataContext = order;  				icon.Bind(Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter()' -4);  				icon.Bind(Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter()' -2);  				Canvas.SetZIndex(icon' 10);  				canvas.Children.Add(icon);  				icon.MouseDown += OrderMouseDown;                  icon.MouseUp += OrderMouseUp;  			}
Magic Number,MissionEditor2,GiveOrdersPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\GiveOrdersPane.xaml.cs,UpdateLines,The following statement contains a magic number: foreach (var order in action.Orders.OfType<Positionable>())  			{  				var icon = new OrderIcon();  				icon.DataContext = order;  				icon.Bind(Canvas.LeftProperty' order' "X"' BindingMode.OneWay' new TranslateConverter()' -4);  				icon.Bind(Canvas.TopProperty' order' "Y"' BindingMode.OneWay' new TranslateConverter()' -2);  				Canvas.SetZIndex(icon' 10);  				canvas.Children.Add(icon);  				icon.MouseDown += OrderMouseDown;                  icon.MouseUp += OrderMouseUp;  			}
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: var info = new CircleDragInfo  				{  					Area = area'  					Center = new Ellipse {Fill = Brushes.Yellow' Width = centerSize' Height = centerSize' Opacity = 0.5}'  					Circle = new Ellipse  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.R*2'  							Height = area.R*2  						}  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: var info = new CircleDragInfo  				{  					Area = area'  					Center = new Ellipse {Fill = Brushes.Yellow' Width = centerSize' Height = centerSize' Opacity = 0.5}'  					Circle = new Ellipse  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.R*2'  							Height = area.R*2  						}  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: var info = new CircleDragInfo  				{  					Area = area'  					Center = new Ellipse {Fill = Brushes.Yellow' Width = centerSize' Height = centerSize' Opacity = 0.5}'  					Circle = new Ellipse  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.R*2'  							Height = area.R*2  						}  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: var info = new CircleDragInfo  				{  					Area = area'  					Center = new Ellipse {Fill = Brushes.Yellow' Width = centerSize' Height = centerSize' Opacity = 0.5}'  					Circle = new Ellipse  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.R*2'  							Height = area.R*2  						}  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: var info = new CircleDragInfo  				{  					Area = area'  					Center = new Ellipse {Fill = Brushes.Yellow' Width = centerSize' Height = centerSize' Opacity = 0.5}'  					Circle = new Ellipse  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.R*2'  							Height = area.R*2  						}  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: Canvas.SetLeft(info.Center' area.X - centerSize/2.0);
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddCylinder,The following statement contains a magic number: Canvas.SetTop(info.Center' area.Y - centerSize/2.0);
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddRectangle,The following statement contains a magic number: var info = new RectangleDragInfo  				{  					Area = area'  					Rectangle = new Rectangle  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.Width'  							Height = area.Height  						}'  					StartPoint = new Point(area.X' area.Y)  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,AddRectangle,The following statement contains a magic number: var info = new RectangleDragInfo  				{  					Area = area'  					Rectangle = new Rectangle  						{  							Fill = Brushes.Red'  							StrokeThickness = 5'  							Opacity = 0.3'  							Stroke = Brushes.Yellow'  							Width = area.Width'  							Height = area.Height  						}'  					StartPoint = new Point(area.X' area.Y)  				};
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (canvas.IsMouseCaptured)  			{  				if (dragInfo is CircleDragInfo)  				{  					var info = (CircleDragInfo) dragInfo;  					var r = Utils.GetDistance(info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  					info.Area.R = r;  					info.Circle.Width = r*2;  					info.Circle.Height = r*2;  					Canvas.SetLeft(info.Circle' info.Area.X - r);  					Canvas.SetTop(info.Circle' info.Area.Y - r);  				}  				else if (dragInfo is RectangleDragInfo)  				{  					var info = (RectangleDragInfo) dragInfo;  					var dx = mousePosition.X - info.StartPoint.X;  					var dy = mousePosition.Y - info.StartPoint.Y;    					if (dx > 0)  					{  						Canvas.SetLeft(info.Rectangle' info.StartPoint.X);  						info.Rectangle.Width = dx;  						info.Area.X = info.StartPoint.X;  						info.Area.Width = dx;  					}  					else  					{  						Canvas.SetLeft(info.Rectangle' info.StartPoint.X + dx);  						info.Rectangle.Width = -dx;  						info.Area.X = info.StartPoint.X + dx;  						info.Area.Width = -dx;  					}    					if (dy > 0)  					{  						Canvas.SetTop(info.Rectangle' info.StartPoint.Y);  						info.Rectangle.Height = dy;  						info.Area.Y = info.StartPoint.Y;  						info.Area.Height = dy;  					}  					else  					{  						Canvas.SetTop(info.Rectangle' info.StartPoint.Y + dy);  						info.Rectangle.Height = -dy;  						info.Area.Y = info.StartPoint.Y + dy;  						info.Area.Height = -dy;  					}  				}  			}
Magic Number,MissionEditor2,UnitEnteredAreaControl,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitEnteredAreaControl.xaml.cs,UserControl_PreviewMouseMove,The following statement contains a magic number: if (canvas.IsMouseCaptured)  			{  				if (dragInfo is CircleDragInfo)  				{  					var info = (CircleDragInfo) dragInfo;  					var r = Utils.GetDistance(info.Area.X' info.Area.Y' mousePosition.X' mousePosition.Y);  					info.Area.R = r;  					info.Circle.Width = r*2;  					info.Circle.Height = r*2;  					Canvas.SetLeft(info.Circle' info.Area.X - r);  					Canvas.SetTop(info.Circle' info.Area.Y - r);  				}  				else if (dragInfo is RectangleDragInfo)  				{  					var info = (RectangleDragInfo) dragInfo;  					var dx = mousePosition.X - info.StartPoint.X;  					var dy = mousePosition.Y - info.StartPoint.Y;    					if (dx > 0)  					{  						Canvas.SetLeft(info.Rectangle' info.StartPoint.X);  						info.Rectangle.Width = dx;  						info.Area.X = info.StartPoint.X;  						info.Area.Width = dx;  					}  					else  					{  						Canvas.SetLeft(info.Rectangle' info.StartPoint.X + dx);  						info.Rectangle.Width = -dx;  						info.Area.X = info.StartPoint.X + dx;  						info.Area.Width = -dx;  					}    					if (dy > 0)  					{  						Canvas.SetTop(info.Rectangle' info.StartPoint.Y);  						info.Rectangle.Height = dy;  						info.Area.Y = info.StartPoint.Y;  						info.Area.Height = dy;  					}  					else  					{  						Canvas.SetTop(info.Rectangle' info.StartPoint.Y + dy);  						info.Rectangle.Height = -dy;  						info.Area.Y = info.StartPoint.Y + dy;  						info.Area.Height = -dy;  					}  				}  			}
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: var border = new Border { BorderThickness = new Thickness(1)' CornerRadius = new CornerRadius(1)' Height = 16' Width = 16 };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: var border = new Border { BorderThickness = new Thickness(1)' CornerRadius = new CornerRadius(1)' Height = 16' Width = 16 };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: if (isBlurred) border.Opacity = 0.2;
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: Canvas.SetLeft(border' unit.X - border.Width/2);
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: Canvas.SetTop(border' unit.Y - border.Height/2);
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: Panel.SetZIndex(border' -10);
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform  			                         {  			                         	CenterX = 8'  			                         	CenterY = 8'  			                         	ScaleX = 1/16.0*mission.FromIngameX(unit.UnitDef.FootprintX*16)'  			                         	ScaleY = 1/16.0*mission.FromIngameY(unit.UnitDef.FootprintY*16)  			                         };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform  			                         {  			                         	CenterX = 8'  			                         	CenterY = 8'  			                         	ScaleX = 1/16.0*mission.FromIngameX(unit.UnitDef.FootprintX*16)'  			                         	ScaleY = 1/16.0*mission.FromIngameY(unit.UnitDef.FootprintY*16)  			                         };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform  			                         {  			                         	CenterX = 8'  			                         	CenterY = 8'  			                         	ScaleX = 1/16.0*mission.FromIngameX(unit.UnitDef.FootprintX*16)'  			                         	ScaleY = 1/16.0*mission.FromIngameY(unit.UnitDef.FootprintY*16)  			                         };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform  			                         {  			                         	CenterX = 8'  			                         	CenterY = 8'  			                         	ScaleX = 1/16.0*mission.FromIngameX(unit.UnitDef.FootprintX*16)'  			                         	ScaleY = 1/16.0*mission.FromIngameY(unit.UnitDef.FootprintY*16)  			                         };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform  			                         {  			                         	CenterX = 8'  			                         	CenterY = 8'  			                         	ScaleX = 1/16.0*mission.FromIngameX(unit.UnitDef.FootprintX*16)'  			                         	ScaleY = 1/16.0*mission.FromIngameY(unit.UnitDef.FootprintY*16)  			                         };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,PlaceSimplifiedUnit,The following statement contains a magic number: border.RenderTransform = new ScaleTransform  			                         {  			                         	CenterX = 8'  			                         	CenterY = 8'  			                         	ScaleX = 1/16.0*mission.FromIngameX(unit.UnitDef.FootprintX*16)'  			                         	ScaleY = 1/16.0*mission.FromIngameY(unit.UnitDef.FootprintY*16)  			                         };
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: while (newHeading > 360) newHeading = newHeading - 360;
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: while (newHeading > 360) newHeading = newHeading - 360;
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,onRotateDelta,The following statement contains a magic number: while (newHeading < 0) newHeading = newHeading + 360;
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleX = 1/16.0*mission.FromIngameX(Unit.UnitDef.FootprintX*16);
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleX = 1/16.0*mission.FromIngameX(Unit.UnitDef.FootprintX*16);
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleY = 1/16.0*mission.FromIngameY(Unit.UnitDef.FootprintY*16);
Magic Number,MissionEditor2,UnitIcon,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\UnitIcon.xaml.cs,UserControl_Loaded,The following statement contains a magic number: ScaleTransform.ScaleY = 1/16.0*mission.FromIngameY(Unit.UnitDef.FootprintY*16);
Magic Number,MissionEditor2,ZoomConverter,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The following statement contains a magic number: x = 2 - x - 0.01;
Magic Number,MissionEditor2,ZoomConverter,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The following statement contains a magic number: x = 2 - x - 0.01;
Magic Number,MissionEditor2,ZoomConverter,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ZoomConverter.cs,Convert,The following statement contains a magic number: return x > 1 ? 1 / (x + (x - 1) * 2) : 1 / x;
Magic Number,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,PlaceUnitIcon,The following statement contains a magic number: unitIcon.Bind(Canvas.LeftProperty' unit' "X"' BindingMode.OneWay' new TranslateConverter()' -8);
Magic Number,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,PlaceUnitIcon,The following statement contains a magic number: unitIcon.Bind(Canvas.TopProperty' unit' "Y"' BindingMode.OneWay' new TranslateConverter()' -8);
Magic Number,MissionEditor2,CreateUnitsPane,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\CreateUnitsPane.xaml.cs,unitCanvas_PreviewMouseUp,The following statement contains a magic number: if (unitDefGrid.Grid.SelectedItem != null && DateTime.Now - mouseDownDate < TimeSpan.FromMilliseconds(150) && e.ChangedButton == MouseButton.Left &&  			    Keyboard.Modifiers == ModifierKeys.None)  			{  				var unitType = (UnitInfo)unitDefGrid.Grid.SelectedItem;  				var mousePos = e.GetPosition(unitCanvas);  				var player = (Player)playerListBox.SelectedItem;  				var unitStartInfo = new UnitStartInfo(unitType' player' SnapToGridX(mousePos.X)' SnapToGridY(mousePos.Y));  				((INotifyPropertyChanged)unitStartInfo).PropertyChanged += (se' ea) => // fixme: leak  					{ if (ea.PropertyName == "Groups") MainWindow.Instance.Mission.RaisePropertyChanged("AllGroups"); };  				action.Units.Add(unitStartInfo);  				PlaceUnitIcon(unitStartInfo);  			}
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: var flagPole = new Ellipse { Height = 20' Width = 20' Stroke = Brushes.Red' StrokeThickness = 5 };
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: var flagPole = new Ellipse { Height = 20' Width = 20' Stroke = Brushes.Red' StrokeThickness = 5 };
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: var flagPole = new Ellipse { Height = 20' Width = 20' Stroke = Brushes.Red' StrokeThickness = 5 };
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction)              {                  var action = (MarkerPointAction)currentLogic;                  Action refreshPosition = delegate                      {                          Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                          Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                      };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                      {                          var mousePos = ea.GetPosition(markerCanvas);                          action.X = mousePos.X;                          action.Y = mousePos.Y;                          refreshPosition();                      };              }              else if (currentLogic is SetCameraPointTargetAction)              {                  var action = (SetCameraPointTargetAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }              else if (currentLogic is AddPointToObjectiveAction)              {                  var action = (AddPointToObjectiveAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction)              {                  var action = (MarkerPointAction)currentLogic;                  Action refreshPosition = delegate                      {                          Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                          Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                      };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                      {                          var mousePos = ea.GetPosition(markerCanvas);                          action.X = mousePos.X;                          action.Y = mousePos.Y;                          refreshPosition();                      };              }              else if (currentLogic is SetCameraPointTargetAction)              {                  var action = (SetCameraPointTargetAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }              else if (currentLogic is AddPointToObjectiveAction)              {                  var action = (AddPointToObjectiveAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction)              {                  var action = (MarkerPointAction)currentLogic;                  Action refreshPosition = delegate                      {                          Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                          Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                      };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                      {                          var mousePos = ea.GetPosition(markerCanvas);                          action.X = mousePos.X;                          action.Y = mousePos.Y;                          refreshPosition();                      };              }              else if (currentLogic is SetCameraPointTargetAction)              {                  var action = (SetCameraPointTargetAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }              else if (currentLogic is AddPointToObjectiveAction)              {                  var action = (AddPointToObjectiveAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction)              {                  var action = (MarkerPointAction)currentLogic;                  Action refreshPosition = delegate                      {                          Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                          Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                      };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                      {                          var mousePos = ea.GetPosition(markerCanvas);                          action.X = mousePos.X;                          action.Y = mousePos.Y;                          refreshPosition();                      };              }              else if (currentLogic is SetCameraPointTargetAction)              {                  var action = (SetCameraPointTargetAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }              else if (currentLogic is AddPointToObjectiveAction)              {                  var action = (AddPointToObjectiveAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction)              {                  var action = (MarkerPointAction)currentLogic;                  Action refreshPosition = delegate                      {                          Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                          Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                      };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                      {                          var mousePos = ea.GetPosition(markerCanvas);                          action.X = mousePos.X;                          action.Y = mousePos.Y;                          refreshPosition();                      };              }              else if (currentLogic is SetCameraPointTargetAction)              {                  var action = (SetCameraPointTargetAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }              else if (currentLogic is AddPointToObjectiveAction)              {                  var action = (AddPointToObjectiveAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }
Magic Number,MissionEditor2,ListTemplates,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\ListTemplates.xaml.cs,MarkerPointCanvas_Loaded,The following statement contains a magic number: if (currentLogic is MarkerPointAction)              {                  var action = (MarkerPointAction)currentLogic;                  Action refreshPosition = delegate                      {                          Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                          Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                      };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                      {                          var mousePos = ea.GetPosition(markerCanvas);                          action.X = mousePos.X;                          action.Y = mousePos.Y;                          refreshPosition();                      };              }              else if (currentLogic is SetCameraPointTargetAction)              {                  var action = (SetCameraPointTargetAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }              else if (currentLogic is AddPointToObjectiveAction)              {                  var action = (AddPointToObjectiveAction)currentLogic;                  Action refreshPosition = delegate                  {                      Canvas.SetLeft(flagPole' action.X - flagPole.Width / 2);                      Canvas.SetTop(flagPole' action.Y - flagPole.Height / 2);                  };                  refreshPosition();                  markerCanvas.MouseDown += (s' ea) =>                  {                      var mousePos = ea.GetPosition(markerCanvas);                      action.X = mousePos.X;                      action.Y = mousePos.Y;                      refreshPosition();                  };              }
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: autosaveTimer.Interval = new TimeSpan(0' 5' 0);
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction("Point Camera at Map Position"' () => new SetCameraPointTargetAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "Camera");
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction("Point Camera at Map Position"' () => new SetCameraPointTargetAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "Camera");
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction("Add Point to Objective"' () => new AddPointToObjectiveAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction("Add Point to Objective"' () => new AddPointToObjectiveAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction("Show Marker Point"' () => new MarkerPointAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,GetNewActionMenu,The following statement contains a magic number: addAction("Show Marker Point"' () => new MarkerPointAction(Mission.Map.Texture.Width / 2' Mission.Map.Texture.Height / 2)' "GUI");
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveItem,The following statement contains a magic number: if (direction == MoveDirection.Up)              {                  if (index == 0) return false;                  if (toEnd) trigger.Logic.Move(index' 0);                  else trigger.Logic.Move(index' index - 1);              }              else if (direction == MoveDirection.Down)              {                  if (index + 2 > trigger.Logic.Count) return false;                  if (toEnd) trigger.Logic.Move(index' trigger.Logic.Count - 1);                  else trigger.Logic.Move(index' index + 1);              }
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,MoveTrigger,The following statement contains a magic number: if (direction == MoveDirection.Up)              {                  if (index == 0) return false;                  if (toEnd) Mission.Triggers.Move(index' 0);                  else Mission.Triggers.Move(index' index - 1);              }              else if (direction == MoveDirection.Down)              {                  if (index + 2 > Mission.Triggers.Count) return false;                  if (toEnd) Mission.Triggers.Move(index' Mission.Triggers.Count - 1);                  else Mission.Triggers.Move(index' index + 1);              }
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logic_Loaded,The following statement contains a magic number: menu.AddAction("Move Up 5 Spaces"' () => MoveItem(MoveDirection.Up' item' 5));
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,logic_Loaded,The following statement contains a magic number: menu.AddAction("Move Down 5 Spaces"' () => MoveItem(MoveDirection.Down' item' 5));
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,trigger_Loaded,The following statement contains a magic number: menu.AddAction("Move Up 5 Spaces"' () => MoveTrigger(MoveDirection.Up' trigger' 5));
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,trigger_Loaded,The following statement contains a magic number: menu.AddAction("Move Down 5 Spaces"' () => MoveTrigger(MoveDirection.Down' trigger' 5));
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The following statement contains a magic number: editMenu.AddAction("Move Up 5 Spaces"' () => MoveCurrentItem(MoveDirection.Up' 5));
Magic Number,MissionEditor2,MainWindow,C:\repos\ZeroK-RTS_Zero-K-Infrastructure\MissionEditor\MissionEditor2\MainWindow.xaml.cs,window_Loaded,The following statement contains a magic number: editMenu.AddAction("Move Down 5 Spaces"' () => MoveCurrentItem(MoveDirection.Down' 5));
