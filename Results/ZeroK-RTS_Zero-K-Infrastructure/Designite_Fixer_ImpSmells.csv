Implementation smell,Namespace,Class,File,Method,Description
Long Method,Fixer,DuplicateFinder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\DuplicateFinder.cs,FixDuplicates,The method has 92 lines of code.
Long Method,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,DoStuff,The method has 105 lines of code.
Long Method,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateStructures,The method has 92 lines of code.
Long Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The method has 148 lines of code.
Long Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The method has 65 lines of code.
Complex Method,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,WriteGameLine,Cyclomatic complexity of the method is 9
Complex Method,Fixer,DuplicateFinder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\DuplicateFinder.cs,FixDuplicates,Cyclomatic complexity of the method is 23
Complex Method,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,PurgeGalaxy,Cyclomatic complexity of the method is 8
Complex Method,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,Cyclomatic complexity of the method is 9
Complex Method,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,StartGalaxy,Cyclomatic complexity of the method is 9
Complex Method,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,OwnPlanets,Cyclomatic complexity of the method is 7
Complex Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AddClanLeader,Cyclomatic complexity of the method is 7
Complex Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,MakeActiveClanLeaders,Cyclomatic complexity of the method is 7
Complex Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,Cyclomatic complexity of the method is 27
Complex Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,Cyclomatic complexity of the method is 12
Complex Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,Cyclomatic complexity of the method is 8
Complex Method,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,Cyclomatic complexity of the method is 16
Long Parameter List,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,ReplaceTemplate,The method has 4 parameters.
Long Parameter List,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The method has 5 parameters.
Long Parameter List,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,MassBan,The method has 9 parameters.
Long Statement,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The length of the statement  "	var games = db.SpringBattles.Where (x => DateTime.Now - x.StartTime < TimeSpan.FromDays (60) && !x.IsMission && !x.HasBots && x.PlayerCount >= 6).ToList (); " is 156.
Long Statement,Fixer,SentenceGenerator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,GetNext,The length of the statement  "	var txt = String.Format ("{0} {1} {2} {3} {4} {5}"' article [randomarticle]' noun [randomnoun]' verb [randomverb]' preposition [randompreposition]' article [randomarticle2]' noun [randomnoun2]); " is 194.
Long Statement,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,ReplaceTemplate,The length of the statement  "	templateTitle = "(" + Char.ToUpper (templateTitle [0]) + "|" + Char.ToLower (templateTitle [0]) + ")" + (templateTitle.Length > 1 ? templateTitle.Substring (1) : ""); " is 166.
Long Statement,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,ReplaceTemplate,The length of the statement  "	string newText = Regex.Replace (page.text' @"(?s)\{\{\s*" + templateTitle + @"(.*?)}}\r?\n?" + tailTag' replacement + "==Description=="); " is 137.
Long Statement,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,DoStuff,The length of the statement  "	string dir = Environment.OSVersion.Platform == PlatformID.Unix ? @"home/media/My Book/zkwiki/raw/markup" : @"G:\zkwiki\raw\markup"; " is 131.
Long Statement,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,DoStuff,The length of the statement  "            dir = Environment.OSVersion.Platform == PlatformID.Unix ? @"home/media/My Book/zkwiki/raw_infobox/markup" : @"G:\zkwiki\raw_infobox\markup";" is 140.
Long Statement,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,DoStuff,The length of the statement  "            dir = Environment.OSVersion.Platform == PlatformID.Unix ? @"home/media/My Book/zkwiki/raw_infobox/markup" : @"G:\zkwiki\raw_infobox\markup";" is 140.
Long Statement,Fixer,WikiPortingMW,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\WikiPortingMW.cs,DoStuff,The length of the statement  "                    string text = page.text.Replace(@"http://packages.springrts.com/zkmanual/unitpics/"' @"http://manual.zero-k.info/unitpics/");" is 125.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,PurgeGalaxy,The length of the statement  "		db.Database.ExecuteSqlCommand ("update accounts set pwbombersproduced=0' pwbombersused=0' pwdropshipsproduced=0' pwdropshipsused=0' pwmetalproduced=0' pwmetalused=0' pwattackpoints=0' pwwarpproduced=0' pwwarpused=0' elopw=1500' factionid=null"); " is 245.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,PurgeGalaxy,The length of the statement  "		//db.Database.ExecuteSqlCommand("delete from forumthreads where forumcategoryid={0}"' db.ForumCategories.Single(x => x.ForumMode ==ForumMode.Planets).ForumCategoryID); " is 167.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,PurgeGalaxy,The length of the statement  "			db.Database.ExecuteSqlCommand ("delete from forumthreads where forumcategoryid={0}"' db.ForumCategories.Single (x => x.ForumMode == ForumMode.Clans).ForumCategoryID); " is 166.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizeMaps,The length of the statement  "		var maps = db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.MapPlanetWarsIcon != null).ToList ().Shuffle (); " is 135.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,The length of the statement  "			accountsByFaction.Add (f.Accounts.Where (x => x.LastLogin > DateTime.UtcNow.AddDays (-15)).OrderByDescending (x => x.EloPw).ToList ()); " is 135.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,StartGalaxy,The length of the statement  "			startingPlanets = db.Planets.Where (x => x.GalaxyID == galaxyID && x.PlanetStructures.Any (y => y.StructureType.OwnerChangeWinsGame == true)).OrderBy (x => x.Y).ThenBy (x => x.Y).Select (x => x.PlanetID).ToArray (); " is 215.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateStructures,The length of the statement  "	//foreach (var p in gal.Planets.Where(x => x.Resource.MapIsChickens!=true && !x.Resource.MapIsFfa != true && x.Resource.MapIs1v1 != true).Shuffle().Take(5)) p.AddStruct(artefact); " is 179.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,AddWormholes,The length of the statement  "	var wormhole = db.StructureTypes.Where (x => x.EffectInfluenceSpread > 0).OrderBy (x => x.EffectInfluenceSpread).First (); " is 122.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,AddWormholes,The length of the statement  "	foreach (var p in db.Planets.Where (x => x.GalaxyID == galaxyID && !x.PlanetStructures.Any (y => y.StructureType.EffectInfluenceSpread > 0))) { " is 143.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RemoveTechStructures,The length of the statement  "	foreach (PlanetStructure structure in db.PlanetStructures.Where (x => x.StructureType.Unlock != null && x.StructureType.Unlock.UnlockType == ZkData.UnlockTypes.Unit)) { " is 168.
Long Statement,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RemoveTechStructures,The length of the statement  "		foreach (StructureType structType in db.StructureTypes.Where (x => x.Unlock != null && x.Unlock.UnlockType == ZkData.UnlockTypes.Unit)) { " is 137.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumKarmaLadder,The length of the statement  "	var accounts = db.Accounts.Where (x => x.ForumTotalUpvotes > 0 || x.ForumTotalDownvotes > 0).OrderByDescending (x => x.ForumTotalUpvotes - x.ForumTotalDownvotes).ToList (); " is 172.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumKarmaVotes,The length of the statement  "	var posts = db.ForumPosts.Where (x => x.Upvotes > 0 || x.Downvotes > 0).OrderByDescending (x => x.Upvotes - x.Downvotes).ToList (); " is 131.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumVotesByVoter,The length of the statement  "	var votes = db.AccountForumVotes.Where (x => (accountID == null || x.AccountID == accountID) && (threadID == null || x.ForumPost.ForumThreadID == threadID)).ToList (); " is 167.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,DeleteUserVote,The length of the statement  "	AccountForumVote existingVote = db.AccountForumVotes.SingleOrDefault (x => x.ForumPostID == forumPostID && x.AccountID == accountID); " is 133.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,DeleteUserVotes,The length of the statement  "	var votes = db.AccountForumVotes.Where (x => x.AccountID == accountID && (threadID == null || x.ForumPost.ForumThreadID == threadID) && (onlyNegative == false || x.Vote < 0)).ToList (); " is 185.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumVotesByUser,The length of the statement  "	Account voter = db.Accounts.FirstOrDefault (x => x.AccountID == voterID)' votee = db.Accounts.FirstOrDefault (x => x.AccountID == voteeID); " is 139.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumVotesByUser,The length of the statement  "	var votes = db.AccountForumVotes.Where (x => x.AccountID == voterID && x.ForumPost.AuthorAccountID == voteeID).ToList (); " is 121.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumVotesByUserVoterAgnostic,The length of the statement  "	var votes = db.AccountForumVotes.Where (x => x.ForumPost.AuthorAccountID == voteeID && x.Vote != 0).OrderBy (x => x.Account.Name).ToList (); " is 140.
Long Statement,Fixer,ForumFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\ForumFixer.cs,GetForumVotesByPost,The length of the statement  "		System.Console.WriteLine (post.ForumThreadID + "' " + post.ForumPostID + String.Format (" ({0}/{1})"' post.Upvotes' post.Downvotes)); " is 133.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,setBit,The length of the statement  "		throw new InvalidOperationException ("Der Wert für BitNumber " + BitNumber.ToString () + " war nicht im zulässigen Bereich! (BitNumber = (min)0 - (max)7)"); " is 156.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,unsetBit,The length of the statement  "		throw new InvalidOperationException ("Der Wert für BitNumber " + BitNumber.ToString () + " war nicht im zulässigen Bereich! (BitNumber = (min)0 - (max)7)"); " is 156.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixDuplicatedAccounts,The length of the statement  "		var keep = duplicateGroup.OrderByDescending (x => x.SpringBattlePlayers.Count ()).ThenByDescending (x => x.LastLogin).First (); " is 127.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixStuff,The length of the statement  "            //foreach (CampaignJournal journal in db.CampaignJournals.Where(x => x.CampaignID == campID && x.PlanetID == planet.PlanetID && x.UnlockOnPlanetCompletion))" is 156.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixStuff,The length of the statement  "            //    db.CampaignEvents.InsertOnSubmit(Global.CreateCampaignEvent(accountID' campID' "{1} - Journal entry unlocked: {0}"' uj' uj.CampaignPlanet));" is 146.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AddClanLeader,The length of the statement  "			picked = clan.Accounts.Where (x => x.LastLogin >= DateTime.UtcNow.AddDays (-7)).OrderByDescending (x => x.Level).FirstOrDefault (); " is 131.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,DeleteOldUsers,The length of the statement  "	var acid = dbo.Accounts.Where (x => !x.IsBot && !x.SpringBattles.Any () && !x.ForumThreads.Any () && !x.SpringBattlePlayers.Any (z => !z.IsSpectator) && x.MissionRunCount == 0 && !x.ForumPosts.Any () && !x.ContributionsByAccountID.Any () && x.LastLogin <= limit).OrderBy (x => x.AccountID).Select (x => x.AccountID).ToList (); " is 326.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,DeleteOldUsers,The length of the statement  "	//Console.WriteLine(dbo.Accounts.Where(x=>x.SpringBattlePlayers.Any(y=>y.IsSpectator)  && !x.SpringBattlePlayers.Any(y=>!y.IsSpectator)).Count()); " is 146.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,MakeActiveClanLeaders,The length of the statement  "			var lastTime = db.SpringBattlePlayers.Where (x => x.AccountID == a.AccountID && !x.IsSpectator).OrderByDescending (x => x.SpringBattle.StartTime).Select (x => x.SpringBattle.StartTime).FirstOrDefault (); " is 203.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,MakeActiveClanLeaders,The length of the statement  "			var leader = players.Where (x => x.Item1.AccountRolesByAccountID.Any (y => y.RoleTypeID == leaderRole.RoleTypeID)).FirstOrDefault (); " is 133.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GetMiniBats,The length of the statement  "	foreach (var bid in new ZkDataContext ().SpringBattles.Where (x => !x.IsMission && !x.HasBots).Select (x => x.SpringBattleID)) { " is 128.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GetMiniBats,The length of the statement  "			foreach (var team in b.SpringBattlePlayers.GroupBy (x => x.AllyNumber).OrderByDescending (x => x.First ().IsInVictoryTeam)) " is 123.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,CountPlayers,The length of the statement  "	var accs = db.SpringBattles.OrderByDescending (x => x.SpringBattleID).Take (5000).SelectMany (x => x.SpringBattlePlayers).Where (x => !x.IsSpectator).Select (x => new { " is 168.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,CountPlayers,The length of the statement  "	var durOther = accs.Where (x => x.Account.LobbyVersion != null && !x.Account.LobbyVersion.StartsWith ("ZK")).Sum (x => (long)x.Duration); " is 137.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,CountPlayers,The length of the statement  "	var durZk = accs.Where (x => x.Account.LobbyVersion != null && x.Account.LobbyVersion.StartsWith ("ZK")).Sum (x => (long)x.Duration); " is 133.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The length of the statement  "	foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) { " is 124.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The length of the statement  "		var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault (); " is 241.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AnalyzeModuleUsagePatterns,The length of the statement  "	var players = db.Accounts.Where (x => x.Elo >= 1700 && DateTime.Compare (x.LastLogin.AddMonths (3)' DateTime.UtcNow) > 0).ToList (); " is 132.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AnalyzeCommUsagePatterns,The length of the statement  "	var players = db.Accounts.Where (x => x.Elo >= 1700 && DateTime.Compare (x.LastLogin.AddMonths (3)' DateTime.UtcNow) > 0).ToList (); " is 132.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AnalyzeCommUsagePatterns,The length of the statement  "		var comms = db.Commanders.Where (x => players.Contains (x.AccountByAccountID) && x.ChassisUnlockID == chassis.UnlockID).ToList (); " is 130.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "		AccountCampaignProgress progress = acc.AccountCampaignProgress.FirstOrDefault (x => x.PlanetID == planet.PlanetID && x.CampaignID == planet.CampaignID); " is 152.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "						AccountCampaignVar accountVar = acc.AccountCampaignVars.FirstOrDefault (x => x.CampaignID == campID && x.VarID == variable.RequiredVarID); " is 138.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "					AccountCampaignProgress progress2 = toUnlock.AccountCampaignProgress.FirstOrDefault (x => x.CampaignID == campID && x.AccountID == accountID); " is 142.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "				AccountCampaignVar accountVar = acc.AccountCampaignVars.FirstOrDefault (x => x.CampaignID == campID && x.VarID == variable.RequiredVarID); " is 138.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "				AccountCampaignJournalProgress jp = journal.AccountCampaignJournalProgress.FirstOrDefault (x => x.AccountID == accountID); " is 122.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "			foreach (CampaignJournal journal in db.CampaignJournals.Where (x => x.CampaignID == campID && x.CampaignPlanet.PlanetID == planet.PlanetID && x.UnlockOnPlanetCompletion)) { " is 172.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The length of the statement  "			foreach (CampaignJournal journal in db.CampaignJournals.Where (x => x.CampaignID == campID && x.CampaignPlanet.PlanetID == unlocked.PlanetID && x.UnlockOnPlanetUnlock)) { " is 170.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GetClanStackWinRate,The length of the statement  "	var battles = db.SpringBattles.Where (x => x.SpringBattlePlayers.Count (p => p.Account.ClanID == clanID && p.Account.Elo >= minElo && !p.IsSpectator) >= 2 && x.StartTime.CompareTo (DateTime.Now.AddMonths (-1)) > 0 && x.ResourceByMapResourceID.MapIsSpecial != true).ToList (); " is 275.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GetClanStackWinRate,The length of the statement  "		var players = battle.SpringBattlePlayers.Where (p => p.Account.ClanID == clanID && p.Account.Elo >= minElo && !p.IsSpectator).ToList (); " is 136.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GetAverageElo,The length of the statement  "	foreach (Account acc in db.Accounts.Where (x => x.SpringBattlePlayers.Any (g => g.SpringBattle.StartTime > DateTime.UtcNow.AddMonths (-1)) && x.EloWeight == GlobalConst.EloWeightMax)) { " is 185.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,RenameOldAccounts,The length of the statement  "		db.Database.ExecuteSqlCommand ("update accounts set name = name + '#old#' + cast(accountid as nvarchar)  where lastlogin<'20150101' and (select count(*) from springbattleplayers where accountid=accounts.accountid and isspectator=0) < 10 and LastNewsRead < '20150101' and name not like '%#old#%'"); " is 297.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The length of the statement  "	foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) { " is 132.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The length of the statement  "		Console.WriteLine ("{0};{1:f0};{2:f0};{3};{4}"' entry.Key.Name' entry.Value.Elo' entry.Key.EffectiveElo' entry.Value.Cnt' entry.Key.SpringBattlePlayers.Count (x => !x.IsSpectator && x.SpringBattle.PlayerCount > 2)); " is 215.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The length of the statement  "	foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) { " is 182.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The length of the statement  "	Console.WriteLine ("prwin: {0}'  lessnubwin: {1}'  morevaried: {2}'  count: {3}' predicted:{4}"' winPro' winLessNub' winMoreVaried' cnt' winPredicted); " is 151.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The length of the statement  "			var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ()); " is 132.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The length of the statement  "			var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ()); " is 131.
Long Statement,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The length of the statement  "					var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ()); " is 132.
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  	if (player.IsInVictoryTeam) {  		t1Sum += player.Account.EffectiveElo;  		this.t1Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  		this.t1Names.Add (player.Account.Name);  		t1Count++;  	} else {  		t2Sum += player.Account.EffectiveElo;  		this.t2Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  		this.t2Names.Add (player.Account.Name);  		t2Count++;  	}  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  	if (player.IsInVictoryTeam) {  		t1Sum += player.Account.EffectiveElo;  		this.t1Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  		this.t1Names.Add (player.Account.Name);  		t1Count++;  	} else {  		t2Sum += player.Account.EffectiveElo;  		this.t2Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  		this.t2Names.Add (player.Account.Name);  		t2Count++;  	}  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: if (player.IsInVictoryTeam) {  	t1Sum += player.Account.EffectiveElo;  	this.t1Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  	this.t1Names.Add (player.Account.Name);  	t1Count++;  } else {  	t2Sum += player.Account.EffectiveElo;  	this.t2Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  	this.t2Names.Add (player.Account.Name);  	t2Count++;  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: if (player.IsInVictoryTeam) {  	t1Sum += player.Account.EffectiveElo;  	this.t1Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  	this.t1Names.Add (player.Account.Name);  	t1Count++;  } else {  	t2Sum += player.Account.EffectiveElo;  	this.t2Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  	this.t2Names.Add (player.Account.Name);  	t2Count++;  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: this.t1Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: this.t2Elo.Add (Math.Floor (player.Account.EffectiveElo + 0.5));  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: this.t1Avg = Math.Floor (t1Sum / t1Count + 0.5);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: this.t2Avg = Math.Floor (t2Sum / t2Count + 0.5);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: this.t1Variance = Math.Floor (Variance (this.t1Elo' this.t1Avg) + 0.5);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,BattleBalanceData,The following statement contains a magic number: this.t2Variance = Math.Floor (Variance (this.t2Elo' this.t2Avg) + 0.5);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,Variance,The following statement contains a magic number: foreach (double value in values) {  	variance += Math.Pow ((value - mean)' 2);  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,Variance,The following statement contains a magic number: variance += Math.Pow ((value - mean)' 2);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: foreach (SpringBattle game in games) {  	bool anyInvalidPlayers = false;  	int count = 0;  	foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  		if (player.Account.EloWeight < 5) {  			anyInvalidPlayers = true;  			break;  		} else  			count++;  	}  	if (!anyInvalidPlayers && count >= 6 && count <= 24)  		games2.Add (game);  	numProcessed++;  	if (numProcessed % 50 == 0)  		Console.WriteLine ("{0} of {1} selected"' games2.Count' numProcessed);  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: foreach (SpringBattle game in games) {  	bool anyInvalidPlayers = false;  	int count = 0;  	foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  		if (player.Account.EloWeight < 5) {  			anyInvalidPlayers = true;  			break;  		} else  			count++;  	}  	if (!anyInvalidPlayers && count >= 6 && count <= 24)  		games2.Add (game);  	numProcessed++;  	if (numProcessed % 50 == 0)  		Console.WriteLine ("{0} of {1} selected"' games2.Count' numProcessed);  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: foreach (SpringBattle game in games) {  	bool anyInvalidPlayers = false;  	int count = 0;  	foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  		if (player.Account.EloWeight < 5) {  			anyInvalidPlayers = true;  			break;  		} else  			count++;  	}  	if (!anyInvalidPlayers && count >= 6 && count <= 24)  		games2.Add (game);  	numProcessed++;  	if (numProcessed % 50 == 0)  		Console.WriteLine ("{0} of {1} selected"' games2.Count' numProcessed);  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: foreach (SpringBattle game in games) {  	bool anyInvalidPlayers = false;  	int count = 0;  	foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  		if (player.Account.EloWeight < 5) {  			anyInvalidPlayers = true;  			break;  		} else  			count++;  	}  	if (!anyInvalidPlayers && count >= 6 && count <= 24)  		games2.Add (game);  	numProcessed++;  	if (numProcessed % 50 == 0)  		Console.WriteLine ("{0} of {1} selected"' games2.Count' numProcessed);  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: foreach (SpringBattlePlayer player in game.SpringBattlePlayers.Where (x => !x.IsSpectator)) {  	if (player.Account.EloWeight < 5) {  		anyInvalidPlayers = true;  		break;  	} else  		count++;  }  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: if (player.Account.EloWeight < 5) {  	anyInvalidPlayers = true;  	break;  } else  	count++;  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: if (!anyInvalidPlayers && count >= 6 && count <= 24)  	games2.Add (game);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: if (!anyInvalidPlayers && count >= 6 && count <= 24)  	games2.Add (game);  
Magic Number,Fixer,BattleBalanceData,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\BattleBalanceData.cs,AnalyseBalance,The following statement contains a magic number: if (numProcessed % 50 == 0)  	Console.WriteLine ("{0} of {1} selected"' games2.Count' numProcessed);  
Magic Number,Fixer,DuplicateFinder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\DuplicateFinder.cs,FixDuplicates,The following statement contains a magic number: foreach (var duplicate in duplicatesByName) {  	Account primaryAccount = null;  	int highestXP = -1;  	foreach (int accountID in duplicate.Value) {  		Account acc = db.Accounts.FirstOrDefault (x => x.AccountID == accountID);  		Console.WriteLine ("Account {0} has {1} XP"' acc.Name' acc.Xp);  		if (acc.Xp > 0 || primaryAccount == null) {  			if (acc.Xp > highestXP) {  				primaryAccount = acc;  				highestXP = acc.Xp;  				Console.WriteLine ("Primary account is " + acc.Name);  			}  		}  	}  	foreach (int accountID in duplicate.Value) {  		Account acc = db.Accounts.FirstOrDefault (x => x.AccountID == accountID);  		if (acc == primaryAccount)  			continue;  		Console.WriteLine ("Terminatoring account: " + acc.Name);  		if (acc.AccountCampaignProgress != null && acc.AccountCampaignProgress.Count > 0) {  			Console.WriteLine ("\tAccount has campaign progress' aborting");  			continue;  			foreach (AccountCampaignProgress progress in acc.AccountCampaignProgress) {  				// FIXME  				//db.AccountCampaignProgress.DeleteOnSubmit(progress);  			}  		}  		if (acc.AccountRolesByAccountID != null)  			db.AccountRoles.DeleteAllOnSubmit (acc.AccountRolesByAccountID);  		acc.FactionID = null;  		acc.ClanID = null;  		//if (acc.Commanders != null)  		//db.Commanders.DeleteAllOnSubmit(acc.Commanders);  		if (acc.ForumPosts != null && acc.ForumPosts.Count > 0) {  			foreach (ForumPost post in acc.ForumPosts) {  				post.AuthorAccountID = primaryAccount.AccountID;  				Console.WriteLine ("\tTransferring post " + post.ForumPostID);  			}  		}  		Console.WriteLine ("\tChecking votes");  		if (acc.AccountForumVotes != null && acc.AccountForumVotes.Count > 0) {  			foreach (AccountForumVote vote in acc.AccountForumVotes) {  				if (vote.Vote > 0) {  					vote.ForumPost.Upvotes = vote.ForumPost.Upvotes - 1;  					vote.ForumPost.Account.ForumTotalUpvotes = vote.ForumPost.Account.ForumTotalUpvotes - 1;  				} else if (vote.Vote < 0) {  					vote.ForumPost.Downvotes = vote.ForumPost.Downvotes - 1;  					vote.ForumPost.Account.ForumTotalDownvotes = vote.ForumPost.Account.ForumTotalDownvotes - 1;  				}  				db.AccountForumVotes.DeleteOnSubmit (vote);  			}  		}  		Console.WriteLine ("\tChecking battles");  		if (acc.SpringBattlePlayers != null && acc.SpringBattlePlayers.Count > 0) {  			foreach (var players in acc.SpringBattlePlayers) {  				players.AccountID = primaryAccount.AccountID;  				Console.WriteLine ("\tTransferring battle B" + players.SpringBattleID);  			}  		}  		if (acc.PunishmentsByAccountID != null && acc.PunishmentsByAccountID.Count > 0) {  			foreach (Punishment pun in acc.PunishmentsByAccountID) {  				db.Punishments.DeleteOnSubmit (pun);  				Console.WriteLine ("\tDeleting punishment");  			}  		}  		// "AccountID is part of the object's key information and cannot be modified"  		//db.AccountUserIDs.DeleteAllOnSubmit(acc.AccountUserIDs);  		//db.AccountIPs.DeleteAllOnSubmit(acc.AccountIPs);  		//db.ForumLastReads.DeleteAllOnSubmit(acc.ForumLastReads);  		//db.ForumThreadLastReads.DeleteAllOnSubmit(acc.ForumThreadLastReads);    		//db.Accounts.DeleteOnSubmit(acc);  		bool success = false;  		for (int i = 0; i < 9; i++) {  			string newName = acc.Name + "_000" + i;  			if (db.Accounts.FirstOrDefault (x => x.Name == newName) == null) {  				acc.Name = newName;  				acc.IsDeleted = true;  				Console.WriteLine ("\tRenamed account to " + newName);  				success = true;  				break;  			}  		}  		if (!success) {  			Console.WriteLine ("ERROR changing name for user " + acc.Name);  			return;  		}  	}  }  
Magic Number,Fixer,DuplicateFinder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\DuplicateFinder.cs,FixDuplicates,The following statement contains a magic number: foreach (int accountID in duplicate.Value) {  	Account acc = db.Accounts.FirstOrDefault (x => x.AccountID == accountID);  	if (acc == primaryAccount)  		continue;  	Console.WriteLine ("Terminatoring account: " + acc.Name);  	if (acc.AccountCampaignProgress != null && acc.AccountCampaignProgress.Count > 0) {  		Console.WriteLine ("\tAccount has campaign progress' aborting");  		continue;  		foreach (AccountCampaignProgress progress in acc.AccountCampaignProgress) {  			// FIXME  			//db.AccountCampaignProgress.DeleteOnSubmit(progress);  		}  	}  	if (acc.AccountRolesByAccountID != null)  		db.AccountRoles.DeleteAllOnSubmit (acc.AccountRolesByAccountID);  	acc.FactionID = null;  	acc.ClanID = null;  	//if (acc.Commanders != null)  	//db.Commanders.DeleteAllOnSubmit(acc.Commanders);  	if (acc.ForumPosts != null && acc.ForumPosts.Count > 0) {  		foreach (ForumPost post in acc.ForumPosts) {  			post.AuthorAccountID = primaryAccount.AccountID;  			Console.WriteLine ("\tTransferring post " + post.ForumPostID);  		}  	}  	Console.WriteLine ("\tChecking votes");  	if (acc.AccountForumVotes != null && acc.AccountForumVotes.Count > 0) {  		foreach (AccountForumVote vote in acc.AccountForumVotes) {  			if (vote.Vote > 0) {  				vote.ForumPost.Upvotes = vote.ForumPost.Upvotes - 1;  				vote.ForumPost.Account.ForumTotalUpvotes = vote.ForumPost.Account.ForumTotalUpvotes - 1;  			} else if (vote.Vote < 0) {  				vote.ForumPost.Downvotes = vote.ForumPost.Downvotes - 1;  				vote.ForumPost.Account.ForumTotalDownvotes = vote.ForumPost.Account.ForumTotalDownvotes - 1;  			}  			db.AccountForumVotes.DeleteOnSubmit (vote);  		}  	}  	Console.WriteLine ("\tChecking battles");  	if (acc.SpringBattlePlayers != null && acc.SpringBattlePlayers.Count > 0) {  		foreach (var players in acc.SpringBattlePlayers) {  			players.AccountID = primaryAccount.AccountID;  			Console.WriteLine ("\tTransferring battle B" + players.SpringBattleID);  		}  	}  	if (acc.PunishmentsByAccountID != null && acc.PunishmentsByAccountID.Count > 0) {  		foreach (Punishment pun in acc.PunishmentsByAccountID) {  			db.Punishments.DeleteOnSubmit (pun);  			Console.WriteLine ("\tDeleting punishment");  		}  	}  	// "AccountID is part of the object's key information and cannot be modified"  	//db.AccountUserIDs.DeleteAllOnSubmit(acc.AccountUserIDs);  	//db.AccountIPs.DeleteAllOnSubmit(acc.AccountIPs);  	//db.ForumLastReads.DeleteAllOnSubmit(acc.ForumLastReads);  	//db.ForumThreadLastReads.DeleteAllOnSubmit(acc.ForumThreadLastReads);    	//db.Accounts.DeleteOnSubmit(acc);  	bool success = false;  	for (int i = 0; i < 9; i++) {  		string newName = acc.Name + "_000" + i;  		if (db.Accounts.FirstOrDefault (x => x.Name == newName) == null) {  			acc.Name = newName;  			acc.IsDeleted = true;  			Console.WriteLine ("\tRenamed account to " + newName);  			success = true;  			break;  		}  	}  	if (!success) {  		Console.WriteLine ("ERROR changing name for user " + acc.Name);  		return;  	}  }  
Magic Number,Fixer,DuplicateFinder,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\DuplicateFinder.cs,FixDuplicates,The following statement contains a magic number: for (int i = 0; i < 9; i++) {  	string newName = acc.Name + "_000" + i;  	if (db.Accounts.FirstOrDefault (x => x.Name == newName) == null) {  		acc.Name = newName;  		acc.IsDeleted = true;  		Console.WriteLine ("\tRenamed account to " + newName);  		success = true;  		break;  	}  }  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: tas.UserAdded += (sender' args) => {  	if (args.Name == name) {  		tas.JoinChannel ("bots");  		if (num % 16 == 0)  			tas.OpenBattle (new BattleHeader () {  				Title = batname'  				MaxPlayers = 16'  			});  		else {  			var bat = tas.ExistingBattles.Values.FirstOrDefault (x => x.Title == batname);  			if (bat != null)  				tas.JoinBattle (bat.BattleID);  		}  	}  };  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: tas.UserAdded += (sender' args) => {  	if (args.Name == name) {  		tas.JoinChannel ("bots");  		if (num % 16 == 0)  			tas.OpenBattle (new BattleHeader () {  				Title = batname'  				MaxPlayers = 16'  			});  		else {  			var bat = tas.ExistingBattles.Values.FirstOrDefault (x => x.Title == batname);  			if (bat != null)  				tas.JoinBattle (bat.BattleID);  		}  	}  };  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: if (args.Name == name) {  	tas.JoinChannel ("bots");  	if (num % 16 == 0)  		tas.OpenBattle (new BattleHeader () {  			Title = batname'  			MaxPlayers = 16'  		});  	else {  		var bat = tas.ExistingBattles.Values.FirstOrDefault (x => x.Title == batname);  		if (bat != null)  			tas.JoinBattle (bat.BattleID);  	}  }  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: if (args.Name == name) {  	tas.JoinChannel ("bots");  	if (num % 16 == 0)  		tas.OpenBattle (new BattleHeader () {  			Title = batname'  			MaxPlayers = 16'  		});  	else {  		var bat = tas.ExistingBattles.Values.FirstOrDefault (x => x.Title == batname);  		if (bat != null)  			tas.JoinBattle (bat.BattleID);  	}  }  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: if (num % 16 == 0)  	tas.OpenBattle (new BattleHeader () {  		Title = batname'  		MaxPlayers = 16'  	});  else {  	var bat = tas.ExistingBattles.Values.FirstOrDefault (x => x.Title == batname);  	if (bat != null)  		tas.JoinBattle (bat.BattleID);  }  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: if (num % 16 == 0)  	tas.OpenBattle (new BattleHeader () {  		Title = batname'  		MaxPlayers = 16'  	});  else {  	var bat = tas.ExistingBattles.Values.FirstOrDefault (x => x.Title == batname);  	if (bat != null)  		tas.JoinBattle (bat.BattleID);  }  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,RunNub,The following statement contains a magic number: tas.OpenBattle (new BattleHeader () {  	Title = batname'  	MaxPlayers = 16'  });  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,SpawnMany,The following statement contains a magic number: ThreadPool.SetMaxThreads (1000' 1000);  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,SpawnMany,The following statement contains a magic number: ThreadPool.SetMaxThreads (1000' 1000);  
Magic Number,Fixer,NubSimulator,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\NubSimulator.cs,SpawnMany,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	int i1 = i;  	//Thread.Sleep(100);  	RunNub (i1);  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateTechs,The following statement contains a magic number: foreach (var u in db.Unlocks.Where (x => x.UnlockType == UnlockTypes.Unit)) {  	var s = new StructureType () {  		BattleDeletesThis = false'  		Cost = u.XpCost / 2'  		MapIcon = "techlab.png"'  		DisabledMapIcon = "techlab_dead.png"'  		Name = u.Name'  		Description = string.Format ("Access to {0} and increases influence gains"' u.Name)'  		TurnsToActivate = u.XpCost / 100'  		IsBuildable = true'  		IsIngameDestructible = true'  		IsBomberDestructible = true'  		Unlock = u'  		UpkeepEnergy = u.XpCost / 5'  		IngameUnitName = "pw_" + u.Code'  	};  	db.StructureTypes.InsertOnSubmit (s);  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateTechs,The following statement contains a magic number: foreach (var u in db.Unlocks.Where (x => x.UnlockType == UnlockTypes.Unit)) {  	var s = new StructureType () {  		BattleDeletesThis = false'  		Cost = u.XpCost / 2'  		MapIcon = "techlab.png"'  		DisabledMapIcon = "techlab_dead.png"'  		Name = u.Name'  		Description = string.Format ("Access to {0} and increases influence gains"' u.Name)'  		TurnsToActivate = u.XpCost / 100'  		IsBuildable = true'  		IsIngameDestructible = true'  		IsBomberDestructible = true'  		Unlock = u'  		UpkeepEnergy = u.XpCost / 5'  		IngameUnitName = "pw_" + u.Code'  	};  	db.StructureTypes.InsertOnSubmit (s);  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateTechs,The following statement contains a magic number: foreach (var u in db.Unlocks.Where (x => x.UnlockType == UnlockTypes.Unit)) {  	var s = new StructureType () {  		BattleDeletesThis = false'  		Cost = u.XpCost / 2'  		MapIcon = "techlab.png"'  		DisabledMapIcon = "techlab_dead.png"'  		Name = u.Name'  		Description = string.Format ("Access to {0} and increases influence gains"' u.Name)'  		TurnsToActivate = u.XpCost / 100'  		IsBuildable = true'  		IsIngameDestructible = true'  		IsBomberDestructible = true'  		Unlock = u'  		UpkeepEnergy = u.XpCost / 5'  		IngameUnitName = "pw_" + u.Code'  	};  	db.StructureTypes.InsertOnSubmit (s);  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,PurgeGalaxy,The following statement contains a magic number: using (var db = new ZkDataContext ()) {  	db.Database.CommandTimeout = 300;  	var gal = db.Galaxies.Single (x => x.GalaxyID == galaxyID);  	foreach (var p in gal.Planets) {  		//p.ForumThread = null;  		p.OwnerAccountID = null;  		p.Faction = null;  		p.Account = null;  	}  	foreach (var f in db.Factions) {  		f.Metal = 0;  		f.EnergyDemandLastTurn = 0;  		f.EnergyProducedLastTurn = 0;  		f.Bombers = 0;  		f.Dropships = 0;  		f.Warps = 0;  		f.VictoryPoints = 0;  	}  	db.SaveChanges ();  	db.Database.ExecuteSqlCommand ("update accounts set pwbombersproduced=0' pwbombersused=0' pwdropshipsproduced=0' pwdropshipsused=0' pwmetalproduced=0' pwmetalused=0' pwattackpoints=0' pwwarpproduced=0' pwwarpused=0' elopw=1500' factionid=null");  	if (resetclans)  		db.Database.ExecuteSqlCommand ("update accounts set clanid=null");  	db.Database.ExecuteSqlCommand ("delete from events");  	db.Database.ExecuteSqlCommand ("delete from planetownerhistories");  	db.Database.ExecuteSqlCommand ("delete from planetstructures");  	db.Database.ExecuteSqlCommand ("delete from planetfactions");  	db.Database.ExecuteSqlCommand ("update planets set ownerfactionid=null' owneraccountid=null where galaxyid=24");  	db.Database.ExecuteSqlCommand ("delete from accountplanets");  	if (resetroles)  		db.Database.ExecuteSqlCommand ("delete from accountroles where clanID is null");  	db.Database.ExecuteSqlCommand ("delete from factiontreaties");  	db.Database.ExecuteSqlCommand ("delete from treatyeffects");  	db.Database.ExecuteSqlCommand ("update clans set factionid=null");  	//db.Database.ExecuteSqlCommand("delete from forumthreads where forumcategoryid={0}"' db.ForumCategories.Single(x => x.ForumMode ==ForumMode.Planets).ForumCategoryID);  	if (resetclans) {  		db.Database.ExecuteSqlCommand ("delete from clans");  		db.Database.ExecuteSqlCommand ("delete from forumthreads where forumcategoryid={0}"' db.ForumCategories.Single (x => x.ForumMode == ForumMode.Clans).ForumCategoryID);  	}  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,PurgeGalaxy,The following statement contains a magic number: db.Database.CommandTimeout = 300;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,IsPlanetNeighbour,The following statement contains a magic number: using (var db = new ZkDataContext ()) {  	if (thisPlanetID == thatPlanetID)  		return 2;  	Planet planet = db.Planets.FirstOrDefault (x => x.PlanetID == thatPlanetID);  	foreach (Link link in planet.LinksByPlanetID1.Union (planet.LinksByPlanetID2)) {  		Planet otherPlanet = link.PlanetByPlanetID1 == planet ? link.PlanetByPlanetID2 : link.PlanetByPlanetID1;  		if (otherPlanet.PlanetID == thisPlanetID)  			return 1;  	}  	return 0;  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,IsPlanetNeighbour,The following statement contains a magic number: if (thisPlanetID == thatPlanetID)  	return 2;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,IsPlanetNeighbour,The following statement contains a magic number: return 2;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,The following statement contains a magic number: using (var db = new ZkDataContext ()) {  	System.Console.WriteLine (String.Format ("Randomly assigning planets in galaxy {0} to factions"' galaxyID));  	var gal = db.Galaxies.Single (x => x.GalaxyID == galaxyID);  	var factions = db.Factions.Where (x => !x.IsDeleted).ToList ();  	int numFactions = factions.ToList ().Count;  	int index = 1;  	List<int> forceNeutral = new List<int> (new int[] {  		3930'  		3964  	});  	List<List<Account>> accountsByFaction = new List<List<Account>> ();  	foreach (Faction f in factions) {  		accountsByFaction.Add (f.Accounts.Where (x => x.LastLogin > DateTime.UtcNow.AddDays (-15)).OrderByDescending (x => x.EloPw).ToList ());  	}  	List<Account> alreadyAssigned = new List<Account> ();  	Random rng = new Random ();  	//List<Account> alreadyHavePlanets = new List<Account>;  	foreach (var p in gal.Planets) {  		double rand = rng.NextDouble ();  		bool neutral = false;  		foreach (int otherPlanet in forceNeutral) {  			if (IsPlanetNeighbour (p.PlanetID' otherPlanet) > 0) {  				neutral = true;  			}  		}  		if (neutral || rand < proportionNeutral) {  			p.Faction = null;  			p.Account = null;  			System.Console.WriteLine (String.Format ("\tPlanet {0} is neutral"' p.Name));  		} else {  			Faction faction = factions.Where (x => x.FactionID == index).FirstOrDefault ();  			Account acc = accountsByFaction [index - 1].FirstOrDefault (x => !alreadyAssigned.Contains (x));  			p.Faction = faction;  			p.Account = acc;  			index++;  			if (index > numFactions)  				index = 1;  			alreadyAssigned.Add (acc);  			System.Console.WriteLine (String.Format ("\tGiving planet {0} to {1} of {2}"' p.Name' acc' p.Faction));  		}  	}  	gal.IsDirty = true;  	db.SaveChanges ();  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,The following statement contains a magic number: using (var db = new ZkDataContext ()) {  	System.Console.WriteLine (String.Format ("Randomly assigning planets in galaxy {0} to factions"' galaxyID));  	var gal = db.Galaxies.Single (x => x.GalaxyID == galaxyID);  	var factions = db.Factions.Where (x => !x.IsDeleted).ToList ();  	int numFactions = factions.ToList ().Count;  	int index = 1;  	List<int> forceNeutral = new List<int> (new int[] {  		3930'  		3964  	});  	List<List<Account>> accountsByFaction = new List<List<Account>> ();  	foreach (Faction f in factions) {  		accountsByFaction.Add (f.Accounts.Where (x => x.LastLogin > DateTime.UtcNow.AddDays (-15)).OrderByDescending (x => x.EloPw).ToList ());  	}  	List<Account> alreadyAssigned = new List<Account> ();  	Random rng = new Random ();  	//List<Account> alreadyHavePlanets = new List<Account>;  	foreach (var p in gal.Planets) {  		double rand = rng.NextDouble ();  		bool neutral = false;  		foreach (int otherPlanet in forceNeutral) {  			if (IsPlanetNeighbour (p.PlanetID' otherPlanet) > 0) {  				neutral = true;  			}  		}  		if (neutral || rand < proportionNeutral) {  			p.Faction = null;  			p.Account = null;  			System.Console.WriteLine (String.Format ("\tPlanet {0} is neutral"' p.Name));  		} else {  			Faction faction = factions.Where (x => x.FactionID == index).FirstOrDefault ();  			Account acc = accountsByFaction [index - 1].FirstOrDefault (x => !alreadyAssigned.Contains (x));  			p.Faction = faction;  			p.Account = acc;  			index++;  			if (index > numFactions)  				index = 1;  			alreadyAssigned.Add (acc);  			System.Console.WriteLine (String.Format ("\tGiving planet {0} to {1} of {2}"' p.Name' acc' p.Faction));  		}  	}  	gal.IsDirty = true;  	db.SaveChanges ();  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,The following statement contains a magic number: using (var db = new ZkDataContext ()) {  	System.Console.WriteLine (String.Format ("Randomly assigning planets in galaxy {0} to factions"' galaxyID));  	var gal = db.Galaxies.Single (x => x.GalaxyID == galaxyID);  	var factions = db.Factions.Where (x => !x.IsDeleted).ToList ();  	int numFactions = factions.ToList ().Count;  	int index = 1;  	List<int> forceNeutral = new List<int> (new int[] {  		3930'  		3964  	});  	List<List<Account>> accountsByFaction = new List<List<Account>> ();  	foreach (Faction f in factions) {  		accountsByFaction.Add (f.Accounts.Where (x => x.LastLogin > DateTime.UtcNow.AddDays (-15)).OrderByDescending (x => x.EloPw).ToList ());  	}  	List<Account> alreadyAssigned = new List<Account> ();  	Random rng = new Random ();  	//List<Account> alreadyHavePlanets = new List<Account>;  	foreach (var p in gal.Planets) {  		double rand = rng.NextDouble ();  		bool neutral = false;  		foreach (int otherPlanet in forceNeutral) {  			if (IsPlanetNeighbour (p.PlanetID' otherPlanet) > 0) {  				neutral = true;  			}  		}  		if (neutral || rand < proportionNeutral) {  			p.Faction = null;  			p.Account = null;  			System.Console.WriteLine (String.Format ("\tPlanet {0} is neutral"' p.Name));  		} else {  			Faction faction = factions.Where (x => x.FactionID == index).FirstOrDefault ();  			Account acc = accountsByFaction [index - 1].FirstOrDefault (x => !alreadyAssigned.Contains (x));  			p.Faction = faction;  			p.Account = acc;  			index++;  			if (index > numFactions)  				index = 1;  			alreadyAssigned.Add (acc);  			System.Console.WriteLine (String.Format ("\tGiving planet {0} to {1} of {2}"' p.Name' acc' p.Faction));  		}  	}  	gal.IsDirty = true;  	db.SaveChanges ();  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,The following statement contains a magic number: foreach (Faction f in factions) {  	accountsByFaction.Add (f.Accounts.Where (x => x.LastLogin > DateTime.UtcNow.AddDays (-15)).OrderByDescending (x => x.EloPw).ToList ());  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,RandomizePlanetOwners,The following statement contains a magic number: accountsByFaction.Add (f.Accounts.Where (x => x.LastLogin > DateTime.UtcNow.AddDays (-15)).OrderByDescending (x => x.EloPw).ToList ());  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateArtefacts,The following statement contains a magic number: if (cleanupExisting) {  	foreach (Planet p in db.Planets.Where (x => x.GalaxyID == galaxyID)) {  		var structure = p.PlanetStructures.FirstOrDefault (x => x.StructureTypeID == 9);  		if (structure != null)  			db.PlanetStructures.DeleteOnSubmit (structure);  	}  	db.SaveChanges ();  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateArtefacts,The following statement contains a magic number: foreach (Planet p in db.Planets.Where (x => x.GalaxyID == galaxyID)) {  	var structure = p.PlanetStructures.FirstOrDefault (x => x.StructureTypeID == 9);  	if (structure != null)  		db.PlanetStructures.DeleteOnSubmit (structure);  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateArtefacts,The following statement contains a magic number: foreach (Planet p in planets) {  	p.AddStruct (9);  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateArtefacts,The following statement contains a magic number: p.AddStruct (9);  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,StartGalaxy,The following statement contains a magic number: using (var db = new ZkDataContext ()) {  	var facs = db.Factions.Where (x => !x.IsDeleted).ToList ();  	if (startingPlanets == null || startingPlanets.Length < facs.Count)  		startingPlanets = db.Planets.Where (x => x.GalaxyID == galaxyID && x.PlanetStructures.Any (y => y.StructureType.OwnerChangeWinsGame == true)).OrderBy (x => x.Y).ThenBy (x => x.Y).Select (x => x.PlanetID).ToArray ();  	for (int i = 0; i < facs.Count; i++) {  		var pid = startingPlanets [i];  		var planet = db.Planets.First (x => x.PlanetID == pid);  		var faction = facs [i];  		planet.PlanetFactions.Add (new PlanetFaction () {  			Faction = faction'  			Influence = 100  		});  		planet.Faction = faction;  	}  	db.SaveChanges ();  	/*foreach (Account acc in db.Accounts)                 {                     double elo = acc.Elo;                     if (acc.Elo1v1 > elo) elo = acc.Elo1v1;                     acc.EloPw = elo;                 }                 System.Console.WriteLine("PW Elo set");                 foreach (Faction fac in db.Factions)                 {                     var accounts = fac.Accounts.Where(x=> x.Planets.Count > 0).ToList();                     foreach (Account acc in accounts)                     {                         acc.ProduceDropships(1);                     }                     fac.ProduceDropships(5);                 }                 System.Console.WriteLine("Dropships ready");                 */var gal = db.Galaxies.Single (x => x.GalaxyID == galaxyID);  	foreach (Planet planet in gal.Planets) {  		if (planet.Faction != null) {  			foreach (PlanetStructure s in planet.PlanetStructures) {  				//s.ActivatedOnTurn = 0;  				s.IsActive = true;  			}  		} else {  			foreach (PlanetStructure s in planet.PlanetStructures.Where (x => x.StructureType.OwnerChangeWinsGame != true)) {  				s.IsActive = false;  				s.ActivatedOnTurn = null;  			}  		}  	}  	System.Console.WriteLine ("Structure activation set");  	gal.Turn = 0;  	gal.Started = DateTime.UtcNow;  	db.SaveChanges ();  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,StartGalaxy,The following statement contains a magic number: for (int i = 0; i < facs.Count; i++) {  	var pid = startingPlanets [i];  	var planet = db.Planets.First (x => x.PlanetID == pid);  	var faction = facs [i];  	planet.PlanetFactions.Add (new PlanetFaction () {  		Faction = faction'  		Influence = 100  	});  	planet.Faction = faction;  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,StartGalaxy,The following statement contains a magic number: planet.PlanetFactions.Add (new PlanetFaction () {  	Faction = faction'  	Influence = 100  });  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateStructures,The following statement contains a magic number: foreach (var s in structs) {  	costs.Add (Tuple.Create ((int)(5000 / s.Cost)' s.StructureTypeID));  	// probabality is relative to 1200-cost  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,GenerateStructures,The following statement contains a magic number: costs.Add (Tuple.Create ((int)(5000 / s.Cost)' s.StructureTypeID));  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: foreach (var p in planets) {  	//if (num < cnt*0.15) p.TeamSize = 1;else   	if (num < cnt * 0.80)  		p.TeamSize = 2;  	//else if (num < cnt*0.85) p.TeamSize = 3;  	else  		p.TeamSize = 3;  	num++;  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: foreach (var p in planets) {  	//if (num < cnt*0.15) p.TeamSize = 1;else   	if (num < cnt * 0.80)  		p.TeamSize = 2;  	//else if (num < cnt*0.85) p.TeamSize = 3;  	else  		p.TeamSize = 3;  	num++;  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: foreach (var p in planets) {  	//if (num < cnt*0.15) p.TeamSize = 1;else   	if (num < cnt * 0.80)  		p.TeamSize = 2;  	//else if (num < cnt*0.85) p.TeamSize = 3;  	else  		p.TeamSize = 3;  	num++;  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: if (num < cnt * 0.80)  	p.TeamSize = 2;  //else if (num < cnt*0.85) p.TeamSize = 3;  else  	p.TeamSize = 3;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: if (num < cnt * 0.80)  	p.TeamSize = 2;  //else if (num < cnt*0.85) p.TeamSize = 3;  else  	p.TeamSize = 3;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: if (num < cnt * 0.80)  	p.TeamSize = 2;  //else if (num < cnt*0.85) p.TeamSize = 3;  else  	p.TeamSize = 3;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: p.TeamSize = 2;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,SetPlanetTeamSizes,The following statement contains a magic number: p.TeamSize = 3;  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,OwnPlanets,The following statement contains a magic number: foreach (var p in gal.Planets) {  	p.PlanetFactions.Clear ();  	if (p.OwnerFactionID != null)  		p.PlanetFactions.Add (new PlanetFaction () {  			FactionID = p.OwnerFactionID.Value'  			Influence = 100  		});  }  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,OwnPlanets,The following statement contains a magic number: if (p.OwnerFactionID != null)  	p.PlanetFactions.Add (new PlanetFaction () {  		FactionID = p.OwnerFactionID.Value'  		Influence = 100  	});  
Magic Number,Fixer,PlanetwarsFixer,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\PlanetwarsFixer.cs,OwnPlanets,The following statement contains a magic number: p.PlanetFactions.Add (new PlanetFaction () {  	FactionID = p.OwnerFactionID.Value'  	Influence = 100  });  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	number = r.Next (0' 255);  	b = Convert.ToByte (number);  	if (i == 0) {  		b = setBit (b' 6);  		//--> set locally administered  		b = unsetBit (b' 7);  		// --> set unicast   	}  	sBuilder.Append (number.ToString ("X2"));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	number = r.Next (0' 255);  	b = Convert.ToByte (number);  	if (i == 0) {  		b = setBit (b' 6);  		//--> set locally administered  		b = unsetBit (b' 7);  		// --> set unicast   	}  	sBuilder.Append (number.ToString ("X2"));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	number = r.Next (0' 255);  	b = Convert.ToByte (number);  	if (i == 0) {  		b = setBit (b' 6);  		//--> set locally administered  		b = unsetBit (b' 7);  		// --> set unicast   	}  	sBuilder.Append (number.ToString ("X2"));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	number = r.Next (0' 255);  	b = Convert.ToByte (number);  	if (i == 0) {  		b = setBit (b' 6);  		//--> set locally administered  		b = unsetBit (b' 7);  		// --> set unicast   	}  	sBuilder.Append (number.ToString ("X2"));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: number = r.Next (0' 255);  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: if (i == 0) {  	b = setBit (b' 6);  	//--> set locally administered  	b = unsetBit (b' 7);  	// --> set unicast   }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: if (i == 0) {  	b = setBit (b' 6);  	//--> set locally administered  	b = unsetBit (b' 7);  	// --> set unicast   }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: b = setBit (b' 6);  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GenerateMACAddress,The following statement contains a magic number: b = unsetBit (b' 7);  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,setBit,The following statement contains a magic number: if (BitNumber < 8 && BitNumber > -1) {  	return (byte)(b | (byte)(0x01 << BitNumber));  } else {  	throw new InvalidOperationException ("Der Wert für BitNumber " + BitNumber.ToString () + " war nicht im zulässigen Bereich! (BitNumber = (min)0 - (max)7)");  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,unsetBit,The following statement contains a magic number: if (BitNumber < 8 && BitNumber > -1) {  	return (byte)(b | (byte)(0x00 << BitNumber));  } else {  	throw new InvalidOperationException ("Der Wert für BitNumber " + BitNumber.ToString () + " war nicht im zulässigen Bereich! (BitNumber = (min)0 - (max)7)");  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestCRC,The following statement contains a magic number: for (int i = 0; i < 8192; i++) {  	string mac = GenerateMACAddress () + "lobby.springrts.com";  	byte[] mac2 = Encoding.ASCII.GetBytes (mac);  	uint hash1 = Crc.Crc32 (mac2);  	uint hash2 = Crc.Crc32Old (mac2);  	if (hash1 != hash2) {  		Console.WriteLine ("MISMATCH: {0} vs. {1} (MAC {2})"' hash1' hash2' mac);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AddClanLeader,The following statement contains a magic number: if (!clan.AccountRoles.Any (y => y.RoleType.IsClanOnly)) {  	Account picked = null;  	if (leaderID != null)  		picked = db.Accounts.FirstOrDefault (x => x.AccountID == leaderID);  	if (picked == null)  		picked = clan.Accounts.Where (x => x.LastLogin >= DateTime.UtcNow.AddDays (-7)).OrderByDescending (x => x.Level).FirstOrDefault ();  	if (picked == null)  		picked = clan.Accounts.OrderByDescending (x => x.LastLogin).FirstOrDefault ();  	if (picked != null) {  		if (picked.ClanID != clanID) {  			picked.ClanID = clanID;  		}  		clan.AccountRoles.Add (new AccountRole () {  			AccountID = picked.AccountID'  			ClanID = clan.ClanID'  			Inauguration = DateTime.UtcNow'  			RoleTypeID = role.RoleTypeID  		});  		clan.IsDeleted = false;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AddClanLeader,The following statement contains a magic number: if (picked == null)  	picked = clan.Accounts.Where (x => x.LastLogin >= DateTime.UtcNow.AddDays (-7)).OrderByDescending (x => x.Level).FirstOrDefault ();  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,AddClanLeader,The following statement contains a magic number: picked = clan.Accounts.Where (x => x.LastLogin >= DateTime.UtcNow.AddDays (-7)).OrderByDescending (x => x.Level).FirstOrDefault ();  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) {  	var lg = m.SpringBattlesByMapResourceID.Take (100).ToList ();  	double cnt = lg.Count;  	if (cnt == 0)  		continue;  	;  	if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  		m.MapIsChickens = true;  	}  	if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  		m.MapIs1v1 = true;  	}  	var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault ();  	if (teams > 2) {  		m.MapIsFfa = true;  		m.MapFFAMaxTeams = teams;  	} else {  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) {  	var lg = m.SpringBattlesByMapResourceID.Take (100).ToList ();  	double cnt = lg.Count;  	if (cnt == 0)  		continue;  	;  	if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  		m.MapIsChickens = true;  	}  	if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  		m.MapIs1v1 = true;  	}  	var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault ();  	if (teams > 2) {  		m.MapIsFfa = true;  		m.MapFFAMaxTeams = teams;  	} else {  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) {  	var lg = m.SpringBattlesByMapResourceID.Take (100).ToList ();  	double cnt = lg.Count;  	if (cnt == 0)  		continue;  	;  	if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  		m.MapIsChickens = true;  	}  	if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  		m.MapIs1v1 = true;  	}  	var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault ();  	if (teams > 2) {  		m.MapIsFfa = true;  		m.MapFFAMaxTeams = teams;  	} else {  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) {  	var lg = m.SpringBattlesByMapResourceID.Take (100).ToList ();  	double cnt = lg.Count;  	if (cnt == 0)  		continue;  	;  	if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  		m.MapIsChickens = true;  	}  	if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  		m.MapIs1v1 = true;  	}  	var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault ();  	if (teams > 2) {  		m.MapIsFfa = true;  		m.MapFFAMaxTeams = teams;  	} else {  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) {  	var lg = m.SpringBattlesByMapResourceID.Take (100).ToList ();  	double cnt = lg.Count;  	if (cnt == 0)  		continue;  	;  	if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  		m.MapIsChickens = true;  	}  	if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  		m.MapIs1v1 = true;  	}  	var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault ();  	if (teams > 2) {  		m.MapIsFfa = true;  		m.MapFFAMaxTeams = teams;  	} else {  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: foreach (var m in db.Resources.Where (x => x.MapSupportLevel >= MapSupportLevel.Featured && x.TypeID == ResourceType.Map)) {  	var lg = m.SpringBattlesByMapResourceID.Take (100).ToList ();  	double cnt = lg.Count;  	if (cnt == 0)  		continue;  	;  	if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  		m.MapIsChickens = true;  	}  	if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  		m.MapIs1v1 = true;  	}  	var teams = m.SpringBattlesByMapResourceID.Take (100).GroupBy (x => x.SpringBattlePlayers.Where (y => !y.IsSpectator).Select (y => y.AllyNumber).Distinct ().Count ()).OrderByDescending (x => x.Count ()).Select (x => x.Key).FirstOrDefault ();  	if (teams > 2) {  		m.MapIsFfa = true;  		m.MapFFAMaxTeams = teams;  	} else {  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: if (lg.Count (x => x.HasBots) / (double)cnt > 0.5) {  	m.MapIsChickens = true;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  	m.MapIs1v1 = true;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: if (lg.Count (x => x.PlayerCount == 2) / cnt > 0.4) {  	m.MapIs1v1 = true;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,SetFFATeams,The following statement contains a magic number: if (teams > 2) {  	m.MapIsFfa = true;  	m.MapFFAMaxTeams = teams;  } else {  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The following statement contains a magic number: if (planet != null) {  	AccountCampaignProgress progress = acc.AccountCampaignProgress.FirstOrDefault (x => x.PlanetID == planet.PlanetID && x.CampaignID == planet.CampaignID);  	bool alreadyCompleted = false;  	int accountID = acc.AccountID;  	int campID = planet.CampaignID;  	Campaign camp = planet.Campaign;  	List<CampaignPlanet> unlockedPlanets = new List<CampaignPlanet> ();  	List<CampaignJournal> unlockedJournals = new List<CampaignJournal> ();  	// start with processing the mission vars' if there are any  	byte[] missionVarsAsByteArray = System.Convert.FromBase64String (missionVars);  	string missionVarsDecoded = System.Text.Encoding.UTF8.GetString (missionVarsAsByteArray);  	foreach (string kvpRaw in missionVarsDecoded.Split (new[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries)) {  		string kvpRaw2 = kvpRaw.Trim ();  		string key = ""' value = "";  		string[] kvpSplit = kvpRaw2.Split (new[] {  			'='  		}' StringSplitOptions.RemoveEmptyEntries);  		if (kvpSplit.Length == 2) {  			key = kvpSplit [0].Trim ();  			value = kvpSplit [1].Trim ();  		} else {  			throw new Exception ("Invalid key-value pair in decoded mission vars: " + missionVarsDecoded);  		}  		if (!(string.IsNullOrEmpty (key) || string.IsNullOrEmpty (value))) {  			CampaignVar cv = camp.CampaignVars.First (x => x.KeyString == key);  			AccountCampaignVar acv = acc.AccountCampaignVars.FirstOrDefault (x => x.CampaignID == campID && x.VarID == cv.VarID);  			if (acv == null) {  				db.AccountCampaignVars.InsertOnSubmit (new AccountCampaignVar () {  					AccountID = accountID'  					CampaignID = campID'  					VarID = cv.VarID'  					Value = value  				});  			} else  				acv.Value = value;  		}  	}  	//reload DB - this allows the vars submitted this session to be used by the following code  	db.SaveChanges ();  	db = new ZkDataContext ();  	acc = db.Accounts.First (x => x.AccountID == accountID);  	// now we unlock planets and journal entries  	// first mark this planet as completed - but only if it's already unlocked  	if (progress != null) {  		alreadyCompleted = progress.IsCompleted;  	} else if (planet.StartsUnlocked) {  		progress = new AccountCampaignProgress () {  			AccountID = accountID'  			CampaignID = campID'  			PlanetID = planet.PlanetID'  			IsCompleted = false'  			IsUnlocked = true  		};  		db.AccountCampaignProgress.InsertOnSubmit (progress);  	}  	if (progress != null && planet.IsUnlocked (accountID)) {  		progress.IsCompleted = true;  		// unlock planets made available by completing this one  		var links = camp.CampaignLinks.Where (x => x.UnlockingPlanetID == planet.PlanetID);  		foreach (CampaignLink link in links) {  			CampaignPlanet toUnlock = link.PlanetToUnlock;  			bool proceed = true;  			var requiredVars = toUnlock.CampaignPlanetVars;  			if (requiredVars.Count () == 0)  				proceed = true;  			else {  				foreach (CampaignPlanetVar variable in requiredVars) {  					AccountCampaignVar accountVar = acc.AccountCampaignVars.FirstOrDefault (x => x.CampaignID == campID && x.VarID == variable.RequiredVarID);  					if (!(accountVar != null && accountVar.Value == variable.RequiredValue)) {  						proceed = false;  						break;  						// failed to meet var requirement' stop here  					}  				}  			}  			if (proceed)// met requirements for unlocking planet  			 {  				AccountCampaignProgress progress2 = toUnlock.AccountCampaignProgress.FirstOrDefault (x => x.CampaignID == campID && x.AccountID == accountID);  				if (progress2 == null) {  					progress2 = new AccountCampaignProgress () {  						AccountID = accountID'  						CampaignID = campID'  						PlanetID = toUnlock.PlanetID'  						IsCompleted = completeNext'  						IsUnlocked = true  					};  					db.AccountCampaignProgress.InsertOnSubmit (progress2);  					unlockedPlanets.Add (toUnlock);  				} else if (!progress2.IsUnlocked) {  					progress2.IsUnlocked = true;  					unlockedPlanets.Add (toUnlock);  				}  			}  		}  	}  	// unlock journals  	var journalsWithVars = db.CampaignJournals.Where (x => x.CampaignID == campID && x.CampaignJournalVars.Any ());  	foreach (CampaignJournal journal in journalsWithVars) {  		bool proceed = true;  		var requiredVars = journal.CampaignJournalVars.Where (x => x.CampaignID == campID).ToList ();  		foreach (CampaignJournalVar variable in requiredVars) {  			AccountCampaignVar accountVar = acc.AccountCampaignVars.FirstOrDefault (x => x.CampaignID == campID && x.VarID == variable.RequiredVarID);  			if (!(accountVar != null && accountVar.Value == variable.RequiredValue)) {  				proceed = false;  				break;  				// failed to meet var requirement' stop here  			}  		}  		if (proceed)// met requirements for unlocking journal  		 {  			AccountCampaignJournalProgress jp = journal.AccountCampaignJournalProgress.FirstOrDefault (x => x.AccountID == accountID);  			if (jp == null) {  				jp = new AccountCampaignJournalProgress () {  					AccountID = accountID'  					CampaignID = campID'  					JournalID = journal.JournalID'  					IsUnlocked = true  				};  				db.AccountCampaignJournalProgress.InsertOnSubmit (jp);  				unlockedJournals.Add (journal);  			} else if (!jp.IsUnlocked) {  				jp.IsUnlocked = true;  				unlockedJournals.Add (journal);  			}  		}  	}  	if (!alreadyCompleted) {  		System.Console.WriteLine ("Planet completed: {0}"' planet);  		foreach (CampaignJournal journal in db.CampaignJournals.Where (x => x.CampaignID == campID && x.CampaignPlanet.PlanetID == planet.PlanetID && x.UnlockOnPlanetCompletion)) {  			unlockedJournals.Add (journal);  		}  	}  	foreach (CampaignPlanet unlocked in unlockedPlanets) {  		System.Console.WriteLine ("Planet unlocked: {0}"' unlocked);  		foreach (CampaignJournal journal in db.CampaignJournals.Where (x => x.CampaignID == campID && x.CampaignPlanet.PlanetID == unlocked.PlanetID && x.UnlockOnPlanetUnlock)) {  			unlockedJournals.Add (journal);  		}  	}  	foreach (CampaignJournal uj in unlockedJournals) {  		System.Console.WriteLine ("{1} - Journal entry unlocked: {0}"' uj' uj.CampaignPlanet);  	}  	db.SaveChanges ();  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The following statement contains a magic number: foreach (string kvpRaw in missionVarsDecoded.Split (new[] {  	';'  }' StringSplitOptions.RemoveEmptyEntries)) {  	string kvpRaw2 = kvpRaw.Trim ();  	string key = ""' value = "";  	string[] kvpSplit = kvpRaw2.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (kvpSplit.Length == 2) {  		key = kvpSplit [0].Trim ();  		value = kvpSplit [1].Trim ();  	} else {  		throw new Exception ("Invalid key-value pair in decoded mission vars: " + missionVarsDecoded);  	}  	if (!(string.IsNullOrEmpty (key) || string.IsNullOrEmpty (value))) {  		CampaignVar cv = camp.CampaignVars.First (x => x.KeyString == key);  		AccountCampaignVar acv = acc.AccountCampaignVars.FirstOrDefault (x => x.CampaignID == campID && x.VarID == cv.VarID);  		if (acv == null) {  			db.AccountCampaignVars.InsertOnSubmit (new AccountCampaignVar () {  				AccountID = accountID'  				CampaignID = campID'  				VarID = cv.VarID'  				Value = value  			});  		} else  			acv.Value = value;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ProgressCampaign,The following statement contains a magic number: if (kvpSplit.Length == 2) {  	key = kvpSplit [0].Trim ();  	value = kvpSplit [1].Trim ();  } else {  	throw new Exception ("Invalid key-value pair in decoded mission vars: " + missionVarsDecoded);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.PlayerCount == 2).OrderBy (x => x.SpringBattleID)) {  	cnt++;  	double winnerElo = 0;  	double loserElo = 0;  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count != 1 || winners.Count != 1) {  		continue;  	}  	foreach (var r in winners) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		winnerElo += el.Elo;  	}  	foreach (var r in losers) {  		EloEntry el;  		if (!PlayerElo.TryGetValue (r.Account' out el))  			el = new EloEntry ();  		loserElo += el.Elo;  	}  	winnerElo = winnerElo / winners.Count;  	loserElo = loserElo / losers.Count;  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	var sumCount = losers.Count + winners.Count;  	var scoreWin = Math.Sqrt (sumCount / 2.0) * 32 * (1 - eWin);  	var scoreLose = Math.Sqrt (sumCount / 2.0) * 32 * (0 - eLose);  	foreach (var r in winners) {  		var change = (float)(scoreWin);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  	foreach (var r in losers) {  		var change = (float)(scoreLose);  		EloEntry elo;  		if (!PlayerElo.TryGetValue (r.Account' out elo)) {  			elo = new EloEntry ();  			PlayerElo [r.Account] = elo;  		}  		elo.Elo += change;  		elo.Cnt++;  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var entry in PlayerElo.Where (x => x.Value.Cnt > 40).OrderByDescending (x => x.Value.Elo)) {  	Console.WriteLine ("{0};{1:f0};{2:f0};{3};{4}"' entry.Key.Name' entry.Value.Elo' entry.Key.EffectiveElo' entry.Value.Cnt' entry.Key.SpringBattlePlayers.Count (x => !x.IsSpectator && x.SpringBattle.PlayerCount > 2));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: foreach (var entry in PlayerElo.Where (x => x.Value.Cnt > 40).OrderByDescending (x => x.Value.Elo)) {  	Console.WriteLine ("{0};{1:f0};{2:f0};{3};{4}"' entry.Key.Name' entry.Value.Elo' entry.Key.EffectiveElo' entry.Value.Cnt' entry.Key.SpringBattlePlayers.Count (x => !x.IsSpectator && x.SpringBattle.PlayerCount > 2));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,Test1v1Elo,The following statement contains a magic number: Console.WriteLine ("{0};{1:f0};{2:f0};{3};{4}"' entry.Key.Name' entry.Value.Elo' entry.Key.EffectiveElo' entry.Value.Cnt' entry.Key.SpringBattlePlayers.Count (x => !x.IsSpectator && x.SpringBattle.PlayerCount > 2));  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) {  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count == 0 || winners.Count == 0 || losers.Count == winners.Count)  		continue;  	if (winners.Select (x => x.Account.EffectiveElo).Max () > losers.Select (x => x.Account.EffectiveElo).Max ())  		winPro++;  	if (winners.Select (x => x.Account.EffectiveElo).Min () > losers.Select (x => x.Account.EffectiveElo).Min ())  		winLessNub++;  	if (winners.Select (x => x.Account.EffectiveElo).StdDev () > losers.Select (x => x.Account.EffectiveElo).StdDev ())  		winMoreVaried++;  	var winnerElo = winners.Select (x => x.Account.EffectiveElo).Average ();  	var loserElo = losers.Select (x => x.Account.EffectiveElo).Average ();  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	if (eWin > eLose)  		winPredicted++;  	cnt++;  	if (cnt == 200)  		break;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) {  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count == 0 || winners.Count == 0 || losers.Count == winners.Count)  		continue;  	if (winners.Select (x => x.Account.EffectiveElo).Max () > losers.Select (x => x.Account.EffectiveElo).Max ())  		winPro++;  	if (winners.Select (x => x.Account.EffectiveElo).Min () > losers.Select (x => x.Account.EffectiveElo).Min ())  		winLessNub++;  	if (winners.Select (x => x.Account.EffectiveElo).StdDev () > losers.Select (x => x.Account.EffectiveElo).StdDev ())  		winMoreVaried++;  	var winnerElo = winners.Select (x => x.Account.EffectiveElo).Average ();  	var loserElo = losers.Select (x => x.Account.EffectiveElo).Average ();  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	if (eWin > eLose)  		winPredicted++;  	cnt++;  	if (cnt == 200)  		break;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) {  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count == 0 || winners.Count == 0 || losers.Count == winners.Count)  		continue;  	if (winners.Select (x => x.Account.EffectiveElo).Max () > losers.Select (x => x.Account.EffectiveElo).Max ())  		winPro++;  	if (winners.Select (x => x.Account.EffectiveElo).Min () > losers.Select (x => x.Account.EffectiveElo).Min ())  		winLessNub++;  	if (winners.Select (x => x.Account.EffectiveElo).StdDev () > losers.Select (x => x.Account.EffectiveElo).StdDev ())  		winMoreVaried++;  	var winnerElo = winners.Select (x => x.Account.EffectiveElo).Average ();  	var loserElo = losers.Select (x => x.Account.EffectiveElo).Average ();  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	if (eWin > eLose)  		winPredicted++;  	cnt++;  	if (cnt == 200)  		break;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) {  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count == 0 || winners.Count == 0 || losers.Count == winners.Count)  		continue;  	if (winners.Select (x => x.Account.EffectiveElo).Max () > losers.Select (x => x.Account.EffectiveElo).Max ())  		winPro++;  	if (winners.Select (x => x.Account.EffectiveElo).Min () > losers.Select (x => x.Account.EffectiveElo).Min ())  		winLessNub++;  	if (winners.Select (x => x.Account.EffectiveElo).StdDev () > losers.Select (x => x.Account.EffectiveElo).StdDev ())  		winMoreVaried++;  	var winnerElo = winners.Select (x => x.Account.EffectiveElo).Average ();  	var loserElo = losers.Select (x => x.Account.EffectiveElo).Average ();  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	if (eWin > eLose)  		winPredicted++;  	cnt++;  	if (cnt == 200)  		break;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) {  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count == 0 || winners.Count == 0 || losers.Count == winners.Count)  		continue;  	if (winners.Select (x => x.Account.EffectiveElo).Max () > losers.Select (x => x.Account.EffectiveElo).Max ())  		winPro++;  	if (winners.Select (x => x.Account.EffectiveElo).Min () > losers.Select (x => x.Account.EffectiveElo).Min ())  		winLessNub++;  	if (winners.Select (x => x.Account.EffectiveElo).StdDev () > losers.Select (x => x.Account.EffectiveElo).StdDev ())  		winMoreVaried++;  	var winnerElo = winners.Select (x => x.Account.EffectiveElo).Average ();  	var loserElo = losers.Select (x => x.Account.EffectiveElo).Average ();  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	if (eWin > eLose)  		winPredicted++;  	cnt++;  	if (cnt == 200)  		break;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: foreach (var sb in db.SpringBattles.Where (x => !x.IsMission && !x.HasBots && x.IsEloProcessed && x.PlayerCount >= 8 && !x.Events.Any ()).OrderByDescending (x => x.SpringBattleID)) {  	var losers = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && !x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	var winners = sb.SpringBattlePlayers.Where (x => !x.IsSpectator && x.IsInVictoryTeam).Select (x => new {  		Player = x'  		x.Account  	}).ToList ();  	if (losers.Count == 0 || winners.Count == 0 || losers.Count == winners.Count)  		continue;  	if (winners.Select (x => x.Account.EffectiveElo).Max () > losers.Select (x => x.Account.EffectiveElo).Max ())  		winPro++;  	if (winners.Select (x => x.Account.EffectiveElo).Min () > losers.Select (x => x.Account.EffectiveElo).Min ())  		winLessNub++;  	if (winners.Select (x => x.Account.EffectiveElo).StdDev () > losers.Select (x => x.Account.EffectiveElo).StdDev ())  		winMoreVaried++;  	var winnerElo = winners.Select (x => x.Account.EffectiveElo).Average ();  	var loserElo = losers.Select (x => x.Account.EffectiveElo).Average ();  	var eWin = 1 / (1 + Math.Pow (10' (loserElo - winnerElo) / 400));  	var eLose = 1 / (1 + Math.Pow (10' (winnerElo - loserElo) / 400));  	if (eWin > eLose)  		winPredicted++;  	cnt++;  	if (cnt == 200)  		break;  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,TestPrediction,The following statement contains a magic number: if (cnt == 200)  	break;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: foreach (var line in File.ReadLines ("springie.csv").AsParallel ()) {  	var m = Regex.Match (line' "\"[0-9]+\";\"([^\"]+)\";\"[0-9]+\";\"[0-9]+\";\"([^\"]+)\";\"([^\"]+)\"");  	if (m.Success) {  		string name = m.Groups [1].Value;  		double elo = double.Parse (m.Groups [2].Value' CultureInfo.InvariantCulture);  		double w = double.Parse (m.Groups [3].Value' CultureInfo.InvariantCulture);  		if (elo != 1500 || w != 1) {  			foreach (var a in db.Accounts.Where (x => x.Name == name)) {  				a.Elo = (float)elo;  				a.EloWeight = (float)w;  			}  			Console.WriteLine (name);  		}  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: foreach (var line in File.ReadLines ("springie.csv").AsParallel ()) {  	var m = Regex.Match (line' "\"[0-9]+\";\"([^\"]+)\";\"[0-9]+\";\"[0-9]+\";\"([^\"]+)\";\"([^\"]+)\"");  	if (m.Success) {  		string name = m.Groups [1].Value;  		double elo = double.Parse (m.Groups [2].Value' CultureInfo.InvariantCulture);  		double w = double.Parse (m.Groups [3].Value' CultureInfo.InvariantCulture);  		if (elo != 1500 || w != 1) {  			foreach (var a in db.Accounts.Where (x => x.Name == name)) {  				a.Elo = (float)elo;  				a.EloWeight = (float)w;  			}  			Console.WriteLine (name);  		}  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: foreach (var line in File.ReadLines ("springie.csv").AsParallel ()) {  	var m = Regex.Match (line' "\"[0-9]+\";\"([^\"]+)\";\"[0-9]+\";\"[0-9]+\";\"([^\"]+)\";\"([^\"]+)\"");  	if (m.Success) {  		string name = m.Groups [1].Value;  		double elo = double.Parse (m.Groups [2].Value' CultureInfo.InvariantCulture);  		double w = double.Parse (m.Groups [3].Value' CultureInfo.InvariantCulture);  		if (elo != 1500 || w != 1) {  			foreach (var a in db.Accounts.Where (x => x.Name == name)) {  				a.Elo = (float)elo;  				a.EloWeight = (float)w;  			}  			Console.WriteLine (name);  		}  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: if (m.Success) {  	string name = m.Groups [1].Value;  	double elo = double.Parse (m.Groups [2].Value' CultureInfo.InvariantCulture);  	double w = double.Parse (m.Groups [3].Value' CultureInfo.InvariantCulture);  	if (elo != 1500 || w != 1) {  		foreach (var a in db.Accounts.Where (x => x.Name == name)) {  			a.Elo = (float)elo;  			a.EloWeight = (float)w;  		}  		Console.WriteLine (name);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: if (m.Success) {  	string name = m.Groups [1].Value;  	double elo = double.Parse (m.Groups [2].Value' CultureInfo.InvariantCulture);  	double w = double.Parse (m.Groups [3].Value' CultureInfo.InvariantCulture);  	if (elo != 1500 || w != 1) {  		foreach (var a in db.Accounts.Where (x => x.Name == name)) {  			a.Elo = (float)elo;  			a.EloWeight = (float)w;  		}  		Console.WriteLine (name);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: if (m.Success) {  	string name = m.Groups [1].Value;  	double elo = double.Parse (m.Groups [2].Value' CultureInfo.InvariantCulture);  	double w = double.Parse (m.Groups [3].Value' CultureInfo.InvariantCulture);  	if (elo != 1500 || w != 1) {  		foreach (var a in db.Accounts.Where (x => x.Name == name)) {  			a.Elo = (float)elo;  			a.EloWeight = (float)w;  		}  		Console.WriteLine (name);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,ImportSpringiePlayers,The following statement contains a magic number: if (elo != 1500 || w != 1) {  	foreach (var a in db.Accounts.Where (x => x.Name == name)) {  		a.Elo = (float)elo;  		a.EloWeight = (float)w;  	}  	Console.WriteLine (name);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: try {  	var db = new ZkDataContext ();  	foreach (var r in db.Resources.Where (x => x.LastChange == null))  		r.LastChange = DateTime.UtcNow;  	db.SaveChanges ();  	return;  	foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))  	 {  		var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  		resource.MapWidth = map.Size.Width / 512;  		resource.MapHeight = map.Size.Height / 512;  		if (string.IsNullOrEmpty (resource.AuthorName)) {  			if (!string.IsNullOrEmpty (map.Author))  				resource.AuthorName = map.Author;  			else {  				Console.WriteLine ("regex test");  				var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  				if (m.Success)  					resource.AuthorName = m.Groups [1].Value;  			}  		}  		Console.WriteLine ("author: " + resource.AuthorName);  		if (resource.MapIsSpecial == null)  			resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  		resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  		resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  		var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		using (var im = Image.FromFile (minimap)) {  			int w' h;  			if (resource.MapSizeRatio > 1) {  				w = 96;  				h = (int)(w / resource.MapSizeRatio);  			} else {  				h = 96;  				w = (int)(h * resource.MapSizeRatio);  			}  			using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  				using (var graphics = Graphics.FromImage (correctMinimap)) {  					graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  					graphics.DrawImage (im' 0' 0' w' h);  				}  				var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  				var encoderParams = new EncoderParameters (1);  				encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  				var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  				correctMinimap.Save (target' jgpEncoder' encoderParams);  			}  		}  		Console.WriteLine (string.Format ("{0}"' resource.InternalName));  	}  	db.SaveChanges ();  } catch (Exception ex) {  	Console.WriteLine (ex);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: foreach (var resource in db.Resources.Where (x => x.TypeID == ResourceType.Map))//&&x.MapSizeSquared == null))   {  	var file = String.Format ("{0}/{1}.metadata.xml.gz"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	var map = (Map)new XmlSerializer (typeof(Map)).Deserialize (new MemoryStream (File.ReadAllBytes (file).Decompress ()));  	resource.MapWidth = map.Size.Width / 512;  	resource.MapHeight = map.Size.Height / 512;  	if (string.IsNullOrEmpty (resource.AuthorName)) {  		if (!string.IsNullOrEmpty (map.Author))  			resource.AuthorName = map.Author;  		else {  			Console.WriteLine ("regex test");  			var m = Regex.Match (map.Description' "by ([\\w]+)"' RegexOptions.IgnoreCase);  			if (m.Success)  				resource.AuthorName = m.Groups [1].Value;  		}  	}  	Console.WriteLine ("author: " + resource.AuthorName);  	if (resource.MapIsSpecial == null)  		resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  	resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  	resource.MapSizeRatio = (float)map.Size.Width / map.Size.Height;  	var minimap = String.Format ("{0}/{1}.minimap.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  	using (var im = Image.FromFile (minimap)) {  		int w' h;  		if (resource.MapSizeRatio > 1) {  			w = 96;  			h = (int)(w / resource.MapSizeRatio);  		} else {  			h = 96;  			w = (int)(h * resource.MapSizeRatio);  		}  		using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  			using (var graphics = Graphics.FromImage (correctMinimap)) {  				graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  				graphics.DrawImage (im' 0' 0' w' h);  			}  			var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  			var encoderParams = new EncoderParameters (1);  			encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  			var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  			correctMinimap.Save (target' jgpEncoder' encoderParams);  		}  	}  	Console.WriteLine (string.Format ("{0}"' resource.InternalName));  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: resource.MapWidth = map.Size.Width / 512;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: resource.MapHeight = map.Size.Height / 512;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: if (resource.MapIsSpecial == null)  	resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: if (resource.MapIsSpecial == null)  	resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: resource.MapIsSpecial = map.ExtractorRadius > 120 || map.MaxWind > 40;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: resource.MapSizeSquared = (map.Size.Width / 512) * (map.Size.Height / 512);  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: using (var im = Image.FromFile (minimap)) {  	int w' h;  	if (resource.MapSizeRatio > 1) {  		w = 96;  		h = (int)(w / resource.MapSizeRatio);  	} else {  		h = 96;  		w = (int)(h * resource.MapSizeRatio);  	}  	using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  		using (var graphics = Graphics.FromImage (correctMinimap)) {  			graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  			graphics.DrawImage (im' 0' 0' w' h);  		}  		var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  		var encoderParams = new EncoderParameters (1);  		encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  		var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		correctMinimap.Save (target' jgpEncoder' encoderParams);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: using (var im = Image.FromFile (minimap)) {  	int w' h;  	if (resource.MapSizeRatio > 1) {  		w = 96;  		h = (int)(w / resource.MapSizeRatio);  	} else {  		h = 96;  		w = (int)(h * resource.MapSizeRatio);  	}  	using (var correctMinimap = new Bitmap (w' h' PixelFormat.Format24bppRgb)) {  		using (var graphics = Graphics.FromImage (correctMinimap)) {  			graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;  			graphics.DrawImage (im' 0' 0' w' h);  		}  		var jgpEncoder = ImageCodecInfo.GetImageEncoders ().First (x => x.FormatID == ImageFormat.Jpeg.Guid);  		var encoderParams = new EncoderParameters (1);  		encoderParams.Param [0] = new EncoderParameter (Encoder.Quality' 100L);  		var target = String.Format ("{0}/{1}.thumbnail.jpg"' GlobalConst.SiteDiskPath + @"\Resources"' resource.InternalName.EscapePath ());  		correctMinimap.Save (target' jgpEncoder' encoderParams);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: if (resource.MapSizeRatio > 1) {  	w = 96;  	h = (int)(w / resource.MapSizeRatio);  } else {  	h = 96;  	w = (int)(h * resource.MapSizeRatio);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: if (resource.MapSizeRatio > 1) {  	w = 96;  	h = (int)(w / resource.MapSizeRatio);  } else {  	h = 96;  	w = (int)(h * resource.MapSizeRatio);  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: w = 96;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,FixMaps,The following statement contains a magic number: h = 96;  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,MassBan,The following statement contains a magic number: for (int i = startIndex; i <= endIndex; i++) {  	Account acc = db.Accounts.FirstOrDefault (x => x.Name == name + i);  	if (acc != null) {  		int? userID = banID ? (int?)acc.AccountUserIDs.OrderByDescending (x => x.LastLogin).FirstOrDefault ().UserID : null;  		string userIP = banIP ? acc.AccountIPs.OrderByDescending (x => x.LastLogin).FirstOrDefault ().IP : null;  		System.Console.WriteLine (acc.Name' userID' userIP);  		Punishment punishment = new Punishment {  			Time = DateTime.UtcNow'  			Reason = reason'  			BanSite = banSite'  			BanLobby = banLobby'  			BanExpires = DateTime.UtcNow.AddHours (banHours)'  			BanIP = userIP'  			CreatedAccountID = 5806'  			UserID = userID'  		};  		acc.PunishmentsByAccountID.Add (punishment);  	}  }  
Magic Number,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,MassBan,The following statement contains a magic number: if (acc != null) {  	int? userID = banID ? (int?)acc.AccountUserIDs.OrderByDescending (x => x.LastLogin).FirstOrDefault ().UserID : null;  	string userIP = banIP ? acc.AccountIPs.OrderByDescending (x => x.LastLogin).FirstOrDefault ().IP : null;  	System.Console.WriteLine (acc.Name' userID' userIP);  	Punishment punishment = new Punishment {  		Time = DateTime.UtcNow'  		Reason = reason'  		BanSite = banSite'  		BanLobby = banLobby'  		BanExpires = DateTime.UtcNow.AddHours (banHours)'  		BanIP = userIP'  		CreatedAccountID = 5806'  		UserID = userID'  	};  	acc.PunishmentsByAccountID.Add (punishment);  }  
Missing Default,Fixer,Program,D:\newReposJune17\ZeroK-RTS_Zero-K-Infrastructure\Fixer\Program.cs,GetPair,The following switch statement is missing a default case: switch (Type) {  case OptionType.Bool:  	if (Value != "0" && Value != "1")  		return false;  	return true;  case OptionType.Number:  	double d;  	if (!double.TryParse (Value' out d))  		return false;  	return true;  case OptionType.String:  	return true;  }  
