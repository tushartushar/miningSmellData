Implementation smell,Namespace,Class,File,Method,Description
Long Method,HSBot.Cards,Card,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\Card.cs,GetFullText,The method has 117 lines of code.
Long Method,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The method has 173 lines of code.
Complex Method,HSBot.Cards,Card,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\Card.cs,GetFullText,Cyclomatic complexity of the method is 27
Complex Method,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,Cyclomatic complexity of the method is 32
Complex Method,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,FindAndPrintMatch,Cyclomatic complexity of the method is 11
Complex Method,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,Cyclomatic complexity of the method is 12
Complex Method,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,RefreshList,Cyclomatic complexity of the method is 10
Complex Method,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,Cyclomatic complexity of the method is 8
Complex Method,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMode,Cyclomatic complexity of the method is 13
Complex Method,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnNumericReceived,Cyclomatic complexity of the method is 10
Long Parameter List,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnKick,The method has 5 parameters. Parameters: sender' source' target' channel' reason
Long Parameter List,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnNumericReceived,The method has 5 parameters. Parameters: sender' source' numeric' target' other
Long Parameter List,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ConnectAsync,The method has 6 parameters. Parameters: nick' user' realname' host' port' password
Long Statement,HSBot.Cards,Card,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\Card.cs,ReplaceDollarWithStar,The length of the statement  "            // Create a SB to store results. Same as the original with room for 1 more *. If more are needed (rare case) it will be resized. " is 128.
Long Statement,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,Extract,The length of the statement  "            Queue<KeyValuePair<String' KeyValuePair<long' long>>> xmlOffsets = new Queue<KeyValuePair<String' KeyValuePair<long' long>>>(); " is 127.
Long Statement,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The length of the statement  "                        if (card.Type == (int)Card.CardType.HERO || card.Type == (int)Card.CardType.EFFECT) // Heros? 3 included the Hero "Hogger" 0/10 -- 4 may be creatures -- 7 may be weapons (warrior) " is 179.
Long Statement,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The length of the statement  "            hearthbot.Description = @"<b>Battlecry:</b> Destroy all secrets and deal 100 damage to the enemy hero. To get it' go here: https://github.com/aca20031/hsbot/"; " is 159.
Long Statement,HSBot,Config,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Config.cs,Reload,The length of the statement  "            AutoTriggerMatchRequirement = int.Parse(doc.DocumentElement.SelectSingleNode("/config/autotrigger/matchrequirement").InnerText); " is 128.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The length of the statement  "                            sender.ConnectAsync(Config.IRCNick' Config.IRCUser' Config.IRCName' Config.IRCHost' Config.IRCPort' Config.IRCPass).Wait(); " is 123.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The length of the statement  "            // The point of this is to prevent flooding. This is done by indexing into  to m_flowRateMap with the nickname and incrementing the number value when they talk " is 159.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The length of the statement  "            // Everry 1 second' we check to see if FlowRateSeconds has past since the last time they used a command and if so' decrement it " is 127.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,OnPrivmsg,The length of the statement  "            if (lowerMessage.StartsWith("!card ") && message.Length > "!card ".Length && message.Length <= (Config.MaxCardNameLength + "!card ".Length)) " is 140.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,FindAndPrintMatch,The length of the statement  "                    var sendNoticeTask = Client.SendRawMessageAsync("NOTICE {0} :{1}"' ChannelUser.GetNickFromFullAddress(source)' noticeMessage.ToString()); " is 137.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,GetYoutubeVideoIDFromUriAsync,The length of the statement  "            m_httpClient.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("text/html"' 1.0)); " is 125.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,GetYoutubeDataFromIDAsync,The length of the statement  "            String url = String.Format("https://www.googleapis.com/youtube/v3/videos?id={0}&key=AIzaSyDWaA2OoArAjQTHqmN6r9XrpHYNkpKGyGw&part=snippet'contentDetails'statistics'status"' id); " is 176.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                    // 2.) If the card name given is a substring of this card name' boost the percentage to allow for lazy matching of long names " is 125.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                            double match = 1 - (LevenshteinDistance(searchWordsKvp.Key' testCardNameWord) / (double)Math.Max(searchWordsKvp.Key.Length' testCardNameWord.Length)); " is 150.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                            if (searchWordsKvp.Value.Reverse().First((t) => t.IsValid).MatchPercentage > highest.Value.Reverse().First((t) => t.IsValid).MatchPercentage) " is 141.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                        // Remove one instance of this test word from the match sets of all the search words so we dont consider it in the next iterations " is 130.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                            searchWordsKvp.Value.Reverse().First<MatchResult<string>> ((test) => test.IsValid && test.Item.Equals(maxValue.Item)).IsValid = false; " is 134.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                            Console.WriteLine("\tTest string percent: {0}% has weight {1}%"' percentOfTestStringMatched * 100' weightOfSearchString * 100); " is 127.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                            Console.WriteLine("\tSearch string percent: {0}% has weight {1}%"' percentOfSearchStringMatched * 100' weightOfTestString * 100); " is 129.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                            Console.WriteLine("\tTotal added contribution: {0}%"' percentOfSearchStringMatched * maxValue.MatchPercentage * weightOfSearchString + percentOfTestStringMatched * maxValue.MatchPercentage * weightOfTestString); " is 211.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                    // This allows lazy searches like "rag" to match "ragnarous" even though it is really a small percentage of the whole card " is 122.
Long Statement,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The length of the statement  "                        MatchResult<CardSet> result = new MatchResult<CardSet>(cardMapKvp.Value'percentMatch == 1 ? 1 : Math.Min(0.99' percentMatch)); " is 126.
Long Statement,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,Main,The length of the statement  "                Console.Error.WriteLine("Config file corrupt. Please makes sure all the values in config.xml make sense. If you just updated' the structure may have changed - please reconfigure."); " is 181.
Long Statement,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,GetCardDataFile,The length of the statement  "            Object hsInstall = Microsoft.Win32.Registry.GetValue(@"HKEY_LOCAL_MACHINE\Software" + (IntPtr.Size == 8 ? @"\Wow6432Node" : "") + @"\Microsoft\Windows\CurrentVersion\Uninstall\Hearthstone"' "InstallLocation"' null); " is 215.
Long Statement,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,GetCardDataFile,The length of the statement  "                Console.WriteLine("Hearthstone installation not found. Enter the absolute path to cardxml0.unity3d or nothing to use the same directory as HSBot.exe"); " is 151.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The length of the statement  "            // Keeps this at the end of the method so that the more specific event' as well as internal events' are all handled first " is 121.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnNick,The length of the statement  "            Debug.Assert(fFoundUser' "A user changed his nickname but doesn't appear to be in our nick list. Nick change: {0} -> {1}"' oldNick' newNick); " is 141.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnKick,The length of the statement  "                Debug.Assert(channelObject != null' "Any channel on which we receive a KICK should be in our channel list"' "Channel: {0}"' channel); " is 133.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMode,The length of the statement  "                    // This loop walks through the mode list and keeps track for each one 1.) The mode' 2.) If it is set 3.) If it has a parameter and 4.) The index of the parameter " is 161.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMode,The length of the statement  "                                continue; // This mode only has a parameter when being set' so it does not have a parameter in the list if it is not being set " is 126.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMode,The length of the statement  "                                        // This can happen if users are hidden or servers get a little loose with the rules' so let's pretend like he's in there. " is 121.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMode,The length of the statement  "                                    Debug.Assert(modeIndexIntoPrefixList >= 0' "Mode set on user that was not in PREFIX list. This could be because we fell back to a default list."); " is 146.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnNames,The length of the statement  "                    for (nameStart = 0; sender.ServerInfo.PREFIX_symbols != null && sender.ServerInfo.PREFIX_symbols.Contains(name[nameStart]); ++nameStart) ; " is 138.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnNames,The length of the statement  "                    /// If we are in the NAMES reply for a channel' that means we are in that channel and should make sure it is in our list " is 120.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnJoin,The length of the statement  "                    Debug.Assert(!c.Users.ContainsKey(u.Nick.ToLower())' "Received a JOIN for a user that was already in the ChannelUser list"' "User: {0}"' u.Nick); " is 145.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ConnectAsync,The length of the statement  "                            m_pingTimer.Change(TimeSpan.FromMilliseconds(Timeout.TotalMilliseconds / 2)' TimeSpan.FromMilliseconds(Timeout.TotalMilliseconds / 2)); " is 135.
Long Statement,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,NumericHandler,The length of the statement  "                    ieOnNumericReceived(this' words[0]' numeric' words[2]' words.Length > 3 ? message.Substring(message.IndexOf(words[2]) + words[2].Length + 1) : null); " is 149.
Long Statement,benbuzbee.LRTIRC,ChannelUser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,InsertPrefix,The length of the statement  "            Debug.Assert(svrInfo.PREFIX_symbols != null' "svrInfo.PREFIX_symbols is null - it should have been set when we received ISUPPORT from the server.  It is not possible to maintain a prefix list without this information"); " is 219.
Long Statement,benbuzbee.LRTIRC,ChannelUser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,InsertPrefix,The length of the statement  "            Debug.Assert(svrInfo.PREFIX_symbols.Contains(prefix)' "svrInfo.PREFIX_symbols is non-null but does not contain the prefix that was inserted"' "Prefix: {0}"' prefix); " is 165.
Long Statement,benbuzbee.LRTIRC,ChannelUser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,InsertPrefix,The length of the statement  "                    /// Find the first prefix in the current list (newList) whose value is less than this new prefix' and insert at that position " is 125.
Long Statement,benbuzbee.LRTIRC,ChannelUser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,InsertPrefix,The length of the statement  "                        else if (i + 1 == m_prefixes.Length) // If we've reached the end and still haven't found one of lower value' then this one belongs at the end " is 141.
Long Statement,benbuzbee.LRTIRC,IrcReader,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ThreadStart,The length of the statement  "                    catch (ThreadInterruptedException) { Log.Info("Reader thread was interrupted."); /* Allow interrupts to break us out of the read-wait loop but not the entire thread */ } " is 169.
Long Statement,benbuzbee.LRTIRC,IrcReader,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ThreadStart,The length of the statement  "                catch (ThreadInterruptedException) { Log.Info("Reader thread was interrupted while blocked. m_alive={0}"'m_alive); /* If interrupted' it's either ReleaseStream (go back and wait) or its Kill (go back and find m_alive to be false) */ } " is 234.
Empty Catch Block,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,HandleUrlAndReply,The method has an empty catch block.
Empty Catch Block,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,Main,The method has an empty catch block.
Empty Catch Block,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,DisconnectInternal,The method has an empty catch block.
Empty Catch Block,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,DisconnectInternal,The method has an empty catch block.
Magic Number,HSBot.Cards,Card,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\Card.cs,GetFullText,The following statement contains a magic number: StringBuilder sb = new StringBuilder(2048);
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,Extract,The following statement contains a magic number: byte[] locBuf = new byte[4];
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,Extract,The following statement contains a magic number: input.Seek(4' SeekOrigin.Current);
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The following statement contains a magic number: switch (iRarity)                          {                              case 1:                                  card.Rarity = Card.RarityValues.COMMON;                                  break;                              case 2:                                  card.Rarity = Card.RarityValues.FREE;                                  break;                              case 3:                                  card.Rarity = Card.RarityValues.RARE;                                  break;                              case 4:                                  card.Rarity = Card.RarityValues.EPIC;                                  break;                              case 5:                                  card.Rarity = Card.RarityValues.LEGENDARY;                                  break;                              default:                                  card.Rarity = Card.RarityValues.UNKNOWN;                                  break;                          }
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The following statement contains a magic number: switch (iRarity)                          {                              case 1:                                  card.Rarity = Card.RarityValues.COMMON;                                  break;                              case 2:                                  card.Rarity = Card.RarityValues.FREE;                                  break;                              case 3:                                  card.Rarity = Card.RarityValues.RARE;                                  break;                              case 4:                                  card.Rarity = Card.RarityValues.EPIC;                                  break;                              case 5:                                  card.Rarity = Card.RarityValues.LEGENDARY;                                  break;                              default:                                  card.Rarity = Card.RarityValues.UNKNOWN;                                  break;                          }
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The following statement contains a magic number: switch (iRarity)                          {                              case 1:                                  card.Rarity = Card.RarityValues.COMMON;                                  break;                              case 2:                                  card.Rarity = Card.RarityValues.FREE;                                  break;                              case 3:                                  card.Rarity = Card.RarityValues.RARE;                                  break;                              case 4:                                  card.Rarity = Card.RarityValues.EPIC;                                  break;                              case 5:                                  card.Rarity = Card.RarityValues.LEGENDARY;                                  break;                              default:                                  card.Rarity = Card.RarityValues.UNKNOWN;                                  break;                          }
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The following statement contains a magic number: switch (iRarity)                          {                              case 1:                                  card.Rarity = Card.RarityValues.COMMON;                                  break;                              case 2:                                  card.Rarity = Card.RarityValues.FREE;                                  break;                              case 3:                                  card.Rarity = Card.RarityValues.RARE;                                  break;                              case 4:                                  card.Rarity = Card.RarityValues.EPIC;                                  break;                              case 5:                                  card.Rarity = Card.RarityValues.LEGENDARY;                                  break;                              default:                                  card.Rarity = Card.RarityValues.UNKNOWN;                                  break;                          }
Magic Number,HSBot.Cards,CardParser,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\CardParser.cs,GetCards,The following statement contains a magic number: hearthbot.Health = hearthbot.Attack = 50;
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,IRC,The following statement contains a magic number: dataFileChangeWatcher.Changed += (sender' fileSystemEventArgs) =>                  {                      Console.WriteLine("Detected a change to card data file - refreshing card list.");                      refresh:                      lock (m_cardMap)                      {                          try                          {                              using (var fs = File.OpenRead(fileSystemEventArgs.FullPath)) { }                              RefreshList();                          } catch (IOException)                          {                              Console.WriteLine("File cannot be read: {0}"' fileSystemEventArgs.FullPath);                              Thread.Sleep(1000);                              goto refresh;                          }                                                }                  };
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The following statement contains a magic number: Action<IrcClient> connectAction = (sender) =>              {                  lock (mutexConnect)                  {                      if (sender.Connected) return;                      while (true)                      {                          try                          {                              Console.WriteLine("Trying to connect to IRC...");                              sender.ConnectAsync(Config.IRCNick' Config.IRCUser' Config.IRCName' Config.IRCHost' Config.IRCPort' Config.IRCPass).Wait();                              Console.WriteLine("Connection established");                              break;                          }                          catch (Exception)                          {                              Console.WriteLine("Exception while connecting. Trying again in 30 seconds (check your network connection)");                              System.Threading.Thread.Sleep(30000);                          }                      }                  }              };
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The following statement contains a magic number: Client.OnTimeout += (c) =>              {                  lock (mutexConnect) { if (m_isConnecting) return; m_isConnecting = true; }                                  Console.WriteLine("Server timed out' reconnecting in 30 seconds...");                  Client.Disconnect();                  System.Threading.Thread.Sleep(30000);                    connectAction(c);                  m_isConnecting = false;                                };
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The following statement contains a magic number: Client.OnDisconnect += (c) =>              {                                  lock (mutexConnect) { if (m_isConnecting) return; m_isConnecting = true; }                    Console.WriteLine("Disconnected from server' reconnecting in 60 seconds...");                  Client.Disconnect();                  System.Threading.Thread.Sleep(60000);                                        connectAction(c);                  m_isConnecting = false;                                };
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,StartConnect,The following statement contains a magic number: m_flowRateTimer = new Timer((state) => {                  lock (m_FlowRateMap)                  {                      // Decrement the message count of everyone who hasn't spoken in FlowRateSeconds                      // If we get to 0' remove them from the map                      List<String> keysToRemove = new List<string>();                      foreach (var kvp in m_FlowRateMap)                      {                          var line = kvp.Value;                          lock (line)                          {                              if ((DateTime.Now - line.LastUpdated) >= TimeSpan.FromSeconds(Config.FlowRateSeconds))                              {                                  --line.Messages;                              }                              if (line.Messages <= 0)                              {                                  keysToRemove.Add(kvp.Key);                              }                          }                      }                      foreach (String key in keysToRemove)                      {                          m_FlowRateMap.Remove(key);                      }                      keysToRemove.Clear();                  }              } ' null'0'1000);
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,FindAndPrintMatch,The following statement contains a magic number: var results = LookupCardSet(query' 0.50/*min match*/' 0.50/*boost substrings*/);
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,FindAndPrintMatch,The following statement contains a magic number: var results = LookupCardSet(query' 0.50/*min match*/' 0.50/*boost substrings*/);
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,GetVideoIDFromYoutubeUri,The following statement contains a magic number: vStart += 2;
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The following statement contains a magic number: double weightOfSearchString = .75;
Magic Number,HSBot,IRC,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IRC.cs,LookupCardSet,The following statement contains a magic number: MatchResult<CardSet> result = new MatchResult<CardSet>(cardMapKvp.Value'percentMatch == 1 ? 1 : Math.Min(0.99' percentMatch));
Magic Number,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,Main,The following statement contains a magic number: Console.CancelKeyPress += (s' e) => {                  irc.Client.SendRawMessageAsync("QUIT :Be right back!").Wait(5000);              };
Magic Number,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,GetCardDataFile,The following statement contains a magic number: Object hsInstall = Microsoft.Win32.Registry.GetValue(@"HKEY_LOCAL_MACHINE\Software" + (IntPtr.Size == 8 ? @"\Wow6432Node" : "") + @"\Microsoft\Windows\CurrentVersion\Uninstall\Hearthstone"' "InstallLocation"' null);
Magic Number,HSBot,Program,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Program.cs,GetCardDataFile,The following statement contains a magic number: inputReceivedEvent.WaitOne(20000);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: ieOnJoin(sender' tokens[0].Replace(":"' "")' tokens[2].Replace(":"' ""));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: tokens.Length >= 3 && tokens[1].Equals("JOIN")
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: tokens.Length >= 3 && tokens[1].Equals("QUIT")
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: ieOnMode(sender'                           tokens[0].Replace(":"' "")'                            tokens[2]'                            message.Substring(message.IndexOf(tokens[2]) + tokens[2].Length + 1));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: ieOnMode(sender'                           tokens[0].Replace(":"' "")'                            tokens[2]'                            message.Substring(message.IndexOf(tokens[2]) + tokens[2].Length + 1));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: ieOnMode(sender'                           tokens[0].Replace(":"' "")'                            tokens[2]'                            message.Substring(message.IndexOf(tokens[2]) + tokens[2].Length + 1));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: tokens.Length >= 4 && tokens[1].Equals("MODE")
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: String reason = tokens.Length >= 4 ? message.Substring(message.IndexOf(':'' 1)) : null;
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: ieOnPart(this' tokens[0].Replace(":"' "")' tokens[2]' reason);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: tokens.Length >= 3 && tokens[1].Equals("PART")
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: String source = tokens[0].Replace(":"' "")' channel = tokens[2]' target = tokens[3];
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: String source = tokens[0].Replace(":"' "")' channel = tokens[2]' target = tokens[3];
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: tokens.Length >= 5 && tokens[1].Equals("KICK")
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: ieOnNick(sender' tokens[0].Replace(":"' "")' tokens[2].Replace(":"' ""));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ieOnMessageReceived,The following statement contains a magic number: tokens.Length >= 3 && tokens[1].Equals("NICK")
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,IrcClient,The following statement contains a magic number: Timeout = new TimeSpan(0' 2' 0);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ConnectAsync,The following statement contains a magic number: m_pingTimer.Change(TimeSpan.FromMilliseconds(Timeout.TotalMilliseconds / 2)' TimeSpan.FromMilliseconds(Timeout.TotalMilliseconds / 2));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,ConnectAsync,The following statement contains a magic number: m_pingTimer.Change(TimeSpan.FromMilliseconds(Timeout.TotalMilliseconds / 2)' TimeSpan.FromMilliseconds(Timeout.TotalMilliseconds / 2));
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,PrivmsgHandler,The following statement contains a magic number: String target = words[2];
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,PrivmsgHandler,The following statement contains a magic number: words.Length >= 4 && OnRfcPrivmsg != null && words[1].Equals("PRIVMSG"' StringComparison.CurrentCultureIgnoreCase)
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,NumericHandler,The following statement contains a magic number: ieOnNumericReceived(this' words[0]' numeric' words[2]' words.Length > 3 ? message.Substring(message.IndexOf(words[2]) + words[2].Length + 1) : null);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,NumericHandler,The following statement contains a magic number: ieOnNumericReceived(this' words[0]' numeric' words[2]' words.Length > 3 ? message.Substring(message.IndexOf(words[2]) + words[2].Length + 1) : null);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,NumericHandler,The following statement contains a magic number: ieOnNumericReceived(this' words[0]' numeric' words[2]' words.Length > 3 ? message.Substring(message.IndexOf(words[2]) + words[2].Length + 1) : null);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,NumericHandler,The following statement contains a magic number: ieOnNumericReceived(this' words[0]' numeric' words[2]' words.Length > 3 ? message.Substring(message.IndexOf(words[2]) + words[2].Length + 1) : null);
Magic Number,benbuzbee.LRTIRC,IrcClient,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\IrcClient.cs,NumericHandler,The following statement contains a magic number: words.Length >= 3
Missing Default,HSBot.Cards,Card,D:\research\architectureSmells\repos\aca20031_hsbot\Hearthstone Item Bot\Cards\Card.cs,GetFullText,The following switch statement is missing a default case: switch (Class)              {                  case ClassValues.ALL:                      sb.Append("- All classes ");                      break;                  case ClassValues.MAGE:                      sb.Append("- Mages ");                      break;                  case ClassValues.ROGUE:                      sb.Append("- Rogues ");                      break;                  case ClassValues.DRUID:                      sb.Append("- Druids ");                      break;                  case ClassValues.HUNTER:                      sb.Append("- Hunters ");                      break;                  case ClassValues.PALADIN:                      sb.Append("- Paladins ");                      break;                  case ClassValues.WARLOCK:                      sb.Append("- Warlocks ");                      break;                  case ClassValues.WARRIOR:                      sb.Append("- Warriors ");                      break;                  case ClassValues.PRIEST:                      sb.Append("- Priests ");                      break;                  case ClassValues.SHAMAN:                      sb.Append("- Shamans ");                      break;              }
