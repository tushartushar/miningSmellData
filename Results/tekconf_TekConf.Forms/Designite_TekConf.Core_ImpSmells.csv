Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConferencesAsync,Cyclomatic complexity of the method is 14
Complex Method,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteMyConferencesAsync,Cyclomatic complexity of the method is 13
Complex Method,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConference,Cyclomatic complexity of the method is 13
Long Parameter List,TekConf.Core.ViewModels,ConferencesListViewModel,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\ViewModels\ConferencesListViewModel.cs,ConferencesListViewModel,The method has 5 parameters.
Long Parameter List,TekConf.Core.ViewModels,MyConferencesViewModel,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\ViewModels\MyConferencesViewModel.cs,MyConferencesViewModel,The method has 5 parameters.
Long Parameter List,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetConferences,The method has 6 parameters.
Long Parameter List,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetMyConferences,The method has 5 parameters.
Long Parameter List,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConferencesAsync,The method has 5 parameters.
Long Statement,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConferencesAsync,The length of the statement  "	conferences = await Policy.Handle<ApiException> ().WaitAndRetryAsync (retryCount: 5' sleepDurationProvider: retryAttempt => TimeSpan.FromSeconds (Math.Pow (2' retryAttempt))).ExecuteAsync (() => getConferencesTask); " is 215.
Long Statement,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteMyConferencesAsync,The length of the statement  "	conferences = await Policy.Handle<WebException> ().WaitAndRetryAsync (retryCount: 5' sleepDurationProvider: retryAttempt => TimeSpan.FromSeconds (Math.Pow (2' retryAttempt))).ExecuteAsync (() => getConferencesTask); " is 215.
Long Statement,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConference,The length of the statement  "		conference = await Policy.Handle<Exception> ().RetryAsync (retryCount: 5).ExecuteAsync (async () => await getConferenceTask); " is 125.
Magic Number,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConferencesAsync,The following statement contains a magic number: conferences = await Policy.Handle<ApiException> ().WaitAndRetryAsync (retryCount: 5' sleepDurationProvider: retryAttempt => TimeSpan.FromSeconds (Math.Pow (2' retryAttempt))).ExecuteAsync (() => getConferencesTask);  
Magic Number,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConferencesAsync,The following statement contains a magic number: conferences = await Policy.Handle<ApiException> ().WaitAndRetryAsync (retryCount: 5' sleepDurationProvider: retryAttempt => TimeSpan.FromSeconds (Math.Pow (2' retryAttempt))).ExecuteAsync (() => getConferencesTask);  
Magic Number,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteMyConferencesAsync,The following statement contains a magic number: conferences = await Policy.Handle<WebException> ().WaitAndRetryAsync (retryCount: 5' sleepDurationProvider: retryAttempt => TimeSpan.FromSeconds (Math.Pow (2' retryAttempt))).ExecuteAsync (() => getConferencesTask);  
Magic Number,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteMyConferencesAsync,The following statement contains a magic number: conferences = await Policy.Handle<WebException> ().WaitAndRetryAsync (retryCount: 5' sleepDurationProvider: retryAttempt => TimeSpan.FromSeconds (Math.Pow (2' retryAttempt))).ExecuteAsync (() => getConferencesTask);  
Magic Number,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConference,The following statement contains a magic number: if (CrossConnectivity.Current.IsConnected) {  	conference = await Policy.Handle<Exception> ().RetryAsync (retryCount: 5).ExecuteAsync (async () => await getConferenceTask);  }  
Magic Number,TekConf.Core.Services,ConferencesService,C:\repos\tekconf_TekConf.Forms\TekConf\TekConf.Core\Services\ConferencesService.cs,GetRemoteConference,The following statement contains a magic number: conference = await Policy.Handle<Exception> ().RetryAsync (retryCount: 5).ExecuteAsync (async () => await getConferenceTask);  
