Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,PackageActionBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PackageActionBaseCommand.cs,InstallPackageByIdentityAsync,The method has 5 parameters. Parameters: project' identity' resolutionContext' projectContext' isPreview
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,PackageActionBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PackageActionBaseCommand.cs,InstallPackageByIdAsync,The method has 5 parameters. Parameters: project' packageId' resolutionContext' projectContext' isPreview
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,IErrorHandler,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Utility\IErrorHandler.cs,HandleException,The method has 5 parameters. Parameters: exception' terminating' errorId' category' target
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,GetInstalledPackages,The method has 5 parameters. Parameters: projects' filter' skip' take' token
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,GetPackagesFromRemoteSourceAsync,The method has 5 parameters. Parameters: packageId' targetFrameworks' includePrerelease' skip' take
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,HandleException,The method has 5 parameters. Parameters: exception' terminating' errorId' category' target
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,UninstallPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\UninstallPackageCommand.cs,UninstallPackageByIdAsync,The method has 5 parameters. Parameters: project' packageId' uninstallContext' projectContext' isPreview
Long Parameter List,NuGet.PackageManagement.PowerShellCmdlets,PSPathUtility,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Utility\PSPathUtility.cs,TryTranslatePSPath,The method has 5 parameters. Parameters: session' psPath' path' exists' errorMessage
Long Identifier,NuGet.PackageManagement.PowerShellCmdlets,PackageActionBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PackageActionBaseCommand.cs,EndProcessing,The length of the parameter packageDirectoriesMarkedForDeletion is 35.
Long Identifier,NuGet.PackageManagement.PowerShellCmdlets,UninstallPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\UninstallPackageCommand.cs,EndProcessing,The length of the parameter packageDirectoriesMarkedForDeletion is 35.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,AddBindingRedirectCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\AddBindingRedirectCommand.cs,ProcessRecordCore,The length of the statement  "                            var redirects = await RuntimeHelpers.AddBindingRedirectsAsync(VsSolutionManager' project' domain' projectAssembliesCache' _frameworkMultiTargeting' this); " is 154.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,PackageActionBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PackageActionBaseCommand.cs,InstallPackageByIdentityAsync,The length of the statement  "                var actions = await PackageManager.PreviewInstallPackageAsync(project' identity' resolutionContext' projectContext' ActiveSourceRepository' null' CancellationToken.None); " is 170.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,PackageActionBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PackageActionBaseCommand.cs,InstallPackageByIdAsync,The length of the statement  "                var actions = await PackageManager.PreviewInstallPackageAsync(project' packageId' resolutionContext' projectContext' ActiveSourceRepository' null' CancellationToken.None); " is 171.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,PackageActionBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PackageActionBaseCommand.cs,InstallPackageByIdAsync,The length of the statement  "                    var identity = actions.Select(v => v.PackageIdentity).Where(p => p.Id.Equals(packageId' StringComparison.OrdinalIgnoreCase)).FirstOrDefault(); " is 142.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,FindPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\FindPackageCommand.cs,FindPackagesByPSSearchService,The length of the statement  "                var result = await GetPackagesFromRemoteSourceAsync(Id' Enumerable.Empty<string>()' IncludePrerelease.IsPresent' Skip' First); " is 126.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,ProcessRecordCore,The length of the statement  "                        var result = await GetPackagesFromRemoteSourceAsync(Filter' Enumerable.Empty<string>()' IncludePrerelease.IsPresent' Skip' First); " is 130.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,WriteUpdatePackagesFromRemoteSourceAsync,The length of the statement  "                   var results = await GetPackagesFromRemoteSourceAsync(installedPackage.PackageIdentity.Id' frameworks' IncludePrerelease.IsPresent' Skip' First); " is 144.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,WriteUpdatePackagesFromRemoteSourceAsync,The length of the statement  "                   var metadata = results.Where(p => string.Equals(p.Identity.Id' installedPackage.PackageIdentity.Id' StringComparison.OrdinalIgnoreCase)).FirstOrDefault(); " is 154.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,WriteUpdatePackagesFromRemoteSourceAsync,The length of the statement  "                    var package = PowerShellUpdatePackage.GetPowerShellPackageUpdateView(metadata' task.Item2.PackageIdentity.Version' versionType' project); " is 137.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,WriteUpdatePackagesFromRemoteSourceAsync,The length of the statement  "                LogCore(ProjectManagement.MessageLevel.Info' string.Format(CultureInfo.CurrentCulture' Resources.Cmdlet_NoPackageUpdates' project.GetMetadata<string>(NuGetProjectMetadataKeys.Name))); " is 183.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,WritePackagesFromRemoteSource,The length of the statement  "                LogCore(ProjectManagement.MessageLevel.Warning' string.Format(CultureInfo.CurrentCulture' Resources.Cmdlet_CommandObsolete' message)); " is 134.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,AskToContinueDisplayPackages,The length of the statement  "            var choice = Host.UI.PromptForChoice(string.Empty' Resources.Cmdlet_PrompToDisplayMorePackages' choices' defaultChoice: 1); " is 123.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,PowerShellInstalledPackage,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PowerShellInstalledPackage.cs,GetPowerShellPackageView,The length of the statement  "                        AsyncLazyVersions = new AsyncLazy<IEnumerable<NuGetVersion>>(() => Task.FromResult<IEnumerable<NuGetVersion>>(new[] { package.PackageIdentity.Version })' ThreadHelper.JoinableTaskFactory)' " is 188.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,InstallPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\InstallPackageCommand.cs,CreatePackageIdentitiesFromPackagesConfig,The length of the statement  "                LogCore(ProjectManagement.MessageLevel.Error' string.Format(CultureInfo.CurrentCulture' Resources.Cmdlet_FailToParsePackages' Id' ex.Message)); " is 143.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,GetDefaultProject,The length of the statement  "            // Get all DTE projects in the solution and compare by CustomUnique names' especially for projects under solution folders. " is 122.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,GetDefaultProject,The length of the statement  "                defaultDTEProject = allDTEProjects.Where(p => StringComparer.OrdinalIgnoreCase.Equals(EnvDTEProjectUtility.GetCustomUniqueName(p)' customUniqueName)).FirstOrDefault(); " is 167.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ExecutePSScriptInternal,The length of the statement  "                    string command = "& " + ProjectManagement.PathUtility.EscapePSPath(path) + " $__rootPath $__toolsPath $__package $__project"; " is 125.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ExecutePSScriptInternal,The length of the statement  "                    LogCore(ProjectManagement.MessageLevel.Info' String.Format(CultureInfo.CurrentCulture' Resources.ExecutingScript' path)); " is 121.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,OpenPackagePageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\OpenPackagePageCommand.cs,Preprocess,The length of the statement  "            LogCore(ProjectManagement.MessageLevel.Warning' string.Format(CultureInfo.CurrentCulture' Resources.Cmdlet_CommandRemoved' "Open-PackagePage")); " is 144.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,OpenPackagePageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\OpenPackagePageCommand.cs,ProcessRecordCore,The length of the statement  "                    WriteError(String.Format(CultureInfo.CurrentCulture' Resources.Cmdlet_UrlMissing' package.Identity.Id + " " + package.Identity.Version)); " is 137.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,SyncPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\SyncPackageCommand.cs,Preprocess,The length of the statement  "            // Get the projects in the solution that's not the current default or specified project to sync the package identity to. " is 120.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,SyncPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\SyncPackageCommand.cs,Preprocess,The length of the statement  "                .Where(p => !StringComparer.OrdinalIgnoreCase.Equals(p.GetMetadata<string>(NuGetProjectMetadataKeys.Name)' ProjectName)) " is 120.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,SyncPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\SyncPackageCommand.cs,ProcessRecordCore,The length of the statement  "                LogCore(ProjectManagement.MessageLevel.Info' string.Format(CultureInfo.CurrentCulture' Resources.Cmdlets_NoProjectsToSyncPackage' Id)); " is 135.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,SyncPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\SyncPackageCommand.cs,ProcessRecordCore,The length of the statement  "                LogCore(ProjectManagement.MessageLevel.Info' string.Format(CultureInfo.CurrentCulture' Resources.Cmdlet_PackageNotInstalled' Id)); " is 130.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,UninstallPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\UninstallPackageCommand.cs,UninstallPackageByIdAsync,The length of the statement  "                IEnumerable<NuGetProjectAction> actions = await PackageManager.PreviewUninstallPackageAsync(project' packageId' uninstallContext' projectContext' CancellationToken.None); " is 170.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,UninstallPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\UninstallPackageCommand.cs,UninstallPackageByIdAsync,The length of the statement  "                await PackageManager.UninstallPackageAsync(project' packageId' uninstallContext' projectContext' CancellationToken.None); " is 121.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,UpdatePackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\UpdatePackageCommand.cs,ExecuteActions,The length of the statement  "                Log(NuGet.ProjectManagement.MessageLevel.Info' Resources.Cmdlet_NoPackageUpdates' project.GetMetadata<string>(NuGetProjectMetadataKeys.Name)); " is 142.
Long Statement,NuGet.PackageManagement.PowerShellCmdlets,UpdatePackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\UpdatePackageCommand.cs,DetermineVersionConstraints,The length of the statement  "                return VersionConstraints.ExactMajor | VersionConstraints.ExactMinor | VersionConstraints.ExactPatch | VersionConstraints.ExactRelease; " is 135.
Empty Catch Block,NuGet.PackageManagement.PowerShellCmdlets,FindPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\FindPackageCommand.cs,GetIPowerShellPackageFromRemoteSource,The method has an empty catch block.
Empty Catch Block,NuGet.PackageManagement.PowerShellCmdlets,OpenPackagePageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\OpenPackagePageCommand.cs,ProcessRecordCore,The method has an empty catch block.
Magic Number,NuGet.PackageManagement.PowerShellCmdlets,GetPackageCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\Cmdlets\GetPackageCommand.cs,AskToContinueDisplayPackages,The following statement contains a magic number: Debug.Assert(choice >= 0 && choice < 2);
Magic Number,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ResolveFileConflict,The following statement contains a magic number: int choice = Host.UI.PromptForChoice(Resources.FileConflictTitle' message' choices' defaultChoice: 2);
Magic Number,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ResolveFileConflict,The following statement contains a magic number: Debug.Assert(choice >= 0 && choice < 4);
Magic Number,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ResolveFileConflict,The following statement contains a magic number: switch (choice)              {                  case 0:                      return FileConflictAction.Overwrite;                    case 1:                      _overwriteAll = true;                      return FileConflictAction.OverwriteAll;                    case 2:                      return FileConflictAction.Ignore;                    case 3:                      _ignoreAll = true;                      return FileConflictAction.IgnoreAll;              }
Magic Number,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ResolveFileConflict,The following statement contains a magic number: switch (choice)              {                  case 0:                      return FileConflictAction.Overwrite;                    case 1:                      _overwriteAll = true;                      return FileConflictAction.OverwriteAll;                    case 2:                      return FileConflictAction.Ignore;                    case 3:                      _ignoreAll = true;                      return FileConflictAction.IgnoreAll;              }
Missing Default,NuGet.PackageManagement.PowerShellCmdlets,PowerShellRemotePackage,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\PowerShellRemotePackage.cs,GetPowerShellPackageView,The following switch statement is missing a default case: switch (versionType)                  {                      case VersionType.All:                          package.AllVersions = true;                          break;                        case VersionType.Latest:                          break;                  }
Missing Default,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,ResolveFileConflict,The following switch statement is missing a default case: switch (choice)              {                  case 0:                      return FileConflictAction.Overwrite;                    case 1:                      _overwriteAll = true;                      return FileConflictAction.OverwriteAll;                    case 2:                      return FileConflictAction.Ignore;                    case 3:                      _ignoreAll = true;                      return FileConflictAction.IgnoreAll;              }
Missing Default,NuGet.PackageManagement.PowerShellCmdlets,NuGetPowerShellBaseCommand,C:\repos\NuGet_NuGet.VisualStudioExtension\src\PackageManagement.PowerShellCmdlets\NuGetPowerShellBaseCommand.cs,LogCore,The following switch statement is missing a default case: switch (level)              {                  case ProjectManagement.MessageLevel.Debug:                      WriteVerbose(formattedMessage);                      break;                    case ProjectManagement.MessageLevel.Warning:                      WriteWarning(formattedMessage);                      break;                    case ProjectManagement.MessageLevel.Info:                      WriteLine(formattedMessage);                      break;                    case ProjectManagement.MessageLevel.Error:                      WriteError(formattedMessage);                      break;              }
