Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,Cyclomatic complexity of the method is 8
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,Status200,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,Status403,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,Status404,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,Status500,The following statement contains a magic number: Thread.Sleep(400);
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,Redirect,The following statement contains a magic number: return new RedirectResult("/HttpResponse/Status" + destinationHttpStatus' (redirectHttpStatus == 301));
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidRedirectStatus,The following statement contains a magic number: switch (status)              {                  case 301:                  case 302:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidRedirectStatus,The following statement contains a magic number: switch (status)              {                  case 301:                  case 302:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidDestinationStatus,The following statement contains a magic number: switch (status)              {                  case 200:                  case 403:                  case 404:                  case 500:                  case 503:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidDestinationStatus,The following statement contains a magic number: switch (status)              {                  case 200:                  case 403:                  case 404:                  case 500:                  case 503:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidDestinationStatus,The following statement contains a magic number: switch (status)              {                  case 200:                  case 403:                  case 404:                  case 500:                  case 503:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidDestinationStatus,The following statement contains a magic number: switch (status)              {                  case 200:                  case 403:                  case 404:                  case 500:                  case 503:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,HttpResponseController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\HttpResponseController.cs,IsValidDestinationStatus,The following statement contains a magic number: switch (status)              {                  case 200:                  case 403:                  case 404:                  case 500:                  case 503:                      return true;                  default:                      return false;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,InitializeCounts,The following statement contains a magic number: _generatedPagesCounts.Add(200' 0);
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,InitializeCounts,The following statement contains a magic number: _generatedPagesCounts.Add(403' 0);
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,InitializeCounts,The following statement contains a magic number: _generatedPagesCounts.Add(404' 0);
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,InitializeCounts,The following statement contains a magic number: _generatedPagesCounts.Add(500' 0);
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,InitializeCounts,The following statement contains a magic number: _generatedPagesCounts.Add(503' 0);
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,InitializeCounts,The following statement contains a magic number: refreshCountsTime = DateTime.Now.AddSeconds(30);
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,PageGeneratorController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\PageGeneratorController.cs,Generate,The following statement contains a magic number: lock (_generatedPagesCounts)              {                  finalSpecs.Status200Count = pageSpecs.Status200Count;                  _generatedPagesCounts[200] += pageSpecs.Status200Count;                  finalSpecs.Status200StartingIndex = (_generatedPagesCounts[200] - pageSpecs.Status200Count) + 1;                    finalSpecs.Status403Count = pageSpecs.Status403Count;                  _generatedPagesCounts[403] += pageSpecs.Status403Count;                  finalSpecs.Status403StartingIndex = (_generatedPagesCounts[403] - pageSpecs.Status403Count) + 1;                    finalSpecs.Status404Count = pageSpecs.Status404Count;                  _generatedPagesCounts[404] += pageSpecs.Status404Count;                  finalSpecs.Status404StartingIndex = (_generatedPagesCounts[404] - pageSpecs.Status404Count) + 1;                    finalSpecs.Status500Count = pageSpecs.Status500Count;                  _generatedPagesCounts[500] += pageSpecs.Status500Count;                  finalSpecs.Status500StartingIndex = (_generatedPagesCounts[500] - pageSpecs.Status500Count) + 1;                    finalSpecs.Status503Count = pageSpecs.Status503Count;                  _generatedPagesCounts[503] += pageSpecs.Status503Count;                  finalSpecs.Status503StartingIndex = (_generatedPagesCounts[503] - pageSpecs.Status503Count) + 1;              }
Magic Number,Abot.SiteSimulator.Controllers,ThrottlingController,C:\repos\sjdirect_abot\Abot.SiteSimulator\Controllers\ThrottlingController.cs,Handle1RequestEveryXSeconds,The following statement contains a magic number: if (milliSinceLastRequest > ((seconds * 1000) - 1))              {                  _lastServedDate = DateTime.Now;                  return new HttpResponseController().Status200();              }
