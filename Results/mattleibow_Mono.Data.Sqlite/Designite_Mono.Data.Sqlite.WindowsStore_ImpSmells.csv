Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,Open,The method has 162 lines of code.
Complex Method,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,Cyclomatic complexity of the method is 8
Complex Method,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,Cyclomatic complexity of the method is 14
Complex Method,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetValue,Cyclomatic complexity of the method is 11
Complex Method,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,Open,Cyclomatic complexity of the method is 25
Complex Method,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,Split,Cyclomatic complexity of the method is 9
Complex Method,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,VerifyType,Cyclomatic complexity of the method is 26
Complex Method,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,NextResult,Cyclomatic complexity of the method is 15
Complex Method,Mono.Data.Sqlite,SqliteFunction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteFunction.cs,SetReturnValue,Cyclomatic complexity of the method is 8
Complex Method,Mono.Data.Sqlite,SqliteParameterCollection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteParameterCollection.cs,MapParameters,Cyclomatic complexity of the method is 15
Complex Method,Mono.Data.Sqlite,SqliteStatement,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteStatement.cs,BindParameter,Cyclomatic complexity of the method is 12
Complex Method,Mono.Data.Sqlite,SqliteTransaction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteTransaction.cs,IsValid,Cyclomatic complexity of the method is 9
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The method has 5 parameters. Parameters: cnn' strSql' previous' timeout' strRemain
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,ColumnMetaData,The method has 8 parameters. Parameters: dataBase' table' column' dataType' collateSequence' notNull' primaryKey' autoIncrement
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetBytes,The method has 6 parameters. Parameters: stmt' index' nDataOffset' bDest' nStart' nLength
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetChars,The method has 6 parameters. Parameters: stmt' index' nDataOffset' bDest' nStart' nLength
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,CreateFunction,The method has 6 parameters. Parameters: strFunction' nArgs' needCollSeq' func' funcstep' funcfinal
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetParamValueBytes,The method has 5 parameters. Parameters: p' nDataOffset' bDest' nStart' nLength
Long Parameter List,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetIndexColumnExtendedInfo,The method has 6 parameters. Parameters: database' index' column' sortMode' onError' collationSequence
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,Prepare,The method has 5 parameters. Parameters: cnn' strSql' previous' timeout' strRemain
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,ColumnMetaData,The method has 8 parameters. Parameters: dataBase' table' column' dataType' collateSequence' notNull' primaryKey' autoIncrement
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,GetIndexColumnExtendedInfo,The method has 6 parameters. Parameters: database' index' column' sortMode' onError' collationSequence
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,GetBytes,The method has 6 parameters. Parameters: stmt' index' nDataoffset' bDest' nStart' nLength
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,GetChars,The method has 6 parameters. Parameters: stmt' index' nDataoffset' bDest' nStart' nLength
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,CreateFunction,The method has 6 parameters. Parameters: strFunction' nArgs' needCollSeq' func' funcstep' funcfinal
Long Parameter List,Mono.Data.Sqlite,SQLiteBase,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,GetParamValueBytes,The method has 5 parameters. Parameters: ptr' nDataOffset' bDest' nStart' nLength
Long Parameter List,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,UpdateCallback,The method has 5 parameters. Parameters: puser' type' database' table' rowid
Long Parameter List,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Mono.Data.Sqlite,SqliteFunction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteFunction.cs,CompareCallback,The method has 5 parameters. Parameters: ptr' len1' ptr1' len2' ptr2
Long Parameter List,Mono.Data.Sqlite,SqliteFunction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteFunction.cs,CompareCallback16,The method has 5 parameters. Parameters: ptr' len1' ptr1' len2' ptr2
Long Parameter List,Mono.Data.Sqlite,SqliteParameter,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteParameter.cs,SqliteParameter,The method has 5 parameters. Parameters: parameterName' parameterType' parameterSize' sourceColumn' rowVersion
Long Parameter List,Mono.Data.Sqlite,SqliteParameter,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteParameter.cs,SqliteParameter,The method has 10 parameters. Parameters: parameterName' parameterType' parameterSize' direction' isNullable' precision' scale' sourceColumn' rowVersion' value
Long Parameter List,Mono.Data.Sqlite,SqliteParameter,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteParameter.cs,SqliteParameter,The method has 10 parameters. Parameters: parameterName' parameterType' parameterSize' direction' precision' scale' sourceColumn' rowVersion' sourceColumnNullMapping' value
Long Statement,Mono.Data.Sqlite,SqliteCommand,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteCommand.cs,BuildNextCommand,The length of the statement  "        stmt = _cnn._sql.Prepare(_cnn' _remainingText' (_statementList == null) ? null : _statementList[_statementList.Count - 1]' (uint)(_commandTimeout * 1000)' out _remainingText); " is 175.
Long Statement,Mono.Data.Sqlite,SqliteCommandBuilder,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteCommandBuilder.cs,UnquoteIdentifier,The length of the statement  "      return quotedIdentifier.Substring(QuotePrefix.Length' quotedIdentifier.Length - (QuotePrefix.Length + QuoteSuffix.Length)).Replace(QuoteSuffix + QuoteSuffix' QuoteSuffix); " is 171.
Long Statement,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,Open,The length of the statement  "                //else if (String.Compare(temp' "julianday"' true' CultureInfo.InvariantCulture) == 0) dateFormat = SQLiteDateFormats.JulianDay; " is 128.
Long Statement,Mono.Data.Sqlite,SqliteConnectionPool,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnectionPool.cs,ClearAllPools,The length of the statement  "        // All pools are cleared and we have a new highest version number to force all old version active items to get discarded " is 120.
Long Statement,Mono.Data.Sqlite,SqliteConnectionStringBuilder,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnectionStringBuilder.cs,TryGetValue,The length of the statement  "        DefaultValueAttribute att = (DefaultValueAttribute)pd.GetCustomAttributes(typeof(DefaultValueAttribute)' true).FirstOrDefault(); " is 128.
Long Statement,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,GetEnumerator,The length of the statement  "      return new DbEnumerator(this' ((_commandBehavior & CommandBehavior.CloseConnection) == CommandBehavior.CloseConnection)); " is 121.
Long Statement,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,GetDecimal,The length of the statement  "      return Decimal.Parse(_activeStatement._sql.GetText(_activeStatement' i)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent  | NumberStyles.AllowLeadingSign' CultureInfo.InvariantCulture); " is 197.
Long Statement,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,NextResult,The length of the statement  "            _readingState = 1; // This command returned columns but no rows' so return true' but HasRows = false and Read() returns false " is 125.
Long Statement,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,Read,The length of the statement  "      if (_readingState == -1) // First step was already done at the NextResult() level' so don't step again' just return true. " is 121.
Long Statement,Mono.Data.Sqlite,SqliteStatement,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteStatement.cs,MapParameter,The length of the statement  "        if (String.Compare(_paramNames[n]' startAt' s' 0' Math.Max(_paramNames[n].Length - startAt' s.Length)' StringComparison.OrdinalIgnoreCase) == 0) " is 144.
Long Statement,Mono.Data.Sqlite,SqliteStatement,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteStatement.cs,SetTypes,The length of the statement  "      string[] types = typedefs.Substring(pos + 6).Replace(" "' "").Replace(";"' "").Replace("\""' "").Replace("["' "").Replace("]"' "").Replace("`"'"").Split('''' '\r'' '\n'' '\t'); " is 176.
Long Statement,Mono.Data.Sqlite,SqliteTransaction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteTransaction.cs,IsValid,The length of the statement  "        if (throwError == true) throw new SqliteException((int)SQLiteErrorCode.Misuse' "No transaction is active on this connection"); " is 126.
Long Statement,Mono.Data.Sqlite,SqliteTransaction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteTransaction.cs,IsValid,The length of the statement  "        if (throwError == true) throw new SqliteException((int)SQLiteErrorCode.Misuse' "The connection was closed and re-opened' changes were rolled back"); " is 148.
Complex Conditional,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The conditional expression  "(n == 17 || n == 6 || n == 5) && retries < 3"  is complex.
Virtual Method Call from Constructor,Mono.Data.Sqlite,SqliteStatement,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteStatement.cs,SqliteStatement,The constructor "SqliteStatement" calls a virtual method "Bind_ParamCount".
Empty Catch Block,Mono.Data.Sqlite,Disposers,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mono.Data.Sqlite,Disposers,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mono.Data.Sqlite,SqliteCommand,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteCommand.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mono.Data.Sqlite,SqliteCommand,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteCommand.cs,ClearCommands,The method has an empty catch block.
Empty Catch Block,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,Close,The method has an empty catch block.
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,The following statement contains a magic number: var timeout = (uint)(stmt._command._commandTimeout * 1000);
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,The following statement contains a magic number: n == 100
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,The following statement contains a magic number: n == 101
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,The following statement contains a magic number: Sleep(rnd.Next(1' 150));
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,The following statement contains a magic number: (r == 6 || r == 5) && stmt._command != null
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Step,The following statement contains a magic number: (r == 6 || r == 5) && stmt._command != null
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Reset,The following statement contains a magic number: var timeout = (uint)(stmt._command._commandTimeout * 1000);
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Reset,The following statement contains a magic number: n == 17
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Reset,The following statement contains a magic number: n == 6 || n == 5
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Reset,The following statement contains a magic number: n == 6 || n == 5
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The following statement contains a magic number: int n = 17;
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The following statement contains a magic number: n == 17
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The following statement contains a magic number: (n == 17 || n == 6 || n == 5) && retries < 3
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The following statement contains a magic number: (n == 17 || n == 6 || n == 5) && retries < 3
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The following statement contains a magic number: (n == 17 || n == 6 || n == 5) && retries < 3
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,Prepare,The following statement contains a magic number: (n == 17 || n == 6 || n == 5) && retries < 3
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetValue,The following statement contains a magic number: switch (aff)              {                  case TypeAffinity.Blob:                      if (typ.Type == DbType.Guid && typ.Affinity == TypeAffinity.Text)                      {                          return new Guid(GetText(stmt' index));                      }                        var n = (int) GetBytes(stmt' index' 0' null' 0' 0);                      var b = new byte[n];                      GetBytes(stmt' index' 0' b' 0' n);                        if (typ.Type == DbType.Guid && n == 16)                      {                          return new Guid(b);                      }                        return b;                  case TypeAffinity.DateTime:                      return GetDateTime(stmt' index);                  case TypeAffinity.Double:                      if (t == null)                      {                          return GetDouble(stmt' index);                      }                      return Convert.ChangeType(GetDouble(stmt' index)' t' null);                  case TypeAffinity.Int64:                      if (t == null)                      {                          return GetInt64(stmt' index);                      }                      return Convert.ChangeType(GetInt64(stmt' index)' t' null);                  default:                      return GetText(stmt' index);              }
Magic Number,Mono.Data.Sqlite,SQLite3,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3.cs,GetIndexColumnExtendedInfo,The following statement contains a magic number: onError = 2;
Magic Number,Mono.Data.Sqlite,SQLite3_UTF16,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3_UTF16.cs,Bind_Text,The following statement contains a magic number: int n = UnsafeNativeMethods.sqlite3_bind_text16(stmt._sqlite_stmt' index' value' value.Length*2);
Magic Number,Mono.Data.Sqlite,SQLite3_UTF16,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3_UTF16.cs,ReturnError,The following statement contains a magic number: UnsafeNativeMethods.sqlite3_result_error16(context' value' value.Length*2);
Magic Number,Mono.Data.Sqlite,SQLite3_UTF16,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLite3_UTF16.cs,ReturnText,The following statement contains a magic number: UnsafeNativeMethods.sqlite3_result_text16(context' value' value.Length*2' null);
Magic Number,Mono.Data.Sqlite,SqliteCommand,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteCommand.cs,SqliteCommand,The following statement contains a magic number: _commandTimeout = 30;
Magic Number,Mono.Data.Sqlite,SqliteCommand,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteCommand.cs,BuildNextCommand,The following statement contains a magic number: stmt = _cnn._sql.Prepare(_cnn' _remainingText' (_statementList == null) ? null : _statementList[_statementList.Count - 1]' (uint)(_commandTimeout * 1000)' out _remainingText);
Magic Number,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,MapUriPath,The following statement contains a magic number: return path.Substring(7);
Magic Number,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,MapUriPath,The following statement contains a magic number: return path.Substring(5);
Magic Number,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,ParseConnectionString,The following statement contains a magic number: arPiece.Length == 2
Magic Number,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,Open,The following statement contains a magic number: Convert.ToInt32(FindKey(opts' "Version"' "3")' CultureInfo.InvariantCulture) != 3
Magic Number,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,Open,The following statement contains a magic number: Convert.ToInt32(defValue' CultureInfo.InvariantCulture) != 1024
Magic Number,Mono.Data.Sqlite,SqliteConnection,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConnection.cs,Open,The following statement contains a magic number: Convert.ToInt32(defValue' CultureInfo.InvariantCulture) != 2000
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblZ = Math.Floor(julianDay + 0.5);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblW = Math.Floor((dblZ - 1867216.25) / 36524.25);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblW = Math.Floor((dblZ - 1867216.25) / 36524.25);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblX = Math.Floor(dblW / 4);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblB = dblA + 1524;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblC = Math.Floor((dblB - 122.1) / 365.25);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblC = Math.Floor((dblB - 122.1) / 365.25);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblD = Math.Floor(365.25 * dblC);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblE = Math.Floor((dblB - dblD) / 30.6001);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: double dblF = Math.Floor(30.6001 * dblE);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: month = dblE > 13 ? Convert.ToInt32(dblE - 13) : Convert.ToInt32(dblE - 1);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: month = dblE > 13 ? Convert.ToInt32(dblE - 13) : Convert.ToInt32(dblE - 1);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: year = month == 1 || month == 2 ? Convert.ToInt32(dblC - 4715) : Convert.ToInt32(dblC - 4716);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: year = month == 1 || month == 2 ? Convert.ToInt32(dblC - 4715) : Convert.ToInt32(dblC - 4716);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToDateTime,The following statement contains a magic number: year = month == 1 || month == 2 ? Convert.ToInt32(dblC - 4715) : Convert.ToInt32(dblC - 4716);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: double fraction = day + ((hour + (minute / 60) + (second / 60 / 60)) / 24);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: double fraction = day + ((hour + (minute / 60) + (second / 60 / 60)) / 24);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: double fraction = day + ((hour + (minute / 60) + (second / 60 / 60)) / 24);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: double fraction = day + ((hour + (minute / 60) + (second / 60 / 60)) / 24);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: year < 1582
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: month = month + 12;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: month < 3
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var A = year / 100;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var B = (2 - A + (A / 4)) * isGregorianCal;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var B = (2 - A + (A / 4)) * isGregorianCal;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var C = year < 0 ? (365.25 * year) - 0.75 : 365.25 * year;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var C = year < 0 ? (365.25 * year) - 0.75 : 365.25 * year;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var C = year < 0 ? (365.25 * year) - 0.75 : 365.25 * year;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var D = 30.6001 * (month + 1);
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToJulianDay,The following statement contains a magic number: var JD = (int)B + (int)C + (int)D + 1720994.5 + fraction;
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,ToString,The following statement contains a magic number: switch (_datetimeFormat)        {          case SQLiteDateFormats.Ticks:            return dateValue.Ticks.ToString(CultureInfo.InvariantCulture);          case SQLiteDateFormats.JulianDay:            return ToJulianDay(dateValue).ToString(CultureInfo.InvariantCulture);          case SQLiteDateFormats.UnixEpoch:            return ((long)(dateValue.Subtract(UnixEpoch).Ticks / TimeSpan.TicksPerSecond)).ToString();          default:            return dateValue.ToString(_datetimeFormats[7]' CultureInfo.InvariantCulture);        }
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,Split,The following statement contains a magic number: char[] toks = new char[2] { '\"'' separator };
Magic Number,Mono.Data.Sqlite,SqliteConvert,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteConvert.cs,Split,The following statement contains a magic number: s = s.Substring(1' s.Length - 2);
Magic Number,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,GetGuid,The following statement contains a magic number: byte[] buffer = new byte[16];
Magic Number,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,GetGuid,The following statement contains a magic number: _activeStatement._sql.GetBytes(_activeStatement' i' 0' buffer' 0' 16);
Magic Number,Mono.Data.Sqlite,SqliteStatement,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteStatement.cs,SetTypes,The following statement contains a magic number: string[] types = typedefs.Substring(pos + 6).Replace(" "' "").Replace(";"' "").Replace("\""' "").Replace("["' "").Replace("]"' "").Replace("`"'"").Split('''' '\r'' '\n'' '\t');
Missing Default,Mono.Data.Sqlite,SqliteDataReader,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteDataReader.cs,VerifyType,The following switch statement is missing a default case: switch (affinity)        {          case TypeAffinity.Int64:            if (typ == DbType.Int16) return affinity;            if (typ == DbType.Int32) return affinity;            if (typ == DbType.Int64) return affinity;            if (typ == DbType.Boolean) return affinity;            if (typ == DbType.Byte) return affinity;            if (typ == DbType.DateTime) return affinity;            if (typ == DbType.Single) return affinity;            if (typ == DbType.Double) return affinity;            if (typ == DbType.Decimal) return affinity;            break;          case TypeAffinity.Double:            if (typ == DbType.Single) return affinity;            if (typ == DbType.Double) return affinity;            if (typ == DbType.Decimal) return affinity;            if (typ == DbType.DateTime) return affinity;            break;          case TypeAffinity.Text:            if (typ == DbType.SByte) return affinity;            if (typ == DbType.String) return affinity;            if (typ == DbType.SByte) return affinity;            if (typ == DbType.Guid) return affinity;            if (typ == DbType.DateTime) return affinity;            if (typ == DbType.Decimal) return affinity;            break;          case TypeAffinity.Blob:            if (typ == DbType.Guid) return affinity;            if (typ == DbType.String) return affinity;            if (typ == DbType.Binary) return affinity;            break;        }
Missing Default,Mono.Data.Sqlite,SqliteFunction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteFunction.cs,ConvertParams,The following switch statement is missing a default case: switch (_base.GetParamValueType((SqliteValueHandle)argint[n]))          {            case TypeAffinity.Null:              parms[n] = DBNull.Value;              break;            case TypeAffinity.Int64:              parms[n] = _base.GetParamValueInt64((SqliteValueHandle)argint[n]);              break;            case TypeAffinity.Double:              parms[n] = _base.GetParamValueDouble((SqliteValueHandle)argint[n]);              break;            case TypeAffinity.Text:              parms[n] = _base.GetParamValueText((SqliteValueHandle)argint[n]);              break;            case TypeAffinity.Blob:              {                int x;                byte[] blob;                  x = (int)_base.GetParamValueBytes((SqliteValueHandle)argint[n]' 0' null' 0' 0);                blob = new byte[x];                _base.GetParamValueBytes((SqliteValueHandle)argint[n]' 0' blob' 0' x);                parms[n] = blob;              }              break;            case TypeAffinity.DateTime: // Never happens here but what the heck' maybe it will one day.              parms[n] = _base.ToDateTime(_base.GetParamValueText((SqliteValueHandle)argint[n]));              break;          }
Missing Default,Mono.Data.Sqlite,SqliteFunction,D:\research\architectureSmells\repos\mattleibow_Mono.Data.Sqlite\Mono.Data.Sqlite\Store\SQLiteFunction.cs,SetReturnValue,The following switch statement is missing a default case: switch (SqliteConvert.TypeToAffinity(t))        {          case TypeAffinity.Null:            _base.ReturnNull(context);            return;          case TypeAffinity.Int64:            _base.ReturnInt64(context' Convert.ToInt64(returnValue' CultureInfo.CurrentCulture));            return;          case TypeAffinity.Double:            _base.ReturnDouble(context' Convert.ToDouble(returnValue' CultureInfo.CurrentCulture));            return;          case TypeAffinity.Text:            _base.ReturnText(context' returnValue.ToString());            return;          case TypeAffinity.Blob:            _base.ReturnBlob(context' (byte[])returnValue);            return;        }
