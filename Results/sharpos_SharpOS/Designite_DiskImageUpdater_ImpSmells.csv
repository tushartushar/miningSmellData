Implementation smell,Namespace,Class,File,Method,Description
Long Method,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The method has 117 lines of code.
Complex Method,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,Cyclomatic complexity of the method is 10
Long Parameter List,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetIndirectDataBlocks,The method has 5 parameters. Parameters: count' block' level' blocks' indirectBlocks
Long Identifier,Ext2,SuperBlock,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\SuperBlock.cs,,The length of the parameter FeaturesReadOnlyCompatibleOffset is 32.
Long Statement,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadGroupDescriptor,The length of the statement  "				this.fileSystem.GroupDescriptors [i] = new GroupDescriptor (block' (uint) ((i % this.fileSystem.GroupDescriptorsPerBlock) * GroupDescriptor.GroupDescriptorSize)); " is 162.
Long Statement,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,AllocateBlocks,The length of the statement  "			this.binaryReader.BaseStream.Seek (startOffset + this.fileSystem.GroupDescriptors [descriptor].BlockBitmap * this.fileSystem.BlockSize' SeekOrigin.Begin); " is 154.
Long Statement,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,AllocateBlocks,The length of the statement  "			this.binaryReader.BaseStream.Seek (startOffset + this.fileSystem.GroupDescriptors [descriptor].BlockBitmap * this.fileSystem.BlockSize' SeekOrigin.Begin); " is 154.
Long Statement,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,DeallocateBlocks,The length of the statement  "			this.binaryReader.BaseStream.Seek (startOffset + this.fileSystem.GroupDescriptors [descriptor].BlockBitmap * this.fileSystem.BlockSize' SeekOrigin.Begin); " is 154.
Long Statement,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,DeallocateBlocks,The length of the statement  "			this.binaryReader.BaseStream.Seek (startOffset + this.fileSystem.GroupDescriptors [descriptor].BlockBitmap * this.fileSystem.BlockSize' SeekOrigin.Begin); " is 154.
Long Statement,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,UpdateKernel,The length of the statement  "					uint neededBlocks = (uint) Math.Ceiling ((double) kernelBinaryReader.BaseStream.Length / (double) this.fileSystem.BlockSize); " is 125.
Empty Catch Block,DiskImageUpdater,Program,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Program.cs,Main,The method has an empty catch block.
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUInt,The following statement contains a magic number: value += (uint) (this.buffer [offset++] << 8);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUInt,The following statement contains a magic number: value += (uint) (this.buffer [offset++] << 16);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUInt,The following statement contains a magic number: value += (uint) (this.buffer [offset++] << 24);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUInt,The following statement contains a magic number: this.buffer [offset++] = (byte) ((value >> 8) & 0xFF);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUInt,The following statement contains a magic number: this.buffer [offset++] = (byte) ((value >> 16) & 0xFF);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUInt,The following statement contains a magic number: this.buffer [offset++] = (byte) ((value >> 24) & 0xFF);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUShort,The following statement contains a magic number: value += (ushort) (this.buffer [offset++] << 8);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUShort,The following statement contains a magic number: this.buffer [offset++] = (byte) ((value >> 8) & 0xFF);
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUIntArray,The following statement contains a magic number: for (int i = 0; i < count; i++) {  				uint value = this.buffer [offset++];  				value += (uint) (this.buffer [offset++] << 8);  				value += (uint) (this.buffer [offset++] << 16);  				value += (uint) (this.buffer [offset++] << 24);    				result [i] = value;  			}
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUIntArray,The following statement contains a magic number: for (int i = 0; i < count; i++) {  				uint value = this.buffer [offset++];  				value += (uint) (this.buffer [offset++] << 8);  				value += (uint) (this.buffer [offset++] << 16);  				value += (uint) (this.buffer [offset++] << 24);    				result [i] = value;  			}
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,GetUIntArray,The following statement contains a magic number: for (int i = 0; i < count; i++) {  				uint value = this.buffer [offset++];  				value += (uint) (this.buffer [offset++] << 8);  				value += (uint) (this.buffer [offset++] << 16);  				value += (uint) (this.buffer [offset++] << 24);    				result [i] = value;  			}
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUIntArray,The following statement contains a magic number: for (int i = 0; i < count; i++) {  				uint value = values [i];    				this.buffer [offset++] = (byte) (value & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 8) & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 16) & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 24) & 0xFF);  			}
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUIntArray,The following statement contains a magic number: for (int i = 0; i < count; i++) {  				uint value = values [i];    				this.buffer [offset++] = (byte) (value & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 8) & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 16) & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 24) & 0xFF);  			}
Magic Number,Ext2,Block,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Block.cs,SetUIntArray,The following statement contains a magic number: for (int i = 0; i < count; i++) {  				uint value = values [i];    				this.buffer [offset++] = (byte) (value & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 8) & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 16) & 0xFF);  				this.buffer [offset++] = (byte) ((value >> 24) & 0xFF);  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,CHSToLBA,The following statement contains a magic number: return ((cyl * 10 + head) * 50) + sector - 1;
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,CHSToLBA,The following statement contains a magic number: return ((cyl * 10 + head) * 50) + sector - 1;
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: if (hasMBR) {  				byte [] mbr = binaryReader.ReadBytes (512);    				if (mbr [510] != 55 && mbr [511] != 0xaa)  					throw new Exception ("Invalid MBR Signature.");    				bool found = false;    				for (int i = 446; i < 510; i += 16) {  					if ((mbr [i] & 0x80) != 0) {  						found = true;    						if (mbr [i + 4] != 0x83)  							throw new Exception ("The bootable partition is not of type Ext2.");    						startOffset = mbr [i + 8];  						startOffset += (uint) (mbr [i + 9] << 8);  						startOffset += (uint) (mbr [i + 10] << 16);  						startOffset += (uint) (mbr [i + 11] << 24);    						startOffset *= 512;    						break;  					}  				}    				if (!found)  					throw new Exception ("No bootable partition found.");  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: binaryReader.BaseStream.Seek (startOffset + 1024' SeekOrigin.Begin);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: byte [] buffer = binaryReader.ReadBytes (1024);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ReadSuperBlock,The following statement contains a magic number: Block block = new Block (1024' buffer);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetDataBlocks,The following statement contains a magic number: for (int i = 0; i < 12 && count > 0; i++' count--) {  				blocks.Add (inode.BlockData [i]);  				indirectBlocks.Add (false);  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetDataBlocks,The following statement contains a magic number: this.GetIndirectDataBlocks (ref count' inode.BlockData [12]' 0' blocks' indirectBlocks);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetDataBlocks,The following statement contains a magic number: this.GetIndirectDataBlocks (ref count' inode.BlockData [13]' 1' blocks' indirectBlocks);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetDataBlocks,The following statement contains a magic number: this.GetIndirectDataBlocks (ref count' inode.BlockData [14]' 2' blocks' indirectBlocks);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetDataBlocks,The following statement contains a magic number: this.GetIndirectDataBlocks (ref count' inode.BlockData [14]' 2' blocks' indirectBlocks);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetIndirectDataBlocks,The following statement contains a magic number: for (int i = 0; i < this.fileSystem.IndirectCount && count > 0; i++) {  				uint value = buffer [offset++];  				value += (uint) (buffer [offset++] << 8);  				value += (uint) (buffer [offset++] << 16);  				value += (uint) (buffer [offset++] << 24);    				if (value > 0) {  					if (level > 0) {  						blocks.Add (value);  						indirectBlocks.Add (true);  						this.GetIndirectDataBlocks (ref count' value' level - 1' blocks' indirectBlocks);  					} else {  						blocks.Add (value);  						indirectBlocks.Add (false);  						count--;  					}  				}  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetIndirectDataBlocks,The following statement contains a magic number: for (int i = 0; i < this.fileSystem.IndirectCount && count > 0; i++) {  				uint value = buffer [offset++];  				value += (uint) (buffer [offset++] << 8);  				value += (uint) (buffer [offset++] << 16);  				value += (uint) (buffer [offset++] << 24);    				if (value > 0) {  					if (level > 0) {  						blocks.Add (value);  						indirectBlocks.Add (true);  						this.GetIndirectDataBlocks (ref count' value' level - 1' blocks' indirectBlocks);  					} else {  						blocks.Add (value);  						indirectBlocks.Add (false);  						count--;  					}  				}  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetIndirectDataBlocks,The following statement contains a magic number: for (int i = 0; i < this.fileSystem.IndirectCount && count > 0; i++) {  				uint value = buffer [offset++];  				value += (uint) (buffer [offset++] << 8);  				value += (uint) (buffer [offset++] << 16);  				value += (uint) (buffer [offset++] << 24);    				if (value > 0) {  					if (level > 0) {  						blocks.Add (value);  						indirectBlocks.Add (true);  						this.GetIndirectDataBlocks (ref count' value' level - 1' blocks' indirectBlocks);  					} else {  						blocks.Add (value);  						indirectBlocks.Add (false);  						count--;  					}  				}  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,GetINodeByName,The following statement contains a magic number: if (list.Length < 2)  				return this.root;
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ComputeIndirectOfBlocksCount,The following statement contains a magic number: if (blocks <= 12)  				return 0;
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ComputeIndirectOfBlocksCount,The following statement contains a magic number: blocks -= 12;
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,ComputeIndirectOfBlocksCount,The following statement contains a magic number: this.ComputeIndirectOfBlocksCount (ref blocks' ref count' 2);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,AllocateBlocks,The following statement contains a magic number: for (int i = 0; i < buffer.Length && blocks.Count < count; i++) {  				if (buffer [i] == 0) {  					for (int j = 0; j < 8 && blocks.Count < count; j++) {  						buffer [i] |= (byte) (1 << j);    						this.fileSystem.GroupDescriptors [descriptor].FreeBlocksCount--;  						this.fileSystem.SuperBlock.FreeBlocksCount--;    						uint blockIndex = (uint) ((i * 8) + j) + 1;    						blocks.Add (blockIndex);  					}  				}  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,AllocateBlocks,The following statement contains a magic number: for (int i = 0; i < buffer.Length && blocks.Count < count; i++) {  				if (buffer [i] == 0) {  					for (int j = 0; j < 8 && blocks.Count < count; j++) {  						buffer [i] |= (byte) (1 << j);    						this.fileSystem.GroupDescriptors [descriptor].FreeBlocksCount--;  						this.fileSystem.SuperBlock.FreeBlocksCount--;    						uint blockIndex = (uint) ((i * 8) + j) + 1;    						blocks.Add (blockIndex);  					}  				}  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,DeallocateBlocks,The following statement contains a magic number: while (blocks.Count > count) {  				uint value = blocks [blocks.Count - 1];  				blocks.Remove (value);    				value--;    				uint index = value / 8;  				byte bit = (byte) (value % 8);    				buffer [index] &= (byte) ~(1 << bit);    				this.fileSystem.GroupDescriptors [descriptor].FreeBlocksCount++;  				this.fileSystem.SuperBlock.FreeBlocksCount++;  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,DeallocateBlocks,The following statement contains a magic number: while (blocks.Count > count) {  				uint value = blocks [blocks.Count - 1];  				blocks.Remove (value);    				value--;    				uint index = value / 8;  				byte bit = (byte) (value % 8);    				buffer [index] &= (byte) ~(1 << bit);    				this.fileSystem.GroupDescriptors [descriptor].FreeBlocksCount++;  				this.fileSystem.SuperBlock.FreeBlocksCount++;  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: uint [] blockData = new uint [15];
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: for (int i = 0; i < 15; i++)  				blockData [i] = 0;
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: for (int i = 0; i < 12 && blocks.Count > 0; i++) {  				uint value = blocks [0];  				blocks.Remove (value);    				blockData [i] = value;    				uint offset = value * this.fileSystem.BlockSize;  				byte [] buffer = binaryReader.ReadBytes ((int) this.fileSystem.BlockSize);    				Block block = new Block (offset' buffer);    				this.ForceWriteBlock (block);  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: if (blocks.Count > 0)  				blockData [12] = this.WriteFileIndirect (0' blocks' binaryReader);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: if (blocks.Count > 0)  				blockData [13] = this.WriteFileIndirect (1' blocks' binaryReader);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: if (blocks.Count > 0)  				blockData [14] = this.WriteFileIndirect (2' blocks' binaryReader);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFile,The following statement contains a magic number: if (blocks.Count > 0)  				blockData [14] = this.WriteFileIndirect (2' blocks' binaryReader);
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFileIndirect,The following statement contains a magic number: uint [] blockData = new uint [this.fileSystem.BlockSize >> 2];
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFileIndirect,The following statement contains a magic number: for (int i = 0; i < blockData.Length; i++) {  				buffer [offset++] = (byte) (blockData [i] & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 8) & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 16) & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 24) & 0xFF);  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFileIndirect,The following statement contains a magic number: for (int i = 0; i < blockData.Length; i++) {  				buffer [offset++] = (byte) (blockData [i] & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 8) & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 16) & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 24) & 0xFF);  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,WriteFileIndirect,The following statement contains a magic number: for (int i = 0; i < blockData.Length; i++) {  				buffer [offset++] = (byte) (blockData [i] & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 8) & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 16) & 0xFF);  				buffer [offset++] = (byte) ((blockData [i] >> 24) & 0xFF);  			}
Magic Number,Ext2,Ext2FS,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Ext2FS.cs,UpdateKernel,The following statement contains a magic number: using (binaryReader = new BinaryReader (File.Open (image' FileMode.Open))) {  				this.ReadSuperBlock (hasMBR);    				///////////////////////////////////////////////////////////////////////  				this.ReadGroupDescriptor ();    				this.root = this.ReadINode (INode.EXT2_ROOT_INO);    				///////////////////////////////////////////////////////////////////////  				// Console.WriteLine ("------------------------------------------------------------");  				// this.DisplayTree ("/"' this.root);    				///////////////////////////////////////////////////////////////////////  				INode inode = this.GetINodeByName ("/SharpOS.Kernel.bin");    				List<uint> blocks = new List<uint> ();  				List<bool> indirectBlocks = new List<bool> ();  				GetDataBlocks (inode' blocks' indirectBlocks);    				///////////////////////////////////////////////////////////////////////  				using (BinaryReader kernelBinaryReader = new BinaryReader (File.Open (kernel' FileMode.Open))) {  					// Console.WriteLine ("Length: {0}"' kernelBinaryReader.BaseStream.Length);    					uint neededBlocks = (uint) Math.Ceiling ((double) kernelBinaryReader.BaseStream.Length / (double) this.fileSystem.BlockSize);  					uint neededIndirectBlocks = this.ComputeIndirectOfBlocksCount (neededBlocks);    					if (neededBlocks + neededIndirectBlocks > blocks.Count)  						this.AllocateBlocks (blocks' neededBlocks + neededIndirectBlocks);    					else if (neededBlocks + neededIndirectBlocks < blocks.Count)  						this.DeallocateBlocks (blocks' neededBlocks + neededIndirectBlocks);    					this.WriteSuperBlock ();  					this.WriteGroupDescriptor ();    					this.WriteFile (inode' blocks' kernelBinaryReader);    					inode.Size = (uint) kernelBinaryReader.BaseStream.Length;  					inode.Blocks = (uint) ((neededBlocks + neededIndirectBlocks) * this.fileSystem.BlockSize / 512);    					this.WriteBlock (inode.Block);  				}    			}
Magic Number,Ext2,FileSystem,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\FileSystem.cs,FileSystem,The following statement contains a magic number: this.blockSize = (uint) (1024 << (int) this.superBlock.BlockSize);
Magic Number,Ext2,FileSystem,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\FileSystem.cs,FileSystem,The following statement contains a magic number: if (this.superBlock.FragmentSize < 0)  				this.fragmentSize = (uint) (1024 >> -superBlock.FragmentSize);  			else  				this.fragmentSize = (uint) (1024 << superBlock.FragmentSize);
Magic Number,Ext2,FileSystem,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\FileSystem.cs,FileSystem,The following statement contains a magic number: if (this.superBlock.FragmentSize < 0)  				this.fragmentSize = (uint) (1024 >> -superBlock.FragmentSize);  			else  				this.fragmentSize = (uint) (1024 << superBlock.FragmentSize);
Magic Number,Ext2,FileSystem,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\FileSystem.cs,FileSystem,The following statement contains a magic number: this.indirectCount = this.blockSize >> 2;
Magic Number,Ext2,FileSystem,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\FileSystem.cs,FileSystem,The following statement contains a magic number: if (this.superBlock.RevisionLevel == 1)  				this.inodeSize = this.superBlock.INodeSize;  			else  				this.inodeSize = 128;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: long alignedSize = (imgSize + 511) & ~((long)511);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: long alignedSize = (imgSize + 511) & ~((long)511);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: byte [] footer = new byte [512];
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = 2;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: DateTime org = new DateTime (2000' 1' 1' 0' 0' 0);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((stamp >> 24) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((stamp >> 16) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((stamp >> 8) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 56) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 48) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 40) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 32) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 24) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 16) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 8) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 56) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 48) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 40) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 32) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 24) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 16) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((alignedSize >> 8) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: int geom = ComputeCHS (alignedSize >> 9);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((geom >> 24) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((geom >> 16) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((geom >> 8) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = 2;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: Array.Copy (uuid' 0' footer' off' 16);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((chksum >> 24) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((chksum >> 16) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,CreateFromImage,The following statement contains a magic number: footer [off++] = (byte)((chksum >> 8) & 0xFF);
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)  				totalSectors = 65535 * 16 * 255;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)  				totalSectors = 65535 * 16 * 255;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)  				totalSectors = 65535 * 16 * 255;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)  				totalSectors = 65535 * 16 * 255;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)  				totalSectors = 65535 * 16 * 255;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)  				totalSectors = 65535 * 16 * 255;
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)  			{  				sectorsPerTrack = 255;  				heads = 16;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  			}  			else  			{  				sectorsPerTrack = 17;  				cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;    				heads = (cylinderTimesHeads + 1023) / 1024;    				if (heads < 4)  					heads = 4;    				if (cylinderTimesHeads >= (heads * 1024) || heads > 16)  				{  					sectorsPerTrack = 31;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}    				if (cylinderTimesHeads >= (heads * 1024))  				{  					sectorsPerTrack = 63;  					heads = 16;  					cylinderTimesHeads = (int)totalSectors / sectorsPerTrack;  				}  			}
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: return (sectorsPerTrack | (heads<<8) | (cylinders<<16));
Magic Number,DiskImageUpdater,MsVhd,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\MsVhd.cs,ComputeCHS,The following statement contains a magic number: return (sectorsPerTrack | (heads<<8) | (cylinders<<16));
Magic Number,DiskImageUpdater,Program,C:\repos\sharpos_SharpOS\Tools\DiskImageUpdater\Program.cs,Main,The following statement contains a magic number: if (opts.RemainingArguments.Length == 2) {  				Console.Error.WriteLine ("Usage: DiskImageUpdater -i <kernel> -o <disk image>");  				Console.Error.WriteLine ("Run `DiskImageUpdater -help` for more information.");  				return 1;  			}
