Implementation smell,Namespace,Class,File,Method,Description
Long Statement,eZet.EveLib.Core.Converters,CamelCaseToPascalCaseExpandoObjectConverter,C:\repos\ezet_evelib\EveLib.Core\Converters\CamelCaseToPascalCaseExpandoObjectConverter.cs,ReadValue,The length of the statement  "                    throw new Exception(string.Format(CultureInfo.InvariantCulture' "Unexpected token when converting ExpandoObject: {0}"' reader.TokenType)); " is 138.
Magic Number,eZet.EveLib.Core.Cache,EveLibFileCache,C:\repos\ezet_evelib\EveLib.Core\Cache\EveLibFileCache.cs,StoreAsync,The following statement contains a magic number: try {                  var cacheTask = writeCacheDataToDiskAsync(uri' data);                  Task registerTask = Task.FromResult(0);                  if (_counter > 10) {                      registerTask = writeRegisterToDiskAsync();                      _counter = 0;                  }                  await Task.WhenAll(cacheTask' registerTask).ConfigureAwait(false);              }              catch (Exception) {                  _trace.TraceEvent(TraceEventType.Error' 0' "EveLibFileCache:An error occured while writing to cache");              }
Magic Number,eZet.EveLib.Core.Util,AsyncFileUtilities,C:\repos\ezet_evelib\EveLib.Core\Util\AsyncFileUtilities.cs,ReadAllTextAsync,The following statement contains a magic number: using (var sourceStream = new FileStream(filePath'                  FileMode.Open' FileAccess.Read' FileShare.Read' 4096' true)) {                  var sb = new StringBuilder();                  var buffer = new byte[0x1000];                  int numRead;                  while ((numRead = await sourceStream.ReadAsync(buffer' 0' buffer.Length).ConfigureAwait(false)) != 0) {                      var text = Encoding.UTF8.GetString(buffer' 0' numRead);                      sb.Append(text);                  }                  return sb.ToString();              }
Magic Number,eZet.EveLib.Core.Util,AsyncFileUtilities,C:\repos\ezet_evelib\EveLib.Core\Util\AsyncFileUtilities.cs,WriteAllTextAsync,The following statement contains a magic number: using (var sourceStream = new FileStream(filePath'                  FileMode.Create' FileAccess.Write' FileShare.None' 4096' true)) {                  await sourceStream.WriteAsync(encodedText' 0' encodedText.Length).ConfigureAwait(false);              }
Missing Default,eZet.EveLib.Core.Converters,CamelCaseToPascalCaseExpandoObjectConverter,C:\repos\ezet_evelib\EveLib.Core\Converters\CamelCaseToPascalCaseExpandoObjectConverter.cs,ReadObject,The following switch statement is missing a default case: switch (reader.TokenType) {                      case JsonToken.PropertyName:                          //CHANGED                          //added call to ToPascalCase extension method                                 string propertyName = reader.Value.ToString().ToPascalCase();                            if (!reader.Read())                              throw new Exception("Unexpected end.");                            object v = ReadValue(reader);                            expandoObject[propertyName] = v;                          break;                      case JsonToken.Comment:                          break;                      case JsonToken.EndObject:                          return expandoObject;                  }
