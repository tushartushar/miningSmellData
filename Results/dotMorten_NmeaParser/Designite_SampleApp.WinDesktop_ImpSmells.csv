Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SampleApp.WinDesktop,GpgsaControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\GpgsaControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/gpgsacontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,SampleApp.WinDesktop,GpggaControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\GpggaControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/gpggacontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,SampleApp.WinDesktop,GpgllControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\GpgllControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/gpgllcontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,SampleApp.WinDesktop,KeyValuePairControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\KeyValuePairControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/keyvaluepaircontrol.xaml"' System.UriKind.Relative); " is 129.
Long Statement,SampleApp.WinDesktop,UnknownMessageControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\UnknownMessageControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/unknownmessagecontrol.xaml"' System.UriKind.Relative); " is 131.
Long Statement,SampleApp.WinDesktop,PgrmeControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\PgrmeControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/pgrmecontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,SampleApp.WinDesktop,GprmcControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\GprmcControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/gprmccontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,SampleApp.WinDesktop,SatelliteSnr,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteSnr.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/satellitesnr.xaml"' System.UriKind.Relative); " is 122.
Long Statement,SampleApp.WinDesktop,SatelliteView,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/satelliteview.xaml"' System.UriKind.Relative); " is 123.
Long Statement,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,device_MessageReceived,The length of the statement  "                    var ctrl = MessagePanel.Children.OfType<UnknownMessageControl>().Where(c => c.Message.MessageType == args.Message.MessageType).FirstOrDefault(); " is 144.
Long Statement,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The length of the statement  "					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood " is 123.
Long Statement,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/SampleApp.WinDesktop;component/mainwindow.xaml"' System.UriKind.Relative); " is 120.
Long Statement,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click); " is 120.
Long Statement,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click); " is 121.
Long Statement,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click); " is 124.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Empty Catch Block,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The method has an empty catch block.
Magic Number,SampleApp.WinDesktop,UnknownMessageControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\UnknownMessageControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.typeName = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.Values = ((System.Windows.Controls.ItemsControl)(target));              return;              }
Magic Number,SampleApp.WinDesktop,PolarPlacementItem,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,ArrangeOverride,The following statement contains a magic number: double az = (Azimuth - 90) / 180 * Math.PI;
Magic Number,SampleApp.WinDesktop,PolarPlacementItem,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,ArrangeOverride,The following statement contains a magic number: double az = (Azimuth - 90) / 180 * Math.PI;
Magic Number,SampleApp.WinDesktop,PolarPlacementItem,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,ArrangeOverride,The following statement contains a magic number: double e = (90 - Elevation) / 90;
Magic Number,SampleApp.WinDesktop,PolarPlacementItem,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,ArrangeOverride,The following statement contains a magic number: double e = (90 - Elevation) / 90;
Magic Number,SampleApp.WinDesktop,PolarPlacementItem,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,ArrangeOverride,The following statement contains a magic number: X = arrangeBounds.Width * .5 * X;
Magic Number,SampleApp.WinDesktop,PolarPlacementItem,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,ArrangeOverride,The following statement contains a magic number: Y = arrangeBounds.Height * .5 * Y;
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,device_MessageReceived,The following statement contains a magic number: Dispatcher.BeginInvoke((Action) delegate()  			{  				messages.Enqueue(args.Message.MessageType + ": " + args.Message.ToString());  				if (messages.Count > 100) messages.Dequeue(); //Keep message queue at 100  				output.Text = string.Join("\n"' messages.ToArray());  				output.Select(output.Text.Length - 1' 0); //scroll to bottom    				if(args.Message is NmeaParser.Nmea.Gps.Gpgsv)  				{  					var gpgsv = (NmeaParser.Nmea.Gps.Gpgsv)args.Message;  					if(args.IsMultipart && args.MessageParts != null)  						satView.GpgsvMessages = args.MessageParts.OfType<NmeaParser.Nmea.Gps.Gpgsv>();  				}  				if (args.Message is NmeaParser.Nmea.Gps.Gprmc)  					gprmcView.Message = args.Message as NmeaParser.Nmea.Gps.Gprmc;  				else if (args.Message is NmeaParser.Nmea.Gps.Gpgga)  					gpggaView.Message = args.Message as NmeaParser.Nmea.Gps.Gpgga;  				else if (args.Message is NmeaParser.Nmea.Gps.Gpgsa)  					gpgsaView.Message = args.Message as NmeaParser.Nmea.Gps.Gpgsa;  				else if (args.Message is NmeaParser.Nmea.Gps.Gpgll)  					gpgllView.Message = args.Message as NmeaParser.Nmea.Gps.Gpgll;  				else if (args.Message is NmeaParser.Nmea.Gps.Garmin.Pgrme)  					pgrmeView.Message = args.Message as NmeaParser.Nmea.Gps.Garmin.Pgrme;                  else if (args.Message is NmeaParser.Nmea.UnknownMessage)                  {                      var ctrl = MessagePanel.Children.OfType<UnknownMessageControl>().Where(c => c.Message.MessageType == args.Message.MessageType).FirstOrDefault();                      if(ctrl == null)                      {                          ctrl = new UnknownMessageControl()                          {                              Style = this.Resources["card"] as Style                          };                          MessagePanel.Children.Add(ctrl);                      }                      ctrl.Message = args.Message as NmeaParser.Nmea.UnknownMessage;                  }                  else                  {                      //                  }  			});
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,FindPort,The following statement contains a magic number: foreach (var portName in ports)  			{  				using (var port = new System.IO.Ports.SerialPort(portName))  				{  					var defaultRate = port.BaudRate;  					List<int> baudRatesToTest = new List<int>(new[] { 9600' 4800' 115200' 19200' 57600' 38400' 2400 }); //Ordered by likelihood  					//Move default rate to first spot  					if (baudRatesToTest.Contains(defaultRate)) baudRatesToTest.Remove(defaultRate);  					baudRatesToTest.Insert(0' defaultRate);  					foreach (var baud in baudRatesToTest)  					{    						if (progress != null)  							progress.Report(string.Format("Trying {0} @ {1}baud"' portName' port.BaudRate));  						port.BaudRate = baud;  						port.ReadTimeout = 2000; //this might not be long enough  						bool success = false;  						try  						{  							port.Open();  							if (!port.IsOpen)  								continue; //couldn't open port  							try  							{  								port.ReadTo("$GP");  							}  							catch (TimeoutException)  							{  								continue;  							}  						}  						catch  						{  							//Error reading  						}  						finally  						{  							port.Close();  						}  						if (success)  						{  							return new System.IO.Ports.SerialPort(portName' baud);  						}  					}  				}  			}
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Magic Number,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
Missing Default,SampleApp.WinDesktop,UnknownMessageControl,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\UnknownMessageControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.typeName = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.Values = ((System.Windows.Controls.ItemsControl)(target));              return;              }
Missing Default,SampleApp.WinDesktop,SatelliteSnr,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteSnr.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.satellites = ((System.Windows.Controls.ItemsControl)(target));              return;              }
Missing Default,SampleApp.WinDesktop,SatelliteView,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\SatelliteView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.satellites = ((System.Windows.Controls.ItemsControl)(target));              return;              }
Missing Default,SampleApp.WinDesktop,MainWindow,C:\repos\dotMorten_NmeaParser\src\SampleApp.WinDesktop\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MessagePanel = ((System.Windows.Controls.WrapPanel)(target));              return;              case 2:              this.gprmcView = ((SampleApp.WinDesktop.GprmcControl)(target));              return;              case 3:              this.gpggaView = ((SampleApp.WinDesktop.GpggaControl)(target));              return;              case 4:              this.gpgsaView = ((SampleApp.WinDesktop.GpgsaControl)(target));              return;              case 5:              this.gpgllView = ((SampleApp.WinDesktop.GpgllControl)(target));              return;              case 6:              this.pgrmeView = ((SampleApp.WinDesktop.PgrmeControl)(target));              return;              case 7:              this.satView = ((SampleApp.WinDesktop.SatelliteView)(target));              return;              case 8:              this.output = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.currentDeviceInfo = ((System.Windows.Controls.TextBlock)(target));              return;              case 10:                            #line 60 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenNmeaLogButton_Click);                            #line default              #line hidden              return;              case 11:                            #line 64 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AutoDiscoverButton_Click);                            #line default              #line hidden              return;              case 12:              this.autoDiscoverStatus = ((System.Windows.Controls.TextBlock)(target));              return;              case 13:              this.serialPorts = ((System.Windows.Controls.ComboBox)(target));              return;              case 14:              this.baudRates = ((System.Windows.Controls.ComboBox)(target));              return;              case 15:                            #line 82 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ConnectToSerialButton_Click);                            #line default              #line hidden              return;              }
