Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SampleApp.UWP,MainPage,C:\repos\dotMorten_NmeaParser\src\SampleApp.UWP\MainPage.xaml.cs,LoadBluetoothGPS,The length of the statement  "			string GpsDeviceName = "HOLUX GPSlim236"; //Change name to your device or build UI for user to select from list of 'devices' " is 124.
Magic Number,SampleApp.UWP,MainPage,C:\repos\dotMorten_NmeaParser\src\SampleApp.UWP\MainPage.xaml.cs,LoadSerialDeviceGPS,The following statement contains a magic number: if(devices.Any())  			{  				var deviceInfo = devices.First();  				var serialDevice = await SerialDevice.FromIdAsync(deviceInfo.Id);  				//Set up serial device according to device specifications:  				serialDevice.BaudRate = 4800;  				serialDevice.DataBits = 8;  				serialDevice.Parity = SerialParity.None;  				var device = new NmeaParser.SerialPortDevice(serialDevice);  				device.MessageReceived += device_MessageReceived;  				await device.OpenAsync();  			}
Magic Number,SampleApp.UWP,MainPage,C:\repos\dotMorten_NmeaParser\src\SampleApp.UWP\MainPage.xaml.cs,LoadSerialDeviceGPS,The following statement contains a magic number: if(devices.Any())  			{  				var deviceInfo = devices.First();  				var serialDevice = await SerialDevice.FromIdAsync(deviceInfo.Id);  				//Set up serial device according to device specifications:  				serialDevice.BaudRate = 4800;  				serialDevice.DataBits = 8;  				serialDevice.Parity = SerialParity.None;  				var device = new NmeaParser.SerialPortDevice(serialDevice);  				device.MessageReceived += device_MessageReceived;  				await device.OpenAsync();  			}
Magic Number,SampleApp.UWP,MainPage,C:\repos\dotMorten_NmeaParser\src\SampleApp.UWP\MainPage.xaml.cs,device_MessageReceived,The following statement contains a magic number: var _ = Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal' () =>  			{  				messages.Enqueue(args.Message.MessageType + ": " + args.Message.ToString());  				if (messages.Count > 100) messages.Dequeue(); //Keep message queue at 100  				output.Text = string.Join("\n"' messages.ToArray());  			});
