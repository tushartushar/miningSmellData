Implementation smell,Namespace,Class,File,Method,Description
Long Statement,tinyweb.framework,ArgumentBuilder,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\ArgumentBuilder\ArgumentBuilder.cs,BuildArguments,The length of the statement  "                    throw new Exception(String.Format("No argument was supplied for required parameter {0} ({1})"' parameter.Name' parameter.ParameterType)); " is 137.
Long Statement,tinyweb.framework,ArgumentBuilder,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\ArgumentBuilder\ArgumentBuilder.cs,createAndPopulateInstance,The length of the statement  "                throw new Exception(String.Format("The parameter {0} of type {1} or one of its dependencies does not have a parameterless constructor defined"' requestedName' requestedType)); " is 175.
Long Statement,tinyweb.framework,ArgumentBuilder,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\ArgumentBuilder\ArgumentBuilder.cs,getValueFromRequest,The length of the statement  "                value = findValue(requestContext.HttpContext.Request.QueryString.ToRouteValueDictionary()' requestedName' requestedType); " is 121.
Long Statement,tinyweb.framework,Tinyweb,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Init\Tinyweb.cs,Init,The length of the statement  "            var scanResult = AssemblyScanner.FindHandlersAndFilters(HandlerScanner.Current.GetSearcher()' FilterScanner.Current.GetSearcher()); " is 131.
Long Statement,tinyweb.framework,Tinyweb,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Init\Tinyweb.cs,addRoute,The length of the statement  "            RouteTable.Routes.Add(new SWR.Route(handler.Uri.Trim('/')' new RouteValueDictionary(handler.DefaultRouteValues)' new RouteHandler(handler))); " is 141.
Long Statement,tinyweb.framework,Tinyweb,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Init\Tinyweb.cs,addRoute,The length of the statement  "                RouteTable.Routes.Add(new SWR.Route(route' new RouteValueDictionary(handler.DefaultRouteValues)' new RouteHandler(handler))); " is 125.
Long Statement,tinyweb.framework,Extensions,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Extensions\Extensions.cs,PascalSplit,The length of the statement  "            return input.IsEmpty() ? new string[0] : Regex.Replace(input' "(\\B[A-Z])"' " $1").Split(' ').Select(x => x.ToLower()).ToArray(); " is 129.
Long Statement,tinyweb.framework,Extensions,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Extensions\Extensions.cs,ParseAcceptHeader,The length of the statement  "                    mimeTypes.Add(preferenceParts.ElementAt(0)' Convert.ToDouble(preferenceParts.ElementAt(1).Substring(2)' CultureInfo.InvariantCulture)); " is 135.
Long Statement,tinyweb.framework,DefaultHandlerInvoker,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Handlers\HandlerInvoker\DefaultHandlerInvoker.cs,Execute,The length of the statement  "                throw new HttpException(HttpStatusCode.NotImplemented.CastInt()' "The request could not be completed because the resource does not support {0}".With(httpVerb.Name())); " is 167.
Long Statement,tinyweb.framework,DefaultHandlerScanner,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Handlers\HandlerScanner\DefaultHandlerScanner.cs,handlerIsValid,The length of the statement  "            return type.GetMethods().Any(method => allowedMethods.Contains(method.Name.ToLower()) && method.ReturnType == typeof(IResult)); " is 127.
Long Statement,tinyweb.framework,DefaultHandlerScanner,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Handlers\HandlerScanner\DefaultHandlerScanner.cs,getRoute,The length of the statement  "            var routeMember = type.GetMember("Route"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.IgnoreCase).SingleOrDefault(); " is 156.
Empty Catch Block,tinyweb.framework,ArgumentBuilder,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\ArgumentBuilder\ArgumentBuilder.cs,findValue,The method has an empty catch block.
Empty Catch Block,tinyweb.framework,HttpHandler,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Init\HttpHandler.cs,ProcessRequest,The method has an empty catch block.
Magic Number,tinyweb.framework,JsonOrXmlResult,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Handlers\HandlerResult\JsonOrXmlResult.cs,ProcessResult,The following statement contains a magic number: if (request.RouteValues.Routes.ContainsKey("format"))              {                  switch (request.RouteValues.Routes["format"].ToString())                  {                      case "xml":                      {                          new XmlResult(Data).ProcessResult(request' response);                      }                      break;                        default:                      {                          new JsonResult(Data).ProcessResult(request' response);                      }                      break;                  }              }              else              {                  if (!request.Headers.KeyExists("Accept"))                  {                      new JsonResult(Data).ProcessResult(request' response);                      return;                  }                    var accept = request.Headers["Accept"].ParseAcceptHeader();                    var jsonPriority = accept.ContainsKey("application/json") ? accept["application/json"] : 1;                  var xmlPriority = accept.ContainsKey("application/xml") ? accept["application/xml"] : 0.9;                    if (xmlPriority > jsonPriority)                  {                      new XmlResult(Data).ProcessResult(request' response);                  }                  else                  {                      new JsonResult(Data).ProcessResult(request' response);                  }              }
Magic Number,tinyweb.framework,Extensions,C:\repos\martinrue_Tinyweb\src\tinyweb.framework\Extensions\Extensions.cs,ParseAcceptHeader,The following statement contains a magic number: foreach (var token in acceptHeader.Split(''').Select(x => x.Trim()))              {                  if (token.Contains(";"))                  {                      var preferenceParts = token.Split(';').Select(x => x.Trim());                      mimeTypes.Add(preferenceParts.ElementAt(0)' Convert.ToDouble(preferenceParts.ElementAt(1).Substring(2)' CultureInfo.InvariantCulture));                  }                  else                  {                      mimeTypes.Add(token' 1);                  }              }
