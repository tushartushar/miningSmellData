Implementation smell,Namespace,Class,File,Method,Description
Long Method,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,PersonaliseKerbal,The method has 151 lines of code.
Long Method,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,Load,The method has 146 lines of code.
Long Method,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The method has 144 lines of code.
Long Method,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The method has 194 lines of code.
Complex Method,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,PersonaliseKerbal,Cyclomatic complexity of the method is 31
Complex Method,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,LoadSuitMap,Cyclomatic complexity of the method is 9
Complex Method,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,ReadKerbalsConfigs,Cyclomatic complexity of the method is 8
Complex Method,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,Load,Cyclomatic complexity of the method is 30
Complex Method,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,ReplaceTextures,Cyclomatic complexity of the method is 10
Complex Method,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,Cyclomatic complexity of the method is 27
Complex Method,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,Load,Cyclomatic complexity of the method is 11
Complex Method,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,Cyclomatic complexity of the method is 35
Complex Method,TextureReplacer,TRReflection,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRReflection.cs,OnStart,Cyclomatic complexity of the method is 10
Complex Method,TextureReplacer,Skin,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Skin.cs,SetTexture,Cyclomatic complexity of the method is 8
Complex Method,TextureReplacer,Suit,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Suit.cs,SetTexture,Cyclomatic complexity of the method is 16
Long Parameter List,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,LogHierarchies,The method has 6 parameters. Parameters: maleIva' maleEva' maleEvaVintage' femaleIva' femaleEva' femaleEvaVintage
Empty Catch Block,TextureReplacer,Util,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Util.cs,Parse,The method has an empty catch block.
Empty Catch Block,TextureReplacer,Util,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Util.cs,Parse,The method has an empty catch block.
Magic Number,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,GetKerbalSkin,The following statement contains a magic number: int number = (appearance.Hash * 4099) & 0x7fffffff;
Magic Number,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,GetKerbalSuit,The following statement contains a magic number: int number = (appearance.Hash * 2053) & 0x7fffffff;
Magic Number,TextureReplacer,Personaliser,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Personaliser.cs,LoadKerbalsMap,The following statement contains a magic number: string suitName = tokens.Length >= 2 ? tokens[1] : null;
Magic Number,TextureReplacer,Reflections,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,EnsureCamera,The following statement contains a magic number: camera.nearClipPlane = 0.125f;
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Script,The following statement contains a magic number: envMap = new RenderTexture(reflectionResolution' reflectionResolution' 24) {            hideFlags = HideFlags.HideAndDontSave'            wrapMode = TextureWrapMode.Clamp'            dimension = TextureDimension.Cube          };
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Script,The following statement contains a magic number: currentFace = Util.Random.Next(6);
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.farClipPlane = 100.0f;
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.cullingMask = 1 << 18;
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.farClipPlane = 3.0e7f;
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.cullingMask = (1 << 10) | (1 << 23);
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.cullingMask = (1 << 10) | (1 << 23);
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.transform.position = isEva ? transform.position + 0.4f * transform.up : transform.position;
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.farClipPlane = 60000.0f;
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.cullingMask = (1 << 0) | (1 << 1) | (1 << 5) | (1 << 15) | (1 << 17);
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.cullingMask = (1 << 0) | (1 << 1) | (1 << 5) | (1 << 15) | (1 << 17);
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: camera.cullingMask = (1 << 0) | (1 << 1) | (1 << 5) | (1 << 15) | (1 << 17);
Magic Number,TextureReplacer,Script,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Update,The following statement contains a magic number: currentFace = (currentFace + 1) % 6;
Magic Number,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The following statement contains a magic number: switch (smr.name) {              case "eyeballLeft":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = eyeballLeft;                break;                case "eyeballRight":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = eyeballRight;                break;                case "pupilLeft":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = pupilLeft;                if (pupilLeft != null) {                  smr.sharedMaterial.color = Color.white;                }                break;                case "pupilRight":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = pupilRight;                if (pupilRight != null) {                  smr.sharedMaterial.color = Color.white;                }                break;                case "headMesh01":              case "headMesh02":                // Replace with bump-mapped shader so normal maps for heads will work.                smr.sharedMaterial.shader = HeadShader;                headMaterial = smr.sharedMaterial;                break;                case "visor":                // It will be raplaced with reflective shader later' if reflections are enabled.                switch (i) {                  case 0: // maleIva                    if (ivaVisorTexture != null) {                      smr.sharedMaterial.shader = TexturedVisorShader;                      smr.sharedMaterial.mainTexture = ivaVisorTexture;                      smr.sharedMaterial.color = Color.white;                    }                    break;                    case 1: // maleEva                    if (evaVisorTexture != null) {                      smr.sharedMaterial.shader = TexturedVisorShader;                      smr.sharedMaterial.mainTexture = evaVisorTexture;                      smr.sharedMaterial.color = Color.white;                    }                    break;                    case 2: // maleEvaVintage                    smr.sharedMaterial = visorMaterials[1];                    break;                }                  visorMaterials[i] = smr.sharedMaterial;                break;            }
Magic Number,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The following statement contains a magic number: i < 3
Magic Number,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The following statement contains a magic number: i < 3
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.BeginVertical(GUILayout.Width(200));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Space(10);
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Box(skin.Head' GUILayout.Width(200)' GUILayout.Height(200));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Box(skin.Head' GUILayout.Width(200)' GUILayout.Height(200));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Box(suitTex' GUILayout.Width(100)' GUILayout.Height(100));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Box(suitTex' GUILayout.Width(100)' GUILayout.Height(100));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Space(10);
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Box(evaSuitTex' GUILayout.Width(100)' GUILayout.Height(100));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Box(evaSuitTex' GUILayout.Width(100)' GUILayout.Height(100));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.BeginVertical(GUILayout.Width(120));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Space(100);
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUILayout.Space(5);
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,WindowHandler,The following statement contains a magic number: GUI.DragWindow(new Rect(0' 0' Screen.width' 30));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,OnGUI,The following statement contains a magic number: windowRect.x = Math.Max(0' Math.Min(Screen.width - 30' windowRect.x));
Magic Number,TextureReplacer,TRGui,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\TRGui.cs,OnGUI,The following statement contains a magic number: windowRect.y = Math.Max(0' Math.Min(Screen.height - 30' windowRect.y));
Magic Number,TextureReplacer,Util,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Util.cs,Parse,The following statement contains a magic number: float.TryParse(components[2]' out variable.b);
Magic Number,TextureReplacer,Util,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Util.cs,Parse,The following statement contains a magic number: components.Length >= 3
Magic Number,TextureReplacer,Util,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Util.cs,Parse,The following statement contains a magic number: float.TryParse(components[3]' out variable.a);
Magic Number,TextureReplacer,Util,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Util.cs,Parse,The following statement contains a magic number: components.Length >= 4
Missing Default,TextureReplacer,Reflections,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Reflections.cs,Load,The following switch statement is missing a default case: switch (Application.platform) {          case RuntimePlatform.WindowsPlayer:            shadersFileName = "shaders.windows";            break;          case RuntimePlatform.OSXPlayer:            shadersFileName = "shaders.osx";            break;        }
Missing Default,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The following switch statement is missing a default case: switch (smr.name) {              case "eyeballLeft":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = eyeballLeft;                break;                case "eyeballRight":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = eyeballRight;                break;                case "pupilLeft":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = pupilLeft;                if (pupilLeft != null) {                  smr.sharedMaterial.color = Color.white;                }                break;                case "pupilRight":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = pupilRight;                if (pupilRight != null) {                  smr.sharedMaterial.color = Color.white;                }                break;                case "headMesh01":              case "headMesh02":                // Replace with bump-mapped shader so normal maps for heads will work.                smr.sharedMaterial.shader = HeadShader;                headMaterial = smr.sharedMaterial;                break;                case "visor":                // It will be raplaced with reflective shader later' if reflections are enabled.                switch (i) {                  case 0: // maleIva                    if (ivaVisorTexture != null) {                      smr.sharedMaterial.shader = TexturedVisorShader;                      smr.sharedMaterial.mainTexture = ivaVisorTexture;                      smr.sharedMaterial.color = Color.white;                    }                    break;                    case 1: // maleEva                    if (evaVisorTexture != null) {                      smr.sharedMaterial.shader = TexturedVisorShader;                      smr.sharedMaterial.mainTexture = evaVisorTexture;                      smr.sharedMaterial.color = Color.white;                    }                    break;                    case 2: // maleEvaVintage                    smr.sharedMaterial = visorMaterials[1];                    break;                }                  visorMaterials[i] = smr.sharedMaterial;                break;            }
Missing Default,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The following switch statement is missing a default case: switch (i) {                  case 0: // maleIva                    if (ivaVisorTexture != null) {                      smr.sharedMaterial.shader = TexturedVisorShader;                      smr.sharedMaterial.mainTexture = ivaVisorTexture;                      smr.sharedMaterial.color = Color.white;                    }                    break;                    case 1: // maleEva                    if (evaVisorTexture != null) {                      smr.sharedMaterial.shader = TexturedVisorShader;                      smr.sharedMaterial.mainTexture = evaVisorTexture;                      smr.sharedMaterial.color = Color.white;                    }                    break;                    case 2: // maleEvaVintage                    smr.sharedMaterial = visorMaterials[1];                    break;                }
Missing Default,TextureReplacer,Replacer,D:\research\architectureSmells\repos\ducakar_TextureReplacer\TextureReplacer\Replacer.cs,FixKerbalModels,The following switch statement is missing a default case: switch (smr.name) {              case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_eyeballLeft":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = eyeballLeft;                break;                case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_eyeballRight":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = eyeballRight;                break;                case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_pupilLeft":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = pupilLeft;                if (pupilLeft != null) {                  smr.sharedMaterial.color = Color.white;                }                break;                case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_pupilRight":                smr.sharedMaterial.shader = EyeShader;                smr.sharedMaterial.mainTexture = pupilRight;                if (pupilRight != null) {                  smr.sharedMaterial.color = Color.white;                }                break;                case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_pCube1":              case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_polySurface51":                // Replace with bump-mapped shader so normal maps for heads will work.                smr.sharedMaterial.shader = HeadShader;                break;                case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_upTeeth01":              case "mesh_female_kerbalAstronaut01_kerbalGirl_mesh_downTeeth01":                // Females don't have textured teeth' they use the same material as for the eyeballs. Extending female                // head material/texture to their teeth is not possible since teeth overlap with some ponytail subtexture.                // However' female teeth map to the same texture coordinates as male teeth' so we fix this by applying                // male head & teeth material for female teeth.                smr.sharedMaterial = headMaterial;                break;                case "visor":              case "mesh_female_kerbalAstronaut01_visor":                smr.sharedMaterial = visorMaterials[i];                break;            }
