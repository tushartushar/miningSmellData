Implementation smell,Namespace,Class,File,Method,Description
Long Statement,nMqttTests.ExtensionMethods,StreamExtensionMethods,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ExtensionMethods\StreamExtensionMethods.cs,String_LongStringIsFullyRead,The length of the statement  "                var result = (String) emType.InvokeMember("ReadMqttString"' ReflectionBindingConstants.PublicStaticMethod' null' null' new object[] { ms }); " is 140.
Long Statement,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,UnacceptableProtocolVersion,The length of the statement  "            MqttConnectAckMessage msg = new MqttConnectAckMessage().WithReturnCode(MqttConnectReturnCode.UnacceptedProtocolVersion); " is 120.
Long Statement,NmqttTests.Messages.ConnectAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Deserialization.cs,UnacceptableProtocolVersion,The length of the statement  "            Assert.Equal<MqttConnectReturnCode>(MqttConnectReturnCode.UnacceptedProtocolVersion' message.VariableHeader.ReturnCode); " is 120.
Long Statement,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ConsequtivePublishOnSameTopicGetsNextMessageId,The length of the statement  "            int firstMsgId = pm.Publish<string' AsciiPayloadConverter>(new PublicationTopic("A/rawTopic")' MqttQos.AtMostOnce' "test"); " is 123.
Long Statement,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ConsequtivePublishOnSameTopicGetsNextMessageId,The length of the statement  "            int secondMsgId = pm.Publish<string' AsciiPayloadConverter>(new PublicationTopic("A/rawTopic")' MqttQos.AtMostOnce' "test"); " is 124.
Long Statement,NmqttTests.SubscriptionsManager,SubscriptionsManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\SubscriptionsManager\SubscriptionsManager.cs,SubscriptionAckForNonPendingSubscriptionThrowsException,The length of the statement  "            Assert.Throws<ArgumentException>(() => theCallback(new MqttSubscribeAckMessage().WithMessageIdentifier(999).AddQosGrant(MqttQos.AtMostOnce))); " is 142.
Long Statement,NmqttTests.SubscriptionsManager,SubscriptionsManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\SubscriptionsManager\SubscriptionsManager.cs,SubscriptionAgainstInvalidTopicThrowsInvalidTopicException,The length of the statement  "            Assert.Throws<InvalidTopicException>(() => subs.RegisterSubscription<byte[]' PassThroughPayloadConverter>(badTopic' qos)); " is 122.
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,CtorRegistersForPingRequest,The following statement contains a magic number: MqttConnectionKeepAlive ka = new MqttConnectionKeepAlive(chMock.Object' 60);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,CtorRegistersForPingResponse,The following statement contains a magic number: MqttConnectionKeepAlive ka = new MqttConnectionKeepAlive(chMock.Object' 60);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,CtorRegistersForAllSentMessages,The following statement contains a magic number: MqttConnectionKeepAlive ka = new MqttConnectionKeepAlive(chMock.Object' 60);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,DisposeUnRegistersForPingRequest,The following statement contains a magic number: MqttConnectionKeepAlive ka = new MqttConnectionKeepAlive(chMock.Object' 60);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,DisposeUnRegistersForPingResponse,The following statement contains a magic number: MqttConnectionKeepAlive ka = new MqttConnectionKeepAlive(chMock.Object' 60);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,DisposeUnRegistersForAllSentMessages,The following statement contains a magic number: MqttConnectionKeepAlive ka = new MqttConnectionKeepAlive(chMock.Object' 60);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,SendInactivityCausesPingRequest,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,SendPingRequestDoesNotOccurWhenOtherMessageSent,The following statement contains a magic number: System.Threading.Thread.Sleep(800);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,SendPingRequestDoesNotOccurWhenOtherMessageSent,The following statement contains a magic number: System.Threading.Thread.Sleep(300);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,PingReceiveDoesNotStopPingRequest,The following statement contains a magic number: System.Threading.Thread.Sleep(800);
Magic Number,NmqttTests.ConnectionHandling,MqttConnectionKeepAliveTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ConnectionHandling\MqttConnectionKeepAliveTests.cs,PingReceiveDoesNotStopPingRequest,The following statement contains a magic number: System.Threading.Thread.Sleep(300);
Magic Number,NmqttTests,SubscriptionTopicTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\SubscriptionTopicTests.cs,TopicWithLengthLongerThanMaxAllowedThrowsArgumentException,The following statement contains a magic number: var longTopic = new char[65536];
Magic Number,NmqttTests.DataConverters,AsciiStringDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\AsciiStringDataConverterTests.cs,ByteArrayToAsciiString,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,AsciiStringDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\AsciiStringDataConverterTests.cs,ByteArrayToAsciiString,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,AsciiStringDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\AsciiStringDataConverterTests.cs,ByteArrayToAsciiString,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,AsciiStringDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\AsciiStringDataConverterTests.cs,ByteArrayToAsciiString,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,PassthroughToByteArray,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,PassthroughToByteArray,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,PassthroughToByteArray,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,PassthroughToByteArray,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,ByteArrayToPassthrough,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,ByteArrayToPassthrough,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,ByteArrayToPassthrough,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,NmqttTests.DataConverters,PassthroughDataConverterTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\DataConverters\PassthroughDataConverterTests.cs,ByteArrayToPassthrough,The following statement contains a magic number: var input = new byte[] { 40' 41' 42' 43 };
Magic Number,nMqttTests.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Encoding\MqttEncoding.cs,GetByteCount,The following statement contains a magic number: Assert.Equal<int>(5' byteCount);
Magic Number,nMqttTests.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Encoding\MqttEncoding.cs,GetCharCount_ValidLength_LSB,The following statement contains a magic number: var strBytes = new[]               {                  (byte)0'                  (byte)3'                  (byte)'a''                  (byte)'b''                  (byte)'c'              };
Magic Number,nMqttTests.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Encoding\MqttEncoding.cs,GetCharCount_ValidLength_LSB,The following statement contains a magic number: Assert.Equal<int>(3' count);
Magic Number,nMqttTests.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Encoding\MqttEncoding.cs,GetCharCount_ValidLength_MSB,The following statement contains a magic number: var strBytes = new[]               {                  (byte)255'                  (byte)255'              };
Magic Number,nMqttTests.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Encoding\MqttEncoding.cs,GetCharCount_ValidLength_MSB,The following statement contains a magic number: var strBytes = new[]               {                  (byte)255'                  (byte)255'              };
Magic Number,nMqttTests.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Encoding\MqttEncoding.cs,GetCharCount_ValidLength_MSB,The following statement contains a magic number: Assert.Equal<int>(65535' count);
Magic Number,NmqttTests.EventArgs,DataAvailableEventArgsTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\EventArgs\DataAvailableEventArgsTests.cs,CtorDataAvailableInProperty,The following statement contains a magic number: var e = new DataAvailableEventArgs(new List<byte>(new byte[] { 3' 2' 1 }));
Magic Number,NmqttTests.EventArgs,DataAvailableEventArgsTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\EventArgs\DataAvailableEventArgsTests.cs,CtorDataAvailableInProperty,The following statement contains a magic number: var e = new DataAvailableEventArgs(new List<byte>(new byte[] { 3' 2' 1 }));
Magic Number,NmqttTests.EventArgs,DataAvailableEventArgsTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\EventArgs\DataAvailableEventArgsTests.cs,CtorDataAvailableInProperty,The following statement contains a magic number: Assert.Equal<int>(3' e.MessageData.Count());
Magic Number,NmqttTests.EventArgs,DataAvailableEventArgsTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\EventArgs\DataAvailableEventArgsTests.cs,CtorDataAvailableInProperty,The following statement contains a magic number: Assert.Equal<byte>(3' e.MessageData[0]);
Magic Number,NmqttTests.EventArgs,DataAvailableEventArgsTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\EventArgs\DataAvailableEventArgsTests.cs,CtorDataAvailableInProperty,The following statement contains a magic number: Assert.Equal<byte>(2' e.MessageData[1]);
Magic Number,NmqttTests.EventArgs,DataAvailableEventArgsTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\EventArgs\DataAvailableEventArgsTests.cs,CtorDataAvailableInProperty,The following statement contains a magic number: Assert.Equal<byte>(1' e.MessageData[2]);
Magic Number,nMqttTests.ExtensionMethods,StreamExtensionMethods,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ExtensionMethods\StreamExtensionMethods.cs,String_NotEnoughBytesInString,The following statement contains a magic number: var bytes = new[] { (byte)0' (byte)2' (byte)'m' };
Magic Number,nMqttTests.ExtensionMethods,StreamExtensionMethods,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ExtensionMethods\StreamExtensionMethods.cs,String_LongStringIsFullyRead,The following statement contains a magic number: var longString = new byte[65535];
Magic Number,nMqttTests.ExtensionMethods,StreamExtensionMethods,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\ExtensionMethods\StreamExtensionMethods.cs,String_LongStringIsFullyRead,The following statement contains a magic number: var bytes = new List<byte>(new[]{ (byte)(longString.Length >> 8)' (byte)(longString.Length & 0xFF) });
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,CorruptHeader_InvalidMessageSize,The following statement contains a magic number: MqttHeader inputHeader = new MqttHeader()              {                  Duplicate = true'                  Retain = false'                  MessageSize = 268435455' // the max message size' which we will fudge later in the test                  MessageType = MqttMessageType.Connect'                  Qos = MqttQos.AtLeastOnce              };
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,CorruptHeader_InvalidMessageSize,The following statement contains a magic number: inputHeader.WriteTo(268435455' stream);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,CorruptHeader_InvalidMessageSize,The following statement contains a magic number: stream.Seek(4' SeekOrigin.Begin);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,CorruptHeader_InvalidMessageSize,The following statement contains a magic number: stream.Seek(4' SeekOrigin.Begin);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,Qos_AtLeastOnce,The following statement contains a magic number: var headerBytes = GetHeaderBytes(2' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,Qos_ExactlyOnce,The following statement contains a magic number: var headerBytes = GetHeaderBytes(4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,Qos_Reserved1,The following statement contains a magic number: var headerBytes = GetHeaderBytes(6' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Connect,The following statement contains a magic number: var headerBytes = GetHeaderBytes(1 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_ConnectAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(2 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_ConnectAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(2 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Publish,The following statement contains a magic number: var headerBytes = GetHeaderBytes(3 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Publish,The following statement contains a magic number: var headerBytes = GetHeaderBytes(3 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(4 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(4 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishReceived,The following statement contains a magic number: var headerBytes = GetHeaderBytes(5 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishReceived,The following statement contains a magic number: var headerBytes = GetHeaderBytes(5 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishRelease,The following statement contains a magic number: var headerBytes = GetHeaderBytes(6 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishRelease,The following statement contains a magic number: var headerBytes = GetHeaderBytes(6 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishComplete,The following statement contains a magic number: var headerBytes = GetHeaderBytes(7 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PublishComplete,The following statement contains a magic number: var headerBytes = GetHeaderBytes(7 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Subscribe,The following statement contains a magic number: var headerBytes = GetHeaderBytes(8 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Subscribe,The following statement contains a magic number: var headerBytes = GetHeaderBytes(8 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_SubscriptionAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(9 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_SubscriptionAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(9 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Unsubscribe,The following statement contains a magic number: var headerBytes = GetHeaderBytes(10 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Unsubscribe,The following statement contains a magic number: var headerBytes = GetHeaderBytes(10 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_UnsubsriptionAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(11 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_UnsubsriptionAck,The following statement contains a magic number: var headerBytes = GetHeaderBytes(11 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PingRequest,The following statement contains a magic number: var headerBytes = GetHeaderBytes(12 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PingRequest,The following statement contains a magic number: var headerBytes = GetHeaderBytes(12 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PingResponse,The following statement contains a magic number: var headerBytes = GetHeaderBytes(13 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_PingResponse,The following statement contains a magic number: var headerBytes = GetHeaderBytes(13 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Disconnect,The following statement contains a magic number: var headerBytes = GetHeaderBytes(14 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,MessageType_Disconnect,The following statement contains a magic number: var headerBytes = GetHeaderBytes(14 << 4' 0);
Magic Number,NmqttTests.MessageComponents.Header,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\Deserialization.cs,Duplicate_True,The following statement contains a magic number: var headerBytes = GetHeaderBytes(8' 0);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,SingleBytePayloadSize,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(127);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,SingleBytePayloadSize,The following statement contains a magic number: Assert.Equal<byte>(127' returnedBytes[0]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,DoubleBytePayloadSizeLowerBoundary,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(128);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,DoubleBytePayloadSizeLowerBoundary,The following statement contains a magic number: Assert.Equal<int>(returnedBytes.Count' 2);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,DoubleBytePayloadSizeUpperBoundary,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(16383);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,DoubleBytePayloadSizeUpperBoundary,The following statement contains a magic number: Assert.Equal<int>(returnedBytes.Count' 2);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,TripleBytePayloadSizeLowerBoundary,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(16384);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,TripleBytePayloadSizeLowerBoundary,The following statement contains a magic number: Assert.Equal<int>(returnedBytes.Count' 3);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,TripleBytePayloadSizeLowerBoundary,The following statement contains a magic number: Assert.Equal<byte>(0x01' returnedBytes[2]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,TripleBytePayloadSizeUpperBoundary,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(2097151);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,TripleBytePayloadSizeUpperBoundary,The following statement contains a magic number: Assert.Equal<int>(returnedBytes.Count' 3);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,TripleBytePayloadSizeUpperBoundary,The following statement contains a magic number: Assert.Equal<byte>(0x7F' returnedBytes[2]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeLowerBoundary,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(2097152);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeLowerBoundary,The following statement contains a magic number: Assert.Equal<int>(returnedBytes.Count' 4);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeLowerBoundary,The following statement contains a magic number: Assert.Equal<byte>(0x80' returnedBytes[2]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeLowerBoundary,The following statement contains a magic number: Assert.Equal<byte>(0x01' returnedBytes[3]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeUpperBoundary,The following statement contains a magic number: List<byte> returnedBytes = CallGetRemainingBytesWithValue(268435455);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeUpperBoundary,The following statement contains a magic number: Assert.Equal<int>(returnedBytes.Count' 4);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeUpperBoundary,The following statement contains a magic number: Assert.Equal<byte>(0xFF' returnedBytes[2]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,QuadrupleBytePayloadSizeUpperBoundary,The following statement contains a magic number: Assert.Equal<byte>(0x7F' returnedBytes[3]);
Magic Number,NmqttTests.MessageComponents.Header,HeaderFunctions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\Header\HeaderFunctions.cs,PayloadSizeOutOfUpperRange,The following statement contains a magic number: Assert.Throws<InvalidPayloadSizeException>(() => header.MessageSize = 268435456);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,ConnectionAccepted,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,ConnectionAccepted,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,ConnectionAccepted,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,ConnectionAccepted,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,UnacceptableProtocolVersion,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,UnacceptableProtocolVersion,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,UnacceptableProtocolVersion,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,UnacceptableProtocolVersion,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,IdentifierRejected,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,IdentifierRejected,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,IdentifierRejected,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,IdentifierRejected,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,BrokerUnavailable,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,BrokerUnavailable,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,BrokerUnavailable,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Serialization.cs,BrokerUnavailable,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.ConnectAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Deserialization.cs,ConnectionAccepted,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.ConnectAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Deserialization.cs,UnacceptableProtocolVersion,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.ConnectAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Deserialization.cs,IdentifierRejected,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.ConnectAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\ConnectAck\Deserialization.cs,BrokerUnavailable,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.Connect,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Deserialization.cs,BasicDeserialization,The following statement contains a magic number: Assert.Equal<int>(27' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.Connect,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Deserialization.cs,BasicDeserialization,The following statement contains a magic number: Assert.Equal<int>(30' message.VariableHeader.KeepAlive);
Magic Number,NmqttTests.Messages.Connect,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Deserialization.cs,BasicDeserialization,The following statement contains a magic number: Assert.Equal<int>(3' message.VariableHeader.ProtocolVersion);
Magic Number,NmqttTests.Messages.Connect,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Serialization.cs,BasicSerialization,The following statement contains a magic number: MqttConnectMessage msg = new MqttConnectMessage()                  .WithClientIdentifier("mark")                  .KeepAliveFor(30)                  .StartClean();
Magic Number,NmqttTests.Messages.Connect,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(18' mb[1]);
Magic Number,NmqttTests.Messages.Connect,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Serialization.cs,WithWillSet,The following statement contains a magic number: MqttConnectMessage msg = new MqttConnectMessage()                  .WithProtocolName("MQIsdp")                  .WithProtocolVersion(3)                  .WithClientIdentifier("mark")                  .KeepAliveFor(30)                  .StartClean()                  .Will()                  .WithWillQos(MqttQos.AtLeastOnce)                  .WithWillRetain()                  .WithWillTopic("willTopic")                  .WithWillMessage("willMessage");
Magic Number,NmqttTests.Messages.Connect,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Serialization.cs,WithWillSet,The following statement contains a magic number: MqttConnectMessage msg = new MqttConnectMessage()                  .WithProtocolName("MQIsdp")                  .WithProtocolVersion(3)                  .WithClientIdentifier("mark")                  .KeepAliveFor(30)                  .StartClean()                  .Will()                  .WithWillQos(MqttQos.AtLeastOnce)                  .WithWillRetain()                  .WithWillTopic("willTopic")                  .WithWillMessage("willMessage");
Magic Number,NmqttTests.Messages.Connect,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Serialization.cs,WithWillSet,The following statement contains a magic number: Assert.Equal<byte>(42' mb[1]);
Magic Number,NmqttTests.Messages.PingRequest,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PingRequest\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(192' bytes[0]);
Magic Number,NmqttTests.Messages.PublishAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Serialization.cs,ValidPayload,The following statement contains a magic number: MqttPublishAckMessage msg = new MqttPublishAckMessage().WithMessageIdentifier(4);
Magic Number,NmqttTests.Messages.PublishAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Serialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Serialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Serialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Serialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.PublishAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishAck\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(4' message.VariableHeader.MessageIdentifier);
Magic Number,NmqttTests.Messages.PublishComplete,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Serialization.cs,BasicSerialization,The following statement contains a magic number: MqttPublishCompleteMessage msg = new MqttPublishCompleteMessage().WithMessageIdentifier(4);
Magic Number,NmqttTests.Messages.PublishComplete,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishComplete,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishComplete,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishComplete,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishComplete,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.PublishComplete,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishComplete\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(4' message.VariableHeader.MessageIdentifier);
Magic Number,NmqttTests.Messages.PublishReceived,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.PublishReceived,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(4' message.VariableHeader.MessageIdentifier);
Magic Number,NmqttTests.Messages.PublishReceived,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Serialization.cs,BasicSerialization,The following statement contains a magic number: MqttPublishReceivedMessage msg = new MqttPublishReceivedMessage().WithMessageIdentifier(4);
Magic Number,NmqttTests.Messages.PublishReceived,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishReceived,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishReceived,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishReceived,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishReceived\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishRelease,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.PublishRelease,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(4' message.VariableHeader.MessageIdentifier);
Magic Number,NmqttTests.Messages.PublishRelease,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Serialization.cs,BasicSerialization,The following statement contains a magic number: MqttPublishReleaseMessage msg = new MqttPublishReleaseMessage().WithMessageIdentifier(4);
Magic Number,NmqttTests.Messages.PublishRelease,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishRelease,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.PublishRelease,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.PublishRelease,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\PublishRelease\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Publish,Fluent,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Fluent.cs,ClearPublishData,The following statement contains a magic number: Assert.Equal<int>(2' msg.Payload.Message.Count);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: MqttMessage msg = new MqttPublishMessage()                  .WithQos(MqttQos.ExactlyOnce)                  .WithMessageIdentifier(10)                  .ToTopic("fred")                  .PublishData(new[]                       {                                           (byte)'h''                          (byte)'e''                          (byte)'l''                          (byte)'l''                          (byte)'o''                          (byte)'!''                      }                  );
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel2ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,QosLevel0WithNoMessageIdentifer,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,WithNonDefaultQos,The following statement contains a magic number: MqttPublishMessage msg = new MqttPublishMessage()                  .ToTopic("mark")                  .WithQos(MqttQos.AtLeastOnce)                  .WithMessageIdentifier(4)                  .PublishData(new[] { (byte)9 });
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,WithNonDefaultQos,The following statement contains a magic number: MqttPublishMessage msg = new MqttPublishMessage()                  .ToTopic("mark")                  .WithQos(MqttQos.AtLeastOnce)                  .WithMessageIdentifier(4)                  .PublishData(new[] { (byte)9 });
Magic Number,NmqttTests.Messages.Publish,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Serialization.cs,WithNonDefaultQos,The following statement contains a magic number: Assert.Equal<int>(11' msgBytes.Length);
Magic Number,NmqttTests.Messages.Publish,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(12' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.Publish,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Publish\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(6' message.Payload.Message.Count);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: MqttMessage msg = new MqttSubscribeAckMessage()                  .WithMessageIdentifier(2)                  .AddQosGrant(MqttQos.AtMostOnce);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtMostOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: MqttMessage msg = new MqttSubscribeAckMessage()                  .WithMessageIdentifier(2)                  .AddQosGrant(MqttQos.AtLeastOnce);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: MqttMessage msg = new MqttSubscribeAckMessage()                  .WithMessageIdentifier(2)                  .AddQosGrant(MqttQos.ExactlyOnce);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,SingleQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: MqttMessage msg = new MqttSubscribeAckMessage()                  .WithMessageIdentifier(2)                  .AddQosGrant(MqttQos.AtMostOnce)                  .AddQosGrant(MqttQos.AtLeastOnce)                  .AddQosGrant(MqttQos.ExactlyOnce);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,ClearGrantsClearsGrants,The following statement contains a magic number: MqttSubscribeAckMessage msg = new MqttSubscribeAckMessage()                  .WithMessageIdentifier(2)                  .AddQosGrant(MqttQos.AtMostOnce)                  .AddQosGrant(MqttQos.AtLeastOnce)                  .AddQosGrant(MqttQos.ExactlyOnce);
Magic Number,NmqttTests.Messages.SubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Serialization.cs,ClearGrantsClearsGrants,The following statement contains a magic number: Assert.Equal<int>(3' msg.Payload.QosGrants.Count);
Magic Number,NmqttTests.Messages.SubscribeAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Deserialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<int>(3' message.Payload.QosGrants.Count);
Magic Number,NmqttTests.Messages.SubscribeAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\SubscribeAck\Deserialization.cs,MultipleQos,The following statement contains a magic number: Assert.Equal<MqttQos>(MqttQos.ExactlyOnce' message.Payload.QosGrants[2]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: MqttMessage msg = new MqttSubscribeMessage()                  .ToTopic("fred")                  .AtQos(MqttQos.AtLeastOnce)                  .WithMessageIdentifier(2)                  .ExpectAcknowledgement()                  .IsDuplicate();
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: MqttMessage msg = new MqttSubscribeMessage()                  .ToTopic("fred")                  .AtQos(MqttQos.AtLeastOnce)                  .ToTopic("mark")                  .AtQos(MqttQos.ExactlyOnce)                  .WithMessageIdentifier(3)                  .ExpectAcknowledgement();
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[14]' actual[14]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[14]' actual[14]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[15]' actual[15]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[15]' actual[15]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[16]' actual[16]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[16]' actual[16]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[17]' actual[17]);
Magic Number,NmqttTests.Messages.Subscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[17]' actual[17]);
Magic Number,NmqttTests.Messages.Subscribe,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Deserialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<int>(2' message.Payload.Subscriptions.Count);
Magic Number,NmqttTests.Messages.Subscribe,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Deserialization.cs,MultiTopic_AtLeastOnceQos,The following statement contains a magic number: Assert.Equal<int>(2' message.Payload.Subscriptions.Count);
Magic Number,NmqttTests.Messages.Subscribe,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Subscribe\Deserialization.cs,MultiTopic_ExactlyOnce,The following statement contains a magic number: Assert.Equal<int>(2' message.Payload.Subscriptions.Count);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Serialization.cs,BasicSerialization,The following statement contains a magic number: MqttUnsubscribeAckMessage msg = new MqttUnsubscribeAckMessage().WithMessageIdentifier(4);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Serialization.cs,BasicSerialization,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(2' message.Header.MessageSize);
Magic Number,NmqttTests.Messages.UnsubscribeAck,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\UnsubscribeAck\Deserialization.cs,ValidPayload,The following statement contains a magic number: Assert.Equal<int>(4' message.VariableHeader.MessageIdentifier);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: MqttMessage msg = new MqttUnsubscribeMessage()                  .FromTopic("fred")                  .WithMessageIdentifier(3)                  .ExpectAcknowledgement()                  .IsDuplicate();
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,SingleTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: MqttMessage msg = new MqttUnsubscribeMessage()                  .FromTopic("fred")                  .FromTopic("mark")                  .WithMessageIdentifier(3)                  .ExpectAcknowledgement();
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[2]' actual[2]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[3]' actual[3]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[4]' actual[4]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[5]' actual[5]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[6]' actual[6]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[7]' actual[7]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[8]' actual[8]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[9]' actual[9]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[10]' actual[10]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[11]' actual[11]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[12]' actual[12]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[13]' actual[13]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[14]' actual[14]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[14]' actual[14]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[15]' actual[15]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<byte>(expected[15]' actual[15]);
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,ClearSubscriptions,The following statement contains a magic number: MqttUnsubscribeMessage msg = new MqttUnsubscribeMessage()                  .FromTopic("fred")                  .FromTopic("mark")                  .WithMessageIdentifier(3)                  .ExpectAcknowledgement();
Magic Number,NmqttTests.Messages.Unsubscribe,Serialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Serialization.cs,ClearSubscriptions,The following statement contains a magic number: Assert.Equal<int>(2' msg.Payload.Subscriptions.Count);
Magic Number,NmqttTests.Messages.Unsubscribe,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Unsubscribe\Deserialization.cs,MultiTopic,The following statement contains a magic number: Assert.Equal<int>(2' message.Payload.Subscriptions.Count);
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedMessageAtQos0DoesNotStoreMessage,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.AtMostOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedMessageAtQos1DoesNotStoreMessage,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.AtLeastOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedMessageAtQos2StoresMessage,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.ExactlyOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedMessageAtQos0DoesNotRespondToRemoteParty,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.AtMostOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedMessageAtQos1SendsPublishAcknowledgement,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.AtLeastOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedMessageAtQos2SendsPublishReceived,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.ExactlyOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReleasedMessageAtQos2SendsPublishComplete,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.ExactlyOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReceivedPublishMessageAtQos2StoresMessage,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.ExactlyOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.PublishingMananger,PublishingManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\PublishingManager\PublishingManagerTests.cs,ReleasedMessageAtQos2RemovesMessageFromStorage,The following statement contains a magic number: pubCallback(new MqttPublishMessage()                              .WithMessageIdentifier(msgId)                              .ToTopic("A/rawTopic")                              .WithQos(MqttQos.ExactlyOnce)                              .PublishData(new byte[] {0' 1' 2}));
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_WillQos_AtLeastOnce,The following statement contains a magic number: Assert.Equal<MqttQos>(MqttQos.AtLeastOnce' GetConnectFlags(8).WillQos);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_WillQos_ExactlyOnce,The following statement contains a magic number: Assert.Equal<MqttQos>(MqttQos.ExactlyOnce' GetConnectFlags(16).WillQos);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_WillQos_Reserved1,The following statement contains a magic number: Assert.Equal<MqttQos>(MqttQos.Reserved1' GetConnectFlags(24).WillQos);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_PasswordFlag_true,The following statement contains a magic number: Assert.True(GetConnectFlags(64).PasswordFlag);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_UsernameFlag_true,The following statement contains a magic number: Assert.True(GetConnectFlags(128).UsernameFlag);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_CleanStart_true,The following statement contains a magic number: Assert.True(GetConnectFlags(2).CleanStart);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_WillRetain_true,The following statement contains a magic number: Assert.True(GetConnectFlags(32).WillRetain);
Magic Number,NmqttTests.MessageComponents.VariableHeader,MqttConnectFlagTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\MessageComponents\VariableHeader\MqttConnectFlagTests.cs,MqttConnectFlags_WillFlag_true,The following statement contains a magic number: Assert.True(GetConnectFlags(4).WillFlag);
Magic Number,NmqttTests.SubscriptionsManager,SubscriptionsManagerTests,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\SubscriptionsManager\SubscriptionsManager.cs,SubscriptionAckForNonPendingSubscriptionThrowsException,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => theCallback(new MqttSubscribeAckMessage().WithMessageIdentifier(999).AddQosGrant(MqttQos.AtMostOnce)));
Duplicate Code,NmqttTests.Messages.Connect,Deserialization,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTTTests\Messages\Connect\Deserialization.cs,Payload_InvalidClientIdenfierLength,The method contains a code clone-set at the following line numbers (starting from the method definition): ((26' 45)' (33' 52))
