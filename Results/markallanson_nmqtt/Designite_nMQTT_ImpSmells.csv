Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Nmqtt,SubscriptionTopic,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\SubscriptionTopic.cs,Matches,Cyclomatic complexity of the method is 9
Complex Method,Nmqtt,MqttConnection,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\MqttConnection.cs,ReadHeaderComplete,Cyclomatic complexity of the method is 8
Complex Method,Nmqtt,MqttMessageFactory,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttMessageFactory.cs,GetMessage,Cyclomatic complexity of the method is 15
Complex Method,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,WriteTo,Cyclomatic complexity of the method is 8
Complex Method,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,ReadFrom,Cyclomatic complexity of the method is 8
Complex Method,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,GetWriteLength,Cyclomatic complexity of the method is 8
Long Identifier,Nmqtt,Constants,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Constants.cs,,The length of the parameter RecommendedMaxUsernamePasswordLength is 36.
Long Statement,Nmqtt,SubscriptionTopic,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\SubscriptionTopic.cs,ValidateMultiWildcard,The length of the statement  "                    "Topics using the # wildcard longer than 1 character must be immediately preceeded by a the rawTopic separator /."' "topic"); " is 125.
Long Statement,Nmqtt,MqttConnection,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\MqttConnection.cs,ReadHeaderComplete,The length of the statement  "                        Log.Debug(m => m("Message Content read {0:n0} of {1:n0} expected remaining bytes."' bytesRead' readWrapper.TotalBytes)); " is 120.
Long Statement,Nmqtt,MqttConnection,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\MqttConnection.cs,ReadHeaderComplete,The length of the statement  "                            Log.Debug(m => m("Message receipt complete ({0:n0} total bytes including all headers)' handing off to handlers."' readWrapper.MessageBytes.Count)); " is 147.
Long Statement,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The length of the statement  "            // decode the remaining bytes as the remaining/payload size' input param is the 2nd to last byte of the header byte list " is 120.
Long Statement,Nmqtt,PublishingManager,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\PublishingManager.cs,HandlePublish,The length of the statement  "                Log.Warn(m => m("Message recieved which contained topic ({0}) that was not valid according to MQTT Spec was suppressed."'  " is 121.
Long Statement,Nmqtt,PublishingManager,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\PublishingManager.cs,HandlePublishRelease,The length of the statement  "                Log.Warn(m => m("Message recieved which contained topic ({0}) that was not valid according to MQTT Spec was suppressed."' " is 121.
Long Statement,Nmqtt,PublishingManager,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\PublishingManager.cs,HandlePublishRelease,The length of the statement  "                Log.Error(m => m("An error occurred while processing a publish release message received from a broker ({0})."' msg)' ex); " is 121.
Long Statement,Nmqtt,SubscriptionsManager,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\SubscriptionsManager.cs,ConfirmUnsubscribe,The length of the statement  "                var existingSubscription = subscriptions.Values.FirstOrDefault(sub => sub.MessageIdentifier == unSubAck.VariableHeader.MessageIdentifier); " is 138.
Complex Conditional,Nmqtt,SynchronousMqttConnectionHandler,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\SynchronousMqttConnectionHandler.cs,ConnectAckProcessor,The conditional expression  "ackMsg.VariableHeader.ReturnCode == MqttConnectReturnCode.BrokerUnavailable ||                      ackMsg.VariableHeader.ReturnCode == MqttConnectReturnCode.IdentifierRejected ||                      ackMsg.VariableHeader.ReturnCode == MqttConnectReturnCode.UnacceptedProtocolVersion ||                      ackMsg.VariableHeader.ReturnCode == MqttConnectReturnCode.NotAuthorized ||                      ackMsg.VariableHeader.ReturnCode == MqttConnectReturnCode.BadUsernameOrPassword"  is complex.
Virtual Method Call from Constructor,Nmqtt,MqttPublishReceivedVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\PublishReceived\MqttPublishReceivedVariableHeader.cs,MqttPublishReceivedVariableHeader,The constructor "MqttPublishReceivedVariableHeader" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttPublishReleaseVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\PublishRelease\MqttPublishReleaseVariableHeader.cs,MqttPublishReleaseVariableHeader,The constructor "MqttPublishReleaseVariableHeader" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttPublishCompleteVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\PublishComplete\MqttPublishCompleteVariableHeader.cs,MqttPublishCompleteVariableHeader,The constructor "MqttPublishCompleteVariableHeader" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttPublishAckVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\PublishAck\MqttPubishAckVariableHeader.cs,MqttPublishAckVariableHeader,The constructor "MqttPublishAckVariableHeader" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttPublishVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\Publish\MqttPubishVariableHeader.cs,MqttPublishVariableHeader,The constructor "MqttPublishVariableHeader" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttUnsubscribeAckVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\UnSubscribeAck\MqttUnSubscribeAckVariableHeader.cs,MqttUnsubscribeAckVariableHeader,The constructor "MqttUnsubscribeAckVariableHeader" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttPayload,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttPayload.cs,MqttPayload,The constructor "MqttPayload" calls a virtual method "ReadFrom".
Virtual Method Call from Constructor,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,MqttVariableHeader,The constructor "MqttVariableHeader" calls a virtual method "ReadFrom".
Empty Catch Block,Nmqtt,MqttConnectionHandler,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\MqttConnectionHandler.cs,connection_MessageDataAvailable,The method has an empty catch block.
Magic Number,Nmqtt,SynchronousMqttConnectionHandler,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\SynchronousMqttConnectionHandler.cs,InternalConnect,The following statement contains a magic number: !connectionResetEvent.WaitOne(5000' false)
Magic Number,Nmqtt,MqttConnectionKeepAlive,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ConnectionHandling\MqttConnectionKeepAlive.cs,MqttConnectionKeepAlive,The following statement contains a magic number: this.keepAlivePeriod = keepAliveSeconds*1000;
Magic Number,Nmqtt,MqttUnsubscribePayload,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\UnSubscribe\MqttUnsubscribePayload.cs,ReadFrom,The following statement contains a magic number: payloadBytesRead += topic.Length + 2;
Magic Number,Nmqtt,MqttSubscribePayload,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\Subscribe\MqttSubscribePayload.cs,ReadFrom,The following statement contains a magic number: payloadBytesRead += topic.Length + 3;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: CleanStart = (connectFlagsByte & 2) == 2;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: CleanStart = (connectFlagsByte & 2) == 2;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: WillFlag = (connectFlagsByte & 4) == 4;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: WillFlag = (connectFlagsByte & 4) == 4;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: WillQos = (MqttQos) ((connectFlagsByte >> 3) & 3);
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: WillQos = (MqttQos) ((connectFlagsByte >> 3) & 3);
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: WillRetain = (connectFlagsByte & 32) == 32;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: WillRetain = (connectFlagsByte & 32) == 32;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: PasswordFlag = (connectFlagsByte & 64) == 64;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: PasswordFlag = (connectFlagsByte & 64) == 64;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: UsernameFlag = (connectFlagsByte & 128) == 128;
Magic Number,Nmqtt,MqttConnectFlags,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttConnectFlags.cs,ReadFrom,The following statement contains a magic number: UsernameFlag = (connectFlagsByte & 128) == 128;
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The following statement contains a magic number: headerStream.Length < 2
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The following statement contains a magic number: Qos = (MqttQos) ((firstHeaderByte & 6) >> 1);
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The following statement contains a magic number: Duplicate = (((firstHeaderByte & 8) >> 3) == 1 ? true : false);
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The following statement contains a magic number: Duplicate = (((firstHeaderByte & 8) >> 3) == 1 ? true : false);
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The following statement contains a magic number: MessageType = (MqttMessageType) ((firstHeaderByte & 240) >> 4);
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,ReadFrom,The following statement contains a magic number: MessageType = (MqttMessageType) ((firstHeaderByte & 240) >> 4);
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,GetRemainingLengthBytes,The following statement contains a magic number: int nextByteValue = payloadCalc%128;
Magic Number,Nmqtt,MqttHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttHeader.Fluent.cs,GetRemainingLengthBytes,The following statement contains a magic number: payloadCalc = payloadCalc/128;
Magic Number,Nmqtt,MqttClient,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\MqttClient.cs,Connect,The following statement contains a magic number: keepAlive = new MqttConnectionKeepAlive(connectionHandler' 30);
Magic Number,Nmqtt,MqttClient,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\MqttClient.cs,GetConnectMessage,The following statement contains a magic number: var message = new MqttConnectMessage()                  .WithClientIdentifier(clientIdentifier)                  .KeepAliveFor(30)                  .AuthenticateAs(username' password)                  .StartClean();
Magic Number,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,MqttVariableHeader,The following statement contains a magic number: this.ProtocolVersion = 3;
Magic Number,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,ReadProtocolName,The following statement contains a magic number: length += ProtocolName.Length + 2;
Magic Number,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,ReadKeepAlive,The following statement contains a magic number: length += 2;
Magic Number,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,ReadTopicName,The following statement contains a magic number: length += TopicName.Length + 2;
Magic Number,Nmqtt,MqttVariableHeader,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Messages\MqttVariableHeader.cs,ReadMessageIdentifier,The following statement contains a magic number: length += 2;
Magic Number,Nmqtt.ExtensionMethods,StreamExtensions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ExtensionMethods\StreamExtensions.cs,WriteShort,The following statement contains a magic number: stream.WriteByte((byte) (value >> 8));
Magic Number,Nmqtt.ExtensionMethods,StreamExtensions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ExtensionMethods\StreamExtensions.cs,ReadShort,The following statement contains a magic number: return (short) ((high << 8) + low);
Magic Number,Nmqtt.ExtensionMethods,StreamExtensions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ExtensionMethods\StreamExtensions.cs,ReadMqttString,The following statement contains a magic number: var lengthBytes = new byte[2];
Magic Number,Nmqtt.ExtensionMethods,StreamExtensions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ExtensionMethods\StreamExtensions.cs,ReadMqttString,The following statement contains a magic number: var bytesRead = stringStream.Read(lengthBytes' 0' 2);
Magic Number,Nmqtt.ExtensionMethods,StreamExtensions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ExtensionMethods\StreamExtensions.cs,ReadMqttString,The following statement contains a magic number: bytesRead < 2
Magic Number,Nmqtt.ExtensionMethods,StreamExtensions,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\ExtensionMethods\StreamExtensions.cs,ReadMqttString,The following statement contains a magic number: var readBuffer = new byte[1 << 10];
Magic Number,Nmqtt.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Encoding\MqttEncoding.cs,GetBytes,The following statement contains a magic number: stringBytes.Add((byte) (s.Length >> 8));
Magic Number,Nmqtt.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Encoding\MqttEncoding.cs,GetCharCount,The following statement contains a magic number: bytes.Length < 2
Magic Number,Nmqtt.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Encoding\MqttEncoding.cs,GetCharCount,The following statement contains a magic number: return (ushort) ((bytes[0] << 8) + bytes[1]);
Magic Number,Nmqtt.Encoding,MqttEncoding,D:\research\architectureSmells\repos\markallanson_nmqtt\nMQTT\Encoding\MqttEncoding.cs,GetByteCount,The following statement contains a magic number: return System.Text.Encoding.ASCII.GetByteCount(chars) + 2;
