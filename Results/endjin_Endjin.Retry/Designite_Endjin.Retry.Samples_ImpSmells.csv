Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Endjin.Retry.Samples,Program,C:\repos\endjin_Endjin.Retry\Solutions\Endjin.Retry.Samples\Program.cs,RunWithNewTask,The length of the statement  "             retries; and Backoff which is similar' but provides an exponentially increasing  delay between retries' with a random element. " is 126.
Long Statement,Endjin.Retry.Samples,Program,C:\repos\endjin_Endjin.Retry\Solutions\Endjin.Retry.Samples\Program.cs,RunWithNewTask,The length of the statement  "             Note - you don't want to use the Incremental or BackOff strategies in Azure. It is better to hammer the fabric and let it adapt " is 127.
Long Statement,Endjin.Retry.Samples,Program,C:\repos\endjin_Endjin.Retry\Solutions\Endjin.Retry.Samples\Program.cs,RunWithNewTask,The length of the statement  "             For example' you might set up a policy that does not allow you to retry if you get a 404 (not found) from an http operation' but " is 128.
Magic Number,Endjin.Retry.Samples,MyService,C:\repos\endjin_Endjin.Retry\Solutions\Endjin.Retry.Samples\MyService.cs,FirstTask,The following statement contains a magic number: if (this.errorCount < 3)              {                  this.errorCount += 1;                                throw new Exception("Not this time' matey.");              }
Magic Number,Endjin.Retry.Samples,MyService,C:\repos\endjin_Endjin.Retry\Solutions\Endjin.Retry.Samples\MyService.cs,SecondTask,The following statement contains a magic number: if (this.errorCount < 6)              {                  this.errorCount += 1;                                    throw new Exception("Nice try.");              }
Magic Number,Endjin.Retry.Samples,Program,C:\repos\endjin_Endjin.Retry\Solutions\Endjin.Retry.Samples\Program.cs,RunWithNewTask,The following statement contains a magic number: var result = await RetryTask<string>.Factory.StartNew(                  () =>                   someTasks.SecondTask(someTasks.FirstTask())'                   new Count(10));
