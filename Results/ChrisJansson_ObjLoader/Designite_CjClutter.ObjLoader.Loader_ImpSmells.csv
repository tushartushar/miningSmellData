Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ObjLoader.Loader.Loaders,ObjLoader,F:\newReposMay17\ChrisJansson_ObjLoader\source\CjClutter.ObjLoader.Loader\Loaders\ObjLoader.cs,ObjLoader,The method has 8 parameters.
Long Statement,ObjLoader.Loader.Loaders,ObjLoaderFactory,F:\newReposMay17\ChrisJansson_ObjLoader\source\CjClutter.ObjLoader.Loader\Loaders\ObjLoaderFactory.cs,Create,The length of the statement  "	return new ObjLoader (dataStore' faceParser' groupParser' normalParser' textureParser' vertexParser' materialLibraryParser' useMaterialParser); " is 143.
Magic Number,ObjLoader.Loader.TypeParsers,FaceParser,F:\newReposMay17\ChrisJansson_ObjLoader\source\CjClutter.ObjLoader.Loader\TypeParsers\FaceParser.cs,ParseFaceVertex,The following statement contains a magic number: if (fields.Length > 2) {  	var normalIndex = fields.Length > 2 && fields [2].Length == 0 ? 0 : fields [2].ParseInvariantInt ();  	faceVertex.NormalIndex = normalIndex;  }  
Magic Number,ObjLoader.Loader.TypeParsers,FaceParser,F:\newReposMay17\ChrisJansson_ObjLoader\source\CjClutter.ObjLoader.Loader\TypeParsers\FaceParser.cs,ParseFaceVertex,The following statement contains a magic number: if (fields.Length > 2) {  	var normalIndex = fields.Length > 2 && fields [2].Length == 0 ? 0 : fields [2].ParseInvariantInt ();  	faceVertex.NormalIndex = normalIndex;  }  
Magic Number,ObjLoader.Loader.TypeParsers,FaceParser,F:\newReposMay17\ChrisJansson_ObjLoader\source\CjClutter.ObjLoader.Loader\TypeParsers\FaceParser.cs,ParseFaceVertex,The following statement contains a magic number: if (fields.Length > 2) {  	var normalIndex = fields.Length > 2 && fields [2].Length == 0 ? 0 : fields [2].ParseInvariantInt ();  	faceVertex.NormalIndex = normalIndex;  }  
Magic Number,ObjLoader.Loader.TypeParsers,FaceParser,F:\newReposMay17\ChrisJansson_ObjLoader\source\CjClutter.ObjLoader.Loader\TypeParsers\FaceParser.cs,ParseFaceVertex,The following statement contains a magic number: if (fields.Length > 2) {  	var normalIndex = fields.Length > 2 && fields [2].Length == 0 ? 0 : fields [2].ParseInvariantInt ();  	faceVertex.NormalIndex = normalIndex;  }  
