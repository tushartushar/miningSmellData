Implementation smell,Namespace,Class,File,Method,Description
Long Method,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Compare,The method has 125 lines of code.
Long Method,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,The method has 103 lines of code.
Complex Method,LanguageExt.ClassInstances,EqSeq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Eq\EqSeq.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt.ClassInstances,OrdEnumerable,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Ord\OrdEnumerable.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,LanguageExt.ClassInstances,OrdSeq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Ord\OrdSeq.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,LanguageExt,ListModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,ListModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,ListModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,MapInternal<OrdK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,Union,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,MapModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,MapModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,FindRange,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,MapModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,FindRangePairs,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,Seq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\Seq.cs,Concat,Cyclomatic complexity of the method is 12
Complex Method,LanguageExt,SetModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Set\Set.Internal.cs,FindRange,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,TrieMap<EqK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,Entries,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,Remove,Cyclomatic complexity of the method is 9
Complex Method,LanguageExt,Entries,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,LanguageExt,Collision,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,VectorClock,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\VectorClock\VectorClock.cs,Compare,Cyclomatic complexity of the method is 12
Complex Method,LanguageExt,BindIter<A;B>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\EnumerableOptimal.cs,MoveNext,Cyclomatic complexity of the method is 8
Complex Method,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,Cyclomatic complexity of the method is 9
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,trifold,The method has 5 parameters. Parameters: self' state' Some' None' Fail
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,Tuple,The method has 5 parameters. Parameters: item1' item2' item3' item4' item5
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,Tuple,The method has 6 parameters. Parameters: item1' item2' item3' item4' item5' item6
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,Tuple,The method has 7 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,trifold,The method has 5 parameters. Parameters: self' state' firstFold' secondFold' thirdFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,trifoldBack,The method has 5 parameters. Parameters: self' state' firstFold' secondFold' thirdFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 5 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 5 parameters. Parameters: self' first' second' third' fourth
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quadFold,The method has 6 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quadFoldBack,The method has 6 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 6 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap' fifthMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 6 parameters. Parameters: self' first' second' third' fourth' fifth
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quintFold,The method has 7 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quintFoldBack,The method has 7 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 7 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap' fifthMap' sixthMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 7 parameters. Parameters: self' first' second' third' fourth' fifth' sixth
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,sextFold,The method has 8 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,sextFoldBack,The method has 8 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 8 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap' fifthMap' sixthMap' seventhMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 8 parameters. Parameters: self' first' second' third' fourth' fifth' sixth' seventh
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,septFold,The method has 9 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold' seventhFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,septFoldBack,The method has 9 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold' seventhFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,trifold,The method has 5 parameters. Parameters: self' state' firstFold' secondFold' thirdFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,trifoldBack,The method has 5 parameters. Parameters: self' state' firstFold' secondFold' thirdFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 5 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 5 parameters. Parameters: self' first' second' third' fourth
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quadFold,The method has 6 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quadFoldBack,The method has 6 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 6 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap' fifthMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 6 parameters. Parameters: self' first' second' third' fourth' fifth
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quintFold,The method has 7 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,quintFoldBack,The method has 7 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 7 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap' fifthMap' sixthMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 7 parameters. Parameters: self' first' second' third' fourth' fifth' sixth
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,sextFold,The method has 8 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,sextFoldBack,The method has 8 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 8 parameters. Parameters: self' firstMap' secondMap' thirdMap' fourthMap' fifthMap' sixthMap' seventhMap
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,iter,The method has 8 parameters. Parameters: self' first' second' third' fourth' fifth' sixth' seventh
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,septFold,The method has 9 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold' seventhFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,septFoldBack,The method has 9 parameters. Parameters: self' state' firstFold' secondFold' thirdFold' fourthFold' fifthFold' sixthFold' seventhFold
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,VTuple,The method has 5 parameters. Parameters: item1' item2' item3' item4' item5
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,VTuple,The method has 6 parameters. Parameters: item1' item2' item3' item4' item5' item6
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,VTuple,The method has 7 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 5 parameters. Parameters: value1' value2' value3' value4' project
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,map,The method has 6 parameters. Parameters: value1' value2' value3' value4' value5' project
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,compose,The method has 5 parameters. Parameters: a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,compose,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,lens,The method has 5 parameters. Parameters: la' lb' lc' ld' le
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,lens,The method has 6 parameters. Parameters: la' lb' lc' ld' le' lf
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,lens,The method has 7 parameters. Parameters: la' lb' lc' ld' le' lf' lg
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,lens,The method has 8 parameters. Parameters: la' lb' lc' ld' le' lf' lg' lh
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,lens,The method has 9 parameters. Parameters: la' lb' lc' ld' le' lf' lg' lh' li
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,lens,The method has 10 parameters. Parameters: la' lb' lc' ld' le' lf' lg' lh' li' lj
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,tuple,The method has 5 parameters. Parameters: item1' item2' item3' item4' item5
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,tuple,The method has 6 parameters. Parameters: item1' item2' item3' item4' item5' item6
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,tuple,The method has 7 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 8 parameters. Parameters: func' a' b' c' d' e' f' g
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 8 parameters. Parameters: func' a' b' c' d' e' f' g
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 9 parameters. Parameters: func' a' b' c' d' e' f' g' h
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 8 parameters. Parameters: func' a' b' c' d' e' f' g
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 9 parameters. Parameters: func' a' b' c' d' e' f' g' h
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 10 parameters. Parameters: func' a' b' c' d' e' f' g' h' i
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 8 parameters. Parameters: func' a' b' c' d' e' f' g
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 8 parameters. Parameters: func' a' b' c' d' e' f' g
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 9 parameters. Parameters: func' a' b' c' d' e' f' g' h
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 5 parameters. Parameters: func' a' b' c' d
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 6 parameters. Parameters: func' a' b' c' d' e
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 7 parameters. Parameters: func' a' b' c' d' e' f
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 8 parameters. Parameters: func' a' b' c' d' e' f' g
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 9 parameters. Parameters: func' a' b' c' d' e' f' g' h
Long Parameter List,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,par,The method has 10 parameters. Parameters: func' a' b' c' d' e' f' g' h' i
Long Parameter List,LanguageExt,ListItem<T>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,ListItem,The method has 5 parameters. Parameters: height' count' left' key' right
Long Parameter List,LanguageExt,ListModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,Find,The method has 5 parameters. Parameters: node' key' index' count' comparer
Long Parameter List,LanguageExt,Map,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.cs,union,The method has 5 parameters. Parameters: left' right' MapLeft' MapRight' Merge
Long Parameter List,LanguageExt,Map,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.cs,union,The method has 5 parameters. Parameters: left' right' MapLeft' MapRight' Merge
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,Find,The method has 5 parameters. Parameters: self' outerKey' innerKey' Some' None
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,Find,The method has 6 parameters. Parameters: self' aKey' bKey' cKey' Some' None
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,Find,The method has 7 parameters. Parameters: self' aKey' bKey' cKey' dKey' Some' None
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,AddOrUpdate,The method has 5 parameters. Parameters: self' outerKey' innerKey' Some' None
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,AddOrUpdate,The method has 5 parameters. Parameters: self' aKey' bKey' cKey' value
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: self' aKey' bKey' cKey' Some' None
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,AddOrUpdate,The method has 6 parameters. Parameters: self' aKey' bKey' cKey' dKey' value
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,AddOrUpdate,The method has 7 parameters. Parameters: self' aKey' bKey' cKey' dKey' Some' None
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,SetItemT,The method has 5 parameters. Parameters: map' aKey' bKey' cKey' value
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,SetItemT,The method has 6 parameters. Parameters: map' aKey' bKey' cKey' dKey' value
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,SetItemT,The method has 5 parameters. Parameters: map' aKey' bKey' cKey' Some
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,SetItemT,The method has 6 parameters. Parameters: map' aKey' bKey' cKey' dKey' Some
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,TrySetItemT,The method has 5 parameters. Parameters: map' aKey' bKey' cKey' value
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,TrySetItemT,The method has 6 parameters. Parameters: map' aKey' bKey' cKey' dKey' value
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,TrySetItemT,The method has 5 parameters. Parameters: map' aKey' bKey' cKey' Some
Long Parameter List,LanguageExt,MapExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Extensions.cs,TrySetItemT,The method has 6 parameters. Parameters: map' aKey' bKey' cKey' dKey' Some
Long Parameter List,LanguageExt,MapItem<K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,MapItem,The method has 5 parameters. Parameters: height' count' keyValue' left' right
Long Parameter List,LanguageExt,PatchParams<V;O;C>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\PatchParams.cs,PatchParams,The method has 6 parameters. Parameters: equivalent' delete' insert' substitute' cost' positionOffset
Long Parameter List,LanguageExt,SeqLazy<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\SeqLazy.cs,SeqLazy,The method has 6 parameters. Parameters: data' start' count' noCons' seq' seqStart
Long Parameter List,LanguageExt,SeqStrict<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\SeqStrict.cs,SeqStrict,The method has 5 parameters. Parameters: data' start' count' consDisallowed' addDisallowed
Long Parameter List,LanguageExt,SetItem<K>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Set\Set.Internal.cs,SetItem,The method has 5 parameters. Parameters: height' count' key' left' right
Long Parameter List,LanguageExt,TaskExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Task\Task.Extensions.cs,Join,The method has 5 parameters. Parameters: source' inner' outerKeyMap' innerKeyMap' project
Long Parameter List,LanguageExt,TaskExtensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Task\Task.Extensions.cs,GroupJoin,The method has 5 parameters. Parameters: source' inner' outerKeyMap' innerKeyMap' project
Long Parameter List,LanguageExt,TrieMap<EqK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,Merge,The method has 5 parameters. Parameters: pair1' pair2' pair1Hash' pair2Hash' section
Long Parameter List,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,joinAsync,The method has 5 parameters. Parameters: self' inner' outerKeyMap' innerKeyMap' project
Long Parameter List,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,joinAsync,The method has 5 parameters. Parameters: self' inner' outerKeyMap' innerKeyMap' project
Long Parameter List,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,joinAsync,The method has 5 parameters. Parameters: self' inner' outerKeyMap' innerKeyMap' project
Long Parameter List,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,joinAsync,The method has 5 parameters. Parameters: self' inner' outerKeyMap' innerKeyMap' project
Long Parameter List,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,join,The method has 5 parameters. Parameters: self' inner' outerKeyMap' innerKeyMap' project
Long Statement,LanguageExt.ClassInstances,ClassInstancesAssembly,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\ClassInstancesAssembly.cs,Register,The length of the statement  "                ClassInstances = typeClasses.Fold(ClassInstances' (s' x) => s.AddOrUpdate(x' Some: cis => cis.AddOrUpdate(ci)' None: () => Set<OrdTypeInfo' TypeInfo>(ci))); " is 156.
Long Statement,LanguageExt,EitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\EitherAsync\EitherAsync.cs,BiBind,The length of the statement  "            async Task<EitherData<L' B>> Do(EitherAsync<L' R> self' Func<R' EitherAsync<L' B>> right' Func<L' EitherAsync<L' B>> left) " is 122.
Long Statement,LanguageExt,EitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\EitherAsync\EitherAsync.cs,BiBindAsync,The length of the statement  "            async Task<EitherData<L' B>> Do(EitherAsync<L' R> self' Func<R' Task<EitherAsync<L' B>>> right' Func<L' EitherAsync<L' B>> left) " is 128.
Long Statement,LanguageExt,EitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\EitherAsync\EitherAsync.cs,BiBindAsync,The length of the statement  "            async Task<EitherData<L' B>> Do(EitherAsync<L' R> self' Func<R' EitherAsync<L' B>> right' Func<L' Task<EitherAsync<L' B>>> left) " is 128.
Long Statement,LanguageExt,EitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\EitherAsync\EitherAsync.cs,BiBindAsync,The length of the statement  "            async Task<EitherData<L' B>> Do(EitherAsync<L' R> self' Func<R' Task<EitherAsync<L' B>>> right' Func<L' Task<EitherAsync<L' B>>> left) " is 134.
Long Statement,LanguageExt,ListModule,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,SetItem,The length of the statement  "                return new ListItem<T>(node.Height' node.Count' node.Left' node.Key' SetItem(node.Right' key' index - node.Left.Count - 1)); " is 124.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,normalise,The length of the statement  "            (Seq<Edit<EqA' A>.Insert> inserts' Seq<Edit<EqA' A>.Delete> deletes' Seq<Edit<EqA' A>.Replace> replaces) partition3(Seq<Edit<EqA' A>> grp) " is 138.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,normalise,The length of the statement  "            Seq<Edit<EqA' A>> normalise1(Seq<Edit<EqA' A>.Insert> inserts' Seq<Edit<EqA' A>.Delete> deletes' Seq<Edit<EqA' A>.Replace> replaces) " is 132.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,normalise,The length of the statement  "                if (!inserts.IsEmpty && !deletes.IsEmpty) return normalise1(inserts.Tail' deletes.Tail' Edit<EqA' A>.Replace.New(deletes.Head.Position' deletes.Head.Element' inserts.Head.Element).Cons(replaces)); " is 196.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,inverse,The length of the statement  "              : edit is Edit<EqA' A>.Replace rpl ? (off' Edit<EqA' A>.Replace.New(off + rpl.Position' rpl.ReplaceElement' rpl.Element) as Edit<EqA' A>) " is 137.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,transformWith,The length of the statement  "            (Seq<Edit<EqA' A>>' Seq<Edit<EqA' A>>) cons2((Edit<EqA' A> cx' Edit<EqA' A> cy) head' (Seq<Edit<EqA' A>> cxs' Seq<Edit<EqA' A>> cys) tail) => " is 141.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,diff,The length of the statement  "            var (_' s) = PatchInternal.leastChanges<TInt' A' Edit<EqA' A>' int>(parms<EqA' A>()' SpanArray<A>.New(va)' SpanArray<A>.New(vb)); " is 129.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,diff,The length of the statement  "                    : list.Head is Edit<EqA' A>.Insert ia ? Edit<EqA' A>.Insert.New(ia.Position + o' ia.Element).Cons(adjust(o - 1' list.Tail)) " is 123.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,diff,The length of the statement  "                    : list.Head is Edit<EqA' A>.Delete da ? Edit<EqA' A>.Delete.New(da.Position + o' da.Element).Cons(adjust(o + 1' list.Tail)) " is 123.
Long Statement,LanguageExt,Patch,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Patch\Patch.cs,diff,The length of the statement  "                    : list.Head is Edit<EqA' A>.Replace ra ? Edit<EqA' A>.Replace.New(ra.Position + o' ra.Element' ra.ReplaceElement).Cons(adjust(o' list.Tail)) " is 140.
Long Statement,LanguageExt,RecordType<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Record\RecordType.cs,Equals,The length of the statement  "            throw new InvalidOperationException("Don't use Equals - use either RecordType<A>.Equality or RecordType<A>.EqualityTyped"); " is 123.
Long Statement,LanguageExt,RecordTypeIgnoreBase<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Record\RecordTypeIgnoreBase.cs,Equals,The length of the statement  "            throw new InvalidOperationException("Don't use Equals - use either RecordType<A>.Equality or RecordType<A>.EqualityTyped"); " is 123.
Long Statement,LanguageExt,HashSetT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' HashSet<A>> Do(HashSet<A> a) => default(MEitherAsync<L' HashSet<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,HashSetT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' HashSet<A>> Do(HashSet<A> a) => default(MEitherAsync<L' HashSet<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,HashSetT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<HashSet<A>> Do(HashSet<A> a) => default(MTryOptionAsync<HashSet<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,HashSetT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<HashSet<A>> Do(HashSet<A> a) => default(MTryOptionAsync<HashSet<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,OptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' Option<A>> Do(Option<A> a) => default(MEitherAsync<L' Option<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 120.
Long Statement,LanguageExt,OptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' Option<A>> Do(Option<A> a) => default(MEitherAsync<L' Option<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 120.
Long Statement,LanguageExt,OptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<Option<A>> Do(Option<A> a) => default(MTryOptionAsync<Option<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 120.
Long Statement,LanguageExt,OptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<Option<A>> Do(Option<A> a) => default(MTryOptionAsync<Option<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 120.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            OptionAsync<OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MOptionAsync<OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 132.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            OptionAsync<OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MOptionAsync<OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 132.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MEitherAsync<L' OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 138.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MEitherAsync<L' OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 138.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryAsync<OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MTryAsync<OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 126.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryAsync<OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MTryAsync<OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 126.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MTryOptionAsync<OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 138.
Long Statement,LanguageExt,OptionUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<OptionUnsafe<A>> Do(OptionUnsafe<A> a) => default(MTryOptionAsync<OptionUnsafe<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 138.
Long Statement,LanguageExt,EitherT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            OptionAsync<Either<L' A>> Do(Either<L' A> a) => default(MOptionAsync<Either<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,EitherT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            OptionAsync<Either<L' A>> Do(Either<L' A> a) => default(MOptionAsync<Either<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,EitherT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' Either<L' A>> Do(Either<L' A> a) => default(MEitherAsync<L' Either<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,EitherT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' Either<L' A>> Do(Either<L' A> a) => default(MEitherAsync<L' Either<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,EitherT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<Either<L' A>> Do(Either<L' A> a) => default(MTryOptionAsync<Either<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,EitherT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<Either<L' A>> Do(Either<L' A> a) => default(MTryOptionAsync<Either<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            OptionAsync<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MOptionAsync<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 141.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            OptionAsync<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MOptionAsync<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 141.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MEitherAsync<L' EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 147.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MEitherAsync<L' EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 147.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            Task<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MTask<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 127.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            Task<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MTask<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 127.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryAsync<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MTryAsync<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 135.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryAsync<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MTryAsync<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 135.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MTryOptionAsync<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 147.
Long Statement,LanguageExt,EitherUnsafeT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<EitherUnsafe<L' A>> Do(EitherUnsafe<L' A> a) => default(MTryOptionAsync<EitherUnsafe<L' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 147.
Long Statement,LanguageExt,TryOptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            OptionAsync<TryOption<A>> Do(TryOption<A> a) => default(MOptionAsync<TryOption<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,TryOptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            OptionAsync<TryOption<A>> Do(TryOption<A> a) => default(MOptionAsync<TryOption<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,TryOptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' TryOption<A>> Do(TryOption<A> a) => default(MEitherAsync<L' TryOption<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,TryOptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' TryOption<A>> Do(TryOption<A> a) => default(MEitherAsync<L' TryOption<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,TryOptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<TryOption<A>> Do(TryOption<A> a) => default(MTryOptionAsync<TryOption<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,TryOptionT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<TryOption<A>> Do(TryOption<A> a) => default(MTryOptionAsync<TryOption<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,IEnumerableT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            OptionAsync<IEnumerable<A>> Do(IEnumerable<A> a) => default(MOptionAsync<IEnumerable<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 129.
Long Statement,LanguageExt,IEnumerableT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' IEnumerable<A>> Do(IEnumerable<A> a) => default(MEitherAsync<L' IEnumerable<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 135.
Long Statement,LanguageExt,IEnumerableT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryAsync<IEnumerable<A>> Do(IEnumerable<A> a) => default(MTryAsync<IEnumerable<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 123.
Long Statement,LanguageExt,IEnumerableT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<IEnumerable<A>> Do(IEnumerable<A> a) => default(MTryOptionAsync<IEnumerable<A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 135.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            OptionAsync<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MOptionAsync<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 144.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            OptionAsync<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MOptionAsync<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 144.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            EitherAsync<L' Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MEitherAsync<L' Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 150.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            EitherAsync<L' Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MEitherAsync<L' Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 150.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            Task<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MTask<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 130.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            Task<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MTask<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 130.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryAsync<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MTryAsync<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 138.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryAsync<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MTryAsync<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 138.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,Where,The length of the statement  "            TryOptionAsync<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MTryOptionAsync<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 150.
Long Statement,LanguageExt,ValidationT_AsyncSync_Extensions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\HKT\AsyncSync\HKT.AsyncSync.Extensions.cs,FilterT,The length of the statement  "            TryOptionAsync<Validation<FAIL' A>> Do(Validation<FAIL' A> a) => default(MTryOptionAsync<Validation<FAIL' A>>).ReturnAsync(_ => a.Filter(f).AsTask()); " is 150.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,GetHashCode,The length of the statement  "            // Implement FNV 1a hashing algoritm - https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV-1a_hash " is 125.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,The length of the statement  "            var stringBuilder = GetConstructor<StringBuilder>().IfNone(() => throw new ArgumentException($"Constructor not found for StringBuilder")); " is 138.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,The length of the statement  "            var appendChar = GetPublicInstanceMethod<StringBuilder' char>("Append"' true).IfNone(() => throw new ArgumentException($"Append method found for StringBuilder")); " is 162.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,The length of the statement  "            var appendString = GetPublicInstanceMethod<StringBuilder' string>("Append"' true).IfNone(() => throw new ArgumentException($"Append method found for StringBuilder")); " is 166.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,The length of the statement  "            var toString = GetPublicInstanceMethod<Object>("ToString"' true).IfNone(() => throw new ArgumentException($"ToString method found for Object")); " is 144.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,ToString,The length of the statement  "                if (field.FieldType.GetTypeInfo().IsValueType && convertToString.GetParameters().Head().ParameterType == typeof(object)) " is 120.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,SetObjectData,The length of the statement  "            var dynamic = new DynamicMethod("SetObjectData"' null' new[] { typeof(A)' typeof(SerializationInfo) }' typeof(A)' true); " is 120.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,SetObjectData,The length of the statement  "            var getTypeFromHandle = GetPublicStaticMethod<Type' RuntimeTypeHandle>("GetTypeFromHandle").IfNone(() => throw new Exception()); " is 128.
Long Statement,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,SetObjectData,The length of the statement  "            var getValue = GetPublicInstanceMethod<SerializationInfo' string' Type>("GetValue"' true).IfNone(() => throw new Exception()); " is 126.
Complex Conditional,LanguageExt.ClassInstances,MEitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Monad\MEitherAsync.cs,Apply,The conditional expression  "resA.IsCompleted && !resA.IsFaulted && !resA.IsCanceled && resA.Result.IsLeft"  is complex.
Complex Conditional,LanguageExt.ClassInstances,MEitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Monad\MEitherAsync.cs,Apply,The conditional expression  "resB.IsCompleted && !resB.IsFaulted && !resB.IsCanceled && resB.Result.IsLeft"  is complex.
Complex Conditional,LanguageExt.ClassInstances,MEitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Monad\MEitherAsync.cs,Plus,The conditional expression  "resA.IsCompleted && !resA.IsFaulted && !resA.IsCanceled && resA.Result.IsRight"  is complex.
Complex Conditional,LanguageExt.ClassInstances,MEitherAsync,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Monad\MEitherAsync.cs,Plus,The conditional expression  "resB.IsCompleted && !resB.IsFaulted && !resB.IsCanceled && resB.Result.IsRight"  is complex.
Magic Number,LanguageExt.ClassInstances,Class<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\ClassInstances\Class.cs,TryHigherKind,The following statement contains a magic number: type.GenericTypeArguments == null || type.GenericTypeArguments.Length < 2
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,hash,The following statement contains a magic number: hash = ReferenceEquals(x' null)                          ? hash * 31                          : hash * 31 + x.GetHashCode();
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,hash,The following statement contains a magic number: hash = ReferenceEquals(x' null)                          ? hash * 31                          : hash * 31 + x.GetHashCode();
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,hash,The following statement contains a magic number: hash = ReferenceEquals(x' null)                          ? hash * 31                          : hash * 31 + x.GetHashCode();
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,hash,The following statement contains a magic number: hash = ReferenceEquals(x' null)                          ? hash * 31                          : hash * 31 + x.GetHashCode();
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,Seq,The following statement contains a magic number: var data = new A[ds.Length + 3];
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,Seq,The following statement contains a magic number: System.Array.Copy(ds' 0' data' 3' ds.Length);
Magic Number,LanguageExt,Prelude,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Concurrency\Prelude.cs,Seq,The following statement contains a magic number: data[2] = c;
Magic Number,LanguageExt,Compositions,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Compositions\Compositions.cs,wellFormed,The following statement contains a magic number: return s >= m && wellFormedNode(s' x) && go(s * 2' xs);
Magic Number,LanguageExt,ListModuleM,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,Balance,The following statement contains a magic number: return node.BalanceFactor >= 2                  ? node.Right.BalanceFactor < 0                      ? DblRotLeft(node)                      : RotLeft(node)                  : node.BalanceFactor <= -2                      ? node.Left.BalanceFactor > 0                          ? DblRotRight(node)                          : RotRight(node)                      : node;
Magic Number,LanguageExt,ListModuleM,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\List\Lst.Internal.cs,Balance,The following statement contains a magic number: return node.BalanceFactor >= 2                  ? node.Right.BalanceFactor < 0                      ? DblRotLeft(node)                      : RotLeft(node)                  : node.BalanceFactor <= -2                      ? node.Left.BalanceFactor > 0                          ? DblRotRight(node)                          : RotRight(node)                      : node;
Magic Number,LanguageExt,MapModuleM,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,Balance,The following statement contains a magic number: return node.BalanceFactor >= 2                  ? node.Right.BalanceFactor < 0                      ? DblRotLeft(node)                      : RotLeft(node)                  : node.BalanceFactor <= -2                      ? node.Left.BalanceFactor > 0                          ? DblRotRight(node)                          : RotRight(node)                      : node;
Magic Number,LanguageExt,MapModuleM,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Map\Map.Internal.cs,Balance,The following statement contains a magic number: return node.BalanceFactor >= 2                  ? node.Right.BalanceFactor < 0                      ? DblRotLeft(node)                      : RotLeft(node)                  : node.BalanceFactor <= -2                      ? node.Left.BalanceFactor > 0                          ? DblRotRight(node)                          : RotRight(node)                      : node;
Magic Number,LanguageExt,SeqConcat<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\SeqConcat.cs,Flatten,The following statement contains a magic number: var cap = 8;
Magic Number,LanguageExt,SeqStrict<A>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\SeqStrict.cs,Append,The following statement contains a magic number: var nsize = 8;
Magic Number,LanguageExt,SetModuleM,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Set\Set.Internal.cs,Balance,The following statement contains a magic number: return node.BalanceFactor >= 2                  ? node.Right.BalanceFactor < 0                      ? DblRotLeft(node)                      : RotLeft(node)                  : node.BalanceFactor <= -2                      ? node.Left.BalanceFactor > 0                          ? DblRotRight(node)                          : RotRight(node)                      : node;
Magic Number,LanguageExt,SetModuleM,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Set\Set.Internal.cs,Balance,The following statement contains a magic number: return node.BalanceFactor >= 2                  ? node.Right.BalanceFactor < 0                      ? DblRotLeft(node)                      : RotLeft(node)                  : node.BalanceFactor <= -2                      ? node.Left.BalanceFactor > 0                          ? DblRotRight(node)                          : RotRight(node)                      : node;
Magic Number,LanguageExt,TrieMap<EqK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,Merge,The following statement contains a magic number: section.Offset >= 25
Magic Number,LanguageExt,TrieMap<EqK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,BitCount,The following statement contains a magic number: var c4 = (c2 & 0x33333333) + ((c2 >> 2) & 0x33333333);
Magic Number,LanguageExt,TrieMap<EqK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,BitCount,The following statement contains a magic number: var c8 = (c4 + (c4 >> 4)) & 0x0f0f0f0f;
Magic Number,LanguageExt,TrieMap<EqK;K;V>,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\TrieMap\TrieMap.cs,BitCount,The following statement contains a magic number: return (c8 * 0x01010101) >> 24;
Magic Number,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,partitionAsync,The following statement contains a magic number: var res = await Task.WhenAll(ma.Map(item =>                  default(CHOICE).Match(                      item'                      Left: x => (1' x' default(B))'                      Right: y => (2' default(A)' y)'                      Bottom: () => (0' default(A)' default(B)))));
Magic Number,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,partitionAsync,The following statement contains a magic number: return (res.Filter(x => x.Item1 == 1).Map(x => x.Item2)' res.Filter(x => x.Item1 == 2).Map(x => x.Item3));
Magic Number,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,partitionUnsafeAsync,The following statement contains a magic number: var res = await Task.WhenAll(ma.Map(item =>                  default(CHOICE).MatchUnsafe(                      item'                      Left: x => (1' x' default(B))'                      Right: y => (2' default(A)' y)'                      Bottom: () => (0' default(A)' default(B)))));
Magic Number,LanguageExt,TypeClass,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\TypeClasses\BiFoldableAsync\BiFoldableAsync.Prelude.cs,partitionUnsafeAsync,The following statement contains a magic number: return (res.Filter(x => x.Item1 == 1).Map(x => x.Item2)' res.Filter(x => x.Item1 == 2).Map(x => x.Item3));
Magic Number,LanguageExt,CollectionFormat,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\CollectionFormat.cs,ToShortString,The following statement contains a magic number: var items = ma.Take(50).ToList();
Magic Number,LanguageExt,CollectionFormat,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\CollectionFormat.cs,ToShortString,The following statement contains a magic number: items.Count < 50
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Func2,The following statement contains a magic number: var methodInfo = typeof(TYPE)                  .GetTypeInfo()                  .GetAllMethods(true)                  .Where(x =>                  {                      if (!x.IsStatic) return false;                      var ps = x.GetParameters();                      if (ps.Length != 2) return false;                      if (ps[0].ParameterType != typeof(A)) return false;                      if (ps[1].ParameterType != typeof(B)) return false;                      return methodPred(x);                  })                  .FirstOrDefault();
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Func3,The following statement contains a magic number: var methodInfo = typeof(TYPE)                  .GetTypeInfo()                  .GetAllMethods(true)                  .Where(x =>                  {                      if (!x.IsStatic) return false;                      var ps = x.GetParameters();                      if (ps.Length != 3) return false;                      if (ps[0].ParameterType != typeof(A)) return false;                      if (ps[1].ParameterType != typeof(B)) return false;                      if (ps[2].ParameterType != typeof(C)) return false;                      return methodPred(x);                  })                  .FirstOrDefault();
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Func3,The following statement contains a magic number: var methodInfo = typeof(TYPE)                  .GetTypeInfo()                  .GetAllMethods(true)                  .Where(x =>                  {                      if (!x.IsStatic) return false;                      var ps = x.GetParameters();                      if (ps.Length != 3) return false;                      if (ps[0].ParameterType != typeof(A)) return false;                      if (ps[1].ParameterType != typeof(B)) return false;                      if (ps[2].ParameterType != typeof(C)) return false;                      return methodPred(x);                  })                  .FirstOrDefault();
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Func4,The following statement contains a magic number: var methodInfo = typeof(TYPE)                  .GetTypeInfo()                  .GetAllMethods(true)                  .Where(x =>                  {                      if (!x.IsStatic) return false;                      var ps = x.GetParameters();                      if (ps.Length != 4) return false;                      if (ps[0].ParameterType != typeof(A)) return false;                      if (ps[1].ParameterType != typeof(B)) return false;                      if (ps[2].ParameterType != typeof(C)) return false;                      if (ps[3].ParameterType != typeof(D)) return false;                      return methodPred(x);                  })                  .FirstOrDefault();
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Func4,The following statement contains a magic number: var methodInfo = typeof(TYPE)                  .GetTypeInfo()                  .GetAllMethods(true)                  .Where(x =>                  {                      if (!x.IsStatic) return false;                      var ps = x.GetParameters();                      if (ps.Length != 4) return false;                      if (ps[0].ParameterType != typeof(A)) return false;                      if (ps[1].ParameterType != typeof(B)) return false;                      if (ps[2].ParameterType != typeof(C)) return false;                      if (ps[3].ParameterType != typeof(D)) return false;                      return methodPred(x);                  })                  .FirstOrDefault();
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,Func4,The following statement contains a magic number: var methodInfo = typeof(TYPE)                  .GetTypeInfo()                  .GetAllMethods(true)                  .Where(x =>                  {                      if (!x.IsStatic) return false;                      var ps = x.GetParameters();                      if (ps.Length != 4) return false;                      if (ps[0].ParameterType != typeof(A)) return false;                      if (ps[1].ParameterType != typeof(B)) return false;                      if (ps[2].ParameterType != typeof(C)) return false;                      if (ps[3].ParameterType != typeof(D)) return false;                      return methodPred(x);                  })                  .FirstOrDefault();
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,GetHashCode,The following statement contains a magic number: var fnvOffsetBasis = Expression.Constant(-2128831035);
Magic Number,LanguageExt,IL,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\Utility\IL.cs,GetHashCode,The following statement contains a magic number: var fnvPrime = Expression.Constant(16777619);
Missing Default,LanguageExt,Seq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\Seq.cs,Concat,The following switch statement is missing a default case: switch(Value.Type)              {                  case SeqType.Empty:                      // lhs is empty' so just return rhs                      return rhs;                    case SeqType.Lazy:                        switch (rhs.Value.Type)                      {                          // lhs lazy' rhs empty                          // return lhs                          case SeqType.Empty:                              return this;                            // lhs lazy' rhs lazy                          // return SeqConcat                          case SeqType.Lazy:                              return new Seq<A>(new SeqConcat<A>(Seq(value' rhs.Value)));                            // lhs lazy' rhs strict                          // force lhs to be strict and concat the two                           case SeqType.Strict:                              return new Seq<A>(((SeqStrict<A>)value.Strict()).Append((SeqStrict<A>)rhs.Value));                            // lhs lazy' rhs concat                          // prepend rhs with lhs                          case SeqType.Concat:                              return new Seq<A>(((SeqConcat<A>)rhs.value).ConsSeq(Value));                      }                      break;                    case SeqType.Strict:                        switch (rhs.Value.Type)                      {                          // lhs strict' rhs empty                          // return lhs                          case SeqType.Empty:                              return this;                            // lhs strict' rhs lazy                          // return SeqConcat                          case SeqType.Lazy:                              return new Seq<A>(new SeqConcat<A>(Seq(value' rhs.Value)));                            // lhs strict' rhs strict                          // append the two                          case SeqType.Strict:                              return new Seq<A>(((SeqStrict<A>)value).Append((SeqStrict<A>)rhs.Value));                            // lhs strict' rhs concat                          // prepend rhs with lhs                          case SeqType.Concat:                              return new Seq<A>(((SeqConcat<A>)rhs.value).ConsSeq(Value));                      }                      break;                    case SeqType.Concat:                        switch (rhs.Value.Type)                      {                          // lhs concat' rhs empty                          // return lhs                          case SeqType.Empty:                              return this;                            // lhs concat' rhs lazy || lhs concat' rhs strict                          // add rhs to concat                          case SeqType.Lazy:                          case SeqType.Strict:                              return new Seq<A>(((SeqConcat<A>)value).AddSeq(Value));                            // lhs concat' rhs concat                          // add rhs to concat                          case SeqType.Concat:                              return new Seq<A>(((SeqConcat<A>)value).AddSeqRange(((SeqConcat<A>)Value).ms));                      }                      break;              }
Missing Default,LanguageExt,Seq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\Seq.cs,Concat,The following switch statement is missing a default case: switch (rhs.Value.Type)                      {                          // lhs lazy' rhs empty                          // return lhs                          case SeqType.Empty:                              return this;                            // lhs lazy' rhs lazy                          // return SeqConcat                          case SeqType.Lazy:                              return new Seq<A>(new SeqConcat<A>(Seq(value' rhs.Value)));                            // lhs lazy' rhs strict                          // force lhs to be strict and concat the two                           case SeqType.Strict:                              return new Seq<A>(((SeqStrict<A>)value.Strict()).Append((SeqStrict<A>)rhs.Value));                            // lhs lazy' rhs concat                          // prepend rhs with lhs                          case SeqType.Concat:                              return new Seq<A>(((SeqConcat<A>)rhs.value).ConsSeq(Value));                      }
Missing Default,LanguageExt,Seq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\Seq.cs,Concat,The following switch statement is missing a default case: switch (rhs.Value.Type)                      {                          // lhs strict' rhs empty                          // return lhs                          case SeqType.Empty:                              return this;                            // lhs strict' rhs lazy                          // return SeqConcat                          case SeqType.Lazy:                              return new Seq<A>(new SeqConcat<A>(Seq(value' rhs.Value)));                            // lhs strict' rhs strict                          // append the two                          case SeqType.Strict:                              return new Seq<A>(((SeqStrict<A>)value).Append((SeqStrict<A>)rhs.Value));                            // lhs strict' rhs concat                          // prepend rhs with lhs                          case SeqType.Concat:                              return new Seq<A>(((SeqConcat<A>)rhs.value).ConsSeq(Value));                      }
Missing Default,LanguageExt,Seq,D:\research\architectureSmells\repos\louthy_language-ext\LanguageExt.Core\DataTypes\Seq\Seq.cs,Concat,The following switch statement is missing a default case: switch (rhs.Value.Type)                      {                          // lhs concat' rhs empty                          // return lhs                          case SeqType.Empty:                              return this;                            // lhs concat' rhs lazy || lhs concat' rhs strict                          // add rhs to concat                          case SeqType.Lazy:                          case SeqType.Strict:                              return new Seq<A>(((SeqConcat<A>)value).AddSeq(Value));                            // lhs concat' rhs concat                          // add rhs to concat                          case SeqType.Concat:                              return new Seq<A>(((SeqConcat<A>)value).AddSeqRange(((SeqConcat<A>)Value).ms));                      }
