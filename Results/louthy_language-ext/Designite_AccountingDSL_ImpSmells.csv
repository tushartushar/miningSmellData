Implementation smell,Namespace,Class,File,Method,Description
Long Method,AccountingDSL.ScriptParsing,ScriptParser,D:\research\architectureSmells\repos\louthy_language-ext\Samples\AccountingDSL\AccountingDSL\ScriptParsing\ScriptParser.cs,ScriptParser,The method has 167 lines of code.
Complex Method,AccountingDSL.DSL,TransformLINQ,D:\research\architectureSmells\repos\louthy_language-ext\Samples\AccountingDSL\AccountingDSL\DSL\TransformLINQ.cs,Bind,Cyclomatic complexity of the method is 11
Complex Method,AccountingDSL.Interpreter,Interpreter,D:\research\architectureSmells\repos\louthy_language-ext\Samples\AccountingDSL\AccountingDSL\Interpreter\Interpreter.cs,Interpret,Cyclomatic complexity of the method is 10
Long Statement,AccountingDSL.DSL,TransformLINQ,D:\research\architectureSmells\repos\louthy_language-ext\Samples\AccountingDSL\AccountingDSL\DSL\TransformLINQ.cs,Bind,The length of the statement  "                case Transform<A>.Compute item: return new Transform<B>.Compute(item.Operation' item.SourceType' n => item.Next(n).Bind(f)); " is 124.
Long Statement,AccountingDSL.Interpreter,Interpreter,D:\research\architectureSmells\repos\louthy_language-ext\Samples\AccountingDSL\AccountingDSL\Interpreter\Interpreter.cs,Invoke,The length of the statement  "                if (parms.Length != op.Args.Length) return $"Function '{op.Func}' expects {parms.Length} arguments' got {op.Args.Length}"; " is 122.
