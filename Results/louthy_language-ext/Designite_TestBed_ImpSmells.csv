Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestHashMapEnum,The length of the statement  "                Console.WriteLine($"{count} items streamed (HashMap) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 175.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestDictionaryEnum,The length of the statement  "                Console.WriteLine($"{count} items streamed (Dictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 178.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestImmutableDictionaryEnum,The length of the statement  "                Console.WriteLine($"{count} items streamed (ImmutableDictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 187.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestHashMapRandomAccess,The length of the statement  "                Console.WriteLine($"{count} items accessed (HashMap) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 175.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestDictionaryRandomAccess,The length of the statement  "                Console.WriteLine($"{count} items accessed (Dictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 178.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestImmutableDictionaryRandomAccess,The length of the statement  "                Console.WriteLine($"{count} items accessed (ImmutableDictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 187.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestHashMapFromEmptyAdds,The length of the statement  "                Console.WriteLine($"{count} items added (HashMap) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 172.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestDictionaryFromEmptyAdds,The length of the statement  "                Console.WriteLine($"{count} items added (Dictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 175.
Long Statement,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestImmutableDictionaryFromEmptyAdds,The length of the statement  "                Console.WriteLine($"{count} items added (ImmutableDictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 184.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestStrict,The length of the statement  "                Console.WriteLine($"{count} items streamed (Strict) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 174.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestStrictEnum,The length of the statement  "                Console.WriteLine($"{count} items streamed (Strict enum) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 179.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestListTEnum,The length of the statement  "                Console.WriteLine($"{count} items streamed (List<T> enum) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 180.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestSeqStream,The length of the statement  "                Console.WriteLine($"{count} items streamed (lazy seq) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 176.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestEnumStream,The length of the statement  "                Console.WriteLine($"{count} items streamed (lazy enum) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item"); " is 177.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestAdd,The length of the statement  "                Console.WriteLine($"{count} items added to a List<T>: {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation"); " is 179.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestAdd,The length of the statement  "                Console.WriteLine($"{count} items added to a Seq<T>: {seqSW.ElapsedMilliseconds}ms' which is {(float)seqSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation"); " is 176.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestCons,The length of the statement  "                Console.WriteLine($"{count} items consd to a List<T>: {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation"); " is 179.
Long Statement,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestCons,The length of the statement  "                Console.WriteLine($"{count} items consd to a Seq<T>: {seqSW.ElapsedMilliseconds}ms' which is {(float)seqSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation"); " is 176.
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestHashMapEnum,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (HashMap) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestDictionaryEnum,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (Dictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestImmutableDictionaryEnum,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (ImmutableDictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestHashMapRandomAccess,The following statement contains a magic number: Console.WriteLine($"{count} items accessed (HashMap) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestDictionaryRandomAccess,The following statement contains a magic number: Console.WriteLine($"{count} items accessed (Dictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestImmutableDictionaryRandomAccess,The following statement contains a magic number: Console.WriteLine($"{count} items accessed (ImmutableDictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestHashMapFromEmptyAdds,The following statement contains a magic number: Console.WriteLine($"{count} items added (HashMap) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestDictionaryFromEmptyAdds,The following statement contains a magic number: Console.WriteLine($"{count} items added (Dictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,HashMapPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\HashMapPerf.cs,TestImmutableDictionaryFromEmptyAdds,The following statement contains a magic number: Console.WriteLine($"{count} items added (ImmutableDictionary) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,LazyTest,The following statement contains a magic number: var seq = Seq(Range(0' 5)).Strict();
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestStrict,The following statement contains a magic number: const int count = 10000000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestStrict,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (Strict) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,ConsTest,The following statement contains a magic number: var seq5 = 5.Cons();
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,ConsTest,The following statement contains a magic number: var seq4 = 4.Cons(seq5);
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,ConsTest,The following statement contains a magic number: var seq3 = 3.Cons(seq4);
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,ConsTest,The following statement contains a magic number: var seq2 = 2.Cons(seq3);
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,ConsTest,The following statement contains a magic number: var seqF = seq1.Filter(x => x % 2 == 0);
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestStrictEnum,The following statement contains a magic number: const int count = 1000000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestStrictEnum,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (Strict enum) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestListTEnum,The following statement contains a magic number: const int count = 1000000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestListTEnum,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (List<T> enum) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestSeqStream,The following statement contains a magic number: const int count = 1000000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestSeqStream,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (lazy seq) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestEnumStream,The following statement contains a magic number: const int count = 1000000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestEnumStream,The following statement contains a magic number: Console.WriteLine($"{count} items streamed (lazy enum) : {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per item");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestAdd,The following statement contains a magic number: const int count = 1000000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestAdd,The following statement contains a magic number: Console.WriteLine($"{count} items added to a List<T>: {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestAdd,The following statement contains a magic number: Console.WriteLine($"{count} items added to a Seq<T>: {seqSW.ElapsedMilliseconds}ms' which is {(float)seqSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestCons,The following statement contains a magic number: const int count = 100000;
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestCons,The following statement contains a magic number: Console.WriteLine($"{count} items consd to a List<T>: {listSW.ElapsedMilliseconds}ms' which is {(float)listSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,TestCons,The following statement contains a magic number: Console.WriteLine($"{count} items consd to a Seq<T>: {seqSW.ElapsedMilliseconds}ms' which is {(float)seqSW.ElapsedMilliseconds / (float)count * 1000000.0:F3}ns per operation");
Magic Number,TestBed,SeqPerf,D:\research\architectureSmells\repos\louthy_language-ext\Samples\TestBed\SeqPerf.cs,Broken1,The following statement contains a magic number: var x2 = new Foo("2"' 2);
