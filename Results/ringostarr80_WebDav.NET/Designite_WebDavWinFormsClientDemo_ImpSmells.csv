Implementation smell,Namespace,Class,File,Method,Description
Long Method,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The method has 130 lines of code.
Complex Method,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,Cyclomatic complexity of the method is 17
Complex Method,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,Cyclomatic complexity of the method is 56
Long Parameter List,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The method has 8 parameters.
Long Parameter List,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The method has 6 parameters.
Long Parameter List,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The method has 8 parameters.
Long Parameter List,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The method has 6 parameters.
Long Parameter List,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The method has 12 parameters.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The length of the statement  "			this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat ((long)e.UserState)' this.GetBestSizeFormat (resource.ContentLength)); " is 203.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The length of the statement  "		this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  { " is 123.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The length of the statement  "				this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat (resource.ContentLength)' this.GetBestSizeFormat (resource.ContentLength)); " is 208.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The length of the statement  "	this.labelFileDownload.Text = "Datei (" + source.Segments [source.Segments.Length - 1].ToString () + ") wird runtergeladen: "; " is 126.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The length of the statement  "		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' source.Segments [source.Segments.Length - 1]' this.GetBestSizeFormat (e.BytesReceived)' this.GetBestSizeFormat (e.TotalBytesToReceive)); " is 224.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The length of the statement  "		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' destinationResource.DisplayName' this.GetBestSizeFormat ((long)e.UserState)' this.GetBestSizeFormat (file.Length)); " is 201.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The length of the statement  "	this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  { " is 123.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The length of the statement  "			this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' destinationResource.DisplayName' this.GetBestSizeFormat (file.Length)' this.GetBestSizeFormat (file.Length)); " is 195.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The length of the statement  "	this.labelFileDownload.Text = "Datei (" + destination.Segments [destination.Segments.Length - 1].ToString () + ") wird hochgeladen: "; " is 134.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The length of the statement  "		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' HttpUtility.UrlDecode (destination.Segments [destination.Segments.Length - 1])' this.GetBestSizeFormat (e.BytesSent)' this.GetBestSizeFormat (e.TotalBytesToSend)); " is 249.
Long Statement,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,buttonCancel_Click,The length of the statement  "	DialogResult result = MessageBox.Show ("Willst du den Download wirklich abbrechen?"' "Download Abbruch"' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 155.
Long Statement,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The length of the statement  "			string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename; " is 127.
Long Statement,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The length of the statement  "		if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) { " is 123.
Empty Catch Block,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The method has an empty catch block.
Empty Catch Block,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The method has an empty catch block.
Empty Catch Block,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,RefreshFolderView,The method has an empty catch block.
Empty Catch Block,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The method has an empty catch block.
Empty Catch Block,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The method has an empty catch block.
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: try {  	this.buttonReady.Enabled = false;  	this.labelFileDownload.Text = "Datei (" + resource.DisplayName + ") wird runtergeladen: ";  	this._downloadInProgress = true;  	this._worker.WorkerReportsProgress = true;  	this._worker.WorkerSupportsCancellation = true;  	this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  		try {  			Stream sourceStream = resource.GetReadStream ();  			FileStream fileStream = new FileStream (destination' FileMode.Create);  			byte[] buffer = new byte[10000];  			long totalBytesRead = 0;  			long bytesRead = 0;  			DateTime begin = DateTime.Now;  			do {  				if (this._worker.CancellationPending) {  					e.Cancel = true;  					Console.WriteLine ("BackgroundWorker wird abgebrochen!");  					break;  				}  				bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  				if (bytesRead > 0) {  					totalBytesRead += bytesRead;  					fileStream.Write (buffer' 0' (int)bytesRead);  					DateTime now = DateTime.Now;  					TimeSpan diffTime = now.Subtract (begin);  					if (diffTime.TotalSeconds >= 1) {  						int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  						this._worker.ReportProgress (progressPercentage' totalBytesRead);  						begin = DateTime.Now;  					}  				}  			}  			while (bytesRead > 0);  			fileStream.Close ();  		}  		catch (Exception exc) {  			Console.WriteLine (exc.Message);  		}  	});  	this._worker.ProgressChanged += new ProgressChangedEventHandler ((object sender' ProgressChangedEventArgs e) =>  {  		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat ((long)e.UserState)' this.GetBestSizeFormat (resource.ContentLength));  		this.labelPercentage.Text = e.ProgressPercentage + "%";  		progressBarFileDownload.Value = e.ProgressPercentage;  	});  	this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  {  		Console.WriteLine ("BackgroundWorker fertig!");  		if (e.Cancelled) {  			try {  				File.Delete (destination);  			}  			catch (Exception) {  			}  		}  		else {  			this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat (resource.ContentLength)' this.GetBestSizeFormat (resource.ContentLength));  			this.labelPercentage.Text = "100%";  		}  		progressBarFileDownload.Value = 100;  		this._downloadInProgress = false;  		this.buttonReady.Enabled = true;  	});  	this._worker.RunWorkerAsync ();  }  catch (Exception e) {  	Console.WriteLine (e.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: try {  	this.buttonReady.Enabled = false;  	this.labelFileDownload.Text = "Datei (" + resource.DisplayName + ") wird runtergeladen: ";  	this._downloadInProgress = true;  	this._worker.WorkerReportsProgress = true;  	this._worker.WorkerSupportsCancellation = true;  	this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  		try {  			Stream sourceStream = resource.GetReadStream ();  			FileStream fileStream = new FileStream (destination' FileMode.Create);  			byte[] buffer = new byte[10000];  			long totalBytesRead = 0;  			long bytesRead = 0;  			DateTime begin = DateTime.Now;  			do {  				if (this._worker.CancellationPending) {  					e.Cancel = true;  					Console.WriteLine ("BackgroundWorker wird abgebrochen!");  					break;  				}  				bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  				if (bytesRead > 0) {  					totalBytesRead += bytesRead;  					fileStream.Write (buffer' 0' (int)bytesRead);  					DateTime now = DateTime.Now;  					TimeSpan diffTime = now.Subtract (begin);  					if (diffTime.TotalSeconds >= 1) {  						int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  						this._worker.ReportProgress (progressPercentage' totalBytesRead);  						begin = DateTime.Now;  					}  				}  			}  			while (bytesRead > 0);  			fileStream.Close ();  		}  		catch (Exception exc) {  			Console.WriteLine (exc.Message);  		}  	});  	this._worker.ProgressChanged += new ProgressChangedEventHandler ((object sender' ProgressChangedEventArgs e) =>  {  		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat ((long)e.UserState)' this.GetBestSizeFormat (resource.ContentLength));  		this.labelPercentage.Text = e.ProgressPercentage + "%";  		progressBarFileDownload.Value = e.ProgressPercentage;  	});  	this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  {  		Console.WriteLine ("BackgroundWorker fertig!");  		if (e.Cancelled) {  			try {  				File.Delete (destination);  			}  			catch (Exception) {  			}  		}  		else {  			this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat (resource.ContentLength)' this.GetBestSizeFormat (resource.ContentLength));  			this.labelPercentage.Text = "100%";  		}  		progressBarFileDownload.Value = 100;  		this._downloadInProgress = false;  		this.buttonReady.Enabled = true;  	});  	this._worker.RunWorkerAsync ();  }  catch (Exception e) {  	Console.WriteLine (e.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: try {  	this.buttonReady.Enabled = false;  	this.labelFileDownload.Text = "Datei (" + resource.DisplayName + ") wird runtergeladen: ";  	this._downloadInProgress = true;  	this._worker.WorkerReportsProgress = true;  	this._worker.WorkerSupportsCancellation = true;  	this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  		try {  			Stream sourceStream = resource.GetReadStream ();  			FileStream fileStream = new FileStream (destination' FileMode.Create);  			byte[] buffer = new byte[10000];  			long totalBytesRead = 0;  			long bytesRead = 0;  			DateTime begin = DateTime.Now;  			do {  				if (this._worker.CancellationPending) {  					e.Cancel = true;  					Console.WriteLine ("BackgroundWorker wird abgebrochen!");  					break;  				}  				bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  				if (bytesRead > 0) {  					totalBytesRead += bytesRead;  					fileStream.Write (buffer' 0' (int)bytesRead);  					DateTime now = DateTime.Now;  					TimeSpan diffTime = now.Subtract (begin);  					if (diffTime.TotalSeconds >= 1) {  						int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  						this._worker.ReportProgress (progressPercentage' totalBytesRead);  						begin = DateTime.Now;  					}  				}  			}  			while (bytesRead > 0);  			fileStream.Close ();  		}  		catch (Exception exc) {  			Console.WriteLine (exc.Message);  		}  	});  	this._worker.ProgressChanged += new ProgressChangedEventHandler ((object sender' ProgressChangedEventArgs e) =>  {  		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat ((long)e.UserState)' this.GetBestSizeFormat (resource.ContentLength));  		this.labelPercentage.Text = e.ProgressPercentage + "%";  		progressBarFileDownload.Value = e.ProgressPercentage;  	});  	this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  {  		Console.WriteLine ("BackgroundWorker fertig!");  		if (e.Cancelled) {  			try {  				File.Delete (destination);  			}  			catch (Exception) {  			}  		}  		else {  			this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat (resource.ContentLength)' this.GetBestSizeFormat (resource.ContentLength));  			this.labelPercentage.Text = "100%";  		}  		progressBarFileDownload.Value = 100;  		this._downloadInProgress = false;  		this.buttonReady.Enabled = true;  	});  	this._worker.RunWorkerAsync ();  }  catch (Exception e) {  	Console.WriteLine (e.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  	try {  		Stream sourceStream = resource.GetReadStream ();  		FileStream fileStream = new FileStream (destination' FileMode.Create);  		byte[] buffer = new byte[10000];  		long totalBytesRead = 0;  		long bytesRead = 0;  		DateTime begin = DateTime.Now;  		do {  			if (this._worker.CancellationPending) {  				e.Cancel = true;  				Console.WriteLine ("BackgroundWorker wird abgebrochen!");  				break;  			}  			bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  			if (bytesRead > 0) {  				totalBytesRead += bytesRead;  				fileStream.Write (buffer' 0' (int)bytesRead);  				DateTime now = DateTime.Now;  				TimeSpan diffTime = now.Subtract (begin);  				if (diffTime.TotalSeconds >= 1) {  					int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  					this._worker.ReportProgress (progressPercentage' totalBytesRead);  					begin = DateTime.Now;  				}  			}  		}  		while (bytesRead > 0);  		fileStream.Close ();  	}  	catch (Exception exc) {  		Console.WriteLine (exc.Message);  	}  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  	try {  		Stream sourceStream = resource.GetReadStream ();  		FileStream fileStream = new FileStream (destination' FileMode.Create);  		byte[] buffer = new byte[10000];  		long totalBytesRead = 0;  		long bytesRead = 0;  		DateTime begin = DateTime.Now;  		do {  			if (this._worker.CancellationPending) {  				e.Cancel = true;  				Console.WriteLine ("BackgroundWorker wird abgebrochen!");  				break;  			}  			bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  			if (bytesRead > 0) {  				totalBytesRead += bytesRead;  				fileStream.Write (buffer' 0' (int)bytesRead);  				DateTime now = DateTime.Now;  				TimeSpan diffTime = now.Subtract (begin);  				if (diffTime.TotalSeconds >= 1) {  					int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  					this._worker.ReportProgress (progressPercentage' totalBytesRead);  					begin = DateTime.Now;  				}  			}  		}  		while (bytesRead > 0);  		fileStream.Close ();  	}  	catch (Exception exc) {  		Console.WriteLine (exc.Message);  	}  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: try {  	Stream sourceStream = resource.GetReadStream ();  	FileStream fileStream = new FileStream (destination' FileMode.Create);  	byte[] buffer = new byte[10000];  	long totalBytesRead = 0;  	long bytesRead = 0;  	DateTime begin = DateTime.Now;  	do {  		if (this._worker.CancellationPending) {  			e.Cancel = true;  			Console.WriteLine ("BackgroundWorker wird abgebrochen!");  			break;  		}  		bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  		if (bytesRead > 0) {  			totalBytesRead += bytesRead;  			fileStream.Write (buffer' 0' (int)bytesRead);  			DateTime now = DateTime.Now;  			TimeSpan diffTime = now.Subtract (begin);  			if (diffTime.TotalSeconds >= 1) {  				int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  				this._worker.ReportProgress (progressPercentage' totalBytesRead);  				begin = DateTime.Now;  			}  		}  	}  	while (bytesRead > 0);  	fileStream.Close ();  }  catch (Exception exc) {  	Console.WriteLine (exc.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: try {  	Stream sourceStream = resource.GetReadStream ();  	FileStream fileStream = new FileStream (destination' FileMode.Create);  	byte[] buffer = new byte[10000];  	long totalBytesRead = 0;  	long bytesRead = 0;  	DateTime begin = DateTime.Now;  	do {  		if (this._worker.CancellationPending) {  			e.Cancel = true;  			Console.WriteLine ("BackgroundWorker wird abgebrochen!");  			break;  		}  		bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  		if (bytesRead > 0) {  			totalBytesRead += bytesRead;  			fileStream.Write (buffer' 0' (int)bytesRead);  			DateTime now = DateTime.Now;  			TimeSpan diffTime = now.Subtract (begin);  			if (diffTime.TotalSeconds >= 1) {  				int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  				this._worker.ReportProgress (progressPercentage' totalBytesRead);  				begin = DateTime.Now;  			}  		}  	}  	while (bytesRead > 0);  	fileStream.Close ();  }  catch (Exception exc) {  	Console.WriteLine (exc.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: do {  	if (this._worker.CancellationPending) {  		e.Cancel = true;  		Console.WriteLine ("BackgroundWorker wird abgebrochen!");  		break;  	}  	bytesRead = sourceStream.Read (buffer' 0' buffer.Length);  	if (bytesRead > 0) {  		totalBytesRead += bytesRead;  		fileStream.Write (buffer' 0' (int)bytesRead);  		DateTime now = DateTime.Now;  		TimeSpan diffTime = now.Subtract (begin);  		if (diffTime.TotalSeconds >= 1) {  			int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  			this._worker.ReportProgress (progressPercentage' totalBytesRead);  			begin = DateTime.Now;  		}  	}  }  while (bytesRead > 0);  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: if (bytesRead > 0) {  	totalBytesRead += bytesRead;  	fileStream.Write (buffer' 0' (int)bytesRead);  	DateTime now = DateTime.Now;  	TimeSpan diffTime = now.Subtract (begin);  	if (diffTime.TotalSeconds >= 1) {  		int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  		this._worker.ReportProgress (progressPercentage' totalBytesRead);  		begin = DateTime.Now;  	}  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: if (diffTime.TotalSeconds >= 1) {  	int progressPercentage = (int)(totalBytesRead * 100 / resource.ContentLength);  	this._worker.ReportProgress (progressPercentage' totalBytesRead);  	begin = DateTime.Now;  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  {  	Console.WriteLine ("BackgroundWorker fertig!");  	if (e.Cancelled) {  		try {  			File.Delete (destination);  		}  		catch (Exception) {  		}  	}  	else {  		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird runtergeladen: {1}/{2}"' resource.DisplayName' this.GetBestSizeFormat (resource.ContentLength)' this.GetBestSizeFormat (resource.ContentLength));  		this.labelPercentage.Text = "100%";  	}  	progressBarFileDownload.Value = 100;  	this._downloadInProgress = false;  	this.buttonReady.Enabled = true;  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadResource,The following statement contains a magic number: progressBarFileDownload.Value = 100;  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The following statement contains a magic number: this._webClient.DownloadFileCompleted += (object sender' AsyncCompletedEventArgs e) =>  {  	if (!e.Cancelled) {  		progressBarFileDownload.Value = 100;  	}  	else {  		try {  			File.Delete (destination);  		}  		catch (Exception) {  		}  	}  	this._downloadInProgress = false;  	this.buttonReady.Enabled = true;  };  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The following statement contains a magic number: if (!e.Cancelled) {  	progressBarFileDownload.Value = 100;  }  else {  	try {  		File.Delete (destination);  	}  	catch (Exception) {  	}  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,DownloadFile,The following statement contains a magic number: progressBarFileDownload.Value = 100;  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  	Console.WriteLine ("BackgroundWorker gestartet");  	try {  		using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  			int bufSize = 1024;  			// 1Kb  			byte[] buffer = new byte[bufSize];  			int bytesRead = 0;  			long totalBytesRead = 0;  			DateTime begin = DateTime.Now;  			using (FileStream fileStream = file.OpenRead ()) {  				do {  					if (this._worker.CancellationPending) {  						e.Cancel = true;  						Console.WriteLine ("BackgroundWorker wird abgebrochen!");  						break;  					}  					bytesRead = fileStream.Read (buffer' 0' bufSize);  					if (bytesRead > 0) {  						try {  							webStream.Write (buffer' 0' bytesRead);  							totalBytesRead += bytesRead;  							if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  								int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  								this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  								begin = DateTime.Now;  							}  						}  						catch (Exception writeException) {  							e.Cancel = true;  							Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  							MessageBox.Show (writeException.Message);  							break;  						}  					}  				}  				while (bytesRead > 0);  			}  			string result = "";  			if (webStream.CanRead) {  				byte[] buffer2 = new byte[8192];  				int bytesRead2 = 0;  				do {  					bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  					if (bytesRead2 > 0) {  						result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  					}  				}  				while (bytesRead2 > 0);  			}  			if (result != String.Empty) {  				Console.WriteLine (result);  			}  		}  	}  	catch (Exception exc) {  		e.Cancel = true;  		MessageBox.Show (exc.Message);  	}  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  	Console.WriteLine ("BackgroundWorker gestartet");  	try {  		using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  			int bufSize = 1024;  			// 1Kb  			byte[] buffer = new byte[bufSize];  			int bytesRead = 0;  			long totalBytesRead = 0;  			DateTime begin = DateTime.Now;  			using (FileStream fileStream = file.OpenRead ()) {  				do {  					if (this._worker.CancellationPending) {  						e.Cancel = true;  						Console.WriteLine ("BackgroundWorker wird abgebrochen!");  						break;  					}  					bytesRead = fileStream.Read (buffer' 0' bufSize);  					if (bytesRead > 0) {  						try {  							webStream.Write (buffer' 0' bytesRead);  							totalBytesRead += bytesRead;  							if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  								int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  								this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  								begin = DateTime.Now;  							}  						}  						catch (Exception writeException) {  							e.Cancel = true;  							Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  							MessageBox.Show (writeException.Message);  							break;  						}  					}  				}  				while (bytesRead > 0);  			}  			string result = "";  			if (webStream.CanRead) {  				byte[] buffer2 = new byte[8192];  				int bytesRead2 = 0;  				do {  					bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  					if (bytesRead2 > 0) {  						result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  					}  				}  				while (bytesRead2 > 0);  			}  			if (result != String.Empty) {  				Console.WriteLine (result);  			}  		}  	}  	catch (Exception exc) {  		e.Cancel = true;  		MessageBox.Show (exc.Message);  	}  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._worker.DoWork += new DoWorkEventHandler ((object sender' DoWorkEventArgs e) =>  {  	Console.WriteLine ("BackgroundWorker gestartet");  	try {  		using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  			int bufSize = 1024;  			// 1Kb  			byte[] buffer = new byte[bufSize];  			int bytesRead = 0;  			long totalBytesRead = 0;  			DateTime begin = DateTime.Now;  			using (FileStream fileStream = file.OpenRead ()) {  				do {  					if (this._worker.CancellationPending) {  						e.Cancel = true;  						Console.WriteLine ("BackgroundWorker wird abgebrochen!");  						break;  					}  					bytesRead = fileStream.Read (buffer' 0' bufSize);  					if (bytesRead > 0) {  						try {  							webStream.Write (buffer' 0' bytesRead);  							totalBytesRead += bytesRead;  							if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  								int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  								this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  								begin = DateTime.Now;  							}  						}  						catch (Exception writeException) {  							e.Cancel = true;  							Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  							MessageBox.Show (writeException.Message);  							break;  						}  					}  				}  				while (bytesRead > 0);  			}  			string result = "";  			if (webStream.CanRead) {  				byte[] buffer2 = new byte[8192];  				int bytesRead2 = 0;  				do {  					bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  					if (bytesRead2 > 0) {  						result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  					}  				}  				while (bytesRead2 > 0);  			}  			if (result != String.Empty) {  				Console.WriteLine (result);  			}  		}  	}  	catch (Exception exc) {  		e.Cancel = true;  		MessageBox.Show (exc.Message);  	}  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: try {  	using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  		int bufSize = 1024;  		// 1Kb  		byte[] buffer = new byte[bufSize];  		int bytesRead = 0;  		long totalBytesRead = 0;  		DateTime begin = DateTime.Now;  		using (FileStream fileStream = file.OpenRead ()) {  			do {  				if (this._worker.CancellationPending) {  					e.Cancel = true;  					Console.WriteLine ("BackgroundWorker wird abgebrochen!");  					break;  				}  				bytesRead = fileStream.Read (buffer' 0' bufSize);  				if (bytesRead > 0) {  					try {  						webStream.Write (buffer' 0' bytesRead);  						totalBytesRead += bytesRead;  						if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  							int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  							this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  							begin = DateTime.Now;  						}  					}  					catch (Exception writeException) {  						e.Cancel = true;  						Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  						MessageBox.Show (writeException.Message);  						break;  					}  				}  			}  			while (bytesRead > 0);  		}  		string result = "";  		if (webStream.CanRead) {  			byte[] buffer2 = new byte[8192];  			int bytesRead2 = 0;  			do {  				bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  				if (bytesRead2 > 0) {  					result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  				}  			}  			while (bytesRead2 > 0);  		}  		if (result != String.Empty) {  			Console.WriteLine (result);  		}  	}  }  catch (Exception exc) {  	e.Cancel = true;  	MessageBox.Show (exc.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: try {  	using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  		int bufSize = 1024;  		// 1Kb  		byte[] buffer = new byte[bufSize];  		int bytesRead = 0;  		long totalBytesRead = 0;  		DateTime begin = DateTime.Now;  		using (FileStream fileStream = file.OpenRead ()) {  			do {  				if (this._worker.CancellationPending) {  					e.Cancel = true;  					Console.WriteLine ("BackgroundWorker wird abgebrochen!");  					break;  				}  				bytesRead = fileStream.Read (buffer' 0' bufSize);  				if (bytesRead > 0) {  					try {  						webStream.Write (buffer' 0' bytesRead);  						totalBytesRead += bytesRead;  						if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  							int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  							this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  							begin = DateTime.Now;  						}  					}  					catch (Exception writeException) {  						e.Cancel = true;  						Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  						MessageBox.Show (writeException.Message);  						break;  					}  				}  			}  			while (bytesRead > 0);  		}  		string result = "";  		if (webStream.CanRead) {  			byte[] buffer2 = new byte[8192];  			int bytesRead2 = 0;  			do {  				bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  				if (bytesRead2 > 0) {  					result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  				}  			}  			while (bytesRead2 > 0);  		}  		if (result != String.Empty) {  			Console.WriteLine (result);  		}  	}  }  catch (Exception exc) {  	e.Cancel = true;  	MessageBox.Show (exc.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: try {  	using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  		int bufSize = 1024;  		// 1Kb  		byte[] buffer = new byte[bufSize];  		int bytesRead = 0;  		long totalBytesRead = 0;  		DateTime begin = DateTime.Now;  		using (FileStream fileStream = file.OpenRead ()) {  			do {  				if (this._worker.CancellationPending) {  					e.Cancel = true;  					Console.WriteLine ("BackgroundWorker wird abgebrochen!");  					break;  				}  				bytesRead = fileStream.Read (buffer' 0' bufSize);  				if (bytesRead > 0) {  					try {  						webStream.Write (buffer' 0' bytesRead);  						totalBytesRead += bytesRead;  						if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  							int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  							this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  							begin = DateTime.Now;  						}  					}  					catch (Exception writeException) {  						e.Cancel = true;  						Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  						MessageBox.Show (writeException.Message);  						break;  					}  				}  			}  			while (bytesRead > 0);  		}  		string result = "";  		if (webStream.CanRead) {  			byte[] buffer2 = new byte[8192];  			int bytesRead2 = 0;  			do {  				bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  				if (bytesRead2 > 0) {  					result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  				}  			}  			while (bytesRead2 > 0);  		}  		if (result != String.Empty) {  			Console.WriteLine (result);  		}  	}  }  catch (Exception exc) {  	e.Cancel = true;  	MessageBox.Show (exc.Message);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  	int bufSize = 1024;  	// 1Kb  	byte[] buffer = new byte[bufSize];  	int bytesRead = 0;  	long totalBytesRead = 0;  	DateTime begin = DateTime.Now;  	using (FileStream fileStream = file.OpenRead ()) {  		do {  			if (this._worker.CancellationPending) {  				e.Cancel = true;  				Console.WriteLine ("BackgroundWorker wird abgebrochen!");  				break;  			}  			bytesRead = fileStream.Read (buffer' 0' bufSize);  			if (bytesRead > 0) {  				try {  					webStream.Write (buffer' 0' bytesRead);  					totalBytesRead += bytesRead;  					if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  						int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  						this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  						begin = DateTime.Now;  					}  				}  				catch (Exception writeException) {  					e.Cancel = true;  					Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  					MessageBox.Show (writeException.Message);  					break;  				}  			}  		}  		while (bytesRead > 0);  	}  	string result = "";  	if (webStream.CanRead) {  		byte[] buffer2 = new byte[8192];  		int bytesRead2 = 0;  		do {  			bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  			if (bytesRead2 > 0) {  				result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  			}  		}  		while (bytesRead2 > 0);  	}  	if (result != String.Empty) {  		Console.WriteLine (result);  	}  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  	int bufSize = 1024;  	// 1Kb  	byte[] buffer = new byte[bufSize];  	int bytesRead = 0;  	long totalBytesRead = 0;  	DateTime begin = DateTime.Now;  	using (FileStream fileStream = file.OpenRead ()) {  		do {  			if (this._worker.CancellationPending) {  				e.Cancel = true;  				Console.WriteLine ("BackgroundWorker wird abgebrochen!");  				break;  			}  			bytesRead = fileStream.Read (buffer' 0' bufSize);  			if (bytesRead > 0) {  				try {  					webStream.Write (buffer' 0' bytesRead);  					totalBytesRead += bytesRead;  					if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  						int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  						this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  						begin = DateTime.Now;  					}  				}  				catch (Exception writeException) {  					e.Cancel = true;  					Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  					MessageBox.Show (writeException.Message);  					break;  				}  			}  		}  		while (bytesRead > 0);  	}  	string result = "";  	if (webStream.CanRead) {  		byte[] buffer2 = new byte[8192];  		int bytesRead2 = 0;  		do {  			bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  			if (bytesRead2 > 0) {  				result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  			}  		}  		while (bytesRead2 > 0);  	}  	if (result != String.Empty) {  		Console.WriteLine (result);  	}  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: using (Stream webStream = destinationResource.GetWriteStream ("application/octet-stream"' file.Length)) {  	int bufSize = 1024;  	// 1Kb  	byte[] buffer = new byte[bufSize];  	int bytesRead = 0;  	long totalBytesRead = 0;  	DateTime begin = DateTime.Now;  	using (FileStream fileStream = file.OpenRead ()) {  		do {  			if (this._worker.CancellationPending) {  				e.Cancel = true;  				Console.WriteLine ("BackgroundWorker wird abgebrochen!");  				break;  			}  			bytesRead = fileStream.Read (buffer' 0' bufSize);  			if (bytesRead > 0) {  				try {  					webStream.Write (buffer' 0' bytesRead);  					totalBytesRead += bytesRead;  					if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  						int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  						this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  						begin = DateTime.Now;  					}  				}  				catch (Exception writeException) {  					e.Cancel = true;  					Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  					MessageBox.Show (writeException.Message);  					break;  				}  			}  		}  		while (bytesRead > 0);  	}  	string result = "";  	if (webStream.CanRead) {  		byte[] buffer2 = new byte[8192];  		int bytesRead2 = 0;  		do {  			bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  			if (bytesRead2 > 0) {  				result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  			}  		}  		while (bytesRead2 > 0);  	}  	if (result != String.Empty) {  		Console.WriteLine (result);  	}  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: using (FileStream fileStream = file.OpenRead ()) {  	do {  		if (this._worker.CancellationPending) {  			e.Cancel = true;  			Console.WriteLine ("BackgroundWorker wird abgebrochen!");  			break;  		}  		bytesRead = fileStream.Read (buffer' 0' bufSize);  		if (bytesRead > 0) {  			try {  				webStream.Write (buffer' 0' bytesRead);  				totalBytesRead += bytesRead;  				if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  					int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  					this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  					begin = DateTime.Now;  				}  			}  			catch (Exception writeException) {  				e.Cancel = true;  				Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  				MessageBox.Show (writeException.Message);  				break;  			}  		}  	}  	while (bytesRead > 0);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: do {  	if (this._worker.CancellationPending) {  		e.Cancel = true;  		Console.WriteLine ("BackgroundWorker wird abgebrochen!");  		break;  	}  	bytesRead = fileStream.Read (buffer' 0' bufSize);  	if (bytesRead > 0) {  		try {  			webStream.Write (buffer' 0' bytesRead);  			totalBytesRead += bytesRead;  			if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  				int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  				this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  				begin = DateTime.Now;  			}  		}  		catch (Exception writeException) {  			e.Cancel = true;  			Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  			MessageBox.Show (writeException.Message);  			break;  		}  	}  }  while (bytesRead > 0);  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: if (bytesRead > 0) {  	try {  		webStream.Write (buffer' 0' bytesRead);  		totalBytesRead += bytesRead;  		if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  			int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  			this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  			begin = DateTime.Now;  		}  	}  	catch (Exception writeException) {  		e.Cancel = true;  		Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  		MessageBox.Show (writeException.Message);  		break;  	}  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: try {  	webStream.Write (buffer' 0' bytesRead);  	totalBytesRead += bytesRead;  	if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  		int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  		this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  		begin = DateTime.Now;  	}  }  catch (Exception writeException) {  	e.Cancel = true;  	Console.WriteLine ("Verbindung wurde unerwartet unterbrochen! (" + totalBytesRead + " bytes)");  	MessageBox.Show (writeException.Message);  	break;  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: if (DateTime.Now.Subtract (begin).TotalSeconds >= 1) {  	int ProgressPercentage = (int)(totalBytesRead * 100 / file.Length);  	this._worker.ReportProgress (ProgressPercentage' totalBytesRead);  	begin = DateTime.Now;  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: if (webStream.CanRead) {  	byte[] buffer2 = new byte[8192];  	int bytesRead2 = 0;  	do {  		bytesRead2 = webStream.Read (buffer2' 0' buffer2.Length);  		if (bytesRead2 > 0) {  			result += Encoding.UTF8.GetString (buffer2' 0' bytesRead2);  		}  	}  	while (bytesRead2 > 0);  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._worker.ProgressChanged += new ProgressChangedEventHandler ((object sender' ProgressChangedEventArgs e) =>  {  	int ProgressPercentage = Convert.ToInt32 ((long)e.UserState * 100.0 / file.Length);  	this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' destinationResource.DisplayName' this.GetBestSizeFormat ((long)e.UserState)' this.GetBestSizeFormat (file.Length));  	this.labelPercentage.Text = ProgressPercentage.ToString () + "%";  	progressBarFileDownload.Value = ProgressPercentage;  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler ((object sender' RunWorkerCompletedEventArgs e) =>  {  	Console.WriteLine ("BackgroundWorker fertig!");  	if (!e.Cancelled) {  		progressBarFileDownload.Value = 100;  		this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' destinationResource.DisplayName' this.GetBestSizeFormat (file.Length)' this.GetBestSizeFormat (file.Length));  		this.labelPercentage.Text = "100%";  	}  	this._downloadInProgress = false;  	this.buttonReady.Enabled = true;  });  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: if (!e.Cancelled) {  	progressBarFileDownload.Value = 100;  	this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' destinationResource.DisplayName' this.GetBestSizeFormat (file.Length)' this.GetBestSizeFormat (file.Length));  	this.labelPercentage.Text = "100%";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: progressBarFileDownload.Value = 100;  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._webClient.UploadProgressChanged += (object sender' UploadProgressChangedEventArgs e) =>  {  	int ProgressPercentage = Convert.ToInt32 (e.BytesSent * 100.0 / e.TotalBytesToSend);  	this.labelFileDownload.Text = String.Format ("Datei ({0}) wird hochgeladen: {1}/{2}"' HttpUtility.UrlDecode (destination.Segments [destination.Segments.Length - 1])' this.GetBestSizeFormat (e.BytesSent)' this.GetBestSizeFormat (e.TotalBytesToSend));  	this.labelPercentage.Text = ProgressPercentage.ToString () + "%";  	progressBarFileDownload.Value = ProgressPercentage;  };  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: this._webClient.UploadFileCompleted += (object sender' UploadFileCompletedEventArgs e) =>  {  	if (!e.Cancelled) {  		progressBarFileDownload.Value = 100;  	}  	this._downloadInProgress = false;  	this.buttonReady.Enabled = true;  };  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: if (!e.Cancelled) {  	progressBarFileDownload.Value = 100;  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,UploadFile,The following statement contains a magic number: progressBarFileDownload.Value = 100;  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: try {  	if (size > 1000000000000) {  		sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  	}  	else if (size > 1000000000) {  		sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  	}  	else if (size > 1000000) {  		sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  	}  	else if (size > 1000) {  		sizeFormat = (size / 1024.0).ToString ("f") + "KB";  	}  	else {  		sizeFormat = size.ToString () + "B";  	}  }  catch (Exception) {  	sizeFormat = size.ToString ();  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000000) {  	sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  }  else if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / 1099511627776.0).ToString ("f") + "TB";  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000000) {  	sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  }  else if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + "GB";  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000000) {  	sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  }  else if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / (1024.0 * 1024.0)).ToString ("f") + "MB";  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: if (size > 1000) {  	sizeFormat = (size / 1024.0).ToString ("f") + "KB";  }  else {  	sizeFormat = size.ToString () + "B";  }  
Magic Number,WebDavWinFormsClientDemo,DownloadForm,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\DownloadForm.cs,GetBestSizeFormat,The following statement contains a magic number: sizeFormat = (size / 1024.0).ToString ("f") + "KB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (folder != null) {  	IHierarchyItem[] items = folder.GetChildren ();  	foreach (IHierarchyItem item in items) {  		if (item.ItemType == ItemType.Resource) {  			PropertyName[] propNames = new PropertyName[] {  				new PropertyName ("getcontentlength"' "DAV:")  			};  			Property[] properties = item.GetPropertyValues (propNames);  			string contentLength = "";  			if (properties.Length > 0) {  				try {  					Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  					if (content_length > 1000000000000) {  						contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  					}  					else if (content_length > 1000000000) {  						contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  					}  					else if (content_length > 1000000) {  						contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  					}  					else if (content_length > 1000) {  						contentLength = (content_length / 1024.0).ToString ("f") + " KB";  					}  					else {  						contentLength = content_length.ToString () + " B";  					}  				}  				catch (Exception) {  					contentLength = properties.First ().StringValue;  				}  			}  			string[] test = new string[] {  				item.DisplayName'  				contentLength  			};  			ListViewItem lvItem = new ListViewItem (test);  			listViewFiles.Items.Add (lvItem);  		}  		else if (item.ItemType == ItemType.Folder) {  			if (item.DisplayName != String.Empty) {  				bool nodeExists = false;  				foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  					if (currentNode.Text == item.DisplayName) {  						nodeExists = true;  						break;  					}  				}  				if (!nodeExists) {  					TreeNode currentNode = new TreeNode (item.DisplayName);  					treeViewServer.SelectedNode.Nodes.Add (currentNode);  				}  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: foreach (IHierarchyItem item in items) {  	if (item.ItemType == ItemType.Resource) {  		PropertyName[] propNames = new PropertyName[] {  			new PropertyName ("getcontentlength"' "DAV:")  		};  		Property[] properties = item.GetPropertyValues (propNames);  		string contentLength = "";  		if (properties.Length > 0) {  			try {  				Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  				if (content_length > 1000000000000) {  					contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  				}  				else if (content_length > 1000000000) {  					contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  				}  				else if (content_length > 1000000) {  					contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  				}  				else if (content_length > 1000) {  					contentLength = (content_length / 1024.0).ToString ("f") + " KB";  				}  				else {  					contentLength = content_length.ToString () + " B";  				}  			}  			catch (Exception) {  				contentLength = properties.First ().StringValue;  			}  		}  		string[] test = new string[] {  			item.DisplayName'  			contentLength  		};  		ListViewItem lvItem = new ListViewItem (test);  		listViewFiles.Items.Add (lvItem);  	}  	else if (item.ItemType == ItemType.Folder) {  		if (item.DisplayName != String.Empty) {  			bool nodeExists = false;  			foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  				if (currentNode.Text == item.DisplayName) {  					nodeExists = true;  					break;  				}  			}  			if (!nodeExists) {  				TreeNode currentNode = new TreeNode (item.DisplayName);  				treeViewServer.SelectedNode.Nodes.Add (currentNode);  			}  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (item.ItemType == ItemType.Resource) {  	PropertyName[] propNames = new PropertyName[] {  		new PropertyName ("getcontentlength"' "DAV:")  	};  	Property[] properties = item.GetPropertyValues (propNames);  	string contentLength = "";  	if (properties.Length > 0) {  		try {  			Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  			if (content_length > 1000000000000) {  				contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  			}  			else if (content_length > 1000000000) {  				contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  			}  			else if (content_length > 1000000) {  				contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  			}  			else if (content_length > 1000) {  				contentLength = (content_length / 1024.0).ToString ("f") + " KB";  			}  			else {  				contentLength = content_length.ToString () + " B";  			}  		}  		catch (Exception) {  			contentLength = properties.First ().StringValue;  		}  	}  	string[] test = new string[] {  		item.DisplayName'  		contentLength  	};  	ListViewItem lvItem = new ListViewItem (test);  	listViewFiles.Items.Add (lvItem);  }  else if (item.ItemType == ItemType.Folder) {  	if (item.DisplayName != String.Empty) {  		bool nodeExists = false;  		foreach (TreeNode currentNode in treeViewServer.SelectedNode.Nodes) {  			if (currentNode.Text == item.DisplayName) {  				nodeExists = true;  				break;  			}  		}  		if (!nodeExists) {  			TreeNode currentNode = new TreeNode (item.DisplayName);  			treeViewServer.SelectedNode.Nodes.Add (currentNode);  		}  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (properties.Length > 0) {  	try {  		Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  		if (content_length > 1000000000000) {  			contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  		}  		else if (content_length > 1000000000) {  			contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  		}  		else if (content_length > 1000000) {  			contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  		}  		else if (content_length > 1000) {  			contentLength = (content_length / 1024.0).ToString ("f") + " KB";  		}  		else {  			contentLength = content_length.ToString () + " B";  		}  	}  	catch (Exception) {  		contentLength = properties.First ().StringValue;  	}  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: try {  	Int64 content_length = Convert.ToInt64 (properties.First ().StringValue);  	if (content_length > 1000000000000) {  		contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  	}  	else if (content_length > 1000000000) {  		contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  	}  	else if (content_length > 1000000) {  		contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  	}  	else if (content_length > 1000) {  		contentLength = (content_length / 1024.0).ToString ("f") + " KB";  	}  	else {  		contentLength = content_length.ToString () + " B";  	}  }  catch (Exception) {  	contentLength = properties.First ().StringValue;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000000) {  	contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  }  else if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / 1099511627776.0).ToString ("f") + " TB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000000) {  	contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  }  else if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / (1024.0 * 1024.0 * 1024.0)).ToString ("f") + " GB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000000) {  	contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  }  else if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / (1024.0 * 1024.0)).ToString ("f") + " MB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: if (content_length > 1000) {  	contentLength = (content_length / 1024.0).ToString ("f") + " KB";  }  else {  	contentLength = content_length.ToString () + " B";  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,ShowSelectedFolderContent,The following statement contains a magic number: contentLength = (content_length / 1024.0).ToString ("f") + " KB";  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: inputBox.Width = 350;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: inputBox.Height = 150;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: input.Width = 250;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: input.Top = 30;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: input.Left = 50;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: acceptButton.Width = 100;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: acceptButton.Left = 50;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: acceptButton.Top = 80;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: cancelButton.Width = 100;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: cancelButton.Left = 200;  
Magic Number,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following statement contains a magic number: cancelButton.Top = 80;  
Missing Default,WebDavWinFormsClientDemo,WebDavWinFormsClient,C:\repos\ringostarr80_WebDav.NET\WebDavWinFormsClientDemo\WebDavWinFormsClient.cs,contextMenuStripFilename_ItemClicked,The following switch statement is missing a default case: switch (e.ClickedItem.Name) {  case "toolStripMenuItemSaveUnder":  	if (folderBrowserDialog.ShowDialog () == DialogResult.OK) {  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (this._protocol + "://" + this._domain + "/" + this._path + "/");  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		string directorySeparator = (Environment.OSVersion.Platform.ToString () == "Unix") ? "/" : "\\";  		string fullSaveFilename = folderBrowserDialog.SelectedPath + directorySeparator + listViewFiles.SelectedItems [0].Text;  		DownloadForm downloadForm = new DownloadForm ();  		downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  			downloadForm.DownloadResource (resource' fullSaveFilename);  		};  		downloadForm.ShowDialog ();  	}  	break;  case "toolStripMenuItemUploadFile":  	if (openFileDialog.ShowDialog () == DialogResult.OK) {  		string filename = openFileDialog.SafeFileName;  		string nodeText = "";  		TreeNode currentNode = treeViewServer.SelectedNode;  		while (currentNode != null) {  			if (currentNode.Text != "/") {  				nodeText = "/" + currentNode.Text + nodeText;  			}  			currentNode = currentNode.Parent;  		}  		string fullDestinationPath = comboBoxProtocol.Text + "://" + textBoxServer.Text + textBoxPath.Text + nodeText + "/" + filename;  		Console.WriteLine (fullDestinationPath);  		Uri destination = new Uri (fullDestinationPath);  		IFolder folder = null;  		try {  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			folder = session.OpenFolder (Regex.Replace (destination.AbsoluteUri' "[^/]+$"' ""));  			IResource resource = folder.CreateResource (filename);  			DownloadForm downloadForm = new DownloadForm ();  			downloadForm.Shown += (object downloadFormSender' EventArgs downloadFormE) =>  {  				downloadForm.UploadFile (openFileDialog.FileName' resource);  			};  			downloadForm.FormClosed += (object closedSender' FormClosedEventArgs closedE) =>  {  				this.ShowSelectedFolderContent ();  			};  			downloadForm.ShowDialog ();  		}  		catch (Exception) {  		}  	}  	break;  case "toolStripMenuItemDeleteFile":  	string message = "Möchstest du die Datei (" + listViewFiles.SelectedItems [0].Text + ") wirklich löschen?";  	string caption = "Datei löschen";  	if (MessageBox.Show (message' caption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		IResource resource = folder.GetResource (listViewFiles.SelectedItems [0].Text);  		resource.Delete ();  		this.ShowSelectedFolderContent ();  	}  	break;  case "toolStripMenuItemCreateFolder":  	Form inputBox = new Form ();  	inputBox.Name = "inputCreateNewFolder";  	inputBox.Width = 350;  	inputBox.Height = 150;  	inputBox.Text = "Name des zu erstellenden Ordners";  	TextBox input = new TextBox ();  	input.Name = "newWebDavFolder";  	input.Width = 250;  	input.Top = 30;  	input.Left = 50;  	inputBox.Controls.Add (input);  	Button acceptButton = new Button ();  	acceptButton.Name = "buttonNewWebDavFolderAccept";  	acceptButton.Text = "OK";  	acceptButton.Width = 100;  	acceptButton.Left = 50;  	acceptButton.Top = 80;  	acceptButton.Click += (object acceptSender' EventArgs acceptE) =>  {  		inputBox.Tag = input.Text;  		inputBox.DialogResult = System.Windows.Forms.DialogResult.OK;  		inputBox.Close ();  	};  	Button cancelButton = new Button ();  	cancelButton.Name = "buttonNewWebDavFolderCancel";  	cancelButton.Text = "Abbrechen";  	cancelButton.Width = 100;  	cancelButton.Left = 200;  	cancelButton.Top = 80;  	cancelButton.Click += (object cancelSender' EventArgs cancelE) =>  {  		inputBox.DialogResult = System.Windows.Forms.DialogResult.Cancel;  		inputBox.Close ();  	};  	inputBox.Controls.Add (acceptButton);  	inputBox.Controls.Add (cancelButton);  	DialogResult inputResult = inputBox.ShowDialog ();  	if (inputResult == DialogResult.OK) {  		if (inputBox.Tag.ToString () != String.Empty) {  			string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  			WebDavSession session = new WebDavSession ();  			session.Credentials = new NetworkCredential (this._username' this._password);  			IFolder folder = session.OpenFolder (folderUri);  			folder.CreateFolder (inputBox.Tag.ToString ());  			this.RefreshFolderView ();  		}  		else {  			MessageBox.Show ("Der Ordnername kann nicht leer sein."' "Hinweis"' MessageBoxButtons.OK' MessageBoxIcon.Information);  		}  	}  	break;  case "toolStripMenuItemDeleteFolder":  	string deleteMessage = "Möchstest du das Verzeichnis (" + treeViewServer.SelectedNode.Text + ") wirklich löschen?";  	string deleteCaption = "Datei löschen";  	if (MessageBox.Show (deleteMessage' deleteCaption' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) {  		string folderUri = comboBoxProtocol.Text + "://" + textBoxServer.Text + "/" + this.GetSelectedFolder () + "/";  		Console.WriteLine (folderUri);  		WebDavSession session = new WebDavSession ();  		session.Credentials = new NetworkCredential (this._username' this._password);  		IFolder folder = session.OpenFolder (folderUri);  		folder.Delete ();  		this.RefreshFolderView ();  	}  	break;  }  
