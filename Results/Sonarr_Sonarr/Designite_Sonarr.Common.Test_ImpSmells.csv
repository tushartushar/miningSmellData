Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NzbDrone.Common.Test,IAppDirectoryInfoTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\EnvironmentProviderTest.cs,IsProduction_should_return_false_when_run_within_nunit,The length of the statement  "            RuntimeInfo.IsProduction.Should().BeFalse("Process name is " + Process.GetCurrentProcess().ProcessName + " Folder is " + Directory.GetCurrentDirectory()); " is 154.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,path_should_return_parent_for_oversized_path,The length of the statement  "            // This test will fail on Windows if long path support is not enabled: https://www.howtogeek.com/266621/how-to-make-windows-10-accept-file-paths-over-260-characters/ " is 165.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,path_should_return_parent_for_oversized_path,The length of the statement  "            // It will also fail if the app isn't configured to use long path (such as resharper): https://blogs.msdn.microsoft.com/jeremykuhne/2016/07/30/net-4-6-2-and-long-paths-on-windows-10/ " is 182.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,path_should_return_parent_for_oversized_path,The length of the statement  "            var path       = @"C:\media\2e168617-f2ae-43fb-b88c-3663af1c8eea\downloads\sabnzbd\nzbdrone\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories".AsOsAgnostic(); " is 368.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,path_should_return_parent_for_oversized_path,The length of the statement  "            var parentPath = @"C:\media\2e168617-f2ae-43fb-b88c-3663af1c8eea\downloads\sabnzbd\nzbdrone\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing\With.Alot.Of.Nested.Directories\Some.Real.Big.Thing".AsOsAgnostic(); " is 336.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,get_actual_casing_for_none_existing_folder_return_partially_fixed_result,The length of the statement  "            "C:\\WINDOWS\\SYSTEM32\\FAKEFOLDER\\invalidfile.exe".GetActualCasing().Should().Be("C:\\Windows\\System32\\FAKEFOLDER\\invalidfile.exe"); " is 137.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetUpdatePackageFolder,The length of the statement  "            GetIAppDirectoryInfo().GetUpdatePackageFolder().Should().BeEquivalentTo(@"C:\Temp\sonarr_update\Sonarr\".AsOsAgnostic()); " is 121.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetUpdateClientFolder,The length of the statement  "            GetIAppDirectoryInfo().GetUpdateClientFolder().Should().BeEquivalentTo(@"C:\Temp\sonarr_update\Sonarr\Sonarr.Update\".AsOsAgnostic()); " is 134.
Long Statement,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetUpdateClientExePath,The length of the statement  "            GetIAppDirectoryInfo().GetUpdateClientExePath().Should().BeEquivalentTo(@"C:\Temp\sonarr_update\Sonarr.Update.exe".AsOsAgnostic()); " is 131.
Long Statement,NzbDrone.Common.Test.DiskTests,DirectoryLookupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DirectoryLookupServiceFixture.cs,should_not_contain_system_volume_information,The length of the statement  "            Subject.LookupContents(root' false' false).Directories.Should().NotContain(Path.Combine(root' SYSTEM_VOLUME_INFORMATION)); " is 122.
Long Statement,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_none_should_throw_if_existing_target_when_not_overwriting,The length of the statement  "            Assert.Throws<DestinationAlreadyExistsException>(() => Subject.TransferFile(_sourcePath' _targetPath' TransferMode.Move' false)); " is 129.
Long Statement,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,VerifyCopyFolder,The length of the statement  "            var sourceFiles = Directory.GetFileSystemEntries(source' "*"' SearchOption.AllDirectories).Select(v => v.Substring(source.Length + 1)).ToArray(); " is 145.
Long Statement,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,VerifyCopyFolder,The length of the statement  "            var destFiles = Directory.GetFileSystemEntries(destination' "*"' SearchOption.AllDirectories).Select(v => v.Substring(destination.Length + 1)).ToArray(); " is 153.
Long Statement,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,VerifyMoveFolder,The length of the statement  "            var sourceFiles = Directory.GetFileSystemEntries(source' "*"' SearchOption.AllDirectories).Select(v => v.Substring(source.Length + 1)).ToArray(); " is 145.
Long Statement,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,VerifyMoveFolder,The length of the statement  "            var destFiles = Directory.GetFileSystemEntries(destination' "*"' SearchOption.AllDirectories).Select(v => v.Substring(destination.Length + 1)).ToArray(); " is 153.
Long Statement,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,GivenOldCookie,The length of the statement  "            var oldClient = new HttpClient(new IHttpRequestInterceptor[0]' Mocker.Resolve<ICacheManager>()' Mocker.Resolve<IRateLimitService>()' Mocker.Resolve<IHttpDispatcher>()' Mocker.GetMock<IUserAgentBuilder>().Object' Mocker.Resolve<Logger>()); " is 238.
Long Statement,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,should_parse_malformed_cloudflare_cookie,The length of the statement  "                string malformedCookie = @"__cfduid=d29e686a9d65800021c66faca0a29b4261436890790; expires=Mon' 13-Jul-26 16:19:50 GMT; path=/; HttpOnly"; " is 136.
Magic Number,NzbDrone.Common.Test.CacheTests,CachedDictionaryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedDictionaryFixture.cs,SetUp,The following statement contains a magic number: _cachedString = new CachedDictionary<string>(_worker.GetDict' TimeSpan.FromMilliseconds(100));
Magic Number,NzbDrone.Common.Test.CacheTests,CachedDictionaryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedDictionaryFixture.cs,should_auto_refresh_after_lifetime,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,NzbDrone.Common.Test.CacheTests,CachedDictionaryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedDictionaryFixture.cs,should_auto_refresh_after_lifetime,The following statement contains a magic number: _worker.HitCount.Should().Be(2);
Magic Number,NzbDrone.Common.Test.CacheTests,CachedDictionaryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedDictionaryFixture.cs,should_refresh_early_if_requested,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,NzbDrone.Common.Test.CacheTests,CachedDictionaryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedDictionaryFixture.cs,should_refresh_early_if_requested,The following statement contains a magic number: _worker.HitCount.Should().Be(2);
Magic Number,NzbDrone.Common.Test.CacheTests,CachedDictionaryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedDictionaryFixture.cs,should_not_refresh_early_if_not_expired,The following statement contains a magic number: _cachedString.RefreshIfExpired(TimeSpan.FromMilliseconds(50));
Magic Number,NzbDrone.Common.Test.CacheTests,CachedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedFixture.cs,should_store_null,The following statement contains a magic number: i < 10
Magic Number,NzbDrone.Common.Test.CacheTests,CachedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedFixture.cs,should_honor_ttl,The following statement contains a magic number: _cachedString.Get("key"' () =>                      {                          hitCount++;                          return null;                      }' TimeSpan.FromMilliseconds(300));
Magic Number,NzbDrone.Common.Test.CacheTests,CachedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedFixture.cs,should_honor_ttl,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.CacheTests,CachedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedFixture.cs,should_honor_ttl,The following statement contains a magic number: i < 10
Magic Number,NzbDrone.Common.Test.CacheTests,CachedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedFixture.cs,should_honor_ttl,The following statement contains a magic number: hitCount.Should().BeInRange(3' 6);
Magic Number,NzbDrone.Common.Test.CacheTests,CachedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\CacheTests\CachedFixture.cs,should_honor_ttl,The following statement contains a magic number: hitCount.Should().BeInRange(3' 6);
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,GetInt_Success,The following statement contains a magic number: const int value = 8989;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,GetPort_Success,The following statement contains a magic number: const int value = 8989;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,SetValue_int,The following statement contains a magic number: const int value = 12345;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,SaveDictionary_should_save_proper_value,The following statement contains a magic number: int port = 20555;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,SaveDictionary_should_save_proper_value,The following statement contains a magic number: dic["Port"] = 20555;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,SaveDictionary_should_only_save_specified_values,The following statement contains a magic number: int port = 20555;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,SaveDictionary_should_only_save_specified_values,The following statement contains a magic number: int origSslPort = 20551;
Magic Number,NzbDrone.Common.Test,ConfigFileProviderTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ConfigFileProviderTest.cs,SaveDictionary_should_only_save_specified_values,The following statement contains a magic number: int sslPort = 20552;
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,get_actual_casing_should_return_actual_casing_for_local_file_in_windows,The following statement contains a magic number: var path = Directory.GetDirectories("C:\\")[3];
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetAncestorFolders_should_return_all_ancestors_in_path_Windows,The following statement contains a magic number: result.Count.Should().Be(4);
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetAncestorFolders_should_return_all_ancestors_in_path_Windows,The following statement contains a magic number: result[2].Should().Be(@"TV");
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetAncestorFolders_should_return_all_ancestors_in_path_Windows,The following statement contains a magic number: result[3].Should().Be(@"Series Title");
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetAncestorFolders_should_return_all_ancestors_in_path_Linux,The following statement contains a magic number: result.Count.Should().Be(4);
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetAncestorFolders_should_return_all_ancestors_in_path_Linux,The following statement contains a magic number: result[2].Should().Be(@"TV");
Magic Number,NzbDrone.Common.Test,PathExtensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\PathExtensionFixture.cs,GetAncestorFolders_should_return_all_ancestors_in_path_Linux,The following statement contains a magic number: result[3].Should().Be(@"Series Title");
Magic Number,NzbDrone.Common.Test,ProcessProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ProcessProviderFixture.cs,GetById_should_return_null_if_process_doesnt_exist,The following statement contains a magic number: Subject.GetProcessById(1234567).Should().BeNull();
Magic Number,NzbDrone.Common.Test,ProcessProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ProcessProviderFixture.cs,Should_be_able_to_start_process,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NzbDrone.Common.Test,ProcessProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\ProcessProviderFixture.cs,kill_all_should_kill_all_process_with_name,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NzbDrone.Common.Test.DiskTests,DirectoryLookupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DirectoryLookupServiceFixture.cs,should_not_contain_recycling_bin_or_system_volume_information_for_root_of_drive,The following statement contains a magic number: result.Directories.Should().HaveCount(_folders.Count - 3);
Magic Number,NzbDrone.Common.Test.DiskTests,DiskProviderFixtureBase<TSubject>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskProviderFixtureBase.cs,folder_should_return_correct_value_for_last_write,The following statement contains a magic number: Subject.FolderSetLastWriteTime(TempFolder' DateTime.UtcNow.AddMinutes(-5));
Magic Number,NzbDrone.Common.Test.DiskTests,DiskProviderFixtureBase<TSubject>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskProviderFixtureBase.cs,should_be_set_last_file_write,The following statement contains a magic number: var lastWriteTime = DateTime.SpecifyKind(new DateTime(2012' 1' 2)' DateTimeKind.Utc);
Magic Number,NzbDrone.Common.Test.DiskTests,DiskProviderFixtureBase<TSubject>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskProviderFixtureBase.cs,should_be_set_last_file_write,The following statement contains a magic number: var lastWriteTime = DateTime.SpecifyKind(new DateTime(2012' 1' 2)' DateTimeKind.Utc);
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_verifyonly_should_rollback_copy_on_partial_and_throw,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _targetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_targetPath' true' 900);                  });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,should_log_error_if_rollback_copy_fails,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _targetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_targetPath' true' 900);                  });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_verifyonly_should_not_rollback_move_on_partial_and_throw,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.MoveFile(_sourcePath' _targetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_sourcePath' false);                      WithExistingFile(_targetPath' true' 900);                  });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_verifyonly_should_rollback_move_on_partial_if_source_remains,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.MoveFile(_sourcePath' _targetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_targetPath' true' 900);                  });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,should_log_error_if_rollback_partialmove_fails,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.MoveFile(_sourcePath' _targetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_targetPath' true' 900);                  });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_retry_if_partial_copy,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _tempTargetPath' false))                  .Callback(() =>                      {                          WithExistingFile(_tempTargetPath' true' 900);                          if (retry++ == 1) WithExistingFile(_tempTargetPath' true' 1000);                      });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_retry_if_partial_copy,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _tempTargetPath' false))                  .Callback(() =>                      {                          WithExistingFile(_tempTargetPath' true' 900);                          if (retry++ == 1) WithExistingFile(_tempTargetPath' true' 1000);                      });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_retry_twice_if_partial_copy,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _tempTargetPath' false))                  .Callback(() =>                      {                          WithExistingFile(_tempTargetPath' true' 900);                          if (retry++ == 3) throw new Exception("Test Failed' retried too many times.");                      });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_retry_twice_if_partial_copy,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _tempTargetPath' false))                  .Callback(() =>                      {                          WithExistingFile(_tempTargetPath' true' 900);                          if (retry++ == 3) throw new Exception("Test Failed' retried too many times.");                      });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_retry_twice_if_partial_copy,The following statement contains a magic number: ExceptionVerification.ExpectedWarns(2);
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_remove_partial_if_copy_fails,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.CopyFile(_sourcePath' _tempTargetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_tempTargetPath' true' 900);                  })                  .Throws(new IOException("Blackbox IO error"));
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,mode_transactional_should_remove_partial_if_move_fails,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(v => v.MoveFile(_backupPath' _tempTargetPath' false))                  .Callback(() =>                  {                      WithExistingFile(_backupPath' false);                      WithExistingFile(_tempTargetPath' true' 900);                  });
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,MirrorFolder_should_add_new_files,The following statement contains a magic number: count.Should().Equals(3);
Magic Number,NzbDrone.Common.Test.DiskTests,DiskTransferServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\DiskTests\DiskTransferServiceFixture.cs,MirrorFolder_should_ignore_nfs_temp_file,The following statement contains a magic number: count.Should().Equals(3);
Magic Number,NzbDrone.Common.Test.EnvironmentInfo,BuildInfoFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\EnvironmentInfo\BuildInfoFixture.cs,should_return_version,The following statement contains a magic number: BuildInfo.Version.Major.Should().BeOneOf(3' 10);
Magic Number,NzbDrone.Common.Test.EnvironmentInfo,BuildInfoFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\EnvironmentInfo\BuildInfoFixture.cs,should_return_version,The following statement contains a magic number: BuildInfo.Version.Major.Should().BeOneOf(3' 10);
Magic Number,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,FixtureSetUp,The following statement contains a magic number: _httpBinSleep = _httpBinHosts.Count() < 2 ? 100 : 10;
Magic Number,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,FixtureSetUp,The following statement contains a magic number: _httpBinSleep = _httpBinHosts.Count() < 2 ? 100 : 10;
Magic Number,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,FixtureSetUp,The following statement contains a magic number: _httpBinSleep = _httpBinHosts.Count() < 2 ? 100 : 10;
Magic Number,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,IsTestSiteAvailable,The following statement contains a magic number: res == null || res.StatusCode != (HttpStatusCode)429
Magic Number,NzbDrone.Common.Test.Http,HttpClientFixture<TDispatcher>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpClientFixture.cs,should_download_file,The following statement contains a magic number: fileInfo.Length.Should().Be(307054);
Magic Number,NzbDrone.Common.Test.Http,HttpHeaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\Http\HttpHeaderFixture.cs,should_parse_cookie_with_trailing_semi_colon,The following statement contains a magic number: cookies.Count.Should().Be(2);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_for_debounce_duration,The following statement contains a magic number: var debounceFunction = new Debouncer(counter.Hit' TimeSpan.FromMilliseconds(50));
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_for_debounce_duration,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_throttle_calls,The following statement contains a magic number: var debounceFunction = new Debouncer(counter.Hit' TimeSpan.FromMilliseconds(50));
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_throttle_calls,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_throttle_calls,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_throttle_calls,The following statement contains a magic number: counter.Count.Should().Be(2);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_while_paused,The following statement contains a magic number: var debounceFunction = new Debouncer(counter.Hit' TimeSpan.FromMilliseconds(50));
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_while_paused,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_while_paused,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_while_paused,The following statement contains a magic number: Thread.Sleep(20);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_hold_the_call_while_paused,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_handle_pause_reentrancy,The following statement contains a magic number: var debounceFunction = new Debouncer(counter.Hit' TimeSpan.FromMilliseconds(50));
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_handle_pause_reentrancy,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.TPLTests,DebouncerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\DebouncerFixture.cs,should_handle_pause_reentrancy,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_not_delay_if_unset,The following statement contains a magic number: Subject.WaitAndPulse("me"' TimeSpan.FromMilliseconds(100));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_not_delay_if_unset,The following statement contains a magic number: watch.ElapsedMilliseconds.Should().BeLessThan(100);
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_not_delay_unrelated_key,The following statement contains a magic number: GivenExisting("other"' _epoch + TimeSpan.FromMilliseconds(200));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_not_delay_unrelated_key,The following statement contains a magic number: Subject.WaitAndPulse("me"' TimeSpan.FromMilliseconds(100));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_not_delay_unrelated_key,The following statement contains a magic number: watch.ElapsedMilliseconds.Should().BeLessThan(50);
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_wait_for_existing,The following statement contains a magic number: GivenExisting("me"' _epoch + TimeSpan.FromMilliseconds(200));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_wait_for_existing,The following statement contains a magic number: Subject.WaitAndPulse("me"' TimeSpan.FromMilliseconds(400));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_wait_for_existing,The following statement contains a magic number: watch.ElapsedMilliseconds.Should().BeInRange(175' 250);
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_wait_for_existing,The following statement contains a magic number: watch.ElapsedMilliseconds.Should().BeInRange(175' 250);
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_extend_delay,The following statement contains a magic number: GivenExisting("me"' _epoch + TimeSpan.FromMilliseconds(200));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_extend_delay,The following statement contains a magic number: Subject.WaitAndPulse("me"' TimeSpan.FromMilliseconds(100));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_extend_delay,The following statement contains a magic number: (GetRateLimitStore()["me"] - _epoch).Should().BeGreaterOrEqualTo(TimeSpan.FromMilliseconds(300));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_add_delay,The following statement contains a magic number: Subject.WaitAndPulse("me"' TimeSpan.FromMilliseconds(100));
Magic Number,NzbDrone.Common.Test.TPLTests,RateLimitServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Common.Test\TPLTests\RateLimitServiceFixture.cs,should_add_delay,The following statement contains a magic number: (GetRateLimitStore()["me"] - _epoch).Should().BeGreaterOrEqualTo(TimeSpan.FromMilliseconds(100));
