Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sonarr.Api.V3.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarFeedModule.cs,GetCalendarFeed,Cyclomatic complexity of the method is 9
Complex Method,Sonarr.Api.V3.Indexers,ReleaseModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModule.cs,DownloadRelease,Cyclomatic complexity of the method is 9
Complex Method,Sonarr.Api.V3.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Logs\LogModule.cs,GetLogs,Cyclomatic complexity of the method is 9
Complex Method,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetQueue,Cyclomatic complexity of the method is 10
Complex Method,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetOrderByFunc,Cyclomatic complexity of the method is 10
Complex Method,Sonarr.Api.V3.Series,SeriesEditorModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesEditorModule.cs,SaveAll,Cyclomatic complexity of the method is 12
Long Parameter List,Sonarr.Api.V3.EpisodeFiles,EpisodeFileModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\EpisodeFiles\EpisodeFileModule.cs,EpisodeFileModule,The method has 5 parameters. Parameters: signalRBroadcaster' mediaFileService' mediaFileDeletionService' seriesService' upgradableSpecification
Long Parameter List,Sonarr.Api.V3.Episodes,EpisodeModuleWithSignalR,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Episodes\EpisodeModuleWithSignalR.cs,EpisodeModuleWithSignalR,The method has 5 parameters. Parameters: episodeService' seriesService' upgradableSpecification' signalRBroadcaster' resource
Long Parameter List,Sonarr.Api.V3.Indexers,ReleaseModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModule.cs,ReleaseModule,The method has 10 parameters. Parameters: rssFetcherAndParser' nzbSearchService' downloadDecisionMaker' prioritizeDownloadDecision' downloadService' seriesService' episodeService' parsingService' cacheManager' logger
Long Parameter List,Sonarr.Api.V3.Queue,QueueActionModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueActionModule.cs,QueueActionModule,The method has 6 parameters. Parameters: queueService' trackedDownloadService' failedDownloadService' downloadClientProvider' pendingReleaseService' downloadService
Long Parameter List,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,QueueModule,The method has 5 parameters. Parameters: broadcastSignalRMessage' queueService' pendingReleaseService' languageProfileService' qualityProfileService
Long Parameter List,Sonarr.Api.V3.RootFolders,RootFolderModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\RootFolders\RootFolderModule.cs,RootFolderModule,The method has 8 parameters. Parameters: rootFolderService' signalRBroadcaster' rootFolderValidator' pathExistsValidator' mappedNetworkDriveValidator' startupFolderValidator' systemFolderValidator' folderWritableValidator
Long Parameter List,Sonarr.Api.V3.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesModule.cs,SeriesModule,The method has 17 parameters. Parameters: signalRBroadcaster' seriesService' addSeriesService' seriesStatisticsService' sceneMappingService' coverMapper' commandQueueManager' rootFolderService' rootFolderValidator' mappedNetworkDriveValidator' seriesPathValidator' seriesExistsValidator' seriesAncestorValidator' systemFolderValidator' profileExistsValidator' languageProfileExistsValidator' seriesFolderAsRootFolderValidator
Long Parameter List,Sonarr.Api.V3.System,SystemModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\System\SystemModule.cs,SystemModule,The method has 9 parameters. Parameters: appFolderInfo' runtimeInfo' platformInfo' osInfo' routeCacheProvider' configFileProvider' database' lifecycleService' deploymentInfoProvider
Long Parameter List,Sonarr.Api.V3.Wanted,CutoffModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Wanted\CutoffModule.cs,CutoffModule,The method has 5 parameters. Parameters: episodeCutoffService' episodeService' seriesService' upgradableSpecification' signalRBroadcaster
Long Identifier,Sonarr.Api.V3.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\NamingConfigModule.cs,ValidateFormatResult,The length of the parameter animeMultiEpisodeValidationResult is 33.
Long Identifier,Sonarr.Api.V3.FileSystem,FileSystemModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\FileSystem\FileSystemModule.cs,GetContents,The length of the parameter allowFoldersWithoutTrailingSlashes is 34.
Long Identifier,Sonarr.Api.V3.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesModule.cs,SeriesModule,The length of the parameter languageProfileExistsValidator is 30.
Long Identifier,Sonarr.Api.V3.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesModule.cs,SeriesModule,The length of the parameter seriesFolderAsRootFolderValidator is 33.
Long Statement,Sonarr.Api.V3.Blacklist,BlacklistModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Blacklist\BlacklistModule.cs,GetBlacklist,The length of the statement  "            var pagingSpec = pagingResource.MapToPagingSpec<BlacklistResource' NzbDrone.Core.Blacklisting.Blacklist>("date"' SortDirection.Descending); " is 139.
Long Statement,Sonarr.Api.V3.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The length of the statement  "            // There was a typo' recognize both the correct 'premieresOnly' and mistyped 'premiersOnly' boolean for background compat. " is 122.
Long Statement,Sonarr.Api.V3.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The length of the statement  "            var premieresOnly = Request.GetBooleanQueryParameter("premieresOnly") || Request.GetBooleanQueryParameter("premiersOnly"); " is 122.
Long Statement,Sonarr.Api.V3.Calendar,CalendarModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarModule.cs,GetCalendar,The length of the statement  "            var resources = MapToResource(_episodeService.EpisodesBetweenDates(start' end' includeUnmonitored)' includeSeries' includeEpisodeFile' includeEpisodeImages); " is 157.
Long Statement,Sonarr.Api.V3.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\NamingConfigModule.cs,GetExamples,The length of the statement  "            sampleResource.SingleEpisodeExample = _filenameValidationService.ValidateStandardFilename(singleEpisodeSampleResult) != null " is 124.
Long Statement,Sonarr.Api.V3.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\NamingConfigModule.cs,GetExamples,The length of the statement  "            sampleResource.MultiEpisodeExample = _filenameValidationService.ValidateStandardFilename(multiEpisodeSampleResult) != null " is 122.
Long Statement,Sonarr.Api.V3.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\NamingConfigModule.cs,GetExamples,The length of the statement  "            sampleResource.AnimeMultiEpisodeExample = _filenameValidationService.ValidateAnimeFilename(animeMultiEpisodeSampleResult) != null " is 129.
Long Statement,Sonarr.Api.V3.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\NamingConfigModule.cs,ValidateFormatResult,The length of the statement  "            var animeMultiEpisodeValidationResult = _filenameValidationService.ValidateAnimeFilename(animeMultiEpisodeSampleResult); " is 120.
Long Statement,Sonarr.Api.V3.Episodes,EpisodeModuleWithSignalR,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Episodes\EpisodeModuleWithSignalR.cs,MapToResource,The length of the statement  "                    var series = episode.Series ?? seriesDict.GetValueOrDefault(episodes[i].SeriesId) ?? _seriesService.GetSeries(episodes[i].SeriesId); " is 132.
Long Statement,Sonarr.Api.V3.FileSystem,FileSystemModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\FileSystem\FileSystemModule.cs,GetContents,The length of the statement  "            return _fileSystemLookupService.LookupContents((string)pathQuery.Value' includeFiles' allowFoldersWithoutTrailingSlashes); " is 122.
Long Statement,Sonarr.Api.V3.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\History\HistoryModule.cs,MapToResource,The length of the statement  "                resource.QualityCutoffNotMet = _upgradableSpecification.QualityCutoffNotMet(model.Series.QualityProfile.Value' model.Quality); " is 126.
Long Statement,Sonarr.Api.V3.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\History\HistoryModule.cs,MapToResource,The length of the statement  "                resource.LanguageCutoffNotMet = _upgradableSpecification.LanguageCutoffNotMet(model.Series.LanguageProfile' model.Language); " is 124.
Long Statement,Sonarr.Api.V3.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\History\HistoryModule.cs,GetHistory,The length of the statement  "            var pagingSpec = pagingResource.MapToPagingSpec<HistoryResource' NzbDrone.Core.History.History>("date"' SortDirection.Descending); " is 130.
Long Statement,Sonarr.Api.V3.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\History\HistoryModule.cs,GetSeriesHistory,The length of the statement  "                return _historyService.GetBySeason(seriesId' seasonNumber' eventType).Select(h => MapToResource(h' includeSeries' includeEpisode)).ToList(); " is 140.
Long Statement,Sonarr.Api.V3.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\History\HistoryModule.cs,GetSeriesHistory,The length of the statement  "            return _historyService.GetBySeries(seriesId' eventType).Select(h => MapToResource(h' includeSeries' includeEpisode)).ToList(); " is 126.
Long Statement,Sonarr.Api.V3.Indexers,ReleaseModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModule.cs,DownloadRelease,The length of the statement  "                throw new NzbDroneClientException(HttpStatusCode.NotFound' "Couldn't find requested release in cache' try searching again"); " is 124.
Long Statement,Sonarr.Api.V3.Indexers,ReleasePushModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleasePushModule.cs,ProcessRelease,The length of the statement  "                throw new ValidationException(new List<ValidationFailure>{ new ValidationFailure("Title"' "Unable to parse"' release.Title) }); " is 127.
Long Statement,Sonarr.Api.V3.Indexers,ReleasePushModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleasePushModule.cs,ResolveIndexer,The length of the statement  "                    _logger.Debug("Push Release {0} associated with indexer {1} - {2}."' release.Title' release.IndexerId' release.Indexer); " is 120.
Long Statement,Sonarr.Api.V3.Indexers,ReleasePushModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleasePushModule.cs,ResolveIndexer,The length of the statement  "                    _logger.Debug("Push Release {0} associated with indexer {1} - {2}."' release.Title' release.IndexerId' release.Indexer); " is 120.
Long Statement,Sonarr.Api.V3.Indexers,ReleaseResourceMapper,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseResource.cs,ToResource,The length of the statement  "            // TODO: Clean this mess up. don't mix data from multiple classes' use sub-resources instead? (Got a huge Deja Vu' didn't we talk about this already once?) " is 155.
Long Statement,Sonarr.Api.V3.Indexers,ReleaseResourceMapper,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseResource.cs,ToResource,The length of the statement  "                Leechers = (torrentInfo.Peers.HasValue && torrentInfo.Seeders.HasValue) ? (torrentInfo.Peers.Value - torrentInfo.Seeders.Value) : (int?)null' " is 141.
Long Statement,Sonarr.Api.V3.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Logs\LogModule.cs,GetLogs,The length of the statement  "                        pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info"); " is 120.
Long Statement,Sonarr.Api.V3.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Logs\LogModule.cs,GetLogs,The length of the statement  "                        pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug"); " is 142.
Long Statement,Sonarr.Api.V3.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Logs\LogModule.cs,GetLogs,The length of the statement  "                        pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug" || h.Level == "Trace"); " is 164.
Long Statement,Sonarr.Api.V3.ManualImport,ManualImportModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\ManualImport\ManualImportModule.cs,GetMediaFiles,The length of the statement  "            return _manualImportService.GetMediaFiles(folder' downloadId' seriesId' filterExistingFiles).ToResource().Select(AddQualityWeight).ToList(); " is 140.
Long Statement,Sonarr.Api.V3,ProviderModuleBase<TProviderResource;TProvider;TProviderDefinition>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\ProviderModuleBase.cs,RequestAction,The length of the statement  "            var query = ((IDictionary<string' object>)Request.Query.ToDictionary()).ToDictionary(k => k.Key' k => k.Value.ToString()); " is 122.
Long Statement,Sonarr.Api.V3.Queue,QueueDetailsModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueDetailsModule.cs,GetQueue,The length of the statement  "                return fullQueue.Where(q => q.Episode != null && episodeIds.Contains(q.Episode.Id)).ToResource(includeSeries' includeEpisode); " is 126.
Long Statement,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetQueue,The length of the statement  "            var pagingSpec = pagingResource.MapToPagingSpec<QueueResource' NzbDrone.Core.Queue.Queue>("timeleft"' SortDirection.Ascending); " is 127.
Long Statement,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetQueue,The length of the statement  "            return ApplyToPage((spec) => GetQueue(spec' includeUnknownSeriesItems)' pagingSpec' (q) => MapToResource(q' includeSeries' includeEpisode)); " is 140.
Long Statement,Sonarr.Api.V3.Queue,QueueStatusModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueStatusModule.cs,GetQueueStatus,The length of the statement  "                Errors = queue.Any(q => q.Series != null && q.TrackedDownloadStatus.Equals("Error"' StringComparison.InvariantCultureIgnoreCase))' " is 130.
Long Statement,Sonarr.Api.V3.Queue,QueueStatusModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueStatusModule.cs,GetQueueStatus,The length of the statement  "                Warnings = queue.Any(q => q.Series != null && q.TrackedDownloadStatus.Equals("Warning"' StringComparison.InvariantCultureIgnoreCase))' " is 134.
Long Statement,Sonarr.Api.V3.Queue,QueueStatusModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueStatusModule.cs,GetQueueStatus,The length of the statement  "                UnknownErrors = queue.Any(q => q.Series == null && q.TrackedDownloadStatus.Equals("Error"' StringComparison.InvariantCultureIgnoreCase))' " is 137.
Long Statement,Sonarr.Api.V3.Queue,QueueStatusModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueStatusModule.cs,GetQueueStatus,The length of the statement  "                UnknownWarnings = queue.Any(q => q.Series == null && q.TrackedDownloadStatus.Equals("Warning"' StringComparison.InvariantCultureIgnoreCase)) " is 140.
Long Statement,Sonarr.Api.V3.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesModule.cs,LinkSeriesStatistics,The length of the statement  "                    season.Statistics = seriesStatistics.SeasonStatistics.SingleOrDefault(s => s.SeasonNumber == season.SeasonNumber).ToResource(); " is 127.
Long Statement,Sonarr.Api.V3.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesModule.cs,PopulateAlternateTitles,The length of the statement  "            resource.AlternateTitles = mappings.Select(v => new AlternateTitleResource { Title = v.Title' SeasonNumber = v.SeasonNumber' SceneSeasonNumber = v.SceneSeasonNumber }).ToList(); " is 177.
Long Statement,Sonarr.Api.V3.Wanted,CutoffModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Wanted\CutoffModule.cs,GetCutoffUnmetEpisodes,The length of the statement  "            var resource = ApplyToPage(_episodeCutoffService.EpisodesWhereCutoffUnmet' pagingSpec' v => MapToResource(v' includeSeries' includeEpisodeFile' includeImages)); " is 160.
Long Statement,Sonarr.Api.V3.Wanted,MissingModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Wanted\MissingModule.cs,GetMissingEpisodes,The length of the statement  "            var resource = ApplyToPage(_episodeService.EpisodesWithoutFiles' pagingSpec' v => MapToResource(v' includeSeries' false' includeImages)); " is 137.
Magic Number,Sonarr.Api.V3.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The following statement contains a magic number: var pastDays = 7;
Magic Number,Sonarr.Api.V3.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The following statement contains a magic number: var futureDays = 28;
Magic Number,Sonarr.Api.V3.Calendar,CalendarModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Calendar\CalendarModule.cs,GetCalendar,The following statement contains a magic number: var end = DateTime.Today.AddDays(2);
Magic Number,Sonarr.Api.V3.Commands,CommandModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Commands\CommandModule.cs,CommandModule,The following statement contains a magic number: _debouncer = new Debouncer(SendUpdates' TimeSpan.FromSeconds(0.1));
Magic Number,Sonarr.Api.V3.Config,HostConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\HostConfigModule.cs,HostConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.BackupInterval).InclusiveBetween(1' 7);
Magic Number,Sonarr.Api.V3.Config,HostConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\HostConfigModule.cs,HostConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.BackupRetention).InclusiveBetween(1' 90);
Magic Number,Sonarr.Api.V3.Config,MediaManagementConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\MediaManagementConfigModule.cs,MediaManagementConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.MinimumFreeSpaceWhenImporting).GreaterThanOrEqualTo(100);
Magic Number,Sonarr.Api.V3.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Config\NamingConfigModule.cs,NamingConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.MultiEpisodeStyle).InclusiveBetween(0' 5);
Magic Number,Sonarr.Api.V3.Indexers,ReleaseModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModule.cs,MapDecision,The following statement contains a magic number: _remoteEpisodeCache.Set(GetCacheKey(resource)' decision.RemoteEpisode' TimeSpan.FromMinutes(30));
Magic Number,Sonarr.Api.V3.Indexers,ReleaseModuleBase,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModuleBase.cs,MapDecision,The following statement contains a magic number: release.QualityWeight = decision.RemoteEpisode                                                  .Series                                                  .QualityProfile.Value.GetIndex(release.Quality.Quality).Index * 100;
Magic Number,Sonarr.Api.V3.Indexers,ReleaseModuleBase,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModuleBase.cs,MapDecision,The following statement contains a magic number: release.LanguageWeight = decision.RemoteEpisode                                                   .Series                                                   .LanguageProfile.Value                                                   .Languages.FindIndex(v => v.Language == release.Language) * 100;
Magic Number,Sonarr.Api.V3.Indexers,ReleaseModuleBase,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Indexers\ReleaseModuleBase.cs,MapDecision,The following statement contains a magic number: release.QualityWeight += release.Quality.Revision.Real * 10;
Magic Number,Sonarr.Api.V3.ManualImport,ManualImportModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\ManualImport\ManualImportModule.cs,AddQualityWeight,The following statement contains a magic number: item.QualityWeight += item.Quality.Revision.Real * 10;
Magic Number,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetQueue,The following statement contains a magic number: ordered = ordered.ThenByDescending(q => q.Size == 0 ? 0 : 100 - q.Sizeleft / q.Size * 100);
Magic Number,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetQueue,The following statement contains a magic number: ordered = ordered.ThenByDescending(q => q.Size == 0 ? 0 : 100 - q.Sizeleft / q.Size * 100);
Magic Number,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetOrderByFunc,The following statement contains a magic number: switch (pagingSpec.SortKey)              {                  case "status":                      return q => q.Status;                  case "series.sortTitle":                      return q => q.Series?.SortTitle;                  case "title":                      return q => q.Title;                  case "episode":                      return q => q.Episode;                  case "episode.airDateUtc":                      return q => q.Episode.AirDateUtc;                  case "episode.title":                      return q => q.Episode.Title;                  case "language":                      return q => q.Language;                  case "quality":                      return q => q.Quality;                  case "progress":                      // Avoid exploding if a download's size is 0                      return q => 100 - q.Sizeleft / Math.Max(q.Size * 100' 1);                  default:                      return q => q.Timeleft;              }
Magic Number,Sonarr.Api.V3.Queue,QueueModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueModule.cs,GetOrderByFunc,The following statement contains a magic number: switch (pagingSpec.SortKey)              {                  case "status":                      return q => q.Status;                  case "series.sortTitle":                      return q => q.Series?.SortTitle;                  case "title":                      return q => q.Title;                  case "episode":                      return q => q.Episode;                  case "episode.airDateUtc":                      return q => q.Episode.AirDateUtc;                  case "episode.title":                      return q => q.Episode.Title;                  case "language":                      return q => q.Language;                  case "quality":                      return q => q.Quality;                  case "progress":                      // Avoid exploding if a download's size is 0                      return q => 100 - q.Sizeleft / Math.Max(q.Size * 100' 1);                  default:                      return q => q.Timeleft;              }
Magic Number,Sonarr.Api.V3.Queue,QueueStatusModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Queue\QueueStatusModule.cs,QueueStatusModule,The following statement contains a magic number: _broadcastDebounce = new Debouncer(BroadcastChange' TimeSpan.FromSeconds(5));
Magic Number,Sonarr.Api.V3.Series,SeriesFolderAsRootFolderValidator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesFolderAsRootFolderValidator.cs,IsValid,The following statement contains a magic number: return distance >= Math.Max(1' seriesFolder.Length * 0.2);
Missing Default,Sonarr.Api.V3.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Logs\LogModule.cs,GetLogs,The following switch statement is missing a default case: switch (levelFilter.Value)                  {                      case "fatal":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal");                          break;                      case "error":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error");                          break;                      case "warn":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn");                          break;                      case "info":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info");                          break;                      case "debug":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug");                          break;                      case "trace":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug" || h.Level == "Trace");                          break;                  }
Missing Default,Sonarr.Api.V3.Series,SeriesEditorModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Sonarr.Api.V3\Series\SeriesEditorModule.cs,SaveAll,The following switch statement is missing a default case: switch (applyTags)                      {                          case ApplyTags.Add:                              newTags.ForEach(t => series.Tags.Add(t));                              break;                          case ApplyTags.Remove:                              newTags.ForEach(t => series.Tags.Remove(t));                              break;                          case ApplyTags.Replace:                              series.Tags = new HashSet<int>(newTags);                              break;                      }
