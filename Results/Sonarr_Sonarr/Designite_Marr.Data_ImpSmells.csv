Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Marr.Data.Parameters,DbTypeBuilder,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\Parameters\DbTypeBuilder.cs,GetDbType,Cyclomatic complexity of the method is 13
Complex Method,Marr.Data.Parameters,OleDbTypeBuilder,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\Parameters\OleDbTypeBuilder.cs,GetDbType,Cyclomatic complexity of the method is 12
Complex Method,Marr.Data.Parameters,SqlDbTypeBuilder,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\Parameters\SqlDbTypeBuilder.cs,GetDbType,Cyclomatic complexity of the method is 13
Complex Method,Marr.Data.QGen,ExpressionVisitor,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\ExpressionVisitor.cs,Visit,Cyclomatic complexity of the method is 8
Complex Method,Marr.Data.QGen,PagingQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\PagingQueryDecorator.cs,BuildSelectClause,Cyclomatic complexity of the method is 8
Complex Method,Marr.Data.QGen,QueryBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryBuilder.cs,ValidateQuery,Cyclomatic complexity of the method is 9
Complex Method,Marr.Data.QGen,SortBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\SortBuilder.cs,BuildQuery,Cyclomatic complexity of the method is 8
Complex Method,Marr.Data.QGen,SqlitePagingQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\SqlitePagingQueryDecorator.cs,BuildSelectClause,Cyclomatic complexity of the method is 8
Complex Method,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,Decode,Cyclomatic complexity of the method is 13
Long Parameter List,Marr.Data.QGen,QueryFactory,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryFactory.cs,CreateSelectQuery,The method has 5 parameters. Parameters: tables' dataMapper' where' orderBy' useAltName
Long Parameter List,Marr.Data.QGen,QueryFactory,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryFactory.cs,CreateRowCountSelectQuery,The method has 5 parameters. Parameters: tables' dataMapper' where' orderBy' useAltName
Long Parameter List,Marr.Data.QGen,QueryFactory,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryFactory.cs,CreatePagingSelectQuery,The method has 7 parameters. Parameters: tables' dataMapper' where' orderBy' useAltName' skip' take
Long Parameter List,Marr.Data.QGen,SelectQuery,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\SelectQuery.cs,SelectQuery,The method has 5 parameters. Parameters: dialect' tables' whereClause' orderBy' useAltName
Long Parameter List,Marr.Data.QGen,SortBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\SortBuilder.cs,SortBuilder,The method has 6 parameters. Parameters: baseBuilder' db' whereBuilder' dialect' tables' useAltName
Long Parameter List,Marr.Data.QGen,UpdateQuery,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\UpdateQuery.cs,UpdateQuery,The method has 5 parameters. Parameters: dialect' columns' command' target' whereClause
Long Parameter List,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,WhereBuilder,The method has 6 parameters. Parameters: command' dialect' filter' tables' useAltName' tablePrefix
Long Statement,Marr.Data,DataHelper,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\DataHelper.cs,GetColumnName,The length of the statement  "                throw new InvalidOperationException(string.Format("Column map missing for field {0}.{1}"' declaringType.FullName' propertyName)); " is 129.
Long Statement,Marr.Data,EntityGraph,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\EntityGraph.cs,AddLazyRelationship,The length of the statement  "            _children.Add(new EntityGraph(childRelationship.RelationshipInfo.EntityType.GetGenericArguments()[0]' this' childRelationship)); " is 128.
Long Statement,Marr.Data,EntityGraph,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\EntityGraph.cs,GetGroupingKeyColumns,The length of the statement  "                (groupingKeyColumns.PrimaryKeys.Count == 0 && !IsRoot && _relationship.RelationshipInfo.RelationType == RelationshipTypes.Many)) " is 128.
Long Statement,Marr.Data,EntityGraph,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\EntityGraph.cs,GetGroupingKeyColumns,The length of the statement  "                throw new MissingPrimaryKeyException(string.Format("There are no primary key mappings defined for the following entity: '{0}'."' EntityType.Name)); " is 147.
Long Statement,Marr.Data.Mapping,MappingsFluentRelationships<TEntity>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\Mapping\FluentMappings.cs,AutoMapICollectionOrComplexProperties,The length of the statement  "                        typeof(ICollection).IsAssignableFrom((m as PropertyInfo).PropertyType) || !DataHelper.IsSimpleType((m as PropertyInfo).PropertyType) " is 132.
Long Statement,Marr.Data.QGen,InsertQueryBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\InsertQueryBuilder.cs,GetIdentity,The length of the statement  "                string err = string.Format("The current dialect '{0}' does not have an identity query implemented."' _dialect.ToString()); " is 122.
Long Statement,Marr.Data.QGen,PagingQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\PagingQueryDecorator.cs,BuildJoinBackToCTE,The length of the statement  "                sql.AppendFormat("ON cte.{0} = {1} "' cteQueryPkName' _innerQuery.Dialect.CreateToken(string.Concat("t0"' "."' outerQueryPkName))); " is 131.
Long Statement,Marr.Data.QGen,PagingQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\PagingQueryDecorator.cs,BuildGroupColumn,The length of the statement  "            sql.AppendFormat("' ROW_NUMBER() OVER (PARTITION BY {0} {1}) As GroupRow "' BuildBaseTablePKColumns(isView)' _innerQuery.OrderBy.BuildQuery(isView)); " is 149.
Long Statement,Marr.Data.QGen,PagingQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\PagingQueryDecorator.cs,BuildSelectClause,The length of the statement  "                        string token = _innerQuery.Dialect.CreateToken(string.Concat(join.Alias' "."' _innerQuery.NameOrAltName(c.ColumnInfo))); " is 120.
Long Statement,Marr.Data.QGen,QueryBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryBuilder.cs,Where,The length of the statement  "            _whereBuilder = new WhereBuilder<T>(_db.Command' _dialect' filterExpression' _tables' useAltNames' addTablePrefixToColumns); " is 124.
Long Statement,Marr.Data.QGen,QueryBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryBuilder.cs,Where,The length of the statement  "            _whereBuilder = new WhereBuilder<T>(_db.Command' _dialect' filterExpression' _tables' useAltNames' addTablePrefixToColumns); " is 124.
Long Statement,Marr.Data.QGen,QueryBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\QueryBuilder.cs,Any,The length of the statement  "            _whereBuilder = new WhereBuilder<T>(_db.Command' _dialect' filterExpression' _tables' useAltNames' addTablePrefixToColumns); " is 124.
Long Statement,Marr.Data.QGen,RowCountQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\RowCountQueryDecorator.cs,BuildGroupColumn,The length of the statement  "            sql.AppendFormat("' ROW_NUMBER() OVER (PARTITION BY {0} ORDER BY {1}) As GroupRow "' baseTablePKColumns' baseTablePKColumns); " is 125.
Long Statement,Marr.Data.QGen,SortBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\SortBuilder.cs,BuildQuery,The length of the statement  "                    string msg = string.Format("The property '{0} -> {1}' you are trying to reference in the 'ORDER BY' statement belongs to an entity that has not been joined in your query.  To reference this property' you must join the '{0}' entity using the Join method."' " is 255.
Long Statement,Marr.Data.QGen,SqlitePagingQueryDecorator,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\SqlitePagingQueryDecorator.cs,BuildSelectClause,The length of the statement  "                        string token = _innerQuery.Dialect.CreateToken(string.Concat(join.Alias' "."' _innerQuery.NameOrAltName(c.ColumnInfo))); " is 120.
Long Statement,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,VisitMethodCall,The length of the statement  "                    string msg = string.Format("'{0}' expressions are not yet implemented in the where clause expression tree parser."' method); " is 124.
Long Statement,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,GetFullyQualifiedColumnName,The length of the statement  "                    string msg = string.Format("The property '{0} -> {1}' you are trying to reference in the 'WHERE' statement belongs to an entity that has not been joined in your query.  To reference this property' you must join the '{0}' entity using the Join method."' " is 252.
Long Statement,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,Decode,The length of the statement  "                default: throw new NotSupportedException(string.Format("{0} statement is not supported"' expression.NodeType.ToString())); " is 122.
Long Statement,Marr.Data.Reflection,SimpleReflectionStrategy,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\Reflection\SimpleReflectionStrategy.cs,GetFieldValue,The length of the statement  "            throw new DataMappingException(string.Format("The DataMapper could not get the value for {0}.{1}."' entity.GetType().Name' fieldName)); " is 135.
Complex Conditional,Marr.Data,EntityGraph,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\EntityGraph.cs,GetGroupingKeyColumns,The conditional expression  "(groupingKeyColumns.PrimaryKeys.Count == 0 && _children.Count > 0) ||                  (groupingKeyColumns.PrimaryKeys.Count == 0 && !IsRoot && _relationship.RelationshipInfo.RelationType == RelationshipTypes.Many)"  is complex.
Virtual Method Call from Constructor,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,WhereBuilder,The constructor "WhereBuilder" calls a virtual method "Visit".
Missing Default,Marr.Data.QGen,ExpressionVisitor,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\ExpressionVisitor.cs,Visit,The following switch statement is missing a default case: switch (expression.NodeType)              {                  case ExpressionType.Lambda:                      return VisitLamda((LambdaExpression)expression);                  case ExpressionType.ArrayLength:                  case ExpressionType.Convert:                  case ExpressionType.ConvertChecked:                  case ExpressionType.Negate:                  case ExpressionType.UnaryPlus:                  case ExpressionType.NegateChecked:                  case ExpressionType.Not:                  case ExpressionType.Quote:                  case ExpressionType.TypeAs:                      return VisitUnary((UnaryExpression)expression);                  case ExpressionType.Add:                  case ExpressionType.AddChecked:                  case ExpressionType.And:                  case ExpressionType.AndAlso:                  case ExpressionType.ArrayIndex:                  case ExpressionType.Coalesce:                  case ExpressionType.Divide:                  case ExpressionType.Equal:                  case ExpressionType.ExclusiveOr:                  case ExpressionType.GreaterThan:                  case ExpressionType.GreaterThanOrEqual:                  case ExpressionType.LeftShift:                  case ExpressionType.LessThan:                  case ExpressionType.LessThanOrEqual:                  case ExpressionType.Modulo:                  case ExpressionType.Multiply:                  case ExpressionType.MultiplyChecked:                  case ExpressionType.NotEqual:                  case ExpressionType.Or:                  case ExpressionType.OrElse:                  case ExpressionType.Power:                  case ExpressionType.RightShift:                  case ExpressionType.Subtract:                  case ExpressionType.SubtractChecked:                      return VisitBinary((BinaryExpression)expression);                  case ExpressionType.Call:                      return VisitMethodCall((MethodCallExpression)expression);                  case ExpressionType.Constant:                      return VisitConstant((ConstantExpression)expression);                  case ExpressionType.MemberAccess:                      return VisitMemberAccess((MemberExpression)expression);                  case ExpressionType.Parameter:                      return VisitParameter((ParameterExpression)expression);                }
Missing Default,Marr.Data.QGen,WhereBuilder<T>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\Marr.Data\QGen\WhereBuilder.cs,Decode,The following switch statement is missing a default case: switch (expression.NodeType)                  {                      case ExpressionType.Equal: return "IS";                      case ExpressionType.NotEqual: return "IS NOT";                  }
