Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,Run,Cyclomatic complexity of the method is 10
Long Parameter List,LogentriesCore,LeClient,C:\repos\Sonarr_Sonarr\src\LogentriesCore\LeClient.cs,LeClient,The method has 5 parameters. Parameters: useHttpPut' useSsl' useDataHub' serverAddr' port
Long Identifier,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,,The length of the parameter InvalidHttpPutCredentialsMessage is 32.
Long Statement,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,Run,The length of the statement  "                            WriteDebugMessages("Failed to get HostName parameter using System.Environment.MachineName. Log messages will not be prefixed by HostName"); " is 139.
Long Statement,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,LoadCredentials,The length of the statement  "            var configAccountKey = ConfigurationManager.AppSettings[LegacyConfigAccountKeyName] ?? ConfigurationManager.AppSettings[ConfigAccountKeyName]; " is 142.
Long Statement,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,LoadCredentials,The length of the statement  "                var configLocation = ConfigurationManager.AppSettings[LegacyConfigLocationName] ?? ConfigurationManager.AppSettings[ConfigLocationName]; " is 136.
Empty Catch Block,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,retrieveSetting,The method has an empty catch block.
Empty Catch Block,LogentriesCore,LeClient,C:\repos\Sonarr_Sonarr\src\LogentriesCore\LeClient.cs,Close,The method has an empty catch block.
Magic Number,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,AreAllQueuesEmpty,The following statement contains a magic number: while (start.Add(waitTime) > then)              {                  if (_allQueues.All(x => x.Count == 0))                      return true;                    Thread.Sleep(100);                  then = DateTime.UtcNow;              }
Magic Number,LogentriesCore,AsyncLogger,C:\repos\Sonarr_Sonarr\src\LogentriesCore\AsyncLogger.cs,ReopenConnection,The following statement contains a magic number: while (true)              {                  try                  {                      OpenConnection();                        return;                  }                  catch (Exception ex)                  {                      if (m_Debug)                      {                          WriteDebugMessages("Unable to connect to Logentries API."' ex);                      }                  }                    rootDelay *= 2;                  if (rootDelay > MaxDelay)                      rootDelay = MaxDelay;                    var waitFor = rootDelay + Random.Next(rootDelay);                    try                  {                      Thread.Sleep(waitFor);                  }                  catch                  {                      throw new ThreadInterruptedException();                  }              }
