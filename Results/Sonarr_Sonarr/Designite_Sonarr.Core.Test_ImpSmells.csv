Implementation smell,Namespace,Class,File,Method,Description
Long Method,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The method has 231 lines of code.
Long Method,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The method has 132 lines of code.
Long Method,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The method has 112 lines of code.
Long Parameter List,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,AddTvdbMapping,The method has 6 parameters. Parameters: sceneAbsolute' sceneSeason' sceneEpisode' tvdbAbsolute' tvdbSeason' tvdbEpisode
Long Parameter List,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,GivenRemoteEpisode,The method has 6 parameters. Parameters: episodes' quality' language' age' size' downloadProtocol
Long Parameter List,NzbDrone.Core.Test.DecisionEngineTests,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeSpecificationFixture.cs,IsUpgradeTest,The method has 6 parameters. Parameters: current' currentVersion' newQuality' newVersion' cutoff' expected
Long Parameter List,NzbDrone.Core.Test.DecisionEngineTests,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeSpecificationFixture.cs,IsUpgradeTestLanguage,The method has 9 parameters. Parameters: current' currentVersion' currentLanguage' newQuality' newVersion' newLanguage' cutoff' languageCutoff' expected
Long Parameter List,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,GivenMostRecentForEpisode,The method has 5 parameters. Parameters: episodeId' downloadId' quality' date' eventType
Long Parameter List,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,GivenCompletedTorrent,The method has 5 parameters. Parameters: state' ratio' ratioLimit' seedingTime' seedingTimeLimit
Long Parameter List,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,should_return_status_with_outputdir_for_version_lt_2,The method has 5 parameters. Parameters: rootFolder' completeDir' categoryDir' fullCompleteDir' fullCategoryDir
Long Parameter List,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,should_return_status_with_outputdir_for_version_gte_2,The method has 5 parameters. Parameters: rootFolder' completeDir' categoryDir' fullCompleteDir' fullCategoryDir
Long Parameter List,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,PrepareClientToReturnCompletedItem,The method has 5 parameters. Parameters: stopped' ratio' seedingTime' ratioLimit' idleLimit
Long Parameter List,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisode,The method has 5 parameters. Parameters: seasonNumber' episodeNumber' sceneSeasonNumber' sceneEpisodeNumber' airDate
Long Parameter List,NzbDrone.Core.Test.IndexerTests,TestIndexer,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TestIndexer.cs,TestIndexer,The method has 5 parameters. Parameters: httpClient' indexerStatusService' configService' parsingService' logger
Long Parameter List,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TestTorrentRssIndexer,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TestTorrentRssIndexer.cs,TestTorrentRssIndexer,The method has 6 parameters. Parameters: torrentRssParserFactory' httpClient' indexerStatusService' configService' parsingService' logger
Long Parameter List,NzbDrone.Core.Test.OrganizerTests,BuildFilePathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\BuildFilePathFixture.cs,CalculateFilePath_SeasonFolder_SingleNumber,The method has 5 parameters. Parameters: filename' seasonNumber' useSeasonFolder' seasonFolderFormat' expectedPath
Long Parameter List,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,GivenMediaInfoModel,The method has 9 parameters. Parameters: videoCodec' audioCodec' audioChannels' videoBitDepth' videoColourPrimaries' videoTransferCharacteristics' audioLanguages' subtitles' schemaRevision
Long Parameter List,NzbDrone.Core.Test.ParserTests,AbsoluteEpisodeNumberParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\AbsoluteEpisodeNumberParserFixture.cs,should_parse_absolute_numbers,The method has 5 parameters. Parameters: postTitle' title' absoluteEpisodeNumber' seasonNumber' episodeNumber
Long Parameter List,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_parse_daily_episode,The method has 5 parameters. Parameters: postTitle' title' year' month' day
Long Parameter List,NzbDrone.Core.Test.Qualities,QualityIndexCompareToFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Qualities\QualityIndexCompareToFixture.cs,should_match_expected_when_respect_group_order_is_true,The method has 5 parameters. Parameters: leftIndex' leftGroupIndex' rightIndex' rightGroupIndex' expected
Long Parameter List,NzbDrone.Core.Test.Qualities,QualityIndexCompareToFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Qualities\QualityIndexCompareToFixture.cs,should_match_expected_when_respect_group_order_is_false,The method has 5 parameters. Parameters: leftIndex' leftGroupIndex' rightIndex' rightGroupIndex' expected
Long Identifier,NzbDrone.Core.Test.DecisionEngineTests,MonitoredEpisodeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MonitoredEpisodeSpecificationFixture.cs,,The length of the parameter _monitoredEpisodeSpecification is 30.
Long Statement,NzbDrone.Core.Test.Configuration,ConfigServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Configuration\ConfigServiceFixture.cs,config_properties_should_write_and_read_using_same_key,The length of the statement  "            Mocker.GetMock<IConfigRepository>().Setup(c => c.Upsert(It.IsAny<string>()' It.IsAny<string>())).Callback<string' string>((key' value) => " is 137.
Long Statement,NzbDrone.Core.Test.Configuration,ConfigServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Configuration\ConfigServiceFixture.cs,should_ignore_null_properties,The length of the statement  "            Mocker.GetMock<IConfigRepository>().Verify(c => c.Upsert("downloadedepisodesfolder"' It.IsAny<string>())' Times.Never()); " is 121.
Long Statement,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_skip_mapping_when_scene_information_is_all_zero,The length of the statement  "                  .Verify(v => v.UpdateEpisodes(It.Is<List<Episode>>(e => e.Any(c => c.SceneAbsoluteEpisodeNumber == 0 && c.SceneSeasonNumber == 0 && c.SceneEpisodeNumber == 0)))' Times.Never()); " is 177.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_add_mapping_with_blank_title,The length of the statement  "            Mocker.GetMock<ISceneMappingRepository>().Verify(c => c.InsertMany(It.Is<IList<SceneMapping>>(m => !m.Any(s => s.Title.IsNullOrWhiteSpace())))' Times.Once()); " is 158.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_add_mapping_with_blank_search_title,The length of the statement  "            Mocker.GetMock<ISceneMappingRepository>().Verify(c => c.InsertMany(It.Is<IList<SceneMapping>>(m => !m.Any(s => s. SearchTerm.IsNullOrWhiteSpace())))' Times.Once()); " is 164.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The length of the statement  "                new SceneMapping { Title = "Working!!"' ParseTerm = "working"' SearchTerm = "Working!!"' TvdbId = 100' SceneSeasonNumber = 1 }' " is 127.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The length of the statement  "                new SceneMapping { Title = "Working`!!"' ParseTerm = "working"' SearchTerm = "Working`!!"' TvdbId = 100' SceneSeasonNumber = 2 }' " is 129.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The length of the statement  "                new SceneMapping { Title = "Working!!!"' ParseTerm = "working"' SearchTerm = "Working!!!"' TvdbId = 100' SceneSeasonNumber = 3 }' " is 129.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu 1"' ParseTerm = "fudanshikoukouseikatsu1"' SearchTerm = "Fudanshi Koukou Seikatsu 1"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = null }' " is 201.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu 2"' ParseTerm = "fudanshikoukouseikatsu2"' SearchTerm = "Fudanshi Koukou Seikatsu 2"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = null }' " is 199.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu 3"' ParseTerm = "fudanshikoukouseikatsu3"' SearchTerm = "Fudanshi Koukou Seikatsu 3"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = -1 }' " is 199.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu 4"' ParseTerm = "fudanshikoukouseikatsu4"' SearchTerm = "Fudanshi Koukou Seikatsu 4"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = -1 }' " is 197.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_season,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = 1' SceneSeasonNumber = null } " is 192.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_season,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = 1' SceneSeasonNumber = null } " is 192.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_sceneseason,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 1 } " is 192.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_sceneseason,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 1 } " is 192.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The length of the statement  "                new SceneMapping { Title = "Fairy Tail S2"' ParseTerm = "fairytails2"' SearchTerm = "Fairy Tail S2"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 2 } " is 159.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The length of the statement  "                new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 1 } " is 192.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_filter_by_regex,The length of the statement  "                new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 101' FilterRegex="-Viva$" } " is 121.
Long Statement,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,AssertMappingUpdated,The length of the statement  "                Subject.GetSceneNames(sceneMapping.TvdbId' _fakeMappings.Select(m => m.SeasonNumber.Value).Distinct().ToList()' new List<int>()).Should().Contain(sceneMapping.SearchTerm); " is 171.
Long Statement,NzbDrone.Core.Test.Datastore,MarrDataLazyLoadingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\MarrDataLazyLoadingFixture.cs,should_explicit_load_profile_if_joined,The length of the statement  "                .Join<Series' QualityProfile>(Marr.Data.QGen.JoinType.Inner' v => v.QualityProfile' (l' r) => l.QualityProfileId == r.Id) " is 121.
Long Statement,NzbDrone.Core.Test.Datastore,MarrDataLazyLoadingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\MarrDataLazyLoadingFixture.cs,should_explicit_load_languageprofile_if_joined,The length of the statement  "                                     .Join<Series' LanguageProfile>(Marr.Data.QGen.JoinType.Inner' v => v.LanguageProfile' (l' r) => l.QualityProfileId == r.Id) " is 123.
Long Statement,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The length of the statement  "                    Items = $"[{GenerateQualityJson(1' true)}' {GenerateQualityJson((int)Quality.WEBRip480p' false)}' {GenerateQualityJson((int)Quality.WEBRip720p' false)}' {GenerateQualityJson((int)Quality.WEBRip1080p' false)}' {GenerateQualityJson((int)Quality.WEBRip2160p' false)}]" " is 265.
Long Statement,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The length of the statement  "                    Items = $"[{GenerateQualityJson(1' true)}' {GenerateQualityJson((int)Quality.DVD' false)}' {GenerateQualityJson((int)Quality.Bluray480p' false)}]" " is 146.
Long Statement,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The length of the statement  "                    Items = $"[{GenerateQualityJson(1' true)}' {GenerateQualityJson((int)Quality.WEBRip480p' false)}' {GenerateQualityJson((int)Quality.WEBRip720p' false)}' {GenerateQualityJson((int)Quality.WEBRip1080p' false)}]" " is 209.
Long Statement,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The length of the statement  "                    Items = $"[{GenerateQualityJson(1' true)}' {GenerateQualityJson((int)Quality.WEBRip480p' false)}' {GenerateQualityJson((int)Quality.WEBRip720p' false)}' {GenerateQualityJson((int)Quality.WEBRip1080p' false)}' {GenerateQualityJson((int)Quality.WEBRip2160p' false)}]" " is 265.
Long Statement,NzbDrone.Core.Test.Datastore.Migration,update_animetosho_urlFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\121_update_animetosho_urlFixture.cs,should_replace_old_url,The length of the statement  "            items.First().Settings.ToObject<NewznabSettings121>().BaseUrl.Should().Be(baseUrl.Replace("animetosho"' "feed.animetosho")); " is 124.
Long Statement,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile_with_groups,The length of the statement  "                                                       Items = "[ { \"id\": 1001' \"name\": \"Why?!\"' \"allowed\": true' \"items\": [{ \"quality\": 8' \"allowed\": true }' { \"quality\": 7' \"allowed\": true }] }' { \"quality\": 19' \"allowed\": true } ]" " is 201.
Long Statement,NzbDrone.Core.Test.Datastore.SqliteSchemaDumperTests,SqliteSchemaDumperFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\SqliteSchemaDumperTests\SqliteSchemaDumperFixture.cs,should_ignore_unknown_symbols,The length of the statement  "            var result = Subject.ReadTableSchema("CREATE TABLE TestTable (MyId INTEGER DEFAULT 10 CHECK (Some weir +1e3 expression)' CONSTRAINT NULL' MyCol INTEGER)"); " is 155.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The length of the statement  "                                        Episodes = new List<Episode> { new Episode()' new Episode()' new Episode()' new Episode()' new Episode()' new Episode() } " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_not_attempt_to_map_episode_if_not_parsable,The length of the statement  "            Mocker.GetMock<IParsingService>().Verify(c => c.Map(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<SearchCriteriaBase>())' Times.Never()); " is 165.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_not_attempt_to_map_episode_if_series_title_is_blank,The length of the statement  "            Mocker.GetMock<IParsingService>().Verify(c => c.Map(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<SearchCriteriaBase>())' Times.Never()); " is 165.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_return_rejected_result_for_unparsable_search,The length of the statement  "            Mocker.GetMock<IParsingService>().Verify(c => c.Map(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<SearchCriteriaBase>())' Times.Never()); " is 165.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,broken_report_shouldnt_blowup_the_process,The length of the statement  "            Mocker.GetMock<IParsingService>().Setup(c => c.Map(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<SearchCriteriaBase>())) " is 148.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,broken_report_shouldnt_blowup_the_process,The length of the statement  "            Mocker.GetMock<IParsingService>().Verify(c => c.Map(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<SearchCriteriaBase>())' Times.Exactly(_reports.Count)); " is 181.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_return_a_decision_when_exception_is_caught,The length of the statement  "            Mocker.GetMock<IParsingService>().Setup(c => c.Map(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<SearchCriteriaBase>())) " is 148.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,MonitoredEpisodeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MonitoredEpisodeSpecificationFixture.cs,should_return_true_for_single_episode_search,The length of the statement  "            _monitoredEpisodeSpecification.IsSatisfiedBy(_parseResultSingle' new SingleEpisodeSearchCriteria()).Accepted.Should().BeTrue(); " is 127.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,MonitoredEpisodeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MonitoredEpisodeSpecificationFixture.cs,should_return_true_if_episode_is_monitored_for_season_search,The length of the statement  "            _monitoredEpisodeSpecification.IsSatisfiedBy(_parseResultSingle' new SeasonSearchCriteria()).Accepted.Should().BeTrue(); " is 120.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,MonitoredEpisodeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MonitoredEpisodeSpecificationFixture.cs,should_return_false_if_episode_is_not_monitored_for_season_search,The length of the statement  "            _monitoredEpisodeSpecification.IsSatisfiedBy(_parseResultSingle' new SeasonSearchCriteria()).Accepted.Should().BeFalse(); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,MonitoredEpisodeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MonitoredEpisodeSpecificationFixture.cs,should_return_true_if_episode_is_not_monitored_and_monitoredEpisodesOnly_flag_is_false,The length of the statement  "            _monitoredEpisodeSpecification.IsSatisfiedBy(_parseResultSingle' new SingleEpisodeSearchCriteria { MonitoredEpisodesOnly = false }).Accepted.Should().BeTrue(); " is 159.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,MonitoredEpisodeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MonitoredEpisodeSpecificationFixture.cs,should_return_false_if_episode_is_not_monitored_and_monitoredEpisodesOnly_flag_is_true,The length of the statement  "            _monitoredEpisodeSpecification.IsSatisfiedBy(_parseResultSingle' new SingleEpisodeSearchCriteria{ MonitoredEpisodesOnly = true}).Accepted.Should().BeFalse(); " is 157.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_reals_before_non_reals,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p' new Revision(version: 1' real: 0))' Language.English); " is 168.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_reals_before_non_reals,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p' new Revision(version: 1' real: 1))' Language.English); " is 168.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_propers_before_non_propers,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p' new Revision(version: 1))' Language.English); " is 159.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_propers_before_non_propers,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p' new Revision(version: 2))' Language.English); " is 159.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_higher_quality_before_lower,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.SDTV)' Language.English); " is 129.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_higher_quality_before_lower,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes_with_multiple_episodes,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(2)' GivenEpisode(3) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 150.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes_with_multiple_episodes,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 150.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The length of the statement  "            var remoteEpisodeSd = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.SDTV)' Language.English' size: 100.Megabytes()' age: 1); " is 161.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The length of the statement  "            var remoteEpisodeHdSmallOld = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 1200.Megabytes()' age: 1000); " is 177.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The length of the statement  "            var remoteEpisodeSmallYoung = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 1250.Megabytes()' age: 10); " is 175.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The length of the statement  "            var remoteEpisodeHdLargeYoung = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 3000.Megabytes()' age: 1); " is 176.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_youngest,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' age: 10); " is 142.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_youngest,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' age: 5); " is 141.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_not_throw_if_no_episodes_are_found,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 500.Megabytes()); " is 156.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_not_throw_if_no_episodes_are_found,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 500.Megabytes()); " is 156.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_usenet_above_torrent_when_usenet_is_preferred,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' downloadProtocol: DownloadProtocol.Torrent); " is 177.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_usenet_above_torrent_when_usenet_is_preferred,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' downloadProtocol: DownloadProtocol.Usenet); " is 176.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_torrent_above_usenet_when_torrent_is_preferred,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' downloadProtocol: DownloadProtocol.Torrent); " is 177.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_torrent_above_usenet_when_torrent_is_preferred,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' downloadProtocol: DownloadProtocol.Usenet); " is 176.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_season_pack_above_single_episode,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 150.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_season_pack_above_single_episode,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_multiepisode_over_single_episode_for_anime,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 150.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_multiepisode_over_single_episode_for_anime,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_single_episode_over_multi_episode_for_non_anime,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 150.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_single_episode_over_multi_episode_for_non_anime,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_seeders,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_seeders,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_given_equal_number_of_seeds,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_given_equal_number_of_seeds,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_no_seeds,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_no_seeds,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_age_and_size_are_too_similar,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_age_and_size_are_too_similar,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.Bluray1080p)' Language.English); " is 136.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.SDTV)' Language.English); " is 129.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_language,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English); " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_language,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.French); " is 132.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_language,The length of the statement  "            var remoteEpisode3 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.German); " is 132.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_higher_quality_before_lower_always,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.SDTV)' Language.French); " is 128.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_higher_quality_before_lower_always,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.German); " is 132.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_higher_score_over_lower_score,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p)' Language.English); " is 135.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_higher_score_over_lower_score,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p)' Language.English); " is 135.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_prefer_and_upgrade,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(1))' Language.English); " is 152.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_prefer_and_upgrade,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(2))' Language.English); " is 152.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_do_not_upgrade,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(1))' Language.English); " is 152.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_do_not_upgrade,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(2))' Language.English); " is 152.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_proper_when_download_propers_is_do_not_prefer,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(1))' Language.English); " is 152.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_proper_when_download_propers_is_do_not_prefer,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(2))' Language.English); " is 152.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_real_when_download_propers_is_do_not_prefer,The length of the statement  "            var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(1' 0))' Language.English); " is 155.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_real_when_download_propers_is_do_not_prefer,The length of the statement  "            var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(1' 1))' Language.English); " is 155.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,QualityAllowedByProfileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QualityAllowedByProfileSpecificationFixture.cs,should_allow_if_quality_is_defined_in_profile,The length of the statement  "            remoteEpisode.Series.QualityProfile.Value.Items = Qualities.QualityFixture.GetDefaultQualities(Quality.DVD' Quality.HDTV720p' Quality.Bluray1080p); " is 147.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,QualityAllowedByProfileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QualityAllowedByProfileSpecificationFixture.cs,should_not_allow_if_quality_is_not_defined_in_profile,The length of the statement  "            remoteEpisode.Series.QualityProfile.Value.Items = Qualities.QualityFixture.GetDefaultQualities(Quality.DVD' Quality.HDTV720p' Quality.Bluray1080p); " is 147.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,QueueSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QueueSpecificationFixture.cs,Setup,The length of the statement  "                                                   .With(r => r.ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD) ' Language = Language.Spanish}) " is 128.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The length of the statement  "            _firstFile = new EpisodeFile { Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 2))' DateAdded = DateTime.Now' Language = Language.English }; " is 162.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The length of the statement  "            _secondFile = new EpisodeFile { Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 2))' DateAdded = DateTime.Now' Language = Language.English }; " is 163.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The length of the statement  "            var singleEpisodeList = new List<Episode> { new Episode { EpisodeFile = _firstFile' EpisodeFileId = 1 }' new Episode { EpisodeFile = null } }; " is 142.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The length of the statement  "            var doubleEpisodeList = new List<Episode> { new Episode { EpisodeFile = _firstFile' EpisodeFileId = 1 }' new Episode { EpisodeFile = _secondFile' EpisodeFileId = 1 }' new Episode { EpisodeFile = null } }; " is 204.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The length of the statement  "                ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }' " is 141.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The length of the statement  "                ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }' " is 141.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,GivenUpgradeForExistingFile,The length of the statement  "                  .Setup(s => s.IsUpgradable(It.IsAny<QualityProfile>()' It.IsAny<LanguageProfile>()' It.IsAny<QualityModel>()' It.IsAny<Language>()' It.IsAny<int>()' It.IsAny<QualityModel>()' It.IsAny<Language>()' It.IsAny<int>())) " is 214.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_true_when_user_invoked_search,The length of the statement  "            Subject.IsSatisfiedBy(new RemoteEpisode()' new SingleEpisodeSearchCriteria { UserInvokedSearch = true }).Accepted.Should().BeTrue(); " is 132.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The length of the statement  "            var singleEpisodeList = new List<Episode> { new Episode { Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 } }; " is 122.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The length of the statement  "                ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }' " is 141.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The length of the statement  "                ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }' " is 141.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The length of the statement  "            _upgradableQuality = new Tuple<QualityModel' Language> (new QualityModel(Quality.SDTV' new Revision(version: 1))' Language.English); " is 132.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The length of the statement  "            _notupgradableQuality = new Tuple<QualityModel' Language> (new QualityModel(Quality.HDTV1080p' new Revision(version: 2))' Language.English); " is 140.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,GivenMostRecentForEpisode,The length of the statement  "                  .Returns(new History.History { DownloadId = downloadId' Quality = quality.Item1' Date = date' EventType = eventType' Language = quality.Item2 }); " is 145.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_true_if_latest_history_item_is_not_grabbed,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow' HistoryEventType.DownloadFailed); " is 131.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_true_if_latest_history_item_is_older_than_twelve_hours,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow.AddHours(-13)' HistoryEventType.Grabbed); " is 138.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_upgradable_if_only_episode_is_upgradable,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_upgradable_if_both_episodes_are_upgradable,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_upgradable_if_both_episodes_are_upgradable,The length of the statement  "            GivenMostRecentForEpisode(SECOND_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 122.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_both_episodes_are_not_upgradable,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 124.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_both_episodes_are_not_upgradable,The length of the statement  "            GivenMostRecentForEpisode(SECOND_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 125.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_not_upgradable_if_only_first_episodes_is_upgradable,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_not_upgradable_if_only_first_episodes_is_upgradable,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 124.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_not_upgradable_if_only_second_episodes_is_upgradable,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 124.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_not_upgradable_if_only_second_episodes_is_upgradable,The length of the statement  "            GivenMostRecentForEpisode(SECOND_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 122.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_episode_is_of_same_quality_as_existing,The length of the statement  "            _fakeSeries.QualityProfile = new QualityProfile { Cutoff = Quality.Bluray1080p.Id' Items = Qualities.QualityFixture.GetDefaultQualities() }; " is 140.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_episode_is_of_same_quality_as_existing,The length of the statement  "            _upgradableQuality = new Tuple<QualityModel' Language>(new QualityModel(Quality.WEBDL1080p' new Revision(version: 1))' Language.English); " is 137.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_episode_is_of_same_quality_as_existing,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_upgradable_if_episode_is_of_same_quality_as_existing_but_new_has_better_language,The length of the statement  "            _fakeSeries.QualityProfile = new QualityProfile { Cutoff = Quality.WEBDL1080p.Id' Items = Qualities.QualityFixture.GetDefaultQualities() }; " is 139.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_upgradable_if_episode_is_of_same_quality_as_existing_but_new_has_better_language,The length of the statement  "            _upgradableQuality = new Tuple<QualityModel' Language>(new QualityModel(Quality.WEBDL1080p' new Revision(version: 1))' Language.English); " is 137.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_be_upgradable_if_episode_is_of_same_quality_as_existing_but_new_has_better_language,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_cutoff_already_met,The length of the statement  "            _fakeSeries.QualityProfile = new QualityProfile { Cutoff = Quality.WEBDL1080p.Id' Items = Qualities.QualityFixture.GetDefaultQualities() }; " is 139.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_cutoff_already_met,The length of the statement  "            _upgradableQuality = new Tuple<QualityModel' Language>(new QualityModel(Quality.WEBDL1080p' new Revision(version: 1))' Language.Spanish); " is 137.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_not_be_upgradable_if_cutoff_already_met,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _upgradableQuality' DateTime.UtcNow' HistoryEventType.Grabbed); " is 121.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_latest_history_item_is_only_one_hour_old,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow.AddHours(-1)' HistoryEventType.Grabbed); " is 137.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_latest_history_has_a_download_id_and_cdh_is_disabled,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' "test"' _upgradableQuality' DateTime.UtcNow.AddDays(-100)' HistoryEventType.Grabbed); " is 129.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_cutoff_already_met_and_cdh_is_disabled,The length of the statement  "            _fakeSeries.QualityProfile = new QualityProfile { Cutoff = Quality.WEBDL1080p.Id' Items = Qualities.QualityFixture.GetDefaultQualities() }; " is 139.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_cutoff_already_met_and_cdh_is_disabled,The length of the statement  "            _upgradableQuality = new Tuple<QualityModel' Language>(new QualityModel(Quality.WEBDL1080p' new Revision(version: 1))' Language.Spanish); " is 137.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_cutoff_already_met_and_cdh_is_disabled,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' "test"' _upgradableQuality' DateTime.UtcNow.AddDays(-100)' HistoryEventType.Grabbed); " is 129.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_only_episode_is_not_upgradable_and_cdh_is_disabled,The length of the statement  "            GivenMostRecentForEpisode(FIRST_EPISODE_ID' "test"' _notupgradableQuality' DateTime.UtcNow.AddDays(-100)' HistoryEventType.Grabbed); " is 132.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,Setup,The length of the statement  "            _firstFile = new EpisodeFile { Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 1))' DateAdded = DateTime.Now }; " is 133.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,Setup,The length of the statement  "            _secondFile = new EpisodeFile { Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 1))' DateAdded = DateTime.Now }; " is 134.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,Setup,The length of the statement  "            var singleEpisodeList = new List<Episode> { new Episode { EpisodeFile = _firstFile' EpisodeFileId = 1 }' new Episode { EpisodeFile = null } }; " is 142.
Long Statement,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,Setup,The length of the statement  "            var doubleEpisodeList = new List<Episode> { new Episode { EpisodeFile = _firstFile' EpisodeFileId = 1 }' new Episode { EpisodeFile = _secondFile' EpisodeFileId = 1 }' new Episode { EpisodeFile = null } }; " is 204.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,GivenSuccessfulImport,The length of the statement  "                .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_mark_as_imported_if_all_episodes_were_imported,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_not_mark_as_imported_if_all_files_were_rejected,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_not_mark_as_imported_if_no_episodes_were_parsed,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_not_mark_as_imported_if_all_files_were_skipped,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_mark_as_imported_if_all_episodes_were_imported_but_extra_files_were_not,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_mark_as_failed_if_some_of_episodes_were_not_imported,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_mark_as_imported_if_the_download_can_be_tracked_using_the_source_seriesid,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_not_mark_as_imported_if_the_download_cannot_be_tracked_using_the_source_title_as_it_was_initiated_externally,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,should_mark_as_import_title_mismatch_if_ignore_warnings_is_true,The length of the statement  "                  .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,AssertNoAttemptedImport,The length of the statement  "                .Verify(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())' Times.Never()); " is 139.
Long Statement,NzbDrone.Core.Test.Download,CompletedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\CompletedDownloadServiceFixture.cs,AssertCompletedDownload,The length of the statement  "                .Verify(v => v.ProcessPath(_trackedDownload.DownloadItem.OutputPath.FullPath' ImportMode.Auto' _trackedDownload.RemoteEpisode.Series' _trackedDownload.DownloadItem)' Times.Once()); " is 180.
Long Statement,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_not_add_to_pending_if_episode_was_grabbed,The length of the statement  "            Mocker.GetMock<IPendingReleaseService>().Verify(v => v.AddMany(It.IsAny<List<Tuple<DownloadDecision' PendingReleaseReason>>>())' Times.Never()); " is 144.
Long Statement,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_add_to_pending_even_if_already_added_to_pending,The length of the statement  "            Mocker.GetMock<IPendingReleaseService>().Verify(v => v.AddMany(It.IsAny<List<Tuple<DownloadDecision' PendingReleaseReason>>>())' Times.Once()); " is 143.
Long Statement,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_not_add_to_failed_if_failed_for_a_different_protocol,The length of the statement  "            Mocker.GetMock<IDownloadService>().Setup(s => s.DownloadReport(It.Is<RemoteEpisode>(r => r.Release.DownloadProtocol == DownloadProtocol.Usenet))) " is 145.
Long Statement,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_not_add_to_failed_if_failed_for_a_different_protocol,The length of the statement  "            Mocker.GetMock<IDownloadService>().Verify(v => v.DownloadReport(It.Is<RemoteEpisode>(r => r.Release.DownloadProtocol == DownloadProtocol.Usenet))' Times.Once()); " is 161.
Long Statement,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_not_add_to_failed_if_failed_for_a_different_protocol,The length of the statement  "            Mocker.GetMock<IDownloadService>().Verify(v => v.DownloadReport(It.Is<RemoteEpisode>(r => r.Release.DownloadProtocol == DownloadProtocol.Torrent))' Times.Once()); " is 162.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,TorrentBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\TorrentBlackholeFixture.cs,CreateRemoteEpisode,The length of the statement  "            torrentInfo.MagnetUrl = "magnet:?xt=urn:btih:755248817d32b00cc853e633ecdc48e4c21bff15&dn=Series.S05E10.PROPER.HDTV.x264-DEFiNE%5Brartv%5D&tr=http%3A%2F%2Ftracker.trackerfix.com%3A80%2Fannounce&tr=udp%3A%2F%2F9.rarbg.me%3A2710&tr=udp%3A%2F%2F9.rarbg.to%3A2710"; " is 260.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,TorrentBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\TorrentBlackholeFixture.cs,Download_should_save_magnet_if_enabled,The length of the statement  "            Mocker.GetMock<IHttpClient>().Verify(c => c.Get(It.Is<HttpRequest>(v => v.Url.FullUri == _downloadUrl))' Times.Never()); " is 120.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,TorrentBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\TorrentBlackholeFixture.cs,Download_should_save_magnet_using_specified_extension,The length of the statement  "            Mocker.GetMock<IHttpClient>().Verify(c => c.Get(It.Is<HttpRequest>(v => v.Url.FullUri == _downloadUrl))' Times.Never()); " is 120.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,TorrentBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\TorrentBlackholeFixture.cs,Download_should_not_save_magnet_if_disabled,The length of the statement  "            Mocker.GetMock<IHttpClient>().Verify(c => c.Get(It.Is<HttpRequest>(v => v.Url.FullUri == _downloadUrl))' Times.Never()); " is 120.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,TorrentBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\TorrentBlackholeFixture.cs,Download_should_replace_illegal_characters_in_title,The length of the statement  "            var expectedFilename = Path.Combine(_blackholeFolder' "Saturday Night Live - S38E08 - Jeremy Renner+Maroon 5 [SDTV]" + Path.GetExtension(_filePath)); " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,UsenetBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\UsenetBlackholeFixture.cs,Download_should_replace_illegal_characters_in_title,The length of the statement  "            var expectedFilename = Path.Combine(_blackholeFolder' "Saturday Night Live - S38E08 - Jeremy Renner+Maroon 5 [SDTV]" + Path.GetExtension(_filePath)); " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests,PneumaticProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\PneumaticProviderFixture.cs,WithFailedDownload,The length of the statement  "            Mocker.GetMock<IHttpClient>().Setup(c => c.DownloadFile(It.IsAny<string>()' It.IsAny<string>())).Throws(new WebException()); " is 124.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests,PneumaticProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\PneumaticProviderFixture.cs,should_replace_illegal_characters_in_title,The length of the statement  "            var expectedFilename = Path.Combine(_pneumaticFolder' "Saturday Night Live - S38E08 - Jeremy Renner+Maroon 5 [SDTV].nzb"); " is 122.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,SerialNumberProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\SerialNumberProviderFixture.cs,should_return_hashedserialnumber,The length of the statement  "            // This hash should remain the same for 'serial'' so don't update the test if you change HashConverter' fix the code instead. " is 125.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,SharedFolderResolverFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\SharedFolderResolverFixture.cs,should_throw_when_cannot_resolve_shared_folder,The length of the statement  "            Assert.Throws(Is.InstanceOf<Exception>()' () => Subject.RemapToFullPath(new OsPath("/unknownFolder")' _settings' _serialNumber)); " is 129.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,GivenSuccessfulDownload,The length of the statement  "                  .Setup(s => s.AddTaskFromData(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<DownloadStationSettings>())) " is 127.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Download_with_category_should_force_directory,The length of the statement  "                  .Verify(v => v.AddTaskFromUrl(It.IsAny<string>()' $"{_defaultDestination}/{_category}"' It.IsAny<DownloadStationSettings>())' Times.Once()); " is 140.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,GivenSuccessfulDownload,The length of the statement  "                  .Setup(s => s.AddTaskFromData(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<DownloadStationSettings>())) " is 127.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Download_with_TvDirectory_should_force_directory,The length of the statement  "                  .Verify(v => v.AddTaskFromData(It.IsAny<byte[]>()' It.IsAny<string>()' _tvDirectory' It.IsAny<DownloadStationSettings>())' Times.Once()); " is 137.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Download_with_category_should_force_directory,The length of the statement  "                  .Verify(v => v.AddTaskFromData(It.IsAny<byte[]>()' It.IsAny<string>()' $"{_defaultDestination}/{_category}"' It.IsAny<DownloadStationSettings>())' Times.Once()); " is 161.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Download_without_TvDirectory_and_Category_should_use_default,The length of the statement  "                  .Verify(v => v.AddTaskFromData(It.IsAny<byte[]>()' It.IsAny<string>()' null' It.IsAny<DownloadStationSettings>())' Times.Once()); " is 129.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,GivenFailedDownload,The length of the statement  "                .Setup(s => s.DownloadNzb(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<bool>()' It.IsAny<NzbgetSettings>())) " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,GivenSuccessfulDownload,The length of the statement  "                .Setup(s => s.DownloadNzb(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<bool>()' It.IsAny<NzbgetSettings>())) " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,should_report_scriptstatus_failure_as_failed,The length of the statement  "            // TODO: We would love to have a way to distinguish between scripts reporting video corruption' or some internal script error. " is 126.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,should_test_api_version,The length of the statement  "                .Returns(new List<NzbVortexGroup> { new NzbVortexGroup { GroupName = ((NzbVortexSettings)Subject.Definition.Settings).TvCategory } }); " is 134.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,Download_should_not_fail_if_top_priority_not_available,The length of the statement  "                  .Throws(new HttpException(new HttpResponse(new HttpRequest("http://me.local/")' new HttpHeader()' new byte[0]' System.Net.HttpStatusCode.Forbidden))); " is 150.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.RTorrentTests,RTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\RTorrentTests\RTorrentFixture.cs,GivenSuccessfulDownload,The length of the statement  "                  .Setup(s => s.AddTorrentFromUrl(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<RTorrentPriority>()' It.IsAny<string>()' It.IsAny<RTorrentSettings>())) " is 152.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.RTorrentTests,RTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\RTorrentTests\RTorrentFixture.cs,GivenSuccessfulDownload,The length of the statement  "                  .Setup(s => s.AddTorrentFromFile(It.IsAny<string>()' It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<RTorrentPriority>()' It.IsAny<string>()' It.IsAny<RTorrentSettings>())) " is 173.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,GivenFailedDownload,The length of the statement  "                .Setup(s => s.DownloadNzb(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<SabnzbdSettings>())) " is 132.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,GivenSuccessfulDownload,The length of the statement  "                .Setup(s => s.DownloadNzb(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<SabnzbdSettings>())) " is 132.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Download_should_use_clean_title,The length of the statement  "                .Verify(v => v.DownloadNzb(It.IsAny<byte[]>()' filename' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<SabnzbdSettings>())' Times.Once()); " is 138.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Download_should_use_sabRecentTvPriority_when_recentEpisode_is_true,The length of the statement  "                    .Setup(s => s.DownloadNzb(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' (int)SabnzbdPriority.High' It.IsAny<SabnzbdSettings>())) " is 142.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Download_should_use_sabRecentTvPriority_when_recentEpisode_is_true,The length of the statement  "                  .Verify(v => v.DownloadNzb(It.IsAny<byte[]>()' It.IsAny<string>()' It.IsAny<string>()' (int)SabnzbdPriority.High' It.IsAny<SabnzbdSettings>())' Times.Once()); " is 158.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,Download_with_TvDirectory_should_force_directory,The length of the statement  "                  .Verify(v => v.AddTorrentFromData(It.IsAny<byte[]>()' @"C:/Downloads/Finished/sonarr"' It.IsAny<TransmissionSettings>())' Times.Once()); " is 136.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,Download_with_category_should_force_directory,The length of the statement  "                  .Verify(v => v.AddTorrentFromData(It.IsAny<byte[]>()' @"C:/Downloads/Finished/transmission/sonarr"' It.IsAny<TransmissionSettings>())' Times.Once()); " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,Download_with_category_should_not_have_double_slashes,The length of the statement  "                  .Verify(v => v.AddTorrentFromData(It.IsAny<byte[]>()' @"C:/Downloads/Finished/transmission/sonarr"' It.IsAny<TransmissionSettings>())' Times.Once()); " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.VuzeTests,VuzeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\VuzeTests\VuzeFixture.cs,Download_with_TvDirectory_should_force_directory,The length of the statement  "                .Verify(v => v.AddTorrentFromData(It.IsAny<byte[]>()' @"C:/Downloads/Finished/sonarr"' It.IsAny<TransmissionSettings>())' Times.Once()); " is 136.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.VuzeTests,VuzeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\VuzeTests\VuzeFixture.cs,Download_with_category_should_force_directory,The length of the statement  "                  .Verify(v => v.AddTorrentFromData(It.IsAny<byte[]>()' @"C:/Downloads/Finished/transmission/sonarr"' It.IsAny<TransmissionSettings>())' Times.Once()); " is 149.
Long Statement,NzbDrone.Core.Test.Download.DownloadClientTests.VuzeTests,VuzeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\VuzeTests\VuzeFixture.cs,Download_with_category_should_not_have_double_slashes,The length of the statement  "                  .Verify(v => v.AddTorrentFromData(It.IsAny<byte[]>()' @"C:/Downloads/Finished/transmission/sonarr"' It.IsAny<TransmissionSettings>())' Times.Once()); " is 149.
Long Statement,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,AddFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\AddFixture.cs,should_not_add_if_it_is_the_same_release_from_the_same_indexer_twice,The length of the statement  "            GivenHeldRelease(_release.Title' _release.Indexer' _release.PublishDate' PendingReleaseReason.DownloadClientUnavailable); " is 121.
Long Statement,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,AddFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\AddFixture.cs,should_remove_duplicate_if_it_is_the_same_release_from_the_same_indexer_twice,The length of the statement  "            GivenHeldRelease(_release.Title' _release.Indexer' _release.PublishDate' PendingReleaseReason.DownloadClientUnavailable); " is 121.
Long Statement,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,AssertRemoved,The length of the statement  "            Mocker.GetMock<IPendingReleaseRepository>().Verify(c => c.DeleteMany(It.Is<IEnumerable<int>>(s => s.SequenceEqual(ids)))); " is 122.
Long Statement,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_track_downloads_using_the_source_title_if_it_cannot_be_found_using_the_download_title,The length of the statement  "                  .Setup(s => s.Map(It.Is<ParsedEpisodeInfo>(i => i.SeasonNumber == 1 && i.SeriesTitle == "TV Series")' It.IsAny<int>()' It.IsAny<IEnumerable<int>>())) " is 149.
Long Statement,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The length of the statement  "                  .Setup(s => s.Map(It.Is<ParsedEpisodeInfo>(i => i.SeasonNumber == 0 && i.SeriesTitle == "TV Series")' It.IsAny<int>()' It.IsAny<IEnumerable<int>>())) " is 149.
Long Statement,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The length of the statement  "                  .Setup(s => s.ParseSpecialEpisodeTitle(It.IsAny<ParsedEpisodeInfo>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<int>()' null)) " is 130.
Long Statement,NzbDrone.Core.Test.Framework,CoreTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Framework\CoreTest.cs,UseRealHttp,The length of the statement  "            Mocker.SetConstant<IHttpDispatcher>(new ManagedHttpDispatcher(Mocker.Resolve<IHttpProxySettingsProvider>()' Mocker.Resolve<ICreateManagedWebProxy>()' Mocker.Resolve<UserAgentBuilder>()' Mocker.Resolve<IPlatformInfo>()' TestLogger)); " is 232.
Long Statement,NzbDrone.Core.Test.Framework,CoreTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Framework\CoreTest.cs,UseRealHttp,The length of the statement  "            Mocker.SetConstant<IHttpClient>(new HttpClient(new IHttpRequestInterceptor[0]' Mocker.Resolve<CacheManager>()' Mocker.Resolve<RateLimitService>()' Mocker.Resolve<IHttpDispatcher>()' Mocker.Resolve<UserAgentBuilder>()' TestLogger)); " is 231.
Long Statement,NzbDrone.Core.Test.HealthCheck,HealthCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\HealthCheckFixture.cs,should_format_wiki_url,The length of the statement  "            var subject = new NzbDrone.Core.HealthCheck.HealthCheck(typeof(HealthCheckBase)' HealthCheckResult.Warning' message' wikiFragment); " is 131.
Long Statement,NzbDrone.Core.Test.HistoryTests,HistoryServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HistoryTests\HistoryServiceFixture.cs,should_use_file_name_for_source_title_if_scene_name_is_null,The length of the statement  "                .Verify(v => v.Insert(It.Is<History.History>(h => h.SourceTitle == Path.GetFileNameWithoutExtension(localEpisode.Path)))); " is 122.
Long Statement,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,getscenenames_should_use_seasonnumber_if_no_scene_seasonnumber_is_available,The length of the statement  "                  .Verify(v => v.GetSceneNames(_xemSeries.Id' It.Is<List<int>>(l => l.Contains(7))' It.Is<List<int>>(l => l.Contains(7)))' Times.Once()); " is 135.
Long Statement,NzbDrone.Core.Test.IndexerSearchTests,SeriesSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\SeriesSearchServiceFixture.cs,Setup,The length of the statement  "                  .Returns(new ProcessedDecisions(new List<DownloadDecision>()' new List<DownloadDecision>()' new List<DownloadDecision>())); " is 123.
Long Statement,NzbDrone.Core.Test.IndexerSearchTests,SeriesSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\SeriesSearchServiceFixture.cs,should_only_include_monitored_seasons,The length of the statement  "                .Verify(v => v.SeasonSearch(_series.Id' It.IsAny<int>()' false' true' false)' Times.Exactly(_series.Seasons.Count(s => s.Monitored))); " is 134.
Long Statement,NzbDrone.Core.Test.IndexerSearchTests,SeriesSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\SeriesSearchServiceFixture.cs,should_start_with_lower_seasons_first,The length of the statement  "                  .Callback<int' int' bool' bool' bool>((seriesId' seasonNumber' missingOnly' userInvokedSearch' interactiveSearch) => seasonOrder.Add(seasonNumber)); " is 148.
Long Statement,NzbDrone.Core.Test.IndexerTests.BitMeTvTests,BitMeTvFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BitMeTvTests\BitMeTvFixture.cs,should_parse_recent_feed_from_BitMeTv,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://www.bitmetv.org/download.php/12/Total.Divas.S02E08.HDTV.x264-CRiMSON.torrent"); " is 123.
Long Statement,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("https://broadcasthe.net/torrents.php?action=download&id=123&authkey=123&torrent_pass=123"); " is 128.
Long Statement,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_back_off_api_limit_reached,The length of the statement  "                .Returns<HttpRequest>(r => new HttpResponse(r' new HttpHeader()' new byte[0]' System.Net.HttpStatusCode.ServiceUnavailable)); " is 125.
Long Statement,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_replace_https_http_as_needed,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://broadcasthe.net/torrents.php?action=download&id=123&authkey=123&torrent_pass=123"); " is 127.
Long Statement,NzbDrone.Core.Test.IndexerTests.IPTorrentsTests,IPTorrentsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IPTorrentsTests\IPTorrentsFixture.cs,GivenOldFeedFormat,The length of the statement  "                Settings = new IPTorrentsSettings() {  BaseUrl = "https://iptorrents.com/torrents/rss?u=snip;tp=snip;3;80;93;37;download" } " is 123.
Long Statement,NzbDrone.Core.Test.IndexerTests.IPTorrentsTests,IPTorrentsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IPTorrentsTests\IPTorrentsFixture.cs,GivenNewFeedFormat,The length of the statement  "                Settings = new IPTorrentsSettings() {  BaseUrl = "https://iptorrents.com/t.rss?u=USERID;tp=APIKEY;3;80;93;37;download" } " is 120.
Long Statement,NzbDrone.Core.Test.IndexerTests.IPTorrentsTests,IPTorrentsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IPTorrentsTests\IPTorrentsFixture.cs,should_parse_recent_feed_from_IPTorrents,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://iptorrents.com/download.php/1234/24.S03E12.720p.WEBRip.h264-DRAWER.torrent?torrent_pass=abcd"); " is 139.
Long Statement,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("magnet:?xt=urn:btih:d8bde635f573acb390c7d7e7efc1556965fdc802&dn=Sense8.S01E01.WEBRip.x264-FGT&tr=http%3A%2F%2Ftracker.trackerfix.com%3A80%2Fannounce&tr=udp%3A%2F%2F9.rarbg.me%3A2710&tr=udp%3A%2F%2F9.rarbg.to%3A2710&tr=udp%3A%2F%2Fopen.demonii.com%3A1337%2Fannounce"); " is 304.
Long Statement,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The length of the statement  "            torrentInfo.InfoUrl.Should().Be("https://torrentapi.org/redirect_to_info.php?token=i5cx7b9agd&p=8_6_4_4_5_6__d8bde635f5&app_id=Sonarr"); " is 136.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentleechTests,TorrentleechFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentleechTests\TorrentleechFixture.cs,should_parse_recent_feed_from_Torrentleech,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://www.torrentleech.org/rss/download/513575/1234/Classic.Car.Rescue.S02E04.720p.HDTV.x264-C4TV.torrent"); " is 146.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TestTorrentRssIndexer,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TestTorrentRssIndexer.cs,GetStandardLayout,The length of the statement  "                   + "${threadid:fixedLength=True:padding=3:padCharacter= }|" + "${level:fixedLength=True:padding=5:padCharacter= :upperCase=True}|" " is 129.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TestTorrentRssIndexer,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TestTorrentRssIndexer.cs,GetStandardLayout,The length of the statement  "                   + "${callsite:fileName=True:className=False:methodName=True:includeSourcePath=False:padding=50:padCharacter= }|" + "${message}" " is 127.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TestTorrentRssIndexer,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TestTorrentRssIndexer.cs,GetStandardLayout,The length of the statement  "                   + "  ${exception:maxInnerExceptionLevel=3:format=Method'Message'StackTrace:innerFormat=Method'Message'StackTrace:separator=\r\n:innerExceptionSeparator=\r\n}"; " is 159.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_Ezrss,The length of the statement  "            torrentInfo.InfoUrl.Should().Be("http://eztv.it/ep/58439/s4c-i-grombil-cyfandir-pell-american-interior-pdtv-x264-mvgroup/"); " is 124.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_Ezrss,The length of the statement  "            torrentInfo.MagnetUrl.Should().Be("magnet:?xt=urn:btih:ED6E7P5IQJZCOSWGOH4FPTAVCRHJVKB6&dn=S4C.I.Grombil.Cyfandir.Pell.American.Interior.PDTV.x264-MVGroup"); " is 157.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ShowRSS_info,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("magnet:?xt=urn:btih:96CD620BEDA3EFD7C4D7746EF94549D03A2EB13B&dn=The+Voice+S08E25+WEBRip+x264+WNN&tr=udp://tracker.coppersurfer.tk:6969/announce&tr=udp://tracker.leechers-paradise.org:6969&tr=udp://open.demonii.com:1337"); " is 258.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ShowRSS_info,The length of the statement  "            torrentInfo.MagnetUrl.Should().Be("magnet:?xt=urn:btih:96CD620BEDA3EFD7C4D7746EF94549D03A2EB13B&dn=The+Voice+S08E25+WEBRip+x264+WNN&tr=udp://tracker.coppersurfer.tk:6969/announce&tr=udp://tracker.leechers-paradise.org:6969&tr=udp://open.demonii.com:1337"); " is 256.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_Doki,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://tracker.anime-index.org/download.php?id=82d8ad84403e01a7786130905ca169a3429e657f&f=%5BDoki%5D+PriPara+-+50+%28848x480+h264+AAC%29+%5B6F0B49FD%5D.mkv.torrent"); " is 203.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ExtraTorrents,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://ac.me/download/4722030/One.Piece.E334.D+ED.720p.HDTV.x264-W4F-%3D%7BSPARROW%7D%3D-.torrent"); " is 137.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_LimeTorrents,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://itorrents.org/torrent/51C578C9823DD58F6EEA287C368ED935843D63AB.torrent?title=The-Expanse-2x04-(720p-HDTV-x264-SVA)[VTV]"); " is 166.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_LimeTorrents,The length of the statement  "            torrentInfo.CommentUrl.Should().Be("http://www.limetorrents.cc/The-Expanse-2x04-(720p-HDTV-x264-SVA)[VTV]-torrent-8643587.html"); " is 129.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AnimeTosho_without_size,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://storage.animetosho.org/torrents/85a570f25067f69b3c83b901ce6c00c491345288/%5BFFF%5D%20Ore%20Monogatari%21%21%20-%20Vol.01%20%5BBD%5D%5B720p-AAC%5D.torrent"); " is 200.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_multi_enclosure_from_AnimeTosho,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://storage.animetosho.org/torrents/4b58360143d59a55cbd922397a3eaa378165f3ff/DAYS%20-%2005%20%281280x720%20HEVC2%20AAC%29.torrent"); " is 172.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AlphaRatio,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("https://alpharatio.cc/torrents.php?action=download&authkey=private_auth_key&torrent_pass=private_torrent_pass&id=465831"); " is 159.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_EveolutionWorld_without_size,The length of the statement  "            torrentInfo.Title.Should().Be("[TVShow --> TVShow Bluray 720p] Fargo S01 Complete Season 1 720p BRRip DD5.1 x264-PSYPHER [SEEDERS (3)/LEECHERS (0)]"); " is 150.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_EveolutionWorld_without_size,The length of the statement  "            torrentInfo.DownloadUrl.Should().Be("http://ew.pw/download.php?id=dea071a7a62a0d662538d46402fb112f30b8c9fa&f=Fargo%20S01%20Complete%20Season%201%20720p%20BRRip%20DD5.1%20x264-PSYPHER.torrent&auth=secret"); " is 205.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The length of the statement  "            releaseInfo.MagnetUrl.Should().Be("magnet:?xt=urn:btih:9fb267cff5ae5603f07a347676ec3bf3e35f75e1&dn=Game+of+Thrones+S05E02+HDTV+x264-Xclusive+%5Beztv%5D&tr=udp:%2F%2Fopen.demonii.com:1337&tr=udp:%2F%2Ftracker.coppersurfer.tk:6969&tr=udp:%2F%2Ftracker.leechers-paradise.org:6969&tr=udp:%2F%2Fexodus.desync.com:6969"); " is 315.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The length of the statement  "            releaseInfo.DownloadUrl.Should().Be("magnet:?xt=urn:btih:9fb267cff5ae5603f07a347676ec3bf3e35f75e1&dn=Game+of+Thrones+S05E02+HDTV+x264-Xclusive+%5Beztv%5D&tr=udp:%2F%2Fopen.demonii.com:1337&tr=udp:%2F%2Ftracker.coppersurfer.tk:6969&tr=udp:%2F%2Ftracker.leechers-paradise.org:6969&tr=udp:%2F%2Fexodus.desync.com:6969"); " is 317.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The length of the statement  "            releaseInfo.InfoUrl.Should().Be("https://thepiratebay.se/torrent/11811366/Series_Title_S05E02_HDTV_x264-Xclusive_%5Beztv%5D"); " is 126.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The length of the statement  "            releaseInfo.CommentUrl.Should().Be("https://thepiratebay.se/torrent/11811366/Series_Title_S05E02_HDTV_x264-Xclusive_%5Beztv%5D"); " is 129.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_animetosho,The length of the statement  "            releaseInfo.InfoUrl.Should().Be("https://localhost/view/finfags-_frame_arms_girl_07_-1280x720_tv_aac-_-1262b6f7-mkv.123451"); " is 125.
Long Statement,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_animetosho,The length of the statement  "            releaseInfo.CommentUrl.Should().Be("https://localhost/view/finfags-_frame_arms_girl_07_-1280x720_tv_aac-_-1262b6f7-mkv.123451"); " is 128.
Long Statement,NzbDrone.Core.Test.Languages,LanguageProfileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileRepositoryFixture.cs,should_be_able_to_read_and_write,The length of the statement  "                    Languages = Language.All.OrderByDescending(l => l.Name).Select(l => new LanguageProfileItem {Language = l' Allowed = l == Language.English}).ToList()' " is 150.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,Setup,The length of the statement  "                .Setup(v => v.ProcessPath(It.IsAny<string>()' It.IsAny<ImportMode>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>())) " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_skip_import_if_dronefactory_doesnt_exist,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessRootFolder(It.IsAny<DirectoryInfo>())' Times.Never()); " is 126.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_process_folder_if_downloadclientid_is_not_specified,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessPath(It.IsAny<string>()' ImportMode.Auto' null' null)' Times.Once()); " is 141.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_process_file_if_downloadclientid_is_not_specified,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessPath(It.IsAny<string>()' ImportMode.Auto' null' null)' Times.Once()); " is 141.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_process_folder_with_downloadclientitem_if_available,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessPath(_downloadFolder' ImportMode.Auto' _trackedDownload.RemoteEpisode.Series' _trackedDownload.DownloadItem)' Times.Once()); " is 196.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_process_folder_without_downloadclientitem_if_not_available,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessPath(_downloadFolder' ImportMode.Auto' null' null)' Times.Once()); " is 138.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_warn_if_neither_folder_or_file_exists,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessPath(It.IsAny<string>()' ImportMode.Auto' null' null)' Times.Never()); " is 142.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesCommandServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesCommandServiceFixture.cs,should_override_import_mode,The length of the statement  "            Mocker.GetMock<IDownloadedEpisodesImportService>().Verify(c => c.ProcessPath(It.IsAny<string>()' ImportMode.Copy' null' null)' Times.Once()); " is 141.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,GivenSuccessfulImport,The length of the statement  "                  .Setup(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' null' true' true)) " is 129.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,GivenSuccessfulImport,The length of the statement  "                  .Setup(s => s.Import(It.IsAny<List<ImportDecision>>()' It.IsAny<bool>()' It.IsAny<DownloadClientItem>()' It.IsAny<ImportMode>())) " is 129.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_skip_if_no_series_found,The length of the statement  "                .Verify(c => c.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' It.IsAny<ParsedEpisodeInfo>()' It.IsAny<bool>()' true)' " is 167.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_folder_if_files_were_imported_and_video_files_remain,The length of the statement  "                  .Setup(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' null' true' true)) " is 129.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_delete_folder_if_files_were_imported_and_only_sample_files_remain,The length of the statement  "                  .Setup(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' null' true' true)) " is 129.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_if_there_is_large_rar_file,The length of the statement  "                  .Setup(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' null' true' true)) " is 129.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_use_folder_if_folder_import,The length of the statement  "            var folderName = @"C:\media\ba09030e-1234-1234-1234-123456789abc\[HorribleSubs] Maria the Virgin Witch - 09 [720p]".AsOsAgnostic(); " is 131.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_use_folder_if_folder_import,The length of the statement  "            var fileName = @"C:\media\ba09030e-1234-1234-1234-123456789abc\[HorribleSubs] Maria the Virgin Witch - 09 [720p]\[HorribleSubs] Maria the Virgin Witch - 09 [720p].mkv".AsOsAgnostic(); " is 183.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_use_folder_if_folder_import,The length of the statement  "                  .Verify(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' It.Is<ParsedEpisodeInfo>(v => v.AbsoluteEpisodeNumbers.First() == 9)' true)' Times.Once()); " is 203.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_use_folder_if_file_import,The length of the statement  "            var fileName = @"C:\media\ba09030e-1234-1234-1234-123456789abc\Torrents\[HorribleSubs] Maria the Virgin Witch - 09 [720p].mkv".AsOsAgnostic(); " is 142.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_use_folder_if_file_import,The length of the statement  "                  .Verify(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' null' true)' Times.Once()); " is 139.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_process_if_file_and_folder_do_not_exist,The length of the statement  "            var folderName = @"C:\media\ba09030e-1234-1234-1234-123456789abc\[HorribleSubs] Maria the Virgin Witch - 09 [720p]".AsOsAgnostic(); " is 131.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_if_no_files_were_imported,The length of the statement  "                  .Setup(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' null' true' true)) " is 129.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_folder_after_import,The length of the statement  "            Subject.ProcessPath(_droneFactory' ImportMode.Auto' _trackedDownload.RemoteEpisode.Series' _trackedDownload.DownloadItem); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_delete_folder_if_importmode_move,The length of the statement  "            Subject.ProcessPath(_droneFactory' ImportMode.Move' _trackedDownload.RemoteEpisode.Series' _trackedDownload.DownloadItem); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_folder_if_importmode_copy,The length of the statement  "            Subject.ProcessPath(_droneFactory' ImportMode.Copy' _trackedDownload.RemoteEpisode.Series' _trackedDownload.DownloadItem); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,VerifyNoImport,The length of the statement  "            Mocker.GetMock<IImportApprovedEpisodes>().Verify(c => c.Import(It.IsAny<List<ImportDecision>>()' true' null' ImportMode.Auto)' " is 126.
Long Statement,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,VerifyImport,The length of the statement  "            Mocker.GetMock<IImportApprovedEpisodes>().Verify(c => c.Import(It.IsAny<List<ImportDecision>>()' true' null' ImportMode.Auto)' " is 126.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,GivenNewDownload,The length of the statement  "            _approvedDecisions.ForEach(a => a.LocalEpisode.Path = Path.Combine(_downloadClientItem.OutputPath.ToString()' Path.GetFileName(a.LocalEpisode.Path))); " is 150.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_nzb_title_as_scene_name,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.SceneName == _downloadClientItem.Title))); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_not_use_nzb_title_as_scene_name_if_full_season,The length of the statement  "            _approvedDecisions.First().LocalEpisode.Path = Path.Combine(_downloadClientItem.OutputPath.ToString()' "malcolm.in.the.middle.s02e23.dvdrip.xvid-ingot.mkv"); " is 157.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_not_use_nzb_title_as_scene_name_if_full_season,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.SceneName == "malcolm.in.the.middle.s02e23.dvdrip.xvid-ingot"))); " is 145.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_file_name_as_scenename_only_if_it_looks_like_scenename,The length of the statement  "            _approvedDecisions.First().LocalEpisode.Path = Path.Combine(_downloadClientItem.OutputPath.ToString()' "malcolm.in.the.middle.s02e23.dvdrip.xvid-ingot.mkv"); " is 157.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_file_name_as_scenename_only_if_it_looks_like_scenename,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.SceneName == "malcolm.in.the.middle.s02e23.dvdrip.xvid-ingot"))); " is 145.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_import_larger_files_first,The length of the statement  "            results.Should().ContainSingle(d => d.Result == ImportResultType.Imported && d.ImportDecision.LocalEpisode.Size == fileDecision.LocalEpisode.Size); " is 147.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_copy_when_cannot_move_files_downloads,The length of the statement  "                  .Verify(v => v.UpgradeEpisodeFile(It.IsAny<EpisodeFile>()' _approvedDecisions.First().LocalEpisode' true)' Times.Once()); " is 121.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_override_importmode,The length of the statement  "                  .Verify(v => v.UpgradeEpisodeFile(It.IsAny<EpisodeFile>()' _approvedDecisions.First().LocalEpisode' false)' Times.Once()); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_folder_and_file_name_only_for_download_client_item_with_a_job_folder,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}\\{name}.mkv".AsOsAgnostic()))); " is 140.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_include_intermediate_folders_for_download_client_item_with_a_job_folder,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}\\subfolder\\{name}.mkv".AsOsAgnostic()))); " is 151.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_folder_info_release_title_to_find_relative_path,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}\\subfolder\\{name}.mkv".AsOsAgnostic()))); " is 151.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_get_relative_path_when_there_is_no_grandparent_windows,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}.mkv".AsOsAgnostic()))); " is 132.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_get_relative_path_when_there_is_no_grandparent_mono,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}.mkv".AsOsAgnostic()))); " is 132.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_folder_info_release_title_to_find_relative_path_when_file_is_not_in_download_client_item_output_directory,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}\\subfolder\\{name}.mkv".AsOsAgnostic()))); " is 151.
Long Statement,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_use_folder_info_release_title_to_find_relative_path_when_download_client_item_has_an_empty_output_path,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Add(It.Is<EpisodeFile>(c => c.OriginalFilePath == $"{name}\\subfolder\\{name}.mkv".AsOsAgnostic()))); " is 151.
Long Statement,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_non_existent_files,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(c => c.Delete(It.Is<EpisodeFile>(e => e.RelativePath == DELETED_PATH)' DeleteMediaFileReason.MissingFromDisk)' Times.Exactly(2)); " is 172.
Long Statement,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_files_that_dont_belong_to_any_episodes,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(c => c.Delete(It.IsAny<EpisodeFile>()' DeleteMediaFileReason.NoLinkedEpisodes)' Times.Exactly(10)); " is 142.
Long Statement,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_unlink_episode_when_episodeFile_does_not_exist,The length of the statement  "            Mocker.GetMock<IEpisodeService>().Verify(c => c.UpdateEpisode(It.Is<Episode>(e => e.EpisodeFileId == 0))' Times.Exactly(10)); " is 125.
Long Statement,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_delete_multiple_different_episode_files,The length of the statement  "            Mocker.GetMock<IRecycleBinProvider>().Verify(v => v.DeleteFile(It.IsAny<string>()' It.IsAny<string>())' Times.Exactly(2)); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_delete_episode_file_from_database,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Delete(It.IsAny<EpisodeFile>()' DeleteMediaFileReason.Upgrade)' Times.Once()); " is 128.
Long Statement,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_delete_existing_file_fromdb_if_file_doesnt_exist,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Delete(_localEpisode.Episodes.Single().EpisodeFile.Value' DeleteMediaFileReason.Upgrade)' Times.Once()); " is 154.
Long Statement,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_throw_if_there_are_existing_episode_files_and_the_root_folder_is_missing,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Delete(_localEpisode.Episodes.Single().EpisodeFile.Value' DeleteMediaFileReason.Upgrade)' Times.Never()); " is 155.
Long Statement,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_import_if_existing_file_doesnt_exist_in_db,The length of the statement  "            Mocker.GetMock<IMediaFileService>().Verify(v => v.Delete(_localEpisode.Episodes.Single().EpisodeFile.Value' It.IsAny<DeleteMediaFileReason>())' Times.Never()); " is 159.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Aggregation.Aggregators,AugmentQualityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Aggregation\Aggregators\AggregateQualityFixture.cs,Setup,The length of the statement  "                                   .Returns(new AugmentQualityResult(QualitySource.Television' Confidence.Fallback' 720' Confidence.Fallback' new Revision())); " is 124.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Aggregation.Aggregators,AugmentQualityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Aggregation\Aggregators\AggregateQualityFixture.cs,Setup,The length of the statement  "                          .Returns(new AugmentQualityResult(QualitySource.Television' Confidence.Default' 480' Confidence.Default' new Revision())); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            _pass1.Setup(c => c.IsSatisfiedBy(It.IsAny<LocalEpisode>()' It.IsAny<DownloadClientItem>())).Returns(Decision.Accept()); " is 120.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            _pass2.Setup(c => c.IsSatisfiedBy(It.IsAny<LocalEpisode>()' It.IsAny<DownloadClientItem>())).Returns(Decision.Accept()); " is 120.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            _pass3.Setup(c => c.IsSatisfiedBy(It.IsAny<LocalEpisode>()' It.IsAny<DownloadClientItem>())).Returns(Decision.Accept()); " is 120.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            _fail1.Setup(c => c.IsSatisfiedBy(It.IsAny<LocalEpisode>()' It.IsAny<DownloadClientItem>())).Returns(Decision.Reject("_fail1")); " is 128.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            _fail2.Setup(c => c.IsSatisfiedBy(It.IsAny<LocalEpisode>()' It.IsAny<DownloadClientItem>())).Returns(Decision.Reject("_fail2")); " is 128.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            _fail3.Setup(c => c.IsSatisfiedBy(It.IsAny<LocalEpisode>()' It.IsAny<DownloadClientItem>())).Returns(Decision.Reject("_fail3")); " is 128.
Long Statement,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,Setup,The length of the statement  "            GivenVideoFiles(new List<string> { @"C:\Test\Unsorted\The.Office.S03E115.DVDRip.Spanish.XviD-OSiTV.avi".AsOsAgnostic() }); " is 122.
Long Statement,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_up_to_date_media_info,The length of the statement  "                .With(v => v.MediaInfo = new MediaInfoModel { SchemaRevision = VideoFileInfoReader.CURRENT_MEDIA_INFO_SCHEMA_REVISION }) " is 120.
Long Statement,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_not_yet_date_media_info,The length of the statement  "                .With(v => v.MediaInfo = new MediaInfoModel { SchemaRevision = VideoFileInfoReader.MINIMUM_MEDIA_INFO_SCHEMA_REVISION }) " is 120.
Long Statement,NzbDrone.Core.Test.NotificationTests,PlexClientServiceTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\PlexClientServiceTest.cs,Notify_should_send_notification,The length of the statement  "            var expectedUrl = string.Format("http://localhost:3000/xbmcCmds/xbmcHttp?command=ExecBuiltIn(Notification({0}' {1}))"' header' message); " is 136.
Long Statement,NzbDrone.Core.Test.NotificationTests,PlexClientServiceTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\PlexClientServiceTest.cs,Notify_should_send_notification_with_credentials_when_configured,The length of the statement  "            var expectedUrl = string.Format("http://localhost:3000/xbmcCmds/xbmcHttp?command=ExecBuiltIn(Notification({0}' {1}))"' header' message); " is 136.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,ActivePlayersFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\ActivePlayersFixture.cs,WithVideoPlayerActive,The length of the statement  "            var activePlayers = @"<html><li>Filename:C:\Test\TV\2 Broke Girls\Season 01\2 Broke Girls - S01E01 - Pilot [SDTV].avi" + " is 120.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,ActivePlayersFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\ActivePlayersFixture.cs,WithVideoPlayerActive,The length of the statement  "                              "<li>PlayStatus:Playing<li>VideoNo:0<li>Type:Video<li>Thumb:special://masterprofile/Thumbnails/Video/a/auto-a664d5a2.tbn" + " is 123.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,Setup,The length of the statement  "            const string setResponseUrl = "http://localhost:8080/xbmcCmds/xbmcHttp?command=SetResponseFormat(webheader;false;webfooter;false;header;<xml>;footer;</xml>;opentag;<tag>;closetag;</tag>;closefinaltag;false)"; " is 208.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,should_get_series_path,The length of the statement  "            var query = string.Format("http://localhost:8080/xbmcCmds/xbmcHttp?command=QueryVideoDatabase(select path.strPath from path' tvshow' tvshowlinkpath where tvshow.c12 = 79488 and tvshowlinkpath.idShow = tvshow.idShow and tvshowlinkpath.idPath = path.idPath)"); " is 258.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,should_get_null_for_series_path,The length of the statement  "            var query = string.Format("http://localhost:8080/xbmcCmds/xbmcHttp?command=QueryVideoDatabase(select path.strPath from path' tvshow' tvshowlinkpath where tvshow.c12 = 79488 and tvshowlinkpath.idShow = tvshow.idShow and tvshowlinkpath.idPath = path.idPath)"); " is 258.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,should_get_series_path_with_special_characters_in_it,The length of the statement  "            const string queryResult = @"<xml><record><field>smb://xbmc:xbmc@HOMESERVER/TV/Law & Order- Special Victims Unit/</field></record></xml>"; " is 138.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,should_get_series_path_with_special_characters_in_it,The length of the statement  "            var query = string.Format("http://localhost:8080/xbmcCmds/xbmcHttp?command=QueryVideoDatabase(select path.strPath from path' tvshow' tvshowlinkpath where tvshow.c12 = 79488 and tvshowlinkpath.idShow = tvshow.idShow and tvshowlinkpath.idPath = path.idPath)"); " is 258.
Long Statement,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,UpdateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\UpdateFixture.cs,should_update_using_series_path,The length of the statement  "            const string url = "http://localhost:8080/xbmcCmds/xbmcHttp?command=ExecBuiltIn(UpdateLibrary(video'smb://xbmc:xbmc@HOMESERVER/TV/30 Rock/))"; " is 142.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_replace_duplicate_numbering_individually,The length of the statement  "            _namingConfig.AnimeEpisodeFormat = "{Series.Title}.{season}x{episode:00}.{absolute:000}\\{Series.Title}.S{season:00}E{episode:00}.{absolute:00}.{Episode.Title}"; " is 161.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_replace_individual_season_episode_tokens,The length of the statement  "            _namingConfig.AnimeEpisodeFormat = "{Series Title} Season {season:0000} Episode {episode:0000}\\{Series.Title}.S{season:00}E{episode:00}.{absolute:00}.{Episode.Title}"; " is 168.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_wrap_proper_in_square_brackets,The length of the statement  "            _namingConfig.StandardEpisodeFormat = "{Series Title} - S{season:00}E{episode:00} [{Quality Title}] {[Quality Proper]}"; " is 120.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_not_wrap_proper_in_square_brackets_when_not_a_proper,The length of the statement  "            _namingConfig.StandardEpisodeFormat = "{Series Title} - S{season:00}E{episode:00} [{Quality Title}] {[Quality Proper]}"; " is 120.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_extra_separators_from_middle_when_quality_proper_is_not_included,The length of the statement  "            _namingConfig.StandardEpisodeFormat = string.Format("{{Quality{0}Title}}{0}{{Quality{0}Proper}}{0}{{Episode{0}Title}}"' separator); " is 131.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_include_hdr_for_mediainfo_videodynamicrange_with_valid_properties,The length of the statement  "            GivenMediaInfoModel(videoBitDepth: bitDepth' videoColourPrimaries: colourPrimaries' videoTransferCharacteristics: transferCharacteristics); " is 139.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_default_to_dash_when_serparator_is_not_set_for_absolute_number,The length of the statement  "            _namingConfig.AnimeEpisodeFormat = "{Series Title} - {season}x{episode:00} - [{absolute:000}] - {Episode Title} - {Quality Title}"; " is 131.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_with_ellipsis_between_first_and_last_episode_titles,The length of the statement  "            result.Should().Be("Series Title - S01E01-02-03-04-05-06-07 - Episode Title 1...A Really Really Really Really Long Episode Title HDTV-720p"); " is 141.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_with_ellipsis_if_only_first_episode_title_fits,The length of the statement  "            _series.Title = "Lorem ipsum dolor sit amet' consectetur adipiscing elit Maecenas et magna sem Morbi vitae volutpat quam' id porta arcu Orci varius natoque penatibus et magnis dis parturient montes"; " is 199.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_with_ellipsis_if_only_first_episode_title_fits,The length of the statement  "            result.Should().Be("Lorem ipsum dolor sit amet' consectetur adipiscing elit Maecenas et magna sem Morbi vitae volutpat quam' id porta arcu Orci varius natoque penatibus et magnis dis parturient montes - S01E01-02-03-04-05-06-07 - Episode Title 1... HDTV-720p"); " is 261.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_first_episode_title_with_ellipsis_if_only_partially_fits,The length of the statement  "            _series.Title = "Lorem ipsum dolor sit amet' consectetur adipiscing elit Maecenas et magna sem Morbi vitae volutpat quam' id porta arcu Orci varius natoque penatibus et magnis dis parturient montes nascetur ridiculus musu Cras vestibulum"; " is 239.
Long Statement,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_first_episode_title_with_ellipsis_if_only_partially_fits,The length of the statement  "            result.Should().Be("Lorem ipsum dolor sit amet' consectetur adipiscing elit Maecenas et magna sem Morbi vitae volutpat quam' id porta arcu Orci varius natoque penatibus et magnis dis parturient montes nascetur ridiculus musu Cras vestibulum - S01E01 - Episode Ti... HDTV-720p"); " is 278.
Long Statement,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_not_accept_future_dates,The length of the statement  "            var validDate = title.Expand(new { year = twoDaysFromNow.Year' month = twoDaysFromNow.Month.ToString("00")' day = twoDaysFromNow.Day.ToString("00") }); " is 151.
Long Statement,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_use_tvdb_season_number_when_available_and_a_scene_source,The length of the statement  "                .Verify(v => v.FindEpisode(_series.Id' _parsedEpisodeInfo.SeasonNumber' _parsedEpisodeInfo.EpisodeNumbers.First())' Times.Never()); " is 131.
Long Statement,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_number_when_available_for_a_different_season_and_a_scene_source,The length of the statement  "                  .Returns(new SceneMapping { SeasonNumber = tvdbSeasonNumber' SceneSeasonNumber = _parsedEpisodeInfo.SeasonNumber + 100 }); " is 122.
Long Statement,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_number_when_available_for_a_different_season_and_a_scene_source,The length of the statement  "                .Verify(v => v.FindEpisode(_series.Id' _parsedEpisodeInfo.SeasonNumber' _parsedEpisodeInfo.EpisodeNumbers.First())' Times.Once()); " is 130.
Long Statement,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_when_not_a_scene_source,The length of the statement  "                .Verify(v => v.FindEpisode(_series.Id' _parsedEpisodeInfo.SeasonNumber' _parsedEpisodeInfo.EpisodeNumbers.First())' Times.Once()); " is 130.
Long Statement,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_when_tvdb_season_number_is_less_than_zero,The length of the statement  "                .Verify(v => v.FindEpisode(_series.Id' _parsedEpisodeInfo.SeasonNumber' _parsedEpisodeInfo.EpisodeNumbers.First())' Times.Once()); " is 130.
Long Statement,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTitle_using_year_when_FindByTitle_matching_fails,The length of the statement  "                  .Setup(s => s.FindByTitle(_parsedEpisodeInfo.SeriesTitleInfo.TitleWithoutYear' _parsedEpisodeInfo.SeriesTitleInfo.Year)) " is 120.
Long Statement,NzbDrone.Core.Test.Qualities,QualityModelComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityModelComparerFixture.cs,GivenCustomProfile,The length of the statement  "            Subject = new QualityModelComparer(new QualityProfile { Items = QualityFixture.GetDefaultQualities(Quality.Bluray720p' Quality.DVD) }); " is 135.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteDirectoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteDirectoryFixture.cs,should_use_move_when_recycleBin_is_configured,The length of the statement  "                  .Verify(v => v.TransferFolder(path' @"C:\Test\Recycle Bin\30 Rock".AsOsAgnostic()' TransferMode.Move' true)' Times.Once()); " is 123.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteDirectoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteDirectoryFixture.cs,should_call_directorySetLastWriteTime,The length of the statement  "            Mocker.GetMock<IDiskProvider>().Verify(v => v.FolderSetLastWriteTime(@"C:\Test\Recycle Bin\30 Rock".AsOsAgnostic()' It.IsAny<DateTime>())' Times.Once()); " is 153.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteDirectoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteDirectoryFixture.cs,should_call_fileSetLastWriteTime_for_each_file,The length of the statement  "            Mocker.GetMock<IDiskProvider>().Setup(s => s.GetFiles(@"C:\Test\Recycle Bin\30 Rock".AsOsAgnostic()' SearchOption.AllDirectories)) " is 130.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteDirectoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteDirectoryFixture.cs,should_call_fileSetLastWriteTime_for_each_file,The length of the statement  "            Mocker.GetMock<IDiskProvider>().Verify(v => v.FileSetLastWriteTime(It.IsAny<string>()' It.IsAny<DateTime>())' Times.Exactly(3)); " is 128.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteFileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteFileFixture.cs,should_use_move_when_recycleBin_is_configured,The length of the statement  "            Mocker.GetMock<IDiskTransferService>().Verify(v => v.TransferFile(path' @"C:\Test\Recycle Bin\S01E01.avi".AsOsAgnostic()' TransferMode.Move' false' true)' Times.Once()); " is 169.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteFileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteFileFixture.cs,should_use_alternative_name_if_already_exists,The length of the statement  "            Mocker.GetMock<IDiskTransferService>().Verify(v => v.TransferFile(path' @"C:\Test\Recycle Bin\S01E01_2.avi".AsOsAgnostic()' TransferMode.Move' false' true)' Times.Once()); " is 171.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteFileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteFileFixture.cs,should_call_fileSetLastWriteTime_for_each_file,The length of the statement  "            Mocker.GetMock<IDiskProvider>().Verify(v => v.FileSetLastWriteTime(@"C:\Test\Recycle Bin\S01E01.avi".AsOsAgnostic()' It.IsAny<DateTime>())' Times.Once()); " is 154.
Long Statement,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteFileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteFileFixture.cs,should_use_subfolder_when_passed_in,The length of the statement  "            Mocker.GetMock<IDiskTransferService>().Verify(v => v.TransferFile(path' @"C:\Test\Recycle Bin\30 Rock\S01E01.avi".AsOsAgnostic()' TransferMode.Move' false' true)' Times.Once()); " is 177.
Long Statement,NzbDrone.Core.Test.RootFolderTests,RootFolderServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\RootFolderTests\RootFolderServiceFixture.cs,adding_duplicated_root_folder_should_throw,The length of the statement  "            Mocker.GetMock<IRootFolderRepository>().Setup(c => c.All()).Returns(new List<RootFolder> { new RootFolder { Path = "C:\\TV".AsOsAgnostic() } }); " is 144.
Long Statement,NzbDrone.Core.Test.TvTests,MoveSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\MoveSeriesServiceFixture.cs,should_use_destination_path,The length of the statement  "                  .Verify(v => v.TransferFolder(_command.SourcePath' _command.DestinationPath' TransferMode.Move' It.IsAny<bool>())' Times.Once()); " is 129.
Long Statement,NzbDrone.Core.Test.TvTests,MoveSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\MoveSeriesServiceFixture.cs,should_build_new_path_when_root_folder_is_provided,The length of the statement  "                  .Verify(v => v.TransferFolder(_bulkCommand.Series.First().SourcePath' expectedPath' TransferMode.Move' It.IsAny<bool>())' Times.Once()); " is 136.
Long Statement,NzbDrone.Core.Test.TvTests,MoveSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\MoveSeriesServiceFixture.cs,should_skip_series_folder_if_it_does_not_exist,The length of the statement  "                  .Verify(v => v.TransferFolder(_command.SourcePath' _command.DestinationPath' TransferMode.Move' It.IsAny<bool>())' Times.Never()); " is 130.
Long Statement,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_update_air_date_when_multiple_episodes_air_on_the_same_day,The length of the statement  "            _insertedEpisodes.Last().AirDateUtc.Value.ToString("s").Should().Be(episodes.First().AirDateUtc.Value.AddMinutes(series.Runtime).ToString("s")); " is 144.
Long Statement,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_not_update_air_date_when_more_than_three_episodes_air_on_the_same_day,The length of the statement  "            _insertedEpisodes.Should().OnlyContain(e => e.AirDateUtc.Value.ToString("s") == episodes.First().AirDateUtc.Value.ToString("s")); " is 129.
Long Statement,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_monitor_new_seasons_automatically,The length of the statement  "                .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2 && s.Seasons.Single(season => season.SeasonNumber == 2).Monitored == true)' It.IsAny<bool>())); " is 163.
Long Statement,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_not_monitor_new_special_season_automatically,The length of the statement  "                .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2 && s.Seasons.Single(season => season.SeasonNumber == 0).Monitored == false)' It.IsAny<bool>())); " is 164.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityMetLanguageUnmet = new EpisodeFile { RelativePath = "a"' Quality = new QualityModel { Quality = Quality.WEBDL480p } ' Language = Language.English }; " is 159.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityMetLanguageMet = new EpisodeFile { RelativePath = "b"' Quality = new QualityModel { Quality = Quality.WEBDL480p }' Language = Language.Spanish }; " is 156.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityMetLanguageExceed = new EpisodeFile { RelativePath = "c"' Quality = new QualityModel { Quality = Quality.WEBDL480p }' Language = Language.French }; " is 158.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityUnmetLanguageUnmet = new EpisodeFile { RelativePath = "d"' Quality = new QualityModel { Quality = Quality.SDTV }' Language = Language.English }; " is 155.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityUnmetLanguageMet = new EpisodeFile { RelativePath = "e"' Quality = new QualityModel { Quality = Quality.SDTV }' Language = Language.Spanish }; " is 153.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityUnmetLanguageExceed = new EpisodeFile { RelativePath = "f"' Quality = new QualityModel { Quality = Quality.SDTV }' Language = Language.French }; " is 155.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityRawHDLanguageUnmet = new EpisodeFile { RelativePath = "g"' Quality = new QualityModel { Quality = Quality.RAWHD }' Language = Language.English }; " is 156.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityRawHDLanguageMet = new EpisodeFile { RelativePath = "h"' Quality = new QualityModel { Quality = Quality.RAWHD }' Language = Language.Spanish }; " is 154.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The length of the statement  "            var qualityRawHDLanguageExceed = new EpisodeFile { RelativePath = "i"' Quality = new QualityModel { Quality = Quality.RAWHD }' Language = Language.French }; " is 156.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,should_find_episode_by_scene_numbering,The length of the statement  "            Subject.FindEpisodesBySceneNumbering(_episode1.SeriesId' _episode1.SceneSeasonNumber.Value' _episode1.SceneEpisodeNumber.Value) " is 127.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,should_return_multiple_episode_if_multiple_match_by_scene_numbering,The length of the statement  "            Subject.FindEpisodesBySceneNumbering(_episode1.SeriesId' _episode1.SceneSeasonNumber.Value' _episode1.SceneEpisodeNumber.Value) " is 127.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeServiceTests,FindEpisodeByTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeServiceTests\FindEpisodeByTitleFixture.cs,should_prefer_longer_match,The length of the statement  "            Subject.FindEpisodeByTitle(1' 1' "The.Walking.Dead.S04.Special.Inside.The.Walking.Dead.Walker.University.720p.HDTV.x264-W4F") " is 125.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeServiceTests,FindEpisodeByTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeServiceTests\FindEpisodeByTitleFixture.cs,should_return_null_when_no_match_is_found,The length of the statement  "            Subject.FindEpisodeByTitle(1' 1' "The.Walking.Dead.S04.Special.Inside.The.Walking.Dead.Walker.University.720p.HDTV.x264-W4F") " is 125.
Long Statement,NzbDrone.Core.Test.TvTests.EpisodeServiceTests,FindEpisodeByTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeServiceTests\FindEpisodeByTitleFixture.cs,should_handle_e00_specials,The length of the statement  "            Subject.FindEpisodeByTitle(1' 1' "The.Walking.Dead.S04E00.Inside.The.Walking.Dead.Walker.University.720p.HDTV.x264-W4F") " is 120.
Long Statement,NzbDrone.Core.Test.UpdateTests,UpdateServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdateServiceFixture.cs,should_run_script_if_configured,The length of the statement  "            Mocker.GetMock<IProcessProvider>().Verify(v => v.Start(scriptPath' It.IsAny<string>()' null' null' null)' Times.Once()); " is 120.
Long Statement,NzbDrone.Core.Test.UpdateTests,UpdateServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdateServiceFixture.cs,should_throw_if_script_is_not_set,The length of the statement  "            Mocker.GetMock<IProcessProvider>().Verify(v => v.Start(scriptPath' It.IsAny<string>()' null' null' null)' Times.Never()); " is 121.
Long Statement,NzbDrone.Core.Test.UpdateTests,UpdateServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdateServiceFixture.cs,should_throw_if_script_is_null,The length of the statement  "            Mocker.GetMock<IProcessProvider>().Verify(v => v.Start(scriptPath' It.IsAny<string>()' null' null' null)' Times.Never()); " is 121.
Long Statement,NzbDrone.Core.Test.UpdateTests,UpdateServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdateServiceFixture.cs,should_throw_if_script_path_does_not_exist,The length of the statement  "            Mocker.GetMock<IProcessProvider>().Verify(v => v.Start(scriptPath' It.IsAny<string>()' null' null' null)' Times.Never()); " is 121.
Long Statement,NzbDrone.Core.Test.UpdateTests,UpdateServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdateServiceFixture.cs,should_switch_to_branch_specified_in_updatepackage,The length of the statement  "                  .Verify(v => v.SaveConfigDictionary(It.Is<Dictionary<string' object>>(d => d.ContainsKey("Branch") && (string)d["Branch"] == "fake"))' Times.Once()); " is 149.
Magic Number,NzbDrone.Core.Test.Blacklisting,BlacklistRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Blacklisting\BlacklistRepositoryFixture.cs,Setup,The following statement contains a magic number: _blacklist = new Blacklist                       {                           SeriesId = 12345'                           EpisodeIds = new List<int> { 1 }'                           Quality = new QualityModel(Quality.Bluray720p)'                           SourceTitle = "series.title.s01e01"'                           Date = DateTime.UtcNow                       };
Magic Number,NzbDrone.Core.Test.Blacklisting,BlacklistServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Blacklisting\BlacklistServiceFixture.cs,Setup,The following statement contains a magic number: _event = new DownloadFailedEvent                       {                           SeriesId = 12345'                           EpisodeIds = new List<int> {1}'                           Quality = new QualityModel(Quality.Bluray720p)'                           SourceTitle = "series.title.s01e01"'                           DownloadClient = "SabnzbdClient"'                           DownloadId = "Sabnzbd_nzo_2dfh73k"                       };
Magic Number,NzbDrone.Core.Test.Configuration,ConfigServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Configuration\ConfigServiceFixture.cs,Add_new_value_to_database,The following statement contains a magic number: const int value = 12;
Magic Number,NzbDrone.Core.Test.Configuration,ConfigServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Configuration\ConfigServiceFixture.cs,Get_value_should_return_default_when_no_value,The following statement contains a magic number: Subject.RssSyncInterval.Should().Be(15);
Magic Number,NzbDrone.Core.Test.Configuration,ConfigServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Configuration\ConfigServiceFixture.cs,get_value_with_out_persist_should_not_store_default_value,The following statement contains a magic number: interval.Should().Be(15);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                  .With(v => v.TvdbId = 10)                  .With(v => v.UseSceneNumbering = false)                  .BuildNew();
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _theXemSeriesIds = new List<int> { 120 };
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: Mocker.GetMock<IXemProxy>()                    .Setup(v => v.GetSceneTvdbMappings(10))                    .Returns(_theXemTvdbMappings);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 1' EpisodeNumber = 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 1 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 3 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 3 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 4 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 4 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 5 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 2' EpisodeNumber = 5 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 3' EpisodeNumber = 1 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 3' EpisodeNumber = 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes.Add(new Episode { SeasonNumber = 3' EpisodeNumber = 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: _theXemSeriesIds.Add(10);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(2' 1' 2' 2' 1' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(2' 1' 2' 2' 1' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(2' 1' 2' 2' 1' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(2' 1' 2' 2' 1' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(3' 2' 1' 3' 2' 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(3' 2' 1' 3' 2' 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(3' 2' 1' 3' 2' 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(3' 2' 1' 3' 2' 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(4' 2' 2' 4' 2' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(4' 2' 2' 4' 2' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(4' 2' 2' 4' 2' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(4' 2' 2' 4' 2' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(4' 2' 2' 4' 2' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(4' 2' 2' 4' 2' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(5' 2' 3' 5' 2' 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(5' 2' 3' 5' 2' 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(5' 2' 3' 5' 2' 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(5' 2' 3' 5' 2' 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(5' 2' 3' 5' 2' 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(5' 2' 3' 5' 2' 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(6' 3' 1' 6' 2' 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(6' 3' 1' 6' 2' 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(6' 3' 1' 6' 2' 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(6' 3' 1' 6' 2' 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(6' 3' 1' 6' 2' 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(7' 3' 2' 7' 2' 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(7' 3' 2' 7' 2' 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(7' 3' 2' 7' 2' 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(7' 3' 2' 7' 2' 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(7' 3' 2' 7' 2' 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenTvdbMappings,The following statement contains a magic number: AddTvdbMapping(7' 3' 2' 7' 2' 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[1].SceneEpisodeNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[2].SceneSeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[2].SceneSeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[2].SceneEpisodeNumber = 1;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[3].SceneSeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[3].SceneSeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[3].SceneEpisodeNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[3].SceneEpisodeNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[4].SceneSeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[4].SceneSeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[4].SceneEpisodeNumber = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[4].SceneEpisodeNumber = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[5].SceneSeasonNumber = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[5].SceneSeasonNumber = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[5].SceneEpisodeNumber = 1;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[6].SceneSeasonNumber = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[6].SceneSeasonNumber = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,GivenExistingMapping,The following statement contains a magic number: _episodes[6].SceneEpisodeNumber = 1;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_fetch_scenenumbering_if_not_listed,The following statement contains a magic number: Mocker.GetMock<IXemProxy>()                    .Verify(v => v.GetSceneTvdbMappings(10)' Times.Never());
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_unknown_future_episodes_if_existing_season_is_mapped,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_unknown_future_episodes_if_existing_season_is_mapped,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_unknown_future_episodes_if_existing_season_is_mapped,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_unknown_future_episodes_if_existing_season_is_mapped,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_unknown_future_season_if_future_season_is_shifted,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 3 && v.EpisodeNumber == 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_flag_unknown_future_season_if_future_season_is_not_shifted,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Scene.Season == 3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_flag_unknown_future_season_if_future_season_is_not_shifted,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 3 && v.EpisodeNumber == 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_flag_past_episodes_if_not_causing_overlaps,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Scene.Season == 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_flag_past_episodes_if_not_causing_overlaps,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_past_episodes_if_causing_overlap,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Scene.Season == 2 && v.Tvdb.Episode <= 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_past_episodes_if_causing_overlap,The following statement contains a magic number: _theXemTvdbMappings.First(v => v.Scene.Season == 2 && v.Scene.Episode == 2).Scene.Episode = 1;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_past_episodes_if_causing_overlap,The following statement contains a magic number: _theXemTvdbMappings.First(v => v.Scene.Season == 2 && v.Scene.Episode == 2).Scene.Episode = 1;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_flag_past_episodes_if_causing_overlap,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_extrapolate_season_with_specials,The following statement contains a magic number: var specialMapping = _theXemTvdbMappings.First(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_extrapolate_season_with_specials,The following statement contains a magic number: var specialMapping = _theXemTvdbMappings.First(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_extrapolate_season_with_specials,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_extrapolate_season_with_specials,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_future_episodes,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_future_episodes,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_future_episodes,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_future_episodes,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_future_episodes,The following statement contains a magic number: episode.SceneSeasonNumber.Should().Be(3);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_future_episodes,The following statement contains a magic number: episode.SceneEpisodeNumber.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: _theXemTvdbMappings.RemoveAll(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: var dualMapping = _theXemTvdbMappings.First(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: var dualMapping = _theXemTvdbMappings.First(v => v.Tvdb.Season == 2 && v.Tvdb.Episode == 4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: dualMapping.Scene.Season = 2;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: dualMapping.Scene.Episode = 3;
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 2 && v.EpisodeNumber == 5);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: episode.SceneSeasonNumber.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_season_with_shifted_episodes,The following statement contains a magic number: episode.SceneEpisodeNumber.Should().Be(4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_shifted_future_seasons,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 3 && v.EpisodeNumber == 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_shifted_future_seasons,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 3 && v.EpisodeNumber == 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_shifted_future_seasons,The following statement contains a magic number: episode.SceneSeasonNumber.Should().Be(4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_extrapolate_shifted_future_seasons,The following statement contains a magic number: episode.SceneEpisodeNumber.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_extrapolate_matching_future_seasons,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 3 && v.EpisodeNumber == 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_not_extrapolate_matching_future_seasons,The following statement contains a magic number: var episode = _episodes.First(v => v.SeasonNumber == 3 && v.EpisodeNumber == 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_skip_mapping_when_scene_information_is_all_zero,The following statement contains a magic number: AddTvdbMapping(0' 0' 0' 8' 3' 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_skip_mapping_when_scene_information_is_all_zero,The following statement contains a magic number: AddTvdbMapping(0' 0' 0' 8' 3' 1);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_skip_mapping_when_scene_information_is_all_zero,The following statement contains a magic number: AddTvdbMapping(0' 0' 0' 9' 3' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_skip_mapping_when_scene_information_is_all_zero,The following statement contains a magic number: AddTvdbMapping(0' 0' 0' 9' 3' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.SceneNumbering,XemServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\SceneNumbering\XemServiceFixture.cs,should_skip_mapping_when_scene_information_is_all_zero,The following statement contains a magic number: AddTvdbMapping(0' 0' 0' 9' 3' 2);
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings = Builder<SceneMapping>.CreateListOfSize(5)                                                   .All()                                                   .With(v => v.FilterRegex = null)                                                   .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings[2].SearchTerm = "Can";
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings[3].SearchTerm = "Be";
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings[4].SearchTerm = "Cleaned";
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings[2].ParseTerm = "Can";
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings[3].ParseTerm = "Be";
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,Setup,The following statement contains a magic number: _fakeMappings[4].ParseTerm = "Cleaned";
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_add_mapping_with_blank_title,The following statement contains a magic number: var fakeMappings = Builder<SceneMapping>.CreateListOfSize(2)                                                      .TheLast(1)                                                      .With(m => m.Title = null)                                                      .Build()                                                      .ToList();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_add_mapping_with_blank_search_title,The following statement contains a magic number: var fakeMappings = Builder<SceneMapping>.CreateListOfSize(2)                                                      .TheLast(1)                                                      .With(m => m.SearchTerm = null)                                                      .Build()                                                      .ToList();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Working!!"' ParseTerm = "working"' SearchTerm = "Working!!"' TvdbId = 100' SceneSeasonNumber = 1 }'                  new SceneMapping { Title = "Working`!!"' ParseTerm = "working"' SearchTerm = "Working`!!"' TvdbId = 100' SceneSeasonNumber = 2 }'                  new SceneMapping { Title = "Working!!!"' ParseTerm = "working"' SearchTerm = "Working!!!"' TvdbId = 100' SceneSeasonNumber = 3 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Working!!"' ParseTerm = "working"' SearchTerm = "Working!!"' TvdbId = 100' SceneSeasonNumber = 1 }'                  new SceneMapping { Title = "Working`!!"' ParseTerm = "working"' SearchTerm = "Working`!!"' TvdbId = 100' SceneSeasonNumber = 2 }'                  new SceneMapping { Title = "Working!!!"' ParseTerm = "working"' SearchTerm = "Working!!!"' TvdbId = 100' SceneSeasonNumber = 3 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Working!!"' ParseTerm = "working"' SearchTerm = "Working!!"' TvdbId = 100' SceneSeasonNumber = 1 }'                  new SceneMapping { Title = "Working`!!"' ParseTerm = "working"' SearchTerm = "Working`!!"' TvdbId = 100' SceneSeasonNumber = 2 }'                  new SceneMapping { Title = "Working!!!"' ParseTerm = "working"' SearchTerm = "Working!!!"' TvdbId = 100' SceneSeasonNumber = 3 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Working!!"' ParseTerm = "working"' SearchTerm = "Working!!"' TvdbId = 100' SceneSeasonNumber = 1 }'                  new SceneMapping { Title = "Working`!!"' ParseTerm = "working"' SearchTerm = "Working`!!"' TvdbId = 100' SceneSeasonNumber = 2 }'                  new SceneMapping { Title = "Working!!!"' ParseTerm = "working"' SearchTerm = "Working!!!"' TvdbId = 100' SceneSeasonNumber = 3 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Working!!"' ParseTerm = "working"' SearchTerm = "Working!!"' TvdbId = 100' SceneSeasonNumber = 1 }'                  new SceneMapping { Title = "Working`!!"' ParseTerm = "working"' SearchTerm = "Working`!!"' TvdbId = 100' SceneSeasonNumber = 2 }'                  new SceneMapping { Title = "Working!!!"' ParseTerm = "working"' SearchTerm = "Working!!!"' TvdbId = 100' SceneSeasonNumber = 3 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_single_match,The following statement contains a magic number: tvdbId.Should().Be(100);
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 1"' ParseTerm = "fudanshikoukouseikatsu1"' SearchTerm = "Fudanshi Koukou Seikatsu 1"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 2"' ParseTerm = "fudanshikoukouseikatsu2"' SearchTerm = "Fudanshi Koukou Seikatsu 2"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 3"' ParseTerm = "fudanshikoukouseikatsu3"' SearchTerm = "Fudanshi Koukou Seikatsu 3"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = -1 }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 4"' ParseTerm = "fudanshikoukouseikatsu4"' SearchTerm = "Fudanshi Koukou Seikatsu 4"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = -1 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 1"' ParseTerm = "fudanshikoukouseikatsu1"' SearchTerm = "Fudanshi Koukou Seikatsu 1"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 2"' ParseTerm = "fudanshikoukouseikatsu2"' SearchTerm = "Fudanshi Koukou Seikatsu 2"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 3"' ParseTerm = "fudanshikoukouseikatsu3"' SearchTerm = "Fudanshi Koukou Seikatsu 3"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = -1 }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 4"' ParseTerm = "fudanshikoukouseikatsu4"' SearchTerm = "Fudanshi Koukou Seikatsu 4"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = -1 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 1"' ParseTerm = "fudanshikoukouseikatsu1"' SearchTerm = "Fudanshi Koukou Seikatsu 1"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 2"' ParseTerm = "fudanshikoukouseikatsu2"' SearchTerm = "Fudanshi Koukou Seikatsu 2"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 3"' ParseTerm = "fudanshikoukouseikatsu3"' SearchTerm = "Fudanshi Koukou Seikatsu 3"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = -1 }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 4"' ParseTerm = "fudanshikoukouseikatsu4"' SearchTerm = "Fudanshi Koukou Seikatsu 4"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = -1 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 1"' ParseTerm = "fudanshikoukouseikatsu1"' SearchTerm = "Fudanshi Koukou Seikatsu 1"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 2"' ParseTerm = "fudanshikoukouseikatsu2"' SearchTerm = "Fudanshi Koukou Seikatsu 2"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = null }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 3"' ParseTerm = "fudanshikoukouseikatsu3"' SearchTerm = "Fudanshi Koukou Seikatsu 3"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = -1 }'                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu 4"' ParseTerm = "fudanshikoukouseikatsu4"' SearchTerm = "Fudanshi Koukou Seikatsu 4"' TvdbId = 100' SeasonNumber = -1' SceneSeasonNumber = -1 }'              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_global_season,The following statement contains a magic number: names.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_season,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = 1' SceneSeasonNumber = null }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 1 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 1 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_season,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = 1' SceneSeasonNumber = null }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_season,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 10 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_sceneseason,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 1 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_sceneseason,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 1 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_sceneseason,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 1 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_sceneseason,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 1 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_sceneseason,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_sceneseason,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_return_alternate_title_for_sceneseason,The following statement contains a magic number: var names = Subject.GetSceneNames(100' new List<int> { 10 }' new List<int> { 2 });
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fairy Tail S2"' ParseTerm = "fairytails2"' SearchTerm = "Fairy Tail S2"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 2 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fairy Tail S2"' ParseTerm = "fairytails2"' SearchTerm = "Fairy Tail S2"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 2 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 5 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 5 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 5 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 6 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 6 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 6 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 7 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 7 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 7 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 1 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 1 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 2 }).Should().NotBeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 2 }).Should().NotBeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 2 }).Should().NotBeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 3 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 3 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 3 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 4 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 4 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fairy_tail,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 20 }' new List<int> { 4 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Fudanshi Koukou Seikatsu"' ParseTerm = "fudanshikoukouseikatsu"' SearchTerm = "Fudanshi Koukou Seikatsu"' TvdbId = 100' SeasonNumber = null' SceneSeasonNumber = 1 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 1 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 1 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 3 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 3 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 3 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 20 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 1 }' new List<int> { 1 }).Should().NotBeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 2 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 2 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 2 }' new List<int> { 2 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 3 }' new List<int> { 3 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 3 }' new List<int> { 3 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 3 }' new List<int> { 3 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 4 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 4 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_return_alternate_title_for_fudanshi,The following statement contains a magic number: Subject.GetSceneNames(100' new List<int> { 4 }' new List<int> { 4 }).Should().BeEmpty();
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_filter_by_regex,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }'                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 101' FilterRegex="-Viva$" }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_filter_by_regex,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }'                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 101' FilterRegex="-Viva$" }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_filter_by_regex,The following statement contains a magic number: Subject.FindTvdbId("Amareto"' "Amareto.S01E01.720p.WEB-DL-Viva").Should().Be(101);
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_filter_by_regex,The following statement contains a magic number: Subject.FindTvdbId("Amareto"' "Amareto.S01E01.720p.WEB-DL-DMO").Should().Be(100);
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_throw_if_multiple_mappings,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }'                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 101 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_throw_if_multiple_mappings,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }'                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 101 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_throw_if_multiple_mappings_with_same_tvdbid,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }'                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_throw_if_multiple_mappings_with_same_tvdbid,The following statement contains a magic number: var mappings = new List<SceneMapping>              {                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }'                  new SceneMapping { Title = "Amareto"' ParseTerm = "amareto"' SearchTerm = "Amareto"' TvdbId = 100 }              };
Magic Number,NzbDrone.Core.Test.DataAugmentation.Scene,SceneMappingServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DataAugmentation\Scene\SceneMappingServiceFixture.cs,should_not_throw_if_multiple_mappings_with_same_tvdbid,The following statement contains a magic number: Subject.FindTvdbId("Amareto"' "Amareto.S01E01.720p.WEB-DL-Viva").Should().Be(100);
Magic Number,NzbDrone.Core.Test.Datastore,BasicRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\BasicRepositoryFixture.cs,purge_should_delete_all,The following statement contains a magic number: Subject.InsertMany(Builder<ScheduledTask>.CreateListOfSize(10).BuildListOfNew());
Magic Number,NzbDrone.Core.Test.Datastore,BasicRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\BasicRepositoryFixture.cs,purge_should_delete_all,The following statement contains a magic number: AllStoredModels.Should().HaveCount(10);
Magic Number,NzbDrone.Core.Test.Datastore,BasicRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\BasicRepositoryFixture.cs,getting_model_with_invalid_id_should_throw,The following statement contains a magic number: Assert.Throws<ModelNotFoundException>(() => Subject.Get(12));
Magic Number,NzbDrone.Core.Test.Datastore,DatabaseRelationshipFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\DatabaseRelationshipFixture.cs,embedded_document_as_json,The following statement contains a magic number: var quality = new QualityModel { Quality = Quality.Bluray720p' Revision = new Revision(version: 2 )};
Magic Number,NzbDrone.Core.Test.Datastore,DatabaseRelationshipFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\DatabaseRelationshipFixture.cs,embedded_list_of_document_with_json,The following statement contains a magic number: var history = Builder<History.History>.CreateListOfSize(2)                                                    .All().With(c => c.Id = 0)                                                    .Build().ToList();
Magic Number,NzbDrone.Core.Test.Datastore,DatabaseRelationshipFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\DatabaseRelationshipFixture.cs,embedded_list_of_document_with_json,The following statement contains a magic number: history[0].Quality = new QualityModel(Quality.HDTV1080p' new Revision(version: 2));
Magic Number,NzbDrone.Core.Test.Datastore,DatabaseRelationshipFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\DatabaseRelationshipFixture.cs,embedded_list_of_document_with_json,The following statement contains a magic number: history[1].Quality = new QualityModel(Quality.Bluray720p' new Revision(version: 2));
Magic Number,NzbDrone.Core.Test.Datastore,MarrDataLazyLoadingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\MarrDataLazyLoadingFixture.cs,Setup,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                  .All()                  .With(v => v.Monitored = true)                  .With(v => v.EpisodeFileId = episodeFiles[0].Id)                  .With(v => v.SeriesId = series[0].Id)                  .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Datastore,ObjectDatabaseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\ObjectDatabaseFixture.cs,should_have_id_when_returned_from_database,The following statement contains a magic number: item.First().Id.Should().BeLessThan(100);
Magic Number,NzbDrone.Core.Test.Datastore,ObjectDatabaseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\ObjectDatabaseFixture.cs,set_fields_should_only_update_selected_filed,The following statement contains a magic number: var childModel = new ScheduledTask                  {                      TypeName = "Address"'                      Interval = 12                  };
Magic Number,NzbDrone.Core.Test.Datastore,ObjectDatabaseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\ObjectDatabaseFixture.cs,set_fields_should_only_update_selected_filed,The following statement contains a magic number: Db.All<ScheduledTask>().Single().Interval.Should().Be(12);
Magic Number,NzbDrone.Core.Test.Datastore.Converters,BooleanIntConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\BooleanIntConverterFixture.cs,should_throw_for_non_boolean_equivalent_number_value_when_getting_from_db,The following statement contains a magic number: var context = new ConverterContext                            {                                DbValue = (long)2                            };
Magic Number,NzbDrone.Core.Test.Datastore.Converters,DoubleConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\DoubleConverterFixture.cs,should_return_double_when_saving_double_to_db,The following statement contains a magic number: var input = 10.5D;
Magic Number,NzbDrone.Core.Test.Datastore.Converters,DoubleConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\DoubleConverterFixture.cs,should_return_double_when_getting_double_from_db,The following statement contains a magic number: var expected = 10.5D;
Magic Number,NzbDrone.Core.Test.Datastore.Converters,DoubleConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\DoubleConverterFixture.cs,should_return_double_when_getting_string_from_db,The following statement contains a magic number: var expected = 10.5D;
Magic Number,NzbDrone.Core.Test.Datastore.Converters,Int32ConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\Int32ConverterFixture.cs,should_return_int_when_saving_int_to_db,The following statement contains a magic number: var i = 5;
Magic Number,NzbDrone.Core.Test.Datastore.Converters,Int32ConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\Int32ConverterFixture.cs,should_return_int_when_saving_int_to_db,The following statement contains a magic number: Subject.ToDB(i).Should().Be(5);
Magic Number,NzbDrone.Core.Test.Datastore.Converters,Int32ConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\Int32ConverterFixture.cs,should_return_int_when_getting_int_from_db,The following statement contains a magic number: var i = 5;
Magic Number,NzbDrone.Core.Test.Datastore.Converters,Int32ConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\Int32ConverterFixture.cs,should_return_int_when_getting_string_from_db,The following statement contains a magic number: var i = 5;
Magic Number,NzbDrone.Core.Test.Datastore.Converters,TimeSpanConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\TimeSpanConverterFixture.cs,should_return_string_when_saving_timespan_to_db,The following statement contains a magic number: var timeSpan = TimeSpan.FromMinutes(5);
Magic Number,NzbDrone.Core.Test.Datastore.Converters,TimeSpanConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\TimeSpanConverterFixture.cs,should_return_time_span_when_getting_time_span_from_db,The following statement contains a magic number: var timeSpan = TimeSpan.FromMinutes(5);
Magic Number,NzbDrone.Core.Test.Datastore.Converters,TimeSpanConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Converters\TimeSpanConverterFixture.cs,should_return_time_span_when_getting_string_from_db,The following statement contains a magic number: var timeSpan = TimeSpan.FromMinutes(5);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,delay_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\070_delay_profileFixture.cs,should_migrate_old_delays,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                  {                      GrabDelay = 1'                      Name = "OneHour"'                      Cutoff = 0'                      Items = "[]"                  });                    c.Insert.IntoTable("Profiles").Row(new                  {                      GrabDelay = 2'                      Name = "TwoHours"'                      Cutoff = "{}"'                      Items = "[]"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,delay_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\070_delay_profileFixture.cs,should_migrate_old_delays,The following statement contains a magic number: allProfiles.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,delay_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\070_delay_profileFixture.cs,should_migrate_old_delays,The following statement contains a magic number: allProfiles.Should().Contain(c => c.UsenetDelay == 60);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,delay_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\070_delay_profileFixture.cs,should_migrate_old_delays,The following statement contains a magic number: allProfiles.Should().Contain(c => c.UsenetDelay == 120);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,unknown_quality_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\071_unknown_quality_in_profileFixture.cs,should_add_unknown_to_old_profile,The following statement contains a magic number: items.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,history_downloadIdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\072_history_downloadIdFixture.cs,should_move_grab_id_from_date_to_columns,The following statement contains a magic number: history.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,history_downloadIdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\072_history_downloadIdFixture.cs,should_leave_items_with_no_grabid,The following statement contains a magic number: history.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_job_last_execution_time,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("ScheduledTasks").Row(new                  {                      TypeName = "NzbDrone.Core.Tv.Commands.RefreshSeriesCommand"'                      Interval = 10'                      LastExecution = "2000-01-01 00:00:00"                  });                    c.Insert.IntoTable("ScheduledTasks").Row(new                  {                      TypeName = "NzbDrone.Core.Backup.BackupCommand"'                      Interval = 10'                      LastExecution = "2000-01-01 00:00:00"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_job_last_execution_time,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("ScheduledTasks").Row(new                  {                      TypeName = "NzbDrone.Core.Tv.Commands.RefreshSeriesCommand"'                      Interval = 10'                      LastExecution = "2000-01-01 00:00:00"                  });                    c.Insert.IntoTable("ScheduledTasks").Row(new                  {                      TypeName = "NzbDrone.Core.Backup.BackupCommand"'                      Interval = 10'                      LastExecution = "2000-01-01 00:00:00"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_job_last_execution_time,The following statement contains a magic number: jobs.Single(c => c.TypeName == "NzbDrone.Core.Tv.Commands.RefreshSeriesCommand")                  .LastExecution.Year.Should()                  .Be(2014);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_job_last_execution_time,The following statement contains a magic number: jobs.Single(c => c.TypeName == "NzbDrone.Core.Backup.BackupCommand")                 .LastExecution.Year.Should()                 .Be(2000);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_series_last_sync_time,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                  {                      Name = "Profile1"'                      CutOff = 0'                      Items = "[]"'                      Language = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 1'                      TvRageId =1'                      Title ="Title1"'                      CleanTitle ="CleanTitle1"'                      Status =1'                      Images =""'                      Path ="c:\\test"'                      Monitored =1'                      SeasonFolder =1'                      Runtime= 0'                      SeriesType=0'                      UseSceneNumbering =0'                      LastInfoSync = "2000-01-01 00:00:00"'                      ProfileId = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 2'                      TvRageId = 2'                      Title = "Title2"'                      CleanTitle = "CleanTitle2"'                      Status = 1'                      Images = ""'                      Path = "c:\\test2"'                      Monitored = 1'                      SeasonFolder = 1'                      Runtime = 0'                      SeriesType = 0'                      UseSceneNumbering = 0'                      LastInfoSync = "2000-01-01 00:00:00"'                      ProfileId = 1                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_series_last_sync_time,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                  {                      Name = "Profile1"'                      CutOff = 0'                      Items = "[]"'                      Language = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 1'                      TvRageId =1'                      Title ="Title1"'                      CleanTitle ="CleanTitle1"'                      Status =1'                      Images =""'                      Path ="c:\\test"'                      Monitored =1'                      SeasonFolder =1'                      Runtime= 0'                      SeriesType=0'                      UseSceneNumbering =0'                      LastInfoSync = "2000-01-01 00:00:00"'                      ProfileId = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 2'                      TvRageId = 2'                      Title = "Title2"'                      CleanTitle = "CleanTitle2"'                      Status = 1'                      Images = ""'                      Path = "c:\\test2"'                      Monitored = 1'                      SeasonFolder = 1'                      Runtime = 0'                      SeriesType = 0'                      UseSceneNumbering = 0'                      LastInfoSync = "2000-01-01 00:00:00"'                      ProfileId = 1                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,force_lib_updateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\075_force_lib_updateFixture.cs,should_reset_series_last_sync_time,The following statement contains a magic number: series.Should().OnlyContain(c => c.LastInfoSync.Value.Year == 2014);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,dedupe_tagsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\079_dedupe_tagsFixture.cs,should_only_update_affected_series,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                  {                      Name = "Profile1"'                      CutOff = 0'                      Items = "[]"'                      Language = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 1'                      TvRageId = 1'                      Title = "Title1"'                      CleanTitle = "CleanTitle1"'                      Status = 1'                      Images = ""'                      Path = "c:\\test"'                      Monitored = 1'                      SeasonFolder = 1'                      Runtime = 0'                      SeriesType = 0'                      UseSceneNumbering = 0'                      LastInfoSync = "2000-01-01 00:00:00"'                      Tags = "[2]"'                      ProfileId = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 2'                      TvRageId = 2'                      Title = "Title2"'                      CleanTitle = "CleanTitle2"'                      Status = 1'                      Images = ""'                      Path = "c:\\test"'                      Monitored = 1'                      SeasonFolder = 1'                      Runtime = 0'                      SeriesType = 0'                      UseSceneNumbering = 0'                      LastInfoSync = "2000-01-01 00:00:00"'                      Tags = "[]"'                      ProfileId = 1                  });                    c.Insert.IntoTable("Tags").Row(new                  {                      Label = "test"                  });                    c.Insert.IntoTable("Tags").Row(new                  {                      Label = "test"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,dedupe_tagsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\079_dedupe_tagsFixture.cs,should_only_update_affected_series,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                  {                      Name = "Profile1"'                      CutOff = 0'                      Items = "[]"'                      Language = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 1'                      TvRageId = 1'                      Title = "Title1"'                      CleanTitle = "CleanTitle1"'                      Status = 1'                      Images = ""'                      Path = "c:\\test"'                      Monitored = 1'                      SeasonFolder = 1'                      Runtime = 0'                      SeriesType = 0'                      UseSceneNumbering = 0'                      LastInfoSync = "2000-01-01 00:00:00"'                      Tags = "[2]"'                      ProfileId = 1                  });                    c.Insert.IntoTable("Series").Row(new                  {                      Tvdbid = 2'                      TvRageId = 2'                      Title = "Title2"'                      CleanTitle = "CleanTitle2"'                      Status = 1'                      Images = ""'                      Path = "c:\\test"'                      Monitored = 1'                      SeasonFolder = 1'                      Runtime = 0'                      SeriesType = 0'                      UseSceneNumbering = 0'                      LastInfoSync = "2000-01-01 00:00:00"'                      Tags = "[]"'                      ProfileId = 1                  });                    c.Insert.IntoTable("Tags").Row(new                  {                      Label = "test"                  });                    c.Insert.IntoTable("Tags").Row(new                  {                      Label = "test"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_set_rawhd_to_null,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("QualityDefinitions").Row(new                  {                      Quality = 1'                      Title = "SDTV"'                      MinSize = 0'                      MaxSize = 100                  })                  .Row(new                  {                      Quality = 10'                      Title = "RawHD"'                      MinSize = 0'                      MaxSize = 100                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_set_rawhd_to_null,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("QualityDefinitions").Row(new                  {                      Quality = 1'                      Title = "SDTV"'                      MinSize = 0'                      MaxSize = 100                  })                  .Row(new                  {                      Quality = 10'                      Title = "RawHD"'                      MinSize = 0'                      MaxSize = 100                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_set_rawhd_to_null,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("QualityDefinitions").Row(new                  {                      Quality = 1'                      Title = "SDTV"'                      MinSize = 0'                      MaxSize = 100                  })                  .Row(new                  {                      Quality = 10'                      Title = "RawHD"'                      MinSize = 0'                      MaxSize = 100                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_set_rawhd_to_null,The following statement contains a magic number: qualityDefinitions.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_set_rawhd_to_null,The following statement contains a magic number: qualityDefinitions.First(v => v.Quality == 10).MaxSize.Should().NotHaveValue();
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_preserve_values,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("QualityDefinitions").Row(new                  {                      Quality = 1'                      Title = "SDTV"'                      MinSize = 0'                      MaxSize = 100                  })                  .Row(new                  {                      Quality = 10'                      Title = "RawHD"'                      MinSize = 0'                      MaxSize = 100                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_preserve_values,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("QualityDefinitions").Row(new                  {                      Quality = 1'                      Title = "SDTV"'                      MinSize = 0'                      MaxSize = 100                  })                  .Row(new                  {                      Quality = 10'                      Title = "RawHD"'                      MinSize = 0'                      MaxSize = 100                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_preserve_values,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("QualityDefinitions").Row(new                  {                      Quality = 1'                      Title = "SDTV"'                      MinSize = 0'                      MaxSize = 100                  })                  .Row(new                  {                      Quality = 10'                      Title = "RawHD"'                      MinSize = 0'                      MaxSize = 100                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_preserve_values,The following statement contains a magic number: qualityDefinitions.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,update_quality_minmax_sizeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\084_update_quality_minmax_sizeFixture.cs,should_preserve_values,The following statement contains a magic number: qualityDefinitions.First(v => v.Quality == 1).MaxSize.Should().Be(100);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,pushbullet_devices_channels_listFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\088_pushbullet_devices_channels_listFixture.cs,should_convert_comma_separted_string_to_list,The following statement contains a magic number: items.First().Settings.ToObject<PushBulletSettings88>().ChannelTags.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,metadata_files_extensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\099_extra_and_subtitle_filesFixture.cs,should_set_extension_using_relative_path,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      RelativePath = "banner.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 3'                      Consumer = "XbmcMetadata"                  });                    c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      SeasonNumber = 1'                      EpisodeFileId = 1'                      RelativePath = "Series.Title.S01E01.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 5'                      Consumer = "XbmcMetadata"                  });                    c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      RelativePath = "Series Title"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 3'                      Consumer = "RoksboxMetadata"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,metadata_files_extensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\099_extra_and_subtitle_filesFixture.cs,should_set_extension_using_relative_path,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      RelativePath = "banner.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 3'                      Consumer = "XbmcMetadata"                  });                    c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      SeasonNumber = 1'                      EpisodeFileId = 1'                      RelativePath = "Series.Title.S01E01.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 5'                      Consumer = "XbmcMetadata"                  });                    c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      RelativePath = "Series Title"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 3'                      Consumer = "RoksboxMetadata"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,metadata_files_extensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\099_extra_and_subtitle_filesFixture.cs,should_set_extension_using_relative_path,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      RelativePath = "banner.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 3'                      Consumer = "XbmcMetadata"                  });                    c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      SeasonNumber = 1'                      EpisodeFileId = 1'                      RelativePath = "Series.Title.S01E01.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 5'                      Consumer = "XbmcMetadata"                  });                    c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      RelativePath = "Series Title"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 3'                      Consumer = "RoksboxMetadata"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,metadata_files_extensionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\099_extra_and_subtitle_filesFixture.cs,should_set_extension_using_relative_path,The following statement contains a magic number: items.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_ultrahd_quality_in_profilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\101_add_ultrahd_quality_in_profilesFixture.cs,should_add_ultrahd_to_old_profile,The following statement contains a magic number: items.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_ultrahd_quality_in_profilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\101_add_ultrahd_quality_in_profilesFixture.cs,should_add_ultrahd_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(1' 16' 18' 19);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_ultrahd_quality_in_profilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\101_add_ultrahd_quality_in_profilesFixture.cs,should_add_ultrahd_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(1' 16' 18' 19);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_ultrahd_quality_in_profilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\101_add_ultrahd_quality_in_profilesFixture.cs,should_add_ultrahd_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(1' 16' 18' 19);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,fix_metadata_file_extensionsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\103_fix_metadata_file_extensionsFixture.cs,should_fix_extension_when_relative_path_contained_multiple_periods,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("MetadataFiles").Row(new                  {                      SeriesId = 1'                      SeasonNumber = 1'                      EpisodeFileId = 1'                      RelativePath = "Series.Title.S01E01.jpg"'                      LastUpdated = "2016-05-30 20:23:02.3725923"'                      Type = 5'                      Consumer = "XbmcMetadata"'                      Extension = ".S01E01.jpg"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The following statement contains a magic number: items.Should().HaveCount(6);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_qualities_and_group_with_webdl,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The following statement contains a magic number: items.Should().HaveCount(6);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_bluray480p_quality_and_group_with_dvd,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The following statement contains a magic number: items.Should().HaveCount(6);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_add_webrip_and_webdl_if_webdl_is_missing,The following statement contains a magic number: items.Select(v => v.Items.Count).Should().BeEquivalentTo(0' 2' 2' 2' 2' 2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[2].Items.First().Quality.Should().Be((int)Quality.DVD);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[2].Items.Last().Quality.Should().Be((int)Quality.Bluray480p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[3].Items.First().Quality.Should().Be((int)Quality.WEBRip720p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[3].Items.Last().Quality.Should().Be((int)Quality.WEBDL720p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[4].Items.First().Quality.Should().Be((int)Quality.WEBRip1080p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[4].Items.Last().Quality.Should().Be((int)Quality.WEBDL1080p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[5].Items.First().Quality.Should().Be((int)Quality.WEBRip2160p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_webrip_and_br480_qualites_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\117_add_webrip_qualites_in_profileFixture.cs,should_group_webrip_and_webdl_with_the_same_resolution,The following statement contains a magic number: items[5].Items.Last().Quality.Should().Be((int)Quality.WEBDL2160p);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                  {                      Id = 0'                      Name = "Bluray"'                      Cutoff = 7'                      Items = "[ { \"quality\": 7' \"allowed\": true }' { \"quality\": 19' \"allowed\": true } ]"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile,The following statement contains a magic number: items.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(7' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(7' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(7' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(7' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile_with_groups,The following statement contains a magic number: var db = WithMigrationTestDb(c =>              {                  c.Insert.IntoTable("Profiles").Row(new                                                     {                                                         Id = 0'                                                         Name = "Bluray"'                                                         Cutoff = 7'                                                         Items = "[ { \"id\": 1001' \"name\": \"Why?!\"' \"allowed\": true' \"items\": [{ \"quality\": 8' \"allowed\": true }' { \"quality\": 7' \"allowed\": true }] }' { \"quality\": 19' \"allowed\": true } ]"                  });              });
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile_with_groups,The following statement contains a magic number: items.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile_with_groups,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(null' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile_with_groups,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(null' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_remux_qualities_in_profileFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\122_add_remux_qualities_in_profileFixture.cs,should_add_remux_to_old_profile_with_groups,The following statement contains a magic number: items.Select(v => v.Quality).Should().BeEquivalentTo(null' 20' 19' 21);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_download_client_priorityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\132_add_download_client_priorityFixture.cs,should_renumber_prio_for_enabled_clients,The following statement contains a magic number: items.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_download_client_priorityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\132_add_download_client_priorityFixture.cs,should_renumber_prio_for_enabled_clients,The following statement contains a magic number: items[1].Priority.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_download_client_priorityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\132_add_download_client_priorityFixture.cs,should_renumber_prio_for_enabled_clients,The following statement contains a magic number: items[2].Priority.Should().Be(1);
Magic Number,NzbDrone.Core.Test.Datastore.Migration,add_download_client_priorityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\Migration\132_add_download_client_priorityFixture.cs,should_not_renumber_prio_for_disabled_clients,The following statement contains a magic number: items.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.Datastore.PagingSpecExtensionsTests,ToSortDirectionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\PagingSpecExtensionsTests\ToSortDirectionFixture.cs,should_convert_default_to_asc,The following statement contains a magic number: var pagingSpec = new PagingSpec<Episode>              {                  Page = 1'                  PageSize = 10'                  SortDirection = SortDirection.Default'                  SortKey = "AirDate"              };
Magic Number,NzbDrone.Core.Test.Datastore.PagingSpecExtensionsTests,ToSortDirectionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\PagingSpecExtensionsTests\ToSortDirectionFixture.cs,should_convert_ascending_to_asc,The following statement contains a magic number: var pagingSpec = new PagingSpec<Episode>                  {                      Page = 1'                      PageSize = 10'                      SortDirection = SortDirection.Ascending'                      SortKey = "AirDate"                  };
Magic Number,NzbDrone.Core.Test.Datastore.PagingSpecExtensionsTests,ToSortDirectionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\PagingSpecExtensionsTests\ToSortDirectionFixture.cs,should_convert_descending_to_desc,The following statement contains a magic number: var pagingSpec = new PagingSpec<Episode>              {                  Page = 1'                  PageSize = 10'                  SortDirection = SortDirection.Descending'                  SortKey = "AirDate"              };
Magic Number,NzbDrone.Core.Test.Datastore.SqliteSchemaDumperTests,SqliteSchemaDumperFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Datastore\SqliteSchemaDumperTests\SqliteSchemaDumperFixture.cs,should_ignore_unknown_symbols,The following statement contains a magic number: result.Columns.Count.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: parseResultMultiSet = new RemoteEpisode                                      {                                          Series = series'                                          Release = new ReleaseInfo()'                                          ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.SDTV' new Revision(version: 2)) }'                                          Episodes = new List<Episode> { new Episode()' new Episode()' new Episode()' new Episode()' new Episode()' new Episode() }                                      };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: parseResultMulti = new RemoteEpisode                                      {                                          Series = series'                                          Release = new ReleaseInfo()'                                          ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.SDTV' new Revision(version: 2)) }'                                          Episodes = new List<Episode> { new Episode()' new Episode() }                                      };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: parseResultSingle = new RemoteEpisode                                      {                                          Series = series'                                          Release = new ReleaseInfo()'                                          ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.SDTV' new Revision(version: 2)) }'                                          Episodes = new List<Episode> { new Episode() { Id = 2 } }                                        };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: parseResultSingle = new RemoteEpisode                                      {                                          Series = series'                                          Release = new ReleaseInfo()'                                          ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.SDTV' new Revision(version: 2)) }'                                          Episodes = new List<Episode> { new Episode() { Id = 2 } }                                        };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: qualityType = Builder<QualityDefinition>.CreateNew()                  .With(q => q.MinSize = 2)                  .With(q => q.MaxSize = 10)                  .With(q => q.Quality = Quality.SDTV)                  .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: qualityType = Builder<QualityDefinition>.CreateNew()                  .With(q => q.MinSize = 2)                  .With(q => q.MaxSize = 10)                  .With(q => q.Quality = Quality.SDTV)                  .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>().Setup(                  s => s.GetEpisodesBySeason(It.IsAny<int>()' It.IsAny<int>()))                  .Returns(new List<Episode>() {                      new Episode()' new Episode()' new Episode()' new Episode()' new Episode()'                      new Episode()' new Episode()' new Episode()' new Episode() { Id = 2 }' new Episode() });
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,GivenLastEpisode,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>().Setup(                  s => s.GetEpisodesBySeason(It.IsAny<int>()' It.IsAny<int>()))                  .Returns(new List<Episode>() {                      new Episode()' new Episode()' new Episode()' new Episode()' new Episode()'                      new Episode()' new Episode()' new Episode()' new Episode()' new Episode() { Id = 2 } });
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_size_is_zero,The following statement contains a magic number: series.Runtime = 30;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_size_is_zero,The following statement contains a magic number: qualityType.MinSize = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_size_is_zero,The following statement contains a magic number: qualityType.MaxSize = 20;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_unlimited_30_minute,The following statement contains a magic number: series.Runtime = 30;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_unlimited_30_minute,The following statement contains a magic number: parseResultSingle.Release.Size = 18457280000;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_unlimited_60_minute,The following statement contains a magic number: series.Runtime = 60;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_unlimited_60_minute,The following statement contains a magic number: parseResultSingle.Release.Size = 36857280000;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_treat_daily_series_as_single_episode,The following statement contains a magic number: series.Runtime = 60;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_treat_daily_series_as_single_episode,The following statement contains a magic number: parseResultSingle.Release.Size = 300.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_treat_daily_series_as_single_episode,The following statement contains a magic number: qualityType.MaxSize = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_RAWHD,The following statement contains a magic number: series.Runtime = 45;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AcceptableSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AcceptableSizeSpecificationFixture.cs,should_return_true_if_RAWHD,The following statement contains a magic number: parseResultSingle.Release.Size = 8000.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AlreadyImportedSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AlreadyImportedSpecificationFixture.cs,Setup,The following statement contains a magic number: var singleEpisodeList = new List<Episode>                                      {                                          new Episode                                          {                                              Id = FIRST_EPISODE_ID'                                              SeasonNumber = 12'                                              EpisodeNumber = 3'                                              EpisodeFileId = 1                                          }                                      };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AlreadyImportedSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AlreadyImportedSpecificationFixture.cs,Setup,The following statement contains a magic number: var singleEpisodeList = new List<Episode>                                      {                                          new Episode                                          {                                              Id = FIRST_EPISODE_ID'                                              SeasonNumber = 12'                                              EpisodeNumber = 3'                                              EpisodeFileId = 1                                          }                                      };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,AnimeVersionUpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\AnimeVersionUpgradeSpecificationFixture.cs,Setup,The following statement contains a magic number: _remoteEpisode.ParsedEpisodeInfo = new ParsedEpisodeInfo                                                 {                                                     Quality = new QualityModel(Quality.HDTV720p' new Revision(2))'                                                     ReleaseGroup = "DRONE"                                                 };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_current_episode_is_less_than_cutoff,The following statement contains a magic number: Subject.CutoffNotMet(                  new QualityProfile                   {                       Cutoff = Quality.Bluray1080p.Id'                       Items = Qualities.QualityFixture.GetDefaultQualities()                  }'                  new LanguageProfile                  {                      Languages = LanguageFixture.GetDefaultLanguages(Language.English)'                      Cutoff = Language.English                  }'                  new QualityModel(Quality.DVD' new Revision(version: 2))'                  Language.English'                  NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_current_episode_is_equal_to_cutoff,The following statement contains a magic number: Subject.CutoffNotMet(                  new QualityProfile                  {                      Cutoff = Quality.HDTV720p.Id'                       Items = Qualities.QualityFixture.GetDefaultQualities()                  }'                  new LanguageProfile                  {                      Languages = LanguageFixture.GetDefaultLanguages(Language.English)'                      Cutoff = Language.English                  }'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.English'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_current_episode_is_greater_than_cutoff,The following statement contains a magic number: Subject.CutoffNotMet(                  new QualityProfile                   {                       Cutoff = Quality.HDTV720p.Id'                       Items = Qualities.QualityFixture.GetDefaultQualities()                  }'                  new LanguageProfile                  {                      Languages = LanguageFixture.GetDefaultLanguages(Language.English)'                      Cutoff = Language.English                  }'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  Language.English'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_when_new_episode_is_proper_but_existing_is_not,The following statement contains a magic number: Subject.CutoffNotMet(                  new QualityProfile                   {                       Cutoff = Quality.HDTV720p.Id'                       Items = Qualities.QualityFixture.GetDefaultQualities()                  }'                  new LanguageProfile                  {                      Languages = LanguageFixture.GetDefaultLanguages(Language.English)'                      Cutoff = Language.English                  }'                  new QualityModel(Quality.HDTV720p' new Revision(version: 1))'                  Language.English'                  NoPreferredWordScore'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_cutoff_is_met_and_quality_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  new QualityProfile                   {                      Cutoff = Quality.HDTV720p.Id'                       Items = Qualities.QualityFixture.GetDefaultQualities()                  }'                  new LanguageProfile                  {                      Languages = LanguageFixture.GetDefaultLanguages(Language.English)'                      Cutoff = Language.English                  }'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.English'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_cutoff_is_met_and_quality_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  new QualityProfile                   {                      Cutoff = Quality.HDTV720p.Id'                       Items = Qualities.QualityFixture.GetDefaultQualities()                  }'                  new LanguageProfile                  {                      Languages = LanguageFixture.GetDefaultLanguages(Language.English)'                      Cutoff = Language.English                  }'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.English'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_quality_cutoff_is_met_and_quality_is_higher_but_language_is_not_met,The following statement contains a magic number: Subject.CutoffNotMet(_profile'                  _langProfile'                   new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                   Language.English'                   NoPreferredWordScore'                   new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                   NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_quality_cutoff_is_met_and_quality_is_higher_but_language_is_not_met,The following statement contains a magic number: Subject.CutoffNotMet(_profile'                  _langProfile'                   new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                   Language.English'                   NoPreferredWordScore'                   new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                   NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_cutoff_is_met_and_quality_is_higher_and_language_is_met,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.Spanish'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_cutoff_is_met_and_quality_is_higher_and_language_is_met,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.Spanish'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_cutoff_is_met_and_quality_is_higher_and_language_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.French'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_false_if_cutoff_is_met_and_quality_is_higher_and_language_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.French'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoff_is_not_met_and_new_quality_is_higher_and_language_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.SDTV' new Revision(version: 2))'                  Language.French'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoff_is_not_met_and_new_quality_is_higher_and_language_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.SDTV' new Revision(version: 2))'                  Language.French'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoff_is_not_met_and_language_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.SDTV' new Revision(version: 2))'                  Language.French'                  NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoffs_are_met_and_score_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.Spanish'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  10).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoffs_are_met_and_score_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.Spanish'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  10).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoffs_are_met_and_score_is_higher,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.HDTV720p' new Revision(version: 2))'                  Language.Spanish'                  NoPreferredWordScore'                  new QualityModel(Quality.Bluray1080p' new Revision(version: 2))'                  10).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,CutoffSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\CutoffSpecificationFixture.cs,should_return_true_if_cutoffs_are_met_but_is_a_revision_upgrade,The following statement contains a magic number: Subject.CutoffNotMet(                  _profile'                  _langProfile'                  new QualityModel(Quality.WEBDL1080p' new Revision(version: 1))'                  Language.English'                  NoPreferredWordScore'                  new QualityModel(Quality.WEBDL1080p' new Revision(version: 2))'                  NoPreferredWordScore).Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_have_same_number_of_rejections_as_specs_that_failed,The following statement contains a magic number: result.Single().Rejections.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,broken_report_shouldnt_blowup_the_process,The following statement contains a magic number: ExceptionVerification.ExpectedErrors(3);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_only_include_reports_for_requested_episodes,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                  .All()                  .With(v => v.SeriesId' series.Id)                  .With(v => v.Series' series)                  .With(v => v.SeasonNumber' 1)                  .With(v => v.SceneSeasonNumber' 2)                  .BuildList();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_only_include_reports_for_requested_episodes,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                  .All()                  .With(v => v.SeriesId' series.Id)                  .With(v => v.Series' series)                  .With(v => v.SeasonNumber' 1)                  .With(v => v.SceneSeasonNumber' 2)                  .BuildList();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,DownloadDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\DownloadDecisionMakerFixture.cs,should_return_unknown_series_rejection_if_series_title_is_an_alias_for_another_series,The following statement contains a magic number: Mocker.GetMock<ISceneMappingService>()                    .Setup(s => s.FindTvdbId(It.IsAny<string>()' It.IsAny<string>()))                    .Returns(12345);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,FullSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\FullSeasonSpecificationFixture.cs,Setup,The following statement contains a magic number: var show = Builder<Series>.CreateNew().With(s => s.Id = 1234).Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,FullSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\FullSeasonSpecificationFixture.cs,Setup,The following statement contains a magic number: _remoteEpisode = new RemoteEpisode              {                  ParsedEpisodeInfo = new ParsedEpisodeInfo                  {                      FullSeason = true                  }'                  Episodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-8))                                             .With(s => s.SeriesId = show.Id)                                             .BuildList()'                  Series = show'                  Release = new ReleaseInfo                  {                      Title = "Series.Title.S01.720p.BluRay.X264-RlsGrp"                  }              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,FullSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\FullSeasonSpecificationFixture.cs,Setup,The following statement contains a magic number: _remoteEpisode = new RemoteEpisode              {                  ParsedEpisodeInfo = new ParsedEpisodeInfo                  {                      FullSeason = true                  }'                  Episodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-8))                                             .With(s => s.SeriesId = show.Id)                                             .BuildList()'                  Series = show'                  Release = new ReleaseInfo                  {                      Title = "Series.Title.S01.720p.BluRay.X264-RlsGrp"                  }              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,FullSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\FullSeasonSpecificationFixture.cs,should_return_true_if_is_not_a_full_season,The following statement contains a magic number: _remoteEpisode.Episodes.Last().AirDateUtc = DateTime.UtcNow.AddDays(+2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,FullSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\FullSeasonSpecificationFixture.cs,should_return_false_if_one_episode_has_not_aired,The following statement contains a magic number: _remoteEpisode.Episodes.Last().AirDateUtc = DateTime.UtcNow.AddDays(+2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,WithSize,The following statement contains a magic number: _remoteEpisode.Release.Size = size * 1024 * 1024;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,WithSize,The following statement contains a magic number: _remoteEpisode.Release.Size = size * 1024 * 1024;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_true_when_maximum_size_is_set_to_zero,The following statement contains a magic number: WithSize(1000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_true_when_size_is_smaller_than_maximum_size,The following statement contains a magic number: WithMaximumSize(2000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_true_when_size_is_smaller_than_maximum_size,The following statement contains a magic number: WithSize(1999);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_true_when_size_is_equals_to_maximum_size,The following statement contains a magic number: WithMaximumSize(2000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_true_when_size_is_equals_to_maximum_size,The following statement contains a magic number: WithSize(2000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_false_when_size_is_bigger_than_maximum_size,The following statement contains a magic number: WithMaximumSize(2000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_false_when_size_is_bigger_than_maximum_size,The following statement contains a magic number: WithSize(2001);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MaximumSizeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MaximumSizeSpecificationFixture.cs,should_return_true_when_size_is_zero,The following statement contains a magic number: WithMaximumSize(2000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MinimumAgeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MinimumAgeSpecificationFixture.cs,should_return_true_when_minimum_age_is_set_to_zero,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MinimumAgeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MinimumAgeSpecificationFixture.cs,should_return_true_when_age_is_greater_than_minimum_age,The following statement contains a magic number: WithMinimumAge(30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MinimumAgeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MinimumAgeSpecificationFixture.cs,should_return_true_when_age_is_greater_than_minimum_age,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MinimumAgeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MinimumAgeSpecificationFixture.cs,should_return_false_when_age_is_less_than_minimum_age,The following statement contains a magic number: WithMinimumAge(30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MinimumAgeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MinimumAgeSpecificationFixture.cs,should_return_false_when_age_is_less_than_minimum_age,The following statement contains a magic number: WithAge(10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MultiSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MultiSeasonSpecificationFixture.cs,Setup,The following statement contains a magic number: var series = Builder<Series>.CreateNew().With(s => s.Id = 1234).Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MultiSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MultiSeasonSpecificationFixture.cs,Setup,The following statement contains a magic number: _remoteEpisode = new RemoteEpisode              {                  ParsedEpisodeInfo = new ParsedEpisodeInfo                  {                      FullSeason = true'                      IsMultiSeason = true                  }'                  Episodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(s => s.SeriesId = series.Id)                                             .BuildList()'                  Series = series'                  Release = new ReleaseInfo                  {                      Title = "Series.Title.S01-05.720p.BluRay.X264-RlsGrp"                  }              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,MultiSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\MultiSeasonSpecificationFixture.cs,should_return_true_if_is_not_a_multi_season_release,The following statement contains a magic number: _remoteEpisode.Episodes.Last().AirDateUtc = DateTime.UtcNow.AddDays(+2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_propers_before_non_propers,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p' new Revision(version: 2))' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_put_propers_before_non_propers,The following statement contains a magic number: qualifiedReports.First().RemoteEpisode.ParsedEpisodeInfo.Quality.Revision.Version.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes_with_multiple_episodes,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(2)' GivenEpisode(3) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes_with_multiple_episodes,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(2)' GivenEpisode(3) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_lowest_number_of_episodes_with_multiple_episodes,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The following statement contains a magic number: var remoteEpisodeSd = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.SDTV)' Language.English' size: 100.Megabytes()' age: 1);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The following statement contains a magic number: var remoteEpisodeHdSmallOld = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 1200.Megabytes()' age: 1000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The following statement contains a magic number: var remoteEpisodeHdSmallOld = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 1200.Megabytes()' age: 1000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The following statement contains a magic number: var remoteEpisodeSmallYoung = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 1250.Megabytes()' age: 10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The following statement contains a magic number: var remoteEpisodeSmallYoung = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 1250.Megabytes()' age: 10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_age_then_largest_rounded_to_200mb,The following statement contains a magic number: var remoteEpisodeHdLargeYoung = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 3000.Megabytes()' age: 1);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_youngest,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' age: 10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_order_by_youngest,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' age: 5);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_not_throw_if_no_episodes_are_found,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 500.Megabytes());
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_not_throw_if_no_episodes_are_found,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.HDTV720p)' Language.English' size: 500.Megabytes());
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_season_pack_above_single_episode,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_multiepisode_over_single_episode_for_anime,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_single_episode_over_multi_episode_for_non_anime,The following statement contains a magic number: var remoteEpisode1 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1)' GivenEpisode(2) }' new QualityModel(Quality.HDTV720p)' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_seeders,The following statement contains a magic number: torrentInfo1.Seeders = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_seeders,The following statement contains a magic number: torrentInfo2.Seeders = 100;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_given_equal_number_of_seeds,The following statement contains a magic number: torrentInfo1.Seeders = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_given_equal_number_of_seeds,The following statement contains a magic number: torrentInfo1.Peers = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_given_equal_number_of_seeds,The following statement contains a magic number: torrentInfo2.Peers = 100;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_no_seeds,The following statement contains a magic number: torrentInfo1.Peers = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_releases_with_more_peers_no_seeds,The following statement contains a magic number: torrentInfo2.Peers = 100;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The following statement contains a magic number: torrentInfo1.Seeders = 1000;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The following statement contains a magic number: torrentInfo1.Peers = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The following statement contains a magic number: torrentInfo1.Size = 200.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The following statement contains a magic number: torrentInfo2.Seeders = 1100;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The following statement contains a magic number: torrentInfo2.Peers = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_peers_and_size_are_too_similar,The following statement contains a magic number: torrentInfo1.Size = 250.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_age_and_size_are_too_similar,The following statement contains a magic number: remoteEpisode1.Release.PublishDate = DateTime.UtcNow.AddDays(-100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_age_and_size_are_too_similar,The following statement contains a magic number: remoteEpisode1.Release.Size = 200.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_age_and_size_are_too_similar,The following statement contains a magic number: remoteEpisode2.Release.PublishDate = DateTime.UtcNow.AddDays(-150);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_first_release_if_age_and_size_are_too_similar,The following statement contains a magic number: remoteEpisode2.Release.Size = 250.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The following statement contains a magic number: torrentInfo1.Seeders = 100;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The following statement contains a magic number: torrentInfo1.Peers = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The following statement contains a magic number: torrentInfo1.Size = 200.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The following statement contains a magic number: torrentInfo2.Seeders = 1100;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The following statement contains a magic number: torrentInfo2.Peers = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_quality_over_the_number_of_peers,The following statement contains a magic number: torrentInfo1.Size = 250.Megabytes();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_higher_score_over_lower_score,The following statement contains a magic number: remoteEpisode1.PreferredWordScore = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_higher_score_over_lower_score,The following statement contains a magic number: qualifiedReports.First().RemoteEpisode.PreferredWordScore.Should().Be(10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_prefer_and_upgrade,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(2))' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_prefer_and_upgrade,The following statement contains a magic number: remoteEpisode1.PreferredWordScore = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_prefer_and_upgrade,The following statement contains a magic number: qualifiedReports.First().RemoteEpisode.ParsedEpisodeInfo.Quality.Revision.Version.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_do_not_upgrade,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(2))' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_do_not_upgrade,The following statement contains a magic number: remoteEpisode1.PreferredWordScore = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_proper_over_score_when_download_propers_is_do_not_upgrade,The following statement contains a magic number: qualifiedReports.First().RemoteEpisode.ParsedEpisodeInfo.Quality.Revision.Version.Should().Be(2);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_proper_when_download_propers_is_do_not_prefer,The following statement contains a magic number: var remoteEpisode2 = GivenRemoteEpisode(new List<Episode> { GivenEpisode(1) }' new QualityModel(Quality.WEBDL1080p' new Revision(2))' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_proper_when_download_propers_is_do_not_prefer,The following statement contains a magic number: remoteEpisode1.PreferredWordScore = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_proper_when_download_propers_is_do_not_prefer,The following statement contains a magic number: qualifiedReports.First().RemoteEpisode.PreferredWordScore.Should().Be(10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_real_when_download_propers_is_do_not_prefer,The following statement contains a magic number: remoteEpisode1.PreferredWordScore = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,PrioritizeDownloadDecisionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\PrioritizeDownloadDecisionFixture.cs,should_prefer_score_over_real_when_download_propers_is_do_not_prefer,The following statement contains a magic number: qualifiedReports.First().RemoteEpisode.PreferredWordScore.Should().Be(10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,QualityAllowedByProfileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QualityAllowedByProfileSpecificationFixture.cs,Setup,The following statement contains a magic number: remoteEpisode = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2)) }'              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,QueueSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QueueSpecificationFixture.cs,Setup,The following statement contains a magic number: _otherSeries = Builder<Series>.CreateNew()                                            .With(s => s.Id = 2)                                            .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,QueueSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QueueSpecificationFixture.cs,Setup,The following statement contains a magic number: _otherEpisode = Builder<Episode>.CreateNew()                                              .With(e => e.SeriesId = _otherSeries.Id)                                              .With(e => e.Id = 2)                                              .With(e => e.SeasonNumber = 2)                                              .With(e => e.EpisodeNumber = 2)                                              .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,QueueSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QueueSpecificationFixture.cs,Setup,The following statement contains a magic number: _otherEpisode = Builder<Episode>.CreateNew()                                              .With(e => e.SeriesId = _otherSeries.Id)                                              .With(e => e.Id = 2)                                              .With(e => e.SeasonNumber = 2)                                              .With(e => e.EpisodeNumber = 2)                                              .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,QueueSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QueueSpecificationFixture.cs,Setup,The following statement contains a magic number: _otherEpisode = Builder<Episode>.CreateNew()                                              .With(e => e.SeriesId = _otherSeries.Id)                                              .With(e => e.Id = 2)                                              .With(e => e.SeasonNumber = 2)                                              .With(e => e.EpisodeNumber = 2)                                              .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,QueueSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\QueueSpecificationFixture.cs,should_return_false_if_multi_part_episode_has_two_episodes_in_queue,The following statement contains a magic number: var remoteEpisodes = Builder<RemoteEpisode>.CreateListOfSize(2)                                                         .All()                                                         .With(r => r.Series = _series)                                                         .With(r => r.ParsedEpisodeInfo = new ParsedEpisodeInfo                                                                                          {                                                                                              Quality =                                                                                                  new QualityModel(                                                                                                  Quality.HDTV720p)'                                                                                                  Language = Language.English                                                                                          })                                                         .With(r => r.Release = _releaseInfo)                                                         .TheFirst(1)                                                         .With(r => r.Episodes = new List<Episode> { _episode })                                                         .TheNext(1)                                                         .With(r => r.Episodes = new List<Episode> { _otherEpisode })                                                         .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RepackSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RepackSpecificationFixture.cs,Setup,The following statement contains a magic number: _parsedEpisodeInfo = Builder<ParsedEpisodeInfo>.CreateNew()                                                             .With(p => p.Quality = new QualityModel(Quality.SDTV'                                                                 new Revision(2' 0' false)))                                                             .With(p => p.ReleaseGroup = "Sonarr")                                                             .Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_retention_is_set_to_zero,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_release_if_younger_than_retention,The following statement contains a magic number: WithRetention(1000);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_release_if_younger_than_retention,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_release_and_retention_are_the_same,The following statement contains a magic number: WithRetention(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_release_and_retention_are_the_same,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_false_when_old_than_retention,The following statement contains a magic number: WithRetention(10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_false_when_old_than_retention,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_if_release_came_out_today_and_retention_is_zero,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_release_is_not_usenet,The following statement contains a magic number: WithRetention(10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,RetentionSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RetentionSpecificationFixture.cs,should_return_true_when_release_is_not_usenet,The following statement contains a magic number: WithAge(100);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,SameEpisodesSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\SameEpisodesSpecificationFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(2)                                          .All()                                          .With(e => e.EpisodeFileId = 1)                                          .BuildList();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,SameEpisodesSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\SameEpisodesSpecificationFixture.cs,should_upgrade_when_release_contains_the_same_episodes_as_multiple_files,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                                             .BuildList();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The following statement contains a magic number: _firstFile = new EpisodeFile { Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 2))' DateAdded = DateTime.Now' Language = Language.English };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The following statement contains a magic number: _secondFile = new EpisodeFile { Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 2))' DateAdded = DateTime.Now' Language = Language.English };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultMulti = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }'                  Episodes = doubleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,UpgradeDiskSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeDiskSpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultSingle = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }'                  Episodes = singleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeSpecificationFixture.cs,should_return_true_if_proper_and_download_propers_is_do_not_download,The following statement contains a magic number: Subject.IsUpgradable(                         profile'                         langProfile'                         new QualityModel(Quality.DVD' new Revision(version: 1))'                         Language.English'                         NoPreferredWordScore'                         new QualityModel(Quality.DVD' new Revision(version: 2))'                         Language.English'                         NoPreferredWordScore)                      .Should().BeTrue();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\UpgradeSpecificationFixture.cs,should_return_false_if_proper_and_autoDownloadPropers_is_do_not_prefer,The following statement contains a magic number: Subject.IsUpgradable(                         profile'                         langProfile'                         new QualityModel(Quality.DVD' new Revision(version: 1))'                         Language.English'                         NoPreferredWordScore'                         new QualityModel(Quality.DVD' new Revision(version: 2))'                         Language.English'                         NoPreferredWordScore)                     .Should().BeFalse();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_false_when_system_invoked_search_and_release_is_younger_than_delay,The following statement contains a magic number: _delayProfile.UsenetDelay = 720;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_true_when_release_is_older_than_delay,The following statement contains a magic number: _remoteEpisode.Release.PublishDate = DateTime.UtcNow.AddHours(-10);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_true_when_release_is_older_than_delay,The following statement contains a magic number: _delayProfile.UsenetDelay = 60;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_false_when_release_is_younger_than_delay,The following statement contains a magic number: _delayProfile.UsenetDelay = 720;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_true_when_release_is_a_proper_for_existing_episode,The following statement contains a magic number: _remoteEpisode.ParsedEpisodeInfo.Quality = new QualityModel(Quality.HDTV720p' new Revision(version: 2));
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_true_when_release_is_a_proper_for_existing_episode,The following statement contains a magic number: _delayProfile.UsenetDelay = 720;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_true_when_release_is_a_real_for_existing_episode,The following statement contains a magic number: _delayProfile.UsenetDelay = 720;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_false_when_release_is_proper_for_existing_episode_of_different_quality,The following statement contains a magic number: _remoteEpisode.ParsedEpisodeInfo.Quality = new QualityModel(Quality.WEBDL720p' new Revision(version: 2));
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DelaySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DelaySpecificationFixture.cs,should_be_false_when_release_is_proper_for_existing_episode_of_different_quality,The following statement contains a magic number: _delayProfile.UsenetDelay = 720;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DeletedEpisodeFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DeletedEpisodeFileSpecificationFixture.cs,Setup,The following statement contains a magic number: _secondFile = new EpisodeFile              {                  Id = 2'                  RelativePath = "My.Series.S01E02.mkv"'                  Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 1))'                  DateAdded = DateTime.Now              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DeletedEpisodeFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DeletedEpisodeFileSpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                  new Episode { EpisodeFile = _firstFile' EpisodeFileId = 1 }'                  new Episode { EpisodeFile = _secondFile' EpisodeFileId = 2 }              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DeletedEpisodeFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DeletedEpisodeFileSpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultMulti = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2)) }'                  Episodes = doubleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,DeletedEpisodeFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\DeletedEpisodeFileSpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultSingle = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2)) }'                  Episodes = singleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var singleEpisodeList = new List<Episode> { new Episode { Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 } };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var singleEpisodeList = new List<Episode> { new Episode { Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 } };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: var doubleEpisodeList = new List<Episode> {                                                               new Episode {Id = FIRST_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 3 }'                                                               new Episode {Id = SECOND_EPISODE_ID' SeasonNumber = 12' EpisodeNumber = 4 }'                                                               new Episode {Id = 3' SeasonNumber = 12' EpisodeNumber = 5 }                                                         };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultMulti = new RemoteEpisode              {                  Series = _fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }'                  Episodes = doubleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultSingle = new RemoteEpisode              {                  Series = _fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2))' Language = Language.English }'                  Episodes = singleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,Setup,The following statement contains a magic number: _notupgradableQuality = new Tuple<QualityModel' Language> (new QualityModel(Quality.HDTV1080p' new Revision(version: 2))' Language.English);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_true_if_latest_history_item_is_older_than_twelve_hours,The following statement contains a magic number: GivenMostRecentForEpisode(FIRST_EPISODE_ID' string.Empty' _notupgradableQuality' DateTime.UtcNow.AddHours(-13)' HistoryEventType.Grabbed);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_latest_history_has_a_download_id_and_cdh_is_disabled,The following statement contains a magic number: GivenMostRecentForEpisode(FIRST_EPISODE_ID' "test"' _upgradableQuality' DateTime.UtcNow.AddDays(-100)' HistoryEventType.Grabbed);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_cutoff_already_met_and_cdh_is_disabled,The following statement contains a magic number: GivenMostRecentForEpisode(FIRST_EPISODE_ID' "test"' _upgradableQuality' DateTime.UtcNow.AddDays(-100)' HistoryEventType.Grabbed);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,HistorySpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\HistorySpecificationFixture.cs,should_return_false_if_only_episode_is_not_upgradable_and_cdh_is_disabled,The following statement contains a magic number: GivenMostRecentForEpisode(FIRST_EPISODE_ID' "test"' _notupgradableQuality' DateTime.UtcNow.AddDays(-100)' HistoryEventType.Grabbed);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultMulti = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2)) }'                  Episodes = doubleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,Setup,The following statement contains a magic number: _parseResultSingle = new RemoteEpisode              {                  Series = fakeSeries'                  ParsedEpisodeInfo = new ParsedEpisodeInfo { Quality = new QualityModel(Quality.DVD' new Revision(version: 2)) }'                  Episodes = singleEpisodeList              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,should_return_false_when_episodeFile_was_added_more_than_7_days_ago,The following statement contains a magic number: _firstFile.DateAdded = DateTime.Today.AddDays(-30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,should_return_false_when_first_episodeFile_was_added_more_than_7_days_ago,The following statement contains a magic number: _firstFile.DateAdded = DateTime.Today.AddDays(-30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,should_return_false_when_second_episodeFile_was_added_more_than_7_days_ago,The following statement contains a magic number: _secondFile.DateAdded = DateTime.Today.AddDays(-30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,should_return_true_when_episodeFile_was_added_more_than_7_days_ago_but_proper_is_for_better_quality,The following statement contains a magic number: _firstFile.DateAdded = DateTime.Today.AddDays(-30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.RssSync,ProperSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\RssSync\ProperSpecificationFixture.cs,should_return_true_when_episodeFile_was_added_more_than_7_days_ago_but_is_for_search,The following statement contains a magic number: _firstFile.DateAdded = DateTime.Today.AddDays(-30);
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.Search,SeriesSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\Search\SeriesSpecificationFixture.cs,Setup,The following statement contains a magic number: _series2 = Builder<Series>.CreateNew().With(s => s.Id = 2).Build();
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.Search,TorrentSeedingSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\Search\TorrentSeedingSpecificationFixture.cs,Setup,The following statement contains a magic number: _indexerDefinition = new IndexerDefinition              {                  Settings = new TorrentRssIndexerSettings { MinimumSeeders = 5 }              };
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.Search.SingleEpisodeSearchMatchSpecificationTests,StandardEpisodeSearch,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\Search\SingleEpisodeSearchMatchSpecificationTests\StandardEpisodeSearch.cs,Setup,The following statement contains a magic number: _remoteEpisode.ParsedEpisodeInfo.SeasonNumber = 5;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.Search.SingleEpisodeSearchMatchSpecificationTests,StandardEpisodeSearch,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\Search\SingleEpisodeSearchMatchSpecificationTests\StandardEpisodeSearch.cs,Setup,The following statement contains a magic number: _searchCriteria.SeasonNumber = 5;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.Search.SingleEpisodeSearchMatchSpecificationTests,StandardEpisodeSearch,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\Search\SingleEpisodeSearchMatchSpecificationTests\StandardEpisodeSearch.cs,should_return_false_if_season_does_not_match,The following statement contains a magic number: _remoteEpisode.ParsedEpisodeInfo.SeasonNumber = 10;
Magic Number,NzbDrone.Core.Test.DecisionEngineTests.Search.SingleEpisodeSearchMatchSpecificationTests,StandardEpisodeSearch,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\DecisionEngineTests\Search\SingleEpisodeSearchMatchSpecificationTests\StandardEpisodeSearch.cs,should_return_false_if_episode_number_does_not_match_search_criteria,The following statement contains a magic number: _remoteEpisode.ParsedEpisodeInfo.EpisodeNumbers = new []{ 2 };
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,GivenBlockedClient,The following statement contains a magic number: _blockedProviders.Add(new DownloadClientStatus              {                  ProviderId = id'                  DisabledTill = DateTime.UtcNow.AddHours(3)              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_usenet_client,The following statement contains a magic number: client2.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_usenet_client,The following statement contains a magic number: client3.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_usenet_client,The following statement contains a magic number: client5.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_torrent_client,The following statement contains a magic number: client1.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_torrent_client,The following statement contains a magic number: client2.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_torrent_client,The following statement contains a magic number: client3.Definition.Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_torrent_client,The following statement contains a magic number: client4.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_torrent_client,The following statement contains a magic number: client5.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_protocol_separately,The following statement contains a magic number: client2.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_protocol_separately,The following statement contains a magic number: client3.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_roundrobin_over_protocol_separately,The following statement contains a magic number: client4.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_blocked_torrent_client,The following statement contains a magic number: GivenBlockedClient(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_blocked_torrent_client,The following statement contains a magic number: client1.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_blocked_torrent_client,The following statement contains a magic number: client2.Definition.Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_blocked_torrent_client,The following statement contains a magic number: client3.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_blocked_torrent_client,The following statement contains a magic number: client4.Definition.Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: GivenBlockedClient(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: GivenBlockedClient(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: GivenBlockedClient(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: client1.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: client2.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: client3.Definition.Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_blocked_torrent_client_if_all_blocked,The following statement contains a magic number: client4.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_secondary_prio_torrent_client,The following statement contains a magic number: WithTorrentClient(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_secondary_prio_torrent_client,The following statement contains a magic number: client1.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_secondary_prio_torrent_client,The following statement contains a magic number: client2.Definition.Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_secondary_prio_torrent_client,The following statement contains a magic number: client3.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_skip_secondary_prio_torrent_client,The following statement contains a magic number: client4.Definition.Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: WithTorrentClient(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: WithTorrentClient(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: GivenBlockedClient(4);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: client1.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: client2.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: client3.Definition.Id.Should().Be(2);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientProviderFixture.cs,should_not_skip_secondary_prio_torrent_client_if_primary_blocked,The following statement contains a magic number: client4.Definition.Id.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_consider_blocked_within_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(4)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_consider_blocked_within_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(4)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_consider_blocked_within_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(4)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_consider_blocked_after_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_consider_blocked_after_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_consider_blocked_after_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_initial_failure,The following statement contains a magic number: var origStatus = WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(4)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_initial_failure,The following statement contains a magic number: var origStatus = WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(4)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_initial_failure,The following statement contains a magic number: var origStatus = WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(4)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_initial_failure,The following statement contains a magic number: origStatus.EscalationLevel.Should().Be(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_escalate_further_after_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_escalate_further_after_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_escalate_further_after_5_minutes_since_initial_failure,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_escalate_further_after_5_minutes_since_initial_failure,The following statement contains a magic number: status.EscalationLevel.Should().BeGreaterThan(3);
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_beyond_3_hours,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_beyond_3_hours,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_beyond_3_hours,The following statement contains a magic number: WithStatus(new DownloadClientStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.Download,DownloadClientStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientStatusServiceFixture.cs,should_not_escalate_beyond_3_hours,The following statement contains a magic number: status.DisabledTill.Should().NotBeAfter(_epoch + TimeSpan.FromHours(3.1));
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Setup,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                  .TheFirst(1).With(s => s.Id = 12)                  .TheNext(1).With(s => s.Id = 99)                  .All().With(s => s.SeriesId = 5)                  .Build().ToList();
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Setup,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                  .TheFirst(1).With(s => s.Id = 12)                  .TheNext(1).With(s => s.Id = 99)                  .All().With(s => s.SeriesId = 5)                  .Build().ToList();
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Setup,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                  .TheFirst(1).With(s => s.Id = 12)                  .TheNext(1).With(s => s.Id = 99)                  .All().With(s => s.SeriesId = 5)                  .Build().ToList();
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Setup,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                  .TheFirst(1).With(s => s.Id = 12)                  .TheNext(1).With(s => s.Id = 99)                  .All().With(s => s.SeriesId = 5)                  .Build().ToList();
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Download_report_should_trigger_indexer_backoff_on_http429_with_long_time,The following statement contains a magic number: var response = new HttpResponse(request' new HttpHeader()' new byte[0]' (HttpStatusCode)429);
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Download_report_should_trigger_indexer_backoff_on_http429_with_long_time,The following statement contains a magic number: Mocker.GetMock<IIndexerStatusService>()                  .Verify(v => v.RecordFailure(It.IsAny<int>()' TimeSpan.FromMinutes(5.0))' Times.Once());
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Download_report_should_trigger_indexer_backoff_on_http429_based_on_date,The following statement contains a magic number: var response = new HttpResponse(request' new HttpHeader()' new byte[0]' (HttpStatusCode)429);
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Download_report_should_trigger_indexer_backoff_on_http429_based_on_date,The following statement contains a magic number: response.Headers["Retry-After"] = DateTime.UtcNow.AddSeconds(300).ToString("r");
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Download_report_should_trigger_indexer_backoff_on_http429_based_on_date,The following statement contains a magic number: Mocker.GetMock<IIndexerStatusService>()                  .Verify(v => v.RecordFailure(It.IsAny<int>()'                      It.IsInRange<TimeSpan>(TimeSpan.FromMinutes(4.9)' TimeSpan.FromMinutes(5.1)' Range.Inclusive))' Times.Once());
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,Download_report_should_trigger_indexer_backoff_on_http429_based_on_date,The following statement contains a magic number: Mocker.GetMock<IIndexerStatusService>()                  .Verify(v => v.RecordFailure(It.IsAny<int>()'                      It.IsInRange<TimeSpan>(TimeSpan.FromMinutes(4.9)' TimeSpan.FromMinutes(5.1)' Range.Inclusive))' Times.Once());
Magic Number,NzbDrone.Core.Test.Download,DownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadServiceFixture.cs,should_attempt_download_even_if_client_is_disabled,The following statement contains a magic number: Mocker.GetMock<IDownloadClientStatusService>()                    .Setup(v => v.GetBlockedProviders())                    .Returns(new List<DownloadClientStatus>                    {                        new DownloadClientStatus                        {                            ProviderId = _downloadClients.First().Definition.Id'                            DisabledTill = DateTime.UtcNow.AddHours(3)                        }                    });
Magic Number,NzbDrone.Core.Test.Download,FailedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\FailedDownloadServiceFixture.cs,Setup,The following statement contains a magic number: _grabHistory = Builder<History.History>.CreateListOfSize(2).BuildList();
Magic Number,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_not_download_if_any_episode_was_already_downloaded,The following statement contains a magic number: var remoteEpisode2 = GetRemoteEpisode(                                                      new List<Episode> { GetEpisode(1)' GetEpisode(2) }'                                                      new QualityModel(Quality.HDTV720p)                                                   );
Magic Number,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_return_all_downloaded_reports,The following statement contains a magic number: var remoteEpisode2 = GetRemoteEpisode(                                                      new List<Episode> { GetEpisode(2) }'                                                      new QualityModel(Quality.HDTV720p)                                                   );
Magic Number,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_return_all_downloaded_reports,The following statement contains a magic number: Subject.ProcessDecisions(decisions).Grabbed.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_only_return_downloaded_reports,The following statement contains a magic number: var remoteEpisode2 = GetRemoteEpisode(                                                      new List<Episode> { GetEpisode(2) }'                                                      new QualityModel(Quality.HDTV720p)                                                   );
Magic Number,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_only_return_downloaded_reports,The following statement contains a magic number: var remoteEpisode3 = GetRemoteEpisode(                                                      new List<Episode> { GetEpisode(2) }'                                                      new QualityModel(Quality.HDTV720p)                                                   );
Magic Number,NzbDrone.Core.Test.Download.DownloadApprovedReportsTests,DownloadApprovedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadApprovedReportsTests\DownloadApprovedFixture.cs,should_only_return_downloaded_reports,The following statement contains a magic number: Subject.ProcessDecisions(decisions).Grabbed.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,ScanWatchFolderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\ScanWatchFolderFixture.cs,GivenCompletedItem,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(c => c.GetFileSize(It.IsAny<string>()))                  .Returns(1000000);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,ScanWatchFolderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\ScanWatchFolderFixture.cs,VerifySingleItem,The following statement contains a magic number: var items = Subject.GetItems(_completedDownloadFolder' TimeSpan.FromMilliseconds(50)).ToList();
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,ScanWatchFolderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\ScanWatchFolderFixture.cs,GetItems_should_considered_locked_files_queued,The following statement contains a magic number: Thread.Sleep(60);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,ScanWatchFolderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\ScanWatchFolderFixture.cs,GetItems_should_considered_changing_files_queued,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,ScanWatchFolderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\ScanWatchFolderFixture.cs,GetItems_should_considered_changing_files_queued,The following statement contains a magic number: i < 10
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,ScanWatchFolderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\ScanWatchFolderFixture.cs,GetItems_should_considered_changing_files_queued,The following statement contains a magic number: Thread.Sleep(60);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,TorrentBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\TorrentBlackholeFixture.cs,GivenCompletedItem,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(c => c.GetFileSize(It.IsAny<string>()))                  .Returns(1000000);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.Blackhole,UsenetBlackholeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\Blackhole\UsenetBlackholeFixture.cs,GivenCompletedItem,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                  .Setup(c => c.GetFileSize(It.IsAny<string>()))                  .Returns(1000000);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _queued = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Queued'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 0'                          Progress = 0.0'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _downloading = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Downloading'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 100'                          Progress = 10.0'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _downloading = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Downloading'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 100'                          Progress = 10.0'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _downloading = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Downloading'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 100'                          Progress = 10.0'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _failed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Error'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 100'                          Progress = 10.0'                          Message = "Error"'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _failed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Error'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 100'                          Progress = 10.0'                          Message = "Error"'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _failed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          State = DelugeTorrentStatus.Error'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 100'                          Progress = 10.0'                          Message = "Error"'                          DownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _completed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = true'                          State = DelugeTorrentStatus.Paused'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 1000'                          Progress = 100.0'                          DownloadPath = "somepath"'                          IsAutoManaged = true'                          StopAtRatio = true'                          StopRatio = 1.0'                          Ratio = 1.5                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _completed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = true'                          State = DelugeTorrentStatus.Paused'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 1000'                          Progress = 100.0'                          DownloadPath = "somepath"'                          IsAutoManaged = true'                          StopAtRatio = true'                          StopRatio = 1.0'                          Ratio = 1.5                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _completed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = true'                          State = DelugeTorrentStatus.Paused'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 1000'                          Progress = 100.0'                          DownloadPath = "somepath"'                          IsAutoManaged = true'                          StopAtRatio = true'                          StopRatio = 1.0'                          Ratio = 1.5                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,Setup,The following statement contains a magic number: _completed = new DelugeTorrent                      {                          Hash = "HASH"'                          IsFinished = true'                          State = DelugeTorrentStatus.Paused'                          Name = _title'                          Size = 1000'                          BytesDownloaded = 1000'                          Progress = 100.0'                          DownloadPath = "somepath"'                          IsAutoManaged = true'                          StopAtRatio = true'                          StopRatio = 1.0'                          Ratio = 1.5                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DelugeTests,DelugeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DelugeTests\DelugeFixture.cs,GivenSuccessfulDownload,The following statement contains a magic number: Mocker.GetMock<IHttpClient>()                    .Setup(s => s.Get(It.IsAny<HttpRequest>()))                    .Returns<HttpRequest>(r => new HttpResponse(r' new HttpHeader()' new byte[1000]));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests,DownloadClientFixtureBase<TSubject>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadClientFixtureBase.cs,SetupBase,The following statement contains a magic number: Mocker.GetMock<IConfigService>()                  .SetupGet(s => s.DownloadClientHistoryLimit)                  .Returns(30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _settings = new DownloadStationSettings()              {                  Host = "127.0.0.1"'                  Port = 5000'                  Username = "admin"'                  Password = "pass"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _queued = new DownloadStationTask()              {                  Id = "id1"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Waiting'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "0"}'                          { "size_uploaded"' "0"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _completed = new DownloadStationTask()              {                  Id = "id2"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Finished'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "size_uploaded"' "100"}'                          { "speed_download"' "0" }                      }'                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _seeding = new DownloadStationTask()              {                  Id = "id2"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Seeding'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "size_uploaded"' "100"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _downloading = new DownloadStationTask()              {                  Id = "id3"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Downloading'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "100"}'                          { "size_uploaded"' "10"}'                          { "speed_download"' "50" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _failed = new DownloadStationTask()              {                  Id = "id4"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Error'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "10"}'                          { "size_uploaded"' "1"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _singleFile = new DownloadStationTask()              {                  Id = "id5"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Seeding'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "a.mkv"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "size_uploaded"' "100"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _multipleFiles = new DownloadStationTask()              {                  Id = "id6"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Seeding'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "size_uploaded"' "100"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _singleFileCompleted = new DownloadStationTask()              {                  Id = "id6"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Finished'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "a.mkv"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "size_uploaded"' "100"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The following statement contains a magic number: _multipleFilesCompleted = new DownloadStationTask()              {                  Id = "id6"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Finished'                  Type = DownloadStationTaskType.BT.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' DownloadURL }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "size_uploaded"' "100"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,GivenSuccessfulDownload,The following statement contains a magic number: Mocker.GetMock<IHttpClient>()                    .Setup(s => s.Get(It.IsAny<HttpRequest>()))                    .Returns<HttpRequest>(r => new HttpResponse(r' new HttpHeader()' new byte[1000]));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,GetItems_should_not_map_outputpath_for_queued_or_downloading_tasks,The following statement contains a magic number: items.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,GetItems_should_map_outputpath_for_completed_or_failed_tasks,The following statement contains a magic number: items.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The following statement contains a magic number: _settings = new DownloadStationSettings()              {                  Host = "127.0.0.1"'                  Port = 5000'                  Username = "admin"'                  Password = "pass"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The following statement contains a magic number: _queued = new DownloadStationTask()              {                  Id = "id1"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Waiting'                  Type = DownloadStationTaskType.NZB.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' FileNameBuilder.CleanFileName(_remoteEpisode.Release.Title) + ".nzb" }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "0"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The following statement contains a magic number: _completed = new DownloadStationTask()              {                  Id = "id2"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Finished'                  Type = DownloadStationTaskType.NZB.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' FileNameBuilder.CleanFileName(_remoteEpisode.Release.Title) + ".nzb" }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "speed_download"' "0" }                      }'                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The following statement contains a magic number: _seeding = new DownloadStationTask()              {                  Id = "id2"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Seeding'                  Type = DownloadStationTaskType.NZB.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' FileNameBuilder.CleanFileName(_remoteEpisode.Release.Title) + ".nzb" }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "1000"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The following statement contains a magic number: _downloading = new DownloadStationTask()              {                  Id = "id3"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Downloading'                  Type = DownloadStationTaskType.NZB.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' FileNameBuilder.CleanFileName(_remoteEpisode.Release.Title) + ".nzb" }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "100"}'                          { "speed_download"' "50" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,Setup,The following statement contains a magic number: _failed = new DownloadStationTask()              {                  Id = "id4"'                  Size = 1000'                  Status = DownloadStationTaskStatus.Error'                  Type = DownloadStationTaskType.NZB.ToString()'                  Username = "admin"'                  Title = "title"'                  Additional = new DownloadStationTaskAdditional                  {                      Detail = new Dictionary<string' string>                      {                          { "destination"'"shared/folder" }'                          { "uri"' FileNameBuilder.CleanFileName(_remoteEpisode.Release.Title) + ".nzb" }                      }'                      Transfer = new Dictionary<string' string>                      {                          { "size_downloaded"' "10"}'                          { "speed_download"' "0" }                      }                  }              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,GetItems_should_not_map_outputpath_for_queued_or_downloading_tasks,The following statement contains a magic number: items.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,UsenetDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\UsenetDownloadStationFixture.cs,GetItems_should_map_outputpath_for_completed_or_failed_tasks,The following statement contains a magic number: items.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _queued = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.QueuedForChecking'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 0'                  Progress = 0.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _downloading = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.Downloading'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 100'                  Progress = 10.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _downloading = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.Downloading'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 100'                  Progress = 10.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _downloading = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.Downloading'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 100'                  Progress = 10.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _failed = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.Downloading'                  Error = "some error"'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 100'                  Progress = 10.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _failed = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.Downloading'                  Error = "some error"'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 100'                  Progress = 10.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _failed = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = false'                  State = HadoukenTorrentState.Downloading'                  Error = "some error"'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 100'                  Progress = 10.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _completed = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _completed = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,Setup,The following statement contains a magic number: _completed = new HadoukenTorrent              {                  InfoHash = "HASH"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GivenSuccessfulDownload,The following statement contains a magic number: Mocker.GetMock<IHttpClient>()                    .Setup(s => s.Get(It.IsAny<HttpRequest>()))                    .Returns<HttpRequest>(r => new HttpResponse(r' new HttpHeader()' new byte[1000]));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GetItems_should_return_torrents_with_DownloadId_uppercase,The following statement contains a magic number: var torrent = new HadoukenTorrent              {                  InfoHash = "hash"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GetItems_should_return_torrents_with_DownloadId_uppercase,The following statement contains a magic number: var torrent = new HadoukenTorrent              {                  InfoHash = "hash"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GetItems_should_return_torrents_with_DownloadId_uppercase,The following statement contains a magic number: var torrent = new HadoukenTorrent              {                  InfoHash = "hash"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GetItems_should_ignore_torrents_with_a_different_category,The following statement contains a magic number: var torrent = new HadoukenTorrent              {                  InfoHash = "hash"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv-other"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GetItems_should_ignore_torrents_with_a_different_category,The following statement contains a magic number: var torrent = new HadoukenTorrent              {                  InfoHash = "hash"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv-other"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.HadoukenTests,HadoukenFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\HadoukenTests\HadoukenFixture.cs,GetItems_should_ignore_torrents_with_a_different_category,The following statement contains a magic number: var torrent = new HadoukenTorrent              {                  InfoHash = "hash"'                  IsFinished = true'                  State = HadoukenTorrentState.Paused'                  Name = _title'                  TotalSize = 1000'                  DownloadedBytes = 1000'                  Progress = 100.0'                  SavePath = "somepath"'                  Label = "sonarr-tv-other"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,Setup,The following statement contains a magic number: Subject.Definition.Settings = new NzbgetSettings                                            {                                                Host = "127.0.0.1"'                                                Port = 2222'                                                Username = "admin"'                                                Password = "pass"'                                                TvCategory = "tv"'                                                RecentTvPriority = (int)NzbgetPriority.High                                            };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,Setup,The following statement contains a magic number: _queued = new NzbgetQueueItem                  {                      FileSizeLo = 1000'                      RemainingSizeLo = 10'                      Category = "tv"'                      NzbName = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      Parameters = new List<NzbgetParameter> { new NzbgetParameter { Name = "drone"' Value = "id" } }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,Setup,The following statement contains a magic number: _queued = new NzbgetQueueItem                  {                      FileSizeLo = 1000'                      RemainingSizeLo = 10'                      Category = "tv"'                      NzbName = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      Parameters = new List<NzbgetParameter> { new NzbgetParameter { Name = "drone"' Value = "id" } }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,Setup,The following statement contains a magic number: _failed = new NzbgetHistoryItem                  {                      FileSizeLo = 1000'                      Category = "tv"'                      Name = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      DestDir = "somedirectory"'                      Parameters = new List<NzbgetParameter> { new NzbgetParameter { Name = "drone"' Value = "id" } }'                      ParStatus = "Some Error"'                      UnpackStatus = "NONE"'                      MoveStatus = "NONE"'                      ScriptStatus = "NONE"'                      DeleteStatus = "NONE"'                      MarkStatus = "NONE"                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,Setup,The following statement contains a magic number: _completed = new NzbgetHistoryItem                  {                      FileSizeLo = 1000'                      Category = "tv"'                      Name = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      DestDir = "/remote/mount/tv/Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      Parameters = new List<NzbgetParameter> { new NzbgetParameter { Name = "drone"' Value = "id" } }'                      ParStatus = "SUCCESS"'                      UnpackStatus = "NONE"'                      MoveStatus = "SUCCESS"'                      ScriptStatus = "NONE"'                      DeleteStatus = "NONE"'                      MarkStatus = "NONE"                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbgetTests,NzbgetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbgetTests\NzbgetFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<INzbgetProxy>()                  .Setup(s => s.GetGlobalStatus(It.IsAny<NzbgetSettings>()))                  .Returns(new NzbgetGlobalStatus                  {                      DownloadRate = 7000000                  });
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: Subject.Definition.Settings = new NzbVortexSettings                                            {                                                Host = "127.0.0.1"'                                                Port = 2222'                                                ApiKey = "1234-ABCD"'                                                TvCategory = "tv"'                                                RecentTvPriority = (int)NzbgetPriority.High                                            };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: _queued = new NzbVortexQueueItem                  {                      Id = RandomNumber'                      DownloadedSize = 1000'                      TotalDownloadSize = 10'                      GroupName = "tv"'                      UiTitle = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: _queued = new NzbVortexQueueItem                  {                      Id = RandomNumber'                      DownloadedSize = 1000'                      TotalDownloadSize = 10'                      GroupName = "tv"'                      UiTitle = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: _failed = new NzbVortexQueueItem                  {                      DownloadedSize = 1000'                      TotalDownloadSize = 1000'                      GroupName = "tv"'                      UiTitle = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      DestinationPath = "somedirectory"'                      State =  NzbVortexStateType.UncompressFailed'                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: _failed = new NzbVortexQueueItem                  {                      DownloadedSize = 1000'                      TotalDownloadSize = 1000'                      GroupName = "tv"'                      UiTitle = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      DestinationPath = "somedirectory"'                      State =  NzbVortexStateType.UncompressFailed'                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: _completed = new NzbVortexQueueItem                  {                      DownloadedSize = 1000'                      TotalDownloadSize = 1000'                      GroupName = "tv"'                      UiTitle = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      DestinationPath = "/remote/mount/tv/Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      State = NzbVortexStateType.Done                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.NzbVortexTests,NzbVortexFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\NzbVortexTests\NzbVortexFixture.cs,Setup,The following statement contains a magic number: _completed = new NzbVortexQueueItem                  {                      DownloadedSize = 1000'                      TotalDownloadSize = 1000'                      GroupName = "tv"'                      UiTitle = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      DestinationPath = "/remote/mount/tv/Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                      State = NzbVortexStateType.Done                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,Setup,The following statement contains a magic number: Subject.Definition.Settings = new QBittorrentSettings              {                  Host = "127.0.0.1"'                  Port = 2222'                  Username = "admin"'                  Password = "pass"'                  TvCategory = "tv"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,GivenSuccessfulDownload,The following statement contains a magic number: Mocker.GetMock<IQBittorrentProxy>()                  .Setup(s => s.AddTorrentFromUrl(It.IsAny<string>()' It.IsAny<QBittorrentSettings>()))                  .Callback(() =>                  {                      var torrent = new QBittorrentTorrent                      {                          Hash = "HASH"'                          Name = _title'                          Size = 1000'                          Progress = 1.0'                          Eta = 8640000'                          State = "queuedUP"'                          Label = ""'                          SavePath = ""                      };                      GivenTorrents(new List<QBittorrentTorrent> { torrent });                  });
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,GivenSuccessfulDownload,The following statement contains a magic number: Mocker.GetMock<IQBittorrentProxy>()                  .Setup(s => s.AddTorrentFromUrl(It.IsAny<string>()' It.IsAny<QBittorrentSettings>()))                  .Callback(() =>                  {                      var torrent = new QBittorrentTorrent                      {                          Hash = "HASH"'                          Name = _title'                          Size = 1000'                          Progress = 1.0'                          Eta = 8640000'                          State = "queuedUP"'                          Label = ""'                          SavePath = ""                      };                      GivenTorrents(new List<QBittorrentTorrent> { torrent });                  });
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,error_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "error"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,error_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "error"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,error_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "error"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,paused_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "pausedDL"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,paused_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "pausedDL"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,paused_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "pausedDL"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,completed_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,completed_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,queued_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,queued_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,queued_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,downloading_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 60'                  State = "downloading"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,downloading_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 60'                  State = "downloading"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,downloading_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 60'                  State = "downloading"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,stalledDL_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "stalledDL"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,stalledDL_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "stalledDL"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,stalledDL_item_should_have_required_properties,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 0.7'                  Eta = 8640000'                  State = "stalledDL"'                  Label = ""'                  SavePath = ""              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_ratio_not_reached,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "uploading"'                  Label = ""'                  SavePath = ""'                  Ratio = 0.5f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_ratio_not_reached,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "uploading"'                  Label = ""'                  SavePath = ""'                  Ratio = 0.5f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_ratio_not_reached,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "uploading"'                  Label = ""'                  SavePath = ""'                  Ratio = 0.5f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,GivenCompletedTorrent,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""'                  Ratio = ratio'                  RatioLimit = ratioLimit'                  SeedingTimeLimit = seedingTimeLimit              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,GivenCompletedTorrent,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = state'                  Label = ""'                  SavePath = ""'                  Ratio = ratio'                  RatioLimit = ratioLimit'                  SeedingTimeLimit = seedingTimeLimit              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_ratio_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0f);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_ratio_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 1.0f' ratioLimit: 0.8f);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_ratio_not_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(0.2f);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_ratio_not_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 0.5f' ratioLimit: 0.8f);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_ratio_not_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 0.5f' ratioLimit: 0.8f);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_seedingtime_reached_and_not_paused,The following statement contains a magic number: GivenGlobalSeedLimits(-1' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_seedingtime_reached_and_not_paused,The following statement contains a magic number: GivenCompletedTorrent("uploading"' ratio: 2.0f' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_seedingtime_reached_and_not_paused,The following statement contains a magic number: GivenCompletedTorrent("uploading"' ratio: 2.0f' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(-1' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(-1' 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20' seedingTimeLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20' seedingTimeLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_seedingtime_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20' seedingTimeLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_seedingtime_not_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(-1' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_seedingtime_not_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 30' seedingTimeLimit: 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_seedingtime_not_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 30' seedingTimeLimit: 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_be_removable_if_overridden_max_seedingtime_not_reached_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 30' seedingTimeLimit: 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_max_seedingtime_reached_but_ratio_not_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0f' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_max_seedingtime_reached_but_ratio_not_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0f' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_be_removable_and_should_allow_move_files_if_max_seedingtime_reached_but_ratio_not_and_paused,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 1.0f' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_fetch_details_twice,The following statement contains a magic number: GivenGlobalSeedLimits(-1' 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_fetch_details_twice,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_not_fetch_details_twice,The following statement contains a magic number: GivenCompletedTorrent("pausedUP"' ratio: 2.0f' seedingTime: 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_get_category_from_the_category_if_set,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "pausedUP"'                  Category = category'                  SavePath = ""'                  Ratio = 1.0f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_get_category_from_the_category_if_set,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "pausedUP"'                  Category = category'                  SavePath = ""'                  Ratio = 1.0f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_get_category_from_the_label_if_the_category_is_not_available,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "pausedUP"'                  Label = category'                  SavePath = ""'                  Ratio = 1.0f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.QBittorrentTests,QBittorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\QBittorrentTests\QBittorrentFixture.cs,should_get_category_from_the_label_if_the_category_is_not_available,The following statement contains a magic number: var torrent = new QBittorrentTorrent              {                  Hash = "HASH"'                  Name = _title'                  Size = 1000'                  Progress = 1.0'                  Eta = 8640000'                  State = "pausedUP"'                  Label = category'                  SavePath = ""'                  Ratio = 1.0f              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.RTorrentTests,RTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\RTorrentTests\RTorrentFixture.cs,Setup,The following statement contains a magic number: _downloading = new RTorrentTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          IsOpen = true'                          IsActive = true'                          Name = _title'                          TotalSize = 1000'                          RemainingSize = 500'                          Path = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.RTorrentTests,RTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\RTorrentTests\RTorrentFixture.cs,Setup,The following statement contains a magic number: _downloading = new RTorrentTorrent                      {                          Hash = "HASH"'                          IsFinished = false'                          IsOpen = true'                          IsActive = true'                          Name = _title'                          TotalSize = 1000'                          RemainingSize = 500'                          Path = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.RTorrentTests,RTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\RTorrentTests\RTorrentFixture.cs,Setup,The following statement contains a magic number: _completed = new RTorrentTorrent                      {                          Hash = "HASH"'                          IsFinished = true'                          Name = _title'                          TotalSize = 1000'                          RemainingSize = 0'                          Path = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests.JsonConvertersTests,SabnzbdQueueTimeConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\JsonConvertersTests\SabnzbdQueueTimeConverterFixture.cs,should_support_pre_1_1_0rc4_format,The following statement contains a magic number: item.Timeleft.Should().Be(new TimeSpan(40' 12' 14));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests.JsonConvertersTests,SabnzbdQueueTimeConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\JsonConvertersTests\SabnzbdQueueTimeConverterFixture.cs,should_support_pre_1_1_0rc4_format,The following statement contains a magic number: item.Timeleft.Should().Be(new TimeSpan(40' 12' 14));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests.JsonConvertersTests,SabnzbdQueueTimeConverterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\JsonConvertersTests\SabnzbdQueueTimeConverterFixture.cs,should_support_pre_1_1_0rc4_format,The following statement contains a magic number: item.Timeleft.Should().Be(new TimeSpan(40' 12' 14));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Setup,The following statement contains a magic number: Subject.Definition.Settings = new SabnzbdSettings                                            {                                                Host = "127.0.0.1"'                                                Port = 2222'                                                ApiKey = "5c770e3197e4fe763423ee7c392c25d1"'                                                Username = "admin"'                                                Password = "pass"'                                                TvCategory = "tv"'                                                RecentTvPriority = (int)SabnzbdPriority.High                                            };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Setup,The following statement contains a magic number: _queued = new SabnzbdQueue                  {                      DefaultRootFolder = @"Y:\nzbget\root".AsOsAgnostic()'                      Paused = false'                      Items = new List<SabnzbdQueueItem>()                      {                          new SabnzbdQueueItem                          {                              Status = SabnzbdDownloadStatus.Downloading'                              Size = 1000'                              Sizeleft = 10'                              Timeleft = TimeSpan.FromSeconds(10)'                              Category = "tv"'                              Id = "sabnzbd_nzb12345"'                              Title = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                          }                      }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Setup,The following statement contains a magic number: _queued = new SabnzbdQueue                  {                      DefaultRootFolder = @"Y:\nzbget\root".AsOsAgnostic()'                      Paused = false'                      Items = new List<SabnzbdQueueItem>()                      {                          new SabnzbdQueueItem                          {                              Status = SabnzbdDownloadStatus.Downloading'                              Size = 1000'                              Sizeleft = 10'                              Timeleft = TimeSpan.FromSeconds(10)'                              Category = "tv"'                              Id = "sabnzbd_nzb12345"'                              Title = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                          }                      }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Setup,The following statement contains a magic number: _queued = new SabnzbdQueue                  {                      DefaultRootFolder = @"Y:\nzbget\root".AsOsAgnostic()'                      Paused = false'                      Items = new List<SabnzbdQueueItem>()                      {                          new SabnzbdQueueItem                          {                              Status = SabnzbdDownloadStatus.Downloading'                              Size = 1000'                              Sizeleft = 10'                              Timeleft = TimeSpan.FromSeconds(10)'                              Category = "tv"'                              Id = "sabnzbd_nzb12345"'                              Title = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                          }                      }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Setup,The following statement contains a magic number: _failed = new SabnzbdHistory                  {                      Items = new List<SabnzbdHistoryItem>()                      {                          new SabnzbdHistoryItem                          {                              Status = SabnzbdDownloadStatus.Failed'                              Size = 1000'                              Category = "tv"'                              Id = "sabnzbd_nzb12345"'                              Title = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                          }                      }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.SabnzbdTests,SabnzbdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\SabnzbdTests\SabnzbdFixture.cs,Setup,The following statement contains a magic number: _completed = new SabnzbdHistory                  {                      Items = new List<SabnzbdHistoryItem>()                      {                          new SabnzbdHistoryItem                          {                              Status = SabnzbdDownloadStatus.Completed'                              Size = 1000'                              Category = "tv"'                              Id = "sabnzbd_nzb12345"'                              Title = "Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"'                              Storage = "/remote/mount/vv/Droned.S01E01.Pilot.1080p.WEB-DL-DRONE"                          }                      }                  };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_ratio_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_ratio_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 1.0' ratioLimit: 0.8);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_ratio_not_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(0.2);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_ratio_not_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 0.5' ratioLimit: 0.8);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_ratio_not_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 0.5' ratioLimit: 0.8);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_idletime_reached_and_not_paused,The following statement contains a magic number: GivenGlobalSeedLimits(null' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_idletime_reached_and_not_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(false' ratio: 2.0' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_and_should_not_allow_move_files_if_max_idletime_reached_and_not_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(false' ratio: 2.0' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_max_idletime_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(null' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_max_idletime_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 2.0' seedingTime: 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_max_idletime_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 2.0' seedingTime: 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_idletime_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(null' 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_idletime_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 2.0' seedingTime: 20' idleLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_idletime_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 2.0' seedingTime: 20' idleLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_overridden_max_idletime_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 2.0' seedingTime: 20' idleLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_not_allow_move_files_if_overridden_max_idletime_reached_and_not_paused,The following statement contains a magic number: GivenGlobalSeedLimits(null' 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_not_allow_move_files_if_overridden_max_idletime_reached_and_not_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(false' ratio: 2.0' seedingTime: 20' idleLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_not_allow_move_files_if_overridden_max_idletime_reached_and_not_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(false' ratio: 2.0' seedingTime: 20' idleLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_not_allow_move_files_if_overridden_max_idletime_reached_and_not_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(false' ratio: 2.0' seedingTime: 20' idleLimit: 10);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_idletime_not_reached_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(null' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_idletime_not_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true'  ratio: 2.0' seedingTime: 30' idleLimit: 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_idletime_not_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true'  ratio: 2.0' seedingTime: 30' idleLimit: 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_overridden_max_idletime_not_reached_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true'  ratio: 2.0' seedingTime: 30' idleLimit: 40);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_max_idletime_reached_but_ratio_not_and_not_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_max_idletime_reached_but_ratio_not_and_not_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_not_be_removable_if_max_idletime_reached_but_ratio_not_and_not_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(false' ratio: 1.0' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_max_idletime_configured_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_max_idletime_configured_and_paused,The following statement contains a magic number: GivenGlobalSeedLimits(2.0' 20);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixture.cs,should_be_removable_and_should_allow_move_files_if_max_idletime_configured_and_paused,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratio: 1.0' seedingTime: 30);
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _settings = new TransmissionSettings              {                  Host = "127.0.0.1"'                  Port = 2222'                  Username = "admin"'                  Password = "pass"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _queued = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Queued'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 1000'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _queued = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Queued'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 1000'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _downloading = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Downloading'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 100'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _downloading = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Downloading'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 100'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _failed = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Stopped'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 100'                  ErrorString = "Error"'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _failed = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Stopped'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 100'                  ErrorString = "Error"'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _completed = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = true'                  Status = TransmissionTorrentStatus.Seeding'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 0'                  DownloadDir = "somepath"'                  DownloadedEver = 1000'                  UploadedEver = 900              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _completed = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = true'                  Status = TransmissionTorrentStatus.Seeding'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 0'                  DownloadDir = "somepath"'                  DownloadedEver = 1000'                  UploadedEver = 900              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _completed = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = true'                  Status = TransmissionTorrentStatus.Seeding'                  Name = _title'                  TotalSize = 1000'                  LeftUntilDone = 0'                  DownloadDir = "somepath"'                  DownloadedEver = 1000'                  UploadedEver = 900              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,Setup,The following statement contains a magic number: _magnet = new TransmissionTorrent              {                  HashString = "HASH"'                  IsFinished = false'                  Status = TransmissionTorrentStatus.Downloading'                  Name = _title'                  TotalSize = 0'                  LeftUntilDone = 100'                  DownloadDir = "somepath"              };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,GivenSuccessfulDownload,The following statement contains a magic number: Mocker.GetMock<IHttpClient>()                    .Setup(s => s.Get(It.IsAny<HttpRequest>()))                    .Returns<HttpRequest>(r => new HttpResponse(r' new HttpHeader()' new byte[1000]));
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,PrepareClientToReturnCompletedItem,The following statement contains a magic number: _completed.SecondsSeeding = seedingTime * 60;
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,PrepareClientToReturnCompletedItem,The following statement contains a magic number: _completed.SeedRatioMode = 2;
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.TransmissionTests,TransmissionFixtureBase<TClient>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\TransmissionTests\TransmissionFixtureBase.cs,PrepareClientToReturnCompletedItem,The following statement contains a magic number: _completed.SeedIdleMode = 2;
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: Subject.Definition.Settings = new UTorrentSettings                                            {                                                Host = "127.0.0.1"'                                                Port = 2222'                                                Username = "admin"'                                                Password = "pass"'                                                TvCategory = "tv"                                            };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _queued = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Queued | UTorrentTorrentStatus.Loaded'                          Name = _title'                          Size = 1000'                          Remaining = 1000'                          Progress = 0'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _queued = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Queued | UTorrentTorrentStatus.Loaded'                          Name = _title'                          Size = 1000'                          Remaining = 1000'                          Progress = 0'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _downloading = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Started | UTorrentTorrentStatus.Loaded'                          Name = _title'                          Size = 1000'                          Remaining = 100'                          Progress = 0.9'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _downloading = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Started | UTorrentTorrentStatus.Loaded'                          Name = _title'                          Size = 1000'                          Remaining = 100'                          Progress = 0.9'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _downloading = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Started | UTorrentTorrentStatus.Loaded'                          Name = _title'                          Size = 1000'                          Remaining = 100'                          Progress = 0.9'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _failed = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Error'                          Name = _title'                          Size = 1000'                          Remaining = 100'                          Progress = 0.9'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _failed = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Error'                          Name = _title'                          Size = 1000'                          Remaining = 100'                          Progress = 0.9'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _failed = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Error'                          Name = _title'                          Size = 1000'                          Remaining = 100'                          Progress = 0.9'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.UTorrentTests,UTorrentFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\UTorrentTests\UTorrentFixture.cs,Setup,The following statement contains a magic number: _completed = new UTorrentTorrent                      {                          Hash = "HASH"'                          Status = UTorrentTorrentStatus.Checked | UTorrentTorrentStatus.Loaded'                          Name = _title'                          Size = 1000'                          Remaining = 0'                          Progress = 1.0'                          Label = "tv"'                          DownloadUrl = _downloadUrl'                          RootDownloadPath = "somepath"                      };
Magic Number,NzbDrone.Core.Test.Download.DownloadClientTests.VuzeTests,VuzeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\VuzeTests\VuzeFixture.cs,completed_download_should_have_required_properties,The following statement contains a magic number: PrepareClientToReturnCompletedItem(true' ratioLimit: 0.5);
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,PendingReleaseServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\PendingReleaseServiceFixture.cs,should_ignore_pending_items_from_unavailable_indexer,The following statement contains a magic number: Mocker.GetMock<IIndexerStatusService>()                  .Setup(v => v.GetBlockedProviders())                  .Returns(new List<IndexerStatus> { new IndexerStatus { ProviderId = 1' DisabledTill = DateTime.UtcNow.AddHours(2) } });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_same_release,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_same_release,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: var queueId = HashConverter.GetHashInt31(string.Format("pending-{0}-ep{1}"' 3' _episode.Id));
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AssertRemoved(3' 4);
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_remove_multiple_releases_release,The following statement contains a magic number: AssertRemoved(3' 4);
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 3' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 3' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 3' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 3' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_season,The following statement contains a magic number: AssertRemoved(1' 2);
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 2' episodes: new[] { 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 2' episodes: new[] { 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 3' seasonNumber: 2' episodes: new[] { 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AddPending(id: 4' seasonNumber: 2' episodes: new[] { 3 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_diffrent_episodes,The following statement contains a magic number: AssertRemoved(1' 2);
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_multiepisodes,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_multiepisodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1' 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_multiepisodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1' 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_multiepisodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1' 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_singleepisodes,The following statement contains a magic number: AddPending(id: 1' seasonNumber: 2' episodes: new[] { 1 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_singleepisodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1' 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_singleepisodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1' 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_singleepisodes,The following statement contains a magic number: AddPending(id: 2' seasonNumber: 2' episodes: new[] { 1' 2 });
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_singleepisodes,The following statement contains a magic number: var queueId = HashConverter.GetHashInt31(string.Format("pending-{0}-ep{1}"' 2' _episode.Id));
Magic Number,NzbDrone.Core.Test.Download.Pending.PendingReleaseServiceTests,RemovePendingFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\Pending\PendingReleaseServiceTests\RemovePendingFixture.cs,should_not_remove_singleepisodes,The following statement contains a magic number: AssertRemoved(2);
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,GivenDownloadHistory,The following statement contains a magic number: Mocker.GetMock<IHistoryService>()                  .Setup(s => s.FindByDownloadId(It.Is<string>(sr => sr == "35238")))                  .Returns(new List<History.History>(){                   new History.History(){                       DownloadId = "35238"'                       SourceTitle = "TV Series S01"'                       SeriesId = 5'                       EpisodeId = 4                   }                  });
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,GivenDownloadHistory,The following statement contains a magic number: Mocker.GetMock<IHistoryService>()                  .Setup(s => s.FindByDownloadId(It.Is<string>(sr => sr == "35238")))                  .Returns(new List<History.History>(){                   new History.History(){                       DownloadId = "35238"'                       SourceTitle = "TV Series S01"'                       SeriesId = 5'                       EpisodeId = 4                   }                  });
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_track_downloads_using_the_source_title_if_it_cannot_be_found_using_the_download_title,The following statement contains a magic number: var remoteEpisode = new RemoteEpisode              {                  Series = new Series() { Id = 5 }'                  Episodes = new List<Episode> { new Episode { Id = 4 } }'                  ParsedEpisodeInfo = new ParsedEpisodeInfo()                  {                      SeriesTitle = "TV Series"'                      SeasonNumber = 1                  }              };
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_track_downloads_using_the_source_title_if_it_cannot_be_found_using_the_download_title,The following statement contains a magic number: var remoteEpisode = new RemoteEpisode              {                  Series = new Series() { Id = 5 }'                  Episodes = new List<Episode> { new Episode { Id = 4 } }'                  ParsedEpisodeInfo = new ParsedEpisodeInfo()                  {                      SeriesTitle = "TV Series"'                      SeasonNumber = 1                  }              };
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_track_downloads_using_the_source_title_if_it_cannot_be_found_using_the_download_title,The following statement contains a magic number: trackedDownload.RemoteEpisode.Series.Id.Should().Be(5);
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_track_downloads_using_the_source_title_if_it_cannot_be_found_using_the_download_title,The following statement contains a magic number: trackedDownload.RemoteEpisode.Episodes.First().Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The following statement contains a magic number: var remoteEpisode = new RemoteEpisode              {                  Series = new Series() { Id = 5 }'                  Episodes = new List<Episode> { new Episode { Id = 4 } }'                  ParsedEpisodeInfo = new ParsedEpisodeInfo()                  {                      SeriesTitle = "TV Series"'                      SeasonNumber = 0'                      EpisodeNumbers = new []{ 1 }                  }              };
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The following statement contains a magic number: var remoteEpisode = new RemoteEpisode              {                  Series = new Series() { Id = 5 }'                  Episodes = new List<Episode> { new Episode { Id = 4 } }'                  ParsedEpisodeInfo = new ParsedEpisodeInfo()                  {                      SeriesTitle = "TV Series"'                      SeasonNumber = 0'                      EpisodeNumbers = new []{ 1 }                  }              };
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The following statement contains a magic number: Mocker.GetMock<IHistoryService>()                  .Setup(s => s.FindByDownloadId(It.Is<string>(sr => sr == "35238")))                  .Returns(new List<History.History>(){                   new History.History(){                       DownloadId = "35238"'                       SourceTitle = "TV Series Special"'                       SeriesId = 5'                       EpisodeId = 4                   }                  });
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The following statement contains a magic number: Mocker.GetMock<IHistoryService>()                  .Setup(s => s.FindByDownloadId(It.Is<string>(sr => sr == "35238")))                  .Returns(new List<History.History>(){                   new History.History(){                       DownloadId = "35238"'                       SourceTitle = "TV Series Special"'                       SeriesId = 5'                       EpisodeId = 4                   }                  });
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The following statement contains a magic number: trackedDownload.RemoteEpisode.Series.Id.Should().Be(5);
Magic Number,NzbDrone.Core.Test.Download.TrackedDownloads,TrackedDownloadServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\TrackedDownloads\TrackedDownloadServiceFixture.cs,should_parse_as_special_when_source_title_parsing_fails,The following statement contains a magic number: trackedDownload.RemoteEpisode.Episodes.First().Id.Should().Be(4);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,ToBestDateTime_DayOfWeek,The following statement contains a magic number: i < 7
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,ToBestDateTime_Over_One_Week,The following statement contains a magic number: var dateTime = DateTime.Today.AddDays(8);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,ToBestDateTime_Before_Yesterday,The following statement contains a magic number: var dateTime = DateTime.Today.AddDays(-2);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MaxOrDefault_should_return_max_when_collection_is_not_empty,The following statement contains a magic number: result.Should().Be(10);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,Truncate_should_truncate_strings_to_max_specified_number_of_bytes,The following statement contains a magic number: var resultString = str.Truncate(1000);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,Truncate_should_truncate_strings_to_max_specified_number_of_bytes,The following statement contains a magic number: result.Length.Should().BeLessOrEqualTo(1000);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,Truncate_should_not_truncate_string_shorter_than_max_bytes,The following statement contains a magic number: var resultString = str.Truncate(1000);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,Truncate_should_not_truncate_string_shorter_than_max_bytes,The following statement contains a magic number: result.Length.Should().Be(11);
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: var list = new List<int> { 6' 4' 5' 3' 8' 10 };
Magic Number,NzbDrone.Core.Test,FluentTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\FluentTest.cs,MinOrDefault_should_return_min_when_collection_is_not_empty,The following statement contains a magic number: result.Should().Be(3);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,Icomparer_greater_test,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,Icomparer_lesser_test,The following statement contains a magic number: var first = new XbmcVersion(5' 5' 5);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,Icomparer_lesser_test,The following statement contains a magic number: var first = new XbmcVersion(5' 5' 5);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,Icomparer_lesser_test,The following statement contains a magic number: var first = new XbmcVersion(5' 5' 5);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,equal_operand,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,equal_operand,The following statement contains a magic number: var second = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,equal_operand_false,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,equal_operand_false,The following statement contains a magic number: var second = new XbmcVersion(6' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,not_equal_operand_false,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,not_equal_operand_false,The following statement contains a magic number: var second = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,not_equal_operand_true,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,not_equal_operand_true,The following statement contains a magic number: var second = new XbmcVersion(6' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,greater_operand,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,greater_operand,The following statement contains a magic number: var second = new XbmcVersion(6' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,lesser_operand,The following statement contains a magic number: var first = new XbmcVersion(5' 0' 0);
Magic Number,NzbDrone.Core.Test,XbmcVersionTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\XbmcVersionTests.cs,lesser_operand,The following statement contains a magic number: var second = new XbmcVersion(6' 0' 0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_not_process_images_before_tvdb_switch,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 25);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_not_process_images_before_tvdb_switch,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 25);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_not_process_images_before_tvdb_switch,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 25);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_set_clean_flag_to_false,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 25);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_set_clean_flag_to_false,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 25);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_set_clean_flag_to_false,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 25);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_delete_html_images,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_delete_html_images,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_delete_html_images,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_delete_empty_images,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_delete_empty_images,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_delete_empty_images,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_not_delete_non_html_files,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_not_delete_non_html_files,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,DeleteBadMediaCoversFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\DeleteBadMediaCovers.cs,should_not_delete_non_html_files,The following statement contains a magic number: _metadata.First().LastUpdated = new DateTime(2014' 12' 29);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,GivenIndexer,The following statement contains a magic number: _blockedIndexers.Add(new IndexerStatus                      {                          ProviderId = id'                          InitialFailure = DateTime.UtcNow.AddHours(-failureHours)'                          MostRecentFailure = DateTime.UtcNow.AddHours(-0.1)'                          EscalationLevel = 5'                          DisabledTill = DateTime.UtcNow.AddHours(backoffHours)                      });
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,GivenIndexer,The following statement contains a magic number: _blockedIndexers.Add(new IndexerStatus                      {                          ProviderId = id'                          InitialFailure = DateTime.UtcNow.AddHours(-failureHours)'                          MostRecentFailure = DateTime.UtcNow.AddHours(-0.1)'                          EscalationLevel = 5'                          DisabledTill = DateTime.UtcNow.AddHours(backoffHours)                      });
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_indexer_unavailable,The following statement contains a magic number: GivenIndexer(1' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_indexer_unavailable,The following statement contains a magic number: GivenIndexer(1' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_indexer_unavailable,The following statement contains a magic number: GivenIndexer(2' 0.0' 0.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_error_if_all_indexers_unavailable,The following statement contains a magic number: GivenIndexer(1' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_error_if_all_indexers_unavailable,The following statement contains a magic number: GivenIndexer(1' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_few_indexers_unavailable,The following statement contains a magic number: GivenIndexer(1' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_few_indexers_unavailable,The following statement contains a magic number: GivenIndexer(1' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_few_indexers_unavailable,The following statement contains a magic number: GivenIndexer(2' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_few_indexers_unavailable,The following statement contains a magic number: GivenIndexer(2' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_few_indexers_unavailable,The following statement contains a magic number: GivenIndexer(2' 10.0' 24.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,IndexerStatusCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\IndexerStatusCheckFixture.cs,should_return_warning_if_few_indexers_unavailable,The following statement contains a magic number: GivenIndexer(3' 0.0' 0.0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,RemovedSeriesCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\RemovedSeriesCheckFixture.cs,should_return_error_if_series_no_longer_on_tvdb,The following statement contains a magic number: GivenSeries(4' 1);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,RemovedSeriesCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\RemovedSeriesCheckFixture.cs,should_return_error_if_multiple_series_no_longer_on_tvdb,The following statement contains a magic number: GivenSeries(4' 2);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,RemovedSeriesCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\RemovedSeriesCheckFixture.cs,should_return_error_if_multiple_series_no_longer_on_tvdb,The following statement contains a magic number: GivenSeries(4' 2);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,RemovedSeriesCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\RemovedSeriesCheckFixture.cs,should_return_ok_if_all_series_still_on_tvdb,The following statement contains a magic number: GivenSeries(4' 0);
Magic Number,NzbDrone.Core.Test.HealthCheck.Checks,SystemTimeCheckFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HealthCheck\Checks\SystemTimeCheckFixture.cs,should_return_error_when_system_time_is_more_than_one_day_from_server_time,The following statement contains a magic number: GivenServerTime(DateTime.UtcNow.AddDays(2));
Magic Number,NzbDrone.Core.Test.HistoryTests,HistoryRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HistoryTests\HistoryRepositoryFixture.cs,should_read_write_dictionary,The following statement contains a magic number: StoredModel.Data.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.HistoryTests,HistoryRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HistoryTests\HistoryRepositoryFixture.cs,should_get_download_history,The following statement contains a magic number: var historyBluray = Builder<History.History>.CreateNew()                  .With(c => c.Quality = new QualityModel(Quality.Bluray1080p))                  .With(c => c.SeriesId = 12)                  .With(c => c.EventType = HistoryEventType.Grabbed)                  .BuildNew();
Magic Number,NzbDrone.Core.Test.HistoryTests,HistoryRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HistoryTests\HistoryRepositoryFixture.cs,should_get_download_history,The following statement contains a magic number: var historyDvd = Builder<History.History>.CreateNew()                  .With(c => c.Quality = new QualityModel(Quality.DVD))                  .With(c => c.SeriesId = 12)                  .With(c => c.EventType = HistoryEventType.Grabbed)               .BuildNew();
Magic Number,NzbDrone.Core.Test.HistoryTests,HistoryRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\HistoryTests\HistoryRepositoryFixture.cs,should_get_download_history,The following statement contains a magic number: var downloadHistory = Subject.FindDownloadHistory(12' new QualityModel(Quality.Bluray1080p));
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupAdditionalNamingSpecsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupAdditionalNamingSpecsFixture.cs,should_delete_additional_naming_configs,The following statement contains a magic number: var specs = Builder<NamingConfig>.CreateListOfSize(5)                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupAdditionalUsersFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupAdditionalUsersFixture.cs,should_delete_additional_users,The following statement contains a magic number: var specs = Builder<User>.CreateListOfSize(5)                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDownloadClientUnavailablePendingReleasesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDownloadClientUnavailablePendingReleasesFixture.cs,should_delete_old_DownloadClientUnavailable_pending_items,The following statement contains a magic number: var pendingRelease = Builder<PendingRelease>.CreateNew()                  .With(h => h.Reason = PendingReleaseReason.DownloadClientUnavailable)                  .With(h => h.Added = DateTime.UtcNow.AddDays(-21))                  .With(h => h.ParsedEpisodeInfo = new ParsedEpisodeInfo())                  .With(h => h.Release = new ReleaseInfo())                  .BuildNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDownloadClientUnavailablePendingReleasesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDownloadClientUnavailablePendingReleasesFixture.cs,should_delete_old_Fallback_pending_items,The following statement contains a magic number: var pendingRelease = Builder<PendingRelease>.CreateNew()                  .With(h => h.Reason = PendingReleaseReason.Fallback)                  .With(h => h.Added = DateTime.UtcNow.AddDays(-21))                  .With(h => h.ParsedEpisodeInfo = new ParsedEpisodeInfo())                  .With(h => h.Release = new ReleaseInfo())                  .BuildNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDownloadClientUnavailablePendingReleasesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDownloadClientUnavailablePendingReleasesFixture.cs,should_not_delete_old_Delay_pending_items,The following statement contains a magic number: var pendingRelease = Builder<PendingRelease>.CreateNew()                  .With(h => h.Reason = PendingReleaseReason.Delay)                  .With(h => h.Added = DateTime.UtcNow.AddDays(-21))                  .With(h => h.ParsedEpisodeInfo = new ParsedEpisodeInfo())                  .With(h => h.Release = new ReleaseInfo())                  .BuildNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_not_delete_metadata_files_when_they_are_for_the_same_series_but_different_consumers,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.SeriesMetadata)                                               .With(m => m.SeriesId = 1)                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_not_delete_metadata_files_for_different_series,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.SeriesMetadata)                                               .With(m => m.Consumer = "XbmcMetadata")                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_delete_metadata_files_when_they_are_for_the_same_series_and_consumer,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.SeriesMetadata)                                               .With(m => m.SeriesId = 1)                                               .With(m => m.Consumer = "XbmcMetadata")                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_not_delete_metadata_files_when_they_are_for_the_same_episode_but_different_consumers,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.EpisodeMetadata)                                               .With(m => m.EpisodeFileId = 1)                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_not_delete_metadata_files_for_different_episode,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.EpisodeMetadata)                                               .With(m => m.Consumer = "XbmcMetadata")                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_delete_metadata_files_when_they_are_for_the_same_episode_and_consumer,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.EpisodeMetadata)                                               .With(m => m.EpisodeFileId = 1)                                               .With(m => m.Consumer = "XbmcMetadata")                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_not_delete_image_when_they_are_for_the_same_episode_but_different_consumers,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.EpisodeImage)                                               .With(m => m.EpisodeFileId = 1)                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_not_delete_image_for_different_episode,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.EpisodeImage)                                               .With(m => m.Consumer = "XbmcMetadata")                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupDuplicateMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupDuplicateMetadataFilesFixture.cs,should_delete_image_when_they_are_for_the_same_episode_and_consumer,The following statement contains a magic number: var files = Builder<MetadataFile>.CreateListOfSize(2)                                               .All()                                               .With(m => m.Type = MetadataType.EpisodeImage)                                               .With(m => m.EpisodeFileId = 1)                                               .With(m => m.Consumer = "XbmcMetadata")                                               .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupOrphanedEpisodeFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupOrphanedEpisodeFilesFixture.cs,should_not_delete_unorphaned_episode_files,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(2)                                                     .All()                                                     .With(h => h.Quality = new QualityModel())                                                     .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupOrphanedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupOrphanedEpisodesFixture.cs,should_not_delete_unorphaned_episodes,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                                            .TheFirst(1)                                            .With(e => e.SeriesId = series.Id)                                            .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupOrphanedHistoryItemsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupOrphanedHistoryItemsFixture.cs,should_not_delete_unorphaned_data_by_series,The following statement contains a magic number: var history = Builder<History.History>.CreateListOfSize(2)                                                    .All()                                                    .With(h => h.Quality = new QualityModel())                                                    .With(h => h.EpisodeId = _episode.Id)                                                    .TheFirst(1)                                                    .With(h => h.SeriesId = _series.Id)                                                    .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupOrphanedHistoryItemsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupOrphanedHistoryItemsFixture.cs,should_not_delete_unorphaned_data_by_episode,The following statement contains a magic number: var history = Builder<History.History>.CreateListOfSize(2)                                                    .All()                                                    .With(h => h.Quality = new QualityModel())                                                    .With(h => h.SeriesId = _series.Id)                                                    .TheFirst(1)                                                    .With(h => h.EpisodeId = _episode.Id)                                                    .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupOrphanedMetadataFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupOrphanedMetadataFilesFixture.cs,should_delete_metadata_files_that_dont_have_a_coresponding_episode_file,The following statement contains a magic number: var metadataFile = Builder<MetadataFile>.CreateNew()                                                      .With(m => m.SeriesId = series.Id)                                                      .With(m => m.EpisodeFileId = 10)                                                      .BuildNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupUnusedTagsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupUnusedTagsFixture.cs,should_delete_unused_tags,The following statement contains a magic number: var tags = Builder<Tag>.CreateListOfSize(2).BuildList();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupUnusedTagsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupUnusedTagsFixture.cs,should_not_delete_used_tags,The following statement contains a magic number: var tags = Builder<Tag>.CreateListOfSize(2).BuildList();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,CleanupUnusedTagsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\CleanupUnusedTagsFixture.cs,should_not_delete_used_tags,The following statement contains a magic number: var restrictions = Builder<ReleaseProfile>.CreateListOfSize(2)                  .All()                  .With(v => v.Tags.Add(tags[0].Id))                  .BuildList();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureDownloadClientStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureDownloadClientStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var downloadClientStatuses = Builder<DownloadClientStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_disabled_till_when_its_too_far_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_initial_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_set_most_recent_failure_when_its_in_the_future,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(5))                                                          .With(t => t.EscalationLevel = 1)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Housekeeping.Housekeepers,FixFutureIndexerStatusTimesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Housekeeping\Housekeepers\FixFutureIndexerStatusTimesFixture.cs,should_not_change_statuses_when_times_are_in_the_past,The following statement contains a magic number: var indexerStatuses = Builder<IndexerStatus>.CreateListOfSize(5)                                                          .All()                                                          .With(t => t.DisabledTill = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.InitialFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.MostRecentFailure = DateTime.UtcNow.AddDays(-5))                                                          .With(t => t.EscalationLevel = 0)                                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.Http,HttpProxySettingsProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Http\HttpProxySettingsProviderFixture.cs,GetProxySettings,The following statement contains a magic number: return new HttpProxySettings(ProxyType.Socks5' "localhost"' 8080' "*.httpbin.org'google.com"' true' null' null);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisode,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                  .With(v => v.SeriesId == _xemSeries.Id)                  .With(v => v.Series == _xemSeries)                  .With(v => v.SeasonNumber' seasonNumber)                  .With(v => v.EpisodeNumber' episodeNumber)                  .With(v => v.SceneSeasonNumber' sceneSeasonNumber)                  .With(v => v.SceneEpisodeNumber' sceneEpisodeNumber)                  .With(v => v.AirDate = (airDate ?? $"{2000 + seasonNumber}-{episodeNumber:00}-05"))                  .With(v => v.Monitored = true)                  .Build();
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(1' 12' 2' 3);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(1' 12' 2' 3);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(1' 12' 2' 3);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(1' 13' 2' 4);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(1' 13' 2' 4);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(1' 13' 2' 4);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 1' 3' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 1' 3' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 1' 3' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 2' 3' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 2' 3' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 2' 3' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 2' 3' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 3' 4' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 3' 4' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 3' 4' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 3' 4' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 4' 4' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 4' 4' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 4' 4' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(2' 4' 4' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 1' 5' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 1' 5' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 1' 5' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 2' 5' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 2' 5' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 2' 5' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(3' 2' 5' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 1' 5' 13);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 1' 5' 13);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 1' 5' 13);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 2' 5' 14);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 2' 5' 14);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 2' 5' 14);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 2' 5' 14);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 3' 6' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 3' 6' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 3' 6' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(4' 3' 6' 11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(5' 1' 6' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(5' 1' 6' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(5' 1' 6' 12);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(7' 1' null' null);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(7' 2' null' null);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,WithEpisodes,The following statement contains a magic number: WithEpisode(7' 2' null' null);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_episodesearch,The following statement contains a magic number: criteria[0].SeasonNumber.Should().Be(2);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_episodesearch,The following statement contains a magic number: criteria[0].EpisodeNumber.Should().Be(3);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch,The following statement contains a magic number: criteria[0].SeasonNumber.Should().Be(2);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_multiple_seasons,The following statement contains a magic number: Subject.SeasonSearch(_xemSeries.Id' 2' false' true' false);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_multiple_seasons,The following statement contains a magic number: criteria.Count.Should().Be(2);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_multiple_seasons,The following statement contains a magic number: criteria[0].SeasonNumber.Should().Be(3);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_multiple_seasons,The following statement contains a magic number: criteria[1].SeasonNumber.Should().Be(4);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_single_episode_if_possible,The following statement contains a magic number: Subject.SeasonSearch(_xemSeries.Id' 4' false' true' false);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_single_episode_if_possible,The following statement contains a magic number: criteria1[0].SeasonNumber.Should().Be(5);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_single_episode_if_possible,The following statement contains a magic number: criteria2[0].SeasonNumber.Should().Be(6);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_search_single_episode_if_possible,The following statement contains a magic number: criteria2[0].EpisodeNumber.Should().Be(11);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_use_seasonnumber_if_no_scene_number_is_available,The following statement contains a magic number: Subject.SeasonSearch(_xemSeries.Id' 7' false' true' false);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,scene_seasonsearch_should_use_seasonnumber_if_no_scene_number_is_available,The following statement contains a magic number: criteria[0].SeasonNumber.Should().Be(7);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_anime_should_not_search_for_unaired_episodes,The following statement contains a magic number: _xemEpisodes.ForEach(e => e.AirDateUtc = DateTime.UtcNow.AddDays(5));
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_multiple_years,The following statement contains a magic number: WithEpisode(1' 2' null' null' "2005-12-31");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_multiple_years,The following statement contains a magic number: WithEpisode(1' 3' null' null' "2006-01-01");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_multiple_years,The following statement contains a magic number: WithEpisode(1' 4' null' null' "2006-01-02");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_multiple_years,The following statement contains a magic number: criteria.Count.Should().Be(2);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_multiple_years,The following statement contains a magic number: criteria[0].Year.Should().Be(2005);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_multiple_years,The following statement contains a magic number: criteria[1].Year.Should().Be(2006);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_single_episode_if_possible,The following statement contains a magic number: WithEpisode(1' 2' null' null' "2005-12-31");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_single_episode_if_possible,The following statement contains a magic number: WithEpisode(1' 3' null' null' "2006-01-01");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_single_episode_if_possible,The following statement contains a magic number: criteria1[0].Year.Should().Be(2005);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_search_single_episode_if_possible,The following statement contains a magic number: criteria2[0].AirDate.Should().Be(new DateTime(2006' 1' 1));
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_not_search_for_unmonitored_episodes,The following statement contains a magic number: WithEpisode(1' 2' null' null' "2005-12-31");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_not_search_for_unmonitored_episodes,The following statement contains a magic number: WithEpisode(1' 3' null' null' "2006-01-01");
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,season_search_for_daily_should_not_search_for_unmonitored_episodes,The following statement contains a magic number: criteria2.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,getscenenames_should_use_seasonnumber_if_no_scene_seasonnumber_is_available,The following statement contains a magic number: Subject.SeasonSearch(_xemSeries.Id' 7' false' true' false);
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,getscenenames_should_use_seasonnumber_if_no_scene_seasonnumber_is_available,The following statement contains a magic number: Mocker.GetMock<ISceneMappingService>()                    .Verify(v => v.GetSceneNames(_xemSeries.Id' It.Is<List<int>>(l => l.Contains(7))' It.Is<List<int>>(l => l.Contains(7)))' Times.Once());
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,NzbSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\NzbSearchServiceFixture.cs,getscenenames_should_use_seasonnumber_if_no_scene_seasonnumber_is_available,The following statement contains a magic number: Mocker.GetMock<ISceneMappingService>()                    .Verify(v => v.GetSceneNames(_xemSeries.Id' It.Is<List<int>>(l => l.Contains(7))' It.Is<List<int>>(l => l.Contains(7)))' Times.Once());
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,SeriesSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\SeriesSearchServiceFixture.cs,should_start_with_lower_seasons_first,The following statement contains a magic number: _series.Seasons = new List<Season>                                {                                    new Season { SeasonNumber = 3' Monitored = true }'                                    new Season { SeasonNumber = 1' Monitored = true }'                                    new Season { SeasonNumber = 2' Monitored = true }                                };
Magic Number,NzbDrone.Core.Test.IndexerSearchTests,SeriesSearchServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerSearchTests\SeriesSearchServiceFixture.cs,should_start_with_lower_seasons_first,The following statement contains a magic number: _series.Seasons = new List<Season>                                {                                    new Season { SeasonNumber = 3' Monitored = true }'                                    new Season { SeasonNumber = 1' Monitored = true }'                                    new Season { SeasonNumber = 2' Monitored = true }                                };
Magic Number,NzbDrone.Core.Test.IndexerTests,IndexerStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IndexerStatusServiceFixture.cs,should_cancel_backoff_on_success,The following statement contains a magic number: WithStatus(new IndexerStatus { EscalationLevel = 2 });
Magic Number,NzbDrone.Core.Test.IndexerTests,SeasonSearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeasonSearchFixture.cs,WithIndexer,The following statement contains a magic number: Subject._supportedPageSize = paging ? 100 : 0;
Magic Number,NzbDrone.Core.Test.IndexerTests,SeasonSearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeasonSearchFixture.cs,WithIndexer,The following statement contains a magic number: var requests = Builder<IndexerRequest>.CreateListOfSize(paging ? 100 : 1)                  .All()                  .WithFactory(() => new IndexerRequest("http://my.feed.local/"' HttpAccept.Rss))                  .With(v => v.HttpRequest.Method = HttpMethod.GET)                  .Build();
Magic Number,NzbDrone.Core.Test.IndexerTests,SeasonSearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeasonSearchFixture.cs,should_not_use_offset_if_result_count_is_less_than_90,The following statement contains a magic number: WithIndexer(true' 25);
Magic Number,NzbDrone.Core.Test.IndexerTests,SeasonSearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeasonSearchFixture.cs,should_not_use_offset_for_sites_that_do_not_support_it,The following statement contains a magic number: WithIndexer(false' 125);
Magic Number,NzbDrone.Core.Test.IndexerTests,SeasonSearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeasonSearchFixture.cs,should_not_use_offset_if_its_already_tried_10_times,The following statement contains a magic number: WithIndexer(true' 100);
Magic Number,NzbDrone.Core.Test.IndexerTests,SeasonSearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeasonSearchFixture.cs,should_not_use_offset_if_its_already_tried_10_times,The following statement contains a magic number: Mocker.GetMock<IHttpClient>().Verify(v => v.Execute(It.IsAny<HttpRequest>())' Times.Exactly(10));
Magic Number,NzbDrone.Core.Test.IndexerTests,SeedConfigProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeedConfigProviderFixture.cs,should_return_season_time_for_season_packs,The following statement contains a magic number: settings.SeedCriteria.SeasonPackSeedTime = 10;
Magic Number,NzbDrone.Core.Test.IndexerTests,SeedConfigProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\SeedConfigProviderFixture.cs,should_return_season_time_for_season_packs,The following statement contains a magic number: result.SeedTime.Should().Be(TimeSpan.FromMinutes(10));
Magic Number,NzbDrone.Core.Test.IndexerTests,XElementExtensionsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\XElementExtensionsFixture.cs,should_parse_date,The following statement contains a magic number: date.Year.Should().Be(2013);
Magic Number,NzbDrone.Core.Test.IndexerTests.BitMeTvTests,BitMeTvFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BitMeTvTests\BitMeTvFixture.cs,should_parse_recent_feed_from_BitMeTv,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.BitMeTvTests,BitMeTvFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BitMeTvTests\BitMeTvFixture.cs,should_parse_recent_feed_from_BitMeTv,The following statement contains a magic number: torrentInfo.Size.Should().Be(395009065);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: torrentInfo.Size.Should().Be(505099926);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: torrentInfo.TvdbId.Should().Be(71998);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: torrentInfo.TvRageId.Should().Be(4055);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: torrentInfo.Peers.Should().Be(40+9);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: torrentInfo.Peers.Should().Be(40+9);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_parse_recent_feed_from_BroadcastheNet,The following statement contains a magic number: torrentInfo.Seeders.Should().Be(40);
Magic Number,NzbDrone.Core.Test.IndexerTests.BroadcastheNetTests,BroadcastheNetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\BroadcastheNetTests\BroadcastheNetFixture.cs,should_replace_https_http_as_needed,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.FanzubTests,FanzubFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\FanzubTests\FanzubFixture.cs,should_parse_recent_feed_from_fanzub,The following statement contains a magic number: releases.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.IndexerTests.FanzubTests,FanzubFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\FanzubTests\FanzubFixture.cs,should_parse_recent_feed_from_fanzub,The following statement contains a magic number: releaseInfo.Size.Should().Be(556246858);
Magic Number,NzbDrone.Core.Test.IndexerTests.HDBitsTests,HDBitsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\HDBitsTests\HDBitsFixture.cs,should_parse_recent_feed_from_HDBits,The following statement contains a magic number: torrents.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.HDBitsTests,HDBitsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\HDBitsTests\HDBitsFixture.cs,should_parse_recent_feed_from_HDBits,The following statement contains a magic number: first.Size.Should().Be(1718009717);
Magic Number,NzbDrone.Core.Test.IndexerTests.HDBitsTests,HDBitsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\HDBitsTests\HDBitsFixture.cs,should_parse_recent_feed_from_HDBits,The following statement contains a magic number: first.Peers.Should().Be(47);
Magic Number,NzbDrone.Core.Test.IndexerTests.HDBitsTests,HDBitsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\HDBitsTests\HDBitsFixture.cs,should_parse_recent_feed_from_HDBits,The following statement contains a magic number: first.Seeders.Should().Be(46);
Magic Number,NzbDrone.Core.Test.IndexerTests.HDBitsTests,HDBitsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\HDBitsTests\HDBitsFixture.cs,should_warn_on_wrong_passkey,The following statement contains a magic number: var responseJson = new { status = 5' message = "Invalid authentication credentials" }.ToJson();
Magic Number,NzbDrone.Core.Test.IndexerTests.IntegrationTests,IndexerIntegrationTests,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IntegrationTests\IndexerIntegrationTests.cs,ValidateResult,The following statement contains a magic number: reports.Should().OnlyContain(c => c.PublishDate.Year > 2000);
Magic Number,NzbDrone.Core.Test.IndexerTests.IPTorrentsTests,IPTorrentsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IPTorrentsTests\IPTorrentsFixture.cs,should_parse_recent_feed_from_IPTorrents,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.IPTorrentsTests,IPTorrentsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\IPTorrentsTests\IPTorrentsFixture.cs,should_parse_recent_feed_from_IPTorrents,The following statement contains a magic number: torrentInfo.Size.Should().Be(1471026299);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabCapabilitiesProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabCapabilitiesProviderFixture.cs,should_report_pagesize,The following statement contains a magic number: caps.DefaultPageSize.Should().Be(25);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabCapabilitiesProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabCapabilitiesProviderFixture.cs,should_report_pagesize,The following statement contains a magic number: caps.MaxPageSize.Should().Be(60);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabCapabilitiesProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabCapabilitiesProviderFixture.cs,should_use_default_pagesize_if_missing,The following statement contains a magic number: caps.DefaultPageSize.Should().Be(100);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabCapabilitiesProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabCapabilitiesProviderFixture.cs,should_use_default_pagesize_if_missing,The following statement contains a magic number: caps.MaxPageSize.Should().Be(100);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,Setup,The following statement contains a magic number: Subject.Definition = new IndexerDefinition()                  {                      Id = 5'                      Name = "Newznab"'                      Settings = new NewznabSettings()                          {                              BaseUrl = "http://indexer.local/"'                              Categories = new int[] { 1 }                          }                  };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_parse_recent_feed_from_newznab_nzb_su,The following statement contains a magic number: releases.Should().HaveCount(100);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_parse_recent_feed_from_newznab_nzb_su,The following statement contains a magic number: releaseInfo.Size.Should().Be(1183105773);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_parse_recent_feed_from_newznab_animetosho,The following statement contains a magic number: releaseInfo.Size.Should().Be(473987489);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_use_pagesize_reported_by_caps,The following statement contains a magic number: _caps.MaxPageSize = 30;
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_use_pagesize_reported_by_caps,The following statement contains a magic number: _caps.DefaultPageSize = 25;
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_use_pagesize_reported_by_caps,The following statement contains a magic number: Subject.PageSize.Should().Be(25);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_record_indexer_failure_if_caps_throw,The following statement contains a magic number: var response = new HttpResponse(request' new HttpHeader()' new byte[0]' (HttpStatusCode)429);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_record_indexer_failure_if_caps_throw,The following statement contains a magic number: _caps.MaxPageSize = 30;
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_record_indexer_failure_if_caps_throw,The following statement contains a magic number: _caps.DefaultPageSize = 25;
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabFixture.cs,should_record_indexer_failure_if_caps_throw,The following statement contains a magic number: Mocker.GetMock<IIndexerStatusService>()                    .Verify(v => v.RecordFailure(It.IsAny<int>()' TimeSpan.FromMinutes(5.0))' Times.Once());
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: Subject.Settings = new NewznabSettings()              {                  BaseUrl = "http://127.0.0.1:1234/"'                  Categories = new [] { 1' 2 }'                  AnimeCategories = new [] { 3' 4 }'                  ApiKey = "abcd"'              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: Subject.Settings = new NewznabSettings()              {                  BaseUrl = "http://127.0.0.1:1234/"'                  Categories = new [] { 1' 2 }'                  AnimeCategories = new [] { 3' 4 }'                  ApiKey = "abcd"'              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: Subject.Settings = new NewznabSettings()              {                  BaseUrl = "http://127.0.0.1:1234/"'                  Categories = new [] { 1' 2 }'                  AnimeCategories = new [] { 3' 4 }'                  ApiKey = "abcd"'              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: _singleEpisodeSearchCriteria = new SingleEpisodeSearchCriteria              {                  Series = new Tv.Series { TvRageId = 10' TvdbId = 20' TvMazeId = 30' ImdbId ="t40" }'                  SceneTitles = new List<string> { "Monkey Island" }'                  SeasonNumber = 1'                  EpisodeNumber = 2              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: _singleEpisodeSearchCriteria = new SingleEpisodeSearchCriteria              {                  Series = new Tv.Series { TvRageId = 10' TvdbId = 20' TvMazeId = 30' ImdbId ="t40" }'                  SceneTitles = new List<string> { "Monkey Island" }'                  SeasonNumber = 1'                  EpisodeNumber = 2              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: _singleEpisodeSearchCriteria = new SingleEpisodeSearchCriteria              {                  Series = new Tv.Series { TvRageId = 10' TvdbId = 20' TvMazeId = 30' ImdbId ="t40" }'                  SceneTitles = new List<string> { "Monkey Island" }'                  SeasonNumber = 1'                  EpisodeNumber = 2              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: _singleEpisodeSearchCriteria = new SingleEpisodeSearchCriteria              {                  Series = new Tv.Series { TvRageId = 10' TvdbId = 20' TvMazeId = 30' ImdbId ="t40" }'                  SceneTitles = new List<string> { "Monkey Island" }'                  SeasonNumber = 1'                  EpisodeNumber = 2              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,SetUp,The following statement contains a magic number: _animeSearchCriteria = new AnimeEpisodeSearchCriteria()              {                  SceneTitles = new List<string>() { "Monkey+Island" }'                  AbsoluteEpisodeNumber = 100              };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_not_have_duplicate_categories,The following statement contains a magic number: Subject.Settings.Categories = new[] { 1' 2' 3 };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_not_have_duplicate_categories,The following statement contains a magic number: Subject.Settings.Categories = new[] { 1' 2' 3 };
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_return_subsequent_pages,The following statement contains a magic number: var pages = results.GetAllTiers().First().Take(3).ToList();
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_return_subsequent_pages,The following statement contains a magic number: pages[2].Url.FullUri.Should().Contain("&offset=200&");
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_not_get_unlimited_pages,The following statement contains a magic number: var pages = results.GetAllTiers().First().Take(500).ToList();
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_not_get_unlimited_pages,The following statement contains a magic number: pages.Count.Should().BeLessThan(500);
Magic Number,NzbDrone.Core.Test.IndexerTests.NewznabTests,NewznabRequestGeneratorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NewznabTests\NewznabRequestGeneratorFixture.cs,should_fallback_to_q,The following statement contains a magic number: results.Tiers.Should().Be(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.NyaaTests,NyaaFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NyaaTests\NyaaFixture.cs,should_parse_recent_feed_from_Nyaa,The following statement contains a magic number: releases.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.IndexerTests.NyaaTests,NyaaFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NyaaTests\NyaaFixture.cs,should_parse_recent_feed_from_Nyaa,The following statement contains a magic number: torrentInfo.Size.Should().Be(2523293286);
Magic Number,NzbDrone.Core.Test.IndexerTests.NyaaTests,NyaaFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\NyaaTests\NyaaFixture.cs,should_parse_recent_feed_from_Nyaa,The following statement contains a magic number: torrentInfo.Peers.Should().Be(2+1);
Magic Number,NzbDrone.Core.Test.IndexerTests.OmgwtfnzbsTests,OmgwtfnzbsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\OmgwtfnzbsTests\OmgwtfnzbsFixture.cs,should_parse_recent_feed_from_omgwtfnzbs,The following statement contains a magic number: releases.Should().HaveCount(100);
Magic Number,NzbDrone.Core.Test.IndexerTests.OmgwtfnzbsTests,OmgwtfnzbsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\OmgwtfnzbsTests\OmgwtfnzbsFixture.cs,should_parse_recent_feed_from_omgwtfnzbs,The following statement contains a magic number: releaseInfo.Size.Should().Be(236822906);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: releases.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: torrentInfo.Size.Should().Be(564198371);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: torrentInfo.Peers.Should().Be(304 + 200);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: torrentInfo.Peers.Should().Be(304 + 200);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: torrentInfo.Seeders.Should().Be(304);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: torrentInfo.TvdbId.Should().Be(268156);
Magic Number,NzbDrone.Core.Test.IndexerTests.RarbgTests,RarbgFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\RarbgTests\RarbgFixture.cs,should_parse_recent_feed_from_Rarbg,The following statement contains a magic number: torrentInfo.TvRageId.Should().Be(35197);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentleechTests,TorrentleechFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentleechTests\TorrentleechFixture.cs,should_parse_recent_feed_from_Torrentleech,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentleechTests,TorrentleechFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentleechTests\TorrentleechFixture.cs,should_parse_recent_feed_from_Torrentleech,The following statement contains a magic number: torrentInfo.Peers.Should().Be(7+1);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ImmortalSeed,The following statement contains a magic number: releases.Should().HaveCount(50);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ImmortalSeed,The following statement contains a magic number: torrentInfo.Size.Should().Be(984078090);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ImmortalSeed,The following statement contains a magic number: torrentInfo.Peers.Should().Be(8);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ImmortalSeed,The following statement contains a magic number: torrentInfo.Seeders.Should().Be(6);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_Ezrss,The following statement contains a magic number: releases.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_Ezrss,The following statement contains a magic number: torrentInfo.Size.Should().Be(796606175);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ShowRSS_info,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_Doki,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ExtraTorrents,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_ExtraTorrents,The following statement contains a magic number: torrentInfo.Size.Should().Be(562386947);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_LimeTorrents,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_LimeTorrents,The following statement contains a magic number: torrentInfo.Size.Should().Be(880496711);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AnimeTosho_without_size,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AnimeTosho_without_size,The following statement contains a magic number: torrentInfo.Size.Should().Be((long)Math.Round((double)1.366m * 1024L * 1024L * 1024L));
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AnimeTosho_without_size,The following statement contains a magic number: torrentInfo.Size.Should().Be((long)Math.Round((double)1.366m * 1024L * 1024L * 1024L));
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AnimeTosho_without_size,The following statement contains a magic number: torrentInfo.Size.Should().Be((long)Math.Round((double)1.366m * 1024L * 1024L * 1024L));
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AnimeTosho_without_size,The following statement contains a magic number: torrentInfo.Size.Should().Be((long)Math.Round((double)1.366m * 1024L * 1024L * 1024L));
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_multi_enclosure_from_AnimeTosho,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_AlphaRatio,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssIndexerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssIndexerFixture.cs,should_parse_recent_feed_from_EveolutionWorld_without_size,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssParserFactoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssParserFactoryFixture.cs,should_not_cache_failure,The following statement contains a magic number: VerifyDetectionCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssParserFactoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssParserFactoryFixture.cs,should_not_cache_settings_for_different_baseurl,The following statement contains a magic number: VerifyDetectionCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorrentRssIndexerTests,TorrentRssParserFactoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorrentRssIndexerTests\TorrentRssParserFactoryFixture.cs,should_not_cache_settings_for_different_settings,The following statement contains a magic number: VerifyDetectionCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_hdaccess_net,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_hdaccess_net,The following statement contains a magic number: releaseInfo.Size.Should().Be(2538463390);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_hdaccess_net,The following statement contains a magic number: releaseInfo.TvdbId.Should().Be(273181);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_hdaccess_net,The following statement contains a magic number: releaseInfo.TvRageId.Should().Be(37780);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_hdaccess_net,The following statement contains a magic number: releaseInfo.Seeders.Should().Be(7);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_hdaccess_net,The following statement contains a magic number: releaseInfo.Peers.Should().Be(7);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The following statement contains a magic number: releases.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The following statement contains a magic number: releaseInfo.Size.Should().Be(388895872);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The following statement contains a magic number: releaseInfo.Seeders.Should().Be(34128);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_tpb,The following statement contains a magic number: releaseInfo.Peers.Should().Be(36724);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_animetosho,The following statement contains a magic number: releases.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_parse_recent_feed_from_torznab_animetosho,The following statement contains a magic number: releaseInfo.Size.Should().Be(316477946);
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_use_pagesize_reported_by_caps,The following statement contains a magic number: _caps.MaxPageSize = 30;
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_use_pagesize_reported_by_caps,The following statement contains a magic number: _caps.DefaultPageSize = 25;
Magic Number,NzbDrone.Core.Test.IndexerTests.TorznabTests,TorznabFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\IndexerTests\TorznabTests\TorznabFixture.cs,should_use_pagesize_reported_by_caps,The following statement contains a magic number: Subject.PageSize.Should().Be(25);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,write_log,The following statement contains a magic number: Thread.Sleep(600);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,write_long_log,The following statement contains a magic number: i < 100
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,write_long_log,The following statement contains a magic number: Thread.Sleep(600);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,perf_test,The following statement contains a magic number: i < 1000
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,perf_test,The following statement contains a magic number: Thread.Sleep(600);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,write_log_exception,The following statement contains a magic number: Thread.Sleep(600);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,exception_log_with_no_message_should_use_exceptions_message,The following statement contains a magic number: Thread.Sleep(600);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,null_string_as_arg_should_not_fail,The following statement contains a magic number: Thread.Sleep(600);
Magic Number,NzbDrone.Core.Test.Instrumentation,DatabaseTargetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Instrumentation\DatabaseTargetFixture.cs,VerifyLog,The following statement contains a magic number: logItem.Time.Should().BeWithin(TimeSpan.FromSeconds(2));
Magic Number,NzbDrone.Core.Test.Languages,LanguageProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileServiceFixture.cs,Init_should_skip_if_any_profiles_already_exist,The following statement contains a magic number: Mocker.GetMock<ILanguageProfileRepository>()                    .Setup(s => s.All())                    .Returns(Builder<LanguageProfile>.CreateListOfSize(2).Build().ToList());
Magic Number,NzbDrone.Core.Test.Languages,LanguageProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileServiceFixture.cs,should_not_be_able_to_delete_profile_if_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .Random(1)                                              .With(c => c.LanguageProfileId = 2)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.Languages,LanguageProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileServiceFixture.cs,should_not_be_able_to_delete_profile_if_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .Random(1)                                              .With(c => c.LanguageProfileId = 2)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.Languages,LanguageProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileServiceFixture.cs,should_not_be_able_to_delete_profile_if_assigned_to_series,The following statement contains a magic number: Assert.Throws<LanguageProfileInUseException>(() => Subject.Delete(2));
Magic Number,NzbDrone.Core.Test.Languages,LanguageProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileServiceFixture.cs,should_delete_profile_if_not_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .All()                                              .With(c => c.LanguageProfileId = 2)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.Languages,LanguageProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Languages\LanguageProfileServiceFixture.cs,should_delete_profile_if_not_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .All()                                              .With(c => c.LanguageProfileId = 2)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.MediaCoverTests,CoverAlreadyExistsSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\CoverExistsSpecificationFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Setup(c => c.GetFileSize(It.IsAny<string>())).Returns(100);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,CoverAlreadyExistsSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\CoverExistsSpecificationFixture.cs,should_return_false_if_file_exists_but_diffrent_size,The following statement contains a magic number: GivenExistingFileSize(100);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,CoverAlreadyExistsSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\CoverExistsSpecificationFixture.cs,should_return_false_if_file_exists_but_diffrent_size,The following statement contains a magic number: _httpResponse.Headers.ContentLength = 200;
Magic Number,NzbDrone.Core.Test.MediaCoverTests,CoverAlreadyExistsSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\CoverExistsSpecificationFixture.cs,should_return_ture_if_file_exists_and_same_size,The following statement contains a magic number: GivenExistingFileSize(100);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,CoverAlreadyExistsSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\CoverExistsSpecificationFixture.cs,should_return_ture_if_file_exists_and_same_size,The following statement contains a magic number: _httpResponse.Headers.ContentLength = 100;
Magic Number,NzbDrone.Core.Test.MediaCoverTests,CoverAlreadyExistsSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\CoverExistsSpecificationFixture.cs,should_return_true_if_there_is_no_size_header_and_file_exist,The following statement contains a magic number: GivenExistingFileSize(100);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,SetUp,The following statement contains a magic number: PlatformInfo.GetVersion() < new Version(5' 8)
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,SetUp,The following statement contains a magic number: PlatformInfo.GetVersion() < new Version(5' 8)
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,should_resize_image,The following statement contains a magic number: Subject.Resize(mainFile' resizedFile' 170);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,should_resize_image,The following statement contains a magic number: fileInfo.Length.Should().BeInRange(1000' 30000);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,should_resize_image,The following statement contains a magic number: fileInfo.Length.Should().BeInRange(1000' 30000);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,should_resize_image,The following statement contains a magic number: image.Height.Should().Be(170);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,should_resize_image,The following statement contains a magic number: image.Width.Should().Be(170);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,ImageResizerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\ImageResizerFixture.cs,should_delete_file_if_failed,The following statement contains a magic number: Assert.Throws(Is.InstanceOf<Exception>()' () => Subject.Resize(mainFile' resizedFile' 170));
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                  .With(v => v.Id = 2)                  .With(v => v.Images = new List<MediaCover.MediaCover> { new MediaCover.MediaCover(MediaCoverTypes.Poster' "") })                  .Build();
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_convert_cover_urls_to_local,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Setup(c => c.FileGetLastWrite(It.IsAny<string>()))                    .Returns(new DateTime(1234));
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_convert_cover_urls_to_local,The following statement contains a magic number: Subject.ConvertToLocalUrls(12' covers);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_convert_media_urls_to_local_without_time_if_file_doesnt_exist,The following statement contains a magic number: Subject.ConvertToLocalUrls(12' covers);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_resize_covers_if_main_downloaded,The following statement contains a magic number: Mocker.GetMock<IImageResizer>()                    .Verify(v => v.Resize(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_resize_covers_if_missing,The following statement contains a magic number: Mocker.GetMock<IImageResizer>()                    .Verify(v => v.Resize(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_not_resize_covers_if_exists,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                    .Setup(v => v.GetFileSize(It.IsAny<string>()))                    .Returns(1000);
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_resize_covers_if_existing_is_empty,The following statement contains a magic number: Mocker.GetMock<IImageResizer>()                    .Verify(v => v.Resize(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaCoverTests,MediaCoverServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaCoverTests\MediaCoverServiceFixture.cs,should_log_error_if_resize_failed,The following statement contains a magic number: Mocker.GetMock<IImageResizer>()                    .Verify(v => v.Resize(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles.DiskScanServiceTests,ScanFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DiskScanServiceTests\ScanFixture.cs,should_find_files_at_root_of_series_folder,The following statement contains a magic number: Mocker.GetMock<IMakeImportDecision>()                    .Verify(v => v.GetImportDecisions(It.Is<List<string>>(l => l.Count == 2)' _series)' Times.Once());
Magic Number,NzbDrone.Core.Test.MediaFiles.DiskScanServiceTests,ScanFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DiskScanServiceTests\ScanFixture.cs,should_scan_extras_series_and_subfolders,The following statement contains a magic number: Mocker.GetMock<IMakeImportDecision>()                    .Verify(v => v.GetImportDecisions(It.Is<List<string>>(l => l.Count == 4)' _series)' Times.Once());
Magic Number,NzbDrone.Core.Test.MediaFiles.DiskScanServiceTests,ScanFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DiskScanServiceTests\ScanFixture.cs,should_scan_dotHack_folder,The following statement contains a magic number: Mocker.GetMock<IMakeImportDecision>()                    .Verify(v => v.GetImportDecisions(It.Is<List<string>>(l => l.Count == 2)' _series)' Times.Once());
Magic Number,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_if_there_is_large_rar_file,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                    .Setup(s => s.GetFileSize(It.IsAny<string>()))                    .Returns(15.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_use_folder_if_folder_import,The following statement contains a magic number: Mocker.GetMock<IMakeImportDecision>()                    .Verify(s => s.GetImportDecisions(It.IsAny<List<string>>()' It.IsAny<Series>()' It.IsAny<DownloadClientItem>()' It.Is<ParsedEpisodeInfo>(v => v.AbsoluteEpisodeNumbers.First() == 9)' true)' Times.Once());
Magic Number,NzbDrone.Core.Test.MediaFiles,DownloadedEpisodesImportServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\DownloadedEpisodesImportServiceFixture.cs,should_not_delete_if_no_files_were_imported,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>()                    .Setup(s => s.GetFileSize(It.IsAny<string>()))                    .Returns(15.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,Setup,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(5)                                             .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_import_each_approved,The following statement contains a magic number: Subject.Import(_approvedDecisions' false).Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.MediaFiles,ImportApprovedEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\ImportApprovedEpisodesFixture.cs,should_import_larger_files_first,The following statement contains a magic number: var sampleDecision = new ImportDecision                  (new LocalEpisode                   {                       Series = fileDecision.LocalEpisode.Series'                       Episodes = new List<Episode> { fileDecision.LocalEpisode.Episodes.First() }'                       Path = @"C:\Test\TV\30 Rock\30 Rock - S01E01 - Pilot.avi".AsOsAgnostic()'                       Quality = new QualityModel(Quality.Bluray720p)'                       Size = 80.Megabytes()                   });
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileRepositoryFixture.cs,get_files_by_series,The following statement contains a magic number: var files = Builder<EpisodeFile>.CreateListOfSize(10)                  .All()                  .With(c => c.Id = 0)                  .With(c => c.Quality =new QualityModel(Quality.Bluray720p))                  .Random(4)                  .With(s => s.SeriesId = 12)                  .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileRepositoryFixture.cs,get_files_by_series,The following statement contains a magic number: var files = Builder<EpisodeFile>.CreateListOfSize(10)                  .All()                  .With(c => c.Id = 0)                  .With(c => c.Quality =new QualityModel(Quality.Bluray720p))                  .Random(4)                  .With(s => s.SeriesId = 12)                  .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileRepositoryFixture.cs,get_files_by_series,The following statement contains a magic number: var files = Builder<EpisodeFile>.CreateListOfSize(10)                  .All()                  .With(c => c.Id = 0)                  .With(c => c.Quality =new QualityModel(Quality.Bluray720p))                  .Random(4)                  .With(s => s.SeriesId = 12)                  .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileRepositoryFixture.cs,get_files_by_series,The following statement contains a magic number: var seriesFiles = Subject.GetFilesBySeries(12);
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileRepositoryFixture.cs,get_files_by_series,The following statement contains a magic number: seriesFiles.Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileRepositoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileRepositoryFixture.cs,get_files_by_series,The following statement contains a magic number: seriesFiles.Should().OnlyContain(c => c.SeriesId == 12);
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,SetUp,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(10)                    .Build()                    .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_skip_files_that_exist_in_disk,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_non_existent_files,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                  .Random(2)                  .With(c => c.RelativePath = DELETED_PATH)                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_non_existent_files,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                  .Random(2)                  .With(c => c.RelativePath = DELETED_PATH)                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_non_existent_files,The following statement contains a magic number: Mocker.GetMock<IMediaFileService>().Verify(c => c.Delete(It.Is<EpisodeFile>(e => e.RelativePath == DELETED_PATH)' DeleteMediaFileReason.MissingFromDisk)' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_files_that_dont_belong_to_any_episodes,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                                  .Random(10)                                  .With(c => c.RelativePath = "ExistingPath")                                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_files_that_dont_belong_to_any_episodes,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                                  .Random(10)                                  .With(c => c.RelativePath = "ExistingPath")                                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_delete_files_that_dont_belong_to_any_episodes,The following statement contains a magic number: Mocker.GetMock<IMediaFileService>().Verify(c => c.Delete(It.IsAny<EpisodeFile>()' DeleteMediaFileReason.NoLinkedEpisodes)' Times.Exactly(10));
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_unlink_episode_when_episodeFile_does_not_exist,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>().Verify(c => c.UpdateEpisode(It.Is<Episode>(e => e.EpisodeFileId == 0))' Times.Exactly(10));
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_not_update_episode_when_episodeFile_exists,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                                  .Random(10)                                  .With(c => c.RelativePath = "ExistingPath")                                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,MediaFileTableCleanupServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileTableCleanupServiceFixture.cs,should_not_update_episode_when_episodeFile_exists,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(10)                                  .Random(10)                                  .With(c => c.RelativePath = "ExistingPath")                                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles,RenameEpisodeFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\RenameEpisodeFileServiceFixture.cs,Setup,The following statement contains a magic number: _episodeFiles = Builder<EpisodeFile>.CreateListOfSize(2)                                                  .All()                                                  .With(e => e.SeriesId = _series.Id)                                                  .With(e => e.SeasonNumber = 1)                                                  .Build()                                                  .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles,RenameEpisodeFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\RenameEpisodeFileServiceFixture.cs,should_update_moved_files,The following statement contains a magic number: Mocker.GetMock<IMediaFileService>()                    .Verify(v => v.Update(It.IsAny<EpisodeFile>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,GivenMultipleEpisodesWithSingleEpisodeFile,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Id = 1'                                                                                      RelativePath = @"Season 01\30.rock.s01e01.avi"'                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,GivenMultipleEpisodesWithMultipleEpisodeFiles,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Id = 1'                                                                                      RelativePath = @"Season 01\30.rock.s01e01.avi"'                                                                                  }))                                                       .TheNext(1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Id = 2'                                                                                      RelativePath = @"Season 01\30.rock.s01e02.avi"'                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,GivenMultipleEpisodesWithMultipleEpisodeFiles,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Id = 1'                                                                                      RelativePath = @"Season 01\30.rock.s01e01.avi"'                                                                                  }))                                                       .TheNext(1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Id = 2'                                                                                      RelativePath = @"Season 01\30.rock.s01e02.avi"'                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_delete_multiple_different_episode_files,The following statement contains a magic number: Mocker.GetMock<IRecycleBinProvider>().Verify(v => v.DeleteFile(It.IsAny<string>()' It.IsAny<string>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles,UpgradeMediaFileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\UpgradeMediaFileServiceFixture.cs,should_return_old_episode_files_in_oldFiles,The following statement contains a magic number: Subject.UpgradeEpisodeFile(_episodeFile' _localEpisode).OldFiles.Count.Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Aggregation.Aggregators,AugmentQualityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Aggregation\Aggregators\AggregateQualityFixture.cs,Setup,The following statement contains a magic number: _mediaInfoAugmenter.Setup(s => s.AugmentQuality(It.IsAny<LocalEpisode>()))                                 .Returns(AugmentQualityResult.ResolutionOnly(1080' Confidence.MediaInfo));
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Aggregation.Aggregators,AugmentQualityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Aggregation\Aggregators\AggregateQualityFixture.cs,Setup,The following statement contains a magic number: _fileExtensionAugmenter.Setup(s => s.AugmentQuality(It.IsAny<LocalEpisode>()))                                     .Returns(new AugmentQualityResult(QualitySource.Television' Confidence.Fallback' 720' Confidence.Fallback' new Revision()));
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Aggregation.Aggregators,AugmentQualityFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Aggregation\Aggregators\AggregateQualityFixture.cs,Setup,The following statement contains a magic number: _nameAugmenter.Setup(s => s.AugmentQuality(It.IsAny<LocalEpisode>()))                            .Returns(new AugmentQualityResult(QualitySource.Television' Confidence.Default' 480' Confidence.Default' new Revision()));
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                                       .With(s => s.SeriesType = SeriesTypes.Standard)                                       .With(s => s.Runtime = 30)                                       .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_use_runtime,The following statement contains a magic number: GivenRuntime(120);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_true_if_runtime_is_less_than_minimum,The following statement contains a magic number: GivenRuntime(60);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_false_if_runtime_greater_than_minimum,The following statement contains a magic number: GivenRuntime(600);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_false_if_runtime_greater_than_webisode_minimum,The following statement contains a magic number: _series.Runtime = 6;
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_false_if_runtime_greater_than_webisode_minimum,The following statement contains a magic number: GivenRuntime(299);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_false_if_runtime_greater_than_anime_short_minimum,The following statement contains a magic number: _series.Runtime = 2;
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_false_if_runtime_greater_than_anime_short_minimum,The following statement contains a magic number: GivenRuntime(60);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_true_if_runtime_less_than_anime_short_minimum,The following statement contains a magic number: _series.Runtime = 2;
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_return_true_if_runtime_less_than_anime_short_minimum,The following statement contains a magic number: GivenRuntime(10);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,DetectSampleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\DetectSampleFixture.cs,should_not_treat_daily_episode_a_special,The following statement contains a magic number: GivenRuntime(600);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,should_have_same_number_of_rejections_as_specs_that_failed,The following statement contains a magic number: result.Single().Rejections.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,should_not_blowup_the_process_due_to_failed_parse,The following statement contains a magic number: ExceptionVerification.ExpectedErrors(3);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport,ImportDecisionMakerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\ImportDecisionMakerFixture.cs,should_not_throw_if_episodes_are_not_found,The following statement contains a magic number: decisions.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,AbsoluteEpisodeNumberSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\AbsoluteEpisodeNumberSpecificationFixture.cs,should_accept_when_did_not_air_recently_but_absolute_episode_number_is_null,The following statement contains a magic number: _localEpisode.Episodes.First().AirDateUtc = DateTime.UtcNow.AddDays(-7);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,EpisodeTitleSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\EpisodeTitleSpecificationFixture.cs,should_accept_when_did_not_air_recently_but_title_is_TBA,The following statement contains a magic number: _localEpisode.Episodes.First().AirDateUtc = DateTime.UtcNow.AddDays(-7);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,EpisodeTitleSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\EpisodeTitleSpecificationFixture.cs,should_accept_if_episode_title_is_required_for_bulk_season_releases_and_not_bulk_season,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                    .Setup(s => s.GetEpisodesBySeason(It.IsAny<int>()' It.IsAny<int>()))                    .Returns(Builder<Episode>.CreateListOfSize(5).BuildList());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,EpisodeTitleSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\EpisodeTitleSpecificationFixture.cs,should_accept_if_episode_title_is_required_for_bulk_season_releases,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                    .Setup(s => s.GetEpisodesBySeason(It.IsAny<int>()' It.IsAny<int>()))                    .Returns(Builder<Episode>.CreateListOfSize(5)                                             .All()                                             .With(e => e.AirDateUtc == _localEpisode.Episodes.First().AirDateUtc)                                             .BuildList());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,EpisodeTitleSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\EpisodeTitleSpecificationFixture.cs,should_reject_if_episode_title_is_required_for_bulk_season_releases_and_it_is_mising,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                    .Setup(s => s.GetEpisodesBySeason(It.IsAny<int>()' It.IsAny<int>()))                    .Returns(Builder<Episode>.CreateListOfSize(5)                                             .All()                                             .With(e => e.AirDateUtc = _localEpisode.Episodes.First().AirDateUtc)                                             .BuildList());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_reject_when_there_isnt_enough_disk_space,The following statement contains a magic number: GivenFileSize(100.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_reject_when_there_isnt_enough_disk_space,The following statement contains a magic number: GivenFreeSpace(80.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_reject_when_there_isnt_enough_space_for_file_plus_min_free_space,The following statement contains a magic number: Mocker.GetMock<IConfigService>()                  .Setup(s => s.MinimumFreeSpaceWhenImporting)                  .Returns(100);
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_reject_when_there_isnt_enough_space_for_file_plus_min_free_space,The following statement contains a magic number: GivenFileSize(100.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_reject_when_there_isnt_enough_space_for_file_plus_min_free_space,The following statement contains a magic number: GivenFreeSpace(150.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_accept_when_there_is_enough_disk_space,The following statement contains a magic number: GivenFileSize(100.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_use_series_paths_parent_for_free_space_check,The following statement contains a magic number: GivenFileSize(100.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_pass_if_free_space_is_null,The following statement contains a magic number: GivenFileSize(100.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FreeSpaceSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FreeSpaceSpecificationFixture.cs,should_pass_if_exception_is_thrown,The following statement contains a magic number: GivenFileSize(100.Megabytes());
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,FullSeasonSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\FullSeasonSpecificationFixture.cs,Setup,The following statement contains a magic number: _localEpisode = new LocalEpisode              {                  Path = @"C:\Test\30 Rock\30.rock.s01e01.avi".AsOsAgnostic()'                  Size = 100'                  Series = Builder<Series>.CreateNew().Build()'                  FileEpisodeInfo = new ParsedEpisodeInfo                                      {                                          FullSeason = false                                      }              };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,Setup,The following statement contains a magic number: _localEpisode = Builder<LocalEpisode>.CreateNew()                                                   .With(l => l.Path = @"C:\Test\Unsorted\Series.Title.S01E01.720p.HDTV-Sonarr\S01E05.mkv".AsOsAgnostic())                                                   .With(l => l.FileEpisodeInfo =                                                       Builder<ParsedEpisodeInfo>.CreateNew()                                                                                 .With(p => p.EpisodeNumbers = new[] { 5 })                                                                                 .With(p => p.SeasonNumber == 1)                                                                                 .With(p => p.FullSeason = false)                                                                                 .Build())                                                   .With(l => l.FolderEpisodeInfo =                                                       Builder<ParsedEpisodeInfo>.CreateNew()                                                                                 .With(p => p.EpisodeNumbers = new[] { 1 })                                                                                 .With(p => p.SeasonNumber == 1)                                                                                 .With(p => p.FullSeason = false)                                                                                 .Build())                                                   .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_disregard_subfolder,The following statement contains a magic number: _localEpisode.FileEpisodeInfo.EpisodeNumbers = new[] { 5' 6 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_disregard_subfolder,The following statement contains a magic number: _localEpisode.FileEpisodeInfo.EpisodeNumbers = new[] { 5' 6 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_disregard_subfolder,The following statement contains a magic number: _localEpisode.FolderEpisodeInfo.EpisodeNumbers = new[] { 1' 2 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_the_same_episodes,The following statement contains a magic number: _localEpisode.FileEpisodeInfo.EpisodeNumbers = new[] { 5' 6 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_the_same_episodes,The following statement contains a magic number: _localEpisode.FileEpisodeInfo.EpisodeNumbers = new[] { 5' 6 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_the_same_episodes,The following statement contains a magic number: _localEpisode.FolderEpisodeInfo.EpisodeNumbers = new[] { 1' 2 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_episodes_from_the_same_season,The following statement contains a magic number: _localEpisode.FileEpisodeInfo.SeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_episodes_from_the_same_season,The following statement contains a magic number: _localEpisode.FolderEpisodeInfo.EpisodeNumbers = new[] { 1' 2 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_episodes_from_the_same_partial_season,The following statement contains a magic number: _localEpisode.FileEpisodeInfo.SeasonNumber = 2;
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_rejected_if_file_and_folder_do_not_have_episodes_from_the_same_partial_season,The following statement contains a magic number: _localEpisode.FolderEpisodeInfo.EpisodeNumbers = new[] { 1' 2 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_accepted_if_file_and_folder_have_episodes_from_the_same_season,The following statement contains a magic number: _localEpisode.FolderEpisodeInfo.EpisodeNumbers = new[] { 1' 2 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,MatchesFolderSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\MatchesFolderSpecificationFixture.cs,should_be_accepted_if_file_has_absolute_episode_number_and_folder_uses_standard,The following statement contains a magic number: _localEpisode.FolderEpisodeInfo.EpisodeNumbers = new[] { 1' 2 };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,NotUnpackingSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\NotUnpackingSpecificationFixture.cs,Setup,The following statement contains a magic number: _localEpisode = new LocalEpisode              {                  Path = @"C:\Test\Unsorted TV\30.rock\30.rock.s01e01.avi".AsOsAgnostic()'                  Size = 100'                  Series = Builder<Series>.CreateNew().Build()              };
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,NotUnpackingSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\NotUnpackingSpecificationFixture.cs,should_return_false_if_unopacking_on_linux,The following statement contains a magic number: GivenLastWriteTimeUtc(DateTime.UtcNow.AddDays(-5));
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,SameFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\SameFileSpecificationFixture.cs,Setup,The following statement contains a magic number: _localEpisode = Builder<LocalEpisode>.CreateNew()                                                   .With(l => l.Size = 150.Megabytes())                                                   .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,SameFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\SameFileSpecificationFixture.cs,should_be_accepted_if_multiple_existing_files,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Size = _localEpisode.Size                                                                                  }))                                                       .TheNext(1)                                                       .With(e => e.EpisodeFileId = 2)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Size = _localEpisode.Size                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,SameFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\SameFileSpecificationFixture.cs,should_be_accepted_if_multiple_existing_files,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Size = _localEpisode.Size                                                                                  }))                                                       .TheNext(1)                                                       .With(e => e.EpisodeFileId = 2)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Size = _localEpisode.Size                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,SameFileSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\SameFileSpecificationFixture.cs,should_be_accepted_if_file_size_is_different,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(1)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Size = _localEpisode.Size + 100.Megabytes()                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_true_if_no_existing_episodeFile_for_multi_episodes,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 0)                                                       .With(e => e.EpisodeFile = null)                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_true_if_upgrade_for_existing_episodeFile_for_multi_episodes,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.SDTV' new Revision(version: 1))                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_true_if_language_upgrade_for_existing_episodeFile_for_multi_episodes_and_quality_is_same,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.HDTV720p' new Revision(version: 1))'                                                                                      Language = Language.English                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_false_if_language_upgrade_for_existing_episodeFile_for_multi_episodes_and_quality_is_worse,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 1))'                                                                                      Language = Language.English                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_false_if_not_an_upgrade_for_existing_episodeFile_for_multi_episodes,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.Bluray720p' new Revision(version: 1))                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_false_if_not_an_upgrade_for_one_existing_episodeFile_for_multi_episode,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.SDTV' new Revision(version: 1))                                                                                  }))                                                       .TheNext(1)                                                       .With(e => e.EpisodeFileId = 2)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.Bluray720p' new Revision(version: 1))                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_false_if_not_an_upgrade_for_one_existing_episodeFile_for_multi_episode,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .TheFirst(1)                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.SDTV' new Revision(version: 1))                                                                                  }))                                                       .TheNext(1)                                                       .With(e => e.EpisodeFileId = 2)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                                                  new EpisodeFile                                                                                  {                                                                                      Quality = new QualityModel(Quality.Bluray720p' new Revision(version: 1))                                                                                  }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_false_if_not_a_revision_upgrade_and_prefers_propers,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(1)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                           new EpisodeFile                                                           {                                                               Quality = new QualityModel(Quality.HDTV720p' new Revision(version: 2))                                                           }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_true_if_not_a_revision_upgrade_and_does_not_prefer_propers,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(1)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                           new EpisodeFile                                                           {                                                               Quality = new QualityModel(Quality.HDTV720p' new Revision(version: 2))                                                           }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_true_when_comparing_to_a_lower_quality_proper,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(1)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(                                                           new EpisodeFile                                                           {                                                               Quality = new QualityModel(Quality.Bluray1080p' new Revision(version: 2))                                                           }))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.EpisodeImport.Specifications,UpgradeSpecificationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\EpisodeImport\Specifications\UpgradeSpecificationFixture.cs,should_return_true_if_episode_file_is_null,The following statement contains a magic number: _localEpisode.Episodes = Builder<Episode>.CreateListOfSize(2)                                                       .All()                                                       .With(e => e.EpisodeFileId = 1)                                                       .With(e => e.EpisodeFile = new LazyLoaded<EpisodeFile>(null))                                                       .Build()                                                       .ToList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaFileServiceTests,FilterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileServiceTests\FilterFixture.cs,Setup,The following statement contains a magic number: _series = new Series                        {                            Id = 10'                            Path = @"C:\".AsOsAgnostic()                        };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaFileServiceTests,FilterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileServiceTests\FilterFixture.cs,filter_should_return_none_existing_files,The following statement contains a magic number: Subject.FilterExistingFiles(files' _series).Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaFileServiceTests,FilterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileServiceTests\FilterFixture.cs,filter_should_return_none_existing_files_ignoring_case,The following statement contains a magic number: Subject.FilterExistingFiles(files' _series).Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaFileServiceTests,FilterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaFileServiceTests\FilterFixture.cs,filter_should_return_none_existing_files_not_ignoring_case,The following statement contains a magic number: Subject.FilterExistingFiles(files' _series).Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_subtract_one_from_AudioChannels_as_total_channels_if_LFE_in_AudioChannelPositionsText,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 6'                  AudioChannelPositions = null'                  AudioChannelPositionsText = "Front: L C R' Side: L R' LFE"              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_subtract_one_from_AudioChannels_as_total_channels_if_LFE_in_AudioChannelPositionsText,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(5.1m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannels_as_total_channels_if_LFE_not_in_AudioChannelPositionsText,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = null'                  AudioChannelPositionsText = "Front: L R"              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannels_as_total_channels_if_LFE_not_in_AudioChannelPositionsText,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_return_0_if_schema_revision_is_less_than_3_and_other_properties_are_null,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = null'                  AudioChannelPositionsText = null'                  SchemaRevision = 2              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_return_0_if_schema_revision_is_less_than_3_and_other_properties_are_null,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = null'                  AudioChannelPositionsText = null'                  SchemaRevision = 2              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannels_if_schema_revision_is_3_and_other_properties_are_null,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = null'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannels_if_schema_revision_is_3_and_other_properties_are_null,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = null'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannels_if_schema_revision_is_3_and_other_properties_are_null,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "2/0/0"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "2/0/0"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_AudioChannelPositions,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_AudioChannelPositions_including_decimal,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "3/2/0.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_AudioChannelPositions_including_decimal,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "3/2/0.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_AudioChannelPositions_including_decimal,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(5.1m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_cleanup_extraneous_text_from_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "Object Based / 3/2/2.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_cleanup_extraneous_text_from_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "Object Based / 3/2/2.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_cleanup_extraneous_text_from_AudioChannelPositions,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(7.1m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_skip_empty_groups_in_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = " / 2/0/0.0"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_skip_empty_groups_in_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = " / 2/0/0.0"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_skip_empty_groups_in_AudioChannelPositions,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_first_series_of_numbers_from_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "3/2/2.1 / 3/2/2.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_first_series_of_numbers_from_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "3/2/2.1 / 3/2/2.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_first_series_of_numbers_from_AudioChannelPositions,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(7.1m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_dual_mono_representation_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "1+1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_dual_mono_representation_AudioChannelPositions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "1+1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_sum_dual_mono_representation_AudioChannelPositions,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(2.0m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannelPositionText_when_AudioChannelChannelPosition_is_invalid,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel                  {                  AudioChannels = 6'                  AudioChannelPositions = "15 objects"'                  AudioChannelPositionsText = "15 objects / Front: L C R' Side: L R' LFE"'                      SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannelPositionText_when_AudioChannelChannelPosition_is_invalid,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel                  {                  AudioChannels = 6'                  AudioChannelPositions = "15 objects"'                  AudioChannelPositionsText = "15 objects / Front: L C R' Side: L R' LFE"'                      SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_use_AudioChannelPositionText_when_AudioChannelChannelPosition_is_invalid,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(5.1m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_remove_atmos_objects_from_AudioChannelPostions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "15 objects / 3/2.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_remove_atmos_objects_from_AudioChannelPostions,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioChannels = 2'                  AudioChannelPositions = "15 objects / 3/2.1"'                  AudioChannelPositionsText = null'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioChannelsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioChannelsFixture.cs,should_remove_atmos_objects_from_AudioChannelPostions,The following statement contains a magic number: MediaInfoFormatter.FormatAudioChannels(mediaInfoModel).Should().Be(5.1m);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioCodecFixture.cs,should_format_audio_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioFormat = split[0]'                  AudioCodecID = split[1]'                  AudioProfile = split[2]'                  AudioCodecLibrary = split[3]'                  AudioAdditionalFeatures = split[4]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioCodecFixture.cs,should_format_audio_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioFormat = split[0]'                  AudioCodecID = split[1]'                  AudioProfile = split[2]'                  AudioCodecLibrary = split[3]'                  AudioAdditionalFeatures = split[4]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatAudioCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatAudioCodecFixture.cs,should_format_audio_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  AudioFormat = split[0]'                  AudioCodecID = split[1]'                  AudioProfile = split[2]'                  AudioCodecLibrary = split[3]'                  AudioAdditionalFeatures = split[4]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoCodecFixture.cs,should_format_video_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  VideoFormat = split[0]'                  VideoCodecID = split[1]'                  VideoProfile = split[2]'                  VideoCodecLibrary = split[3]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoCodecFixture.cs,should_format_video_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  VideoFormat = split[0]'                  VideoCodecID = split[1]'                  VideoProfile = split[2]'                  VideoCodecLibrary = split[3]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoCodecFixture.cs,should_format_video_format_fallbacks,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  VideoFormat = split[0]'                  VideoCodecID = split[1]'                  VideoProfile = split[2]'                  VideoCodecLibrary = split[3]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoCodecFixture.cs,should_format_video_format_fallbacks,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  VideoFormat = split[0]'                  VideoCodecID = split[1]'                  VideoProfile = split[2]'                  VideoCodecLibrary = split[3]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoCodecFixture.cs,should_warn_on_unknown_video_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  VideoFormat = split[0]'                  VideoCodecID = split[1]'                  VideoProfile = split[2]'                  VideoCodecLibrary = split[3]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoCodecFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoCodecFixture.cs,should_warn_on_unknown_video_format,The following statement contains a magic number: var mediaInfoModel = new MediaInfoModel              {                  VideoFormat = split[0]'                  VideoCodecID = split[1]'                  VideoProfile = split[2]'                  VideoCodecLibrary = split[3]              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo.MediaInfoFormatterTests,FormatVideoDynamicRangeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\MediaInfoFormatterTests\FormatVideoDynamicRangeFixture.cs,should_format_video_dynamic_range,The following statement contains a magic number: var mediaInfo = new MediaInfoModel              {                  VideoBitDepth = bitDepth'                  VideoColourPrimaries = colourPrimaries'                  VideoTransferCharacteristics = transferCharacteristics'                  SchemaRevision = 5              };
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_up_to_date_media_info,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(3)                  .All()                  .With(v => v.RelativePath = "media.mkv")                  .TheFirst(1)                  .With(v => v.MediaInfo = new MediaInfoModel { SchemaRevision = VideoFileInfoReader.CURRENT_MEDIA_INFO_SCHEMA_REVISION })                  .BuildList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_up_to_date_media_info,The following statement contains a magic number: Mocker.GetMock<IVideoFileInfoReader>()                    .Verify(v => v.GetMediaInfo(Path.Combine(_series.Path' "media.mkv"))' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_up_to_date_media_info,The following statement contains a magic number: Mocker.GetMock<IMediaFileService>()                    .Verify(v => v.Update(It.IsAny<EpisodeFile>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_not_yet_date_media_info,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(3)                  .All()                  .With(v => v.RelativePath = "media.mkv")                  .TheFirst(1)                  .With(v => v.MediaInfo = new MediaInfoModel { SchemaRevision = VideoFileInfoReader.MINIMUM_MEDIA_INFO_SCHEMA_REVISION })                  .BuildList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_not_yet_date_media_info,The following statement contains a magic number: Mocker.GetMock<IVideoFileInfoReader>()                    .Verify(v => v.GetMediaInfo(Path.Combine(_series.Path' "media.mkv"))' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_skip_not_yet_date_media_info,The following statement contains a magic number: Mocker.GetMock<IMediaFileService>()                    .Verify(v => v.Update(It.IsAny<EpisodeFile>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_update_outdated_media_info,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(3)                  .All()                  .With(v => v.RelativePath = "media.mkv")                  .TheFirst(1)                  .With(v => v.MediaInfo = new MediaInfoModel())                  .BuildList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_update_outdated_media_info,The following statement contains a magic number: Mocker.GetMock<IVideoFileInfoReader>()                    .Verify(v => v.GetMediaInfo(Path.Combine(_series.Path' "media.mkv"))' Times.Exactly(3));
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_update_outdated_media_info,The following statement contains a magic number: Mocker.GetMock<IMediaFileService>()                    .Verify(v => v.Update(It.IsAny<EpisodeFile>())' Times.Exactly(3));
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_ignore_missing_files,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(2)                     .All()                     .With(v => v.RelativePath = "media.mkv")                     .BuildList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_continue_after_failure,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(2)                     .All()                     .With(v => v.RelativePath = "media.mkv")                     .TheFirst(1)                     .With(v => v.RelativePath = "media2.mkv")                     .BuildList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_not_update_files_if_media_info_disabled,The following statement contains a magic number: var episodeFiles = Builder<EpisodeFile>.CreateListOfSize(2)                  .All()                  .With(v => v.RelativePath = "media.mkv")                  .TheFirst(1)                  .With(v => v.RelativePath = "media2.mkv")                  .BuildList();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_update_media_info,The following statement contains a magic number: var episodeFile = Builder<EpisodeFile>.CreateNew()                  .With(v => v.RelativePath = "media.mkv")                  .With(e => e.MediaInfo = new MediaInfoModel{SchemaRevision = 3})                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_not_update_media_info_if_new_info_is_null,The following statement contains a magic number: var episodeFile = Builder<EpisodeFile>.CreateNew()                  .With(v => v.RelativePath = "media.mkv")                  .With(e => e.MediaInfo = new MediaInfoModel{SchemaRevision = 3})                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,UpdateMediaInfoServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\UpdateMediaInfoServiceFixture.cs,should_not_save_episode_file_if_new_info_is_null,The following statement contains a magic number: var episodeFile = Builder<EpisodeFile>.CreateNew()                  .With(v => v.RelativePath = "media.mkv")                  .With(e => e.MediaInfo = new MediaInfoModel{SchemaRevision = 3})                  .Build();
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_runtime,The following statement contains a magic number: Subject.GetRunTime(path).Value.Seconds.Should().Be(10);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.AudioBitrate.Should().Be(128000);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.AudioChannels.Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.Height.Should().Be(320);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.RunTime.Seconds.Should().Be(10);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.VideoBitrate.Should().Be(193329);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.VideoFps.Should().Be(24);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info,The following statement contains a magic number: info.Width.Should().Be(480);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.AudioBitrate.Should().Be(128000);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.AudioChannels.Should().Be(2);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.Height.Should().Be(320);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.RunTime.Seconds.Should().Be(10);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.VideoBitrate.Should().Be(193329);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.VideoFps.Should().Be(24);
Magic Number,NzbDrone.Core.Test.MediaFiles.MediaInfo,VideoFileInfoReaderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MediaFiles\MediaInfo\VideoFileInfoReaderFixture.cs,get_info_unicode,The following statement contains a magic number: info.Width.Should().Be(480);
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_single_property_doesnt_match,The following statement contains a magic number: var command2 = new EpisodeSearchCommand { EpisodeIds = new List<int> { 2 } };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_only_one_property_matches,The following statement contains a magic number: var command2 = new SeasonSearchCommand { SeriesId = 1' SeasonNumber = 2 };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_no_properties_match,The following statement contains a magic number: var command2 = new SeasonSearchCommand { SeriesId = 2' SeasonNumber = 2 };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_no_properties_match,The following statement contains a magic number: var command2 = new SeasonSearchCommand { SeriesId = 2' SeasonNumber = 2 };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_only_one_has_properties,The following statement contains a magic number: var command2 = new SeasonSearchCommand { SeriesId = 2' SeasonNumber = 2 };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_only_one_has_properties,The following statement contains a magic number: var command2 = new SeasonSearchCommand { SeriesId = 2' SeasonNumber = 2 };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_commands_list_are_different_lengths,The following statement contains a magic number: var command2 = new EpisodeSearchCommand { EpisodeIds = new List<int> { 1' 2 } };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_commands_list_dont_match,The following statement contains a magic number: var command2 = new EpisodeSearchCommand { EpisodeIds = new List<int> { 2 } };
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_true_when_commands_list_for_non_primitive_type_match,The following statement contains a magic number: var files1 = Builder<ManualImportFile>.CreateListOfSize(2)                                                    .All()                                                    .With(m => m.Path = GivenRandomPath())                                                    .Build()                                                    .ToList();
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_commands_list_for_non_primitive_type_dont_match,The following statement contains a magic number: var files1 = Builder<ManualImportFile>.CreateListOfSize(2)                                                    .All()                                                    .With(m => m.Path = GivenRandomPath())                                                    .Build()                                                    .ToList();
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandEqualityComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandEqualityComparerFixture.cs,should_return_false_when_commands_list_for_non_primitive_type_dont_match,The following statement contains a magic number: var files2 = Builder<ManualImportFile>.CreateListOfSize(2)                                                    .All()                                                    .With(m => m.Path = GivenRandomPath())                                                    .Build()                                                    .ToList();
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandExecutorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandExecutorFixture.cs,TearDown,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandExecutorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandExecutorFixture.cs,QueueAndWaitForExecution,The following statement contains a magic number: !waitEventComplete.Wait(15000)
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandExecutorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandExecutorFixture.cs,QueueAndWaitForExecution,The following statement contains a magic number: waitPublish && !waitEventPublish.Wait(500)
Magic Number,NzbDrone.Core.Test.Messaging.Commands,CommandExecutorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Messaging\Commands\CommandExecutorFixture.cs,broken_executor_should_publish_executed_event,The following statement contains a magic number: ExceptionVerification.WaitForErrors(1' 500);
Magic Number,NzbDrone.Core.Test.MetadataSource.SkyHook,SkyHookProxyFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MetadataSource\SkyHook\SkyHookProxyFixture.cs,should_not_have_period_at_start_of_title_slug,The following statement contains a magic number: var details = Subject.GetSeriesInfo(79099);
Magic Number,NzbDrone.Core.Test.MetadataSource.SkyHook,SkyHookProxySearchFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\MetadataSource\SkyHook\SkyHookProxySearchFixture.cs,should_return_existing_series_if_found,The following statement contains a magic number: const int tvdbId = 78804;
Magic Number,NzbDrone.Core.Test.NotificationTests,PlexClientServiceTest,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\PlexClientServiceTest.cs,Setup,The following statement contains a magic number: _clientSettings = new PlexClientSettings                                    {                                        Host = "localhost"'                                        Port = 3000                                    };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,ActivePlayersFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\ActivePlayersFixture.cs,Setup,The following statement contains a magic number: _settings = new XbmcSettings              {                  Host = "localhost"'                  Port = 8080'                  Username = "xbmc"'                  Password = "xbmc"'                  AlwaysUpdate = false'                  CleanLibrary = false'                  UpdateLibrary = true              };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,Setup,The following statement contains a magic number: _settings = new XbmcSettings              {                  Host = "localhost"'                  Port = 8080'                  Username = "xbmc"'                  Password = "xbmc"'                  AlwaysUpdate = false'                  CleanLibrary = false'                  UpdateLibrary = true              };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\GetSeriesPathFixture.cs,Setup,The following statement contains a magic number: _series = new Series              {                  TvdbId = 79488'                  Title = "30 Rock"              };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,UpdateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\UpdateFixture.cs,Setup,The following statement contains a magic number: _settings = new XbmcSettings              {                  Host = "localhost"'                  Port = 8080'                  Username = "xbmc"'                  Password = "xbmc"'                  AlwaysUpdate = false'                  CleanLibrary = false'                  UpdateLibrary = true              };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Http,UpdateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Http\UpdateFixture.cs,Setup,The following statement contains a magic number: _fakeSeries = Builder<Series>.CreateNew()                                           .With(s => s.TvdbId = 79488)                                           .With(s => s.Title = "30 Rock")                                           .Build();
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Json,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Json\GetSeriesPathFixture.cs,Setup,The following statement contains a magic number: _xbmcSeries = Builder<TvShow>.CreateListOfSize(3)                                           .All()                                           .With(s => s.ImdbNumber = "0")                                           .TheFirst(1)                                           .With(s => s.ImdbNumber = TVDB_ID.ToString())                                           .Build()                                           .ToList();
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Json,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Json\GetSeriesPathFixture.cs,GivenMatchingTitle,The following statement contains a magic number: _series = new Series              {                  TvdbId = 1000'                  Title = _xbmcSeries.First().Label              };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Json,GetSeriesPathFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Json\GetSeriesPathFixture.cs,GivenMatchingSeries,The following statement contains a magic number: _series = new Series              {                  TvdbId = 1000'                  Title = "Does not exist"              };
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Json,UpdateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Json\UpdateFixture.cs,Setup,The following statement contains a magic number: _xbmcSeries = Builder<TvShow>.CreateListOfSize(3)                                           .TheFirst(1)                                           .With(s => s.ImdbNumber = TVDB_ID.ToString())                                           .Build()                                           .ToList();
Magic Number,NzbDrone.Core.Test.NotificationTests.Xbmc.Json,UpdateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\NotificationTests\Xbmc\Json\UpdateFixture.cs,should_update_all_paths_when_series_path_not_found,The following statement contains a magic number: var fakeSeries = Builder<Series>.CreateNew()                                              .With(s => s.TvdbId = 1000)                                              .With(s => s.Title = "Not 30 Rock")                                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleFixture.cs,should_use_and_as_separator_for_multiple_episodes,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                                             .TheFirst(1)                                             .With(e => e.Title = "Surrender Benson")                                             .TheNext(1)                                             .With(e => e.Title = "Imprisoned Lives")                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,CleanTitleYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\CleanTitleYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 7)                              .With(e => e.AbsoluteEpisodeNumber = 101)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 7)                              .With(e => e.AbsoluteEpisodeNumber = 101)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 7)                              .With(e => e.AbsoluteEpisodeNumber = 101)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode3 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 8)                              .With(e => e.AbsoluteEpisodeNumber = 102)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode3 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 8)                              .With(e => e.AbsoluteEpisodeNumber = 102)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,Setup,The following statement contains a magic number: _episode3 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 8)                              .With(e => e.AbsoluteEpisodeNumber = 102)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,EpisodeTitleCollapseFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\EpisodeTitleCollapseFixture.cs,should_not_collapse_episode_titles_when_episode_titles_are_not_the_same,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 3;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,GivenProper,The following statement contains a magic number: _episodeFile.Quality.Revision.Version = 2;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_periods_from_end_of_episode_title,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 3;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_periods_from_end_of_episode_title,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1.")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_periods_from_end_of_episode_title,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1.")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_question_marks_from_end_of_episode_title,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 3;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_question_marks_from_end_of_episode_title,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1?")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_trim_question_marks_from_end_of_episode_title,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1?")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_replace_double_period_with_single_period,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_replace_double_period_with_single_period,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_replace_triple_period_with_single_period,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_replace_triple_period_with_single_period,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "Part 1")                              .With(e => e.SeasonNumber = 6)                              .With(e => e.EpisodeNumber = 6)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_format_mediainfo_properly,The following statement contains a magic number: _episodeFile.MediaInfo = new Core.MediaFiles.MediaInfo.MediaInfoModel()              {                  VideoCodec = "AVC"'                  AudioFormat = "DTS"'                  AudioChannels = 6'                  AudioLanguages = "English/Spanish"'                  Subtitles = "English/Spanish/Italian"'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_format_mediainfo_properly,The following statement contains a magic number: _episodeFile.MediaInfo = new Core.MediaFiles.MediaInfo.MediaInfoModel()              {                  VideoCodec = "AVC"'                  AudioFormat = "DTS"'                  AudioChannels = 6'                  AudioLanguages = "English/Spanish"'                  Subtitles = "English/Spanish/Italian"'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_exclude_english_in_mediainfo_audio_language,The following statement contains a magic number: _episodeFile.MediaInfo = new Core.MediaFiles.MediaInfo.MediaInfoModel()              {                  VideoCodec = "AVC"'                  AudioFormat = "DTS"'                  AudioChannels = 6'                  AudioLanguages = "English"'                  Subtitles = "English/Spanish/Italian"'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_exclude_english_in_mediainfo_audio_language,The following statement contains a magic number: _episodeFile.MediaInfo = new Core.MediaFiles.MediaInfo.MediaInfoModel()              {                  VideoCodec = "AVC"'                  AudioFormat = "DTS"'                  AudioChannels = 6'                  AudioLanguages = "English"'                  Subtitles = "English/Spanish/Italian"'                  SchemaRevision = 3              };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_update_media_info_if_token_configured_and_revision_is_old,The following statement contains a magic number: GivenMediaInfoModel(schemaRevision: 3);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_not_update_media_info_if_no_series_path_available,The following statement contains a magic number: GivenMediaInfoModel(schemaRevision: 3);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_not_update_media_info_if_token_not_configured_and_revision_is_old,The following statement contains a magic number: GivenMediaInfoModel(schemaRevision: 3);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_not_update_media_info_if_token_configured_and_revision_is_current,The following statement contains a magic number: GivenMediaInfoModel(schemaRevision: 5);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_not_update_media_info_if_token_configured_and_revision_is_newer,The following statement contains a magic number: GivenMediaInfoModel(schemaRevision: 8);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_use_updated_media_info_if_token_configured_and_revision_is_old,The following statement contains a magic number: GivenMediaInfoModel(schemaRevision: 3);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_use_updated_media_info_if_token_configured_and_revision_is_old,The following statement contains a magic number: Mocker.GetMock<IUpdateMediaInfo>()                  .Setup(u => u.Update(_episodeFile' _series))                  .Callback((EpisodeFile e' Series s) => e.MediaInfo = new MediaInfoModel                  {                      VideoCodec = "AVC"'                      AudioFormat = "DTS"'                      AudioChannels = 6'                      AudioLanguages = "English"'                      Subtitles = "English/Spanish/Italian"'                      VideoBitDepth = 10'                      VideoColourPrimaries = "BT.2020"'                      VideoTransferCharacteristics = "PQ"'                      SchemaRevision = 5                  });
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_use_updated_media_info_if_token_configured_and_revision_is_old,The following statement contains a magic number: Mocker.GetMock<IUpdateMediaInfo>()                  .Setup(u => u.Update(_episodeFile' _series))                  .Callback((EpisodeFile e' Series s) => e.MediaInfo = new MediaInfoModel                  {                      VideoCodec = "AVC"'                      AudioFormat = "DTS"'                      AudioChannels = 6'                      AudioLanguages = "English"'                      Subtitles = "English/Spanish/Italian"'                      VideoBitDepth = 10'                      VideoColourPrimaries = "BT.2020"'                      VideoTransferCharacteristics = "PQ"'                      SchemaRevision = 5                  });
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,FileNameBuilderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\FileNameBuilderFixture.cs,should_use_updated_media_info_if_token_configured_and_revision_is_old,The following statement contains a magic number: Mocker.GetMock<IUpdateMediaInfo>()                  .Setup(u => u.Update(_episodeFile' _series))                  .Callback((EpisodeFile e' Series s) => e.MediaInfo = new MediaInfoModel                  {                      VideoCodec = "AVC"'                      AudioFormat = "DTS"'                      AudioChannels = 6'                      AudioLanguages = "English"'                      Subtitles = "English/Spanish/Italian"'                      VideoBitDepth = 10'                      VideoColourPrimaries = "BT.2020"'                      VideoTransferCharacteristics = "PQ"'                      SchemaRevision = 5                  });
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,IdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\IdFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>                        .CreateNew()                        .With(s => s.Title = "Series Title")                        .With(s => s.ImdbId = "tt12345")                        .With(s => s.TvdbId = 12345)                        .With(s => s.TvRageId = 54321)                        .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,IdFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\IdFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>                        .CreateNew()                        .With(s => s.Title = "Series Title")                        .With(s => s.ImdbId = "tt12345")                        .With(s => s.TvdbId = 12345)                        .With(s => s.TvRageId = 54321)                        .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 7)                              .With(e => e.AbsoluteEpisodeNumber = 101)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 7)                              .With(e => e.AbsoluteEpisodeNumber = 101)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 7)                              .With(e => e.AbsoluteEpisodeNumber = 101)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode3 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 8)                              .With(e => e.AbsoluteEpisodeNumber = 102)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode3 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 8)                              .With(e => e.AbsoluteEpisodeNumber = 102)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode3 = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 8)                              .With(e => e.AbsoluteEpisodeNumber = 102)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,GivenProper,The following statement contains a magic number: _episodeFile.Quality.Revision.Version = 2;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_repeat_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 2;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_scene_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 3;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_range_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 4;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_range_multi_episode_anime_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 4;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_repeat_multi_episode_anime_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 2;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_single_episode_with_range_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 4;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_single_anime_episode_with_range_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 4;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_prefixed_range_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 5;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_prefixed_range_multi_episode_anime_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 5;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_single_episode_with_prefixed_range_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 5;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_single_anime_episode_with_prefixed_range_multi_episode_properly,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 5;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,MultiEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\MultiEpisodeFixture.cs,should_format_prefixed_range_multi_episode_using_episode_separator,The following statement contains a magic number: _namingConfig.MultiEpisodeStyle = 5;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,ReplaceCharacterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\ReplaceCharacterFixure.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,ReplaceCharacterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\ReplaceCharacterFixure.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,ReplaceCharacterFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\ReplaceCharacterFixure.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,RequiresAbsoluteEpisodeNumberFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\RequiresAbsoluteEpisodeNumberFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,RequiresAbsoluteEpisodeNumberFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\RequiresAbsoluteEpisodeNumberFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,RequiresAbsoluteEpisodeNumberFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\RequiresAbsoluteEpisodeNumberFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,RequiresEpisodeTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\RequiresEpisodeTitleFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,RequiresEpisodeTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\RequiresEpisodeTitleFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,RequiresEpisodeTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\RequiresEpisodeTitleFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleTheFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleTheFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleTheFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleTheFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleTheFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleTheFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleTheYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleTheYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleTheYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleTheYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleTheYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleTheYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TitleYearFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TitleYearFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                              .With(e => e.Title = "City Sushi")                              .With(e => e.SeasonNumber = 15)                              .With(e => e.EpisodeNumber = 6)                              .With(e => e.AbsoluteEpisodeNumber = 100)                              .Build();
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,Setup,The following statement contains a magic number: _episodes = new List<Episode>                          {                              Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Episode Title 1")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 1)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 2)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 3)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 2")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 4)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 3")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 5)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 4")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 6)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "A Really Really Really Really Long Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 7)                                              .Build()                          };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,Setup,The following statement contains a magic number: _episodes = new List<Episode>                          {                              Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Episode Title 1")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 1)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 2)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 3)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 2")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 4)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 3")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 5)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 4")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 6)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "A Really Really Really Really Long Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 7)                                              .Build()                          };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,Setup,The following statement contains a magic number: _episodes = new List<Episode>                          {                              Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Episode Title 1")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 1)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 2)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 3)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 2")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 4)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 3")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 5)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 4")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 6)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "A Really Really Really Really Long Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 7)                                              .Build()                          };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,Setup,The following statement contains a magic number: _episodes = new List<Episode>                          {                              Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Episode Title 1")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 1)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 2)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 3)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 2")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 4)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 3")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 5)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 4")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 6)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "A Really Really Really Really Long Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 7)                                              .Build()                          };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,Setup,The following statement contains a magic number: _episodes = new List<Episode>                          {                              Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Episode Title 1")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 1)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 2)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 3)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 2")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 4)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 3")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 5)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 4")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 6)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "A Really Really Really Really Long Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 7)                                              .Build()                          };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,Setup,The following statement contains a magic number: _episodes = new List<Episode>                          {                              Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Episode Title 1")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 1)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 2)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 3)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 2")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 4)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 3")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 5)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "Yet Another Episode Title Take 4")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 6)                                              .Build()'                                Builder<Episode>.CreateNew()                                              .With(e => e.Title = "A Really Really Really Really Long Episode Title")                                              .With(e => e.SeasonNumber = 1)                                              .With(e => e.EpisodeNumber = 7)                                              .Build()                          };
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,GivenProper,The following statement contains a magic number: _episodeFile.Quality.Revision.Version = 2;
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_with_ellipsis_between_first_and_last_episode_titles,The following statement contains a magic number: result.Length.Should().BeLessOrEqualTo(255);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_with_ellipsis_if_only_first_episode_title_fits,The following statement contains a magic number: result.Length.Should().BeLessOrEqualTo(255);
Magic Number,NzbDrone.Core.Test.OrganizerTests.FileNameBuilderTests,TruncatedEpisodeTitlesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\OrganizerTests\FileNameBuilderTests\TruncatedEpisodeTitlesFixture.cs,should_truncate_first_episode_title_with_ellipsis_if_only_partially_fits,The following statement contains a magic number: result.Length.Should().BeLessOrEqualTo(255);
Magic Number,NzbDrone.Core.Test.ParserTests,CrapParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\CrapParserFixture.cs,should_not_parse_md5,The following statement contains a magic number: var repetitions = 100;
Magic Number,NzbDrone.Core.Test.ParserTests,CrapParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\CrapParserFixture.cs,should_not_parse_random,The following statement contains a magic number: var repetitions = 500;
Magic Number,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_not_accept_ancient_daily_series,The following statement contains a magic number: var yearTooLow = title.Expand(new { year = 1950' month = 10' day = 14 });
Magic Number,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_not_accept_ancient_daily_series,The following statement contains a magic number: var yearTooLow = title.Expand(new { year = 1950' month = 10' day = 14 });
Magic Number,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_not_accept_ancient_daily_series,The following statement contains a magic number: var yearTooLow = title.Expand(new { year = 1950' month = 10' day = 14 });
Magic Number,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_not_accept_future_dates,The following statement contains a magic number: var twoDaysFromNow = DateTime.Now.AddDays(2);
Magic Number,NzbDrone.Core.Test.ParserTests,DailyEpisodeParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\DailyEpisodeParserFixture.cs,should_fail_if_episode_is_far_in_future,The following statement contains a magic number: var title = string.Format("{0:yyyy.MM.dd} - Denis Leary - HD TV.mkv"' DateTime.Now.AddDays(2));
Magic Number,NzbDrone.Core.Test.ParserTests,IsPossibleSpecialEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\IsPossibleSpecialEpisodeFixture.cs,should_not_treat_files_without_a_series_title_as_a_special,The following statement contains a magic number: var parsedEpisodeInfo = new ParsedEpisodeInfo                                      {                                          EpisodeNumbers = new[]{ 7 }'                                          SeasonNumber = 1'                                          SeriesTitle = ""                                      };
Magic Number,NzbDrone.Core.Test.ParserTests,QualityParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\QualityParserFixture.cs,should_be_able_to_parse_repack,The following statement contains a magic number: result.Revision.Version.Should().Be(2);
Magic Number,NzbDrone.Core.Test.ParserTests,QualityParserFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\QualityParserFixture.cs,ParseAndVerifyQuality,The following statement contains a magic number: var version = proper ? 2 : 1;
Magic Number,NzbDrone.Core.Test.ParserTests,SeriesTitleInfoFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\SeriesTitleInfoFixture.cs,should_have_year_when_title_has_a_year,The following statement contains a magic number: result.Year.Should().Be(2004);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_fallback_to_daily_episode_lookup_when_search_criteria_episode_doesnt_match,The following statement contains a magic number: _parsedEpisodeInfo.AirDate = DateTime.Today.AddDays(-5).ToString(Episode.AIR_DATE_FORMAT);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_fallback_to_findEpisode_when_search_criteria_match_fails_for_scene_numbering,The following statement contains a magic number: _episodes.First().SceneEpisodeNumber = 10;
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_fallback_to_findEpisode_when_search_criteria_match_fails,The following statement contains a magic number: _episodes.First().EpisodeNumber = 10;
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_return_episodes_when_scene_absolute_episode_number_returns_multiple_results,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                    .Setup(s => s.FindEpisodesBySceneNumbering(It.IsAny<int>()' seasonNumber' It.IsAny<int>()))                    .Returns(Builder<Episode>.CreateListOfSize(5).Build().ToList());
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_return_episodes_when_scene_absolute_episode_number_returns_multiple_results,The following statement contains a magic number: result.Should().HaveCount(5);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_use_tvdb_season_number_when_available_and_a_scene_source,The following statement contains a magic number: const int tvdbSeasonNumber = 5;
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_number_when_available_for_a_different_season_and_a_scene_source,The following statement contains a magic number: const int tvdbSeasonNumber = 5;
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_number_when_available_for_a_different_season_and_a_scene_source,The following statement contains a magic number: Mocker.GetMock<ISceneMappingService>()                    .Setup(s => s.FindSceneMapping(_parsedEpisodeInfo.SeriesTitle' It.IsAny<string>()))                    .Returns(new SceneMapping { SeasonNumber = tvdbSeasonNumber' SceneSeasonNumber = _parsedEpisodeInfo.SeasonNumber + 100 });
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,GetEpisodesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\GetEpisodesFixture.cs,should_not_use_tvdb_season_when_not_a_scene_source,The following statement contains a magic number: const int tvdbSeasonNumber = 5;
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_not_use_tvrageid_when_scene_naming_exception_exists,The following statement contains a magic number: Mocker.GetMock<ISceneMappingService>()                    .Setup(v => v.FindTvdbId(It.IsAny<string>()' It.IsAny<string>()))                    .Returns(10);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTitle_when_search_criteria_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTitle_when_search_criteria_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTitle_using_year_when_FindByTitle_matching_fails,The following statement contains a magic number: _parsedEpisodeInfo.SeriesTitleInfo = new SeriesTitleInfo              {                  Title = "Series Title 2017"'                  TitleWithoutYear = "Series Title"'                  Year = 2017              };
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTitle_using_year_when_FindByTitle_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTitle_using_year_when_FindByTitle_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTvdbId_when_search_criteria_and_FindByTitle_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTvdbId_when_search_criteria_and_FindByTitle_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTvRageId_when_search_criteria_and_FindByTitle_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.ParserTests.ParsingServiceTests,MapFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ParserTests\ParsingServiceTests\MapFixture.cs,should_FindByTvRageId_when_search_criteria_and_FindByTitle_matching_fails,The following statement contains a magic number: Subject.Map(_parsedEpisodeInfo' 10' 10' _singleEpisodeSearchCriteria);
Magic Number,NzbDrone.Core.Test.Profiles.Delay,DelayProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Delay\DelayProfileServiceFixture.cs,Setup,The following statement contains a magic number: _delayProfiles = Builder<DelayProfile>.CreateListOfSize(4)                                                    .TheFirst(1)                                                    .With(d => d.Order = int.MaxValue)                                                    .TheNext(1)                                                    .With(d => d.Order = 1)                                                    .TheNext(1)                                                    .With(d => d.Order = 2)                                                    .TheNext(1)                                                    .With(d => d.Order = 3)                                                    .Build()                                                    .ToList();
Magic Number,NzbDrone.Core.Test.Profiles.Delay,DelayProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Delay\DelayProfileServiceFixture.cs,Setup,The following statement contains a magic number: _delayProfiles = Builder<DelayProfile>.CreateListOfSize(4)                                                    .TheFirst(1)                                                    .With(d => d.Order = int.MaxValue)                                                    .TheNext(1)                                                    .With(d => d.Order = 1)                                                    .TheNext(1)                                                    .With(d => d.Order = 2)                                                    .TheNext(1)                                                    .With(d => d.Order = 3)                                                    .Build()                                                    .ToList();
Magic Number,NzbDrone.Core.Test.Profiles.Delay,DelayProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Delay\DelayProfileServiceFixture.cs,Setup,The following statement contains a magic number: _delayProfiles = Builder<DelayProfile>.CreateListOfSize(4)                                                    .TheFirst(1)                                                    .With(d => d.Order = int.MaxValue)                                                    .TheNext(1)                                                    .With(d => d.Order = 1)                                                    .TheNext(1)                                                    .With(d => d.Order = 2)                                                    .TheNext(1)                                                    .With(d => d.Order = 3)                                                    .Build()                                                    .ToList();
Magic Number,NzbDrone.Core.Test.Profiles,ProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\ProfileServiceFixture.cs,init_should_add_default_profiles,The following statement contains a magic number: Mocker.GetMock<IProfileRepository>()                  .Verify(v => v.Insert(It.IsAny<QualityProfile>())' Times.Exactly(6));
Magic Number,NzbDrone.Core.Test.Profiles,ProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\ProfileServiceFixture.cs,Init_should_skip_if_any_profiles_already_exist,The following statement contains a magic number: Mocker.GetMock<IProfileRepository>()                    .Setup(s => s.All())                    .Returns(Builder<QualityProfile>.CreateListOfSize(2).Build().ToList());
Magic Number,NzbDrone.Core.Test.Profiles,ProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\ProfileServiceFixture.cs,should_not_be_able_to_delete_profile_if_assigned_to_series,The following statement contains a magic number: var profile = Builder<QualityProfile>.CreateNew()                                            .With(p => p.Id = 2)                                            .Build();
Magic Number,NzbDrone.Core.Test.Profiles,ProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\ProfileServiceFixture.cs,should_not_be_able_to_delete_profile_if_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .Random(1)                                              .With(c => c.QualityProfileId = profile.Id)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.Profiles,ProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\ProfileServiceFixture.cs,should_delete_profile_if_not_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .All()                                              .With(c => c.QualityProfileId = 2)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.Profiles,ProfileServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\ProfileServiceFixture.cs,should_delete_profile_if_not_assigned_to_series,The following statement contains a magic number: var seriesList = Builder<Series>.CreateListOfSize(3)                                              .All()                                              .With(c => c.QualityProfileId = 2)                                              .Build().ToList();
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_insert_any_missing_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(Quality.SDTV) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_insert_any_missing_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(Quality.SDTV) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_update_existing_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(Quality.SDTV) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_update_existing_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(Quality.SDTV) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_remove_old_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(new Quality{ Id = 100' Name = "Test" }) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_remove_old_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(new Quality{ Id = 100' Name = "Test" }) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityDefinitionServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityDefinitionServiceFixture.cs,init_should_remove_old_definitions,The following statement contains a magic number: Mocker.GetMock<IQualityDefinitionRepository>()                    .Setup(s => s.All())                    .Returns(new List<QualityDefinition>                        {                                new QualityDefinition(new Quality{ Id = 100' Name = "Test" }) { Weight = 1' MinSize = 0' MaxSize = 100' Id = 20 }                        });
Magic Number,NzbDrone.Core.Test.Qualities,QualityModelComparerFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\QualityModelComparerFixture.cs,should_be_greater_when_first_quality_is_a_proper_for_the_same_quality,The following statement contains a magic number: var first = new QualityModel(Quality.Bluray1080p' new Revision(version: 2));
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,should_be_greater_when_first_quality_is_a_proper,The following statement contains a magic number: var first = new Revision(version: 2);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,should_be_greater_when_first_is_a_proper_for_a_real,The following statement contains a magic number: var first = new Revision(real: 1' version: 2);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,should_be_lesser_when_second_quality_is_a_proper,The following statement contains a magic number: var second = new Revision(version: 2);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,should_be_lesser_when_second_is_a_proper_for_a_real,The following statement contains a magic number: var second = new Revision(real: 1' version: 2);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,should_be_equal_when_both_real_and_version_match_for_real_proper,The following statement contains a magic number: var first = new Revision(version: 2' real: 1);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,should_be_equal_when_both_real_and_version_match_for_real_proper,The following statement contains a magic number: var second = new Revision(version: 2' real: 1);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,greater_than_operator_tests,The following statement contains a magic number: var first = new Revision(version: 2);
Magic Number,NzbDrone.Core.Test.Qualities,RevisionComparableFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Qualities\RevisionComparableFixture.cs,less_than_operator_tests,The following statement contains a magic number: var second = new Revision(version: 2);
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,CalculateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\CalculateFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                                       .With(s => s.Tags = new HashSet<int>(new[] {1' 2}))                                       .Build();
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,CalculateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\CalculateFixture.cs,Setup,The following statement contains a magic number: _releaseProfiles.Add(new ReleaseProfile                                   {                                       Preferred = new List<KeyValuePair<string' int>>                                                   {                                                       new KeyValuePair<string' int>("x264"' 5)'                                                       new KeyValuePair<string' int>("x265"' -10)                                                   }                                   });
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,CalculateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\CalculateFixture.cs,Setup,The following statement contains a magic number: _releaseProfiles.Add(new ReleaseProfile                                   {                                       Preferred = new List<KeyValuePair<string' int>>                                                   {                                                       new KeyValuePair<string' int>("x264"' 5)'                                                       new KeyValuePair<string' int>("x265"' -10)                                                   }                                   });
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,CalculateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\CalculateFixture.cs,should_calculate_positive_score,The following statement contains a magic number: Subject.Calculate(_series' _title).Should().Be(5);
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,CalculateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\CalculateFixture.cs,should_calculate_negative_score,The following statement contains a magic number: Subject.Calculate(_series' _title).Should().Be(-10);
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,CalculateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\CalculateFixture.cs,should_calculate_using_multiple_profiles,The following statement contains a magic number: Subject.Calculate(_series' _title).Should().Be(10);
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,GetMatchingPreferredWordsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\GetMatchingPreferredWordsFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                                       .With(s => s.Tags = new HashSet<int>(new[] {1' 2}))                                       .Build();
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,GetMatchingPreferredWordsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\GetMatchingPreferredWordsFixture.cs,Setup,The following statement contains a magic number: _releaseProfiles.Add(new ReleaseProfile                                   {                                       Preferred = new List<KeyValuePair<string' int>>                                                   {                                                       new KeyValuePair<string' int>("x264"' 5)'                                                       new KeyValuePair<string' int>("x265"' -10)                                                   }                                   });
Magic Number,NzbDrone.Core.Test.Profiles.Releases.PreferredWordService,GetMatchingPreferredWordsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Profiles\Releases\PreferredWordService\GetMatchingPreferredWordsFixture.cs,Setup,The following statement contains a magic number: _releaseProfiles.Add(new ReleaseProfile                                   {                                       Preferred = new List<KeyValuePair<string' int>>                                                   {                                                       new KeyValuePair<string' int>("x264"' 5)'                                                       new KeyValuePair<string' int>("x265"' -10)                                                   }                                   });
Magic Number,NzbDrone.Core.Test.Providers,XemProxyFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Providers\XemProxyFixture.cs,get_series_ids,The following statement contains a magic number: ids.Should().Contain(i => i == 73141);
Magic Number,NzbDrone.Core.Test.ProviderTests.DiskProviderTests,ArchiveProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\DiskProviderTests\ArchiveProviderFixture.cs,Should_extract_to_correct_folder,The following statement contains a magic number: destinationFolder.GetDirectories("*"' SearchOption.AllDirectories).Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.ProviderTests.DiskProviderTests,ArchiveProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\DiskProviderTests\ArchiveProviderFixture.cs,Should_extract_to_correct_folder,The following statement contains a magic number: destinationFolder.GetFiles("*.*"' SearchOption.AllDirectories).Should().HaveCount(6);
Magic Number,NzbDrone.Core.Test.ProviderTests.DiskScanProviderTests,GetVideoFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\DiskScanProviderTests\GetVideoFilesFixture.cs,should_return_video_files_only,The following statement contains a magic number: Subject.GetVideoFiles(path).Should().HaveCount(4);
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,CleanupFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\CleanupFixture.cs,WithExpired,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Setup(s => s.FolderGetLastWrite(It.IsAny<string>()))                                              .Returns(DateTime.UtcNow.AddDays(-10));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,CleanupFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\CleanupFixture.cs,WithExpired,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Setup(s => s.FileGetLastWrite(It.IsAny<string>()))                                              .Returns(DateTime.UtcNow.AddDays(-10));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,CleanupFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\CleanupFixture.cs,WithNonExpired,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Setup(s => s.FolderGetLastWrite(It.IsAny<string>()))                                              .Returns(DateTime.UtcNow.AddDays(-3));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,CleanupFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\CleanupFixture.cs,WithNonExpired,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Setup(s => s.FileGetLastWrite(It.IsAny<string>()))                                              .Returns(DateTime.UtcNow.AddDays(-3));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,CleanupFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\CleanupFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<IConfigService>().SetupGet(s => s.RecycleBinCleanupDays).Returns(7);
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,CleanupFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\CleanupFixture.cs,should_delete_all_expired_files,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Verify(v => v.DeleteFile(It.IsAny<string>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,DeleteDirectoryFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\DeleteDirectoryFixture.cs,should_call_fileSetLastWriteTime_for_each_file,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Verify(v => v.FileSetLastWriteTime(It.IsAny<string>()' It.IsAny<DateTime>())' Times.Exactly(3));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,EmptyFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\EmptyFixture.cs,should_delete_all_folders,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Verify(v => v.DeleteFolder(It.IsAny<string>()' true)' Times.Exactly(3));
Magic Number,NzbDrone.Core.Test.ProviderTests.RecycleBinProviderTests,EmptyFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ProviderTests\RecycleBinProviderTests\EmptyFixture.cs,should_delete_all_files,The following statement contains a magic number: Mocker.GetMock<IDiskProvider>().Verify(v => v.DeleteFile(It.IsAny<string>())' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.QueueTests,QueueServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\QueueTests\QueueServiceFixture.cs,SetUp,The following statement contains a magic number: var downloadItem = Builder<NzbDrone.Core.Download.DownloadClientItem>.CreateNew()                                          .With(v => v.RemainingTime = TimeSpan.FromSeconds(10))                                          .Build();
Magic Number,NzbDrone.Core.Test.QueueTests,QueueServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\QueueTests\QueueServiceFixture.cs,SetUp,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(3)                                            .All()                                            .With(e => e.SeriesId = series.Id)                                            .Build();
Magic Number,NzbDrone.Core.Test.QueueTests,QueueServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\QueueTests\QueueServiceFixture.cs,queue_items_should_have_id,The following statement contains a magic number: queue.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.QueueTests,QueueServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\QueueTests\QueueServiceFixture.cs,queue_items_should_have_id,The following statement contains a magic number: distinct.Should().HaveCount(3);
Magic Number,NzbDrone.Core.Test.SeriesStatsTests,SeriesStatisticsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\SeriesStatsTests\SeriesStatisticsFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                                          .With(s => s.Runtime = 30)                                          .BuildNew();
Magic Number,NzbDrone.Core.Test.SeriesStatsTests,SeriesStatisticsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\SeriesStatsTests\SeriesStatisticsFixture.cs,Setup,The following statement contains a magic number: _episode = Builder<Episode>.CreateNew()                                            .With(e => e.EpisodeFileId = 0)                                            .With(e => e.Monitored = false)                                            .With(e => e.SeriesId = _series.Id)                                            .With(e => e.AirDateUtc = DateTime.Today.AddDays(5))                                            .BuildNew();
Magic Number,NzbDrone.Core.Test.SeriesStatsTests,SeriesStatisticsFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\SeriesStatsTests\SeriesStatisticsFixture.cs,GivenOldEpisode,The following statement contains a magic number: _episode.AirDateUtc = DateTime.Now.AddSeconds(-10);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,GivenRecentStartup,The following statement contains a magic number: Mocker.GetMock<IRuntimeInfo>()                  .SetupGet(v => v.StartTime)                  .Returns(_epoch - TimeSpan.FromMinutes(12));
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_start_backoff_on_first_failure,The following statement contains a magic number: status.DisabledTill.Value.Should().BeCloseTo(_epoch + TimeSpan.FromMinutes(5)' 500);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_start_backoff_on_first_failure,The following statement contains a magic number: status.DisabledTill.Value.Should().BeCloseTo(_epoch + TimeSpan.FromMinutes(5)' 500);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_cancel_backoff_on_success,The following statement contains a magic number: WithStatus(new MockProviderStatus { EscalationLevel = 2 });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_preserve_escalation_on_intermittent_success,The following statement contains a magic number: WithStatus(new MockProviderStatus              {                  InitialFailure = _epoch - TimeSpan.FromSeconds(20)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_preserve_escalation_on_intermittent_success,The following statement contains a magic number: WithStatus(new MockProviderStatus              {                  InitialFailure = _epoch - TimeSpan.FromSeconds(20)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_preserve_escalation_on_intermittent_success,The following statement contains a magic number: WithStatus(new MockProviderStatus              {                  InitialFailure = _epoch - TimeSpan.FromSeconds(20)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(4)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_preserve_escalation_on_intermittent_success,The following statement contains a magic number: status.DisabledTill.Value.Should().BeCloseTo(_epoch + TimeSpan.FromMinutes(15)' 500);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_preserve_escalation_on_intermittent_success,The following statement contains a magic number: status.DisabledTill.Value.Should().BeCloseTo(_epoch + TimeSpan.FromMinutes(15)' 500);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_startup,The following statement contains a magic number: var origStatus = WithStatus(new MockProviderStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_startup,The following statement contains a magic number: var origStatus = WithStatus(new MockProviderStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_startup,The following statement contains a magic number: var origStatus = WithStatus(new MockProviderStatus              {                  InitialFailure = _epoch - TimeSpan.FromMinutes(6)'                  MostRecentFailure = _epoch - TimeSpan.FromSeconds(120)'                  EscalationLevel = 3              });
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_startup,The following statement contains a magic number: origStatus.EscalationLevel.Should().Be(3);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_startup,The following statement contains a magic number: status.DisabledTill.Should().BeCloseTo(_epoch + TimeSpan.FromMinutes(5)' 500);
Magic Number,NzbDrone.Core.Test.ThingiProviderTests,ProviderStatusServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\ThingiProviderTests\ProviderStatusServiceFixture.cs,should_not_escalate_further_till_after_5_minutes_since_startup,The following statement contains a magic number: status.DisabledTill.Should().BeCloseTo(_epoch + TimeSpan.FromMinutes(5)' 500);
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,TestFixture,The following statement contains a magic number: _gameOfThrones = Mocker.Resolve<SkyHookProxy>().GetSeriesInfo(121361);
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_delete_duplicated_episodes_based_on_season_episode_number,The following statement contains a magic number: var duplicateEpisodes = GetEpisodes().Skip(5).Take(2).ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_delete_duplicated_episodes_based_on_season_episode_number,The following statement contains a magic number: var duplicateEpisodes = GetEpisodes().Skip(5).Take(2).ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_remove_duplicate_remote_episodes_before_processing,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(5)                                             .TheFirst(2)                                             .With(e => e.SeasonNumber = 1)                                             .With(e => e.EpisodeNumber = 1)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_remove_duplicate_remote_episodes_before_processing,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(5)                                             .TheFirst(2)                                             .With(e => e.SeasonNumber = 1)                                             .With(e => e.EpisodeNumber = 1)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_set_absolute_episode_number_for_anime,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(3).Build().ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_set_absolute_episode_number_even_if_not_previously_set_for_anime,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(3).Build().ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_get_new_season_and_episode_numbers_when_absolute_episode_number_match_found,The following statement contains a magic number: const int expectedSeasonNumber = 10;
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_get_new_season_and_episode_numbers_when_absolute_episode_number_match_found,The following statement contains a magic number: const int expectedEpisodeNumber = 5;
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_get_new_season_and_episode_numbers_when_absolute_episode_number_match_found,The following statement contains a magic number: const int expectedAbsoluteNumber = 3;
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_prefer_absolute_match_over_season_and_epsiode_match,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_ignore_episodes_with_no_absolute_episode_in_distinct_by_absolute,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_ignore_episodes_with_no_absolute_episode_in_distinct_by_absolute,The following statement contains a magic number: episodes[2].AbsoluteEpisodeNumber = null;
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_ignore_episodes_with_no_absolute_episode_in_distinct_by_absolute,The following statement contains a magic number: episodes[3].AbsoluteEpisodeNumber = null;
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_ignore_episodes_with_no_absolute_episode_in_distinct_by_absolute,The following statement contains a magic number: episodes[4].AbsoluteEpisodeNumber = null;
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_override_empty_airdate_for_direct_to_dvd,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .All()                                             .With(v => v.AirDateUtc = null)                                             .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_update_air_date_when_multiple_episodes_air_on_the_same_day,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                                             .All()                                             .With(e => e.SeasonNumber = 1)                                             .With(e => e.AirDate = now.ToShortDateString())                                             .With(e => e.AirDateUtc = now)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_not_update_air_date_when_more_than_three_episodes_air_on_the_same_day,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(4)                                             .All()                                             .With(e => e.SeasonNumber = 1)                                             .With(e => e.AirDate = now.ToShortDateString())                                             .With(e => e.AirDateUtc = now)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshEpisodeServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshEpisodeServiceFixture.cs,should_prefer_regular_season_when_absolute_numbers_conflict,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(2)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_monitor_new_seasons_automatically,The following statement contains a magic number: newSeriesInfo.Seasons.Add(Builder<Season>.CreateNew()                                           .With(s => s.SeasonNumber = 2)                                           .Build());
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_monitor_new_seasons_automatically,The following statement contains a magic number: Mocker.GetMock<ISeriesService>()                  .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2 && s.Seasons.Single(season => season.SeasonNumber == 2).Monitored == true)' It.IsAny<bool>()));
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_monitor_new_seasons_automatically,The following statement contains a magic number: Mocker.GetMock<ISeriesService>()                  .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2 && s.Seasons.Single(season => season.SeasonNumber == 2).Monitored == true)' It.IsAny<bool>()));
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_not_monitor_new_special_season_automatically,The following statement contains a magic number: Mocker.GetMock<ISeriesService>()                  .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2 && s.Seasons.Single(season => season.SeasonNumber == 0).Monitored == false)' It.IsAny<bool>()));
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_not_throw_if_duplicate_season_is_in_existing_info,The following statement contains a magic number: newSeriesInfo.Seasons.Add(Builder<Season>.CreateNew()                                           .With(s => s.SeasonNumber = 2)                                           .Build());
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_not_throw_if_duplicate_season_is_in_existing_info,The following statement contains a magic number: _series.Seasons.Add(Builder<Season>.CreateNew()                                           .With(s => s.SeasonNumber = 2)                                           .Build());
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_not_throw_if_duplicate_season_is_in_existing_info,The following statement contains a magic number: _series.Seasons.Add(Builder<Season>.CreateNew()                                           .With(s => s.SeasonNumber = 2)                                           .Build());
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_not_throw_if_duplicate_season_is_in_existing_info,The following statement contains a magic number: Mocker.GetMock<ISeriesService>()                    .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2)' It.IsAny<bool>()));
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_filter_duplicate_seasons,The following statement contains a magic number: newSeriesInfo.Seasons.Add(Builder<Season>.CreateNew()                                           .With(s => s.SeasonNumber = 2)                                           .Build());
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_filter_duplicate_seasons,The following statement contains a magic number: newSeriesInfo.Seasons.Add(Builder<Season>.CreateNew()                                           .With(s => s.SeasonNumber = 2)                                           .Build());
Magic Number,NzbDrone.Core.Test.TvTests,RefreshSeriesServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\RefreshSeriesServiceFixture.cs,should_filter_duplicate_seasons,The following statement contains a magic number: Mocker.GetMock<ISeriesService>()                    .Verify(v => v.UpdateSeries(It.Is<Series>(s => s.Seasons.Count == 2)' It.IsAny<bool>()));
Magic Number,NzbDrone.Core.Test.TvTests,SeriesTitleSlugValidatorFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\SeriesTitleSlugValidatorFixture.cs,should_not_be_valid_if_there_is_an_existing_series_with_the_same_title_slug,The following statement contains a magic number: var series = Builder<Series>.CreateNew()                                          .With(s => s.Id = 100)                                          .With(s => s.TitleSlug = _series.First().TitleSlug)                                          .Build();
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                    .Setup(s => s.GetEpisodeBySeries(_series.Id))                    .Returns(Builder<Episode>.CreateListOfSize(2)                                             .All()                                             .With(e => e.AirDateUtc = DateTime.Today.AddDays(-100))                                             .Build()                                             .ToList());
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                    .Setup(s => s.GetEpisodeBySeries(_series.Id))                    .Returns(Builder<Episode>.CreateListOfSize(2)                                             .All()                                             .With(e => e.AirDateUtc = DateTime.Today.AddDays(-100))                                             .Build()                                             .ToList());
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,GivenSeriesLastRefreshedMonthsAgo,The following statement contains a magic number: _series.LastInfoSync = DateTime.UtcNow.AddDays(-90);
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,GivenSeriesLastRefreshedHalfADayAgo,The following statement contains a magic number: _series.LastInfoSync = DateTime.UtcNow.AddHours(-12);
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,GivenSeriesLastRefreshedRecently,The following statement contains a magic number: _series.LastInfoSync = DateTime.UtcNow.AddMinutes(-30);
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,GivenRecentlyAired,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                                .Setup(s => s.GetEpisodeBySeries(_series.Id))                                .Returns(Builder<Episode>.CreateListOfSize(2)                                                         .TheFirst(1)                                                         .With(e => e.AirDateUtc = DateTime.Today.AddDays(-7))                                                         .TheLast(1)                                                         .With(e => e.AirDateUtc = DateTime.Today.AddDays(-100))                                                         .Build()                                                         .ToList());
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,GivenRecentlyAired,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                                .Setup(s => s.GetEpisodeBySeries(_series.Id))                                .Returns(Builder<Episode>.CreateListOfSize(2)                                                         .TheFirst(1)                                                         .With(e => e.AirDateUtc = DateTime.Today.AddDays(-7))                                                         .TheLast(1)                                                         .With(e => e.AirDateUtc = DateTime.Today.AddDays(-100))                                                         .Build()                                                         .ToList());
Magic Number,NzbDrone.Core.Test.TvTests,ShouldRefreshSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\ShouldRefreshSeriesFixture.cs,GivenRecentlyAired,The following statement contains a magic number: Mocker.GetMock<IEpisodeService>()                                .Setup(s => s.GetEpisodeBySeries(_series.Id))                                .Returns(Builder<Episode>.CreateListOfSize(2)                                                         .TheFirst(1)                                                         .With(e => e.AirDateUtc = DateTime.Today.AddDays(-7))                                                         .TheLast(1)                                                         .With(e => e.AirDateUtc = DateTime.Today.AddDays(-100))                                                         .Build()                                                         .ToList());
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,Setup,The following statement contains a magic number: var seasons = 4;
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(seasons)                                          .All()                                          .With(e => e.Monitored = true)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                          //Missing                                          .TheFirst(1)                                          .With(e => e.EpisodeFileId = 0)                                          //Has File                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 1)                                           //Future                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(7))                                          //Future/TBA                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = null)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(seasons)                                          .All()                                          .With(e => e.Monitored = true)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                          //Missing                                          .TheFirst(1)                                          .With(e => e.EpisodeFileId = 0)                                          //Has File                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 1)                                           //Future                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(7))                                          //Future/TBA                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = null)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _series.Seasons = Builder<Season>.CreateListOfSize(2)                                               .All()                                               .With(n => n.Monitored = true)                                               .Build()                                               .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-5))                                          .TheLast(1)                                          .With(e => e.SeasonNumber = 2)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-5))                                          .TheLast(1)                                          .With(e => e.SeasonNumber = 2)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-5))                                          .TheLast(1)                                          .With(e => e.SeasonNumber = 2)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: VerifySeasonMonitored(n => n.SeasonNumber == 2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: _series = Builder<Series>.CreateNew()                                       .With(s => s.Seasons = Builder<Season>.CreateListOfSize(2)                                                                             .TheFirst(1)                                                                             .With(n => n.Monitored = true)                                                                             .TheLast(1)                                                                             .With(n => n.Monitored = false)                                                                             .Build()                                                                             .ToList())                                       .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .All()                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                             .TheFirst(5)                                             .With(e => e.SeasonNumber = 1)                                             .TheLast(5)                                             .With(e => e.SeasonNumber = 2)                                             .BuildList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .All()                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                             .TheFirst(5)                                             .With(e => e.SeasonNumber = 1)                                             .TheLast(5)                                             .With(e => e.SeasonNumber = 2)                                             .BuildList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .All()                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                             .TheFirst(5)                                             .With(e => e.SeasonNumber = 1)                                             .TheLast(5)                                             .With(e => e.SeasonNumber = 2)                                             .BuildList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .All()                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                             .TheFirst(5)                                             .With(e => e.SeasonNumber = 1)                                             .TheLast(5)                                             .With(e => e.SeasonNumber = 2)                                             .BuildList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: var episodes = Builder<Episode>.CreateListOfSize(10)                                             .All()                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                             .TheFirst(5)                                             .With(e => e.SeasonNumber = 1)                                             .TheLast(5)                                             .With(e => e.SeasonNumber = 2)                                             .BuildList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: VerifyNotMonitored(e => e.SeasonNumber == 2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,LegacySetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\LegacySetEpisodeMontitoredFixture.cs,should_should_not_monitor_episodes_if_season_is_not_monitored,The following statement contains a magic number: VerifySeasonNotMonitored(s => s.SeasonNumber == 2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,Setup,The following statement contains a magic number: var seasons = 4;
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(seasons)                                          .All()                                          .With(e => e.Monitored = true)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                          //Missing                                          .TheFirst(1)                                          .With(e => e.EpisodeFileId = 0)                                          //Has File                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 1)                                           //Future                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(7))                                          //Future/TBA                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = null)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(seasons)                                          .All()                                          .With(e => e.Monitored = true)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-7))                                          //Missing                                          .TheFirst(1)                                          .With(e => e.EpisodeFileId = 0)                                          //Has File                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 1)                                           //Future                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(7))                                          //Future/TBA                                          .TheNext(1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = null)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _series.Seasons = Builder<Season>.CreateListOfSize(2)                                               .All()                                               .With(n => n.Monitored = true)                                               .Build()                                               .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-5))                                          .TheLast(1)                                          .With(e => e.SeasonNumber = 2)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-5))                                          .TheLast(1)                                          .With(e => e.SeasonNumber = 2)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-5))                                          .TheLast(1)                                          .With(e => e.SeasonNumber = 2)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_not_monitor_season_when_all_episodes_are_monitored_except_latest_season,The following statement contains a magic number: VerifySeasonMonitored(n => n.SeasonNumber == 2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_not_monitor_latest_season_if_all_episodes_aired_more_than_90_days_ago,The following statement contains a magic number: _episodes.ForEach(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-100));
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: _series.Seasons = Builder<Season>.CreateListOfSize(2)                                               .All()                                               .With(n => n.Monitored = true)                                               .Build()                                               .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-100))                                          .TheLast(2)                                          .With(e => e.SeasonNumber = 2)                                          .TheLast(1)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(100))                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-100))                                          .TheLast(2)                                          .With(e => e.SeasonNumber = 2)                                          .TheLast(1)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(100))                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-100))                                          .TheLast(2)                                          .With(e => e.SeasonNumber = 2)                                          .TheLast(1)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(100))                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-100))                                          .TheLast(2)                                          .With(e => e.SeasonNumber = 2)                                          .TheLast(1)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(100))                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .All()                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(-100))                                          .TheLast(2)                                          .With(e => e.SeasonNumber = 2)                                          .TheLast(1)                                          .With(e => e.AirDateUtc = DateTime.UtcNow.AddDays(100))                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: VerifySeasonMonitored(n => n.SeasonNumber == 2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeMonitoredServiceTests,SetEpisodeMontitoredFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeMonitoredServiceTests\SetEpisodeMontitoredFixture.cs,should_monitor_latest_season_if_some_episodes_have_aired,The following statement contains a magic number: VerifyMonitored(n => n.SeasonNumber == 2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,ByAirDateFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\ByAirDateFixture.cs,should_throw_when_multiple_regular_episodes_are_found,The following statement contains a magic number: GivenEpisode(2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesBetweenDatesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesBetweenDatesFixture.cs,Setup,The following statement contains a magic number: var series = Builder<Series>.CreateNew()                                          .With(s => s.Id = 0)                                          .With(s => s.Runtime = 30)                                          .With(s => s.Monitored = true)                                          .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesBetweenDatesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesBetweenDatesFixture.cs,should_get_episodes,The following statement contains a magic number: var episodes = Subject.EpisodesBetweenDates(DateTime.Today.AddDays(-1)' DateTime.Today.AddDays(3)' false);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesRepositoryReadFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesRepositoryReadFixture.cs,Setup,The following statement contains a magic number: series = Builder<Series>.CreateNew()                                          .With(s => s.Runtime = 30)                                          .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesRepositoryReadFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesRepositoryReadFixture.cs,should_get_episodes_by_file,The following statement contains a magic number: var episode = Builder<Episode>.CreateListOfSize(2)                                          .All()                                          .With(e => e.SeriesId = series.Id)                                          .With(e => e.EpisodeFileId = episodeFile.Id)                                          .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesRepositoryReadFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesRepositoryReadFixture.cs,should_get_episodes_by_file,The following statement contains a magic number: episodes.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: _monitoredSeries = Builder<Series>.CreateNew()                                                .With(s => s.TvRageId = RandomNumber)                                                .With(s => s.Runtime = 30)                                                .With(s => s.Monitored = true)                                                .With(s => s.TitleSlug = "Title3")                                                .With(s => s.QualityProfileId = profile.Id)                                                .With(s => s.LanguageProfileId = langProfile.Id)                                                .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: _unmonitoredSeries = Builder<Series>.CreateNew()                                                  .With(s => s.TvdbId = RandomNumber)                                                  .With(s => s.Runtime = 30)                                                  .With(s => s.Monitored = false)                                                  .With(s => s.TitleSlug = "Title2")                                                  .With(s => s.QualityProfileId = profile.Id)                                                  .With(s => s.LanguageProfileId = langProfile.Id)                                                  .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: _pagingSpec = new PagingSpec<Episode>                                {                                    Page = 1'                                    PageSize = 10'                                    SortKey = "AirDate"'                                    SortDirection = SortDirection.Ascending                                };
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: var monitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(4)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _monitoredSeries.Id)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = qualityUnmetLanguageUnmet.Id)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .With(e => e.EpisodeFileId = qualityMetLanguageMet.Id)                                             .TheNext(1)                                             .With(e => e.EpisodeFileId = qualityRawHDLanguageExceed.Id)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: var monitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(4)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _monitoredSeries.Id)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = qualityUnmetLanguageUnmet.Id)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .With(e => e.EpisodeFileId = qualityMetLanguageMet.Id)                                             .TheNext(1)                                             .With(e => e.EpisodeFileId = qualityRawHDLanguageExceed.Id)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: var unmonitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _unmonitoredSeries.Id)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = qualityRawHDLanguageUnmet.Id)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .With(e => e.EpisodeFileId = qualityMetLanguageMet.Id)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: var unmonitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _unmonitoredSeries.Id)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = qualityRawHDLanguageUnmet.Id)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .With(e => e.EpisodeFileId = qualityMetLanguageMet.Id)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,Setup,The following statement contains a magic number: _unairedEpisodes             = Builder<Episode>.CreateListOfSize(1)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _monitoredSeries.Id)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(5))                                             .With(e => e.Monitored = true)                                             .With(e => e.EpisodeFileId = qualityUnmetLanguageUnmet.Id)                                             .Build()                                             .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWhereCutoffUnmetFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWhereCutoffUnmetFixture.cs,should_contain_unaired_episodes_if_file_does_not_meet_cutoff,The following statement contains a magic number: spec.Records.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithFilesFixture.cs,Setup,The following statement contains a magic number: _episodeFiles = Builder<EpisodeFile>.CreateListOfSize(5)                                                  .All()                                                  .With(c => c.Quality = new QualityModel())                                                  .BuildListOfNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithFilesFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(10)                                          .All()                                          .With(e => e.EpisodeFileId = 0)                                          .With(e => e.SeriesId = SERIES_ID)                                          .BuildListOfNew()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithFilesFixture.cs,should_only_contain_episodes_for_the_given_series,The following statement contains a magic number: var episode = Builder<Episode>.CreateNew()                                            .With(e => e.SeriesId = SERIES_ID + 10)                                            .With(e => e.EpisodeFileId = episodeFile.Id)                                            .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: _monitoredSeries = Builder<Series>.CreateNew()                                          .With(s => s.Id = 0)                                          .With(s => s.TvRageId = RandomNumber)                                          .With(s => s.Runtime = 30)                                          .With(s => s.Monitored = true)                                          .With(s => s.TitleSlug = "Title3")                                          .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: _unmonitoredSeries = Builder<Series>.CreateNew()                                          .With(s => s.Id = 0)                                          .With(s => s.TvdbId = RandomNumber)                                          .With(s => s.Runtime = 30)                                          .With(s => s.Monitored = false)                                          .With(s => s.TitleSlug = "Title2")                                          .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: _pagingSpec = new PagingSpec<Episode>                                {                                    Page = 1'                                    PageSize = 10'                                    SortKey = "AirDate"'                                    SortDirection = SortDirection.Ascending                                };
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: var monitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _monitoredSeries.Id)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: var monitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _monitoredSeries.Id)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: var unmonitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _unmonitoredSeries.Id)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: var unmonitoredSeriesEpisodes = Builder<Episode>.CreateListOfSize(3)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _unmonitoredSeries.Id)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(-5))                                             .With(e => e.Monitored = true)                                             .TheFirst(1)                                             .With(e => e.Monitored = false)                                             .TheLast(1)                                             .With(e => e.SeasonNumber = 0)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,Setup,The following statement contains a magic number: var unairedEpisodes           = Builder<Episode>.CreateListOfSize(1)                                             .All()                                             .With(e => e.Id = 0)                                             .With(e => e.SeriesId = _monitoredSeries.Id)                                             .With(e => e.EpisodeFileId = 0)                                             .With(e => e.AirDateUtc = DateTime.Now.AddDays(5))                                             .With(e => e.Monitored = true)                                             .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,should_get_episode_including_specials,The following statement contains a magic number: episodes.Records.Should().HaveCount(2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,should_not_return_unaired,The following statement contains a magic number: episodes.TotalRecords.Should().Be(4);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,should_not_return_episodes_on_air,The following statement contains a magic number: var onAirEpisode = Builder<Episode>.CreateNew()                                                 .With(e => e.Id = 0)                                                 .With(e => e.SeriesId = _monitoredSeries.Id)                                                 .With(e => e.EpisodeFileId = 0)                                                 .With(e => e.AirDateUtc = DateTime.Now.AddMinutes(-15))                                                 .With(e => e.Monitored = true)                                                 .Build();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,EpisodesWithoutFilesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\EpisodesWithoutFilesFixture.cs,should_not_return_episodes_on_air,The following statement contains a magic number: episodes.TotalRecords.Should().Be(4);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                                         .With(e => e.SeriesId = 1)                                         .With(e => e.SeasonNumber = 1)                                         .With(e => e.SceneSeasonNumber = 2)                                         .With(e => e.EpisodeNumber = 3)                                         .With(e => e.AbsoluteEpisodeNumber = 3)                                         .With(e => e.SceneEpisodeNumber = 4)                                         .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                                         .With(e => e.SeriesId = 1)                                         .With(e => e.SeasonNumber = 1)                                         .With(e => e.SceneSeasonNumber = 2)                                         .With(e => e.EpisodeNumber = 3)                                         .With(e => e.AbsoluteEpisodeNumber = 3)                                         .With(e => e.SceneEpisodeNumber = 4)                                         .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                                         .With(e => e.SeriesId = 1)                                         .With(e => e.SeasonNumber = 1)                                         .With(e => e.SceneSeasonNumber = 2)                                         .With(e => e.EpisodeNumber = 3)                                         .With(e => e.AbsoluteEpisodeNumber = 3)                                         .With(e => e.SceneEpisodeNumber = 4)                                         .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode1 = Builder<Episode>.CreateNew()                                         .With(e => e.SeriesId = 1)                                         .With(e => e.SeasonNumber = 1)                                         .With(e => e.SceneSeasonNumber = 2)                                         .With(e => e.EpisodeNumber = 3)                                         .With(e => e.AbsoluteEpisodeNumber = 3)                                         .With(e => e.SceneEpisodeNumber = 4)                                         .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                                          .With(e => e.SeriesId = 1)                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.SceneSeasonNumber = 2)                                          .With(e => e.EpisodeNumber = 4)                                          .With(e => e.SceneEpisodeNumber = 4)                                          .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                                          .With(e => e.SeriesId = 1)                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.SceneSeasonNumber = 2)                                          .With(e => e.EpisodeNumber = 4)                                          .With(e => e.SceneEpisodeNumber = 4)                                          .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,Setup,The following statement contains a magic number: _episode2 = Builder<Episode>.CreateNew()                                          .With(e => e.SeriesId = 1)                                          .With(e => e.SeasonNumber = 1)                                          .With(e => e.SceneSeasonNumber = 2)                                          .With(e => e.EpisodeNumber = 4)                                          .With(e => e.SceneEpisodeNumber = 4)                                          .BuildNew();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeRepositoryTests,FindEpisodeFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeRepositoryTests\FindEpisodeFixture.cs,should_return_multiple_episode_if_multiple_match_by_scene_numbering,The following statement contains a magic number: Subject.FindEpisodesBySceneNumbering(_episode1.SeriesId' _episode1.SceneSeasonNumber.Value' _episode1.SceneEpisodeNumber.Value)                     .Should()                     .HaveCount(2);
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeServiceTests,FindEpisodeByTitleFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeServiceTests\FindEpisodeByTitleFixture.cs,Setup,The following statement contains a magic number: _episodes = Builder<Episode>.CreateListOfSize(5)                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeServiceTests,HandleEpisodeFileDeletedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeServiceTests\HandleEpisodeFileDeletedFixture.cs,GivenMultiEpisodeFile,The following statement contains a magic number: _episodes = Builder<Episode>                  .CreateListOfSize(2)                  .All()                  .With(e => e.Monitored = true)                  .Build()                  .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.EpisodeServiceTests,HandleEpisodeFileDeletedFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\EpisodeServiceTests\HandleEpisodeFileDeletedFixture.cs,should_update_each_episode_for_file,The following statement contains a magic number: Mocker.GetMock<IEpisodeRepository>()                  .Verify(v => v.Update(It.Is<Episode>(e => e.EpisodeFileId == 0))' Times.Exactly(2));
Magic Number,NzbDrone.Core.Test.TvTests.SeriesServiceTests,UpdateMultipleSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\SeriesServiceTests\UpdateMultipleSeriesFixture.cs,Setup,The following statement contains a magic number: _series = Builder<Series>.CreateListOfSize(5)                  .All()                  .With(s => s.QualityProfileId = 1)                  .With(s => s.Monitored)                  .With(s => s.SeasonFolder)                  .With(s => s.Path = @"C:\Test\name".AsOsAgnostic())                  .With(s => s.RootFolderPath = "")                  .Build().ToList();
Magic Number,NzbDrone.Core.Test.TvTests.SeriesServiceTests,UpdateMultipleSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\SeriesServiceTests\UpdateMultipleSeriesFixture.cs,should_be_able_to_update_many_series,The following statement contains a magic number: var series = Builder<Series>.CreateListOfSize(50)                                          .All()                                          .With(s => s.Path = (@"C:\Test\TV\" + s.Path).AsOsAgnostic())                                          .Build()                                          .ToList();
Magic Number,NzbDrone.Core.Test.TvTests.SeriesServiceTests,UpdateSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\SeriesServiceTests\UpdateSeriesFixture.cs,Setup,The following statement contains a magic number: _fakeSeries.Seasons = new List<Season>              {                  new Season{ SeasonNumber = 1' Monitored = true }'                  new Season{ SeasonNumber = 2' Monitored = true }              };
Magic Number,NzbDrone.Core.Test.TvTests.SeriesServiceTests,UpdateSeriesFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\TvTests\SeriesServiceTests\UpdateSeriesFixture.cs,Setup,The following statement contains a magic number: _existingSeries.Seasons = new List<Season>              {                  new Season{ SeasonNumber = 1' Monitored = true }'                  new Season{ SeasonNumber = 2' Monitored = true }              };
Magic Number,NzbDrone.Core.Test.UpdateTests,UpdatePackageProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdatePackageProviderFixture.cs,no_update_when_version_higher,The following statement contains a magic number: Subject.GetLatestUpdate("master"' new Version(10' 0)).Should().BeNull();
Magic Number,NzbDrone.Core.Test.UpdateTests,UpdatePackageProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdatePackageProviderFixture.cs,finds_update_when_version_lower,The following statement contains a magic number: Subject.GetLatestUpdate("master"' new Version(2' 0)).Should().NotBeNull();
Magic Number,NzbDrone.Core.Test.UpdateTests,UpdatePackageProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdatePackageProviderFixture.cs,should_get_master_if_branch_doesnt_exit,The following statement contains a magic number: Subject.GetLatestUpdate("invalid_branch"' new Version(2' 0)).Should().NotBeNull();
Magic Number,NzbDrone.Core.Test.UpdateTests,UpdatePackageProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdatePackageProviderFixture.cs,should_get_recent_updates,The following statement contains a magic number: var recent = Subject.GetRecentUpdates(branch' new Version(2' 0));
Magic Number,NzbDrone.Core.Test.UpdateTests,UpdatePackageProviderFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdatePackageProviderFixture.cs,should_get_recent_updates,The following statement contains a magic number: recent.Should().OnlyContain(c => c.ReleaseDate.Year >= 2014);
Magic Number,NzbDrone.Core.Test.UpdateTests,UpdateServiceFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\UpdateTests\UpdateServiceFixture.cs,Setup,The following statement contains a magic number: Mocker.GetMock<IProcessProvider>().Setup(c => c.GetCurrentProcess()).Returns(new ProcessInfo { Id = 12 });
Duplicate Code,NzbDrone.Core.Test.Download.DownloadClientTests.DownloadStationTests,TorrentDownloadStationFixture,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Core.Test\Download\DownloadClientTests\DownloadStationTests\TorrentDownloadStationFixture.cs,Setup,The method contains a code clone-set at the following line numbers (starting from the method definition): ((64' 84)' (160' 180))
