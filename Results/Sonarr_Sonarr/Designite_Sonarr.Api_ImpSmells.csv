Implementation smell,Namespace,Class,File,Method,Description
Long Method,NzbDrone.Api.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The method has 100 lines of code.
Complex Method,NzbDrone.Api.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Calendar\CalendarFeedModule.cs,GetCalendarFeed,Cyclomatic complexity of the method is 15
Complex Method,NzbDrone.Api.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Logs\LogModule.cs,GetLogs,Cyclomatic complexity of the method is 8
Long Parameter List,NzbDrone.Api.EpisodeFiles,EpisodeFileModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\EpisodeFiles\EpisodeFileModule.cs,EpisodeFileModule,The method has 5 parameters. Parameters: signalRBroadcaster' mediaFileService' mediaFileDeletionService' seriesService' upgradableSpecification
Long Parameter List,NzbDrone.Api.Episodes,EpisodeModuleWithSignalR,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Episodes\EpisodeModuleWithSignalR.cs,EpisodeModuleWithSignalR,The method has 5 parameters. Parameters: episodeService' seriesService' upgradableSpecification' signalRBroadcaster' resource
Long Parameter List,NzbDrone.Api.Indexers,ReleaseModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleaseModule.cs,ReleaseModule,The method has 7 parameters. Parameters: rssFetcherAndParser' nzbSearchService' downloadDecisionMaker' prioritizeDownloadDecision' downloadService' cacheManager' logger
Long Parameter List,NzbDrone.Api.Queue,QueueActionModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Queue\QueueActionModule.cs,QueueActionModule,The method has 7 parameters. Parameters: queueService' trackedDownloadService' completedDownloadService' failedDownloadService' downloadClientProvider' pendingReleaseService' downloadService
Long Parameter List,NzbDrone.Api.RootFolders,RootFolderModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\RootFolders\RootFolderModule.cs,RootFolderModule,The method has 8 parameters. Parameters: rootFolderService' signalRBroadcaster' rootFolderValidator' pathExistsValidator' mappedNetworkDriveValidator' startupFolderValidator' systemFolderValidator' folderWritableValidator
Long Parameter List,NzbDrone.Api.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Series\SeriesModule.cs,SeriesModule,The method has 14 parameters. Parameters: signalRBroadcaster' seriesService' addSeriesService' seriesStatisticsService' sceneMappingService' coverMapper' languageProfileService' rootFolderValidator' seriesPathValidator' seriesExistsValidator' seriesAncestorValidator' systemFolderValidator' profileExistsValidator' languageProfileExistsValidator
Long Parameter List,NzbDrone.Api.System,SystemModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\System\SystemModule.cs,SystemModule,The method has 8 parameters. Parameters: appFolderInfo' runtimeInfo' platformInfo' osInfo' routeCacheProvider' configFileProvider' database' lifecycleService
Long Parameter List,NzbDrone.Api.Wanted,CutoffModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Wanted\CutoffModule.cs,CutoffModule,The method has 5 parameters. Parameters: episodeCutoffService' episodeService' seriesService' upgradableSpecification' signalRBroadcaster
Long Identifier,NzbDrone.Api.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\NamingConfigModule.cs,ValidateFormatResult,The length of the parameter animeMultiEpisodeValidationResult is 33.
Long Identifier,NzbDrone.Api.FileSystem,FileSystemModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\FileSystem\FileSystemModule.cs,GetContents,The length of the parameter allowFoldersWithoutTrailingSlashes is 34.
Long Identifier,NzbDrone.Api.Series,SeriesModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Series\SeriesModule.cs,SeriesModule,The length of the parameter languageProfileExistsValidator is 30.
Long Statement,NzbDrone.Api.Blacklist,BlacklistModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Blacklist\BlacklistModule.cs,GetBlacklist,The length of the statement  "            var pagingSpec = pagingResource.MapToPagingSpec<BlacklistResource' Core.Blacklisting.Blacklist>("id"' SortDirection.Ascending); " is 127.
Long Statement,NzbDrone.Api.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\NamingConfigModule.cs,GetExamples,The length of the statement  "            sampleResource.SingleEpisodeExample = _filenameValidationService.ValidateStandardFilename(singleEpisodeSampleResult) != null " is 124.
Long Statement,NzbDrone.Api.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\NamingConfigModule.cs,GetExamples,The length of the statement  "            sampleResource.MultiEpisodeExample = _filenameValidationService.ValidateStandardFilename(multiEpisodeSampleResult) != null " is 122.
Long Statement,NzbDrone.Api.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\NamingConfigModule.cs,GetExamples,The length of the statement  "            sampleResource.AnimeMultiEpisodeExample = _filenameValidationService.ValidateAnimeFilename(animeMultiEpisodeSampleResult) != null " is 129.
Long Statement,NzbDrone.Api.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\NamingConfigModule.cs,ValidateFormatResult,The length of the statement  "            var animeMultiEpisodeValidationResult = _filenameValidationService.ValidateAnimeFilename(animeMultiEpisodeSampleResult); " is 120.
Long Statement,NzbDrone.Api.Episodes,EpisodeModuleWithSignalR,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Episodes\EpisodeModuleWithSignalR.cs,MapToResource,The length of the statement  "                    var series = episode.Series ?? seriesDict.GetValueOrDefault(episodes[i].SeriesId) ?? _seriesService.GetSeries(episodes[i].SeriesId); " is 132.
Long Statement,NzbDrone.Api.FileSystem,FileSystemModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\FileSystem\FileSystemModule.cs,GetContents,The length of the statement  "            return _fileSystemLookupService.LookupContents((string)pathQuery.Value' includeFiles' allowFoldersWithoutTrailingSlashes); " is 122.
Long Statement,NzbDrone.Api.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\History\HistoryModule.cs,MapToResource,The length of the statement  "                resource.QualityCutoffNotMet = _upgradableSpecification.QualityCutoffNotMet(model.Series.QualityProfile.Value' model.Quality); " is 126.
Long Statement,NzbDrone.Api.History,HistoryModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\History\HistoryModule.cs,GetHistory,The length of the statement  "            var pagingSpec = pagingResource.MapToPagingSpec<HistoryResource' Core.History.History>("date"' SortDirection.Descending); " is 121.
Long Statement,NzbDrone.Api.Indexers,ReleasePushModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleasePushModule.cs,ResolveIndexer,The length of the statement  "                    _logger.Debug("Push Release {0} associated with indexer {1} - {2}."' release.Title' release.IndexerId' release.Indexer); " is 120.
Long Statement,NzbDrone.Api.Indexers,ReleasePushModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleasePushModule.cs,ResolveIndexer,The length of the statement  "                    _logger.Debug("Push Release {0} associated with indexer {1} - {2}."' release.Title' release.IndexerId' release.Indexer); " is 120.
Long Statement,NzbDrone.Api.Indexers,ReleaseResourceMapper,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleaseResource.cs,ToResource,The length of the statement  "            // TODO: Clean this mess up. don't mix data from multiple classes' use sub-resources instead? (Got a huge Deja Vu' didn't we talk about this already once?) " is 155.
Long Statement,NzbDrone.Api.Indexers,ReleaseResourceMapper,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleaseResource.cs,ToResource,The length of the statement  "                Leechers = (torrentInfo.Peers.HasValue && torrentInfo.Seeders.HasValue) ? (torrentInfo.Peers.Value - torrentInfo.Seeders.Value) : (int?)null' " is 141.
Long Statement,NzbDrone.Api.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Logs\LogModule.cs,GetLogs,The length of the statement  "                        pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info"); " is 120.
Long Statement,NzbDrone.Api.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Logs\LogModule.cs,GetLogs,The length of the statement  "                        pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug"); " is 142.
Long Statement,NzbDrone.Api.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Logs\LogModule.cs,GetLogs,The length of the statement  "                        pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug" || h.Level == "Trace"); " is 164.
Long Statement,NzbDrone.Api,ProviderModuleBase<TProviderResource;TProvider;TProviderDefinition>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\ProviderModuleBase.cs,Test,The length of the statement  "            // Don't validate when getting the definition so we can validate afterwards (avoids validation being skipped because the provider is disabled) " is 142.
Long Statement,NzbDrone.Api,ProviderModuleBase<TProviderResource;TProvider;TProviderDefinition>,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\ProviderModuleBase.cs,RequestAction,The length of the statement  "            var query = ((IDictionary<string' object>)Request.Query.ToDictionary()).ToDictionary(k => k.Key' k => k.Value.ToString()); " is 122.
Long Statement,NzbDrone.Api.Wanted,CutoffModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Wanted\CutoffModule.cs,GetCutoffUnmetEpisodes,The length of the statement  "            var resource = ApplyToPage(_episodeCutoffService.EpisodesWhereCutoffUnmet' pagingSpec' v => MapToResource(v' true' true)); " is 122.
Magic Number,NzbDrone.Api.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The following statement contains a magic number: var pastDays = 7;
Magic Number,NzbDrone.Api.Calendar,CalendarFeedModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Calendar\CalendarFeedModule.cs,GetCalendarFeed,The following statement contains a magic number: var futureDays = 28;
Magic Number,NzbDrone.Api.Calendar,CalendarModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Calendar\CalendarModule.cs,GetCalendar,The following statement contains a magic number: var end = DateTime.Today.AddDays(2);
Magic Number,NzbDrone.Api.Commands,CommandModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Commands\CommandModule.cs,CommandModule,The following statement contains a magic number: _debouncer = new Debouncer(SendUpdates' TimeSpan.FromSeconds(0.1));
Magic Number,NzbDrone.Api.Config,HostConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\HostConfigModule.cs,HostConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.BackupInterval).InclusiveBetween(1' 7);
Magic Number,NzbDrone.Api.Config,HostConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\HostConfigModule.cs,HostConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.BackupRetention).InclusiveBetween(1' 90);
Magic Number,NzbDrone.Api.Config,NamingConfigModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Config\NamingConfigModule.cs,NamingConfigModule,The following statement contains a magic number: SharedValidator.RuleFor(c => c.MultiEpisodeStyle).InclusiveBetween(0' 5);
Magic Number,NzbDrone.Api.Indexers,ReleaseModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleaseModule.cs,MapDecision,The following statement contains a magic number: _remoteEpisodeCache.Set(GetCacheKey(resource)' decision.RemoteEpisode' TimeSpan.FromMinutes(30));
Magic Number,NzbDrone.Api.Indexers,ReleaseModuleBase,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleaseModuleBase.cs,MapDecision,The following statement contains a magic number: release.QualityWeight = decision.RemoteEpisode.Series                                                                .QualityProfile.Value                                                                .Items.FindIndex(v => v.Quality == release.Quality.Quality) * 100;
Magic Number,NzbDrone.Api.Indexers,ReleaseModuleBase,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Indexers\ReleaseModuleBase.cs,MapDecision,The following statement contains a magic number: release.QualityWeight += release.Quality.Revision.Real * 10;
Magic Number,NzbDrone.Api.ManualImport,ManualImportModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\ManualImport\ManualImportModule.cs,AddQualityWeight,The following statement contains a magic number: item.QualityWeight += item.Quality.Revision.Real * 10;
Missing Default,NzbDrone.Api.Logs,LogModule,D:\research\architectureSmells\repos1\Sonarr_Sonarr\src\NzbDrone.Api\Logs\LogModule.cs,GetLogs,The following switch statement is missing a default case: switch (filter.Value)                  {                      case "Fatal":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal");                          break;                      case "Error":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error");                          break;                      case "Warn":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn");                          break;                      case "Info":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info");                          break;                      case "Debug":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug");                          break;                      case "Trace":                          pageSpec.FilterExpressions.Add(h => h.Level == "Fatal" || h.Level == "Error" || h.Level == "Warn" || h.Level == "Info" || h.Level == "Debug" || h.Level == "Trace");                          break;                  }
