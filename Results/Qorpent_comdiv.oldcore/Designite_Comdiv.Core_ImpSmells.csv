Implementation smell,Namespace,Class,File,Method,Description
Long Method,Comdiv.Application,Widget,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\Widget.cs,Read,The method has 115 lines of code.
Complex Method,Comdiv.Application,WebApplicationBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WebApplicationBase.cs,loadExtendedLibraries,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Application,Widget,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\Widget.cs,Read,Cyclomatic complexity of the method is 23
Complex Method,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,Cyclomatic complexity of the method is 11
Complex Method,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,Comdiv.Conversations,ConversationInterceptorBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Conversations\ConversationInterceptorBase.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,Comdiv.Extensibility.ExtensionsCompiler,ExtensionsFileSystemProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensibility\ExtensionsFileSystemProvider.cs,GetReferencedAssemblies,Cyclomatic complexity of the method is 9
Complex Method,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,getTypesWithAttribute,Cyclomatic complexity of the method is 9
Complex Method,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,toDate,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,to,Cyclomatic complexity of the method is 17
Complex Method,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,parseDateTime,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,toDecimal,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Extensions,BooleanExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\BooleanExtensions.cs,yes,Cyclomatic complexity of the method is 11
Complex Method,Comdiv.Extensions,XmlExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\XmlExtensions.cs,processIncludes,Cyclomatic complexity of the method is 12
Complex Method,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,concat,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Inversion,InversionComponent,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\InversionComponent.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.IO,DirectorySynchronizer,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\DirectorySync\DirectorySynchronizer.cs,Prepare,Cyclomatic complexity of the method is 10
Complex Method,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,CreateCommand,Cyclomatic complexity of the method is 13
Complex Method,Comdiv.Persistence,DefaultConnectionsSource,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\DefaultConnectionsSource.cs,checkCache,Cyclomatic complexity of the method is 13
Complex Method,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Comdiv.Persistence,StorageQuery,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQuery.cs,postToString,Cyclomatic complexity of the method is 10
Complex Method,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,Cyclomatic complexity of the method is 43
Complex Method,Comdiv.Security,RoleResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\RoleResolver.cs,internalIsInRole,Cyclomatic complexity of the method is 9
Complex Method,Comdiv.Security,XmlRoleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\XmlRoleProvider.cs,prepareResult,Cyclomatic complexity of the method is 14
Complex Method,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,Match,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Security.Acl,AclRuleComparer,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRuleComparer.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Security.Acl,DefaultAclProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\DefaultAclProvider.cs,tryEvaluateByRules,Cyclomatic complexity of the method is 11
Complex Method,Comdiv.Wiki,WikiPersistenceProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Wiki\WikiPersistenceProvider.cs,rereadFiles,Cyclomatic complexity of the method is 9
Complex Method,Comdiv.Xml,XmlDslDefinition,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\XmlDslDefinition.cs,PrepareXslt,Cyclomatic complexity of the method is 11
Complex Method,Comdiv.Xml,XmlDslDefinition,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\XmlDslDefinition.cs,Extract,Cyclomatic complexity of the method is 11
Complex Method,Comdiv.Xml.Smart,SmartXml,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\Smart\SmartXml.cs,ApplySubstitutions,Cyclomatic complexity of the method is 12
Long Parameter List,Comdiv.Application,WidgetCollection,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WidgetCollection.cs,GetTabs,The method has 9 parameters.
Long Parameter List,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The method has 8 parameters.
Long Parameter List,Comdiv.Model,IAttachmentRepository,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Interfaces\IAttachmentRepository.cs,Define,The method has 5 parameters.
Long Parameter List,Comdiv.Common,UniversalEventArgs,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\UniversalEventArgs.cs,UniversalEventArgs,The method has 5 parameters.
Long Parameter List,Comdiv.Common,UniversalEventHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\UniversalEventHelper.cs,Execute,The method has 7 parameters.
Long Parameter List,Comdiv.Common,UniversalEventHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\UniversalEventHelper.cs,Execute,The method has 7 parameters.
Long Parameter List,Comdiv.Common,UniversalEventHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\UniversalEventHelper.cs,GetResult,The method has 5 parameters.
Long Parameter List,Comdiv.Common,UniversalEventHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\UniversalEventHelper.cs,GetResult,The method has 5 parameters.
Long Parameter List,Comdiv.Conversations,DefaultConversationManager,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Conversations\DefaultConversationManager.cs,applyInterceptors,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,LoadAssemblyFromFile,The method has 8 parameters.
Long Parameter List,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,hasAttribute,The method has 5 parameters.
Long Parameter List,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,getTypesWithAttribute,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,getTypesWithAttribute,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,getTypesWithAttribute,The method has 5 parameters.
Long Parameter List,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,getMembersWithAttribute,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,to,The method has 5 parameters.
Long Parameter List,Comdiv.Extensions,DictionaryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\DictionaryExtensions.cs,get,The method has 5 parameters.
Long Parameter List,Comdiv.Extensions,DictionaryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\DictionaryExtensions.cs,get,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,XmlExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\XmlExtensions.cs,processIncludes,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,XmlExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\XmlExtensions.cs,map,The method has 5 parameters.
Long Parameter List,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,_formatex,The method has 6 parameters.
Long Parameter List,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,split,The method has 6 parameters.
Long Parameter List,Comdiv.Inversion,SimpleInversionContainer,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\SimpleInversionContainer.cs,internalResolve,The method has 6 parameters.
Long Parameter List,Comdiv.IO,BxlApplicationXmlReader,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\BxlApplicationXmlReader.cs,readByTotalSearch,The method has 6 parameters.
Long Parameter List,Comdiv.IO,DefaultFilePathResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\DefaultFilePathResolver.cs,ResolveAll,The method has 7 parameters.
Long Parameter List,Comdiv.IO,DefaultFilePathResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\DefaultFilePathResolver.cs,resolveAllOfDirectory,The method has 5 parameters.
Long Parameter List,Comdiv.IO,FilePathResolverExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FilePathResolverExtensions.cs,ResolveAllAsLocal,The method has 5 parameters.
Long Parameter List,Comdiv.IO,IFilePathResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\IFilePathResolver.cs,ResolveAll,The method has 5 parameters.
Long Parameter List,Comdiv.Logging,TextWriterLogManager,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Logging\TextWriterLogManager.cs,TextWriterLogManager,The method has 5 parameters.
Long Parameter List,Comdiv.MAS,IConsoleLogHost,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\IConsoleLogHost.cs,log,The method has 5 parameters.
Long Parameter List,Comdiv.MAS,LogHostBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\IConsoleLogHost.cs,log,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,CreateCommand,The method has 8 parameters.
Long Parameter List,Comdiv.Persistence,SqlBasedLockObject,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlBasedLockObject.cs,Timeout,The method has 6 parameters.
Long Parameter List,Comdiv.Persistence,SqlBasedLockObject,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlBasedLockObject.cs,SqlBasedLockObject,The method has 8 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteScalar,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteTable,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteArray,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteDictionary,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteNoQuery,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteOrm,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteBatch,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,execute,The method has 8 parameters.
Long Parameter List,Comdiv.Persistence,StorageWrapper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageWrapper.cs,Query,The method has 5 parameters.
Long Parameter List,Comdiv.Zeta.Data,WithCodeAttachmentRepository,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\WithCodeAttachmentRepository.cs,Define,The method has 5 parameters.
Long Parameter List,Comdiv.Security,PersistentRoleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\PersistentRoleProvider.cs,IsInRole,The method has 6 parameters.
Long Parameter List,Comdiv.Security,RoleResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\RoleResolver.cs,IsInRole,The method has 5 parameters.
Long Parameter List,Comdiv.Security,RoleResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\RoleResolver.cs,IsInRole,The method has 5 parameters.
Long Parameter List,Comdiv.Security,XmlRoleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\XmlRoleProvider.cs,IsInRole,The method has 6 parameters.
Long Parameter List,Comdiv.Security.Acl,acl,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\acl.cs,get,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,acl,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\acl.cs,get,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,acl,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\acl.cs,get,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,acl,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\acl.cs,get,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,AclRepositoryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRepositoryExtensions.cs,need,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,AclRepositoryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRepositoryExtensions.cs,deny,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,AclRepositoryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRepositoryExtensions.cs,allow,The method has 5 parameters.
Long Parameter List,Comdiv.Security.Acl,AclRepositoryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRepositoryExtensions.cs,add,The method has 6 parameters.
Long Parameter List,Comdiv.Security.Acl,DefaultAclTokenResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\DefaultAclTokenResolver.cs,GetToken,The method has 5 parameters.
Long Statement,Comdiv.Application,ApplicationLifecycleManager,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\ApplicationLifecycleManager.cs,OnPostAuthorizeRequest,The length of the statement  "		var i = _postauthjorizeinterceptors ?? (_postauthjorizeinterceptors = getinterceptors ().OfType<IPostAuthorizeInterceptor> ().ToArray ()); " is 138.
Long Statement,Comdiv.Application,ApplicationLifecycleManager,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\ApplicationLifecycleManager.cs,OnFinishApplication,The length of the statement  "		var i = _finishapplicationinterceptors ?? (_finishapplicationinterceptors = getinterceptors ().OfType<IFinishApplicationInterceptor> ().ToArray ()); " is 148.
Long Statement,Comdiv.Application,ApplicationLifecycleManager,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\ApplicationLifecycleManager.cs,OnStartApplication,The length of the statement  "		var i = _startapplicationinterceptors ?? (_startapplicationinterceptors = getinterceptors ().OfType<IStartApplicationInterceptor> ().ToArray ()); " is 145.
Long Statement,Comdiv.Application,myapp,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\myapp.cs,getActiveUsers,The length of the statement  "		return lastentercache.Where (x => x.Value.LastAccess.AddMinutes (minutes) >= DateTime.Now).OrderByDescending (x => x.Value.LastAccess).Select (x => new KeyValuePair<string' ActiveUserRecord> (x.Key' x.Value)).ToList (); " is 219.
Long Statement,Comdiv.Application,myapp,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\myapp.cs,getActiveUsers,The length of the statement  "		return lastentercache.Where (x => x.Value.LastAccess >= DateTime.Now).OrderByDescending (x => x.Value.LastAccess).Select (x => new KeyValuePair<string' ActiveUserRecord> (x.Key' x.Value)).ToList (); " is 198.
Long Statement,Comdiv.Application,WebApplicationBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WebApplicationBase.cs,CurrentDomain_AssemblyResolve,The length of the statement  "	var dll = Directory.EnumerateFiles (HttpContext.Current.Server.MapPath ("~/")' args.Name.Split (''') [0].Trim () + ".dll"' SearchOption.AllDirectories).Where (x => !x.ToLower ().Contains ("\\extensionslib\\") && !x.ToLower ().Contains ("\\tmp\\")).FirstOrDefault (); " is 266.
Long Statement,Comdiv.Application,WebApplicationBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WebApplicationBase.cs,checkWellStart,The length of the statement  "<p>Данное соощение на экране свидетельствует о наличии серьезных проблем сервера' обновите страницу' обязательно сообщите администратору если  " is 141.
Long Statement,Comdiv.Application,WidgetCollection,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WidgetCollection.cs,GetTabs,The length of the statement  "		var missedtoolbars = GetButtons (toolbar).Select (x => x.Tab).Distinct ().Where (x => uniquetoolbars.FirstOrDefault (t => t.Code == x) == null); " is 144.
Long Statement,Comdiv.Application,WidgetCollection,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WidgetCollection.cs,GetButtons,The length of the statement  "	return this [tab.Position.ToLower ()].Where (x => x.Type == WidgetType.Button && x.Tab == tab.Code).OrderBy (x => x.Idx).ToArray (); " is 132.
Long Statement,Comdiv.Application,WidgetRepository,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WidgetRepository.cs,GetMyWidgets,The length of the statement  "		return new WidgetCollection (GetMyWidgets (myapp.usr' HttpContext.Current.Request.Url.ToString ()).GroupBy (x => x.Position.ToLower ()).ToDictionary (g => g.Key' g => g.OrderBy (x => x.Idx).ToArray ())); " is 203.
Long Statement,Comdiv.Collections,StringMap,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Collections\StringMap.cs,ReverseAll,The length of the statement  "	var result = new List<string> (this.Where (GetReveresePredicate (to)).Select (GetReverseConverter ()).Distinct ().ToList ()); " is 125.
Long Statement,Comdiv.Collections,UserData,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Collections\UserData.cs,Save,The length of the statement  "				x.Add (new XElement ("item"' new XAttribute ("usr"' usr)' new XAttribute ("type"' val.Value.GetType ().FullName)' new XAttribute ("name"' val.Key)' new XText (val.Value.ToString ()))); " is 184.
Long Statement,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetDelted,The length of the statement  "			return new DateTime (res ["year"].toInt ()' res ["month"].toInt ()' res ["day"].toInt ()' res ["hour"].toInt ()' res ["min"].toInt ()' 0' 0); " is 141.
Long Statement,Comdiv.Model,ForSearchAttribute,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\ClassicAttribute.cs,GetName,The length of the statement  "	var attr = type.GetCustomAttributes (typeof(ForSearchAttribute)' false).OfType<ForSearchAttribute> ().FirstOrDefault (); " is 120.
Long Statement,Comdiv.Conversations,DefaultConversationManager,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Conversations\DefaultConversationManager.cs,applyInterceptors,The length of the statement  "		log.Error (string.Format ("error occured on {0} for {1}({2}) on {3}"' x.GetType ().Name' conversation.Code' conversation.Owner' stage)' ex); " is 140.
Long Statement,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,unZip,The length of the statement  "	// Converts the specified String (compressed)' which encodes binary data as base 64 digits' to an equivalent 8-bit unsigned integer array. " is 138.
Long Statement,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,toText,The length of the statement  "	var result = value.replace (@"<(br|p|table|tr|li)[^>]*?>"' Environment.NewLine).replace (@"</td\s*>"' "\t").replace (@"<hr[^>]*?>"' "\r\n----------\r\n").replace (@"&([lr]a)?(quo)t?;"' "\"").replace (@"&apos;"' "'").replace (@"&ndash;"' "-").replace (@"&amp;"' "&").replace (@"&nbsp;"' " "); " is 291.
Long Statement,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,toText,The length of the statement  "	result = result.replace (@"<[^>]*>"' String.Empty).replace (@"[\r\n]\s+"' Environment.NewLine).replace (@"\x20+"' " ").Trim (); " is 127.
Long Statement,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,toHtml,The length of the statement  "	return str.replace ("&"' "&amp;").replace ("<"' "&lt;").replace (">"' "&gt;").replace (@"[\r\n]{1'2}"' m => "<br/>\r\n").replace (@"\t"' "<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>").replace (@"--IMG:([\s\S]+?)(--)"' "<img src='$1' />").replace (@"-{5'}"' "<hr/>\r\n"); " is 264.
Long Statement,Comdiv.Extensions,IoExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\IoExtensions.cs,hasNewer,The length of the statement  "	return file.Directory.GetFiles (pattern' SearchOption.AllDirectories).FirstOrDefault (f => f.LastWriteTime > file.LastWriteTime) != null; " is 137.
Long Statement,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,LoadAssemblyFromFile,The length of the statement  "		string file = Directory.EnumerateFiles (dir' a.Name + ".dll"' SearchOption.AllDirectories).Select (x => x.ToLower ().Replace ("\\"' "/")).Where (x => null == exclude.FirstOrDefault (e => x.like (e))).FirstOrDefault (); " is 218.
Long Statement,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,parseDateTime,The length of the statement  "	var res = DateTime.TryParse (date' CultureInfo.GetCultureInfo ("Ru-ru").DateTimeFormat' DateTimeStyles.AllowWhiteSpaces' out d); " is 128.
Long Statement,Comdiv.Extensions,DictionaryExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\DictionaryExtensions.cs,apply,The length of the statement  "		PropertyInfo property = type.GetProperty (name' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Public | BindingFlags.SetProperty); " is 146.
Long Statement,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,tofio,The length of the statement  "		return name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ())); " is 179.
Long Statement,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,replace,The length of the statement  "	return replace (str' pattern' substitute' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace); " is 130.
Long Statement,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,replace,The length of the statement  "	return replace (str' pattern' evaluator' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace); " is 129.
Long Statement,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,toShort,The length of the statement  "	result = result.replace (@"(?-i)(\b|^)\p{Ll}"' m => m.Value.ToUpper ()' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace); " is 160.
Long Statement,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,toShort,The length of the statement  "	result = result.replace (@"\W"' String.Empty' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace); " is 134.
Long Statement,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,toShort,The length of the statement  "	result = result.replace (@"(?-i)\p{Ll}"' String.Empty' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace); " is 143.
Long Statement,Comdiv.Inversion,InversionComponent,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\InversionComponent.cs,Create,The length of the statement  "	foreach (var property in ImplementationType.GetProperties (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)) { " is 131.
Long Statement,Comdiv.Inversion,MatchedExtensionsSet,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\MatchedExtensionsSet.cs,all,The length of the statement  "	return Container.all<TTarget> ().Where (m => (m is ICanCheckMatching<TMatch> && ((ICanCheckMatching<TMatch>)m).IsMatch (Target)) || (!(m is ICanCheckMatching<TMatch>))).OrderByDescending (m => (m is IWithIdx) ? ((IWithIdx)m).Idx : 0); " is 234.
Long Statement,Comdiv.Inversion,DefaultImplementationExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\DefaultImplementationAttribute.cs,getDefaultImplementation,The length of the statement  "		throw new DefaultImplementationException ("default implementation alowed for interfaces only - " + targetType.FullName + " is not"); " is 132.
Long Statement,Comdiv.Inversion,InversionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\InversionExtensions.cs,setupSecurity,The length of the statement  "	return container.ensureService<IPrincipalSource' PrincipalSource> ().ensureService<IImpersonator' Impersonator> ().ensureService<IRoleResolver' RoleResolver> ().ensureService<IAclRepository' DefaultAclRepository> ().ensureService<IAclProviderService' DefaultAclProvider> ().ensureService<IAclTokenResolver' DefaultAclTokenResolver> ().ensureService<IAclInMemoryRuleProvider' DefaultAclInMemoryRuleProvider> ().ensureService<IAclApplicationRuleProvider' DefaultAclApplicationRuleProvider> ().ensureService<IAclProfileManager' DefaultAclProfileManager> (); " is 554.
Long Statement,Comdiv.Inversion,InversionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\InversionExtensions.cs,setupFilesystem,The length of the statement  "	return container.ensureService<IFilePathResolver' DefaultFilePathResolver> ().ensureService<IFileTemplateRepository' FileTemplateRepository> ("file.template.repository.transient"); " is 180.
Long Statement,Comdiv.Inversion,InversionContainerBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\InversionContainerBase.cs,AddSingleton,The length of the statement  "		log.Info ("start add singleton with name " + (name ?? String.Empty) + " of type " + type.FullName + " implemented by " + typeOrInstance); " is 137.
Long Statement,Comdiv.Inversion,InversionContainerBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\InversionContainerBase.cs,AddSingleton,The length of the statement  "		log.Info ("end add singleton with name " + (name ?? String.Empty) + " of type " + type.FullName + " implemented by " + typeOrInstance); " is 135.
Long Statement,Comdiv.Inversion,SimpleInversionContainer,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\SimpleInversionContainer.cs,internalAdd,The length of the statement  "	serviceType = serviceType ?? (implementTypeOrInstance is Type ? (implementTypeOrInstance as Type) : implementTypeOrInstance.GetType ()); " is 136.
Long Statement,Comdiv.Inversion,SimpleInversionContainer,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Inversion\SimpleInversionContainer.cs,internalAdd,The length of the statement  "	component.ImplementationType = implementTypeOrInstance is Type ? (implementTypeOrInstance as Type) : implementTypeOrInstance.GetType (); " is 136.
Long Statement,Comdiv.IO,BxlApplicationXmlReader,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\BxlApplicationXmlReader.cs,readByTotalSearch,The length of the statement  "	var files = Directory.EnumerateFiles (root' bxlpath' SearchOption.AllDirectories).Select (x => x.ToLower ().Replace ("\\"' "/")).Where (x => Except.noContent () || !x.like (Except)).Where (x => !x.like ("/profile/") || x.like ("/profile/" + myapp.usrName.ToLower ().Replace ("\\"' "_") + "/")).OrderByDescending (x => x' new LevelPathComparer ()); " is 347.
Long Statement,Comdiv.MAS,DatabaseSetTestProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\DatabaseSetTestProvider.cs,Contextualize,The length of the statement  "	var t = myapp.sql.ExecuteTable ("select name from sys.objects where type='P' and schema_id = schema_id('" + schema + "')"' null' db' connection); " is 145.
Long Statement,Comdiv.MAS,Process,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\Process.cs,CreateForCurrentProcess,The length of the statement  "	result.Code = string.Format ("{0}_{1}_{2}_{3}_{4}"' result.Host' result.Name' result.Pid' result.Usr' result.StartTime.ToString ("yyyyMMddHHmmssms")).toSystemName (); " is 166.
Long Statement,Comdiv.MAS,TestResult,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\TestResult.cs,Deactivate,The length of the statement  "		c.ExecuteNonQuery ("exec mas.audit_deactivate @system=@system' @application=@application' @type=@type' @level=@level"' matrix); " is 127.
Long Statement,Comdiv.MAS,TestResult,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\TestResult.cs,Define,The length of the statement  "		c.ExecuteNonQuery ("insert mas.testresultupdate (code' name' version' type' level' message' xmldata' canbeignored' ignored' fixed' active' test' system' application' providerid' var1' var2' var3' var4' link' autofix) " + "values (@code' @name' getdate()' @type' @level' @message' @xmldata' @canbeignored' @ignored' @fixed' @active' @test' @system' @application' @testproviderid' @var1' @var2' @var3' @var4' @link' @autofix)"' matrix); " is 434.
Long Statement,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,HasRows,The length of the statement  "	var result = connection.ExecuteScalar<int> ("select count(*) from {0} where {1}"._format (objectName' whereCondition)' (IParametersProvider)null); " is 146.
Long Statement,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,CreateCommand,The length of the statement  "				command = command + " " + parameters.Keys.Select (x => x.StartsWith ("@") ? x : "@" + x).Select (x => x + "=" + x).concat ("'"); " is 128.
Long Statement,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,CreateCommand,The length of the statement  "				command = command + " " + parameters.Select (x => x.Name).Select (x => x.StartsWith ("@") ? x : "@" + x).Select (x => x + "=" + x).concat ("'"); " is 144.
Long Statement,Comdiv.Persistence,SqlBasedLockObject,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlBasedLockObject.cs,NativeGet,The length of the statement  "		return c.ExecuteScalar<bool> (string.Format ("select dbo.lock_get('{0}'''{1}')"' LockObject' Identity)' (IParametersProvider)null); " is 131.
Long Statement,Comdiv.Persistence,SqlBasedLockObject,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlBasedLockObject.cs,NativeRelease,The length of the statement  "		return c.ExecuteScalar<bool> (string.Format ("select dbo.lock_releaze('{0}'''{1}')"' LockObject' Identity)' (IParametersProvider)null); " is 135.
Long Statement,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteOrm,The length of the statement  "			var prop = type.GetProperty (name' BindingFlags.SetProperty | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase); " is 158.
Long Statement,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,ExecuteOrm,The length of the statement  "			var field = type.GetField (name' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.IgnoreCase); " is 129.
Long Statement,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,GetConnectionNames,The length of the statement  "	return (myapp.ioc.get<IConnectionsSource> () ?? new DefaultConnectionsSource ()).GetConnections ().Select (x => x.Name).ToArray (); " is 131.
Long Statement,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,GetDatabaseNames,The length of the statement  "	var result = ExecuteTable ("select name from sys.databases where database_id > 4 order by name"' null' database' system); " is 121.
Long Statement,Comdiv.Persistence,SqlService,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlService.cs,GetConnection,The length of the statement  "	var connectiondescription = connectionprovider.GetConnections ().Where (x => x.Name.ToLower () == system.ToLower ()).FirstOrDefault (); " is 135.
Long Statement,Comdiv.Zeta.Data,WithCodeAttachmentRepository,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\WithCodeAttachmentRepository.cs,Define,The length of the statement  "	new XElement ("attach"' new XAttribute ("code"' code)' new XAttribute ("name"' name)' new XAttribute ("type"' ext)' new XAttribute ("file"' file)' new XAttribute ("usr"' myapp.usrName)).Save (desc); " is 198.
Long Statement,mia.utils,SqlScriptParser,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\SqlScriptParser.cs,safeSql,The length of the statement  "	//TIP: а) надо и строки и комменты проходить в 2 этапа (посмотри класс MatchEvaluator и его использование в Regex.Replace) " is 122.
Long Statement,Comdiv.Security,RoleResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\RoleResolver.cs,IsInRole,The length of the statement  "	return IsInRole (new GenericPrincipal (new GenericIdentity (username)' null)' role' !exact' callcontext' customcontext); " is 120.
Long Statement,Comdiv.Security,UserRecord,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\UserRecord.cs,GetFio,The length of the statement  "		return Name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ())); " is 179.
Long Statement,Comdiv.Security,UserRecordRepository,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\UserRecordRepository.cs,checkInit,The length of the statement  "			repositories = Enumerable.ToArray<IUserRecordRepository> (myapp.ioc.all<IUserRecordRepository> ().OrderBy (x => x.Idx)); " is 120.
Long Statement,Comdiv.Security,XmlRoleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\XmlRoleProvider.cs,IsInRole,The length of the statement  "	return RoleMap.ReverseAll (role).Any (outerRole => this.IsInRole (principal' outerRole) || myapp.roles.IsInRole (principal' outerRole)); " is 136.
Long Statement,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,Equals,The length of the statement  "	return Equals (other.TokenMask' TokenMask) && Equals (other.PrincipalMask' PrincipalMask) && Equals (other.RuleType' RuleType) && Equals (other.Permissions' Permissions) && Equals (other.System' System); " is 203.
Long Statement,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,ToString,The length of the statement  "	return string.Format ("[AclRule: TokenMask={0}' PrincipalMask={1}' RuleType={2}' Permissions={3}' System={4}' Active={5}' Evidence={6}' StartDate={7}' EndDate={8}]"' TokenMask' PrincipalMask' RuleType' Permissions' System' Active' Evidence' StartDate' EndDate); " is 261.
Long Statement,Comdiv.Security.Acl,AclRuleXmlSerializer,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRuleXmlSerializer.cs,Write,The length of the statement  "		x.attr ("token"' r.TokenMask).attr ("system"' r.System).attr ("principal"' r.PrincipalMask).attr ("permission"' r.Permissions).attr ("active"' r.Active.ToString ()).attr ("start"' r.StartDate.ToString ("dd.MM.yyyy hh:mm")).attr ("end"' r.EndDate.ToString ("dd.MM.yyyy hh:mm")).close (); " is 286.
Long Statement,Comdiv.Security.Acl,DefaultAclTokenResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\DefaultAclTokenResolver.cs,GetToken,The length of the statement  "		var result = Resolvers.OrderBy (r => r.Idx).Select (r => r.GetToken (aclTarget)).Where (x => null != x).FirstOrDefault (); " is 122.
Long Statement,Comdiv.Security.Acl,DefaultAclTokenResolver,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\DefaultAclTokenResolver.cs,GetToken,The length of the statement  "		var result = Resolvers.OrderBy (r => r.Idx).Select (r => r.GetToken (aclType' aclId)).Where (x => null != x).FirstOrDefault (); " is 127.
Long Statement,Comdiv.Wiki,WikiPersistenceProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Wiki\WikiPersistenceProvider.cs,Write,The length of the statement  "	page.Content = page.Content.replace (@"\<\!--@@[\s\S]*? --\>"' "<!--@@ \r\n" + TagHelper.ToString (page.Properties).Replace ("/ /"' "/\r\n/") + "\r\n -->\r\n"); " is 160.
Long Statement,Comdiv.Xml,XmlDslDefinition,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\XmlDslDefinition.cs,PrepareXslt,The length of the statement  "			throw new XmlDslLoaderException ("transform already contains NS for prefix " + extensionDefinition.Code + " (" + existedns.NamespaceName + ")' that not match needed " + extensionDefinition.NameSpace); " is 200.
Long Statement,Comdiv.Xml.Smart,SmartXml,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\Smart\SmartXml.cs,RemoveDuplicates,The length of the statement  "		if (null != e.ElementsAfterSelf ().FirstOrDefault (x => x.Name.LocalName == e.Name.LocalName && x.attr ("id"' "__x__") == e.attr ("id"' "__e__"))) { " is 148.
Complex Conditional,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,to,The conditional expression  "((x is int) || (x is string)) && (type.IsInterface || type.IsClass)"  is complex.
Complex Conditional,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,toDecimal,The conditional expression  ""-" == x || "--" == x || "" == x || "error" == x"  is complex.
Complex Conditional,Comdiv.Text,TemplateGenerator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Text\TemplateGenerator.cs,getSubstitution,The conditional expression  "null != res && (res is bool || res == "True" || res == "False")"  is complex.
Empty Catch Block,Comdiv.Application,WebApplicationBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WebApplicationBase.cs,loadExtendedLibraries,The method has an empty catch block.
Empty Catch Block,Comdiv.Application,WebApplicationBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WebApplicationBase.cs,selfPostAuthorizeRequestBeforeCustom,The method has an empty catch block.
Empty Catch Block,Comdiv.Extensibility.ExtensionsCompiler,ApplicationExtensionsLoadTask,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensibility\ApplicationExtensionsLoadTask.cs,cleanupOldDlls,The method has an empty catch block.
Empty Catch Block,Comdiv.Extensibility.ExtensionsCompiler,ApplicationExtensionsLoadTask,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensibility\ApplicationExtensionsLoadTask.cs,cleanupOldDlls,The method has an empty catch block.
Empty Catch Block,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,setPropertySafe,The method has an empty catch block.
Empty Catch Block,Comdiv.Extensions,BooleanExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\BooleanExtensions.cs,yes,The method has an empty catch block.
Empty Catch Block,Comdiv.Extensions,BooleanExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\BooleanExtensions.cs,yes,The method has an empty catch block.
Empty Catch Block,Comdiv.Persistence,NamedConnection,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\NamedConnection.cs,GetConnections,The method has an empty catch block.
Empty Catch Block,Comdiv.Security,PersistentRoleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\PersistentRoleProvider.cs,IsInRole,The method has an empty catch block.
Magic Number,Comdiv.Useful,RandomStringUniqueStringProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\RandomStringUniqueStringProvider.cs,RandomStringUniqueStringProvider,The following statement contains a magic number: Size = 2;  
Magic Number,Comdiv.Application,LongTask,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LongTask.cs,PhaseFinished,The following statement contains a magic number: if (lastphase.Year < 1900)  	lastphase = Start;  
Magic Number,Comdiv.Application,myapp,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\myapp.cs,reload,The following statement contains a magic number: lock (sync) {  	return reload (3);  }  
Magic Number,Comdiv.Application,myapp,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\myapp.cs,reload,The following statement contains a magic number: return reload (3);  
Magic Number,Comdiv.Application,myapp,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\myapp.cs,reload,The following statement contains a magic number: lock (sync) {  	Exception ex = null;  	log.Info ("start reload");  	if (onReloadList.Count != 0) {  		var exceptions = new List<Exception> ();  		var args = new EventWithDataArgs<int> (level);  		EventWithDataHandler<object' int> wronghandler;  		float ms = 0;  		foreach (var handler in onReloadList.ToArray ()) {  			try {  				var s = Stopwatch.StartNew ();  				handler (null' args);  				s.Stop ();  				if (s.ElapsedMilliseconds > ms) {  					ms = s.ElapsedMilliseconds;  				}  			}  			catch (Exception e) {  				exceptions.Add (e);  			}  		}  		if (exceptions.Count != 0) {  			ex = new GroupException ("error occured during Reload"' exceptions);  			log.Error ("error on reload"' ex);  		}  	}  	if (level >= 5) {  		//at high level must to forcely clean cached services  		_principals = null;  		_impersonation = null;  		_roles = null;  		_files = null;  		_storage = null;  	}  	_LastReloadStamp = Environment.TickCount;  	LastReloadTime = DateTime.Now;  	log.Info ("end reload");  	return ex;  }  
Magic Number,Comdiv.Application,myapp,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\myapp.cs,reload,The following statement contains a magic number: if (level >= 5) {  	//at high level must to forcely clean cached services  	_principals = null;  	_impersonation = null;  	_roles = null;  	_files = null;  	_storage = null;  }  
Magic Number,Comdiv.Application,WebApplicationBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\WebApplicationBase.cs,appendstartlog,The following statement contains a magic number: if (last.Year == 1900) {  	span_ = "-";  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retrycount == 0) {  	wait = 0;  	retryrate = 0;  }  else {  	if (wait == -1) {  		wait = 1000 * 60 * 30;  		//default total wait is seted to 30 min  	}  	if (retryrate == -1) {  		retryrate = 1000 * 5;  		//default retry rate is set to 5 sec  	}  	if (retrycount == -1) {  		retrycount = wait / retryrate;  	}  	else {  		retryrate = wait / retrycount;  	}  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retrycount == 0) {  	wait = 0;  	retryrate = 0;  }  else {  	if (wait == -1) {  		wait = 1000 * 60 * 30;  		//default total wait is seted to 30 min  	}  	if (retryrate == -1) {  		retryrate = 1000 * 5;  		//default retry rate is set to 5 sec  	}  	if (retrycount == -1) {  		retrycount = wait / retryrate;  	}  	else {  		retryrate = wait / retrycount;  	}  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retrycount == 0) {  	wait = 0;  	retryrate = 0;  }  else {  	if (wait == -1) {  		wait = 1000 * 60 * 30;  		//default total wait is seted to 30 min  	}  	if (retryrate == -1) {  		retryrate = 1000 * 5;  		//default retry rate is set to 5 sec  	}  	if (retrycount == -1) {  		retrycount = wait / retryrate;  	}  	else {  		retryrate = wait / retrycount;  	}  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retrycount == 0) {  	wait = 0;  	retryrate = 0;  }  else {  	if (wait == -1) {  		wait = 1000 * 60 * 30;  		//default total wait is seted to 30 min  	}  	if (retryrate == -1) {  		retryrate = 1000 * 5;  		//default retry rate is set to 5 sec  	}  	if (retrycount == -1) {  		retrycount = wait / retryrate;  	}  	else {  		retryrate = wait / retrycount;  	}  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retrycount == 0) {  	wait = 0;  	retryrate = 0;  }  else {  	if (wait == -1) {  		wait = 1000 * 60 * 30;  		//default total wait is seted to 30 min  	}  	if (retryrate == -1) {  		retryrate = 1000 * 5;  		//default retry rate is set to 5 sec  	}  	if (retrycount == -1) {  		retrycount = wait / retryrate;  	}  	else {  		retryrate = wait / retrycount;  	}  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (wait == -1) {  	wait = 1000 * 60 * 30;  	//default total wait is seted to 30 min  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (wait == -1) {  	wait = 1000 * 60 * 30;  	//default total wait is seted to 30 min  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (wait == -1) {  	wait = 1000 * 60 * 30;  	//default total wait is seted to 30 min  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: wait = 1000 * 60 * 30;  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: wait = 1000 * 60 * 30;  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: wait = 1000 * 60 * 30;  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retryrate == -1) {  	retryrate = 1000 * 5;  	//default retry rate is set to 5 sec  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: if (retryrate == -1) {  	retryrate = 1000 * 5;  	//default retry rate is set to 5 sec  }  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: retryrate = 1000 * 5;  
Magic Number,Comdiv.Application,LockObjectBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Application\LockObjectBase.cs,LockObjectBase,The following statement contains a magic number: retryrate = 1000 * 5;  
Magic Number,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetNotLimited,The following statement contains a magic number: return new DateRange (new DateTime (1900' 1' 1' 0' 0' 0' 0)' new DateTime (3000' 1' 1' 0' 0' 0' 0));  
Magic Number,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetNotLimited,The following statement contains a magic number: return new DateRange (new DateTime (1900' 1' 1' 0' 0' 0' 0)' new DateTime (3000' 1' 1' 0' 0' 0' 0));  
Magic Number,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetCorrected,The following statement contains a magic number: if (context.IndexOf ("L") != -1) {  	delta = 2;  }  
Magic Number,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetCorrected,The following statement contains a magic number: delta = 2;  
Magic Number,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetCorrected,The following statement contains a magic number: if (context.IndexOf ("W") != -1) {  	res = res.AddDays (-(int)d.DayOfWeek + 1);  	res = res.AddDays (-(delta - 1) * 7);  }  
Magic Number,Comdiv.Model,DateRange,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Common\DateRange.cs,GetCorrected,The following statement contains a magic number: res = res.AddDays (-(delta - 1) * 7);  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (Code != null ? Code.GetHashCode () : 0);  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (Comment != null ? Comment.GetHashCode () : 0);  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (Action != null ? Action.GetHashCode () : 0);  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (Controller != null ? Controller.GetHashCode () : 0);  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (Area != null ? Area.GetHashCode () : 0);  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + Id;  
Magic Number,Comdiv.Model,Entity,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Model\Entity.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (Name != null ? Name.GetHashCode () : 0);  
Magic Number,Comdiv.Conversations,DefaultConverstionStatisticsInterceptor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Conversations\Transactions\DefaultConverstionStatisticsInterceptor.cs,OnEnter,The following statement contains a magic number: if (c.LastLeaveTime.Year > 1900) {  	c.StayTime += (c.LastEnterTime - c.LastLeaveTime);  }  
Magic Number,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,toZip,The following statement contains a magic number: Buffer.BlockCopy (compressed' 0' buffer' 4' compressed.Length);  
Magic Number,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,toZip,The following statement contains a magic number: Buffer.BlockCopy (BitConverter.GetBytes (length)' 0' buffer' 0' 4);  
Magic Number,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,unZip,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// Gets the number of bytes of the results' decompressed stiring  	var decompressedlength = BitConverter.ToInt32 (bytes' 0);  	// 4 bytes only  	ms.Write (bytes' 4' bytes.Length - 4);  	byte[] buffer = new byte[decompressedlength];  	// Reads decompressed bytes to the buffer   	ms.Position = 0;  	using (var zip = new GZipStream (ms' CompressionMode.Decompress)) {  		zip.Read (buffer' 0' buffer.Length);  	}  	return Encoding.UTF8.GetString (buffer);  }  
Magic Number,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,unZip,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// Gets the number of bytes of the results' decompressed stiring  	var decompressedlength = BitConverter.ToInt32 (bytes' 0);  	// 4 bytes only  	ms.Write (bytes' 4' bytes.Length - 4);  	byte[] buffer = new byte[decompressedlength];  	// Reads decompressed bytes to the buffer   	ms.Position = 0;  	using (var zip = new GZipStream (ms' CompressionMode.Decompress)) {  		zip.Read (buffer' 0' buffer.Length);  	}  	return Encoding.UTF8.GetString (buffer);  }  
Magic Number,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,unZip,The following statement contains a magic number: ms.Write (bytes' 4' bytes.Length - 4);  
Magic Number,Comdiv.Extensions,AdvancedConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\AdvancedConvertExtensions.cs,unZip,The following statement contains a magic number: ms.Write (bytes' 4' bytes.Length - 4);  
Magic Number,Comdiv.Extensions,IoExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\IoExtensions.cs,getByContext,The following statement contains a magic number: if (path.StartsWith ("~")) {  	string localPath = path.Substring (2);  	string globalPath = (HttpContext.Current ?? CurrentHttp).Server.MapPath ("~\\");  	return Path.GetFullPath (Path.Combine (globalPath' localPath));  }  
Magic Number,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,toType,The following statement contains a magic number: if (str.EndsWith (".dll"))  	str = str.Substring (0' str.Length - 4);  
Magic Number,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,toType,The following statement contains a magic number: str = str.Substring (0' str.Length - 4);  
Magic Number,Comdiv.Extensions,TagHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\TagHelper.cs,Parse,The following statement contains a magic number: if (tags.Contains ("/")) {  	Regex.Replace (tags' @"/([^:/]+):([^:/]*)/"' m =>  {  		result [m.Groups [1].Value] = m.Groups [2].Value;  		return m.Value;  	}' RegexOptions.Compiled);  }  else {  	foreach (var s in tags.SmartSplit (false' true' ' ')) {  		if (s.Contains (":")) {  			result [s.Split (':') [0]] = UnEscape (s.Split (':') [1]);  		}  		else {  			result [s] = "";  		}  	}  }  
Magic Number,Comdiv.Extensions,TagHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\TagHelper.cs,Parse,The following statement contains a magic number: Regex.Replace (tags' @"/([^:/]+):([^:/]*)/"' m =>  {  	result [m.Groups [1].Value] = m.Groups [2].Value;  	return m.Value;  }' RegexOptions.Compiled);  
Magic Number,Comdiv.Extensions,TagHelper,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\TagHelper.cs,Parse,The following statement contains a magic number: result [m.Groups [1].Value] = m.Groups [2].Value;  
Magic Number,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,parseDateTime,The following statement contains a magic number: if (d.Year == 8000) {  	d = new DateTime (DateTime.Today.Year' d.Month' d.Day' d.Hour' d.Minute' d.Second);  }  
Magic Number,Comdiv.Extensions,ConvertExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ConvertExtensions.cs,parseDateTime,The following statement contains a magic number: if (d.Year < (DateExtensions.Begin.Year - 200))  	d = DateExtensions.Begin;  
Magic Number,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,tofio,The following statement contains a magic number: if (name.like (fiopattern)) {  	return name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  }  
Magic Number,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,tofio,The following statement contains a magic number: if (name.like (fiopattern)) {  	return name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  }  
Magic Number,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,tofio,The following statement contains a magic number: return name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  
Magic Number,Comdiv.Extensions,StringExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\StringExtensions.cs,tofio,The following statement contains a magic number: return name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  
Magic Number,Comdiv.Extensions,DateExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\DateExtensions.cs,accomodateToYear,The following statement contains a magic number: if (result.Month == 2 && result.Day == 28 && (result.Year % 4 == 0)) {  	result = result.AddDays (1);  }  
Magic Number,Comdiv.Extensions,DateExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\DateExtensions.cs,accomodateToYear,The following statement contains a magic number: if (result.Month == 2 && result.Day == 28 && (result.Year % 4 == 0)) {  	result = result.AddDays (1);  }  
Magic Number,Comdiv.Extensions,DateExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\DateExtensions.cs,accomodateToYear,The following statement contains a magic number: if (result.Month == 2 && result.Day == 28 && (result.Year % 4 == 0)) {  	result = result.AddDays (1);  }  
Magic Number,Comdiv.IO,FilePathResolverExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FilePathResolverExtensions.cs,Delete,The following statement contains a magic number: if (null != resolved) {  	Thread.Sleep (20);  	File.Delete (resolved);  }  
Magic Number,Comdiv.IO,FilePathResolverExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FilePathResolverExtensions.cs,Delete,The following statement contains a magic number: Thread.Sleep (20);  
Magic Number,Comdiv.IO,FilePathResolverExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FilePathResolverExtensions.cs,Write,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Comdiv.IO,FilePathResolverExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FilePathResolverExtensions.cs,Write,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Comdiv.IO,FilePathResolverXmlExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FilePathResolverXmlExtensions.cs,ReadXml,The following statement contains a magic number: path = parsedPath.Groups [2].Value;  
Magic Number,Comdiv.IO.FileSystemScript,CopyFileSystemCommand,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FileSystemScript\CopyFileSystemCommand.cs,internalExecute,The following statement contains a magic number: foreach (var source in sources) {  	var src = source.normalizePath ();  	Log.logdebug ("src->" + src);  	if (null != excludes.FirstOrDefault (x => src.like (x)))  		continue;  	Log.logdebug ("src not excluded");  	var filename = Path.GetFileName (src);  	var localpath = src.Replace (srcdir' "").normalizePath ();  	var outfile = (TrgDir + "/" + (KeepPaths ? localpath : filename)).normalizePath ();  	Log.logdebug ("outfile->" + outfile);  	var trg = Filesystem.Resolve (outfile' false);  	Log.logdebug ("trg->" + trg);  	var srcdate = new DateTime (1901' 1' 1);  	var trgdate = new DateTime (1900' 1' 1);  	if (!Overwrite) {  		srcdate = File.GetLastWriteTime (src);  		if (File.Exists (trg)) {  			trgdate = File.GetLastWriteTime (trg);  		}  	}  	if (srcdate > trgdate) {  		Log.logdebug ("need copy");  		Directory.CreateDirectory (Path.GetDirectoryName (trg));  		File.Copy (src' trg' true);  		Log.loginfo ("copyfile " + source + "->" + outfile);  	}  }  
Magic Number,Comdiv.IO.FileSystemScript,CopyFileSystemCommand,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\IO\FileSystemScript\CopyFileSystemCommand.cs,internalExecute,The following statement contains a magic number: foreach (var source in sources) {  	var src = source.normalizePath ();  	Log.logdebug ("src->" + src);  	if (null != excludes.FirstOrDefault (x => src.like (x)))  		continue;  	Log.logdebug ("src not excluded");  	var filename = Path.GetFileName (src);  	var localpath = src.Replace (srcdir' "").normalizePath ();  	var outfile = (TrgDir + "/" + (KeepPaths ? localpath : filename)).normalizePath ();  	Log.logdebug ("outfile->" + outfile);  	var trg = Filesystem.Resolve (outfile' false);  	Log.logdebug ("trg->" + trg);  	var srcdate = new DateTime (1901' 1' 1);  	var trgdate = new DateTime (1900' 1' 1);  	if (!Overwrite) {  		srcdate = File.GetLastWriteTime (src);  		if (File.Exists (trg)) {  			trgdate = File.GetLastWriteTime (trg);  		}  	}  	if (srcdate > trgdate) {  		Log.logdebug ("need copy");  		Directory.CreateDirectory (Path.GetDirectoryName (trg));  		File.Copy (src' trg' true);  		Log.loginfo ("copyfile " + source + "->" + outfile);  	}  }  
Magic Number,Comdiv.MAS,Process,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\Process.cs,CreateForCurrentProcess,The following statement contains a magic number: result.Result = -10;  
Magic Number,Comdiv.MAS,TestResult,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\MAS\TestResult.cs,TestResult,The following statement contains a magic number: Level = 3;  
Magic Number,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,ExecuteNonQuery,The following statement contains a magic number: ExecuteNonQuery (connection' command' parameters' 30);  
Magic Number,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,ExecuteDictionaryReader,The following statement contains a magic number: try {  	var result = new Dictionary<string' object> ();  	while (reader.Read ()) {  		if (reader.FieldCount == 2) {  			result [reader [0] as string] = reader [1];  		}  		else {  			var subresult = new List<object> ();  			for (int i = 1; i < reader.FieldCount; i++) {  				subresult.Add (reader [i]);  			}  			result [reader [0] as string] = subresult.ToArray ();  		}  	}  	return result;  }  finally {  	reader.Close ();  	connection.Close ();  }  
Magic Number,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,ExecuteDictionaryReader,The following statement contains a magic number: while (reader.Read ()) {  	if (reader.FieldCount == 2) {  		result [reader [0] as string] = reader [1];  	}  	else {  		var subresult = new List<object> ();  		for (int i = 1; i < reader.FieldCount; i++) {  			subresult.Add (reader [i]);  		}  		result [reader [0] as string] = subresult.ToArray ();  	}  }  
Magic Number,Comdiv.Persistence,BaseDataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\BaseDataExtensions.cs,ExecuteDictionaryReader,The following statement contains a magic number: if (reader.FieldCount == 2) {  	result [reader [0] as string] = reader [1];  }  else {  	var subresult = new List<object> ();  	for (int i = 1; i < reader.FieldCount; i++) {  		subresult.Add (reader [i]);  	}  	result [reader [0] as string] = subresult.ToArray ();  }  
Magic Number,Comdiv.Persistence,DefaultConnectionsSource,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\DefaultConnectionsSource.cs,checkCache,The following statement contains a magic number: if (null == cacheddict) {  	IDictionary<string' string> result = new Dictionary<string' string> ();  	var customfiles = myapp.files.ResolveAll (""' "connections.bxl"' true);  	foreach (var customfile in customfiles) {  		var strings = File.ReadAllLines (customfile);  		foreach (var s in strings) {  			var match = Regex.Match (s' @"^(\w+)\s+[""']([^""']+)[""']\s*$");  			if (match.Success) {  				var name = match.Groups [1].Value;  				var connection = match.Groups [2].Value;  				if (!result.ContainsKey (name)) {  					result [name] = connection;  				}  			}  		}  	}  	if (InWebContext) {  		var file = myapp.files.Read ("~/usr/connections.config");  		if (file.hasContent ()) {  			var x = XElement.Parse (file);  			var connections = x.Elements ("add");  			foreach (var connection in connections) {  				var name = connection.attr ("name");  				var cs = connection.attr ("connectionString");  				if (!result.ContainsKey (name)) {  					result [name] = cs;  				}  			}  		}  	}  	else {  		foreach (ConnectionStringSettings connectionString in ConfigurationManager.ConnectionStrings) {  			logger.get ("comdiv.persistence.connectionssource").debug (() => "finded connection " + connectionString.Name);  			if (connectionString.Name.ToLower () == "localsqlserver" || connectionString.Name.ToLower () == "localsqliteserver") {  				continue;  			}  			if (!result.ContainsKey (connectionString.Name)) {  				result [connectionString.Name] = connectionString.ConnectionString;  			}  		}  	}  	cacheddict = result;  }  
Magic Number,Comdiv.Persistence,DefaultConnectionsSource,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\DefaultConnectionsSource.cs,checkCache,The following statement contains a magic number: foreach (var customfile in customfiles) {  	var strings = File.ReadAllLines (customfile);  	foreach (var s in strings) {  		var match = Regex.Match (s' @"^(\w+)\s+[""']([^""']+)[""']\s*$");  		if (match.Success) {  			var name = match.Groups [1].Value;  			var connection = match.Groups [2].Value;  			if (!result.ContainsKey (name)) {  				result [name] = connection;  			}  		}  	}  }  
Magic Number,Comdiv.Persistence,DefaultConnectionsSource,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\DefaultConnectionsSource.cs,checkCache,The following statement contains a magic number: foreach (var s in strings) {  	var match = Regex.Match (s' @"^(\w+)\s+[""']([^""']+)[""']\s*$");  	if (match.Success) {  		var name = match.Groups [1].Value;  		var connection = match.Groups [2].Value;  		if (!result.ContainsKey (name)) {  			result [name] = connection;  		}  	}  }  
Magic Number,Comdiv.Persistence,DefaultConnectionsSource,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\DefaultConnectionsSource.cs,checkCache,The following statement contains a magic number: if (match.Success) {  	var name = match.Groups [1].Value;  	var connection = match.Groups [2].Value;  	if (!result.ContainsKey (name)) {  		result [name] = connection;  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (match.Success) {  	select = match.Groups ["select"].Value;  	from = match.Groups ["from"].Value.Trim ();  	where = match.Groups ["where"].Value.Trim ();  	where = where.replace (@"order\sby[\s\S]+"' "").Trim ();  	if (from.hasContent ()) {  		result.Processed = true;  		result.Condition = where;  		if (!from.Contains ("'") && !from.Contains ("join")) {  			result.IsSimple = true;  			var pair = from.split (false' true' ' ');  			result.TableName = pair [0];  			result.TableAlias = "";  			if (pair.Count == 2) {  				result.TableAlias = pair [1];  			}  			if (pair.Count == 3) {  				//tname as alias - case  				result.TableAlias = pair [2];  			}  			if (select.hasContent ()) {  				var fields = select.split (false' true' ''');  				foreach (var field in fields) {  					var fld = field.split (false' true' '.');  					if (fld.Count == 1) {  						result.Fields.Add (fld [0]);  					}  					else {  						result.Fields.Add (fld [1]);  					}  				}  			}  			else {  				result.All = true;  			}  		}  		else if (from.Contains ("join")) {  			var pair = from.split (false' true' ' ');  			result.TableName = pair [0];  			result.TableAlias = pair [1];  		}  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (match.Success) {  	select = match.Groups ["select"].Value;  	from = match.Groups ["from"].Value.Trim ();  	where = match.Groups ["where"].Value.Trim ();  	where = where.replace (@"order\sby[\s\S]+"' "").Trim ();  	if (from.hasContent ()) {  		result.Processed = true;  		result.Condition = where;  		if (!from.Contains ("'") && !from.Contains ("join")) {  			result.IsSimple = true;  			var pair = from.split (false' true' ' ');  			result.TableName = pair [0];  			result.TableAlias = "";  			if (pair.Count == 2) {  				result.TableAlias = pair [1];  			}  			if (pair.Count == 3) {  				//tname as alias - case  				result.TableAlias = pair [2];  			}  			if (select.hasContent ()) {  				var fields = select.split (false' true' ''');  				foreach (var field in fields) {  					var fld = field.split (false' true' '.');  					if (fld.Count == 1) {  						result.Fields.Add (fld [0]);  					}  					else {  						result.Fields.Add (fld [1]);  					}  				}  			}  			else {  				result.All = true;  			}  		}  		else if (from.Contains ("join")) {  			var pair = from.split (false' true' ' ');  			result.TableName = pair [0];  			result.TableAlias = pair [1];  		}  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (match.Success) {  	select = match.Groups ["select"].Value;  	from = match.Groups ["from"].Value.Trim ();  	where = match.Groups ["where"].Value.Trim ();  	where = where.replace (@"order\sby[\s\S]+"' "").Trim ();  	if (from.hasContent ()) {  		result.Processed = true;  		result.Condition = where;  		if (!from.Contains ("'") && !from.Contains ("join")) {  			result.IsSimple = true;  			var pair = from.split (false' true' ' ');  			result.TableName = pair [0];  			result.TableAlias = "";  			if (pair.Count == 2) {  				result.TableAlias = pair [1];  			}  			if (pair.Count == 3) {  				//tname as alias - case  				result.TableAlias = pair [2];  			}  			if (select.hasContent ()) {  				var fields = select.split (false' true' ''');  				foreach (var field in fields) {  					var fld = field.split (false' true' '.');  					if (fld.Count == 1) {  						result.Fields.Add (fld [0]);  					}  					else {  						result.Fields.Add (fld [1]);  					}  				}  			}  			else {  				result.All = true;  			}  		}  		else if (from.Contains ("join")) {  			var pair = from.split (false' true' ' ');  			result.TableName = pair [0];  			result.TableAlias = pair [1];  		}  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (from.hasContent ()) {  	result.Processed = true;  	result.Condition = where;  	if (!from.Contains ("'") && !from.Contains ("join")) {  		result.IsSimple = true;  		var pair = from.split (false' true' ' ');  		result.TableName = pair [0];  		result.TableAlias = "";  		if (pair.Count == 2) {  			result.TableAlias = pair [1];  		}  		if (pair.Count == 3) {  			//tname as alias - case  			result.TableAlias = pair [2];  		}  		if (select.hasContent ()) {  			var fields = select.split (false' true' ''');  			foreach (var field in fields) {  				var fld = field.split (false' true' '.');  				if (fld.Count == 1) {  					result.Fields.Add (fld [0]);  				}  				else {  					result.Fields.Add (fld [1]);  				}  			}  		}  		else {  			result.All = true;  		}  	}  	else if (from.Contains ("join")) {  		var pair = from.split (false' true' ' ');  		result.TableName = pair [0];  		result.TableAlias = pair [1];  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (from.hasContent ()) {  	result.Processed = true;  	result.Condition = where;  	if (!from.Contains ("'") && !from.Contains ("join")) {  		result.IsSimple = true;  		var pair = from.split (false' true' ' ');  		result.TableName = pair [0];  		result.TableAlias = "";  		if (pair.Count == 2) {  			result.TableAlias = pair [1];  		}  		if (pair.Count == 3) {  			//tname as alias - case  			result.TableAlias = pair [2];  		}  		if (select.hasContent ()) {  			var fields = select.split (false' true' ''');  			foreach (var field in fields) {  				var fld = field.split (false' true' '.');  				if (fld.Count == 1) {  					result.Fields.Add (fld [0]);  				}  				else {  					result.Fields.Add (fld [1]);  				}  			}  		}  		else {  			result.All = true;  		}  	}  	else if (from.Contains ("join")) {  		var pair = from.split (false' true' ' ');  		result.TableName = pair [0];  		result.TableAlias = pair [1];  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (from.hasContent ()) {  	result.Processed = true;  	result.Condition = where;  	if (!from.Contains ("'") && !from.Contains ("join")) {  		result.IsSimple = true;  		var pair = from.split (false' true' ' ');  		result.TableName = pair [0];  		result.TableAlias = "";  		if (pair.Count == 2) {  			result.TableAlias = pair [1];  		}  		if (pair.Count == 3) {  			//tname as alias - case  			result.TableAlias = pair [2];  		}  		if (select.hasContent ()) {  			var fields = select.split (false' true' ''');  			foreach (var field in fields) {  				var fld = field.split (false' true' '.');  				if (fld.Count == 1) {  					result.Fields.Add (fld [0]);  				}  				else {  					result.Fields.Add (fld [1]);  				}  			}  		}  		else {  			result.All = true;  		}  	}  	else if (from.Contains ("join")) {  		var pair = from.split (false' true' ' ');  		result.TableName = pair [0];  		result.TableAlias = pair [1];  	}  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (!from.Contains ("'") && !from.Contains ("join")) {  	result.IsSimple = true;  	var pair = from.split (false' true' ' ');  	result.TableName = pair [0];  	result.TableAlias = "";  	if (pair.Count == 2) {  		result.TableAlias = pair [1];  	}  	if (pair.Count == 3) {  		//tname as alias - case  		result.TableAlias = pair [2];  	}  	if (select.hasContent ()) {  		var fields = select.split (false' true' ''');  		foreach (var field in fields) {  			var fld = field.split (false' true' '.');  			if (fld.Count == 1) {  				result.Fields.Add (fld [0]);  			}  			else {  				result.Fields.Add (fld [1]);  			}  		}  	}  	else {  		result.All = true;  	}  }  else if (from.Contains ("join")) {  	var pair = from.split (false' true' ' ');  	result.TableName = pair [0];  	result.TableAlias = pair [1];  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (!from.Contains ("'") && !from.Contains ("join")) {  	result.IsSimple = true;  	var pair = from.split (false' true' ' ');  	result.TableName = pair [0];  	result.TableAlias = "";  	if (pair.Count == 2) {  		result.TableAlias = pair [1];  	}  	if (pair.Count == 3) {  		//tname as alias - case  		result.TableAlias = pair [2];  	}  	if (select.hasContent ()) {  		var fields = select.split (false' true' ''');  		foreach (var field in fields) {  			var fld = field.split (false' true' '.');  			if (fld.Count == 1) {  				result.Fields.Add (fld [0]);  			}  			else {  				result.Fields.Add (fld [1]);  			}  		}  	}  	else {  		result.All = true;  	}  }  else if (from.Contains ("join")) {  	var pair = from.split (false' true' ' ');  	result.TableName = pair [0];  	result.TableAlias = pair [1];  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (!from.Contains ("'") && !from.Contains ("join")) {  	result.IsSimple = true;  	var pair = from.split (false' true' ' ');  	result.TableName = pair [0];  	result.TableAlias = "";  	if (pair.Count == 2) {  		result.TableAlias = pair [1];  	}  	if (pair.Count == 3) {  		//tname as alias - case  		result.TableAlias = pair [2];  	}  	if (select.hasContent ()) {  		var fields = select.split (false' true' ''');  		foreach (var field in fields) {  			var fld = field.split (false' true' '.');  			if (fld.Count == 1) {  				result.Fields.Add (fld [0]);  			}  			else {  				result.Fields.Add (fld [1]);  			}  		}  	}  	else {  		result.All = true;  	}  }  else if (from.Contains ("join")) {  	var pair = from.split (false' true' ' ');  	result.TableName = pair [0];  	result.TableAlias = pair [1];  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (pair.Count == 2) {  	result.TableAlias = pair [1];  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (pair.Count == 3) {  	//tname as alias - case  	result.TableAlias = pair [2];  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: if (pair.Count == 3) {  	//tname as alias - case  	result.TableAlias = pair [2];  }  
Magic Number,Comdiv.Persistence,HqlParserLite,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\HqlParserLite.cs,Parse,The following statement contains a magic number: result.TableAlias = pair [2];  
Magic Number,Comdiv.Persistence,NamedConnection,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\NamedConnection.cs,GetConnections,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (Name) && (ConnectionString ?? "").Length < 20) {  	string real = "";  	try {  		real = ConfigurationManager.ConnectionStrings [this.Name].ConnectionString;  	}  	catch (Exception) {  	}  	if (string.IsNullOrWhiteSpace (real)) {  		this.ConnectionString = real;  	}  }  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: switch (query.QueryType) {  case StorageQueryType.Delete:  	doDelete ();  	break;  case StorageQueryType.Exists:  	query.Result = getExists ();  	break;  case StorageQueryType.Load:  	query.Result = getLoad ();  	break;  case StorageQueryType.Query:  	var result = getQuery ();  	query.Result = result;  	break;  case StorageQueryType.Save:  	doSave ();  	break;  case StorageQueryType.Supports:  	query.Result = getSupport ();  	break;  case StorageQueryType.Resolve:  	query.Result = query.RealType;  	break;  case StorageQueryType.New:  	query.Result = query.RealType.create ();  	break;  case StorageQueryType.Refresh:  	doRefresh (query.Target);  	break;  case StorageQueryType.Custom1:  	onCustom (1);  	break;  case StorageQueryType.Custom2:  	onCustom (2);  	break;  case StorageQueryType.Custom3:  	onCustom (3);  	break;  case StorageQueryType.Custom4:  	onCustom (4);  	break;  case StorageQueryType.Custom5:  	onCustom (5);  	break;  }  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: switch (query.QueryType) {  case StorageQueryType.Delete:  	doDelete ();  	break;  case StorageQueryType.Exists:  	query.Result = getExists ();  	break;  case StorageQueryType.Load:  	query.Result = getLoad ();  	break;  case StorageQueryType.Query:  	var result = getQuery ();  	query.Result = result;  	break;  case StorageQueryType.Save:  	doSave ();  	break;  case StorageQueryType.Supports:  	query.Result = getSupport ();  	break;  case StorageQueryType.Resolve:  	query.Result = query.RealType;  	break;  case StorageQueryType.New:  	query.Result = query.RealType.create ();  	break;  case StorageQueryType.Refresh:  	doRefresh (query.Target);  	break;  case StorageQueryType.Custom1:  	onCustom (1);  	break;  case StorageQueryType.Custom2:  	onCustom (2);  	break;  case StorageQueryType.Custom3:  	onCustom (3);  	break;  case StorageQueryType.Custom4:  	onCustom (4);  	break;  case StorageQueryType.Custom5:  	onCustom (5);  	break;  }  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: switch (query.QueryType) {  case StorageQueryType.Delete:  	doDelete ();  	break;  case StorageQueryType.Exists:  	query.Result = getExists ();  	break;  case StorageQueryType.Load:  	query.Result = getLoad ();  	break;  case StorageQueryType.Query:  	var result = getQuery ();  	query.Result = result;  	break;  case StorageQueryType.Save:  	doSave ();  	break;  case StorageQueryType.Supports:  	query.Result = getSupport ();  	break;  case StorageQueryType.Resolve:  	query.Result = query.RealType;  	break;  case StorageQueryType.New:  	query.Result = query.RealType.create ();  	break;  case StorageQueryType.Refresh:  	doRefresh (query.Target);  	break;  case StorageQueryType.Custom1:  	onCustom (1);  	break;  case StorageQueryType.Custom2:  	onCustom (2);  	break;  case StorageQueryType.Custom3:  	onCustom (3);  	break;  case StorageQueryType.Custom4:  	onCustom (4);  	break;  case StorageQueryType.Custom5:  	onCustom (5);  	break;  }  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: switch (query.QueryType) {  case StorageQueryType.Delete:  	doDelete ();  	break;  case StorageQueryType.Exists:  	query.Result = getExists ();  	break;  case StorageQueryType.Load:  	query.Result = getLoad ();  	break;  case StorageQueryType.Query:  	var result = getQuery ();  	query.Result = result;  	break;  case StorageQueryType.Save:  	doSave ();  	break;  case StorageQueryType.Supports:  	query.Result = getSupport ();  	break;  case StorageQueryType.Resolve:  	query.Result = query.RealType;  	break;  case StorageQueryType.New:  	query.Result = query.RealType.create ();  	break;  case StorageQueryType.Refresh:  	doRefresh (query.Target);  	break;  case StorageQueryType.Custom1:  	onCustom (1);  	break;  case StorageQueryType.Custom2:  	onCustom (2);  	break;  case StorageQueryType.Custom3:  	onCustom (3);  	break;  case StorageQueryType.Custom4:  	onCustom (4);  	break;  case StorageQueryType.Custom5:  	onCustom (5);  	break;  }  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: onCustom (2);  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: onCustom (3);  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: onCustom (4);  
Magic Number,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following statement contains a magic number: onCustom (5);  
Magic Number,Comdiv.Security,UserRecord,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\UserRecord.cs,GetFio,The following statement contains a magic number: if (Name.like (fiopattern)) {  	return Name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  }  
Magic Number,Comdiv.Security,UserRecord,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\UserRecord.cs,GetFio,The following statement contains a magic number: if (Name.like (fiopattern)) {  	return Name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  }  
Magic Number,Comdiv.Security,UserRecord,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\UserRecord.cs,GetFio,The following statement contains a magic number: return Name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  
Magic Number,Comdiv.Security,UserRecord,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\UserRecord.cs,GetFio,The following statement contains a magic number: return Name.replace (fiopattern' m => "{0} {1}.{2}."._format (m.Groups [1].Value' m.Groups [2].Value.Substring (0' 1).ToUpper ()' m.Groups [3].Value.Substring (0' 1).ToUpper ()));  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int result = (TokenMask != null ? TokenMask.GetHashCode () : 0);  	result = (result * 397) ^ (PrincipalMask != null ? PrincipalMask.GetHashCode () : 0);  	result = (result * 397) ^ RuleType.GetHashCode ();  	result = (result * 397) ^ (Permissions != null ? Permissions.GetHashCode () : 0);  	result = (result * 397) ^ (System != null ? System.GetHashCode () : 0);  	return result;  }  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int result = (TokenMask != null ? TokenMask.GetHashCode () : 0);  	result = (result * 397) ^ (PrincipalMask != null ? PrincipalMask.GetHashCode () : 0);  	result = (result * 397) ^ RuleType.GetHashCode ();  	result = (result * 397) ^ (Permissions != null ? Permissions.GetHashCode () : 0);  	result = (result * 397) ^ (System != null ? System.GetHashCode () : 0);  	return result;  }  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int result = (TokenMask != null ? TokenMask.GetHashCode () : 0);  	result = (result * 397) ^ (PrincipalMask != null ? PrincipalMask.GetHashCode () : 0);  	result = (result * 397) ^ RuleType.GetHashCode ();  	result = (result * 397) ^ (Permissions != null ? Permissions.GetHashCode () : 0);  	result = (result * 397) ^ (System != null ? System.GetHashCode () : 0);  	return result;  }  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int result = (TokenMask != null ? TokenMask.GetHashCode () : 0);  	result = (result * 397) ^ (PrincipalMask != null ? PrincipalMask.GetHashCode () : 0);  	result = (result * 397) ^ RuleType.GetHashCode ();  	result = (result * 397) ^ (Permissions != null ? Permissions.GetHashCode () : 0);  	result = (result * 397) ^ (System != null ? System.GetHashCode () : 0);  	return result;  }  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (PrincipalMask != null ? PrincipalMask.GetHashCode () : 0);  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ RuleType.GetHashCode ();  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Permissions != null ? Permissions.GetHashCode () : 0);  
Magic Number,Comdiv.Security.Acl,AclRule,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\AclRule.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (System != null ? System.GetHashCode () : 0);  
Magic Number,Comdiv.Security.Acl,DefaultAclApplicationRuleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\DefaultAclApplicationRuleProvider.cs,DefaultAclApplicationRuleProvider,The following statement contains a magic number: Idx = 100;  
Magic Number,Comdiv.Security.Acl,DefaultAclInMemoryRuleProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Security\Acl\DefaultAclInMemoryRuleProvider.cs,DefaultAclInMemoryRuleProvider,The following statement contains a magic number: Idx = 10;  
Magic Number,Comdiv.Wiki,WikiPageLinkRender,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Wiki\WikiPageLinkRender.cs,WikiPageLinkRender,The following statement contains a magic number: Idx = 1000;  
Magic Number,Comdiv.Xml,XmlDslDefinition,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\XmlDslDefinition.cs,PrepareXslt,The following statement contains a magic number: foreach (var parameter in Parameters) {  	var existed = root.Elements ("{" + XSLTNS + "}param").FirstOrDefault (x => x.attr ("name") == parameter.Key);  	var paramelement = new XElement ("{" + XSLTNS + "}param"' new XAttribute ("name"' parameter.Key));  	if (null != existed) {  		existed.ReplaceWith (paramelement);  		continue;  	}  	var val = parameter.Value;  	if (val.StartsWith ("select:")) {  		paramelement.Add (new XAttribute ("select"' val.Substring (7)));  	}  	else {  		paramelement.Value = val;  	}  	if (null == lastparam) {  		if (null == lastimport) {  			root.AddFirst (paramelement);  		}  		else {  			lastimport.AddAfterSelf (paramelement);  		}  	}  	else {  		lastparam.AddAfterSelf (paramelement);  	}  	lastparam = paramelement;  }  
Magic Number,Comdiv.Xml,XmlDslDefinition,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\XmlDslDefinition.cs,PrepareXslt,The following statement contains a magic number: if (val.StartsWith ("select:")) {  	paramelement.Add (new XAttribute ("select"' val.Substring (7)));  }  else {  	paramelement.Value = val;  }  
Magic Number,Comdiv.Xml,XmlDslDefinition,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\XmlDslDefinition.cs,PrepareXslt,The following statement contains a magic number: paramelement.Add (new XAttribute ("select"' val.Substring (7)));  
Magic Number,Comdiv.Xml.Smart,SmartXml,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\Smart\SmartXml.cs,FilterByXPath,The following statement contains a magic number: if (xpath.like (@"^[\w\d]+$")) {  	xpath = string.Format ("./*[@id='{0}']"' xpath);  }  else if (xpath.like (@"^([\w\d]+)\s+([\w\d]+)$")) {  	var m = Regex.Match (xpath' @"^([\w\d]+)\s+([\w\d]+)$");  	var t = m.Groups [1].Value;  	var id = m.Groups [2].Value;  	xpath = string.Format ("./{0}[@id='{1}']"' t' id);  }  
Magic Number,Comdiv.Xml.Smart,SmartXml,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Xml\Smart\SmartXml.cs,FilterByXPath,The following statement contains a magic number: if (xpath.like (@"^([\w\d]+)\s+([\w\d]+)$")) {  	var m = Regex.Match (xpath' @"^([\w\d]+)\s+([\w\d]+)$");  	var t = m.Groups [1].Value;  	var id = m.Groups [2].Value;  	xpath = string.Format ("./{0}[@id='{1}']"' t' id);  }  
Missing Default,Comdiv.Conversations,ConversationInterceptorBase,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Conversations\ConversationInterceptorBase.cs,Execute,The following switch statement is missing a default case: switch (stage) {  case ConversationLifeCycleStage.Init:  	OnInit (conversation);  	break;  case ConversationLifeCycleStage.Enter:  	OnEnter (conversation);  	break;  case ConversationLifeCycleStage.Leave:  	OnLeave (conversation);  	break;  case ConversationLifeCycleStage.Finish:  	OnFinish (conversation);  	break;  }  
Missing Default,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,ResolveTypeByWellKnownName,The following switch statement is missing a default case: switch (name) {  case "int":  	return typeof(int);  case "str":  	return typeof(string);  case "date":  	return typeof(DateTime);  case "bool":  	return typeof(bool);  case "decimal":  	return typeof(decimal);  }  
Missing Default,Comdiv.Extensions,ReflectionExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Extensions\ReflectionExtensions.cs,ResolveWellKnownName,The following switch statement is missing a default case: switch (type.Name) {  case "Int32":  	return "int";  case "String":  	return "str";  case "DateTime":  	return "date";  case "Boolean":  	return "bool";  case "Decimal":  	return "decimal";  }  
Missing Default,Comdiv.Persistence,StorageQueryStep,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Core\Persistence\StorageQueryStep.cs,internalProcess,The following switch statement is missing a default case: switch (query.QueryType) {  case StorageQueryType.Delete:  	doDelete ();  	break;  case StorageQueryType.Exists:  	query.Result = getExists ();  	break;  case StorageQueryType.Load:  	query.Result = getLoad ();  	break;  case StorageQueryType.Query:  	var result = getQuery ();  	query.Result = result;  	break;  case StorageQueryType.Save:  	doSave ();  	break;  case StorageQueryType.Supports:  	query.Result = getSupport ();  	break;  case StorageQueryType.Resolve:  	query.Result = query.RealType;  	break;  case StorageQueryType.New:  	query.Result = query.RealType.create ();  	break;  case StorageQueryType.Refresh:  	doRefresh (query.Target);  	break;  case StorageQueryType.Custom1:  	onCustom (1);  	break;  case StorageQueryType.Custom2:  	onCustom (2);  	break;  case StorageQueryType.Custom3:  	onCustom (3);  	break;  case StorageQueryType.Custom4:  	onCustom (4);  	break;  case StorageQueryType.Custom5:  	onCustom (5);  	break;  }  
