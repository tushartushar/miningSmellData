Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,standard,Cyclomatic complexity of the method is 13
Complex Method,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,Cyclomatic complexity of the method is 12
Complex Method,Comdiv.Persistence,DataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DataExtensions.cs,setByCondition,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Persistence,DataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DataExtensions.cs,Prepare,Cyclomatic complexity of the method is 11
Complex Method,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,Process,Cyclomatic complexity of the method is 21
Complex Method,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getByHql,Cyclomatic complexity of the method is 8
Complex Method,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,Cyclomatic complexity of the method is 11
Long Parameter List,Comdiv.Inversion,WindsoreContainerExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Inversion\WindsoreContainerExtensions.cs,RegisterTransient,The method has 6 parameters.
Long Parameter List,Comdiv.Inversion,WindsoreContainerExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Inversion\WindsoreContainerExtensions.cs,RegisterService,The method has 6 parameters.
Long Parameter List,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,standard,The method has 9 parameters.
Long Parameter List,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The method has 6 parameters.
Long Parameter List,Comdiv.Persistence,DataExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DataExtensions.cs,Prepare,The method has 5 parameters.
Long Parameter List,Comdiv.Persistence,ResourceScriptRuner,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\ResourceScriptRuner.cs,Run,The method has 5 parameters.
Long Statement,Comdiv.Model.Mapping,Automap,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\Automap.cs,proceedWithRef,The length of the statement  "	var method = this.GetType ().GetMethod ("References"' BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.InvokeMethod' null' CallingConventions.Standard' new[] { " is 172.
Long Statement,Comdiv.Model.Mapping,Automap,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\Automap.cs,proceedWithRef,The length of the statement  "	            var method = this.GetType().GetMethod("References"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod' null' CallingConventions.Standard' new[] { typeof(Member)' typeof(string) }' null);" is 208.
Long Statement,Comdiv.Model.Mapping,Automap,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\Automap.cs,proceedWithMany,The length of the statement  "	var method = this.GetType ().GetMethod ("HasMany"' BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.InvokeMethod' null' CallingConventions.Standard' new[] { " is 169.
Long Statement,Comdiv.Model.Mapping,Automap,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\Automap.cs,proceedWithMany,The length of the statement  "	            var method = this.GetType().GetMethod("HasMany"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod' null' CallingConventions.Standard' new[] { typeof(Member) }' null);" is 189.
Long Statement,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,standard,The length of the statement  "	var rewrited = Container.all<IMapTableRewriter<T>> ().Select (x => x.GetTableName ()).FirstOrDefault (x => string.IsNullOrWhiteSpace (x)); " is 138.
Long Statement,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The length of the statement  "		mapproperty = mapproperty ?? property.toBasePropertyInfo ().GetCustomAttributes (typeof(MapAttribute)' true).OfType<MapAttribute> ().LastOrDefault (); " is 150.
Long Statement,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The length of the statement  "		if (property.Name == "Version" || property.Name == "Id" || property.Name == "Code" || property.Name == "Name" || property.Name == "Uid") { " is 138.
Long Statement,Comdiv.Persistence,DefaultHibernatePropertyApplyerImpl,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DefaultHibernatePropertyApplyerImpl.cs,internalApply,The length of the statement  "	var prop = item.GetType ().GetProperty (property' BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase); " is 121.
Long Statement,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,Process,The length of the statement  "			throw new Exception ("erorr sql connection: " + myapp.ioc.get<IConnectionsSource> ().Get (query.System).ConnectionString); " is 122.
Long Statement,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getExists,The length of the statement  "			return session.CreateCriteria (query.RealType).Add (Restrictions.Eq ("Id"' query.PrimaryKey)).SetProjection (Projections.Property ("Id")).UniqueResult () != null; " is 162.
Long Statement,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getExists,The length of the statement  "		return session.CreateCriteria (query.RealType).Add (Restrictions.Eq ("Code"' query.BizCode)).SetProjection (Projections.Property ("Id")).UniqueResult () != null; " is 161.
Long Statement,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getLoad,The length of the statement  "		return session.CreateCriteria (query.RealType' "this").Add (Restrictions.Eq ("Code"' query.Key.ToString ())).UniqueResult (); " is 125.
Long Statement,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getQuery,The length of the statement  "			return ((DetachedCriteria)query.CommonQueryObjects.FirstOrDefault ()).GetExecutableCriteria (session).SetFlushMode (FlushMode.Never).List (); " is 141.
Long Statement,Comdiv.Persistence,LinqExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\LinqExtensions.cs,ToSqlString,The length of the statement  "		var translators = translatorFactory.CreateQueryTranslators (nhLinqExpression.Key' nhLinqExpression' null' false' sessionImp.EnabledFilters' sessionImp.Factory); " is 160.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return Restrictions.Or ((ICriterion)getByBinaryExpression ((BinaryExpression)expression.Left)' (ICriterion)getByBinaryExpression ((BinaryExpression)expression.Right)); " is 167.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return Restrictions.And ((ICriterion)getByBinaryExpression ((BinaryExpression)expression.Left)' (ICriterion)getByBinaryExpression ((BinaryExpression)expression.Right)); " is 168.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "	var proptest = expression.Right is MemberExpression && ((MemberExpression)expression.Right).Expression is ParameterExpression && ((MemberExpression)expression.Right).Member.MemberType == MemberTypes.Property; " is 208.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return proptest ? Restrictions.EqProperty (propname' altpropname) : Restrictions.Eq (propname' Expression.Lambda (expression.Right).Compile ().DynamicInvoke (null)); " is 165.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return Restrictions.Not (proptest ? Restrictions.EqProperty (propname' altpropname) : Restrictions.Eq (propname' Expression.Lambda (expression.Right).Compile ().DynamicInvoke (null))); " is 184.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return proptest ? Restrictions.GtProperty (propname' altpropname) : Restrictions.Gt (propname' Expression.Lambda (expression.Right).Compile ().DynamicInvoke (null)); " is 165.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return proptest ? Restrictions.GeProperty (propname' altpropname) : Restrictions.Ge (propname' Expression.Lambda (expression.Right).Compile ().DynamicInvoke (null)); " is 165.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return proptest ? Restrictions.LtProperty (propname' altpropname) : Restrictions.Lt (propname' Expression.Lambda (expression.Right).Compile ().DynamicInvoke (null)); " is 165.
Long Statement,Comdiv.Persistence,ByExpressionsNHibernateQueryExecutor,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\FluentNHibernateQueryExtensions.cs,getByBinaryExpression,The length of the statement  "		return proptest ? Restrictions.LeProperty (propname' altpropname) : Restrictions.Le (propname' Expression.Lambda (expression.Right).Compile ().DynamicInvoke (null)); " is 165.
Long Statement,Comdiv.Persistence,HibernateQuickConfigurationExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateQuickConfigurationExtensions.cs,setupHibernate,The length of the statement  "		//NOTE:assume that NHibernate not supplied at all!!!! it's not mistake - people just don't want use ORM but app call this method " is 128.
Long Statement,Comdiv.Persistence,HibernateQuickConfigurationExtensions,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateQuickConfigurationExtensions.cs,setupHibernate,The length of the statement  "	container.ensureService<IConfigurationProvider' DefaultConfigurationProvider> ("default.hibernate.configuration.provider").ensureService<ISessionFactoryProvider' DefaultSessionFactoryProvider> ("default.hibernate.factory.provider").ensureService<IStorage' HibernateStorage> ("default.hibernate.storage").AddTransient ("default.temporary.current.session"' typeof(TemporaryTransactionSession)).AddTransient ("http.session.clear"' typeof(HttpContextSessionCleaner)).AddTransient ("default.hibernate.applyer"' typeof(HibernatePropertyApplyer)).AddTransient ("default.hibernate.applyer.impl"' typeof(DefaultHibernatePropertyApplyerImpl)); " is 633.
Complex Conditional,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The conditional expression  "property.Name == "Version" || property.Name == "Id" || property.Name == "Code" || property.Name == "Name" || property.Name == "Uid""  is complex.
Empty Catch Block,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getLoad,The method has an empty catch block.
Magic Number,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,standard,The following statement contains a magic number: if (Is<T' IWithName> (excludeModelTypes)) {  	#if !LIB2  	var map_ = map.Map (i => ((IWithName)i).Name' "name").WithLengthOf (20000);  	if (!Is<T' IWithCode> ()) {  		map_.Unique ().Not.Nullable ();  	}  	#else  	                var map_ = map.Map(i => ((IWithName)i).Name' "name").Length(20000);                 if (!Is<T' IWithCode>())                 {                     map_.Unique().Not.Nullable();                 } #endif  }  
Magic Number,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The following statement contains a magic number: foreach (var property in typeof(T).GetProperties ()) {  	var mapproperty = property.GetCustomAttributes (typeof(MapAttribute)' true).OfType<MapAttribute> ().LastOrDefault ();  	mapproperty = mapproperty ?? property.toBasePropertyInfo ().GetCustomAttributes (typeof(MapAttribute)' true).OfType<MapAttribute> ().LastOrDefault ();  	#if !LIB2  	if (mymap.GetAllProperties ().FirstOrDefault (x => x.Property.Name == property.Name) != null)  		#else  		                if (mymap.GetAllProperties().FirstOrDefault(x => x.Member.Name == property.Name) != null) #endif  		continue;  	//������� �������� �������� �������� ����� �����������  	if (property.Name == "Version" || property.Name == "Id" || property.Name == "Code" || property.Name == "Name" || property.Name == "Uid") {  		continue;  		//HACK: ������ �������������� �� �������  	}  	if (property.PropertyType == typeof(DateRange)) {  		continue;  		;  	}  	if (null != mapproperty) {  		var column = mapproperty.ColumnName;  		if (string.IsNullOrWhiteSpace (column)) {  			column = property.Name.ToLower ();  		}  		var notnull = mapproperty.NotNull;  		var pm = mymap.Map (property' column);  		if (notnull) {  			pm.Not.Nullable ();  		}  		if (null != mapproperty.CustomType) {  			#if LIB2  			                        pm.CustomType(mapproperty.CustomType); #else  			pm.CustomTypeIs (mapproperty.CustomType);  			#endif  		}  		if (mapproperty.Formula.hasContent ()) {  			#if !LIB2  			pm.FormulaIs (mapproperty.Formula);  			#else  			                        pm.Formula(mapproperty.Formula); #endif  		}  		if (mapproperty.UseMaxLength) {  			pm.Length (2147483647);  		}  	}  }  
Magic Number,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The following statement contains a magic number: if (null != mapproperty) {  	var column = mapproperty.ColumnName;  	if (string.IsNullOrWhiteSpace (column)) {  		column = property.Name.ToLower ();  	}  	var notnull = mapproperty.NotNull;  	var pm = mymap.Map (property' column);  	if (notnull) {  		pm.Not.Nullable ();  	}  	if (null != mapproperty.CustomType) {  		#if LIB2  		                        pm.CustomType(mapproperty.CustomType); #else  		pm.CustomTypeIs (mapproperty.CustomType);  		#endif  	}  	if (mapproperty.Formula.hasContent ()) {  		#if !LIB2  		pm.FormulaIs (mapproperty.Formula);  		#else  		                        pm.Formula(mapproperty.Formula); #endif  	}  	if (mapproperty.UseMaxLength) {  		pm.Length (2147483647);  	}  }  
Magic Number,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The following statement contains a magic number: if (mapproperty.UseMaxLength) {  	pm.Length (2147483647);  }  
Magic Number,Comdiv.Model.Mapping,ClassMapExtension,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Model\Mapping\ClassMapExtension.cs,processMaps,The following statement contains a magic number: pm.Length (2147483647);  
Magic Number,Comdiv.Persistence,DefaultHibernatePropertyApplyerImpl,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DefaultHibernatePropertyApplyerImpl.cs,DefaultHibernatePropertyApplyerImpl,The following statement contains a magic number: this.Idx = 100000;  
Magic Number,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getByHql,The following statement contains a magic number: if (hql.like (@"(\b|^)top\s+\d+\s+")) {  	top = hql.find (@"(\b|^)top\s+(\d+)\s+"' 2).toInt ();  	hql = hql.replace (@"(\b|^)top\s+\d+"' "");  }  
Magic Number,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,getByHql,The following statement contains a magic number: top = hql.find (@"(\b|^)top\s+(\d+)\s+"' 2).toInt ();  
Magic Number,Comdiv.Model,DefaultMaxVersionProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DefaultMaxVersionProvider.cs,GetMaxVersion,The following statement contains a magic number: return new DateTime (1980' 1' 1);  
Magic Number,Comdiv.Model,DefaultMaxVersionProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DefaultMaxVersionProvider.cs,GetMaxVersion,The following statement contains a magic number: lock (this) {  	var result_ = new DateTime (1900' 1' 1);  	if (typeof(IWithVersion).IsAssignableFrom (typeof(T))) {  		var crit = Container.getCriteria<T> ();  		if (null == crit)  			return result_;  		var res = crit.SetProjection (Projections.Max ("Version")).UniqueResult ();  		DateTime result = new DateTime (1900' 1' 1);  		if (res != null) {  			result = (DateTime)res;  		}  		if (result > result_) {  			result_ = result;  		}  	}  	return result_;  }  
Magic Number,Comdiv.Model,DefaultMaxVersionProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DefaultMaxVersionProvider.cs,GetMaxVersion,The following statement contains a magic number: lock (this) {  	var result_ = new DateTime (1900' 1' 1);  	if (typeof(IWithVersion).IsAssignableFrom (typeof(T))) {  		var crit = Container.getCriteria<T> ();  		if (null == crit)  			return result_;  		var res = crit.SetProjection (Projections.Max ("Version")).UniqueResult ();  		DateTime result = new DateTime (1900' 1' 1);  		if (res != null) {  			result = (DateTime)res;  		}  		if (result > result_) {  			result_ = result;  		}  	}  	return result_;  }  
Magic Number,Comdiv.Model,DefaultMaxVersionProvider,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\DefaultMaxVersionProvider.cs,GetMaxVersion,The following statement contains a magic number: if (typeof(IWithVersion).IsAssignableFrom (typeof(T))) {  	var crit = Container.getCriteria<T> ();  	if (null == crit)  		return result_;  	var res = crit.SetProjection (Projections.Max ("Version")).UniqueResult ();  	DateTime result = new DateTime (1900' 1' 1);  	if (res != null) {  		result = (DateTime)res;  	}  	if (result > result_) {  		result_ = result;  	}  }  
Missing Default,Comdiv.Persistence,HibernateStorageImplementator,C:\repos\Qorpent_comdiv.oldcore\Comdiv.Dependency\Persistence\HibernateStorageImplementator.cs,Process,The following switch statement is missing a default case: switch (query.QueryType) {  case StorageQueryType.Delete:  	doDelete ();  	break;  case StorageQueryType.Exists:  	query.Result = getExists ();  	break;  case StorageQueryType.Load:  	query.Result = getLoad ();  	break;  case StorageQueryType.Query:  	var result = getQuery ();  	query.Result = result;  	break;  case StorageQueryType.Save:  	doSave ();  	break;  case StorageQueryType.Refresh:  	session.Refresh (query.Target);  	break;  }  
