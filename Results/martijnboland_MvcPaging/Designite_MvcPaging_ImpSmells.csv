Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,Cyclomatic complexity of the method is 17
Long Parameter List,MvcPaging,PagingExtensions,C:\repos\martijnboland_MvcPaging\src\MvcPaging\PagingExtensions.cs,Pager,The method has 5 parameters. Parameters: htmlHelper' pageSize' currentPage' totalItemCount' ajaxOptions
Long Parameter List,MvcPaging,PagingExtensions,C:\repos\martijnboland_MvcPaging\src\MvcPaging\PagingExtensions.cs,Pager,The method has 5 parameters. Parameters: htmlHelper' pageSize' currentPage' totalItemCount' ajaxOptions
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                // Set page count directly from total item count instead of calculating. Then calculate totalItemCount based on pageCount and pageSize; " is 135.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "            var model = new PaginationModel { PageSize = this.pageSize' CurrentPage = this.currentPage' TotalItemCount = this.totalItemCount' PageCount = pageCount }; " is 154.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                model.PaginationLinks.Add(new PaginationLink { Active = (currentPage > 1 ? true : false)' DisplayText = this.pagerOptions.FirstPageText' DisplayTitle = this.pagerOptions.FirstPageTitle' PageIndex = 1' Url = generateUrl(1) }); " is 225.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                model.PaginationLinks.Add(currentPage > 1 ? new PaginationLink { Active = true' DisplayText = previousPageText' DisplayTitle = this.pagerOptions.PreviousPageTitle' PageIndex = currentPage - 1' Url = generateUrl(currentPage - 1) } : new PaginationLink { Active = false' DisplayText = previousPageText }); " is 303.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 1' DisplayText = "1"' Url = generateUrl(1) }); " is 120.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                    model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 2' DisplayText = "2"' Url = generateUrl(2) }); " is 120.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                    model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = i' IsCurrent = true' DisplayText = i.ToString() }); " is 125.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                    model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = i' DisplayText = i.ToString()' Url = generateUrl(i) }); " is 129.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                    model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = pageCount' DisplayText = (pageCount).ToString()' Url = generateUrl(pageCount) }); " is 155.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "	    		model.PaginationLinks.Add(currentPage < pageCount ? new PaginationLink { Active = true' PageIndex = currentPage + 1' DisplayText = nextPageText' DisplayTitle = this.pagerOptions.NextPageTitle' Url = generateUrl(currentPage + 1) } : new PaginationLink { Active = false' DisplayText = nextPageText }); " is 299.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The length of the statement  "                model.PaginationLinks.Add(new PaginationLink { Active = (currentPage < pageCount ? true : false)' DisplayText = this.pagerOptions.LastPageText' DisplayTitle = this.pagerOptions.LastPageTitle' PageIndex = pageCount' Url = generateUrl(pageCount) }); " is 247.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,ToHtmlString,The length of the statement  "                            linkBuilder.AppendFormat(" href=\"{0}\" title=\"{1}\">{2}</a>"' paginationLink.Url' paginationLink.DisplayTitle' paginationLink.DisplayText); " is 141.
Long Statement,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,GeneratePageUrl,The length of the statement  "                pageLinkValueDictionary = new RouteValueDictionary(this.pagerOptions.RouteValues) { { this.pagerOptions.PageRouteValueKey' pageNumber } }; " is 138.
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (pageCount > nrOfPagesToDisplay)              {                  var middle = (int)Math.Ceiling(nrOfPagesToDisplay / 2d) - 1;                  var below = (currentPage - middle);                  var above = (currentPage + middle);                    if (below < 2)                  {                      above = nrOfPagesToDisplay;                      below = 1;                  }                  else if (above > (pageCount - 2))                  {                      above = pageCount;                      below = (pageCount - nrOfPagesToDisplay + 1);                  }                    start = below;                  end = above;              }
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (pageCount > nrOfPagesToDisplay)              {                  var middle = (int)Math.Ceiling(nrOfPagesToDisplay / 2d) - 1;                  var below = (currentPage - middle);                  var above = (currentPage + middle);                    if (below < 2)                  {                      above = nrOfPagesToDisplay;                      below = 1;                  }                  else if (above > (pageCount - 2))                  {                      above = pageCount;                      below = (pageCount - nrOfPagesToDisplay + 1);                  }                    start = below;                  end = above;              }
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (start > 1)              {                  model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 1' DisplayText = "1"' Url = generateUrl(1) });                  if (start > 3)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 2' DisplayText = "2"' Url = generateUrl(2) });                  }                  if (start > 2)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = false' DisplayText = "..."' IsSpacer = true });                  }              }
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (start > 1)              {                  model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 1' DisplayText = "1"' Url = generateUrl(1) });                  if (start > 3)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 2' DisplayText = "2"' Url = generateUrl(2) });                  }                  if (start > 2)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = false' DisplayText = "..."' IsSpacer = true });                  }              }
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (start > 1)              {                  model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 1' DisplayText = "1"' Url = generateUrl(1) });                  if (start > 3)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 2' DisplayText = "2"' Url = generateUrl(2) });                  }                  if (start > 2)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = false' DisplayText = "..."' IsSpacer = true });                  }              }
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (start > 1)              {                  model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 1' DisplayText = "1"' Url = generateUrl(1) });                  if (start > 3)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = 2' DisplayText = "2"' Url = generateUrl(2) });                  }                  if (start > 2)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = false' DisplayText = "..."' IsSpacer = true });                  }              }
Magic Number,MvcPaging,Pager,C:\repos\martijnboland_MvcPaging\src\MvcPaging\Pager.cs,BuildPaginationModel,The following statement contains a magic number: if (end < pageCount)              {                  if (end < pageCount)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = false' DisplayText = "..."' IsSpacer = true });                  }                  if (end < pageCount - 2)                  {                      model.PaginationLinks.Add(new PaginationLink { Active = true' PageIndex = pageCount' DisplayText = (pageCount).ToString()' Url = generateUrl(pageCount) });                  }              }
