Implementation smell,Namespace,Class,File,Method,Description
Long Statement,EventFlow.TestHelpers,ProcessHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\ProcessHelper.cs,StartExe,The length of the statement  "            if (string.IsNullOrEmpty(workingDirectory)) throw new ArgumentException($"Could not find directory for '{exePath}'"' nameof(exePath));" is 134.
Long Statement,EventFlow.TestHelpers,ProcessHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\ProcessHelper.cs,KillProcessAndChildren,The length of the statement  "            var searcher = new System.Management.ManagementObjectSearcher("Select * From Win32_Process Where ParentProcessID=" + pid);" is 122.
Long Statement,EventFlow.TestHelpers.MsSql,MsSqlDatabase,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\MsSql\MsSqlDatabase.cs,Dispose,The length of the statement  "                masterConnectionString.Execute($"ALTER DATABASE [{ConnectionString.Database}] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;");" is 121.
Long Statement,EventFlow.TestHelpers.Suites,IntegrationTestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\IntegrationTestSuiteForServiceRegistration.cs,PublishingStartAndCompleteTiggerEventsCompletesSaga,The length of the statement  "                await commandBus.PublishAsync(new ThingyRequestSagaStartCommand(thingyId)' CancellationToken.None).ConfigureAwait(false);" is 121.
Long Statement,EventFlow.TestHelpers.Suites,IntegrationTestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\IntegrationTestSuiteForServiceRegistration.cs,PublishingStartAndCompleteTiggerEventsCompletesSaga,The length of the statement  "                await commandBus.PublishAsync(new ThingyRequestSagaCompleteCommand(thingyId)' CancellationToken.None).ConfigureAwait(false);" is 124.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,EventsCanBeStored,The length of the statement  "            var domainEvents = await testAggregate.CommitAsync(EventStore' SnapshotStore' SourceId.New' CancellationToken.None).ConfigureAwait(false);" is 138.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,DomainEventCanBeLoaded,The length of the statement  "            var domainEvents = await EventStore.LoadAllEventsAsync(GlobalPosition.Start' 200' CancellationToken.None).ConfigureAwait(false);" is 128.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The length of the statement  "            var domainEvents = await EventStore.LoadEventsAsync<ThingyAggregate' ThingyId>(id' 3' CancellationToken.None).ConfigureAwait(false);" is 132.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,NextPositionIsIdOfNextEvent,The length of the statement  "            var domainEvents = await EventStore.LoadAllEventsAsync(GlobalPosition.Start' 10' CancellationToken.None).ConfigureAwait(false);" is 127.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingFirstPageShouldLoadCorrectEvents,The length of the statement  "            var domainEvents = await EventStore.LoadAllEventsAsync(GlobalPosition.Start' 200' CancellationToken.None).ConfigureAwait(false);" is 128.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingFirstPageShouldLoadCorrectEvents,The length of the statement  "            domainEvents.DomainEvents.OfType<IDomainEvent<ThingyAggregate' ThingyId' ThingyPingEvent>>().Should().Contain(e => e.AggregateEvent.PingId == pingIds[0]);" is 154.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingFirstPageShouldLoadCorrectEvents,The length of the statement  "            domainEvents.DomainEvents.OfType<IDomainEvent<ThingyAggregate' ThingyId' ThingyPingEvent>>().Should().Contain(e => e.AggregateEvent.PingId == pingIds[1]);" is 154.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,OptimisticConcurrency,The length of the statement  "            await ThrowsExceptionAsync<OptimisticConcurrencyException>(() => aggregate2.CommitAsync(EventStore' SnapshotStore' SourceId.New' CancellationToken.None)).ConfigureAwait(false);" is 176.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,AggregatesCanUpdatedAfterOptimisticConcurrency,The length of the statement  "            await ThrowsExceptionAsync<OptimisticConcurrencyException>(() => aggregate2.CommitAsync(EventStore' SnapshotStore' SourceId.New' CancellationToken.None)).ConfigureAwait(false);" is 176.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanStoreMultipleMessages,The length of the statement  "            var returnedThingyMessages = await QueryProcessor.ProcessAsync(new ThingyGetMessagesQuery(thingyId)).ConfigureAwait(false);" is 123.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanHandleMultipleMessageAtOnce,The length of the statement  "            var returnedThingyMessages = await QueryProcessor.ProcessAsync(new ThingyGetMessagesQuery(thingyId)).ConfigureAwait(false);" is 123.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanStoreMessageHistory,The length of the statement  "            var returnedThingyMessages = await QueryProcessor.ProcessAsync(new ThingyGetMessagesQuery(thingyId)).ConfigureAwait(false);" is 123.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CreateAndPublishThingyMessagesAsync,The length of the statement  "            await Task.WhenAll(thingyMessages.Select(m => CommandBus.PublishAsync(new ThingyAddMessageCommand(thingyId' m)))).ConfigureAwait(false);" is 136.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForScheduler,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForScheduler.cs,Options,The length of the statement  "                .RegisterServices(sr => sr.Register(c => (ISubscribeAsynchronousTo<ThingyAggregate' ThingyId' ThingyPingEvent>)_testAsynchronousSubscriber))" is 140.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForScheduler,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForScheduler.cs,ScheduleAsyncWithDateTime,The length of the statement  "            await ValidateScheduleHappens((j' s) => s.ScheduleAsync(j' DateTimeOffset.Now.AddSeconds(1)' CancellationToken.None)).ConfigureAwait(false);" is 140.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForScheduler,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForScheduler.cs,ScheduleAsyncWithTimeSpan,The length of the statement  "            await ValidateScheduleHappens((j' s) => s.ScheduleAsync(j' TimeSpan.FromSeconds(1)' CancellationToken.None)).ConfigureAwait(false);" is 131.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForScheduler,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForScheduler.cs,ValidateScheduleHappens,The length of the statement  "                var testAggregate = await AggregateStore.LoadAsync<ThingyAggregate' ThingyId>(testId' CancellationToken.None).ConfigureAwait(false);" is 132.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForServiceRegistration.cs,AggregateFactoryWorks,The length of the statement  "            var customAggregate = await aggregateFactory.CreateNewAggregateAsync<CustomAggregate' CustomId>(customId).ConfigureAwait(false);" is 128.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForSnapshotStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForSnapshotStore.cs,PurgeSnapshotsAsync_NoneExistingSnapshotDoesNotThrow,The length of the statement  "            Assert.DoesNotThrowAsync(async () => await SnapshotPersistence.PurgeSnapshotsAsync(typeof(ThingyAggregate)' CancellationToken.None));" is 133.
Long Statement,EventFlow.TestHelpers.Suites,TestSuiteForSnapshotStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForSnapshotStore.cs,OldSnapshotsAreUpgradedToLatestVersionAndAppliedToAggregate,The length of the statement  "            thingyAggregate.SnapshotVersions.Should().Contain(new[] {ThingySnapshotVersion.Version1' ThingySnapshotVersion.Version2});" is 122.
Empty Catch Block,EventFlow.TestHelpers,ProcessHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\ProcessHelper.cs,KillProcessAndChildren,The method has an empty catch block.
Magic Number,EventFlow.TestHelpers,HttpHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\HttpHelper.cs,GetAsync,The following statement contains a magic number: content.Length < 1024
Magic Number,EventFlow.TestHelpers,HttpHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\HttpHelper.cs,DeleteAsync,The following statement contains a magic number: content.Length < 1024
Magic Number,EventFlow.TestHelpers,TcpHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\TcpHelper.cs,GetFreePort,The following statement contains a magic number: var port = Random.Next(10000' 60000);
Magic Number,EventFlow.TestHelpers,TcpHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\TcpHelper.cs,GetFreePort,The following statement contains a magic number: var port = Random.Next(10000' 60000);
Magic Number,EventFlow.TestHelpers,WaitHelper,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\WaitHelper.cs,WaitAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(0.25)).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Extensions,ProcessExtensions,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Extensions\ProcessExtensions.cs,WaitForOutput,The following statement contains a magic number: var foundOutput = autoResetEvent.WaitOne(TimeSpan.FromSeconds(30));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,AggregateEventStreamsAreSeperate,The following statement contains a magic number: aggregate2.Version.Should().Be(2);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,DomainEventCanBeLoaded,The following statement contains a magic number: var domainEvents = await EventStore.LoadAllEventsAsync(GlobalPosition.Start' 200' CancellationToken.None).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,DomainEventCanBeLoaded,The following statement contains a magic number: domainEvents.DomainEvents.Count.Should().BeGreaterOrEqualTo(2);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: await PublishPingCommandsAsync(id' 5).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: var domainEvents = await EventStore.LoadEventsAsync<ThingyAggregate' ThingyId>(id' 3' CancellationToken.None).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: domainEvents.Should().HaveCount(3);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: domainEvents.ElementAt(0).AggregateSequenceNumber.Should().Be(3);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: domainEvents.ElementAt(1).AggregateSequenceNumber.Should().Be(4);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: domainEvents.ElementAt(2).AggregateSequenceNumber.Should().Be(5);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingOfEventsCanStartLater,The following statement contains a magic number: domainEvents.ElementAt(2).AggregateSequenceNumber.Should().Be(5);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,AggregateCanHaveMultipleCommits,The following statement contains a magic number: aggregate.PingsReceived.Count.Should().Be(2);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,NextPositionIsIdOfNextEvent,The following statement contains a magic number: var domainEvents = await EventStore.LoadAllEventsAsync(GlobalPosition.Start' 10' CancellationToken.None).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingFirstPageShouldLoadCorrectEvents,The following statement contains a magic number: aggregate.Ping(pingIds[2]);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadingFirstPageShouldLoadCorrectEvents,The following statement contains a magic number: var domainEvents = await EventStore.LoadAllEventsAsync(GlobalPosition.Start' 200' CancellationToken.None).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsHaveAggregateSequenceNumbers,The following statement contains a magic number: var pingIds = Many<PingId>(10);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsHaveAggregateSequenceNumbers,The following statement contains a magic number: PublishedDomainEvents.Count.Should().Be(10);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsHaveAggregateSequenceNumbers,The following statement contains a magic number: PublishedDomainEvents.Select(d => d.AggregateSequenceNumber).Should().BeEquivalentTo(Enumerable.Range(1' 10));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsContinueAggregateSequenceNumbers,The following statement contains a magic number: var pingIds = Many<PingId>(10);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsContinueAggregateSequenceNumbers,The following statement contains a magic number: PublishedDomainEvents.Count.Should().Be(10);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsContinueAggregateSequenceNumbers,The following statement contains a magic number: PublishedDomainEvents.Select(d => d.AggregateSequenceNumber).Should().BeEquivalentTo(Enumerable.Range(11' 10));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,PublishedDomainEventsContinueAggregateSequenceNumbers,The following statement contains a magic number: PublishedDomainEvents.Select(d => d.AggregateSequenceNumber).Should().BeEquivalentTo(Enumerable.Range(11' 10));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadAllEventsAsyncFindsEventsAfterLargeGaps,The following statement contains a magic number: var ids = Enumerable.Range(0' 10)                 .Select(i => ThingyId.New)                 .ToArray();
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadAllEventsAsyncFindsEventsAfterLargeGaps,The following statement contains a magic number: ids.Skip(1).Take(5)
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadAllEventsAsyncFindsEventsAfterLargeGaps,The following statement contains a magic number: var result = await EventStore                 .LoadAllEventsAsync(GlobalPosition.Start' 5' CancellationToken.None)                 .ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForEventStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForEventStore.cs,LoadAllEventsAsyncFindsEventsAfterLargeGaps,The following statement contains a magic number: result.DomainEvents.Should().HaveCount(5);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,ReadModelReceivesEvent,The following statement contains a magic number: await PublishPingCommandsAsync(id' 5).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,ReadModelReceivesEvent,The following statement contains a magic number: readModel.PingsReceived.Should().Be(5);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,ReadModelVersionShouldMatchAggregate,The following statement contains a magic number: const int expectedVersion = 5;
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanStoreMultipleMessages,The following statement contains a magic number: var thingyMessages = await CreateAndPublishThingyMessagesAsync(thingyId' 5).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanStoreMultipleMessages,The following statement contains a magic number: await CreateAndPublishThingyMessagesAsync(otherThingyId' 3).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanHandleMultipleMessageAtOnce,The following statement contains a magic number: var pingIds = Many<PingId>(5);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanHandleMultipleMessageAtOnce,The following statement contains a magic number: var thingyMessages = Many<ThingyMessage>(7);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,RePopulateHandlesManyAggregates,The following statement contains a magic number: await PublishPingCommandsAsync(id1' 3).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,RePopulateHandlesManyAggregates,The following statement contains a magic number: await PublishPingCommandsAsync(id2' 5).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,RePopulateHandlesManyAggregates,The following statement contains a magic number: readModel1.PingsReceived.Should().Be(3);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,RePopulateHandlesManyAggregates,The following statement contains a magic number: readModel2.PingsReceived.Should().Be(5);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,PopulateCreatesReadModels,The following statement contains a magic number: await PublishPingCommandsAsync(id' 2).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,PopulateCreatesReadModels,The following statement contains a magic number: readModel.PingsReceived.Should().Be(2);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,MultipleUpdatesAreHandledCorrect,The following statement contains a magic number: i < 5
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,OptimisticConcurrencyCheck,The following statement contains a magic number: waitState.ReadStoreReady.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,OptimisticConcurrencyCheck,The following statement contains a magic number: readModel.PingsReceived.Should().Be(3);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForReadModelStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForReadModelStore.cs,CanStoreMessageHistory,The following statement contains a magic number: var thingyMessages = Fixture.CreateMany<ThingyMessage>(5).ToList();
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForScheduler,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForScheduler.cs,ValidateScheduleHappens,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(0.2)).ConfigureAwait(false);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForScheduler,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForScheduler.cs,ValidateScheduleHappens,The following statement contains a magic number: DateTimeOffset.Now < start + TimeSpan.FromSeconds(20)
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForServiceRegistration.cs,ValidateRegistrationsShouldDispose,The following statement contains a magic number: createdCount.Should().Be(2);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForServiceRegistration.cs,ValidateRegistrationsShouldDispose,The following statement contains a magic number: createdCount.Should().Be(3);
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForServiceRegistration.cs,ValidateRegistrationsShouldDispose,The following statement contains a magic number: service.Verify(m => m.Dispose()' Times.Exactly(2));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForServiceRegistration,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForServiceRegistration.cs,ValidateRegistrationsShouldDispose,The following statement contains a magic number: service.Verify(m => m.Dispose()' Times.Exactly(3));
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForSnapshotStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForSnapshotStore.cs,SnapshotsCanBeSavedOutOfOrder,The following statement contains a magic number: const int aggregateSequenceNumberHigh = 84;
Magic Number,EventFlow.TestHelpers.Suites,TestSuiteForSnapshotStore,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Suites\TestSuiteForSnapshotStore.cs,SnapshotsCanBeSavedOutOfOrder,The following statement contains a magic number: const int aggregateSequenceNumberLow = 42;
Missing Default,EventFlow.TestHelpers.Aggregates.Entities,ThingyMessageLocator,C:\research\architectureSmells\repos\rasmus_EventFlow\Source\EventFlow.TestHelpers\Aggregates\Entities\ThingyMessageLocator.cs,GetReadModelIds,The following switch statement is missing a default case: switch (aggregateEvent)             {                 case ThingyMessageAddedEvent messageAddedEvent:                     yield return messageAddedEvent.ThingyMessage.Id.Value;                     break;                  case ThingyMessageHistoryAddedEvent messageHistoryAddedEvent:                     foreach (var message in messageHistoryAddedEvent.ThingyMessages)                     {                         yield return message.Id.Value;                     }                     break;             }
