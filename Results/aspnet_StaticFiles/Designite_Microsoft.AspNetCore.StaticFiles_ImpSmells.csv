Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNetCore.StaticFiles,HtmlDirectoryFormatter,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\HtmlDirectoryFormatter.cs,GenerateContentAsync,The method has 115 lines of code.
Long Parameter List,Microsoft.AspNetCore.StaticFiles,StaticFileContext,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\StaticFileContext.cs,StaticFileContext,The method has 6 parameters. Parameters: context' options' matchUrl' logger' fileProvider' contentTypeProvider
Long Statement,Microsoft.AspNetCore.StaticFiles,DefaultFilesMiddleware,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\DefaultFilesMiddleware.cs,Invoke,The length of the statement  "                                context.Response.Headers[HeaderNames.Location] = context.Request.PathBase + context.Request.Path + "/" + context.Request.QueryString; " is 133.
Long Statement,Microsoft.AspNetCore.StaticFiles,DirectoryBrowserMiddleware,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\DirectoryBrowserMiddleware.cs,Invoke,The length of the statement  "                    context.Response.Headers[HeaderNames.Location] = context.Request.PathBase + context.Request.Path + "/" + context.Request.QueryString; " is 133.
Long Statement,Microsoft.AspNetCore.StaticFiles,StaticFileContext,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\StaticFileContext.cs,LookupFileInfo,The length of the statement  "                _lastModified = new DateTimeOffset(last.Year' last.Month' last.Day' last.Hour' last.Minute' last.Second' last.Offset).ToUniversalTime(); " is 136.
Long Statement,Microsoft.AspNetCore.StaticFiles,StaticFileContext,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\StaticFileContext.cs,ComputeIfRange,The length of the statement  "                else if (_etag != null && ifRangeHeader.EntityTag != null && !ifRangeHeader.EntityTag.Compare(_etag' useStrongComparison: true)) " is 128.
Long Statement,Microsoft.AspNetCore.StaticFiles,StaticFileContext,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\StaticFileContext.cs,SendAsync,The length of the statement  "                    await StreamCopyOperation.CopyToAsync(readStream' _response.Body' _length' StreamCopyBufferSize' _context.RequestAborted); " is 122.
Magic Number,Microsoft.AspNetCore.StaticFiles,DefaultFilesMiddleware,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\DefaultFilesMiddleware.cs,Invoke,The following statement contains a magic number: if (Helpers.IsGetOrHeadMethod(context.Request.Method)                  && Helpers.TryMatchPath(context' _matchUrl' forDirectory: true' subpath: out subpath))              {                  var dirContents = _fileProvider.GetDirectoryContents(subpath.Value);                  if (dirContents.Exists)                  {                      // Check if any of our default files exist.                      for (int matchIndex = 0; matchIndex < _options.DefaultFileNames.Count; matchIndex++)                      {                          string defaultFile = _options.DefaultFileNames[matchIndex];                          var file = _fileProvider.GetFileInfo(subpath + defaultFile);                          // TryMatchPath will make sure subpath always ends with a "/" by adding it if needed.                          if (file.Exists)                          {                              // If the path matches a directory but does not end in a slash' redirect to add the slash.                              // This prevents relative links from breaking.                              if (!Helpers.PathEndsInSlash(context.Request.Path))                              {                                  context.Response.StatusCode = 301;                                  context.Response.Headers[HeaderNames.Location] = context.Request.PathBase + context.Request.Path + "/" + context.Request.QueryString;                                  return Constants.CompletedTask;                              }                                // Match found' re-write the url. A later middleware will actually serve the file.                              context.Request.Path = new PathString(context.Request.Path.Value + defaultFile);                              break;                          }                      }                  }              }
Magic Number,Microsoft.AspNetCore.StaticFiles,DirectoryBrowserMiddleware,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\DirectoryBrowserMiddleware.cs,Invoke,The following statement contains a magic number: if (Helpers.IsGetOrHeadMethod(context.Request.Method)                  && Helpers.TryMatchPath(context' _matchUrl' forDirectory: true' subpath: out subpath)                  && TryGetDirectoryInfo(subpath' out contents))              {                  // If the path matches a directory but does not end in a slash' redirect to add the slash.                  // This prevents relative links from breaking.                  if (!Helpers.PathEndsInSlash(context.Request.Path))                  {                      context.Response.StatusCode = 301;                      context.Response.Headers[HeaderNames.Location] = context.Request.PathBase + context.Request.Path + "/" + context.Request.QueryString;                      return Constants.CompletedTask;                  }                    return _formatter.GenerateContentAsync(context' contents);              }
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logFileServed = LoggerMessage.Define<string' string>(                 logLevel: LogLevel.Information'                 eventId: 2'                 formatString: "Sending file. Request path: '{VirtualPath}'. Physical path: '{PhysicalPath}'");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logPathMismatch = LoggerMessage.Define<string>(                  logLevel: LogLevel.Debug'                  eventId: 3'                  formatString: "The request path {Path} does not match the path filter");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logFileTypeNotSupported = LoggerMessage.Define<string>(                  logLevel: LogLevel.Debug'                  eventId: 4'                  formatString: "The request path {Path} does not match a supported file type");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logFileNotFound = LoggerMessage.Define<string>(                  logLevel: LogLevel.Debug'                  eventId: 5'                  formatString: "The request path {Path} does not match an existing file");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logPathNotModified = LoggerMessage.Define<string>(                  logLevel: LogLevel.Information'                  eventId: 6'                  formatString: "The file {Path} was not modified");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logPreconditionFailed = LoggerMessage.Define<string>(                  logLevel: LogLevel.Information'                  eventId: 7'                  formatString: "Precondition for {Path} failed");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logHandled = LoggerMessage.Define<int' string>(                  logLevel: LogLevel.Debug'                  eventId: 8'                  formatString: "Handled. Status code: {StatusCode} File: {Path}");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logRangeNotSatisfiable = LoggerMessage.Define<string>(                  logLevel: LogLevel.Warning'                  eventId: 9'                  formatString: "Range not satisfiable for {Path}");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logSendingFileRange = LoggerMessage.Define<StringValues' string>(                  logLevel: LogLevel.Information'                  eventId: 10'                  formatString: "Sending {Range} of file {Path}");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logCopyingFileRange = LoggerMessage.Define<StringValues' string>(                  logLevel: LogLevel.Debug'                  eventId: 11'                  formatString: "Copying {Range} of file {Path} to the response body");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logCopyingBytesToResponse = LoggerMessage.Define<long' string' string>(                  logLevel: LogLevel.Debug'                  eventId: 12'                  formatString: "Copying bytes {Start}-{End} of file {Path} to response body");
Magic Number,Microsoft.AspNetCore.StaticFiles,LoggerExtensions,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\LoggerExtensions.cs,LoggerExtensions,The following statement contains a magic number: _logWriteCancelled = LoggerMessage.Define(                  logLevel: LogLevel.Debug'                  eventId: 14'                  formatString: "The file transmission was cancelled");
Magic Number,Microsoft.AspNetCore.StaticFiles,StaticFileContext,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\StaticFileContext.cs,LookupFileInfo,The following statement contains a magic number: if (_fileInfo.Exists)              {                  _length = _fileInfo.Length;                    DateTimeOffset last = _fileInfo.LastModified;                  // Truncate to the second.                  _lastModified = new DateTimeOffset(last.Year' last.Month' last.Day' last.Hour' last.Minute' last.Second' last.Offset).ToUniversalTime();                    long etagHash = _lastModified.ToFileTime() ^ _length;                  _etag = new EntityTagHeaderValue('\"' + Convert.ToString(etagHash' 16) + '\"');              }
Magic Number,Microsoft.AspNetCore.StaticFiles,StaticFileContext,C:\repos\aspnet_StaticFiles\src\Microsoft.AspNetCore.StaticFiles\StaticFileContext.cs,ApplyResponseHeaders,The following statement contains a magic number: if (statusCode < 400)              {                  // these headers are returned for 200' 206' and 304                  // they are not returned for 412 and 416                  if (!string.IsNullOrEmpty(_contentType))                  {                      _response.ContentType = _contentType;                  }                  _responseHeaders.LastModified = _lastModified;                  _responseHeaders.ETag = _etag;                  _responseHeaders.Headers[HeaderNames.AcceptRanges] = "bytes";              }
