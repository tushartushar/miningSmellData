Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetNetworkUpdates,Cyclomatic complexity of the method is 9
Complex Method,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,Search,Cyclomatic complexity of the method is 14
Complex Method,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,CreateShare,Cyclomatic complexity of the method is 9
Complex Method,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,InvitePerson,Cyclomatic complexity of the method is 8
Complex Method,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,InvitePerson,Cyclomatic complexity of the method is 11
Complex Method,LinkedIn.ServiceEntities,ShareContent,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceEntities\ShareContent.cs,WriteContractBody,Cyclomatic complexity of the method is 11
Complex Method,LinkedIn.ServiceEntities,Share,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceEntities\Share.cs,WriteContractBody,Cyclomatic complexity of the method is 8
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,GetConnectionsForCurrentUser,The method has 5 parameters. Parameters: profileFields' start' count' modified' modifiedSince
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,GetConnectionsByMemberId,The method has 6 parameters. Parameters: memberId' profileFields' start' count' modified' modifiedSince
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,GetNetworkUpdates,The method has 5 parameters. Parameters: updateTypes' count' start' after' before
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,GetNetworkUpdates,The method has 6 parameters. Parameters: updateTypes' count' start' after' before' showHiddenMembers
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,GetNetworkUpdates,The method has 7 parameters. Parameters: updateTypes' count' start' after' before' showHiddenMembers' scope
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,Search,The method has 9 parameters. Parameters: keywords' firstName' lastName' companyName' currentCompany' sortCriteria' start' count' profileFields
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,Search,The method has 18 parameters. Parameters: keywords' firstName' lastName' companyName' currentCompany' title' currentTitle' schoolName' currentSchool' countryCode' postalCode' distance' sortCriteria' start' count' profileFields' facetFields' facets
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,CreateShare,The method has 7 parameters. Parameters: comment' title' description' uri' imageUri' visibility' postOnTwitter
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,InvitePerson,The method has 5 parameters. Parameters: personId' subject' body' connectionType' apiRequest
Long Parameter List,LinkedIn,ILinkedInService,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ILinkedInService.cs,InvitePerson,The method has 6 parameters. Parameters: emailAddress' firstName' lastName' subject' body' connectionType
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetConnectionsForCurrentUser,The method has 5 parameters. Parameters: profileFields' start' count' modified' modifiedSince
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetConnectionsByMemberId,The method has 6 parameters. Parameters: memberId' profileFields' start' count' modified' modifiedSince
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetConnections,The method has 6 parameters. Parameters: location' profileFields' start' count' modified' modifiedSince
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetNetworkUpdates,The method has 5 parameters. Parameters: updateTypes' count' start' after' before
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetNetworkUpdates,The method has 6 parameters. Parameters: updateTypes' count' start' after' before' showHiddenMembers
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetNetworkUpdates,The method has 7 parameters. Parameters: updateTypes' count' start' after' before' showHiddenMembers' scope
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,Search,The method has 9 parameters. Parameters: keywords' firstName' lastName' companyName' currentCompany' sortCriteria' start' count' profileFields
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,Search,The method has 18 parameters. Parameters: keywords' firstName' lastName' companyName' currentCompany' title' currentTitle' schoolName' currentSchool' countryCode' postalCode' distance' sortCriteria' start' count' profileFields' facetFields' facets
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,CreateShare,The method has 7 parameters. Parameters: comment' title' description' uri' imageUri' visibility' postOnTwitter
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,InvitePerson,The method has 5 parameters. Parameters: personId' subject' body' connectionType' apiRequest
Long Parameter List,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,InvitePerson,The method has 6 parameters. Parameters: emailAddress' firstName' lastName' subject' body' connectionType
Long Identifier,LinkedIn,Constants,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Constants.cs,,The length of the parameter MemberUrlResourcesFieldSelector is 31.
Long Identifier,LinkedIn,Constants,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Constants.cs,,The length of the parameter ApiStandardProfileRequestFieldSelector is 38.
Long Identifier,LinkedIn,Constants,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Constants.cs,,The length of the parameter RecommendationsReceivedFieldSelector is 36.
Long Statement,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,CreateCookieBasedClient,The length of the statement  "            IConsumerTokenManager tokenManager = new SimpleConsumerTokenManager(consumerKey' consumerSecret' cookieOAuthTokenManager); " is 122.
Long Statement,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetRequest,The length of the statement  "            var webRequest = WebWorker.PrepareAuthorizedRequest(new MessageReceivingEndpoint(location' HttpDeliveryMethods.GetRequest)' GetAccessToken()); " is 142.
Long Statement,LinkedIn,ServiceDescriptions,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceDescriptions.cs,GetLinkedInServiceDescriptionWithAdditionalScope,The length of the statement  "                    String.Format(CultureInfo.InvariantCulture' "{0}{1}?scope={2}"' Constants.ApiOAuthBaseUrl' Constants.RequestTokenResourceName' urlparam)' " is 137.
Long Statement,LinkedIn,ServiceDescriptions,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceDescriptions.cs,GetLinkedInServiceDescriptionWithAdditionalScope,The length of the statement  "                    String.Format(CultureInfo.InvariantCulture' "{0}{1}"' Constants.ApiOAuthBaseUrl' forceAuthorize? Constants.AuthorizeTokenMethod : Constants.AuthenticateMethod)' " is 160.
Long Statement,LinkedIn.ServiceEntities,Share,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceEntities\Share.cs,ReadXml,The length of the statement  "              this.Author = Utility.Utilities.DeserializeXml<Person>(string.Format("<person>{0}</person>"' shareReader.ReadInnerXml())); " is 122.
Complex Conditional,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,GetConnections,The conditional expression  "profileFields.Contains(ProfileField.Associations) ||                  profileFields.Contains(ProfileField.Connections) ||                  profileFields.Contains(ProfileField.Honors) ||                  profileFields.Contains(ProfileField.ProposalComments) ||                  profileFields.Contains(ProfileField.Specialties) ||                  profileFields.Contains(ProfileField.Summary) ||                  profileFields.Contains(ProfileField.RelationToViewerDistance) ||                  profileFields.Contains(ProfileField.RelationToViewerNumberOfRelatedConnections) ||                  profileFields.Contains(ProfileField.RelationToViewerRelatedConnections)"  is complex.
Complex Conditional,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,SendRequest,The conditional expression  "wex.Status == WebExceptionStatus.ConnectFailure ||                      wex.Status == WebExceptionStatus.NameResolutionFailure ||                      wex.Status == WebExceptionStatus.SendFailure ||                      wex.Status == WebExceptionStatus.Timeout"  is complex.
Empty Catch Block,LinkedIn.Utility,Utilities,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Utility\Utilities.cs,ParseException,The method has an empty catch block.
Magic Number,LinkedIn,Crypto,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Crypto.cs,EncryptStringAES,The following statement contains a magic number: try              {                  // generate the key from the shared secret and the salt                  Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(sharedSecret' _salt);                    // Create a RijndaelManaged object                  aesAlg = new RijndaelManaged();                  aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);                    // Create a decrytor to perform the stream transform.                  ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key' aesAlg.IV);                    // Create the streams used for encryption.                  using (MemoryStream msEncrypt = new MemoryStream())                  {                      // prepend the IV                      msEncrypt.Write(BitConverter.GetBytes(aesAlg.IV.Length)' 0' sizeof(int));                      msEncrypt.Write(aesAlg.IV' 0' aesAlg.IV.Length);                      using (CryptoStream csEncrypt = new CryptoStream(msEncrypt' encryptor' CryptoStreamMode.Write))                      {                          using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))                          {                              //Write all data to the stream.                              swEncrypt.Write(plainText);                          }                      }                      outStr = Convert.ToBase64String(msEncrypt.ToArray());                  }              }              finally              {                  // Clear the RijndaelManaged object.                  if (aesAlg != null)                      aesAlg.Clear();              }
Magic Number,LinkedIn,Crypto,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Crypto.cs,DecryptStringAES,The following statement contains a magic number: try              {                  // generate the key from the shared secret and the salt                  Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(sharedSecret' _salt);                    // Create the streams used for decryption.                                  byte[] bytes = Convert.FromBase64String(cipherText);                  using (MemoryStream msDecrypt = new MemoryStream(bytes))                  {                      // Create a RijndaelManaged object                      // with the specified key and IV.                      aesAlg = new RijndaelManaged();                      aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);                      // Get the initialization vector from the encrypted stream                      aesAlg.IV = ReadByteArray(msDecrypt);                      // Create a decrytor to perform the stream transform.                      ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key' aesAlg.IV);                      using (CryptoStream csDecrypt = new CryptoStream(msDecrypt' decryptor' CryptoStreamMode.Read))                      {                          using (StreamReader srDecrypt = new StreamReader(csDecrypt))                                // Read the decrypted bytes from the decrypting stream                              // and place them in a string.                              plaintext = srDecrypt.ReadToEnd();                      }                  }              }              finally              {                  // Clear the RijndaelManaged object.                  if (aesAlg != null)                      aesAlg.Clear();              }
Magic Number,LinkedIn,LinkedInOAuthClient,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\LinkedInOAuthClient.cs,Search,The following statement contains a magic number: if (count < 1 || count > 25)              {                  throw new ArgumentOutOfRangeException("count"' Resources.SearchCountOutOfRangeMessage);              }
Magic Number,LinkedIn.Utility,Utilities,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Utility\Utilities.cs,GenerateTimestamp,The following statement contains a magic number: TimeSpan t = (dateTime - new DateTime(1970' 1' 1));
Magic Number,LinkedIn.Utility,Utilities,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\Utility\Utilities.cs,ParseException,The following statement contains a magic number: try              {                  XDocument doc = XDocument.Load(new StringReader(response));                  if (doc.Elements().FirstOrDefault().Name.LocalName == "error")                  {                      var error = Utilities.DeserializeXml<LinkedInApiError>(response);                      if (error != null)                      {                          if (error.Status == 401)                          {                              throw new LinkedInNotAuthorizedException(error.Status' error.ErrorCode' error.Message);                          }                          else                          {                              throw new LinkedInException(error.Status' error.ErrorCode' error.Message);                          }                      }                  }              }              catch (LinkedInException)              {                  // Rethrow deserialized LinkedIn Exception' ignore others                  throw;              }              catch (Exception)              {              }
Missing Default,LinkedIn.ServiceEntities,Visibility,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceEntities\Visibility.cs,ReadXml,The following switch statement is missing a default case: switch (codeString)        {          case "anyone":            this.Code = VisibilityCode.Anyone;            break;          case "connections-only":            this.Code = VisibilityCode.ConnectionsOnly;            break;        }
Missing Default,LinkedIn.ServiceEntities,ShareContent,C:\repos\deeja_LinkedInDeveloperToolkit\src\Source\LinkedIn\ServiceEntities\ShareContent.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name)            {              case IdElementName:                this.Id = reader.ReadString();                break;              case TitleElementName:                this.Title = reader.ReadString();                break;              case DescriptionElementName:                this.Description = reader.ReadString();                break;              case SubmittedUrlElementName:                this.SubmittedUrl = reader.ReadString();                break;              case ShortenedUrlElementName:                this.ShortenedUrl = reader.ReadString();                break;              case ResolvedUrlElementName:                this.ResolvedUrl = reader.ReadString();                break;              case SubmittedImageUrlElementName:                this.SubmittedImageUrl = reader.ReadString();                break;              case ThumbnailUrlElementName:                this.ThumbnailUrl = reader.ReadString();                break;            }
