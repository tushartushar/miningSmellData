Implementation smell,Namespace,Class,File,Method,Description
Long Method,Numero3.EntityFramework.Demo,Program,C:\repos\mehdime_DbContextScope\DemoApplication\Program.cs,Main,The method has 105 lines of code.
Long Statement,Numero3.EntityFramework.Demo.BusinessLogicServices,UserCreationService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserCreationService.cs,CreateListOfUsersWithIntentionalFailure,The length of the statement  "						throw new Exception(String.Format("Oh no! An error occurred when attempting to create user named '{0}' in our database."' toCreate.Name)); " is 138.
Long Statement,Numero3.EntityFramework.Demo.BusinessLogicServices,UserCreditScoreService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserCreditScoreService.cs,UpdateCreditScoreForAllUsers,The length of the statement  "				Console.WriteLine("Found {0} users in the database. Will calculate and store their credit scores in parallel."' userIds.Count); " is 127.
Long Statement,Numero3.EntityFramework.Demo.BusinessLogicServices,UserQueryService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserQueryService.cs,GetUser,The length of the statement  "					throw new ArgumentException(String.Format("Invalid value provided for userId: [{0}]. Couldn't find a user with this ID."' userId)); " is 131.
Long Statement,Numero3.EntityFramework.Demo.BusinessLogicServices,UserQueryService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserQueryService.cs,GetUserViaRepository,The length of the statement  "					throw new ArgumentException(String.Format("Invalid value provided for userId: [{0}]. Couldn't find a user with this ID."' userId)); " is 131.
Long Statement,Numero3.EntityFramework.Demo.DomainModel,User,C:\repos\mehdime_DbContextScope\DemoApplication\DomainModel\User.cs,ToString,The length of the statement  "			return String.Format("Id: {0} | Name: {1} | Email: {2} | CreditScore: {3} | WelcomeEmailSent: {4} | CreatedOn (UTC): {5}"' Id' Name' Email' CreditScore' WelcomeEmailSent' CreatedOn.ToString("dd MMM yyyy - HH:mm:ss")); " is 217.
Long Statement,Numero3.EntityFramework.Demo,Program,C:\repos\mehdime_DbContextScope\DemoApplication\Program.cs,Main,The length of the statement  "				Console.WriteLine("This demo application will create a database named DbContextScopeDemo in the default SQL Server instance on localhost. Edit the connection string in UserManagementDbContext if you'd like to create it somewhere else."); " is 237.
Long Statement,Numero3.EntityFramework.Demo,Program,C:\repos\mehdime_DbContextScope\DemoApplication\Program.cs,Main,The length of the statement  "				Console.WriteLine("Creating 2 new users called Julie and Marc in an atomic transaction. Will make the persistence of the second user fail intentionally in order to test the atomicity of the transaction..."); " is 207.
Long Statement,Numero3.EntityFramework.Demo,Program,C:\repos\mehdime_DbContextScope\DemoApplication\Program.cs,Main,The length of the statement  "				Console.WriteLine("Found {0} persisted users. If this number is 0' we're all good. If this number is not 0' we have a big problem."' maybeCreatedUsers.Count()); " is 160.
Long Statement,Numero3.EntityFramework.Demo,Program,C:\repos\mehdime_DbContextScope\DemoApplication\Program.cs,Main,The length of the statement  "				// We're going to block on the async task here as we don't have a choice. No risk of deadlocking in any case as console apps " is 124.
Long Statement,Numero3.EntityFramework.Demo,Program,C:\repos\mehdime_DbContextScope\DemoApplication\Program.cs,Main,The length of the statement  "				//-- Demo of disabling the DbContextScope nesting behaviour in order to force the persistence of changes made to entities " is 121.
Magic Number,Numero3.EntityFramework.Demo.BusinessLogicServices,UserCreditScoreService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserCreditScoreService.cs,UpdateCreditScore,The following statement contains a magic number: using (var dbContextScope = _dbContextScopeFactory.Create())  			{  				var dbContext = dbContextScope.DbContexts.Get<UserManagementDbContext>();  				var user = dbContext.Users.Find(userId);  				if (user == null)  					throw new ArgumentException(String.Format("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId));    				// Simulate the calculation of a credit score taking some time  				var random = new Random(Thread.CurrentThread.ManagedThreadId);  				Thread.Sleep(random.Next(300' 1000));    				user.CreditScore = random.Next(1' 100);  				dbContextScope.SaveChanges();  			}
Magic Number,Numero3.EntityFramework.Demo.BusinessLogicServices,UserCreditScoreService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserCreditScoreService.cs,UpdateCreditScore,The following statement contains a magic number: using (var dbContextScope = _dbContextScopeFactory.Create())  			{  				var dbContext = dbContextScope.DbContexts.Get<UserManagementDbContext>();  				var user = dbContext.Users.Find(userId);  				if (user == null)  					throw new ArgumentException(String.Format("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId));    				// Simulate the calculation of a credit score taking some time  				var random = new Random(Thread.CurrentThread.ManagedThreadId);  				Thread.Sleep(random.Next(300' 1000));    				user.CreditScore = random.Next(1' 100);  				dbContextScope.SaveChanges();  			}
Magic Number,Numero3.EntityFramework.Demo.BusinessLogicServices,UserCreditScoreService,C:\repos\mehdime_DbContextScope\DemoApplication\BusinessLogicServices\UserCreditScoreService.cs,UpdateCreditScore,The following statement contains a magic number: using (var dbContextScope = _dbContextScopeFactory.Create())  			{  				var dbContext = dbContextScope.DbContexts.Get<UserManagementDbContext>();  				var user = dbContext.Users.Find(userId);  				if (user == null)  					throw new ArgumentException(String.Format("Invalid userId provided: {0}. Couldn't find a User with this ID."' userId));    				// Simulate the calculation of a credit score taking some time  				var random = new Random(Thread.CurrentThread.ManagedThreadId);  				Thread.Sleep(random.Next(300' 1000));    				user.CreditScore = random.Next(1' 100);  				dbContextScope.SaveChanges();  			}
