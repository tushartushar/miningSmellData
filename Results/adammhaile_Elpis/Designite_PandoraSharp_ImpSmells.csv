Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC_Internal,Cyclomatic complexity of the method is 9
Complex Method,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,RefreshStations,Cyclomatic complexity of the method is 26
Complex Method,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,Cyclomatic complexity of the method is 14
Complex Method,PandoraSharp,Station,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Station.cs,Station,Cyclomatic complexity of the method is 11
Long Parameter List,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC,The method has 6 parameters.
Long Statement,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,SetAudioFormat,The length of the statement  "	if ((fmt != PAudioFormat.AACPlus && fmt != PAudioFormat.MP3 && fmt != PAudioFormat.MP3_HIFI) || (!HasSubscription && fmt == PAudioFormat.MP3_HIFI)) { " is 149.
Long Statement,PandoraSharp,Station,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Station.cs,CreateShortcut,The length of the statement  "	string targetPathWithoutExtension = Environment.GetFolderPath (Environment.SpecialFolder.Desktop) + "\\Elpis - " + Name; " is 120.
Complex Conditional,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,SetAudioFormat,The conditional expression  "(fmt != PAudioFormat.AACPlus && fmt != PAudioFormat.MP3 && fmt != PAudioFormat.MP3_HIFI) || (!HasSubscription && fmt == PAudioFormat.MP3_HIFI)"  is complex.
Empty Catch Block,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,SetTired,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Bookmark,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,BookmarkArtist,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Station,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Station.cs,AddVariety,The method has an empty catch block.
Empty Catch Block,PandoraSharp,Station,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Station.cs,Delete,The method has an empty catch block.
Magic Number,PandoraSharp,Crypto,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Crypt.cs,DecryptSyncTime,The following statement contains a magic number: try {  	return long.Parse (System.Text.RegularExpressions.Regex.Match (b.Substring (4)' "^[0-9]*").Groups [0].Value);  } catch (Exception e) {  	Log.O ("Failed to parse sync time '" + b + "': " + e + "\r\nRaw:" + s);  	throw;  }  
Magic Number,PandoraSharp,Crypto,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Crypt.cs,DecryptSyncTime,The following statement contains a magic number: return long.Parse (System.Text.RegularExpressions.Regex.Match (b.Substring (4)' "^[0-9]*").Groups [0].Value);  
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: if (hex.Length % 2 != 0)  	throw new ArgumentException ("Input must be hex values and have an even number of characters.");  
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: for (int i = 0; i < hex.Length; i += 2) {  	result += (char)Convert.ToByte (hex.Substring (i' 2)' 16);  }  
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: for (int i = 0; i < hex.Length; i += 2) {  	result += (char)Convert.ToByte (hex.Substring (i' 2)' 16);  }  
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: for (int i = 0; i < hex.Length; i += 2) {  	result += (char)Convert.ToByte (hex.Substring (i' 2)' 16);  }  
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: i += 2
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: result += (char)Convert.ToByte (hex.Substring (i' 2)' 16);  
Magic Number,PandoraSharp,StringExtensions,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Extensions.cs,FromHex,The following statement contains a magic number: result += (char)Convert.ToByte (hex.Substring (i' 2)' 16);  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC_Internal,The following statement contains a magic number: if (!isAuth) {  	int waitCount = 30;  	while (_authorizing) {  		waitCount--;  		if (waitCount >= 0)  			Thread.Sleep (1000);  		else  			break;  	}  }  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC_Internal,The following statement contains a magic number: if (!isAuth) {  	int waitCount = 30;  	while (_authorizing) {  		waitCount--;  		if (waitCount >= 0)  			Thread.Sleep (1000);  		else  			break;  	}  }  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC_Internal,The following statement contains a magic number: while (_authorizing) {  	waitCount--;  	if (waitCount >= 0)  		Thread.Sleep (1000);  	else  		break;  }  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC_Internal,The following statement contains a magic number: if (waitCount >= 0)  	Thread.Sleep (1000);  else  	break;  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC_Internal,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC,The following statement contains a magic number: if (args.Length % 2 != 0) {  	Log.O ("CallRPC: Called with an uneven number of arguments!");  	return null;  }  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC,The following statement contains a magic number: for (int i = 0; i < args.Length; i += 2) {  	if (args [i].GetType () != typeof(string) || args [i].GetType () != typeof(String)) {  		Log.O ("CallRPC: Called with an incorrect parameter type!");  		return null;  	}  	req [(string)args [i]] = JToken.FromObject (args [i + 1]);  }  
Magic Number,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,CallRPC,The following statement contains a magic number: i += 2
Magic Number,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The following statement contains a magic number: if (_pandora.AudioFormat == PAudioFormat.AACPlus) {  	if (aacUrl == string.Empty)  		throw new PandoraException (ErrorCodes.NO_AUDIO_URLS);  	AudioUrl = aacUrl;  } else {  	string[] songUrls = null;  	try {  		if (song ["additionalAudioUrl"].HasValues)  			songUrls = song ["additionalAudioUrl"].ToObject<string[]> ();  		else  			songUrls = new string[] {  				(string)song ["additionalAudioUrl"]  			};  	} catch {  	}  	if (songUrls == null || songUrls.Length == 0) {  		if (aacUrl != string.Empty)  			AudioUrl = aacUrl;  		else  			throw new PandoraException (ErrorCodes.NO_AUDIO_URLS);  	} else if (songUrls.Length == 1) {  		AudioUrl = songUrls [0];  	} else if (songUrls.Length > 1) {  		if (_pandora.AudioFormat == PAudioFormat.MP3_HIFI) {  			if (songUrls.Length >= 2)  				AudioUrl = songUrls [1];  			else  				AudioUrl = songUrls [0];  		} else//default to PAudioFormat.MP3  		 {  			AudioUrl = songUrls [0];  		}  	}  }  
Magic Number,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The following statement contains a magic number: if (songUrls == null || songUrls.Length == 0) {  	if (aacUrl != string.Empty)  		AudioUrl = aacUrl;  	else  		throw new PandoraException (ErrorCodes.NO_AUDIO_URLS);  } else if (songUrls.Length == 1) {  	AudioUrl = songUrls [0];  } else if (songUrls.Length > 1) {  	if (_pandora.AudioFormat == PAudioFormat.MP3_HIFI) {  		if (songUrls.Length >= 2)  			AudioUrl = songUrls [1];  		else  			AudioUrl = songUrls [0];  	} else//default to PAudioFormat.MP3  	 {  		AudioUrl = songUrls [0];  	}  }  
Magic Number,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The following statement contains a magic number: if (songUrls.Length == 1) {  	AudioUrl = songUrls [0];  } else if (songUrls.Length > 1) {  	if (_pandora.AudioFormat == PAudioFormat.MP3_HIFI) {  		if (songUrls.Length >= 2)  			AudioUrl = songUrls [1];  		else  			AudioUrl = songUrls [0];  	} else//default to PAudioFormat.MP3  	 {  		AudioUrl = songUrls [0];  	}  }  
Magic Number,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The following statement contains a magic number: if (songUrls.Length > 1) {  	if (_pandora.AudioFormat == PAudioFormat.MP3_HIFI) {  		if (songUrls.Length >= 2)  			AudioUrl = songUrls [1];  		else  			AudioUrl = songUrls [0];  	} else//default to PAudioFormat.MP3  	 {  		AudioUrl = songUrls [0];  	}  }  
Magic Number,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The following statement contains a magic number: if (_pandora.AudioFormat == PAudioFormat.MP3_HIFI) {  	if (songUrls.Length >= 2)  		AudioUrl = songUrls [1];  	else  		AudioUrl = songUrls [0];  } else//default to PAudioFormat.MP3   {  	AudioUrl = songUrls [0];  }  
Magic Number,PandoraSharp,Song,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Song.cs,Song,The following statement contains a magic number: if (songUrls.Length >= 2)  	AudioUrl = songUrls [1];  else  	AudioUrl = songUrls [0];  
Missing Default,PandoraSharp,Pandora,F:\newReposMay17\adammhaile_Elpis\Libs\PandoraSharp\Pandora.cs,RefreshStations,The following switch statement is missing a default case: switch (StationSortOrder) {  case SortOrder.DateDesc:  	//Stations = Stations.OrderByDescending(x => x.ID).ToList();  	Stations = Stations.OrderByDescending (x => Convert.ToInt64 (x.ID)).ToList ();  	break;  case SortOrder.DateAsc:  	//Stations = Stations.OrderBy(x => x.ID).ToList();  	Stations = Stations.OrderBy (x => Convert.ToInt64 (x.ID)).ToList ();  	break;  case SortOrder.AlphaDesc:  	Stations = Stations.OrderByDescending (x => x.Name).ToList ();  	break;  case SortOrder.AlphaAsc:  	Stations = Stations.OrderBy (x => x.Name).ToList ();  	break;  case SortOrder.RatingAsc:  	GetStationMetaData ();  	Stations = Stations.OrderBy (x => x.ThumbsUp).ToList ();  	break;  case SortOrder.RatingDesc:  	GetStationMetaData ();  	Stations = Stations.OrderByDescending (x => x.ThumbsUp).ToList ();  	break;  }  
